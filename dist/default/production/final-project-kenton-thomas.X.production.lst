

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 14:47:55 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 21/07/2023 GMT
    79                           ; 
    80                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F67K40 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	idataBANK0
   114   0055FA                     __pidataBANK0:
   115                           	callstack 0
   116                           
   117                           ;initializer for main@F14667
   118   0055FA  04                 	db	4
   119   0055FB  04                 	db	4
   120   0055FC  01                 	db	1
   121   0055FD  01                 	db	1
   122                           
   123                           ;initializer for _ambient
   124   0055FE  01F4               	dw	500
   125   000000                     _T0CON0bits	set	4053
   126   000000                     _T0CON1bits	set	4054
   127   000000                     _TRISCbits	set	3971
   128   000000                     _RC4STAbits	set	3815
   129   000000                     _SP4BRGH	set	3814
   130   000000                     _TRISBbits	set	3970
   131   000000                     _TRISAbits	set	3969
   132   000000                     _TRISEbits	set	3973
   133   000000                     _TRISGbits	set	3975
   134   000000                     _LATFbits	set	3966
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISHbits	set	3976
   137   000000                     _TRISDbits	set	3972
   138   000000                     _LATEbits	set	3965
   139   000000                     _LATGbits	set	3967
   140   000000                     _LATHbits	set	3968
   141   000000                     _SSP2CON2bits	set	3802
   142   000000                     _RX4PPS	set	3605
   143   000000                     _SSP2CLKPPS	set	3612
   144   000000                     _SSP2DATPPS	set	3613
   145   000000                     _PIE0bits	set	3625
   146   000000                     _CCPR4H	set	3873
   147   000000                     _CCPR3H	set	3877
   148   000000                     _CCPR2H	set	4006
   149   000000                     _CCPR1H	set	4010
   150   000000                     _CCP1CONbits	set	4011
   151   000000                     _CCPTMRS0bits	set	4013
   152   000000                     _T2PR	set	4028
   153   000000                     _T2CONbits	set	4029
   154   000000                     _TMR0L	set	4051
   155   000000                     _TMR0H	set	4052
   156   000000                     _INTCONbits	set	4082
   157   000000                     _CCP2CONbits	set	4007
   158   000000                     _CCP3CONbits	set	3878
   159   000000                     _ADREFbits	set	3928
   160   000000                     _LATAbits	set	3961
   161   000000                     _LATDbits	set	3964
   162   000000                     _PORTFbits	set	3982
   163   000000                     _CCP4CONbits	set	3874
   164   000000                     _PIE4bits	set	3629
   165   000000                     _PIR0bits	set	3635
   166   000000                     _RD5PPS	set	3695
   167   000000                     _ANSELDbits	set	3751
   168   000000                     _SSP2ADD	set	3798
   169   000000                     _SSP2CON1bits	set	3801
   170   000000                     _LATCbits	set	3963
   171   000000                     _SP4BRGL	set	3813
   172   000000                     _TX4STAbits	set	3816
   173   000000                     _BAUD4CONbits	set	3817
   174   000000                     _SSP2CON2	set	3802
   175   000000                     _SSP2STAT	set	3800
   176   000000                     _ANSELFbits	set	3764
   177   000000                     _SSP2BUF	set	3797
   178   000000                     _IPR0bits	set	3615
   179   000000                     _RE2PPS	set	3700
   180   000000                     _ANSELBbits	set	3738
   181   000000                     _RD6PPS	set	3696
   182   000000                     _RC0PPS	set	3682
   183   000000                     _RC7PPS	set	3689
   184   000000                     _ADPCH	set	3935
   185   000000                     _ADRESH	set	3940
   186   000000                     _ADCON0bits	set	3936
   187   000000                     _RE4PPS	set	3702
   188   000000                     _RG6PPS	set	3720
   189   000000                     _T2CLKCONbits	set	4031
   190   000000                     _T2HLTbits	set	4030
   191                           
   192                           ; #config settings
   193                           
   194                           	psect	cinit
   195   00522A                     __pcinit:
   196                           	callstack 0
   197   00522A                     start_initialization:
   198                           	callstack 0
   199   00522A                     __initialization:
   200                           	callstack 0
   201                           
   202                           ; Initialize objects allocated to BANK0 (6 bytes)
   203                           ; load TBLPTR registers with __pidataBANK0
   204   00522A  0EFA               	movlw	low __pidataBANK0
   205   00522C  6EF6               	movwf	tblptrl,c
   206   00522E  0E55               	movlw	high __pidataBANK0
   207   005230  6EF7               	movwf	tblptrh,c
   208   005232  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   209   005234  6EF8               	movwf	tblptru,c
   210   005236  EE00  F0F6         	lfsr	0,__pdataBANK0
   211   00523A  EE10 F006          	lfsr	1,6
   212   00523E                     copy_data0:
   213   00523E  0009               	tblrd		*+
   214   005240  CFF5 FFEE          	movff	tablat,postinc0
   215   005244  50E5               	movf	postdec1,w,c
   216   005246  50E1               	movf	fsr1l,w,c
   217   005248  E1FA               	bnz	copy_data0
   218                           
   219                           ; Clear objects allocated to BANK2 (142 bytes)
   220   00524A  EE02  F000         	lfsr	0,__pbssBANK2
   221   00524E  0E8E               	movlw	142
   222   005250                     clear_0:
   223   005250  6AEE               	clrf	postinc0,c
   224   005252  06E8               	decf	wreg,f,c
   225   005254  E1FD               	bnz	clear_0
   226                           
   227                           ; Clear objects allocated to BANK1 (40 bytes)
   228   005256  EE01  F0D8         	lfsr	0,__pbssBANK1
   229   00525A  0E28               	movlw	40
   230   00525C                     clear_1:
   231   00525C  6AEE               	clrf	postinc0,c
   232   00525E  06E8               	decf	wreg,f,c
   233   005260  E1FD               	bnz	clear_1
   234                           
   235                           ; Clear objects allocated to BANK0 (62 bytes)
   236   005262  EE00  F0B8         	lfsr	0,__pbssBANK0
   237   005266  0E3E               	movlw	62
   238   005268                     clear_2:
   239   005268  6AEE               	clrf	postinc0,c
   240   00526A  06E8               	decf	wreg,f,c
   241   00526C  E1FD               	bnz	clear_2
   242                           
   243                           ; Clear objects allocated to COMRAM (4 bytes)
   244   00526E  6A4E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   245   005270  6A4D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   246   005272  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   247   005274  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   248   005276                     end_of_initialization:
   249                           	callstack 0
   250   005276                     __end_of__initialization:
   251                           	callstack 0
   252   005276  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   253   005278  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   254   00527A  0100               	movlb	0
   255   00527C  EFFF  F014         	goto	_main	;jump to C main() function
   256                           
   257                           	psect	bssCOMRAM
   258   00004B                     __pbssCOMRAM:
   259                           	callstack 0
   260   00004B                     _TxBufReadCnt:
   261                           	callstack 0
   262   00004B                     	ds	1
   263   00004C                     _TxBufWriteCnt:
   264                           	callstack 0
   265   00004C                     	ds	1
   266   00004D                     _RxBufReadCnt:
   267                           	callstack 0
   268   00004D                     	ds	1
   269   00004E                     _RxBufWriteCnt:
   270                           	callstack 0
   271   00004E                     	ds	1
   272                           
   273                           	psect	bssBANK0
   274   0000B8                     __pbssBANK0:
   275                           	callstack 0
   276   0000B8                     	ds	40
   277   0000E0                     _EUSART4RXbuf:
   278                           	callstack 0
   279   0000E0                     	ds	20
   280   0000F4                     _lost:
   281                           	callstack 0
   282   0000F4                     	ds	1
   283   0000F5                     _brightnessChange:
   284                           	callstack 0
   285   0000F5                     	ds	1
   286                           
   287                           	psect	dataBANK0
   288   0000F6                     __pdataBANK0:
   289                           	callstack 0
   290   0000F6                     main@F14667:
   291                           	callstack 0
   292   0000F6                     	ds	4
   293   0000FA                     _ambient:
   294                           	callstack 0
   295   0000FA                     	ds	2
   296                           
   297                           	psect	bssBANK1
   298   0001D8                     __pbssBANK1:
   299                           	callstack 0
   300   0001D8                     	ds	40
   301                           
   302                           	psect	bssBANK2
   303   000200                     __pbssBANK2:
   304                           	callstack 0
   305   000200                     	ds	82
   306   000252                     _EUSART4TXbuf:
   307                           	callstack 0
   308   000252                     	ds	60
   309                           
   310                           	psect	cstackBANK1
   311   000100                     __pcstackBANK1:
   312                           	callstack 0
   313   000100                     main@straightTime:
   314                           	callstack 0
   315                           
   316                           ; 82 bytes @ 0x0
   317   000100                     	ds	82
   318   000152                     main@moveSequence:
   319                           	callstack 0
   320                           
   321                           ; 40 bytes @ 0x52
   322   000152                     	ds	40
   323   00017A                     main@wall:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x7A
   327   00017A                     	ds	1
   328   00017B                     main@ambientNew:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x7B
   332   00017B                     	ds	2
   333   00017D                     main@reverseDuration:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x7D
   337   00017D                     	ds	2
   338   00017F                     main@red:
   339                           	callstack 0
   340                           
   341                           ; 6 bytes @ 0x7F
   342   00017F                     	ds	6
   343   000185                     main@green:
   344                           	callstack 0
   345                           
   346                           ; 6 bytes @ 0x85
   347   000185                     	ds	6
   348   00018B                     main@blue:
   349                           	callstack 0
   350                           
   351                           ; 6 bytes @ 0x8B
   352   00018B                     	ds	6
   353   000191                     main@yellow:
   354                           	callstack 0
   355                           
   356                           ; 6 bytes @ 0x91
   357   000191                     	ds	6
   358   000197                     main@pink:
   359                           	callstack 0
   360                           
   361                           ; 6 bytes @ 0x97
   362   000197                     	ds	6
   363   00019D                     main@orange:
   364                           	callstack 0
   365                           
   366                           ; 6 bytes @ 0x9D
   367   00019D                     	ds	6
   368   0001A3                     main@lightblue:
   369                           	callstack 0
   370                           
   371                           ; 6 bytes @ 0xA3
   372   0001A3                     	ds	6
   373   0001A9                     main@white:
   374                           	callstack 0
   375                           
   376                           ; 6 bytes @ 0xA9
   377   0001A9                     	ds	6
   378   0001AF                     main@turnSpeed:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0xAF
   382   0001AF                     	ds	1
   383   0001B0                     main@turnRamp:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0xB0
   387   0001B0                     	ds	1
   388   0001B1                     main@straightSpeed:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0xB1
   392   0001B1                     	ds	1
   393   0001B2                     main@color:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0xB2
   397   0001B2                     	ds	1
   398   0001B3                     main@curMove:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0xB3
   402   0001B3                     	ds	1
   403   0001B4                     main@straightRamp:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0xB4
   407   0001B4                     	ds	1
   408   0001B5                     main@turnDuration:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0xB5
   412   0001B5                     	ds	1
   413   0001B6                     main@HSV:
   414                           	callstack 0
   415                           
   416                           ; 6 bytes @ 0xB6
   417   0001B6                     	ds	6
   418   0001BC                     main@RGBC:
   419                           	callstack 0
   420                           
   421                           ; 8 bytes @ 0xBC
   422   0001BC                     	ds	8
   423   0001C4                     main@motorR:
   424                           	callstack 0
   425                           
   426                           ; 10 bytes @ 0xC4
   427   0001C4                     	ds	10
   428   0001CE                     main@motorL:
   429                           	callstack 0
   430                           
   431                           ; 10 bytes @ 0xCE
   432   0001CE                     	ds	10
   433                           
   434                           	psect	cstackBANK0
   435   000060                     __pcstackBANK0:
   436                           	callstack 0
   437   000060                     ??_color_detect:
   438   000060                     move@mL:
   439                           	callstack 0
   440   000060                     _rgb_2_hsv$3590:
   441                           	callstack 0
   442                           
   443                           ; 4 bytes @ 0x0
   444   000060                     	ds	2
   445   000062                     move@mR:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x2
   449   000062                     	ds	2
   450   000064                     move@color:
   451                           	callstack 0
   452   000064                     rgb_2_hsv@cmin:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x4
   456   000064                     	ds	1
   457   000065                     move@moveSequence:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x5
   461   000065                     	ds	1
   462   000066                     _rgb_2_hsv$3588:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x6
   466   000066                     	ds	1
   467   000067                     move@straightTime:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x7
   471   000067                     	ds	1
   472   000068                     _rgb_2_hsv$3589:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x8
   476   000068                     	ds	1
   477   000069                     move@curMove:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x9
   481   000069                     	ds	1
   482   00006A                     move@straightSpeed:
   483                           	callstack 0
   484   00006A                     rgb_2_hsv@r:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0xA
   488   00006A                     	ds	1
   489   00006B                     move@reverseDuration:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0xB
   493   00006B                     	ds	1
   494   00006C                     rgb_2_hsv@cmax:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0xC
   498   00006C                     	ds	1
   499   00006D                     move@straightRamp:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0xD
   503   00006D                     	ds	1
   504   00006E                     move@turnSpeed:
   505                           	callstack 0
   506   00006E                     rgb_2_hsv@diff:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0xE
   510   00006E                     	ds	1
   511   00006F                     move@turnDuration:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0xF
   515   00006F                     	ds	1
   516   000070                     move@turnRamp:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x10
   520   000070                     	ds	2
   521   000072                     rgb_2_hsv@g:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x12
   525   000072                     	ds	2
   526   000074                     rgb_2_hsv@b:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x14
   530   000074                     	ds	2
   531   000076                     color_calibration@RGBC:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x16
   535   000076                     	ds	2
   536   000078                     color_calibration@HSV:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x18
   540   000078                     	ds	2
   541   00007A                     color_calibration@red:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x1A
   545   00007A                     	ds	2
   546   00007C                     color_calibration@green:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x1C
   550   00007C                     	ds	2
   551   00007E                     color_calibration@blue:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x1E
   555   00007E                     	ds	2
   556   000080                     color_calibration@yellow:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x20
   560   000080                     	ds	2
   561   000082                     color_calibration@pink:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x22
   565   000082                     	ds	2
   566   000084                     color_calibration@orange:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x24
   570   000084                     	ds	2
   571   000086                     color_calibration@lightblue:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x26
   575   000086                     	ds	2
   576   000088                     color_calibration@white:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x28
   580   000088                     	ds	2
   581   00008A                     ??_main:
   582                           
   583                           ; 1 bytes @ 0x2A
   584   00008A                     	ds	2
   585   00008C                     main@buf:
   586                           	callstack 0
   587                           
   588                           ; 40 bytes @ 0x2C
   589   00008C                     	ds	40
   590   0000B4                     main@testSequence:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x54
   594   0000B4                     	ds	4
   595                           
   596                           	psect	cstackCOMRAM
   597   000001                     __pcstackCOMRAM:
   598                           	callstack 0
   599   000001                     ??i2_I2C_2_Master_Idle:
   600   000001                     ?i2___lwdiv:
   601                           	callstack 0
   602   000001                     i2___lwdiv@dividend:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x0
   606   000001                     	ds	1
   607   000002                     i2I2C_2_Master_Write@data_byte:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x1
   611   000002                     	ds	1
   612   000003                     i2color_writetoaddr@value:
   613                           	callstack 0
   614   000003                     i2___lwdiv@divisor:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x2
   618   000003                     	ds	1
   619   000004                     i2color_writetoaddr@address:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x3
   623   000004                     	ds	1
   624   000005                     i2___lwdiv@quotient:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x4
   628   000005                     	ds	2
   629   000007                     i2___lwdiv@counter:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x6
   633   000007                     	ds	1
   634   000008                     ??i2_color_clear_init_interrupts:
   635                           
   636                           ; 1 bytes @ 0x7
   637   000008                     	ds	1
   638   000009                     i2color_clear_init_interrupts@high_threshold:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x8
   642   000009                     	ds	2
   643   00000B                     i2color_clear_init_interrupts@low_threshold:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0xA
   647   00000B                     	ds	2
   648   00000D                     ??_LowISR:
   649                           
   650                           ; 1 bytes @ 0xC
   651   00000D                     	ds	3
   652   000010                     ??_I2C_2_Master_Idle:
   653   000010                     ?_get16bitTMR0val:
   654                           	callstack 0
   655   000010                     ?_min:
   656                           	callstack 0
   657   000010                     ?_max:
   658                           	callstack 0
   659   000010                     ?___wmul:
   660                           	callstack 0
   661   000010                     ?___awdiv:
   662                           	callstack 0
   663   000010                     ?___lmul:
   664                           	callstack 0
   665   000010                     white_Light@state:
   666                           	callstack 0
   667   000010                     ADC_getval@tmpval:
   668                           	callstack 0
   669   000010                     max@a:
   670                           	callstack 0
   671   000010                     min@a:
   672                           	callstack 0
   673   000010                     initDCmotorsPWM@PWMperiod:
   674                           	callstack 0
   675   000010                     ___wmul@multiplier:
   676                           	callstack 0
   677   000010                     ___awdiv@dividend:
   678                           	callstack 0
   679   000010                     ___lmul@multiplier:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0xF
   683   000010                     	ds	1
   684   000011                     ??_I2C_2_Master_Read:
   685   000011                     I2C_2_Master_Write@data_byte:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x10
   689   000011                     	ds	1
   690   000012                     ??_get16bitTMR0val:
   691   000012                     color_writetoaddr@value:
   692                           	callstack 0
   693   000012                     I2C_2_Master_Read@ack:
   694                           	callstack 0
   695   000012                     max@b:
   696                           	callstack 0
   697   000012                     min@b:
   698                           	callstack 0
   699   000012                     ___wmul@multiplicand:
   700                           	callstack 0
   701   000012                     ___awdiv@divisor:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x11
   705   000012                     	ds	1
   706   000013                     color_writetoaddr@address:
   707                           	callstack 0
   708   000013                     I2C_2_Master_Read@tmp:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x12
   712   000013                     	ds	1
   713   000014                     ___awdiv@counter:
   714                           	callstack 0
   715   000014                     color_read@RGBC:
   716                           	callstack 0
   717   000014                     get16bitTMR0val@timer_low:
   718                           	callstack 0
   719   000014                     ___wmul@product:
   720                           	callstack 0
   721   000014                     ___lmul@multiplicand:
   722                           	callstack 0
   723   000014                     color_detect@HSV:
   724                           	callstack 0
   725                           
   726                           ; 6 bytes @ 0x13
   727   000014                     	ds	1
   728   000015                     ___awdiv@sign:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x14
   732   000015                     	ds	1
   733   000016                     ??_color_read:
   734   000016                     ?___lwdiv:
   735                           	callstack 0
   736   000016                     get16bitTMR0val@timer_high:
   737                           	callstack 0
   738   000016                     ___awdiv@quotient:
   739                           	callstack 0
   740   000016                     ___lwdiv@dividend:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x15
   744   000016                     	ds	2
   745   000018                     batteryLevel@batteryVoltage:
   746                           	callstack 0
   747   000018                     get16bitTMR0val@timer_val:
   748                           	callstack 0
   749   000018                     ___lwdiv@divisor:
   750                           	callstack 0
   751   000018                     ___lmul@product:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x17
   755   000018                     	ds	1
   756   000019                     batteryLevel@batteryQuarter:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x18
   760   000019                     	ds	1
   761   00001A                     ___lwdiv@quotient:
   762                           	callstack 0
   763   00001A                     color_detect@red:
   764                           	callstack 0
   765                           
   766                           ; 6 bytes @ 0x19
   767   00001A                     	ds	2
   768   00001C                     ?___lldiv:
   769                           	callstack 0
   770   00001C                     ?___aldiv:
   771                           	callstack 0
   772   00001C                     ___lwdiv@counter:
   773                           	callstack 0
   774   00001C                     ___lldiv@dividend:
   775                           	callstack 0
   776   00001C                     ___aldiv@dividend:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x1B
   780   00001C                     	ds	1
   781   00001D                     ??_color_clear_init_interrupts:
   782   00001D                     setMotorPWM@m:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x1C
   786   00001D                     	ds	1
   787   00001E                     color_clear_init_interrupts@high_threshold:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x1D
   791   00001E                     	ds	1
   792   00001F                     ??_setMotorPWM:
   793                           
   794                           ; 1 bytes @ 0x1E
   795   00001F                     	ds	1
   796   000020                     color_clear_init_interrupts@low_threshold:
   797                           	callstack 0
   798   000020                     ___lldiv@divisor:
   799                           	callstack 0
   800   000020                     ___aldiv@divisor:
   801                           	callstack 0
   802   000020                     color_detect@green:
   803                           	callstack 0
   804                           
   805                           ; 6 bytes @ 0x1F
   806   000020                     	ds	1
   807   000021                     setMotorPWM@posDuty:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x20
   811   000021                     	ds	1
   812   000022                     ??_color_click_init:
   813   000022                     setMotorPWM@negDuty:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x21
   817   000022                     	ds	1
   818   000023                     stop@mL:
   819                           	callstack 0
   820   000023                     turnLeft@mL:
   821                           	callstack 0
   822   000023                     turnRight@mL:
   823                           	callstack 0
   824   000023                     fullSpeedAhead@mL:
   825                           	callstack 0
   826   000023                     reverseOneSquare@mL:
   827                           	callstack 0
   828   000023                     wallAdjust@mL:
   829                           	callstack 0
   830   000023                     reverseWallAdjust@mL:
   831                           	callstack 0
   832   000023                     reverseShort@mL:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x22
   836   000023                     	ds	1
   837   000024                     ___aldiv@counter:
   838                           	callstack 0
   839   000024                     ___lldiv@quotient:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x23
   843   000024                     	ds	1
   844   000025                     ___aldiv@sign:
   845                           	callstack 0
   846   000025                     stop@mR:
   847                           	callstack 0
   848   000025                     turnLeft@mR:
   849                           	callstack 0
   850   000025                     turnRight@mR:
   851                           	callstack 0
   852   000025                     fullSpeedAhead@mR:
   853                           	callstack 0
   854   000025                     reverseOneSquare@mR:
   855                           	callstack 0
   856   000025                     wallAdjust@mR:
   857                           	callstack 0
   858   000025                     reverseWallAdjust@mR:
   859                           	callstack 0
   860   000025                     reverseShort@mR:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x24
   864   000025                     	ds	1
   865   000026                     ___aldiv@quotient:
   866                           	callstack 0
   867   000026                     color_detect@blue:
   868                           	callstack 0
   869                           
   870                           ; 6 bytes @ 0x25
   871   000026                     	ds	1
   872   000027                     stop@straightRamp:
   873                           	callstack 0
   874   000027                     turnLeft@turnSpeed:
   875                           	callstack 0
   876   000027                     turnRight@turnSpeed:
   877                           	callstack 0
   878   000027                     fullSpeedAhead@straightSpeed:
   879                           	callstack 0
   880   000027                     reverseOneSquare@straightSpeed:
   881                           	callstack 0
   882   000027                     wallAdjust@straightSpeed:
   883                           	callstack 0
   884   000027                     reverseWallAdjust@straightSpeed:
   885                           	callstack 0
   886   000027                     reverseShort@straightSpeed:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x26
   890   000027                     	ds	1
   891   000028                     ??_stop:
   892   000028                     turnLeft@turnDuration:
   893                           	callstack 0
   894   000028                     turnRight@turnDuration:
   895                           	callstack 0
   896   000028                     fullSpeedAhead@straightRamp:
   897                           	callstack 0
   898   000028                     wallAdjust@straightRamp:
   899                           	callstack 0
   900   000028                     reverseWallAdjust@straightRamp:
   901                           	callstack 0
   902   000028                     reverseShort@straightRamp:
   903                           	callstack 0
   904   000028                     ___lldiv@counter:
   905                           	callstack 0
   906   000028                     reverseOneSquare@reverseDuration:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x27
   910   000028                     	ds	1
   911   000029                     ??_fullSpeedAhead:
   912   000029                     ??_wallAdjust:
   913   000029                     ??_reverseShort:
   914   000029                     ??_reverseWallAdjust:
   915   000029                     turnLeft@turnRamp:
   916                           	callstack 0
   917   000029                     turnRight@turnRamp:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x28
   921   000029                     	ds	1
   922   00002A                     ??_turnRight:
   923   00002A                     ??_turnLeft:
   924   00002A                     reverseOneSquare@straightRamp:
   925                           	callstack 0
   926   00002A                     rgb_2_hsv@RGBC:
   927                           	callstack 0
   928                           
   929                           ; 8 bytes @ 0x29
   930   00002A                     	ds	1
   931   00002B                     ??_reverseOneSquare:
   932   00002B                     stop@i:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x2A
   936   00002B                     	ds	1
   937   00002C                     wallAdjust@adjustDuration:
   938                           	callstack 0
   939   00002C                     reverseWallAdjust@reverseAdjustDuration:
   940                           	callstack 0
   941   00002C                     reverseShort@shortReverseDuration:
   942                           	callstack 0
   943   00002C                     fullSpeedAhead@i:
   944                           	callstack 0
   945   00002C                     color_detect@yellow:
   946                           	callstack 0
   947                           
   948                           ; 6 bytes @ 0x2B
   949   00002C                     	ds	1
   950   00002D                     wallAdjust@wallReverseDuration:
   951                           	callstack 0
   952   00002D                     reverseWallAdjust@reverseWallSpeed:
   953                           	callstack 0
   954   00002D                     stop@cur_power:
   955                           	callstack 0
   956   00002D                     turnLeft@i:
   957                           	callstack 0
   958   00002D                     turnRight@i:
   959                           	callstack 0
   960   00002D                     reverseShort@i:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x2C
   964   00002D                     	ds	1
   965   00002E                     wallAdjust@wallSpeed:
   966                           	callstack 0
   967   00002E                     fullSpeedAhead@cur_power:
   968                           	callstack 0
   969   00002E                     reverseOneSquare@i:
   970                           	callstack 0
   971   00002E                     reverseWallAdjust@i:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x2D
   975   00002E                     	ds	1
   976   00002F                     turnLeft@cur_power:
   977                           	callstack 0
   978   00002F                     turnRight@cur_power:
   979                           	callstack 0
   980   00002F                     wallAdjust@i:
   981                           	callstack 0
   982   00002F                     reverseShort@cur_power:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x2E
   986   00002F                     	ds	1
   987   000030                     reverseOneSquare@cur_power:
   988                           	callstack 0
   989   000030                     reverseWallAdjust@cur_power:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x2F
   993   000030                     	ds	1
   994   000031                     wallAdjust@cur_power:
   995                           	callstack 0
   996   000031                     calibration@mL:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x30
  1000   000031                     	ds	1
  1001   000032                     rgb_2_hsv@HSV:
  1002                           	callstack 0
  1003   000032                     returnHome@mL:
  1004                           	callstack 0
  1005   000032                     lostReturnHome@mL:
  1006                           	callstack 0
  1007   000032                     color_detect@pink:
  1008                           	callstack 0
  1009                           
  1010                           ; 6 bytes @ 0x31
  1011   000032                     	ds	1
  1012   000033                     calibration@mR:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x32
  1016   000033                     	ds	1
  1017   000034                     ??_rgb_2_hsv:
  1018   000034                     returnHome@mR:
  1019                           	callstack 0
  1020   000034                     lostReturnHome@mR:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x33
  1024   000034                     	ds	1
  1025   000035                     calibration@turnSpeed:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x34
  1029   000035                     	ds	1
  1030   000036                     returnHome@moveSequence:
  1031                           	callstack 0
  1032   000036                     lostReturnHome@moveSequence:
  1033                           	callstack 0
  1034   000036                     calibration@turnDuration:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x35
  1038   000036                     	ds	2
  1039   000038                     calibration@turnRamp:
  1040                           	callstack 0
  1041   000038                     returnHome@straightTime:
  1042                           	callstack 0
  1043   000038                     lostReturnHome@straightTime:
  1044                           	callstack 0
  1045   000038                     color_detect@orange:
  1046                           	callstack 0
  1047                           
  1048                           ; 6 bytes @ 0x37
  1049   000038                     	ds	1
  1050   000039                     ??_calibration:
  1051                           
  1052                           ; 1 bytes @ 0x38
  1053   000039                     	ds	1
  1054   00003A                     returnHome@curMove:
  1055                           	callstack 0
  1056   00003A                     lostReturnHome@curMove:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x39
  1060   00003A                     	ds	1
  1061   00003B                     returnHome@straightSpeed:
  1062                           	callstack 0
  1063   00003B                     lostReturnHome@straightSpeed:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x3A
  1067   00003B                     	ds	1
  1068   00003C                     returnHome@reverseDuration:
  1069                           	callstack 0
  1070   00003C                     lostReturnHome@reverseDuration:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x3B
  1074   00003C                     	ds	2
  1075   00003E                     returnHome@straightRamp:
  1076                           	callstack 0
  1077   00003E                     lostReturnHome@straightRamp:
  1078                           	callstack 0
  1079   00003E                     color_detect@lightblue:
  1080                           	callstack 0
  1081                           
  1082                           ; 6 bytes @ 0x3D
  1083   00003E                     	ds	1
  1084   00003F                     returnHome@turnSpeed:
  1085                           	callstack 0
  1086   00003F                     lostReturnHome@turnSpeed:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x3E
  1090   00003F                     	ds	1
  1091   000040                     ??_color_calibration:
  1092   000040                     returnHome@turnDuration:
  1093                           	callstack 0
  1094   000040                     lostReturnHome@turnDuration:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x3F
  1098   000040                     	ds	1
  1099   000041                     returnHome@turnRamp:
  1100                           	callstack 0
  1101   000041                     lostReturnHome@turnRamp:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x40
  1105   000041                     	ds	1
  1106   000042                     ??_lostReturnHome:
  1107   000042                     ??_returnHome:
  1108                           
  1109                           ; 1 bytes @ 0x41
  1110   000042                     	ds	2
  1111   000044                     color_detect@white:
  1112                           	callstack 0
  1113                           
  1114                           ; 6 bytes @ 0x43
  1115   000044                     	ds	2
  1116   000046                     lostReturnHome@i:
  1117                           	callstack 0
  1118                           
  1119                           ; 1 bytes @ 0x45
  1120   000046                     	ds	2
  1121   000048                     returnHome@i:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x47
  1125   000048                     	ds	1
  1126   000049                     ??_move:
  1127                           
  1128                           ; 1 bytes @ 0x48
  1129   000049                     	ds	1
  1130   00004A                     color_detect@color:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x49
  1134   00004A                     	ds	1
  1135                           
  1136 ;;
  1137 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1138 ;;
  1139 ;; *************** function _main *****************
  1140 ;; Defined at:
  1141 ;;		line 28 in file "main.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  straightTime   82    0[BANK1 ] unsigned int [41]
  1146 ;;  moveSequence   40   82[BANK1 ] unsigned char [40]
  1147 ;;  buf            40   44[BANK0 ] unsigned char [40]
  1148 ;;  motorL         10  206[BANK1 ] struct DC_motor
  1149 ;;  motorR         10  196[BANK1 ] struct DC_motor
  1150 ;;  RGBC            8  188[BANK1 ] struct RGBC_val
  1151 ;;  RGBC_n          8    0        struct RGBC_val
  1152 ;;  HSV             6  182[BANK1 ] struct HSV_val
  1153 ;;  white           6  169[BANK1 ] struct HSV_calib
  1154 ;;  lightblue       6  163[BANK1 ] struct HSV_calib
  1155 ;;  orange          6  157[BANK1 ] struct HSV_calib
  1156 ;;  pink            6  151[BANK1 ] struct HSV_calib
  1157 ;;  yellow          6  145[BANK1 ] struct HSV_calib
  1158 ;;  blue            6  139[BANK1 ] struct HSV_calib
  1159 ;;  green           6  133[BANK1 ] struct HSV_calib
  1160 ;;  red             6  127[BANK1 ] struct HSV_calib
  1161 ;;  testSequence    4   84[BANK0 ] unsigned char [4]
  1162 ;;  PWMcycle        2    0        unsigned int 
  1163 ;;  reverseDurat    2  125[BANK1 ] unsigned int 
  1164 ;;  ambientNew      2  123[BANK1 ] unsigned int 
  1165 ;;  turnDuration    1  181[BANK1 ] unsigned char 
  1166 ;;  straightRamp    1  180[BANK1 ] unsigned char 
  1167 ;;  curMove         1  179[BANK1 ] unsigned char 
  1168 ;;  color           1  178[BANK1 ] unsigned char 
  1169 ;;  straightSpee    1  177[BANK1 ] unsigned char 
  1170 ;;  turnRamp        1  176[BANK1 ] unsigned char 
  1171 ;;  turnSpeed       1  175[BANK1 ] unsigned char 
  1172 ;;  wall            1  122[BANK1 ] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1183 ;;      Locals:         0      44     216       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1184 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;      Totals:         0      46     216       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1186 ;;Total ram usage:      262 bytes
  1187 ;; Hardware stack levels required when called: 11
  1188 ;; This function calls:
  1189 ;;		_Buggy_init
  1190 ;;		_Interrupts_init
  1191 ;;		_Timer0_init
  1192 ;;		_batteryLevel
  1193 ;;		_calibration
  1194 ;;		_color_calibration
  1195 ;;		_color_clear_init_interrupts
  1196 ;;		_color_click_init
  1197 ;;		_color_detect
  1198 ;;		_color_read
  1199 ;;		_fullSpeedAhead
  1200 ;;		_get16bitTMR0val
  1201 ;;		_initDCmotorsPWM
  1202 ;;		_initUSART4
  1203 ;;		_lostReturnHome
  1204 ;;		_move
  1205 ;;		_resetTimer
  1206 ;;		_rgb_2_hsv
  1207 ;;		_stop
  1208 ;;		_wallAdjust
  1209 ;;		_white_Light
  1210 ;; This function is called by:
  1211 ;;		Startup code after reset
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text0
  1216   0029FE                     __ptext0:
  1217                           	callstack 0
  1218   0029FE                     _main:
  1219                           	callstack 20
  1220   0029FE                     
  1221                           ;main.c: 30:     char buf[40] = {0};
  1222   0029FE  EE20  F08C         	lfsr	2,main@buf
  1223   002A02  0E27               	movlw	39
  1224   002A04                     u3681:
  1225   002A04  6ADE               	clrf	postinc2,c
  1226   002A06  06E8               	decf	wreg,f,c
  1227   002A08  E2FD               	bc	u3681
  1228   002A0A                     
  1229                           ;main.c: 33:     unsigned int ambientNew;;main.c: 34:     char wall = 0;
  1230   002A0A  0E00               	movlw	0
  1231   002A0C  0101               	movlb	1	; () banked
  1232   002A0E  6F7A               	movwf	main@wall& (0+255),b
  1233   002A10                     
  1234                           ; BSR set to: 1
  1235                           ;main.c: 35:     unsigned char color = 0;
  1236   002A10  0E00               	movlw	0
  1237   002A12  6FB2               	movwf	main@color& (0+255),b
  1238   002A14                     
  1239                           ; BSR set to: 1
  1240                           ;main.c: 36:     unsigned char moveSequence[40] = {0};
  1241   002A14  EE21  F052         	lfsr	2,main@moveSequence
  1242   002A18  0E27               	movlw	39
  1243   002A1A                     u3691:
  1244   002A1A  6ADE               	clrf	postinc2,c
  1245   002A1C  06E8               	decf	wreg,f,c
  1246   002A1E  E2FD               	bc	u3691
  1247   002A20                     
  1248                           ; BSR set to: 1
  1249                           ;main.c: 37:     unsigned int straightTime[41] = {0};
  1250   002A20  EE21  F000         	lfsr	2,main@straightTime
  1251   002A24  0E51               	movlw	81
  1252   002A26                     u3701:
  1253   002A26  6ADE               	clrf	postinc2,c
  1254   002A28  06E8               	decf	wreg,f,c
  1255   002A2A  E2FD               	bc	u3701
  1256   002A2C                     
  1257                           ; BSR set to: 1
  1258                           ;main.c: 38:     char curMove = 0;
  1259   002A2C  0E00               	movlw	0
  1260   002A2E  6FB3               	movwf	main@curMove& (0+255),b
  1261   002A30                     
  1262                           ; BSR set to: 1
  1263                           ;main.c: 40:     unsigned char testSequence[4] = {4,4,1,1,8};
  1264   002A30  C0F6  F0B4         	movff	main@F14667,main@testSequence
  1265   002A34  C0F7  F0B5         	movff	main@F14667+1,main@testSequence+1
  1266   002A38  C0F8  F0B6         	movff	main@F14667+2,main@testSequence+2
  1267   002A3C  C0F9  F0B7         	movff	main@F14667+3,main@testSequence+3
  1268   002A40                     
  1269                           ; BSR set to: 1
  1270                           ;main.c: 43:     struct RGBC_val RGBC, RGBC_n;;main.c: 44:     struct HSV_val HSV;;main.
      +                          c: 45:     struct DC_motor motorL, motorR;;main.c: 48:     Buggy_init();
  1271   002A40  ECA4  F029         	call	_Buggy_init	;wreg free
  1272   002A44                     
  1273                           ;main.c: 49:     color_click_init();
  1274   002A44  EC88  F029         	call	_color_click_init	;wreg free
  1275   002A48                     
  1276                           ;main.c: 50:     initUSART4();
  1277   002A48  ECA2  F02A         	call	_initUSART4	;wreg free
  1278   002A4C                     
  1279                           ;main.c: 51:     initDCmotorsPWM(PWMcycle);
  1280   002A4C  0E00               	movlw	0
  1281   002A4E  6E11               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1282   002A50  0EC7               	movlw	199
  1283   002A52  6E10               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1284   002A54  EC24  F028         	call	_initDCmotorsPWM	;wreg free
  1285   002A58                     
  1286                           ;main.c: 53:     motorL.power=0;
  1287   002A58  0E00               	movlw	0
  1288   002A5A  0101               	movlb	1	; () banked
  1289   002A5C  6FCE               	movwf	main@motorL& (0+255),b
  1290   002A5E                     
  1291                           ; BSR set to: 1
  1292                           ;main.c: 54:     motorL.direction=1;
  1293   002A5E  0E01               	movlw	1
  1294   002A60  6FCF               	movwf	(main@motorL+1)& (0+255),b
  1295   002A62                     
  1296                           ; BSR set to: 1
  1297                           ;main.c: 55:     motorL.brakemode=1;
  1298   002A62  0E01               	movlw	1
  1299   002A64  6FD0               	movwf	(main@motorL+2)& (0+255),b
  1300   002A66                     
  1301                           ; BSR set to: 1
  1302                           ;main.c: 56:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1303   002A66  0EAA               	movlw	170
  1304   002A68  6FD3               	movwf	(main@motorL+5)& (0+255),b
  1305   002A6A  0E0F               	movlw	15
  1306   002A6C  6FD4               	movwf	(main@motorL+6)& (0+255),b
  1307   002A6E                     
  1308                           ; BSR set to: 1
  1309                           ;main.c: 57:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1310   002A6E  0EA6               	movlw	166
  1311   002A70  6FD5               	movwf	(main@motorL+7)& (0+255),b
  1312   002A72  0E0F               	movlw	15
  1313   002A74  6FD6               	movwf	(main@motorL+8)& (0+255),b
  1314   002A76                     
  1315                           ; BSR set to: 1
  1316                           ;main.c: 58:     motorL.PWMperiod=PWMcycle;
  1317   002A76  0E00               	movlw	0
  1318   002A78  6FD2               	movwf	(main@motorL+4)& (0+255),b
  1319   002A7A  0EC7               	movlw	199
  1320   002A7C  6FD1               	movwf	(main@motorL+3)& (0+255),b
  1321   002A7E                     
  1322                           ; BSR set to: 1
  1323                           ;main.c: 59:     motorL.compensation=1;
  1324   002A7E  0E01               	movlw	1
  1325   002A80  6FD7               	movwf	(main@motorL+9)& (0+255),b
  1326   002A82                     
  1327                           ; BSR set to: 1
  1328                           ;main.c: 61:     motorR.power=0;
  1329   002A82  0E00               	movlw	0
  1330   002A84  6FC4               	movwf	main@motorR& (0+255),b
  1331   002A86                     
  1332                           ; BSR set to: 1
  1333                           ;main.c: 62:     motorR.direction=1;
  1334   002A86  0E01               	movlw	1
  1335   002A88  6FC5               	movwf	(main@motorR+1)& (0+255),b
  1336   002A8A                     
  1337                           ; BSR set to: 1
  1338                           ;main.c: 63:     motorR.brakemode=1;
  1339   002A8A  0E01               	movlw	1
  1340   002A8C  6FC6               	movwf	(main@motorR+2)& (0+255),b
  1341   002A8E                     
  1342                           ; BSR set to: 1
  1343                           ;main.c: 64:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1344   002A8E  0E25               	movlw	37
  1345   002A90  6FC9               	movwf	(main@motorR+5)& (0+255),b
  1346   002A92  0E0F               	movlw	15
  1347   002A94  6FCA               	movwf	(main@motorR+6)& (0+255),b
  1348   002A96                     
  1349                           ; BSR set to: 1
  1350                           ;main.c: 65:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1351   002A96  0E21               	movlw	33
  1352   002A98  6FCB               	movwf	(main@motorR+7)& (0+255),b
  1353   002A9A  0E0F               	movlw	15
  1354   002A9C  6FCC               	movwf	(main@motorR+8)& (0+255),b
  1355   002A9E                     
  1356                           ; BSR set to: 1
  1357                           ;main.c: 66:     motorR.PWMperiod=PWMcycle;
  1358   002A9E  0E00               	movlw	0
  1359   002AA0  6FC8               	movwf	(main@motorR+4)& (0+255),b
  1360   002AA2  0EC7               	movlw	199
  1361   002AA4  6FC7               	movwf	(main@motorR+3)& (0+255),b
  1362   002AA6                     
  1363                           ; BSR set to: 1
  1364                           ;main.c: 67:     motorR.compensation=0;
  1365   002AA6  0E00               	movlw	0
  1366   002AA8  6FCD               	movwf	(main@motorR+9)& (0+255),b
  1367   002AAA                     
  1368                           ; BSR set to: 1
  1369                           ;main.c: 70:     char straightSpeed=20;
  1370   002AAA  0E14               	movlw	20
  1371   002AAC  6FB1               	movwf	main@straightSpeed& (0+255),b
  1372   002AAE                     
  1373                           ; BSR set to: 1
  1374                           ;main.c: 71:     unsigned char straightRamp=2;
  1375   002AAE  0E02               	movlw	2
  1376   002AB0  6FB4               	movwf	main@straightRamp& (0+255),b
  1377   002AB2                     
  1378                           ; BSR set to: 1
  1379                           ;main.c: 73:     unsigned int reverseDuration=800;
  1380   002AB2  0E03               	movlw	3
  1381   002AB4  6F7E               	movwf	(main@reverseDuration+1)& (0+255),b
  1382   002AB6  0E20               	movlw	32
  1383   002AB8  6F7D               	movwf	main@reverseDuration& (0+255),b
  1384   002ABA                     
  1385                           ; BSR set to: 1
  1386                           ;main.c: 75:     char turnSpeed=40;
  1387   002ABA  0E28               	movlw	40
  1388   002ABC  6FAF               	movwf	main@turnSpeed& (0+255),b
  1389   002ABE                     
  1390                           ; BSR set to: 1
  1391                           ;main.c: 76:     unsigned char turnDuration=10;
  1392   002ABE  0E0A               	movlw	10
  1393   002AC0  6FB5               	movwf	main@turnDuration& (0+255),b
  1394   002AC2                     
  1395                           ; BSR set to: 1
  1396                           ;main.c: 77:     unsigned char turnRamp=1;
  1397   002AC2  0E01               	movlw	1
  1398   002AC4  6FB0               	movwf	main@turnRamp& (0+255),b
  1399   002AC6                     
  1400                           ; BSR set to: 1
  1401                           ;main.c: 80:     batteryLevel();
  1402   002AC6  EC40  F029         	call	_batteryLevel	;wreg free
  1403   002ACA                     l91:
  1404   002ACA  B48E               	btfsc	142,2,c	;volatile
  1405   002ACC  EF6A  F015         	goto	u3711
  1406   002AD0  EF6C  F015         	goto	u3710
  1407   002AD4                     u3711:
  1408   002AD4  EF65  F015         	goto	l91
  1409   002AD8                     u3710:
  1410   002AD8                     
  1411                           ;main.c: 93:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1412   002AD8  9680               	bcf	128,3,c	;volatile
  1413   002ADA  9E7C               	bcf	124,7,c	;volatile
  1414                           
  1415                           ;main.c: 96:     LATHbits.LATH1=LATDbits.LATD3=1;
  1416   002ADC  867C               	bsf	124,3,c	;volatile
  1417   002ADE  8280               	bsf	128,1,c	;volatile
  1418   002AE0                     
  1419                           ;main.c: 97:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1420   002AE0  0E29               	movlw	41
  1421   002AE2  0100               	movlb	0	; () banked
  1422   002AE4  6F8B               	movwf	(??_main+1)& (0+255),b
  1423   002AE6  0E96               	movlw	150
  1424   002AE8  6F8A               	movwf	??_main& (0+255),b
  1425   002AEA  0E7F               	movlw	127
  1426   002AEC                     u3887:
  1427   002AEC  2EE8               	decfsz	wreg,f,c
  1428   002AEE  D7FE               	bra	u3887
  1429   002AF0  2F8A               	decfsz	??_main& (0+255),f,b
  1430   002AF2  D7FC               	bra	u3887
  1431   002AF4  2F8B               	decfsz	(??_main+1)& (0+255),f,b
  1432   002AF6  D7FA               	bra	u3887
  1433   002AF8                     
  1434                           ;main.c: 100:     struct HSV_calib red, green, blue, yellow, pink, orange, lightblue, wh
      +                          ite;;main.c: 101:     color_calibration(&RGBC, &HSV, &red, &green, &blue, &yellow, &pink
      +                          , &orange, &lightblue, &white);
  1435   002AF8  0EBC               	movlw	low main@RGBC
  1436   002AFA  0100               	movlb	0	; () banked
  1437   002AFC  6F76               	movwf	color_calibration@RGBC& (0+255),b
  1438   002AFE  0E01               	movlw	high main@RGBC
  1439   002B00  6F77               	movwf	(color_calibration@RGBC+1)& (0+255),b
  1440   002B02  0EB6               	movlw	low main@HSV
  1441   002B04  6F78               	movwf	color_calibration@HSV& (0+255),b
  1442   002B06  0E01               	movlw	high main@HSV
  1443   002B08  6F79               	movwf	(color_calibration@HSV+1)& (0+255),b
  1444   002B0A  0E7F               	movlw	low main@red
  1445   002B0C  6F7A               	movwf	color_calibration@red& (0+255),b
  1446   002B0E  0E01               	movlw	high main@red
  1447   002B10  6F7B               	movwf	(color_calibration@red+1)& (0+255),b
  1448   002B12  0E85               	movlw	low main@green
  1449   002B14  6F7C               	movwf	color_calibration@green& (0+255),b
  1450   002B16  0E01               	movlw	high main@green
  1451   002B18  6F7D               	movwf	(color_calibration@green+1)& (0+255),b
  1452   002B1A  0E8B               	movlw	low main@blue
  1453   002B1C  6F7E               	movwf	color_calibration@blue& (0+255),b
  1454   002B1E  0E01               	movlw	high main@blue
  1455   002B20  6F7F               	movwf	(color_calibration@blue+1)& (0+255),b
  1456   002B22  0E91               	movlw	low main@yellow
  1457   002B24  6F80               	movwf	color_calibration@yellow& (0+255),b
  1458   002B26  0E01               	movlw	high main@yellow
  1459   002B28  6F81               	movwf	(color_calibration@yellow+1)& (0+255),b
  1460   002B2A  0E97               	movlw	low main@pink
  1461   002B2C  6F82               	movwf	color_calibration@pink& (0+255),b
  1462   002B2E  0E01               	movlw	high main@pink
  1463   002B30  6F83               	movwf	(color_calibration@pink+1)& (0+255),b
  1464   002B32  0E9D               	movlw	low main@orange
  1465   002B34  6F84               	movwf	color_calibration@orange& (0+255),b
  1466   002B36  0E01               	movlw	high main@orange
  1467   002B38  6F85               	movwf	(color_calibration@orange+1)& (0+255),b
  1468   002B3A  0EA3               	movlw	low main@lightblue
  1469   002B3C  6F86               	movwf	color_calibration@lightblue& (0+255),b
  1470   002B3E  0E01               	movlw	high main@lightblue
  1471   002B40  6F87               	movwf	(color_calibration@lightblue+1)& (0+255),b
  1472   002B42  0EA9               	movlw	low main@white
  1473   002B44  6F88               	movwf	color_calibration@white& (0+255),b
  1474   002B46  0E01               	movlw	high main@white
  1475   002B48  6F89               	movwf	(color_calibration@white+1)& (0+255),b
  1476   002B4A  EC21  F012         	call	_color_calibration	;wreg free
  1477   002B4E                     
  1478                           ;main.c: 104:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1479   002B4E  0ECE               	movlw	low main@motorL
  1480   002B50  6E31               	movwf	calibration@mL^0,c
  1481   002B52  0E01               	movlw	high main@motorL
  1482   002B54  6E32               	movwf	(calibration@mL+1)^0,c
  1483   002B56  0EC4               	movlw	low main@motorR
  1484   002B58  6E33               	movwf	calibration@mR^0,c
  1485   002B5A  0E01               	movlw	high main@motorR
  1486   002B5C  6E34               	movwf	(calibration@mR+1)^0,c
  1487   002B5E  0E28               	movlw	40
  1488   002B60  6E35               	movwf	calibration@turnSpeed^0,c
  1489   002B62  0EB5               	movlw	low main@turnDuration
  1490   002B64  6E36               	movwf	calibration@turnDuration^0,c
  1491   002B66  0E01               	movlw	high main@turnDuration
  1492   002B68  6E37               	movwf	(calibration@turnDuration+1)^0,c
  1493   002B6A  0E01               	movlw	1
  1494   002B6C  6E38               	movwf	calibration@turnRamp^0,c
  1495   002B6E  EC98  F01D         	call	_calibration	;wreg free
  1496   002B72                     
  1497                           ;main.c: 114:     white_Light(1);
  1498   002B72  0E01               	movlw	1
  1499   002B74  EC4F  F02A         	call	_white_Light
  1500   002B78                     
  1501                           ;main.c: 115:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1502   002B78  0E52               	movlw	82
  1503   002B7A  0100               	movlb	0	; () banked
  1504   002B7C  6F8B               	movwf	(??_main+1)& (0+255),b
  1505   002B7E  0E2B               	movlw	43
  1506   002B80  6F8A               	movwf	??_main& (0+255),b
  1507   002B82  0E00               	movlw	0
  1508   002B84                     u3897:
  1509   002B84  2EE8               	decfsz	wreg,f,c
  1510   002B86  D7FE               	bra	u3897
  1511   002B88  2F8A               	decfsz	??_main& (0+255),f,b
  1512   002B8A  D7FC               	bra	u3897
  1513   002B8C  2F8B               	decfsz	(??_main+1)& (0+255),f,b
  1514   002B8E  D7FA               	bra	u3897
  1515   002B90  0000               	nop	
  1516   002B92                     
  1517                           ;main.c: 118:     Timer0_init();
  1518   002B92  EC82  F02A         	call	_Timer0_init	;wreg free
  1519   002B96                     
  1520                           ;main.c: 119:     resetTimer();
  1521   002B96  ECDF  F02A         	call	_resetTimer	;wreg free
  1522   002B9A                     
  1523                           ;main.c: 120:     Interrupts_init();
  1524   002B9A  ECCA  F02A         	call	_Interrupts_init	;wreg free
  1525   002B9E                     
  1526                           ;main.c: 123:     color_read(&RGBC);
  1527   002B9E  0EBC               	movlw	low main@RGBC
  1528   002BA0  6E14               	movwf	color_read@RGBC^0,c
  1529   002BA2  0E01               	movlw	high main@RGBC
  1530   002BA4  6E15               	movwf	(color_read@RGBC+1)^0,c
  1531   002BA6  ECD7  F020         	call	_color_read	;wreg free
  1532   002BAA                     
  1533                           ;main.c: 124:     ambient=RGBC.C;
  1534   002BAA  C1C2  F0FA         	movff	main@RGBC+6,_ambient
  1535   002BAE  C1C3  F0FB         	movff	main@RGBC+7,_ambient+1
  1536   002BB2                     
  1537                           ;main.c: 125:     color_clear_init_interrupts();
  1538   002BB2  EC2C  F027         	call	_color_clear_init_interrupts	;wreg free
  1539   002BB6                     
  1540                           ;main.c: 126:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1541   002BB6  0ED0               	movlw	208
  1542   002BB8  0100               	movlb	0	; () banked
  1543   002BBA  6F8A               	movwf	??_main& (0+255),b
  1544   002BBC  0EC9               	movlw	201
  1545   002BBE                     u3907:
  1546   002BBE  2EE8               	decfsz	wreg,f,c
  1547   002BC0  D7FE               	bra	u3907
  1548   002BC2  2F8A               	decfsz	??_main& (0+255),f,b
  1549   002BC4  D7FC               	bra	u3907
  1550   002BC6  D000               	nop2	
  1551   002BC8                     
  1552                           ;main.c: 129:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1553   002BC8  0ECE               	movlw	low main@motorL
  1554   002BCA  6E23               	movwf	fullSpeedAhead@mL^0,c
  1555   002BCC  0E01               	movlw	high main@motorL
  1556   002BCE  6E24               	movwf	(fullSpeedAhead@mL+1)^0,c
  1557   002BD0  0EC4               	movlw	low main@motorR
  1558   002BD2  6E25               	movwf	fullSpeedAhead@mR^0,c
  1559   002BD4  0E01               	movlw	high main@motorR
  1560   002BD6  6E26               	movwf	(fullSpeedAhead@mR+1)^0,c
  1561   002BD8  0E14               	movlw	20
  1562   002BDA  6E27               	movwf	fullSpeedAhead@straightSpeed^0,c
  1563   002BDC  0E02               	movlw	2
  1564   002BDE  6E28               	movwf	fullSpeedAhead@straightRamp^0,c
  1565   002BE0  EC57  F026         	call	_fullSpeedAhead	;wreg free
  1566   002BE4                     
  1567                           ;main.c: 130:     resetTimer();
  1568   002BE4  ECDF  F02A         	call	_resetTimer	;wreg free
  1569   002BE8                     
  1570                           ;main.c: 133:     brightnessChange=0;
  1571   002BE8  0E00               	movlw	0
  1572   002BEA  0100               	movlb	0	; () banked
  1573   002BEC  6FF5               	movwf	_brightnessChange& (0+255),b
  1574   002BEE                     
  1575                           ; BSR set to: 0
  1576                           ;main.c: 134:     lost=0;
  1577   002BEE  0E00               	movlw	0
  1578   002BF0  6FF4               	movwf	_lost& (0+255),b
  1579   002BF2                     l4814:
  1580                           
  1581                           ;main.c: 137:         if (brightnessChange == 1) {
  1582   002BF2  0100               	movlb	0	; () banked
  1583   002BF4  05F5               	decf	_brightnessChange& (0+255),w,b
  1584   002BF6  A4D8               	btfss	status,2,c
  1585   002BF8  EF00  F016         	goto	u3721
  1586   002BFC  EF02  F016         	goto	u3720
  1587   002C00                     u3721:
  1588   002C00  EF35  F016         	goto	l4832
  1589   002C04                     u3720:
  1590   002C04                     
  1591                           ; BSR set to: 0
  1592                           ;main.c: 140:             color_read(&RGBC);
  1593   002C04  0EBC               	movlw	low main@RGBC
  1594   002C06  6E14               	movwf	color_read@RGBC^0,c
  1595   002C08  0E01               	movlw	high main@RGBC
  1596   002C0A  6E15               	movwf	(color_read@RGBC+1)^0,c
  1597   002C0C  ECD7  F020         	call	_color_read	;wreg free
  1598   002C10                     
  1599                           ;main.c: 141:             ambientNew=RGBC.C;
  1600   002C10  C1C2  F17B         	movff	main@RGBC+6,main@ambientNew
  1601   002C14  C1C3  F17C         	movff	main@RGBC+7,main@ambientNew+1
  1602   002C18                     
  1603                           ;main.c: 143:             if (ambientNew <= ambient) {
  1604   002C18  0101               	movlb	1	; () banked
  1605   002C1A  517B               	movf	main@ambientNew& (0+255),w,b
  1606   002C1C  0100               	movlb	0	; () banked
  1607   002C1E  5DFA               	subwf	_ambient& (0+255),w,b
  1608   002C20  0101               	movlb	1	; () banked
  1609   002C22  517C               	movf	(main@ambientNew+1)& (0+255),w,b
  1610   002C24  0100               	movlb	0	; () banked
  1611   002C26  59FB               	subwfb	(_ambient+1)& (0+255),w,b
  1612   002C28  A0D8               	btfss	status,0,c
  1613   002C2A  EF19  F016         	goto	u3731
  1614   002C2E  EF1B  F016         	goto	u3730
  1615   002C32                     u3731:
  1616   002C32  EF2F  F016         	goto	l4830
  1617   002C36                     u3730:
  1618   002C36                     
  1619                           ; BSR set to: 0
  1620                           ;main.c: 144:                 ambient = ambientNew;
  1621   002C36  C17B  F0FA         	movff	main@ambientNew,_ambient
  1622   002C3A  C17C  F0FB         	movff	main@ambientNew+1,_ambient+1
  1623   002C3E                     
  1624                           ; BSR set to: 0
  1625                           ;main.c: 145:                 color_clear_init_interrupts();
  1626   002C3E  EC2C  F027         	call	_color_clear_init_interrupts	;wreg free
  1627   002C42                     
  1628                           ;main.c: 146:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  1629   002C42  0ED0               	movlw	208
  1630   002C44  0100               	movlb	0	; () banked
  1631   002C46  6F8A               	movwf	??_main& (0+255),b
  1632   002C48  0EC9               	movlw	201
  1633   002C4A                     u3917:
  1634   002C4A  2EE8               	decfsz	wreg,f,c
  1635   002C4C  D7FE               	bra	u3917
  1636   002C4E  2F8A               	decfsz	??_main& (0+255),f,b
  1637   002C50  D7FC               	bra	u3917
  1638   002C52  D000               	nop2	
  1639   002C54                     
  1640                           ;main.c: 147:                 brightnessChange = 0;
  1641   002C54  0E00               	movlw	0
  1642   002C56  0100               	movlb	0	; () banked
  1643   002C58  6FF5               	movwf	_brightnessChange& (0+255),b
  1644                           
  1645                           ;main.c: 148:             }
  1646   002C5A  EF35  F016         	goto	l4832
  1647   002C5E                     l4830:
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;main.c: 151:                 wall = 1;
  1651   002C5E  0E01               	movlw	1
  1652   002C60  0101               	movlb	1	; () banked
  1653   002C62  6F7A               	movwf	main@wall& (0+255),b
  1654                           
  1655                           ;main.c: 152:                 brightnessChange = 0;
  1656   002C64  0E00               	movlw	0
  1657   002C66  0100               	movlb	0	; () banked
  1658   002C68  6FF5               	movwf	_brightnessChange& (0+255),b
  1659   002C6A                     l4832:
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;main.c: 156:         if (wall == 1) {
  1663   002C6A  0101               	movlb	1	; () banked
  1664   002C6C  057A               	decf	main@wall& (0+255),w,b
  1665   002C6E  A4D8               	btfss	status,2,c
  1666   002C70  EF3C  F016         	goto	u3741
  1667   002C74  EF3E  F016         	goto	u3740
  1668   002C78                     u3741:
  1669   002C78  EF18  F017         	goto	l4864
  1670   002C7C                     u3740:
  1671   002C7C                     
  1672                           ; BSR set to: 1
  1673                           ;main.c: 158:             PIE0bits.INT0IE=0;
  1674   002C7C  010E               	movlb	14	; () banked
  1675   002C7E  9129               	bcf	41,0,b	;volatile
  1676   002C80                     
  1677                           ; BSR set to: 14
  1678                           ;main.c: 159:             straightTime[curMove] = get16bitTMR0val();
  1679   002C80  EC00  F02A         	call	_get16bitTMR0val	;wreg free
  1680   002C84  0101               	movlb	1	; () banked
  1681   002C86  51B3               	movf	main@curMove& (0+255),w,b
  1682   002C88  0D02               	mullw	2
  1683   002C8A  0E00               	movlw	low main@straightTime
  1684   002C8C  24F3               	addwf	243,w,c
  1685   002C8E  6ED9               	movwf	fsr2l,c
  1686   002C90  0E01               	movlw	high main@straightTime
  1687   002C92  20F4               	addwfc	prodh,w,c
  1688   002C94  6EDA               	movwf	fsr2h,c
  1689   002C96  C010  FFDE         	movff	?_get16bitTMR0val,postinc2
  1690   002C9A  C011  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1691                           
  1692                           ;main.c: 162:             stop(&motorL, &motorR, straightRamp);
  1693   002C9E  0ECE               	movlw	low main@motorL
  1694   002CA0  6E23               	movwf	stop@mL^0,c
  1695   002CA2  0E01               	movlw	high main@motorL
  1696   002CA4  6E24               	movwf	(stop@mL+1)^0,c
  1697   002CA6  0EC4               	movlw	low main@motorR
  1698   002CA8  6E25               	movwf	stop@mR^0,c
  1699   002CAA  0E01               	movlw	high main@motorR
  1700   002CAC  6E26               	movwf	(stop@mR+1)^0,c
  1701   002CAE  C1B4  F027         	movff	main@straightRamp,stop@straightRamp
  1702   002CB2  ECD3  F025         	call	_stop	;wreg free
  1703                           
  1704                           ;main.c: 163:             wallAdjust(&motorL, &motorR, straightSpeed, straightRamp);
  1705   002CB6  0ECE               	movlw	low main@motorL
  1706   002CB8  6E23               	movwf	wallAdjust@mL^0,c
  1707   002CBA  0E01               	movlw	high main@motorL
  1708   002CBC  6E24               	movwf	(wallAdjust@mL+1)^0,c
  1709   002CBE  0EC4               	movlw	low main@motorR
  1710   002CC0  6E25               	movwf	wallAdjust@mR^0,c
  1711   002CC2  0E01               	movlw	high main@motorR
  1712   002CC4  6E26               	movwf	(wallAdjust@mR+1)^0,c
  1713   002CC6  C1B1  F027         	movff	main@straightSpeed,wallAdjust@straightSpeed
  1714   002CCA  C1B4  F028         	movff	main@straightRamp,wallAdjust@straightRamp
  1715   002CCE  ECDB  F019         	call	_wallAdjust	;wreg free
  1716   002CD2                     
  1717                           ;main.c: 164:             color_read(&RGBC);
  1718   002CD2  0EBC               	movlw	low main@RGBC
  1719   002CD4  6E14               	movwf	color_read@RGBC^0,c
  1720   002CD6  0E01               	movlw	high main@RGBC
  1721   002CD8  6E15               	movwf	(color_read@RGBC+1)^0,c
  1722   002CDA  ECD7  F020         	call	_color_read	;wreg free
  1723   002CDE                     
  1724                           ;main.c: 166:             rgb_2_hsv(RGBC, &HSV);
  1725   002CDE  EE21  F0BC         	lfsr	2,main@RGBC
  1726   002CE2  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  1727   002CE6  0E07               	movlw	7
  1728   002CE8                     u3751:
  1729   002CE8  CFDB FFEB          	movff	plusw2,plusw0
  1730   002CEC  06E8               	decf	wreg,f,c
  1731   002CEE  E2FC               	bc	u3751
  1732   002CF0  0EB6               	movlw	low main@HSV
  1733   002CF2  6E32               	movwf	rgb_2_hsv@HSV^0,c
  1734   002CF4  0E01               	movlw	high main@HSV
  1735   002CF6  6E33               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1736   002CF8  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  1737   002CFC                     
  1738                           ;main.c: 167:             color = color_detect(HSV, red, green, blue, yellow, pink, oran
      +                          ge, lightblue, white);
  1739   002CFC  EE21  F0B6         	lfsr	2,main@HSV
  1740   002D00  EE00  F014         	lfsr	0,color_detect@HSV
  1741   002D04  0E05               	movlw	5
  1742   002D06                     u3761:
  1743   002D06  CFDB FFEB          	movff	plusw2,plusw0
  1744   002D0A  06E8               	decf	wreg,f,c
  1745   002D0C  E2FC               	bc	u3761
  1746   002D0E  EE21  F07F         	lfsr	2,main@red
  1747   002D12  EE00  F01A         	lfsr	0,color_detect@red
  1748   002D16  0E05               	movlw	5
  1749   002D18                     u3771:
  1750   002D18  CFDB FFEB          	movff	plusw2,plusw0
  1751   002D1C  06E8               	decf	wreg,f,c
  1752   002D1E  E2FC               	bc	u3771
  1753   002D20  EE21  F085         	lfsr	2,main@green
  1754   002D24  EE00  F020         	lfsr	0,color_detect@green
  1755   002D28  0E05               	movlw	5
  1756   002D2A                     u3781:
  1757   002D2A  CFDB FFEB          	movff	plusw2,plusw0
  1758   002D2E  06E8               	decf	wreg,f,c
  1759   002D30  E2FC               	bc	u3781
  1760   002D32  EE21  F08B         	lfsr	2,main@blue
  1761   002D36  EE00  F026         	lfsr	0,color_detect@blue
  1762   002D3A  0E05               	movlw	5
  1763   002D3C                     u3791:
  1764   002D3C  CFDB FFEB          	movff	plusw2,plusw0
  1765   002D40  06E8               	decf	wreg,f,c
  1766   002D42  E2FC               	bc	u3791
  1767   002D44  EE21  F091         	lfsr	2,main@yellow
  1768   002D48  EE00  F02C         	lfsr	0,color_detect@yellow
  1769   002D4C  0E05               	movlw	5
  1770   002D4E                     u3801:
  1771   002D4E  CFDB FFEB          	movff	plusw2,plusw0
  1772   002D52  06E8               	decf	wreg,f,c
  1773   002D54  E2FC               	bc	u3801
  1774   002D56  EE21  F097         	lfsr	2,main@pink
  1775   002D5A  EE00  F032         	lfsr	0,color_detect@pink
  1776   002D5E  0E05               	movlw	5
  1777   002D60                     u3811:
  1778   002D60  CFDB FFEB          	movff	plusw2,plusw0
  1779   002D64  06E8               	decf	wreg,f,c
  1780   002D66  E2FC               	bc	u3811
  1781   002D68  EE21  F09D         	lfsr	2,main@orange
  1782   002D6C  EE00  F038         	lfsr	0,color_detect@orange
  1783   002D70  0E05               	movlw	5
  1784   002D72                     u3821:
  1785   002D72  CFDB FFEB          	movff	plusw2,plusw0
  1786   002D76  06E8               	decf	wreg,f,c
  1787   002D78  E2FC               	bc	u3821
  1788   002D7A  EE21  F0A3         	lfsr	2,main@lightblue
  1789   002D7E  EE00  F03E         	lfsr	0,color_detect@lightblue
  1790   002D82  0E05               	movlw	5
  1791   002D84                     u3831:
  1792   002D84  CFDB FFEB          	movff	plusw2,plusw0
  1793   002D88  06E8               	decf	wreg,f,c
  1794   002D8A  E2FC               	bc	u3831
  1795   002D8C  EE21  F0A9         	lfsr	2,main@white
  1796   002D90  EE00  F044         	lfsr	0,color_detect@white
  1797   002D94  0E05               	movlw	5
  1798   002D96                     u3841:
  1799   002D96  CFDB FFEB          	movff	plusw2,plusw0
  1800   002D9A  06E8               	decf	wreg,f,c
  1801   002D9C  E2FC               	bc	u3841
  1802   002D9E  ECC4  F01B         	call	_color_detect	;wreg free
  1803   002DA2  0101               	movlb	1	; () banked
  1804   002DA4  6FB2               	movwf	main@color& (0+255),b
  1805   002DA6                     
  1806                           ; BSR set to: 1
  1807                           ;main.c: 169:             moveSequence[curMove] = color;
  1808   002DA6  0E52               	movlw	low main@moveSequence
  1809   002DA8  25B3               	addwf	main@curMove& (0+255),w,b
  1810   002DAA  6ED9               	movwf	fsr2l,c
  1811   002DAC  6ADA               	clrf	fsr2h,c
  1812   002DAE  0E01               	movlw	high main@moveSequence
  1813   002DB0  22DA               	addwfc	fsr2h,f,c
  1814   002DB2  C1B2  FFDF         	movff	main@color,indf2
  1815   002DB6                     
  1816                           ; BSR set to: 1
  1817                           ;main.c: 172:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1818   002DB6  0ECE               	movlw	low main@motorL
  1819   002DB8  0100               	movlb	0	; () banked
  1820   002DBA  6F60               	movwf	move@mL& (0+255),b
  1821   002DBC  0E01               	movlw	high main@motorL
  1822   002DBE  6F61               	movwf	(move@mL+1)& (0+255),b
  1823   002DC0  0EC4               	movlw	low main@motorR
  1824   002DC2  6F62               	movwf	move@mR& (0+255),b
  1825   002DC4  0E01               	movlw	high main@motorR
  1826   002DC6  6F63               	movwf	(move@mR+1)& (0+255),b
  1827   002DC8  C1B2  F064         	movff	main@color,move@color
  1828   002DCC  0E52               	movlw	low main@moveSequence
  1829   002DCE  6F65               	movwf	move@moveSequence& (0+255),b
  1830   002DD0  0E01               	movlw	high main@moveSequence
  1831   002DD2  6F66               	movwf	(move@moveSequence+1)& (0+255),b
  1832   002DD4  0E00               	movlw	low main@straightTime
  1833   002DD6  6F67               	movwf	move@straightTime& (0+255),b
  1834   002DD8  0E01               	movlw	high main@straightTime
  1835   002DDA  6F68               	movwf	(move@straightTime+1)& (0+255),b
  1836   002DDC  C1B3  F069         	movff	main@curMove,move@curMove
  1837   002DE0  C1B1  F06A         	movff	main@straightSpeed,move@straightSpeed
  1838   002DE4  C17D  F06B         	movff	main@reverseDuration,move@reverseDuration
  1839   002DE8  C17E  F06C         	movff	main@reverseDuration+1,move@reverseDuration+1
  1840   002DEC  C1B4  F06D         	movff	main@straightRamp,move@straightRamp
  1841   002DF0  C1AF  F06E         	movff	main@turnSpeed,move@turnSpeed
  1842   002DF4  C1B5  F06F         	movff	main@turnDuration,move@turnDuration
  1843   002DF8  C1B0  F070         	movff	main@turnRamp,move@turnRamp
  1844   002DFC  EC01  F007         	call	_move	;wreg free
  1845   002E00                     
  1846                           ;main.c: 175:             color_read(&RGBC);
  1847   002E00  0EBC               	movlw	low main@RGBC
  1848   002E02  6E14               	movwf	color_read@RGBC^0,c
  1849   002E04  0E01               	movlw	high main@RGBC
  1850   002E06  6E15               	movwf	(color_read@RGBC+1)^0,c
  1851   002E08  ECD7  F020         	call	_color_read	;wreg free
  1852   002E0C                     
  1853                           ;main.c: 176:             ambient=RGBC.C;
  1854   002E0C  C1C2  F0FA         	movff	main@RGBC+6,_ambient
  1855   002E10  C1C3  F0FB         	movff	main@RGBC+7,_ambient+1
  1856   002E14                     
  1857                           ;main.c: 177:             color_clear_init_interrupts();
  1858   002E14  EC2C  F027         	call	_color_clear_init_interrupts	;wreg free
  1859   002E18                     
  1860                           ;main.c: 178:             brightnessChange = 0;
  1861   002E18  0E00               	movlw	0
  1862   002E1A  0100               	movlb	0	; () banked
  1863   002E1C  6FF5               	movwf	_brightnessChange& (0+255),b
  1864   002E1E                     
  1865                           ; BSR set to: 0
  1866                           ;main.c: 180:             curMove++;
  1867   002E1E  0101               	movlb	1	; () banked
  1868   002E20  2BB3               	incf	main@curMove& (0+255),f,b
  1869   002E22                     
  1870                           ; BSR set to: 1
  1871                           ;main.c: 181:             resetTimer();
  1872   002E22  ECDF  F02A         	call	_resetTimer	;wreg free
  1873   002E26                     
  1874                           ;main.c: 183:             PIE0bits.INT0IE=1;
  1875   002E26  010E               	movlb	14	; () banked
  1876   002E28  8129               	bsf	41,0,b	;volatile
  1877   002E2A                     
  1878                           ; BSR set to: 14
  1879                           ;main.c: 184:             wall = 0;
  1880   002E2A  0E00               	movlw	0
  1881   002E2C  0101               	movlb	1	; () banked
  1882   002E2E  6F7A               	movwf	main@wall& (0+255),b
  1883   002E30                     l4864:
  1884                           
  1885                           ; BSR set to: 1
  1886                           ;main.c: 188:         if (lost == 1) {
  1887   002E30  0100               	movlb	0	; () banked
  1888   002E32  05F4               	decf	_lost& (0+255),w,b
  1889   002E34  A4D8               	btfss	status,2,c
  1890   002E36  EF1F  F017         	goto	u3851
  1891   002E3A  EF21  F017         	goto	u3850
  1892   002E3E                     u3851:
  1893   002E3E  EF58  F017         	goto	l4874
  1894   002E42                     u3850:
  1895   002E42                     
  1896                           ; BSR set to: 0
  1897                           ;main.c: 189:             PIE0bits.INT0IE=0;
  1898   002E42  010E               	movlb	14	; () banked
  1899   002E44  9129               	bcf	41,0,b	;volatile
  1900   002E46                     
  1901                           ; BSR set to: 14
  1902                           ;main.c: 190:             stop(&motorL, &motorR, straightRamp);
  1903   002E46  0ECE               	movlw	low main@motorL
  1904   002E48  6E23               	movwf	stop@mL^0,c
  1905   002E4A  0E01               	movlw	high main@motorL
  1906   002E4C  6E24               	movwf	(stop@mL+1)^0,c
  1907   002E4E  0EC4               	movlw	low main@motorR
  1908   002E50  6E25               	movwf	stop@mR^0,c
  1909   002E52  0E01               	movlw	high main@motorR
  1910   002E54  6E26               	movwf	(stop@mR+1)^0,c
  1911   002E56  C1B4  F027         	movff	main@straightRamp,stop@straightRamp
  1912   002E5A  ECD3  F025         	call	_stop	;wreg free
  1913                           
  1914                           ;main.c: 191:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1915   002E5E  0ECE               	movlw	low main@motorL
  1916   002E60  6E32               	movwf	lostReturnHome@mL^0,c
  1917   002E62  0E01               	movlw	high main@motorL
  1918   002E64  6E33               	movwf	(lostReturnHome@mL+1)^0,c
  1919   002E66  0EC4               	movlw	low main@motorR
  1920   002E68  6E34               	movwf	lostReturnHome@mR^0,c
  1921   002E6A  0E01               	movlw	high main@motorR
  1922   002E6C  6E35               	movwf	(lostReturnHome@mR+1)^0,c
  1923   002E6E  0E52               	movlw	low main@moveSequence
  1924   002E70  6E36               	movwf	lostReturnHome@moveSequence^0,c
  1925   002E72  0E01               	movlw	high main@moveSequence
  1926   002E74  6E37               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1927   002E76  0E00               	movlw	low main@straightTime
  1928   002E78  6E38               	movwf	lostReturnHome@straightTime^0,c
  1929   002E7A  0E01               	movlw	high main@straightTime
  1930   002E7C  6E39               	movwf	(lostReturnHome@straightTime+1)^0,c
  1931   002E7E  C1B3  F03A         	movff	main@curMove,lostReturnHome@curMove
  1932   002E82  C1B1  F03B         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1933   002E86  C17D  F03C         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1934   002E8A  C17E  F03D         	movff	main@reverseDuration+1,lostReturnHome@reverseDuration+1
  1935   002E8E  C1B4  F03E         	movff	main@straightRamp,lostReturnHome@straightRamp
  1936   002E92  C1AF  F03F         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1937   002E96  C1B5  F040         	movff	main@turnDuration,lostReturnHome@turnDuration
  1938   002E9A  C1B0  F041         	movff	main@turnRamp,lostReturnHome@turnRamp
  1939   002E9E  ECCB  F00E         	call	_lostReturnHome	;wreg free
  1940   002EA2                     
  1941                           ;main.c: 192:             PIE0bits.INT0IE=1;
  1942   002EA2  010E               	movlb	14	; () banked
  1943   002EA4  8129               	bsf	41,0,b	;volatile
  1944   002EA6                     
  1945                           ; BSR set to: 14
  1946                           ;main.c: 193:             lost = 0;
  1947   002EA6  0E00               	movlw	0
  1948   002EA8  0100               	movlb	0	; () banked
  1949   002EAA  6FF4               	movwf	_lost& (0+255),b
  1950                           
  1951                           ;main.c: 194:             break;
  1952   002EAC  EF6B  F017         	goto	l105
  1953   002EB0                     l4874:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;main.c: 197:         if (color == 8 || color == 9) {break;}
  1957   002EB0  0E08               	movlw	8
  1958   002EB2  0101               	movlb	1	; () banked
  1959   002EB4  19B2               	xorwf	main@color& (0+255),w,b
  1960   002EB6  B4D8               	btfsc	status,2,c
  1961   002EB8  EF60  F017         	goto	u3861
  1962   002EBC  EF62  F017         	goto	u3860
  1963   002EC0                     u3861:
  1964   002EC0  EF6B  F017         	goto	l105
  1965   002EC4                     u3860:
  1966   002EC4                     
  1967                           ; BSR set to: 1
  1968   002EC4  0E09               	movlw	9
  1969   002EC6  19B2               	xorwf	main@color& (0+255),w,b
  1970   002EC8  A4D8               	btfss	status,2,c
  1971   002ECA  EF69  F017         	goto	u3871
  1972   002ECE  EF6B  F017         	goto	u3870
  1973   002ED2                     u3871:
  1974   002ED2  EFF9  F015         	goto	l4814
  1975   002ED6                     u3870:
  1976   002ED6                     l105:
  1977   002ED6  EF2C  F000         	goto	start
  1978   002EDA                     __end_of_main:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _wallAdjust *****************
  1982 ;; Defined at:
  1983 ;;		line 507 in file "dc_motor.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1986 ;;		 -> main@motorL(10), 
  1987 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1988 ;;		 -> main@motorR(10), 
  1989 ;;  straightSpee    1   38[COMRAM] unsigned char 
  1990 ;;  straightRamp    1   39[COMRAM] unsigned char 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  cur_power       2   48[COMRAM] int 
  1993 ;;  i               2   46[COMRAM] int 
  1994 ;;  wallSpeed       1   45[COMRAM] unsigned char 
  1995 ;;  wallReverseD    1   44[COMRAM] unsigned char 
  1996 ;;  adjustDurati    1   43[COMRAM] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2006 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2007 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2008 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2009 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2010 ;;Total ram usage:       16 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 8
  2013 ;; This function calls:
  2014 ;;		_setMotorPWM
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text1
  2021   0033B6                     __ptext1:
  2022                           	callstack 0
  2023   0033B6                     _wallAdjust:
  2024                           	callstack 22
  2025   0033B6                     
  2026                           ;dc_motor.c: 507: void wallAdjust(DC_motor *mL, DC_motor *mR, char straightSpeed, unsign
      +                          ed char straightRamp);dc_motor.c: 508: {;dc_motor.c: 509:     unsigned char adjustDurati
      +                          on = 120;
  2027   0033B6  0E78               	movlw	120
  2028   0033B8  6E2C               	movwf	wallAdjust@adjustDuration^0,c
  2029                           
  2030                           ;dc_motor.c: 510:     unsigned char wallReverseDuration = 20;
  2031   0033BA  0E14               	movlw	20
  2032   0033BC  6E2D               	movwf	wallAdjust@wallReverseDuration^0,c
  2033                           
  2034                           ;dc_motor.c: 511:     unsigned char wallSpeed = 40;
  2035   0033BE  0E28               	movlw	40
  2036   0033C0  6E2E               	movwf	wallAdjust@wallSpeed^0,c
  2037   0033C2                     
  2038                           ;dc_motor.c: 513:     mL->direction = 1;
  2039   0033C2  EE20 F001          	lfsr	2,1
  2040   0033C6  5023               	movf	wallAdjust@mL^0,w,c
  2041   0033C8  26D9               	addwf	fsr2l,f,c
  2042   0033CA  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2043   0033CC  22DA               	addwfc	fsr2h,f,c
  2044   0033CE  0E01               	movlw	1
  2045   0033D0  6EDF               	movwf	indf2,c
  2046   0033D2                     
  2047                           ;dc_motor.c: 514:     mR->direction = 1;
  2048   0033D2  EE20 F001          	lfsr	2,1
  2049   0033D6  5025               	movf	wallAdjust@mR^0,w,c
  2050   0033D8  26D9               	addwf	fsr2l,f,c
  2051   0033DA  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2052   0033DC  22DA               	addwfc	fsr2h,f,c
  2053   0033DE  0E01               	movlw	1
  2054   0033E0  6EDF               	movwf	indf2,c
  2055                           
  2056                           ;dc_motor.c: 515:     int i;;dc_motor.c: 516:     int cur_power;;dc_motor.c: 517:     fo
      +                          r (cur_power=1;cur_power<=wallSpeed;cur_power++) {
  2057   0033E2  0E00               	movlw	0
  2058   0033E4  6E32               	movwf	(wallAdjust@cur_power+1)^0,c
  2059   0033E6  0E01               	movlw	1
  2060   0033E8  6E31               	movwf	wallAdjust@cur_power^0,c
  2061   0033EA  EF41  F01A         	goto	l4106
  2062   0033EE                     l4092:
  2063                           
  2064                           ;dc_motor.c: 518:         mL->power = cur_power+mL->compensation;
  2065   0033EE  EE20 F009          	lfsr	2,9
  2066   0033F2  5023               	movf	wallAdjust@mL^0,w,c
  2067   0033F4  26D9               	addwf	fsr2l,f,c
  2068   0033F6  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2069   0033F8  22DA               	addwfc	fsr2h,f,c
  2070   0033FA  50DF               	movf	indf2,w,c
  2071   0033FC  2431               	addwf	wallAdjust@cur_power^0,w,c
  2072   0033FE  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2073   003402  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2074   003406  6EDF               	movwf	indf2,c
  2075                           
  2076                           ;dc_motor.c: 519:         mR->power = cur_power+mR->compensation;
  2077   003408  EE20 F009          	lfsr	2,9
  2078   00340C  5025               	movf	wallAdjust@mR^0,w,c
  2079   00340E  26D9               	addwf	fsr2l,f,c
  2080   003410  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2081   003412  22DA               	addwfc	fsr2h,f,c
  2082   003414  50DF               	movf	indf2,w,c
  2083   003416  2431               	addwf	wallAdjust@cur_power^0,w,c
  2084   003418  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2085   00341C  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2086   003420  6EDF               	movwf	indf2,c
  2087   003422                     
  2088                           ;dc_motor.c: 520:         setMotorPWM(mL);
  2089   003422  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2090   003426  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2091   00342A  EC97  F024         	call	_setMotorPWM	;wreg free
  2092   00342E                     
  2093                           ;dc_motor.c: 521:         setMotorPWM(mR);
  2094   00342E  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2095   003432  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2096   003436  EC97  F024         	call	_setMotorPWM	;wreg free
  2097   00343A                     
  2098                           ;dc_motor.c: 522:         for (i=0;i<straightRamp;i++) {
  2099   00343A  0E00               	movlw	0
  2100   00343C  6E30               	movwf	(wallAdjust@i+1)^0,c
  2101   00343E  0E00               	movlw	0
  2102   003440  6E2F               	movwf	wallAdjust@i^0,c
  2103   003442  EF2D  F01A         	goto	l694
  2104   003446                     l4100:
  2105                           
  2106                           ;dc_motor.c: 523:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2107   003446  0E68               	movlw	104
  2108   003448  6E29               	movwf	??_wallAdjust^0,c
  2109   00344A  0EE4               	movlw	228
  2110   00344C                     u3927:
  2111   00344C  2EE8               	decfsz	wreg,f,c
  2112   00344E  D7FE               	bra	u3927
  2113   003450  2E29               	decfsz	??_wallAdjust^0,f,c
  2114   003452  D7FC               	bra	u3927
  2115   003454  D000               	nop2	
  2116   003456                     
  2117                           ;dc_motor.c: 524:         }
  2118   003456  4A2F               	infsnz	wallAdjust@i^0,f,c
  2119   003458  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2120   00345A                     l694:
  2121   00345A  5028               	movf	wallAdjust@straightRamp^0,w,c
  2122   00345C  6E29               	movwf	??_wallAdjust^0,c
  2123   00345E  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2124   003460  5029               	movf	??_wallAdjust^0,w,c
  2125   003462  5C2F               	subwf	wallAdjust@i^0,w,c
  2126   003464  5030               	movf	(wallAdjust@i+1)^0,w,c
  2127   003466  0A80               	xorlw	128
  2128   003468  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2129   00346A  502A               	movf	(??_wallAdjust+1)^0,w,c
  2130   00346C  0A80               	xorlw	128
  2131   00346E  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2132   003470  A0D8               	btfss	status,0,c
  2133   003472  EF3D  F01A         	goto	u2911
  2134   003476  EF3F  F01A         	goto	u2910
  2135   00347A                     u2911:
  2136   00347A  EF23  F01A         	goto	l4100
  2137   00347E                     u2910:
  2138   00347E                     
  2139                           ;dc_motor.c: 525:     }
  2140   00347E  4A31               	infsnz	wallAdjust@cur_power^0,f,c
  2141   003480  2A32               	incf	(wallAdjust@cur_power+1)^0,f,c
  2142   003482                     l4106:
  2143   003482  502E               	movf	wallAdjust@wallSpeed^0,w,c
  2144   003484  6E29               	movwf	??_wallAdjust^0,c
  2145   003486  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2146   003488  5031               	movf	wallAdjust@cur_power^0,w,c
  2147   00348A  5C29               	subwf	??_wallAdjust^0,w,c
  2148   00348C  502A               	movf	(??_wallAdjust+1)^0,w,c
  2149   00348E  0A80               	xorlw	128
  2150   003490  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2151   003492  5032               	movf	(wallAdjust@cur_power+1)^0,w,c
  2152   003494  0A80               	xorlw	128
  2153   003496  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2154   003498  B0D8               	btfsc	status,0,c
  2155   00349A  EF51  F01A         	goto	u2921
  2156   00349E  EF53  F01A         	goto	u2920
  2157   0034A2                     u2921:
  2158   0034A2  EFF7  F019         	goto	l4092
  2159   0034A6                     u2920:
  2160   0034A6                     
  2161                           ;dc_motor.c: 527:     for (i=0;i<adjustDuration;i++) {
  2162   0034A6  0E00               	movlw	0
  2163   0034A8  6E30               	movwf	(wallAdjust@i+1)^0,c
  2164   0034AA  0E00               	movlw	0
  2165   0034AC  6E2F               	movwf	wallAdjust@i^0,c
  2166   0034AE  EF63  F01A         	goto	l698
  2167   0034B2                     l4110:
  2168                           
  2169                           ;dc_motor.c: 528:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2170   0034B2  0E68               	movlw	104
  2171   0034B4  6E29               	movwf	??_wallAdjust^0,c
  2172   0034B6  0EE4               	movlw	228
  2173   0034B8                     u3937:
  2174   0034B8  2EE8               	decfsz	wreg,f,c
  2175   0034BA  D7FE               	bra	u3937
  2176   0034BC  2E29               	decfsz	??_wallAdjust^0,f,c
  2177   0034BE  D7FC               	bra	u3937
  2178   0034C0  D000               	nop2	
  2179   0034C2                     
  2180                           ;dc_motor.c: 529:         }
  2181   0034C2  4A2F               	infsnz	wallAdjust@i^0,f,c
  2182   0034C4  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2183   0034C6                     l698:
  2184   0034C6  502C               	movf	wallAdjust@adjustDuration^0,w,c
  2185   0034C8  6E29               	movwf	??_wallAdjust^0,c
  2186   0034CA  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2187   0034CC  5029               	movf	??_wallAdjust^0,w,c
  2188   0034CE  5C2F               	subwf	wallAdjust@i^0,w,c
  2189   0034D0  5030               	movf	(wallAdjust@i+1)^0,w,c
  2190   0034D2  0A80               	xorlw	128
  2191   0034D4  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2192   0034D6  502A               	movf	(??_wallAdjust+1)^0,w,c
  2193   0034D8  0A80               	xorlw	128
  2194   0034DA  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2195   0034DC  A0D8               	btfss	status,0,c
  2196   0034DE  EF73  F01A         	goto	u2931
  2197   0034E2  EF75  F01A         	goto	u2930
  2198   0034E6                     u2931:
  2199   0034E6  EF59  F01A         	goto	l4110
  2200   0034EA                     u2930:
  2201   0034EA                     
  2202                           ;dc_motor.c: 531:     for (cur_power=wallSpeed;cur_power>=0;cur_power--) {
  2203   0034EA  C02E  F031         	movff	wallAdjust@wallSpeed,wallAdjust@cur_power
  2204   0034EE  6A32               	clrf	(wallAdjust@cur_power+1)^0,c
  2205   0034F0                     l4114:
  2206   0034F0  BE32               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2207   0034F2  EF7F  F01A         	goto	u2940
  2208   0034F6  EF7D  F01A         	goto	u2941
  2209   0034FA                     u2941:
  2210   0034FA  EF81  F01A         	goto	l4118
  2211   0034FE                     u2940:
  2212   0034FE  EFCE  F01A         	goto	l4134
  2213   003502                     l4118:
  2214                           
  2215                           ;dc_motor.c: 532:         mL->power = cur_power+mL->compensation;
  2216   003502  EE20 F009          	lfsr	2,9
  2217   003506  5023               	movf	wallAdjust@mL^0,w,c
  2218   003508  26D9               	addwf	fsr2l,f,c
  2219   00350A  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2220   00350C  22DA               	addwfc	fsr2h,f,c
  2221   00350E  50DF               	movf	indf2,w,c
  2222   003510  2431               	addwf	wallAdjust@cur_power^0,w,c
  2223   003512  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2224   003516  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2225   00351A  6EDF               	movwf	indf2,c
  2226                           
  2227                           ;dc_motor.c: 533:         mR->power = cur_power+mR->compensation;
  2228   00351C  EE20 F009          	lfsr	2,9
  2229   003520  5025               	movf	wallAdjust@mR^0,w,c
  2230   003522  26D9               	addwf	fsr2l,f,c
  2231   003524  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2232   003526  22DA               	addwfc	fsr2h,f,c
  2233   003528  50DF               	movf	indf2,w,c
  2234   00352A  2431               	addwf	wallAdjust@cur_power^0,w,c
  2235   00352C  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2236   003530  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2237   003534  6EDF               	movwf	indf2,c
  2238   003536                     
  2239                           ;dc_motor.c: 534:         setMotorPWM(mL);
  2240   003536  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2241   00353A  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2242   00353E  EC97  F024         	call	_setMotorPWM	;wreg free
  2243   003542                     
  2244                           ;dc_motor.c: 535:         setMotorPWM(mR);
  2245   003542  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2246   003546  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2247   00354A  EC97  F024         	call	_setMotorPWM	;wreg free
  2248   00354E                     
  2249                           ;dc_motor.c: 536:         for (i=0;i<straightRamp;i++) {
  2250   00354E  0E00               	movlw	0
  2251   003550  6E30               	movwf	(wallAdjust@i+1)^0,c
  2252   003552  0E00               	movlw	0
  2253   003554  6E2F               	movwf	wallAdjust@i^0,c
  2254   003556  EFB7  F01A         	goto	l703
  2255   00355A                     l4126:
  2256                           
  2257                           ;dc_motor.c: 537:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2258   00355A  0E68               	movlw	104
  2259   00355C  6E29               	movwf	??_wallAdjust^0,c
  2260   00355E  0EE4               	movlw	228
  2261   003560                     u3947:
  2262   003560  2EE8               	decfsz	wreg,f,c
  2263   003562  D7FE               	bra	u3947
  2264   003564  2E29               	decfsz	??_wallAdjust^0,f,c
  2265   003566  D7FC               	bra	u3947
  2266   003568  D000               	nop2	
  2267   00356A                     
  2268                           ;dc_motor.c: 538:         }
  2269   00356A  4A2F               	infsnz	wallAdjust@i^0,f,c
  2270   00356C  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2271   00356E                     l703:
  2272   00356E  5028               	movf	wallAdjust@straightRamp^0,w,c
  2273   003570  6E29               	movwf	??_wallAdjust^0,c
  2274   003572  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2275   003574  5029               	movf	??_wallAdjust^0,w,c
  2276   003576  5C2F               	subwf	wallAdjust@i^0,w,c
  2277   003578  5030               	movf	(wallAdjust@i+1)^0,w,c
  2278   00357A  0A80               	xorlw	128
  2279   00357C  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2280   00357E  502A               	movf	(??_wallAdjust+1)^0,w,c
  2281   003580  0A80               	xorlw	128
  2282   003582  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2283   003584  A0D8               	btfss	status,0,c
  2284   003586  EFC7  F01A         	goto	u2951
  2285   00358A  EFC9  F01A         	goto	u2950
  2286   00358E                     u2951:
  2287   00358E  EFAD  F01A         	goto	l4126
  2288   003592                     u2950:
  2289   003592                     
  2290                           ;dc_motor.c: 539:     }
  2291   003592  0631               	decf	wallAdjust@cur_power^0,f,c
  2292   003594  A0D8               	btfss	status,0,c
  2293   003596  0632               	decf	(wallAdjust@cur_power+1)^0,f,c
  2294   003598  EF78  F01A         	goto	l4114
  2295   00359C                     l4134:
  2296                           
  2297                           ;dc_motor.c: 541:     mL->direction = 0;
  2298   00359C  EE20 F001          	lfsr	2,1
  2299   0035A0  5023               	movf	wallAdjust@mL^0,w,c
  2300   0035A2  26D9               	addwf	fsr2l,f,c
  2301   0035A4  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2302   0035A6  22DA               	addwfc	fsr2h,f,c
  2303   0035A8  6ADF               	clrf	indf2,c
  2304                           
  2305                           ;dc_motor.c: 542:     mR->direction = 0;
  2306   0035AA  EE20 F001          	lfsr	2,1
  2307   0035AE  5025               	movf	wallAdjust@mR^0,w,c
  2308   0035B0  26D9               	addwf	fsr2l,f,c
  2309   0035B2  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2310   0035B4  22DA               	addwfc	fsr2h,f,c
  2311   0035B6  6ADF               	clrf	indf2,c
  2312   0035B8                     
  2313                           ;dc_motor.c: 543:     for (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  2314   0035B8  0E00               	movlw	0
  2315   0035BA  6E32               	movwf	(wallAdjust@cur_power+1)^0,c
  2316   0035BC  0E01               	movlw	1
  2317   0035BE  6E31               	movwf	wallAdjust@cur_power^0,c
  2318   0035C0  EF2C  F01B         	goto	l4152
  2319   0035C4                     l4138:
  2320                           
  2321                           ;dc_motor.c: 544:         mL->power = cur_power+mL->compensation;
  2322   0035C4  EE20 F009          	lfsr	2,9
  2323   0035C8  5023               	movf	wallAdjust@mL^0,w,c
  2324   0035CA  26D9               	addwf	fsr2l,f,c
  2325   0035CC  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2326   0035CE  22DA               	addwfc	fsr2h,f,c
  2327   0035D0  50DF               	movf	indf2,w,c
  2328   0035D2  2431               	addwf	wallAdjust@cur_power^0,w,c
  2329   0035D4  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2330   0035D8  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2331   0035DC  6EDF               	movwf	indf2,c
  2332                           
  2333                           ;dc_motor.c: 545:         mR->power = cur_power+mR->compensation;
  2334   0035DE  EE20 F009          	lfsr	2,9
  2335   0035E2  5025               	movf	wallAdjust@mR^0,w,c
  2336   0035E4  26D9               	addwf	fsr2l,f,c
  2337   0035E6  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2338   0035E8  22DA               	addwfc	fsr2h,f,c
  2339   0035EA  50DF               	movf	indf2,w,c
  2340   0035EC  2431               	addwf	wallAdjust@cur_power^0,w,c
  2341   0035EE  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2342   0035F2  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2343   0035F6  6EDF               	movwf	indf2,c
  2344   0035F8                     
  2345                           ;dc_motor.c: 546:         setMotorPWM(mL);
  2346   0035F8  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2347   0035FC  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2348   003600  EC97  F024         	call	_setMotorPWM	;wreg free
  2349   003604                     
  2350                           ;dc_motor.c: 547:         setMotorPWM(mR);
  2351   003604  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2352   003608  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2353   00360C  EC97  F024         	call	_setMotorPWM	;wreg free
  2354   003610                     
  2355                           ;dc_motor.c: 548:         for (i=0;i<straightRamp;i++) {
  2356   003610  0E00               	movlw	0
  2357   003612  6E30               	movwf	(wallAdjust@i+1)^0,c
  2358   003614  0E00               	movlw	0
  2359   003616  6E2F               	movwf	wallAdjust@i^0,c
  2360   003618  EF18  F01B         	goto	l708
  2361   00361C                     l4146:
  2362                           
  2363                           ;dc_motor.c: 549:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2364   00361C  0E68               	movlw	104
  2365   00361E  6E29               	movwf	??_wallAdjust^0,c
  2366   003620  0EE4               	movlw	228
  2367   003622                     u3957:
  2368   003622  2EE8               	decfsz	wreg,f,c
  2369   003624  D7FE               	bra	u3957
  2370   003626  2E29               	decfsz	??_wallAdjust^0,f,c
  2371   003628  D7FC               	bra	u3957
  2372   00362A  D000               	nop2	
  2373   00362C                     
  2374                           ;dc_motor.c: 550:         }
  2375   00362C  4A2F               	infsnz	wallAdjust@i^0,f,c
  2376   00362E  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2377   003630                     l708:
  2378   003630  5028               	movf	wallAdjust@straightRamp^0,w,c
  2379   003632  6E29               	movwf	??_wallAdjust^0,c
  2380   003634  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2381   003636  5029               	movf	??_wallAdjust^0,w,c
  2382   003638  5C2F               	subwf	wallAdjust@i^0,w,c
  2383   00363A  5030               	movf	(wallAdjust@i+1)^0,w,c
  2384   00363C  0A80               	xorlw	128
  2385   00363E  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2386   003640  502A               	movf	(??_wallAdjust+1)^0,w,c
  2387   003642  0A80               	xorlw	128
  2388   003644  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2389   003646  A0D8               	btfss	status,0,c
  2390   003648  EF28  F01B         	goto	u2961
  2391   00364C  EF2A  F01B         	goto	u2960
  2392   003650                     u2961:
  2393   003650  EF0E  F01B         	goto	l4146
  2394   003654                     u2960:
  2395   003654                     
  2396                           ;dc_motor.c: 551:     }
  2397   003654  4A31               	infsnz	wallAdjust@cur_power^0,f,c
  2398   003656  2A32               	incf	(wallAdjust@cur_power+1)^0,f,c
  2399   003658                     l4152:
  2400   003658  5027               	movf	wallAdjust@straightSpeed^0,w,c
  2401   00365A  6E29               	movwf	??_wallAdjust^0,c
  2402   00365C  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2403   00365E  5031               	movf	wallAdjust@cur_power^0,w,c
  2404   003660  5C29               	subwf	??_wallAdjust^0,w,c
  2405   003662  502A               	movf	(??_wallAdjust+1)^0,w,c
  2406   003664  0A80               	xorlw	128
  2407   003666  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2408   003668  5032               	movf	(wallAdjust@cur_power+1)^0,w,c
  2409   00366A  0A80               	xorlw	128
  2410   00366C  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2411   00366E  B0D8               	btfsc	status,0,c
  2412   003670  EF3C  F01B         	goto	u2971
  2413   003674  EF3E  F01B         	goto	u2970
  2414   003678                     u2971:
  2415   003678  EFE2  F01A         	goto	l4138
  2416   00367C                     u2970:
  2417   00367C                     
  2418                           ;dc_motor.c: 553:     for (i=0;i<wallReverseDuration;i++) {
  2419   00367C  0E00               	movlw	0
  2420   00367E  6E30               	movwf	(wallAdjust@i+1)^0,c
  2421   003680  0E00               	movlw	0
  2422   003682  6E2F               	movwf	wallAdjust@i^0,c
  2423   003684  EF4E  F01B         	goto	l712
  2424   003688                     l4156:
  2425                           
  2426                           ;dc_motor.c: 554:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2427   003688  0E68               	movlw	104
  2428   00368A  6E29               	movwf	??_wallAdjust^0,c
  2429   00368C  0EE4               	movlw	228
  2430   00368E                     u3967:
  2431   00368E  2EE8               	decfsz	wreg,f,c
  2432   003690  D7FE               	bra	u3967
  2433   003692  2E29               	decfsz	??_wallAdjust^0,f,c
  2434   003694  D7FC               	bra	u3967
  2435   003696  D000               	nop2	
  2436   003698                     
  2437                           ;dc_motor.c: 555:         }
  2438   003698  4A2F               	infsnz	wallAdjust@i^0,f,c
  2439   00369A  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2440   00369C                     l712:
  2441   00369C  502D               	movf	wallAdjust@wallReverseDuration^0,w,c
  2442   00369E  6E29               	movwf	??_wallAdjust^0,c
  2443   0036A0  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2444   0036A2  5029               	movf	??_wallAdjust^0,w,c
  2445   0036A4  5C2F               	subwf	wallAdjust@i^0,w,c
  2446   0036A6  5030               	movf	(wallAdjust@i+1)^0,w,c
  2447   0036A8  0A80               	xorlw	128
  2448   0036AA  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2449   0036AC  502A               	movf	(??_wallAdjust+1)^0,w,c
  2450   0036AE  0A80               	xorlw	128
  2451   0036B0  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2452   0036B2  A0D8               	btfss	status,0,c
  2453   0036B4  EF5E  F01B         	goto	u2981
  2454   0036B8  EF60  F01B         	goto	u2980
  2455   0036BC                     u2981:
  2456   0036BC  EF44  F01B         	goto	l4156
  2457   0036C0                     u2980:
  2458   0036C0                     
  2459                           ;dc_motor.c: 557:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  2460   0036C0  C027  F031         	movff	wallAdjust@straightSpeed,wallAdjust@cur_power
  2461   0036C4  6A32               	clrf	(wallAdjust@cur_power+1)^0,c
  2462   0036C6                     l4160:
  2463   0036C6  BE32               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2464   0036C8  EF6A  F01B         	goto	u2990
  2465   0036CC  EF68  F01B         	goto	u2991
  2466   0036D0                     u2991:
  2467   0036D0  EF6C  F01B         	goto	l4164
  2468   0036D4                     u2990:
  2469   0036D4  EFB9  F01B         	goto	l4180
  2470   0036D8                     l4164:
  2471                           
  2472                           ;dc_motor.c: 558:         mL->power = cur_power+mL->compensation;
  2473   0036D8  EE20 F009          	lfsr	2,9
  2474   0036DC  5023               	movf	wallAdjust@mL^0,w,c
  2475   0036DE  26D9               	addwf	fsr2l,f,c
  2476   0036E0  5024               	movf	(wallAdjust@mL+1)^0,w,c
  2477   0036E2  22DA               	addwfc	fsr2h,f,c
  2478   0036E4  50DF               	movf	indf2,w,c
  2479   0036E6  2431               	addwf	wallAdjust@cur_power^0,w,c
  2480   0036E8  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2481   0036EC  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2482   0036F0  6EDF               	movwf	indf2,c
  2483                           
  2484                           ;dc_motor.c: 559:         mR->power = cur_power+mR->compensation;
  2485   0036F2  EE20 F009          	lfsr	2,9
  2486   0036F6  5025               	movf	wallAdjust@mR^0,w,c
  2487   0036F8  26D9               	addwf	fsr2l,f,c
  2488   0036FA  5026               	movf	(wallAdjust@mR+1)^0,w,c
  2489   0036FC  22DA               	addwfc	fsr2h,f,c
  2490   0036FE  50DF               	movf	indf2,w,c
  2491   003700  2431               	addwf	wallAdjust@cur_power^0,w,c
  2492   003702  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2493   003706  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2494   00370A  6EDF               	movwf	indf2,c
  2495   00370C                     
  2496                           ;dc_motor.c: 560:         setMotorPWM(mL);
  2497   00370C  C023  F01D         	movff	wallAdjust@mL,setMotorPWM@m
  2498   003710  C024  F01E         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2499   003714  EC97  F024         	call	_setMotorPWM	;wreg free
  2500   003718                     
  2501                           ;dc_motor.c: 561:         setMotorPWM(mR);
  2502   003718  C025  F01D         	movff	wallAdjust@mR,setMotorPWM@m
  2503   00371C  C026  F01E         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2504   003720  EC97  F024         	call	_setMotorPWM	;wreg free
  2505   003724                     
  2506                           ;dc_motor.c: 562:         for (i=0;i<straightRamp;i++) {
  2507   003724  0E00               	movlw	0
  2508   003726  6E30               	movwf	(wallAdjust@i+1)^0,c
  2509   003728  0E00               	movlw	0
  2510   00372A  6E2F               	movwf	wallAdjust@i^0,c
  2511   00372C  EFA2  F01B         	goto	l717
  2512   003730                     l4172:
  2513                           
  2514                           ;dc_motor.c: 563:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2515   003730  0E68               	movlw	104
  2516   003732  6E29               	movwf	??_wallAdjust^0,c
  2517   003734  0EE4               	movlw	228
  2518   003736                     u3977:
  2519   003736  2EE8               	decfsz	wreg,f,c
  2520   003738  D7FE               	bra	u3977
  2521   00373A  2E29               	decfsz	??_wallAdjust^0,f,c
  2522   00373C  D7FC               	bra	u3977
  2523   00373E  D000               	nop2	
  2524   003740                     
  2525                           ;dc_motor.c: 564:         }
  2526   003740  4A2F               	infsnz	wallAdjust@i^0,f,c
  2527   003742  2A30               	incf	(wallAdjust@i+1)^0,f,c
  2528   003744                     l717:
  2529   003744  5028               	movf	wallAdjust@straightRamp^0,w,c
  2530   003746  6E29               	movwf	??_wallAdjust^0,c
  2531   003748  6A2A               	clrf	(??_wallAdjust+1)^0,c
  2532   00374A  5029               	movf	??_wallAdjust^0,w,c
  2533   00374C  5C2F               	subwf	wallAdjust@i^0,w,c
  2534   00374E  5030               	movf	(wallAdjust@i+1)^0,w,c
  2535   003750  0A80               	xorlw	128
  2536   003752  6E2B               	movwf	(??_wallAdjust+2)^0,c
  2537   003754  502A               	movf	(??_wallAdjust+1)^0,w,c
  2538   003756  0A80               	xorlw	128
  2539   003758  582B               	subwfb	(??_wallAdjust+2)^0,w,c
  2540   00375A  A0D8               	btfss	status,0,c
  2541   00375C  EFB2  F01B         	goto	u3001
  2542   003760  EFB4  F01B         	goto	u3000
  2543   003764                     u3001:
  2544   003764  EF98  F01B         	goto	l4172
  2545   003768                     u3000:
  2546   003768                     
  2547                           ;dc_motor.c: 565:     }
  2548   003768  0631               	decf	wallAdjust@cur_power^0,f,c
  2549   00376A  A0D8               	btfss	status,0,c
  2550   00376C  0632               	decf	(wallAdjust@cur_power+1)^0,f,c
  2551   00376E  EF63  F01B         	goto	l4160
  2552   003772                     l4180:
  2553                           
  2554                           ;dc_motor.c: 566:     mL->power = 0;
  2555   003772  C023  FFD9         	movff	wallAdjust@mL,fsr2l
  2556   003776  C024  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2557   00377A  6ADF               	clrf	indf2,c
  2558                           
  2559                           ;dc_motor.c: 567:     mR->power = 0;
  2560   00377C  C025  FFD9         	movff	wallAdjust@mR,fsr2l
  2561   003780  C026  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2562   003784  6ADF               	clrf	indf2,c
  2563   003786  0012               	return		;funcret
  2564   003788                     __end_of_wallAdjust:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function _move *****************
  2568 ;; Defined at:
  2569 ;;		line 92 in file "dc_motor.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  2572 ;;		 -> main@motorL(10), 
  2573 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  2574 ;;		 -> main@motorR(10), 
  2575 ;;  color           1    4[BANK0 ] unsigned char 
  2576 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  2577 ;;		 -> main@moveSequence(40), 
  2578 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  2579 ;;		 -> main@straightTime(82), 
  2580 ;;  curMove         1    9[BANK0 ] unsigned char 
  2581 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  2582 ;;  reverseDurat    2   11[BANK0 ] unsigned int 
  2583 ;;  straightRamp    1   13[BANK0 ] unsigned char 
  2584 ;;  turnSpeed       1   14[BANK0 ] unsigned char 
  2585 ;;  turnDuration    1   15[BANK0 ] unsigned char 
  2586 ;;  turnRamp        1   16[BANK0 ] unsigned char 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2598 ;;      Params:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2601 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2602 ;;Total ram usage:       19 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 10
  2605 ;; This function calls:
  2606 ;;		_fullSpeedAhead
  2607 ;;		_returnHome
  2608 ;;		_reverseOneSquare
  2609 ;;		_reverseShort
  2610 ;;		_turnLeft
  2611 ;;		_turnRight
  2612 ;; This function is called by:
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text2
  2618   000E02                     __ptext2:
  2619                           	callstack 0
  2620   000E02                     _move:
  2621                           	callstack 20
  2622   000E02                     
  2623                           ;dc_motor.c: 92: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned int rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 93: {;dc_motor.c: 94:     if (color == 1) {
  2624   000E02  0100               	movlb	0	; () banked
  2625   000E04  0564               	decf	move@color& (0+255),w,b
  2626   000E06  A4D8               	btfss	status,2,c
  2627   000E08  EF08  F007         	goto	u3231
  2628   000E0C  EF0A  F007         	goto	u3230
  2629   000E10                     u3231:
  2630   000E10  EF6C  F007         	goto	l4260
  2631   000E14                     u3230:
  2632   000E14                     
  2633                           ; BSR set to: 0
  2634                           ;dc_motor.c: 95:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2635   000E14  C060  F023         	movff	move@mL,reverseShort@mL
  2636   000E18  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2637   000E1C  C062  F025         	movff	move@mR,reverseShort@mR
  2638   000E20  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2639   000E24  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2640   000E28  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2641   000E2C  ECDF  F01F         	call	_reverseShort	;wreg free
  2642   000E30                     
  2643                           ;dc_motor.c: 96:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2644   000E30  0E05               	movlw	5
  2645   000E32  6E4A               	movwf	(??_move+1)^0,c
  2646   000E34  0E0F               	movlw	15
  2647   000E36  6E49               	movwf	??_move^0,c
  2648   000E38  0EF1               	movlw	241
  2649   000E3A                     u3987:
  2650   000E3A  2EE8               	decfsz	wreg,f,c
  2651   000E3C  D7FE               	bra	u3987
  2652   000E3E  2E49               	decfsz	??_move^0,f,c
  2653   000E40  D7FC               	bra	u3987
  2654   000E42  2E4A               	decfsz	(??_move+1)^0,f,c
  2655   000E44  D7FA               	bra	u3987
  2656   000E46  0000               	nop	
  2657   000E48                     
  2658                           ;dc_motor.c: 97:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2659   000E48  C060  F023         	movff	move@mL,turnRight@mL
  2660   000E4C  C061  F024         	movff	move@mL+1,turnRight@mL+1
  2661   000E50  C062  F025         	movff	move@mR,turnRight@mR
  2662   000E54  C063  F026         	movff	move@mR+1,turnRight@mR+1
  2663   000E58  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  2664   000E5C  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  2665   000E60  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  2666   000E64  ECBD  F022         	call	_turnRight	;wreg free
  2667                           
  2668                           ;dc_motor.c: 98:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2669   000E68  0E05               	movlw	5
  2670   000E6A  6E4A               	movwf	(??_move+1)^0,c
  2671   000E6C  0E0F               	movlw	15
  2672   000E6E  6E49               	movwf	??_move^0,c
  2673   000E70  0EF1               	movlw	241
  2674   000E72                     u3997:
  2675   000E72  2EE8               	decfsz	wreg,f,c
  2676   000E74  D7FE               	bra	u3997
  2677   000E76  2E49               	decfsz	??_move^0,f,c
  2678   000E78  D7FC               	bra	u3997
  2679   000E7A  2E4A               	decfsz	(??_move+1)^0,f,c
  2680   000E7C  D7FA               	bra	u3997
  2681   000E7E  0000               	nop	
  2682   000E80                     
  2683                           ;dc_motor.c: 99:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2684   000E80  C060  F023         	movff	move@mL,turnRight@mL
  2685   000E84  C061  F024         	movff	move@mL+1,turnRight@mL+1
  2686   000E88  C062  F025         	movff	move@mR,turnRight@mR
  2687   000E8C  C063  F026         	movff	move@mR+1,turnRight@mR+1
  2688   000E90  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  2689   000E94  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  2690   000E98  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  2691   000E9C  ECBD  F022         	call	_turnRight	;wreg free
  2692   000EA0                     
  2693                           ;dc_motor.c: 100:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2694   000EA0  0E05               	movlw	5
  2695   000EA2  6E4A               	movwf	(??_move+1)^0,c
  2696   000EA4  0E0F               	movlw	15
  2697   000EA6  6E49               	movwf	??_move^0,c
  2698   000EA8  0EF1               	movlw	241
  2699   000EAA                     u4007:
  2700   000EAA  2EE8               	decfsz	wreg,f,c
  2701   000EAC  D7FE               	bra	u4007
  2702   000EAE  2E49               	decfsz	??_move^0,f,c
  2703   000EB0  D7FC               	bra	u4007
  2704   000EB2  2E4A               	decfsz	(??_move+1)^0,f,c
  2705   000EB4  D7FA               	bra	u4007
  2706   000EB6  0000               	nop	
  2707                           
  2708                           ;dc_motor.c: 101:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2709   000EB8  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  2710   000EBC  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  2711   000EC0  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  2712   000EC4  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  2713   000EC8  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2714   000ECC  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2715   000ED0  EC57  F026         	call	_fullSpeedAhead	;wreg free
  2716                           
  2717                           ;dc_motor.c: 102:     }
  2718   000ED4  EF1D  F00B         	goto	l571
  2719   000ED8                     l4260:
  2720                           
  2721                           ; BSR set to: 0
  2722   000ED8  0E02               	movlw	2
  2723   000EDA  1964               	xorwf	move@color& (0+255),w,b
  2724   000EDC  A4D8               	btfss	status,2,c
  2725   000EDE  EF73  F007         	goto	u3241
  2726   000EE2  EF75  F007         	goto	u3240
  2727   000EE6                     u3241:
  2728   000EE6  EFD7  F007         	goto	l4272
  2729   000EEA                     u3240:
  2730   000EEA                     
  2731                           ; BSR set to: 0
  2732                           ;dc_motor.c: 105:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2733   000EEA  C060  F023         	movff	move@mL,reverseShort@mL
  2734   000EEE  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2735   000EF2  C062  F025         	movff	move@mR,reverseShort@mR
  2736   000EF6  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2737   000EFA  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2738   000EFE  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2739   000F02  ECDF  F01F         	call	_reverseShort	;wreg free
  2740   000F06                     
  2741                           ;dc_motor.c: 106:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2742   000F06  0E05               	movlw	5
  2743   000F08  6E4A               	movwf	(??_move+1)^0,c
  2744   000F0A  0E0F               	movlw	15
  2745   000F0C  6E49               	movwf	??_move^0,c
  2746   000F0E  0EF1               	movlw	241
  2747   000F10                     u4017:
  2748   000F10  2EE8               	decfsz	wreg,f,c
  2749   000F12  D7FE               	bra	u4017
  2750   000F14  2E49               	decfsz	??_move^0,f,c
  2751   000F16  D7FC               	bra	u4017
  2752   000F18  2E4A               	decfsz	(??_move+1)^0,f,c
  2753   000F1A  D7FA               	bra	u4017
  2754   000F1C  0000               	nop	
  2755   000F1E                     
  2756                           ;dc_motor.c: 107:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2757   000F1E  C060  F023         	movff	move@mL,turnLeft@mL
  2758   000F22  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2759   000F26  C062  F025         	movff	move@mR,turnLeft@mR
  2760   000F2A  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2761   000F2E  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2762   000F32  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2763   000F36  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2764   000F3A  ECAA  F023         	call	_turnLeft	;wreg free
  2765                           
  2766                           ;dc_motor.c: 108:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2767   000F3E  0E05               	movlw	5
  2768   000F40  6E4A               	movwf	(??_move+1)^0,c
  2769   000F42  0E0F               	movlw	15
  2770   000F44  6E49               	movwf	??_move^0,c
  2771   000F46  0EF1               	movlw	241
  2772   000F48                     u4027:
  2773   000F48  2EE8               	decfsz	wreg,f,c
  2774   000F4A  D7FE               	bra	u4027
  2775   000F4C  2E49               	decfsz	??_move^0,f,c
  2776   000F4E  D7FC               	bra	u4027
  2777   000F50  2E4A               	decfsz	(??_move+1)^0,f,c
  2778   000F52  D7FA               	bra	u4027
  2779   000F54  0000               	nop	
  2780   000F56                     
  2781                           ;dc_motor.c: 109:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2782   000F56  C060  F023         	movff	move@mL,turnLeft@mL
  2783   000F5A  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2784   000F5E  C062  F025         	movff	move@mR,turnLeft@mR
  2785   000F62  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2786   000F66  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2787   000F6A  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2788   000F6E  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2789   000F72  ECAA  F023         	call	_turnLeft	;wreg free
  2790   000F76                     
  2791                           ;dc_motor.c: 110:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2792   000F76  0E05               	movlw	5
  2793   000F78  6E4A               	movwf	(??_move+1)^0,c
  2794   000F7A  0E0F               	movlw	15
  2795   000F7C  6E49               	movwf	??_move^0,c
  2796   000F7E  0EF1               	movlw	241
  2797   000F80                     u4037:
  2798   000F80  2EE8               	decfsz	wreg,f,c
  2799   000F82  D7FE               	bra	u4037
  2800   000F84  2E49               	decfsz	??_move^0,f,c
  2801   000F86  D7FC               	bra	u4037
  2802   000F88  2E4A               	decfsz	(??_move+1)^0,f,c
  2803   000F8A  D7FA               	bra	u4037
  2804   000F8C  0000               	nop	
  2805                           
  2806                           ;dc_motor.c: 111:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2807   000F8E  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  2808   000F92  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  2809   000F96  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  2810   000F9A  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  2811   000F9E  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2812   000FA2  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2813   000FA6  EC57  F026         	call	_fullSpeedAhead	;wreg free
  2814                           
  2815                           ;dc_motor.c: 112:     }
  2816   000FAA  EF1D  F00B         	goto	l571
  2817   000FAE                     l4272:
  2818                           
  2819                           ; BSR set to: 0
  2820   000FAE  0E03               	movlw	3
  2821   000FB0  1964               	xorwf	move@color& (0+255),w,b
  2822   000FB2  A4D8               	btfss	status,2,c
  2823   000FB4  EFDE  F007         	goto	u3251
  2824   000FB8  EFE0  F007         	goto	u3250
  2825   000FBC                     u3251:
  2826   000FBC  EF7A  F008         	goto	l4290
  2827   000FC0                     u3250:
  2828   000FC0                     
  2829                           ; BSR set to: 0
  2830                           ;dc_motor.c: 115:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2831   000FC0  C060  F023         	movff	move@mL,reverseShort@mL
  2832   000FC4  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2833   000FC8  C062  F025         	movff	move@mR,reverseShort@mR
  2834   000FCC  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2835   000FD0  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2836   000FD4  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2837   000FD8  ECDF  F01F         	call	_reverseShort	;wreg free
  2838   000FDC                     
  2839                           ;dc_motor.c: 116:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2840   000FDC  0E05               	movlw	5
  2841   000FDE  6E4A               	movwf	(??_move+1)^0,c
  2842   000FE0  0E0F               	movlw	15
  2843   000FE2  6E49               	movwf	??_move^0,c
  2844   000FE4  0EF1               	movlw	241
  2845   000FE6                     u4047:
  2846   000FE6  2EE8               	decfsz	wreg,f,c
  2847   000FE8  D7FE               	bra	u4047
  2848   000FEA  2E49               	decfsz	??_move^0,f,c
  2849   000FEC  D7FC               	bra	u4047
  2850   000FEE  2E4A               	decfsz	(??_move+1)^0,f,c
  2851   000FF0  D7FA               	bra	u4047
  2852   000FF2  0000               	nop	
  2853   000FF4                     
  2854                           ;dc_motor.c: 117:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2855   000FF4  C060  F023         	movff	move@mL,turnLeft@mL
  2856   000FF8  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2857   000FFC  C062  F025         	movff	move@mR,turnLeft@mR
  2858   001000  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2859   001004  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2860   001008  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2861   00100C  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2862   001010  ECAA  F023         	call	_turnLeft	;wreg free
  2863                           
  2864                           ;dc_motor.c: 118:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2865   001014  0E05               	movlw	5
  2866   001016  6E4A               	movwf	(??_move+1)^0,c
  2867   001018  0E0F               	movlw	15
  2868   00101A  6E49               	movwf	??_move^0,c
  2869   00101C  0EF1               	movlw	241
  2870   00101E                     u4057:
  2871   00101E  2EE8               	decfsz	wreg,f,c
  2872   001020  D7FE               	bra	u4057
  2873   001022  2E49               	decfsz	??_move^0,f,c
  2874   001024  D7FC               	bra	u4057
  2875   001026  2E4A               	decfsz	(??_move+1)^0,f,c
  2876   001028  D7FA               	bra	u4057
  2877   00102A  0000               	nop	
  2878   00102C                     
  2879                           ;dc_motor.c: 119:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2880   00102C  C060  F023         	movff	move@mL,turnLeft@mL
  2881   001030  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2882   001034  C062  F025         	movff	move@mR,turnLeft@mR
  2883   001038  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2884   00103C  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2885   001040  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2886   001044  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2887   001048  ECAA  F023         	call	_turnLeft	;wreg free
  2888   00104C                     
  2889                           ;dc_motor.c: 120:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2890   00104C  0E05               	movlw	5
  2891   00104E  6E4A               	movwf	(??_move+1)^0,c
  2892   001050  0E0F               	movlw	15
  2893   001052  6E49               	movwf	??_move^0,c
  2894   001054  0EF1               	movlw	241
  2895   001056                     u4067:
  2896   001056  2EE8               	decfsz	wreg,f,c
  2897   001058  D7FE               	bra	u4067
  2898   00105A  2E49               	decfsz	??_move^0,f,c
  2899   00105C  D7FC               	bra	u4067
  2900   00105E  2E4A               	decfsz	(??_move+1)^0,f,c
  2901   001060  D7FA               	bra	u4067
  2902   001062  0000               	nop	
  2903                           
  2904                           ;dc_motor.c: 121:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2905   001064  C060  F023         	movff	move@mL,turnLeft@mL
  2906   001068  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2907   00106C  C062  F025         	movff	move@mR,turnLeft@mR
  2908   001070  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2909   001074  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2910   001078  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2911   00107C  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2912   001080  ECAA  F023         	call	_turnLeft	;wreg free
  2913   001084                     
  2914                           ;dc_motor.c: 122:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2915   001084  0E05               	movlw	5
  2916   001086  6E4A               	movwf	(??_move+1)^0,c
  2917   001088  0E0F               	movlw	15
  2918   00108A  6E49               	movwf	??_move^0,c
  2919   00108C  0EF1               	movlw	241
  2920   00108E                     u4077:
  2921   00108E  2EE8               	decfsz	wreg,f,c
  2922   001090  D7FE               	bra	u4077
  2923   001092  2E49               	decfsz	??_move^0,f,c
  2924   001094  D7FC               	bra	u4077
  2925   001096  2E4A               	decfsz	(??_move+1)^0,f,c
  2926   001098  D7FA               	bra	u4077
  2927   00109A  0000               	nop	
  2928   00109C                     
  2929                           ;dc_motor.c: 123:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2930   00109C  C060  F023         	movff	move@mL,turnLeft@mL
  2931   0010A0  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  2932   0010A4  C062  F025         	movff	move@mR,turnLeft@mR
  2933   0010A8  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  2934   0010AC  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  2935   0010B0  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  2936   0010B4  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  2937   0010B8  ECAA  F023         	call	_turnLeft	;wreg free
  2938                           
  2939                           ;dc_motor.c: 124:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2940   0010BC  0E05               	movlw	5
  2941   0010BE  6E4A               	movwf	(??_move+1)^0,c
  2942   0010C0  0E0F               	movlw	15
  2943   0010C2  6E49               	movwf	??_move^0,c
  2944   0010C4  0EF1               	movlw	241
  2945   0010C6                     u4087:
  2946   0010C6  2EE8               	decfsz	wreg,f,c
  2947   0010C8  D7FE               	bra	u4087
  2948   0010CA  2E49               	decfsz	??_move^0,f,c
  2949   0010CC  D7FC               	bra	u4087
  2950   0010CE  2E4A               	decfsz	(??_move+1)^0,f,c
  2951   0010D0  D7FA               	bra	u4087
  2952   0010D2  0000               	nop	
  2953   0010D4                     
  2954                           ;dc_motor.c: 125:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2955   0010D4  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  2956   0010D8  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  2957   0010DC  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  2958   0010E0  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  2959   0010E4  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2960   0010E8  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2961   0010EC  EC57  F026         	call	_fullSpeedAhead	;wreg free
  2962                           
  2963                           ;dc_motor.c: 126:     }
  2964   0010F0  EF1D  F00B         	goto	l571
  2965   0010F4                     l4290:
  2966                           
  2967                           ; BSR set to: 0
  2968   0010F4  0E04               	movlw	4
  2969   0010F6  1964               	xorwf	move@color& (0+255),w,b
  2970   0010F8  A4D8               	btfss	status,2,c
  2971   0010FA  EF81  F008         	goto	u3261
  2972   0010FE  EF83  F008         	goto	u3260
  2973   001102                     u3261:
  2974   001102  EF03  F009         	goto	l4306
  2975   001106                     u3260:
  2976   001106                     
  2977                           ; BSR set to: 0
  2978                           ;dc_motor.c: 129:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2979   001106  C060  F023         	movff	move@mL,reverseShort@mL
  2980   00110A  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  2981   00110E  C062  F025         	movff	move@mR,reverseShort@mR
  2982   001112  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  2983   001116  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  2984   00111A  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  2985   00111E  ECDF  F01F         	call	_reverseShort	;wreg free
  2986   001122                     
  2987                           ;dc_motor.c: 130:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2988   001122  0E05               	movlw	5
  2989   001124  6E4A               	movwf	(??_move+1)^0,c
  2990   001126  0E0F               	movlw	15
  2991   001128  6E49               	movwf	??_move^0,c
  2992   00112A  0EF1               	movlw	241
  2993   00112C                     u4097:
  2994   00112C  2EE8               	decfsz	wreg,f,c
  2995   00112E  D7FE               	bra	u4097
  2996   001130  2E49               	decfsz	??_move^0,f,c
  2997   001132  D7FC               	bra	u4097
  2998   001134  2E4A               	decfsz	(??_move+1)^0,f,c
  2999   001136  D7FA               	bra	u4097
  3000   001138  0000               	nop	
  3001   00113A                     
  3002                           ;dc_motor.c: 131:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  3003   00113A  C060  F023         	movff	move@mL,reverseOneSquare@mL
  3004   00113E  C061  F024         	movff	move@mL+1,reverseOneSquare@mL+1
  3005   001142  C062  F025         	movff	move@mR,reverseOneSquare@mR
  3006   001146  C063  F026         	movff	move@mR+1,reverseOneSquare@mR+1
  3007   00114A  C06A  F027         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  3008   00114E  C06B  F028         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  3009   001152  C06C  F029         	movff	move@reverseDuration+1,reverseOneSquare@reverseDuration+1
  3010   001156  C06D  F02A         	movff	move@straightRamp,reverseOneSquare@straightRamp
  3011   00115A  ECCE  F021         	call	_reverseOneSquare	;wreg free
  3012                           
  3013                           ;dc_motor.c: 132:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3014   00115E  0E05               	movlw	5
  3015   001160  6E4A               	movwf	(??_move+1)^0,c
  3016   001162  0E0F               	movlw	15
  3017   001164  6E49               	movwf	??_move^0,c
  3018   001166  0EF1               	movlw	241
  3019   001168                     u4107:
  3020   001168  2EE8               	decfsz	wreg,f,c
  3021   00116A  D7FE               	bra	u4107
  3022   00116C  2E49               	decfsz	??_move^0,f,c
  3023   00116E  D7FC               	bra	u4107
  3024   001170  2E4A               	decfsz	(??_move+1)^0,f,c
  3025   001172  D7FA               	bra	u4107
  3026   001174  0000               	nop	
  3027   001176                     
  3028                           ;dc_motor.c: 133:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3029   001176  C060  F023         	movff	move@mL,turnRight@mL
  3030   00117A  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3031   00117E  C062  F025         	movff	move@mR,turnRight@mR
  3032   001182  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3033   001186  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3034   00118A  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3035   00118E  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3036   001192  ECBD  F022         	call	_turnRight	;wreg free
  3037   001196                     
  3038                           ;dc_motor.c: 134:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3039   001196  0E05               	movlw	5
  3040   001198  6E4A               	movwf	(??_move+1)^0,c
  3041   00119A  0E0F               	movlw	15
  3042   00119C  6E49               	movwf	??_move^0,c
  3043   00119E  0EF1               	movlw	241
  3044   0011A0                     u4117:
  3045   0011A0  2EE8               	decfsz	wreg,f,c
  3046   0011A2  D7FE               	bra	u4117
  3047   0011A4  2E49               	decfsz	??_move^0,f,c
  3048   0011A6  D7FC               	bra	u4117
  3049   0011A8  2E4A               	decfsz	(??_move+1)^0,f,c
  3050   0011AA  D7FA               	bra	u4117
  3051   0011AC  0000               	nop	
  3052                           
  3053                           ;dc_motor.c: 135:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3054   0011AE  C060  F023         	movff	move@mL,turnRight@mL
  3055   0011B2  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3056   0011B6  C062  F025         	movff	move@mR,turnRight@mR
  3057   0011BA  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3058   0011BE  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3059   0011C2  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3060   0011C6  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3061   0011CA  ECBD  F022         	call	_turnRight	;wreg free
  3062   0011CE                     
  3063                           ;dc_motor.c: 136:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3064   0011CE  0E05               	movlw	5
  3065   0011D0  6E4A               	movwf	(??_move+1)^0,c
  3066   0011D2  0E0F               	movlw	15
  3067   0011D4  6E49               	movwf	??_move^0,c
  3068   0011D6  0EF1               	movlw	241
  3069   0011D8                     u4127:
  3070   0011D8  2EE8               	decfsz	wreg,f,c
  3071   0011DA  D7FE               	bra	u4127
  3072   0011DC  2E49               	decfsz	??_move^0,f,c
  3073   0011DE  D7FC               	bra	u4127
  3074   0011E0  2E4A               	decfsz	(??_move+1)^0,f,c
  3075   0011E2  D7FA               	bra	u4127
  3076   0011E4  0000               	nop	
  3077   0011E6                     
  3078                           ;dc_motor.c: 137:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3079   0011E6  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3080   0011EA  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3081   0011EE  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3082   0011F2  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3083   0011F6  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3084   0011FA  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3085   0011FE  EC57  F026         	call	_fullSpeedAhead	;wreg free
  3086                           
  3087                           ;dc_motor.c: 138:     }
  3088   001202  EF1D  F00B         	goto	l571
  3089   001206                     l4306:
  3090                           
  3091                           ; BSR set to: 0
  3092   001206  0E05               	movlw	5
  3093   001208  1964               	xorwf	move@color& (0+255),w,b
  3094   00120A  A4D8               	btfss	status,2,c
  3095   00120C  EF0A  F009         	goto	u3271
  3096   001210  EF0C  F009         	goto	u3270
  3097   001214                     u3271:
  3098   001214  EF8C  F009         	goto	l4322
  3099   001218                     u3270:
  3100   001218                     
  3101                           ; BSR set to: 0
  3102                           ;dc_motor.c: 141:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3103   001218  C060  F023         	movff	move@mL,reverseShort@mL
  3104   00121C  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3105   001220  C062  F025         	movff	move@mR,reverseShort@mR
  3106   001224  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3107   001228  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3108   00122C  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3109   001230  ECDF  F01F         	call	_reverseShort	;wreg free
  3110   001234                     
  3111                           ;dc_motor.c: 142:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3112   001234  0E05               	movlw	5
  3113   001236  6E4A               	movwf	(??_move+1)^0,c
  3114   001238  0E0F               	movlw	15
  3115   00123A  6E49               	movwf	??_move^0,c
  3116   00123C  0EF1               	movlw	241
  3117   00123E                     u4137:
  3118   00123E  2EE8               	decfsz	wreg,f,c
  3119   001240  D7FE               	bra	u4137
  3120   001242  2E49               	decfsz	??_move^0,f,c
  3121   001244  D7FC               	bra	u4137
  3122   001246  2E4A               	decfsz	(??_move+1)^0,f,c
  3123   001248  D7FA               	bra	u4137
  3124   00124A  0000               	nop	
  3125   00124C                     
  3126                           ;dc_motor.c: 143:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  3127   00124C  C060  F023         	movff	move@mL,reverseOneSquare@mL
  3128   001250  C061  F024         	movff	move@mL+1,reverseOneSquare@mL+1
  3129   001254  C062  F025         	movff	move@mR,reverseOneSquare@mR
  3130   001258  C063  F026         	movff	move@mR+1,reverseOneSquare@mR+1
  3131   00125C  C06A  F027         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  3132   001260  C06B  F028         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  3133   001264  C06C  F029         	movff	move@reverseDuration+1,reverseOneSquare@reverseDuration+1
  3134   001268  C06D  F02A         	movff	move@straightRamp,reverseOneSquare@straightRamp
  3135   00126C  ECCE  F021         	call	_reverseOneSquare	;wreg free
  3136                           
  3137                           ;dc_motor.c: 144:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3138   001270  0E05               	movlw	5
  3139   001272  6E4A               	movwf	(??_move+1)^0,c
  3140   001274  0E0F               	movlw	15
  3141   001276  6E49               	movwf	??_move^0,c
  3142   001278  0EF1               	movlw	241
  3143   00127A                     u4147:
  3144   00127A  2EE8               	decfsz	wreg,f,c
  3145   00127C  D7FE               	bra	u4147
  3146   00127E  2E49               	decfsz	??_move^0,f,c
  3147   001280  D7FC               	bra	u4147
  3148   001282  2E4A               	decfsz	(??_move+1)^0,f,c
  3149   001284  D7FA               	bra	u4147
  3150   001286  0000               	nop	
  3151   001288                     
  3152                           ;dc_motor.c: 145:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3153   001288  C060  F023         	movff	move@mL,turnLeft@mL
  3154   00128C  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3155   001290  C062  F025         	movff	move@mR,turnLeft@mR
  3156   001294  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3157   001298  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3158   00129C  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3159   0012A0  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3160   0012A4  ECAA  F023         	call	_turnLeft	;wreg free
  3161   0012A8                     
  3162                           ;dc_motor.c: 146:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3163   0012A8  0E05               	movlw	5
  3164   0012AA  6E4A               	movwf	(??_move+1)^0,c
  3165   0012AC  0E0F               	movlw	15
  3166   0012AE  6E49               	movwf	??_move^0,c
  3167   0012B0  0EF1               	movlw	241
  3168   0012B2                     u4157:
  3169   0012B2  2EE8               	decfsz	wreg,f,c
  3170   0012B4  D7FE               	bra	u4157
  3171   0012B6  2E49               	decfsz	??_move^0,f,c
  3172   0012B8  D7FC               	bra	u4157
  3173   0012BA  2E4A               	decfsz	(??_move+1)^0,f,c
  3174   0012BC  D7FA               	bra	u4157
  3175   0012BE  0000               	nop	
  3176                           
  3177                           ;dc_motor.c: 147:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3178   0012C0  C060  F023         	movff	move@mL,turnLeft@mL
  3179   0012C4  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3180   0012C8  C062  F025         	movff	move@mR,turnLeft@mR
  3181   0012CC  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3182   0012D0  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3183   0012D4  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3184   0012D8  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3185   0012DC  ECAA  F023         	call	_turnLeft	;wreg free
  3186   0012E0                     
  3187                           ;dc_motor.c: 148:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3188   0012E0  0E05               	movlw	5
  3189   0012E2  6E4A               	movwf	(??_move+1)^0,c
  3190   0012E4  0E0F               	movlw	15
  3191   0012E6  6E49               	movwf	??_move^0,c
  3192   0012E8  0EF1               	movlw	241
  3193   0012EA                     u4167:
  3194   0012EA  2EE8               	decfsz	wreg,f,c
  3195   0012EC  D7FE               	bra	u4167
  3196   0012EE  2E49               	decfsz	??_move^0,f,c
  3197   0012F0  D7FC               	bra	u4167
  3198   0012F2  2E4A               	decfsz	(??_move+1)^0,f,c
  3199   0012F4  D7FA               	bra	u4167
  3200   0012F6  0000               	nop	
  3201   0012F8                     
  3202                           ;dc_motor.c: 149:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3203   0012F8  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3204   0012FC  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3205   001300  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3206   001304  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3207   001308  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3208   00130C  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3209   001310  EC57  F026         	call	_fullSpeedAhead	;wreg free
  3210                           
  3211                           ;dc_motor.c: 150:     }
  3212   001314  EF1D  F00B         	goto	l571
  3213   001318                     l4322:
  3214                           
  3215                           ; BSR set to: 0
  3216   001318  0E06               	movlw	6
  3217   00131A  1964               	xorwf	move@color& (0+255),w,b
  3218   00131C  A4D8               	btfss	status,2,c
  3219   00131E  EF93  F009         	goto	u3281
  3220   001322  EF95  F009         	goto	u3280
  3221   001326                     u3281:
  3222   001326  EF13  F00A         	goto	l4338
  3223   00132A                     u3280:
  3224   00132A                     
  3225                           ; BSR set to: 0
  3226                           ;dc_motor.c: 153:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3227   00132A  C060  F023         	movff	move@mL,reverseShort@mL
  3228   00132E  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3229   001332  C062  F025         	movff	move@mR,reverseShort@mR
  3230   001336  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3231   00133A  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3232   00133E  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3233   001342  ECDF  F01F         	call	_reverseShort	;wreg free
  3234   001346                     
  3235                           ;dc_motor.c: 154:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3236   001346  0E05               	movlw	5
  3237   001348  6E4A               	movwf	(??_move+1)^0,c
  3238   00134A  0E0F               	movlw	15
  3239   00134C  6E49               	movwf	??_move^0,c
  3240   00134E  0EF1               	movlw	241
  3241   001350                     u4177:
  3242   001350  2EE8               	decfsz	wreg,f,c
  3243   001352  D7FE               	bra	u4177
  3244   001354  2E49               	decfsz	??_move^0,f,c
  3245   001356  D7FC               	bra	u4177
  3246   001358  2E4A               	decfsz	(??_move+1)^0,f,c
  3247   00135A  D7FA               	bra	u4177
  3248   00135C  0000               	nop	
  3249   00135E                     
  3250                           ;dc_motor.c: 155:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3251   00135E  C060  F023         	movff	move@mL,turnRight@mL
  3252   001362  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3253   001366  C062  F025         	movff	move@mR,turnRight@mR
  3254   00136A  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3255   00136E  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3256   001372  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3257   001376  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3258   00137A  ECBD  F022         	call	_turnRight	;wreg free
  3259                           
  3260                           ;dc_motor.c: 156:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3261   00137E  0E05               	movlw	5
  3262   001380  6E4A               	movwf	(??_move+1)^0,c
  3263   001382  0E0F               	movlw	15
  3264   001384  6E49               	movwf	??_move^0,c
  3265   001386  0EF1               	movlw	241
  3266   001388                     u4187:
  3267   001388  2EE8               	decfsz	wreg,f,c
  3268   00138A  D7FE               	bra	u4187
  3269   00138C  2E49               	decfsz	??_move^0,f,c
  3270   00138E  D7FC               	bra	u4187
  3271   001390  2E4A               	decfsz	(??_move+1)^0,f,c
  3272   001392  D7FA               	bra	u4187
  3273   001394  0000               	nop	
  3274   001396                     
  3275                           ;dc_motor.c: 157:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3276   001396  C060  F023         	movff	move@mL,turnRight@mL
  3277   00139A  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3278   00139E  C062  F025         	movff	move@mR,turnRight@mR
  3279   0013A2  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3280   0013A6  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3281   0013AA  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3282   0013AE  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3283   0013B2  ECBD  F022         	call	_turnRight	;wreg free
  3284   0013B6                     
  3285                           ;dc_motor.c: 158:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3286   0013B6  0E05               	movlw	5
  3287   0013B8  6E4A               	movwf	(??_move+1)^0,c
  3288   0013BA  0E0F               	movlw	15
  3289   0013BC  6E49               	movwf	??_move^0,c
  3290   0013BE  0EF1               	movlw	241
  3291   0013C0                     u4197:
  3292   0013C0  2EE8               	decfsz	wreg,f,c
  3293   0013C2  D7FE               	bra	u4197
  3294   0013C4  2E49               	decfsz	??_move^0,f,c
  3295   0013C6  D7FC               	bra	u4197
  3296   0013C8  2E4A               	decfsz	(??_move+1)^0,f,c
  3297   0013CA  D7FA               	bra	u4197
  3298   0013CC  0000               	nop	
  3299                           
  3300                           ;dc_motor.c: 159:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3301   0013CE  C060  F023         	movff	move@mL,turnRight@mL
  3302   0013D2  C061  F024         	movff	move@mL+1,turnRight@mL+1
  3303   0013D6  C062  F025         	movff	move@mR,turnRight@mR
  3304   0013DA  C063  F026         	movff	move@mR+1,turnRight@mR+1
  3305   0013DE  C06E  F027         	movff	move@turnSpeed,turnRight@turnSpeed
  3306   0013E2  C06F  F028         	movff	move@turnDuration,turnRight@turnDuration
  3307   0013E6  C070  F029         	movff	move@turnRamp,turnRight@turnRamp
  3308   0013EA  ECBD  F022         	call	_turnRight	;wreg free
  3309   0013EE                     
  3310                           ;dc_motor.c: 160:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3311   0013EE  0E05               	movlw	5
  3312   0013F0  6E4A               	movwf	(??_move+1)^0,c
  3313   0013F2  0E0F               	movlw	15
  3314   0013F4  6E49               	movwf	??_move^0,c
  3315   0013F6  0EF1               	movlw	241
  3316   0013F8                     u4207:
  3317   0013F8  2EE8               	decfsz	wreg,f,c
  3318   0013FA  D7FE               	bra	u4207
  3319   0013FC  2E49               	decfsz	??_move^0,f,c
  3320   0013FE  D7FC               	bra	u4207
  3321   001400  2E4A               	decfsz	(??_move+1)^0,f,c
  3322   001402  D7FA               	bra	u4207
  3323   001404  0000               	nop	
  3324   001406                     
  3325                           ;dc_motor.c: 161:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3326   001406  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3327   00140A  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3328   00140E  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3329   001412  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3330   001416  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3331   00141A  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3332   00141E  EC57  F026         	call	_fullSpeedAhead	;wreg free
  3333                           
  3334                           ;dc_motor.c: 162:     }
  3335   001422  EF1D  F00B         	goto	l571
  3336   001426                     l4338:
  3337                           
  3338                           ; BSR set to: 0
  3339   001426  0E07               	movlw	7
  3340   001428  1964               	xorwf	move@color& (0+255),w,b
  3341   00142A  A4D8               	btfss	status,2,c
  3342   00142C  EF1A  F00A         	goto	u3291
  3343   001430  EF1C  F00A         	goto	u3290
  3344   001434                     u3291:
  3345   001434  EF9A  F00A         	goto	l4354
  3346   001438                     u3290:
  3347   001438                     
  3348                           ; BSR set to: 0
  3349                           ;dc_motor.c: 165:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3350   001438  C060  F023         	movff	move@mL,reverseShort@mL
  3351   00143C  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3352   001440  C062  F025         	movff	move@mR,reverseShort@mR
  3353   001444  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3354   001448  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3355   00144C  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3356   001450  ECDF  F01F         	call	_reverseShort	;wreg free
  3357   001454                     
  3358                           ;dc_motor.c: 166:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3359   001454  0E05               	movlw	5
  3360   001456  6E4A               	movwf	(??_move+1)^0,c
  3361   001458  0E0F               	movlw	15
  3362   00145A  6E49               	movwf	??_move^0,c
  3363   00145C  0EF1               	movlw	241
  3364   00145E                     u4217:
  3365   00145E  2EE8               	decfsz	wreg,f,c
  3366   001460  D7FE               	bra	u4217
  3367   001462  2E49               	decfsz	??_move^0,f,c
  3368   001464  D7FC               	bra	u4217
  3369   001466  2E4A               	decfsz	(??_move+1)^0,f,c
  3370   001468  D7FA               	bra	u4217
  3371   00146A  0000               	nop	
  3372   00146C                     
  3373                           ;dc_motor.c: 167:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3374   00146C  C060  F023         	movff	move@mL,turnLeft@mL
  3375   001470  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3376   001474  C062  F025         	movff	move@mR,turnLeft@mR
  3377   001478  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3378   00147C  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3379   001480  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3380   001484  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3381   001488  ECAA  F023         	call	_turnLeft	;wreg free
  3382                           
  3383                           ;dc_motor.c: 168:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3384   00148C  0E05               	movlw	5
  3385   00148E  6E4A               	movwf	(??_move+1)^0,c
  3386   001490  0E0F               	movlw	15
  3387   001492  6E49               	movwf	??_move^0,c
  3388   001494  0EF1               	movlw	241
  3389   001496                     u4227:
  3390   001496  2EE8               	decfsz	wreg,f,c
  3391   001498  D7FE               	bra	u4227
  3392   00149A  2E49               	decfsz	??_move^0,f,c
  3393   00149C  D7FC               	bra	u4227
  3394   00149E  2E4A               	decfsz	(??_move+1)^0,f,c
  3395   0014A0  D7FA               	bra	u4227
  3396   0014A2  0000               	nop	
  3397   0014A4                     
  3398                           ;dc_motor.c: 169:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3399   0014A4  C060  F023         	movff	move@mL,turnLeft@mL
  3400   0014A8  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3401   0014AC  C062  F025         	movff	move@mR,turnLeft@mR
  3402   0014B0  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3403   0014B4  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3404   0014B8  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3405   0014BC  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3406   0014C0  ECAA  F023         	call	_turnLeft	;wreg free
  3407   0014C4                     
  3408                           ;dc_motor.c: 170:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3409   0014C4  0E05               	movlw	5
  3410   0014C6  6E4A               	movwf	(??_move+1)^0,c
  3411   0014C8  0E0F               	movlw	15
  3412   0014CA  6E49               	movwf	??_move^0,c
  3413   0014CC  0EF1               	movlw	241
  3414   0014CE                     u4237:
  3415   0014CE  2EE8               	decfsz	wreg,f,c
  3416   0014D0  D7FE               	bra	u4237
  3417   0014D2  2E49               	decfsz	??_move^0,f,c
  3418   0014D4  D7FC               	bra	u4237
  3419   0014D6  2E4A               	decfsz	(??_move+1)^0,f,c
  3420   0014D8  D7FA               	bra	u4237
  3421   0014DA  0000               	nop	
  3422                           
  3423                           ;dc_motor.c: 171:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3424   0014DC  C060  F023         	movff	move@mL,turnLeft@mL
  3425   0014E0  C061  F024         	movff	move@mL+1,turnLeft@mL+1
  3426   0014E4  C062  F025         	movff	move@mR,turnLeft@mR
  3427   0014E8  C063  F026         	movff	move@mR+1,turnLeft@mR+1
  3428   0014EC  C06E  F027         	movff	move@turnSpeed,turnLeft@turnSpeed
  3429   0014F0  C06F  F028         	movff	move@turnDuration,turnLeft@turnDuration
  3430   0014F4  C070  F029         	movff	move@turnRamp,turnLeft@turnRamp
  3431   0014F8  ECAA  F023         	call	_turnLeft	;wreg free
  3432   0014FC                     
  3433                           ;dc_motor.c: 172:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3434   0014FC  0E05               	movlw	5
  3435   0014FE  6E4A               	movwf	(??_move+1)^0,c
  3436   001500  0E0F               	movlw	15
  3437   001502  6E49               	movwf	??_move^0,c
  3438   001504  0EF1               	movlw	241
  3439   001506                     u4247:
  3440   001506  2EE8               	decfsz	wreg,f,c
  3441   001508  D7FE               	bra	u4247
  3442   00150A  2E49               	decfsz	??_move^0,f,c
  3443   00150C  D7FC               	bra	u4247
  3444   00150E  2E4A               	decfsz	(??_move+1)^0,f,c
  3445   001510  D7FA               	bra	u4247
  3446   001512  0000               	nop	
  3447   001514                     
  3448                           ;dc_motor.c: 173:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3449   001514  C060  F023         	movff	move@mL,fullSpeedAhead@mL
  3450   001518  C061  F024         	movff	move@mL+1,fullSpeedAhead@mL+1
  3451   00151C  C062  F025         	movff	move@mR,fullSpeedAhead@mR
  3452   001520  C063  F026         	movff	move@mR+1,fullSpeedAhead@mR+1
  3453   001524  C06A  F027         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3454   001528  C06D  F028         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3455   00152C  EC57  F026         	call	_fullSpeedAhead	;wreg free
  3456                           
  3457                           ;dc_motor.c: 174:     }
  3458   001530  EF1D  F00B         	goto	l571
  3459   001534                     l4354:
  3460                           
  3461                           ; BSR set to: 0
  3462   001534  0E08               	movlw	8
  3463   001536  1964               	xorwf	move@color& (0+255),w,b
  3464   001538  A4D8               	btfss	status,2,c
  3465   00153A  EFA1  F00A         	goto	u3301
  3466   00153E  EFA3  F00A         	goto	u3300
  3467   001542                     u3301:
  3468   001542  EFE1  F00A         	goto	l4362
  3469   001546                     u3300:
  3470   001546                     
  3471                           ; BSR set to: 0
  3472                           ;dc_motor.c: 177:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3473   001546  C060  F023         	movff	move@mL,reverseShort@mL
  3474   00154A  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3475   00154E  C062  F025         	movff	move@mR,reverseShort@mR
  3476   001552  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3477   001556  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3478   00155A  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3479   00155E  ECDF  F01F         	call	_reverseShort	;wreg free
  3480   001562                     
  3481                           ;dc_motor.c: 178:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3482   001562  0E05               	movlw	5
  3483   001564  6E4A               	movwf	(??_move+1)^0,c
  3484   001566  0E0F               	movlw	15
  3485   001568  6E49               	movwf	??_move^0,c
  3486   00156A  0EF1               	movlw	241
  3487   00156C                     u4257:
  3488   00156C  2EE8               	decfsz	wreg,f,c
  3489   00156E  D7FE               	bra	u4257
  3490   001570  2E49               	decfsz	??_move^0,f,c
  3491   001572  D7FC               	bra	u4257
  3492   001574  2E4A               	decfsz	(??_move+1)^0,f,c
  3493   001576  D7FA               	bra	u4257
  3494   001578  0000               	nop	
  3495   00157A                     
  3496                           ;dc_motor.c: 179:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3497   00157A  C060  F032         	movff	move@mL,returnHome@mL
  3498   00157E  C061  F033         	movff	move@mL+1,returnHome@mL+1
  3499   001582  C062  F034         	movff	move@mR,returnHome@mR
  3500   001586  C063  F035         	movff	move@mR+1,returnHome@mR+1
  3501   00158A  C065  F036         	movff	move@moveSequence,returnHome@moveSequence
  3502   00158E  C066  F037         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3503   001592  C067  F038         	movff	move@straightTime,returnHome@straightTime
  3504   001596  C068  F039         	movff	move@straightTime+1,returnHome@straightTime+1
  3505   00159A  C069  F03A         	movff	move@curMove,returnHome@curMove
  3506   00159E  C06A  F03B         	movff	move@straightSpeed,returnHome@straightSpeed
  3507   0015A2  C06B  F03C         	movff	move@reverseDuration,returnHome@reverseDuration
  3508   0015A6  C06C  F03D         	movff	move@reverseDuration+1,returnHome@reverseDuration+1
  3509   0015AA  C06D  F03E         	movff	move@straightRamp,returnHome@straightRamp
  3510   0015AE  C06E  F03F         	movff	move@turnSpeed,returnHome@turnSpeed
  3511   0015B2  C06F  F040         	movff	move@turnDuration,returnHome@turnDuration
  3512   0015B6  C070  F041         	movff	move@turnRamp,returnHome@turnRamp
  3513   0015BA  EC1E  F00B         	call	_returnHome	;wreg free
  3514                           
  3515                           ;dc_motor.c: 180:     }
  3516   0015BE  EF1D  F00B         	goto	l571
  3517   0015C2                     l4362:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;dc_motor.c: 183:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3521   0015C2  C060  F023         	movff	move@mL,reverseShort@mL
  3522   0015C6  C061  F024         	movff	move@mL+1,reverseShort@mL+1
  3523   0015CA  C062  F025         	movff	move@mR,reverseShort@mR
  3524   0015CE  C063  F026         	movff	move@mR+1,reverseShort@mR+1
  3525   0015D2  C06A  F027         	movff	move@straightSpeed,reverseShort@straightSpeed
  3526   0015D6  C06D  F028         	movff	move@straightRamp,reverseShort@straightRamp
  3527   0015DA  ECDF  F01F         	call	_reverseShort	;wreg free
  3528   0015DE                     
  3529                           ;dc_motor.c: 184:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3530   0015DE  0E05               	movlw	5
  3531   0015E0  6E4A               	movwf	(??_move+1)^0,c
  3532   0015E2  0E0F               	movlw	15
  3533   0015E4  6E49               	movwf	??_move^0,c
  3534   0015E6  0EF1               	movlw	241
  3535   0015E8                     u4267:
  3536   0015E8  2EE8               	decfsz	wreg,f,c
  3537   0015EA  D7FE               	bra	u4267
  3538   0015EC  2E49               	decfsz	??_move^0,f,c
  3539   0015EE  D7FC               	bra	u4267
  3540   0015F0  2E4A               	decfsz	(??_move+1)^0,f,c
  3541   0015F2  D7FA               	bra	u4267
  3542   0015F4  0000               	nop	
  3543   0015F6                     
  3544                           ;dc_motor.c: 185:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3545   0015F6  C060  F032         	movff	move@mL,returnHome@mL
  3546   0015FA  C061  F033         	movff	move@mL+1,returnHome@mL+1
  3547   0015FE  C062  F034         	movff	move@mR,returnHome@mR
  3548   001602  C063  F035         	movff	move@mR+1,returnHome@mR+1
  3549   001606  C065  F036         	movff	move@moveSequence,returnHome@moveSequence
  3550   00160A  C066  F037         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3551   00160E  C067  F038         	movff	move@straightTime,returnHome@straightTime
  3552   001612  C068  F039         	movff	move@straightTime+1,returnHome@straightTime+1
  3553   001616  C069  F03A         	movff	move@curMove,returnHome@curMove
  3554   00161A  C06A  F03B         	movff	move@straightSpeed,returnHome@straightSpeed
  3555   00161E  C06B  F03C         	movff	move@reverseDuration,returnHome@reverseDuration
  3556   001622  C06C  F03D         	movff	move@reverseDuration+1,returnHome@reverseDuration+1
  3557   001626  C06D  F03E         	movff	move@straightRamp,returnHome@straightRamp
  3558   00162A  C06E  F03F         	movff	move@turnSpeed,returnHome@turnSpeed
  3559   00162E  C06F  F040         	movff	move@turnDuration,returnHome@turnDuration
  3560   001632  C070  F041         	movff	move@turnRamp,returnHome@turnRamp
  3561   001636  EC1E  F00B         	call	_returnHome	;wreg free
  3562   00163A                     l571:
  3563   00163A  0012               	return		;funcret
  3564   00163C                     __end_of_move:
  3565                           	callstack 0
  3566                           
  3567 ;; *************** function _reverseShort *****************
  3568 ;; Defined at:
  3569 ;;		line 606 in file "dc_motor.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  3572 ;;		 -> main@motorL(10), 
  3573 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  3574 ;;		 -> main@motorR(10), 
  3575 ;;  straightSpee    1   38[COMRAM] unsigned char 
  3576 ;;  straightRamp    1   39[COMRAM] unsigned char 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  cur_power       2   46[COMRAM] int 
  3579 ;;  i               2   44[COMRAM] int 
  3580 ;;  shortReverse    1   43[COMRAM] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3590 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3594 ;;Total ram usage:       14 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 8
  3597 ;; This function calls:
  3598 ;;		_setMotorPWM
  3599 ;; This function is called by:
  3600 ;;		_move
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text3
  3605   003FBE                     __ptext3:
  3606                           	callstack 0
  3607   003FBE                     _reverseShort:
  3608                           	callstack 21
  3609   003FBE                     
  3610                           ;dc_motor.c: 606: void reverseShort(DC_motor *mL, DC_motor *mR, char straightSpeed, unsi
      +                          gned char straightRamp);dc_motor.c: 607: {;dc_motor.c: 608:     unsigned char shortRever
      +                          seDuration = 30;
  3611   003FBE  0E1E               	movlw	30
  3612   003FC0  6E2C               	movwf	reverseShort@shortReverseDuration^0,c
  3613   003FC2                     
  3614                           ;dc_motor.c: 610:     mL->direction = 0;
  3615   003FC2  EE20 F001          	lfsr	2,1
  3616   003FC6  5023               	movf	reverseShort@mL^0,w,c
  3617   003FC8  26D9               	addwf	fsr2l,f,c
  3618   003FCA  5024               	movf	(reverseShort@mL+1)^0,w,c
  3619   003FCC  22DA               	addwfc	fsr2h,f,c
  3620   003FCE  6ADF               	clrf	indf2,c
  3621   003FD0                     
  3622                           ;dc_motor.c: 611:     mR->direction = 0;
  3623   003FD0  EE20 F001          	lfsr	2,1
  3624   003FD4  5025               	movf	reverseShort@mR^0,w,c
  3625   003FD6  26D9               	addwf	fsr2l,f,c
  3626   003FD8  5026               	movf	(reverseShort@mR+1)^0,w,c
  3627   003FDA  22DA               	addwfc	fsr2h,f,c
  3628   003FDC  6ADF               	clrf	indf2,c
  3629                           
  3630                           ;dc_motor.c: 612:     int i;;dc_motor.c: 613:     int cur_power;;dc_motor.c: 614:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  3631   003FDE  0E00               	movlw	0
  3632   003FE0  6E30               	movwf	(reverseShort@cur_power+1)^0,c
  3633   003FE2  0E01               	movlw	1
  3634   003FE4  6E2F               	movwf	reverseShort@cur_power^0,c
  3635   003FE6  EF3F  F020         	goto	l3636
  3636   003FEA                     l3622:
  3637                           
  3638                           ;dc_motor.c: 615:         mL->power = cur_power+mL->compensation;
  3639   003FEA  EE20 F009          	lfsr	2,9
  3640   003FEE  5023               	movf	reverseShort@mL^0,w,c
  3641   003FF0  26D9               	addwf	fsr2l,f,c
  3642   003FF2  5024               	movf	(reverseShort@mL+1)^0,w,c
  3643   003FF4  22DA               	addwfc	fsr2h,f,c
  3644   003FF6  50DF               	movf	indf2,w,c
  3645   003FF8  242F               	addwf	reverseShort@cur_power^0,w,c
  3646   003FFA  C023  FFD9         	movff	reverseShort@mL,fsr2l
  3647   003FFE  C024  FFDA         	movff	reverseShort@mL+1,fsr2h
  3648   004002  6EDF               	movwf	indf2,c
  3649                           
  3650                           ;dc_motor.c: 616:         mR->power = cur_power+mR->compensation;
  3651   004004  EE20 F009          	lfsr	2,9
  3652   004008  5025               	movf	reverseShort@mR^0,w,c
  3653   00400A  26D9               	addwf	fsr2l,f,c
  3654   00400C  5026               	movf	(reverseShort@mR+1)^0,w,c
  3655   00400E  22DA               	addwfc	fsr2h,f,c
  3656   004010  50DF               	movf	indf2,w,c
  3657   004012  242F               	addwf	reverseShort@cur_power^0,w,c
  3658   004014  C025  FFD9         	movff	reverseShort@mR,fsr2l
  3659   004018  C026  FFDA         	movff	reverseShort@mR+1,fsr2h
  3660   00401C  6EDF               	movwf	indf2,c
  3661   00401E                     
  3662                           ;dc_motor.c: 617:         setMotorPWM(mL);
  3663   00401E  C023  F01D         	movff	reverseShort@mL,setMotorPWM@m
  3664   004022  C024  F01E         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3665   004026  EC97  F024         	call	_setMotorPWM	;wreg free
  3666   00402A                     
  3667                           ;dc_motor.c: 618:         setMotorPWM(mR);
  3668   00402A  C025  F01D         	movff	reverseShort@mR,setMotorPWM@m
  3669   00402E  C026  F01E         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3670   004032  EC97  F024         	call	_setMotorPWM	;wreg free
  3671   004036                     
  3672                           ;dc_motor.c: 619:         for (i=0;i<straightRamp;i++) {
  3673   004036  0E00               	movlw	0
  3674   004038  6E2E               	movwf	(reverseShort@i+1)^0,c
  3675   00403A  0E00               	movlw	0
  3676   00403C  6E2D               	movwf	reverseShort@i^0,c
  3677   00403E  EF2B  F020         	goto	l742
  3678   004042                     l3630:
  3679                           
  3680                           ;dc_motor.c: 620:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3681   004042  0E68               	movlw	104
  3682   004044  6E29               	movwf	??_reverseShort^0,c
  3683   004046  0EE4               	movlw	228
  3684   004048                     u4277:
  3685   004048  2EE8               	decfsz	wreg,f,c
  3686   00404A  D7FE               	bra	u4277
  3687   00404C  2E29               	decfsz	??_reverseShort^0,f,c
  3688   00404E  D7FC               	bra	u4277
  3689   004050  D000               	nop2	
  3690   004052                     
  3691                           ;dc_motor.c: 621:         }
  3692   004052  4A2D               	infsnz	reverseShort@i^0,f,c
  3693   004054  2A2E               	incf	(reverseShort@i+1)^0,f,c
  3694   004056                     l742:
  3695   004056  5028               	movf	reverseShort@straightRamp^0,w,c
  3696   004058  6E29               	movwf	??_reverseShort^0,c
  3697   00405A  6A2A               	clrf	(??_reverseShort+1)^0,c
  3698   00405C  5029               	movf	??_reverseShort^0,w,c
  3699   00405E  5C2D               	subwf	reverseShort@i^0,w,c
  3700   004060  502E               	movf	(reverseShort@i+1)^0,w,c
  3701   004062  0A80               	xorlw	128
  3702   004064  6E2B               	movwf	(??_reverseShort+2)^0,c
  3703   004066  502A               	movf	(??_reverseShort+1)^0,w,c
  3704   004068  0A80               	xorlw	128
  3705   00406A  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3706   00406C  A0D8               	btfss	status,0,c
  3707   00406E  EF3B  F020         	goto	u2431
  3708   004072  EF3D  F020         	goto	u2430
  3709   004076                     u2431:
  3710   004076  EF21  F020         	goto	l3630
  3711   00407A                     u2430:
  3712   00407A                     
  3713                           ;dc_motor.c: 622:     }
  3714   00407A  4A2F               	infsnz	reverseShort@cur_power^0,f,c
  3715   00407C  2A30               	incf	(reverseShort@cur_power+1)^0,f,c
  3716   00407E                     l3636:
  3717   00407E  5027               	movf	reverseShort@straightSpeed^0,w,c
  3718   004080  6E29               	movwf	??_reverseShort^0,c
  3719   004082  6A2A               	clrf	(??_reverseShort+1)^0,c
  3720   004084  502F               	movf	reverseShort@cur_power^0,w,c
  3721   004086  5C29               	subwf	??_reverseShort^0,w,c
  3722   004088  502A               	movf	(??_reverseShort+1)^0,w,c
  3723   00408A  0A80               	xorlw	128
  3724   00408C  6E2B               	movwf	(??_reverseShort+2)^0,c
  3725   00408E  5030               	movf	(reverseShort@cur_power+1)^0,w,c
  3726   004090  0A80               	xorlw	128
  3727   004092  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3728   004094  B0D8               	btfsc	status,0,c
  3729   004096  EF4F  F020         	goto	u2441
  3730   00409A  EF51  F020         	goto	u2440
  3731   00409E                     u2441:
  3732   00409E  EFF5  F01F         	goto	l3622
  3733   0040A2                     u2440:
  3734   0040A2                     
  3735                           ;dc_motor.c: 624:     for (i=0;i<shortReverseDuration;i++) {
  3736   0040A2  0E00               	movlw	0
  3737   0040A4  6E2E               	movwf	(reverseShort@i+1)^0,c
  3738   0040A6  0E00               	movlw	0
  3739   0040A8  6E2D               	movwf	reverseShort@i^0,c
  3740   0040AA  EF61  F020         	goto	l746
  3741   0040AE                     l3640:
  3742                           
  3743                           ;dc_motor.c: 625:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3744   0040AE  0E68               	movlw	104
  3745   0040B0  6E29               	movwf	??_reverseShort^0,c
  3746   0040B2  0EE4               	movlw	228
  3747   0040B4                     u4287:
  3748   0040B4  2EE8               	decfsz	wreg,f,c
  3749   0040B6  D7FE               	bra	u4287
  3750   0040B8  2E29               	decfsz	??_reverseShort^0,f,c
  3751   0040BA  D7FC               	bra	u4287
  3752   0040BC  D000               	nop2	
  3753   0040BE                     
  3754                           ;dc_motor.c: 626:         }
  3755   0040BE  4A2D               	infsnz	reverseShort@i^0,f,c
  3756   0040C0  2A2E               	incf	(reverseShort@i+1)^0,f,c
  3757   0040C2                     l746:
  3758   0040C2  502C               	movf	reverseShort@shortReverseDuration^0,w,c
  3759   0040C4  6E29               	movwf	??_reverseShort^0,c
  3760   0040C6  6A2A               	clrf	(??_reverseShort+1)^0,c
  3761   0040C8  5029               	movf	??_reverseShort^0,w,c
  3762   0040CA  5C2D               	subwf	reverseShort@i^0,w,c
  3763   0040CC  502E               	movf	(reverseShort@i+1)^0,w,c
  3764   0040CE  0A80               	xorlw	128
  3765   0040D0  6E2B               	movwf	(??_reverseShort+2)^0,c
  3766   0040D2  502A               	movf	(??_reverseShort+1)^0,w,c
  3767   0040D4  0A80               	xorlw	128
  3768   0040D6  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3769   0040D8  A0D8               	btfss	status,0,c
  3770   0040DA  EF71  F020         	goto	u2451
  3771   0040DE  EF73  F020         	goto	u2450
  3772   0040E2                     u2451:
  3773   0040E2  EF57  F020         	goto	l3640
  3774   0040E6                     u2450:
  3775   0040E6                     
  3776                           ;dc_motor.c: 628:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  3777   0040E6  C027  F02F         	movff	reverseShort@straightSpeed,reverseShort@cur_power
  3778   0040EA  6A30               	clrf	(reverseShort@cur_power+1)^0,c
  3779   0040EC                     l3644:
  3780   0040EC  BE30               	btfsc	(reverseShort@cur_power+1)^0,7,c
  3781   0040EE  EF7D  F020         	goto	u2460
  3782   0040F2  EF7B  F020         	goto	u2461
  3783   0040F6                     u2461:
  3784   0040F6  EF7F  F020         	goto	l3648
  3785   0040FA                     u2460:
  3786   0040FA  EFCC  F020         	goto	l3664
  3787   0040FE                     l3648:
  3788                           
  3789                           ;dc_motor.c: 629:         mL->power = cur_power+mL->compensation;
  3790   0040FE  EE20 F009          	lfsr	2,9
  3791   004102  5023               	movf	reverseShort@mL^0,w,c
  3792   004104  26D9               	addwf	fsr2l,f,c
  3793   004106  5024               	movf	(reverseShort@mL+1)^0,w,c
  3794   004108  22DA               	addwfc	fsr2h,f,c
  3795   00410A  50DF               	movf	indf2,w,c
  3796   00410C  242F               	addwf	reverseShort@cur_power^0,w,c
  3797   00410E  C023  FFD9         	movff	reverseShort@mL,fsr2l
  3798   004112  C024  FFDA         	movff	reverseShort@mL+1,fsr2h
  3799   004116  6EDF               	movwf	indf2,c
  3800                           
  3801                           ;dc_motor.c: 630:         mR->power = cur_power+mR->compensation;
  3802   004118  EE20 F009          	lfsr	2,9
  3803   00411C  5025               	movf	reverseShort@mR^0,w,c
  3804   00411E  26D9               	addwf	fsr2l,f,c
  3805   004120  5026               	movf	(reverseShort@mR+1)^0,w,c
  3806   004122  22DA               	addwfc	fsr2h,f,c
  3807   004124  50DF               	movf	indf2,w,c
  3808   004126  242F               	addwf	reverseShort@cur_power^0,w,c
  3809   004128  C025  FFD9         	movff	reverseShort@mR,fsr2l
  3810   00412C  C026  FFDA         	movff	reverseShort@mR+1,fsr2h
  3811   004130  6EDF               	movwf	indf2,c
  3812   004132                     
  3813                           ;dc_motor.c: 631:         setMotorPWM(mL);
  3814   004132  C023  F01D         	movff	reverseShort@mL,setMotorPWM@m
  3815   004136  C024  F01E         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3816   00413A  EC97  F024         	call	_setMotorPWM	;wreg free
  3817   00413E                     
  3818                           ;dc_motor.c: 632:         setMotorPWM(mR);
  3819   00413E  C025  F01D         	movff	reverseShort@mR,setMotorPWM@m
  3820   004142  C026  F01E         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3821   004146  EC97  F024         	call	_setMotorPWM	;wreg free
  3822   00414A                     
  3823                           ;dc_motor.c: 633:         for (i=0;i<straightRamp;i++) {
  3824   00414A  0E00               	movlw	0
  3825   00414C  6E2E               	movwf	(reverseShort@i+1)^0,c
  3826   00414E  0E00               	movlw	0
  3827   004150  6E2D               	movwf	reverseShort@i^0,c
  3828   004152  EFB5  F020         	goto	l751
  3829   004156                     l3656:
  3830                           
  3831                           ;dc_motor.c: 634:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3832   004156  0E68               	movlw	104
  3833   004158  6E29               	movwf	??_reverseShort^0,c
  3834   00415A  0EE4               	movlw	228
  3835   00415C                     u4297:
  3836   00415C  2EE8               	decfsz	wreg,f,c
  3837   00415E  D7FE               	bra	u4297
  3838   004160  2E29               	decfsz	??_reverseShort^0,f,c
  3839   004162  D7FC               	bra	u4297
  3840   004164  D000               	nop2	
  3841   004166                     
  3842                           ;dc_motor.c: 635:         }
  3843   004166  4A2D               	infsnz	reverseShort@i^0,f,c
  3844   004168  2A2E               	incf	(reverseShort@i+1)^0,f,c
  3845   00416A                     l751:
  3846   00416A  5028               	movf	reverseShort@straightRamp^0,w,c
  3847   00416C  6E29               	movwf	??_reverseShort^0,c
  3848   00416E  6A2A               	clrf	(??_reverseShort+1)^0,c
  3849   004170  5029               	movf	??_reverseShort^0,w,c
  3850   004172  5C2D               	subwf	reverseShort@i^0,w,c
  3851   004174  502E               	movf	(reverseShort@i+1)^0,w,c
  3852   004176  0A80               	xorlw	128
  3853   004178  6E2B               	movwf	(??_reverseShort+2)^0,c
  3854   00417A  502A               	movf	(??_reverseShort+1)^0,w,c
  3855   00417C  0A80               	xorlw	128
  3856   00417E  582B               	subwfb	(??_reverseShort+2)^0,w,c
  3857   004180  A0D8               	btfss	status,0,c
  3858   004182  EFC5  F020         	goto	u2471
  3859   004186  EFC7  F020         	goto	u2470
  3860   00418A                     u2471:
  3861   00418A  EFAB  F020         	goto	l3656
  3862   00418E                     u2470:
  3863   00418E                     
  3864                           ;dc_motor.c: 636:     }
  3865   00418E  062F               	decf	reverseShort@cur_power^0,f,c
  3866   004190  A0D8               	btfss	status,0,c
  3867   004192  0630               	decf	(reverseShort@cur_power+1)^0,f,c
  3868   004194  EF76  F020         	goto	l3644
  3869   004198                     l3664:
  3870                           
  3871                           ;dc_motor.c: 637:     mL->power = 0;
  3872   004198  C023  FFD9         	movff	reverseShort@mL,fsr2l
  3873   00419C  C024  FFDA         	movff	reverseShort@mL+1,fsr2h
  3874   0041A0  6ADF               	clrf	indf2,c
  3875                           
  3876                           ;dc_motor.c: 638:     mR->power = 0;
  3877   0041A2  C025  FFD9         	movff	reverseShort@mR,fsr2l
  3878   0041A6  C026  FFDA         	movff	reverseShort@mR+1,fsr2h
  3879   0041AA  6ADF               	clrf	indf2,c
  3880   0041AC  0012               	return		;funcret
  3881   0041AE                     __end_of_reverseShort:
  3882                           	callstack 0
  3883                           
  3884 ;; *************** function _returnHome *****************
  3885 ;; Defined at:
  3886 ;;		line 190 in file "dc_motor.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  mL              2   49[COMRAM] PTR struct DC_motor
  3889 ;;		 -> main@motorL(10), 
  3890 ;;  mR              2   51[COMRAM] PTR struct DC_motor
  3891 ;;		 -> main@motorR(10), 
  3892 ;;  moveSequence    2   53[COMRAM] PTR unsigned char 
  3893 ;;		 -> main@moveSequence(40), 
  3894 ;;  straightTime    2   55[COMRAM] PTR unsigned int 
  3895 ;;		 -> main@straightTime(82), 
  3896 ;;  curMove         1   57[COMRAM] unsigned char 
  3897 ;;  straightSpee    1   58[COMRAM] unsigned char 
  3898 ;;  reverseDurat    2   59[COMRAM] unsigned int 
  3899 ;;  straightRamp    1   61[COMRAM] unsigned char 
  3900 ;;  turnSpeed       1   62[COMRAM] unsigned char 
  3901 ;;  turnDuration    1   63[COMRAM] unsigned char 
  3902 ;;  turnRamp        1   64[COMRAM] unsigned char 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  i               1   71[COMRAM] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3914 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;Total ram usage:       23 bytes
  3919 ;; Hardware stack levels used: 1
  3920 ;; Hardware stack levels required when called: 9
  3921 ;; This function calls:
  3922 ;;		_fullSpeedAhead
  3923 ;;		_get16bitTMR0val
  3924 ;;		_resetTimer
  3925 ;;		_reverseOneSquare
  3926 ;;		_reverseWallAdjust
  3927 ;;		_stop
  3928 ;;		_turnLeft
  3929 ;;		_turnRight
  3930 ;;		_white_Light
  3931 ;; This function is called by:
  3932 ;;		_move
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text4
  3937   00163C                     __ptext4:
  3938                           	callstack 0
  3939   00163C                     _returnHome:
  3940                           	callstack 20
  3941   00163C                     
  3942                           ;dc_motor.c: 190: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned int reverseDur
      +                          ation, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned 
      +                          char turnRamp);dc_motor.c: 191: {;dc_motor.c: 192:     white_Light(0);
  3943   00163C  0E00               	movlw	0
  3944   00163E  EC4F  F02A         	call	_white_Light
  3945   001642                     
  3946                           ;dc_motor.c: 193:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3947   001642  C032  F023         	movff	returnHome@mL,turnLeft@mL
  3948   001646  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  3949   00164A  C034  F025         	movff	returnHome@mR,turnLeft@mR
  3950   00164E  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  3951   001652  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3952   001656  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3953   00165A  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3954   00165E  ECAA  F023         	call	_turnLeft	;wreg free
  3955   001662                     
  3956                           ;dc_motor.c: 194:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3957   001662  0E05               	movlw	5
  3958   001664  6E43               	movwf	(??_returnHome+1)^0,c
  3959   001666  0E0F               	movlw	15
  3960   001668  6E42               	movwf	??_returnHome^0,c
  3961   00166A  0EF1               	movlw	241
  3962   00166C                     u4307:
  3963   00166C  2EE8               	decfsz	wreg,f,c
  3964   00166E  D7FE               	bra	u4307
  3965   001670  2E42               	decfsz	??_returnHome^0,f,c
  3966   001672  D7FC               	bra	u4307
  3967   001674  2E43               	decfsz	(??_returnHome+1)^0,f,c
  3968   001676  D7FA               	bra	u4307
  3969   001678  0000               	nop	
  3970   00167A                     
  3971                           ;dc_motor.c: 195:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3972   00167A  C032  F023         	movff	returnHome@mL,turnLeft@mL
  3973   00167E  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  3974   001682  C034  F025         	movff	returnHome@mR,turnLeft@mR
  3975   001686  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  3976   00168A  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3977   00168E  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3978   001692  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3979   001696  ECAA  F023         	call	_turnLeft	;wreg free
  3980   00169A                     
  3981                           ;dc_motor.c: 196:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3982   00169A  0E05               	movlw	5
  3983   00169C  6E43               	movwf	(??_returnHome+1)^0,c
  3984   00169E  0E0F               	movlw	15
  3985   0016A0  6E42               	movwf	??_returnHome^0,c
  3986   0016A2  0EF1               	movlw	241
  3987   0016A4                     u4317:
  3988   0016A4  2EE8               	decfsz	wreg,f,c
  3989   0016A6  D7FE               	bra	u4317
  3990   0016A8  2E42               	decfsz	??_returnHome^0,f,c
  3991   0016AA  D7FC               	bra	u4317
  3992   0016AC  2E43               	decfsz	(??_returnHome+1)^0,f,c
  3993   0016AE  D7FA               	bra	u4317
  3994   0016B0  0000               	nop	
  3995   0016B2                     
  3996                           ;dc_motor.c: 197:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3997   0016B2  C032  F023         	movff	returnHome@mL,turnLeft@mL
  3998   0016B6  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  3999   0016BA  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4000   0016BE  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4001   0016C2  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4002   0016C6  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4003   0016CA  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4004   0016CE  ECAA  F023         	call	_turnLeft	;wreg free
  4005   0016D2                     
  4006                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4007   0016D2  0E05               	movlw	5
  4008   0016D4  6E43               	movwf	(??_returnHome+1)^0,c
  4009   0016D6  0E0F               	movlw	15
  4010   0016D8  6E42               	movwf	??_returnHome^0,c
  4011   0016DA  0EF1               	movlw	241
  4012   0016DC                     u4327:
  4013   0016DC  2EE8               	decfsz	wreg,f,c
  4014   0016DE  D7FE               	bra	u4327
  4015   0016E0  2E42               	decfsz	??_returnHome^0,f,c
  4016   0016E2  D7FC               	bra	u4327
  4017   0016E4  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4018   0016E6  D7FA               	bra	u4327
  4019   0016E8  0000               	nop	
  4020   0016EA                     
  4021                           ;dc_motor.c: 199:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4022   0016EA  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4023   0016EE  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4024   0016F2  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4025   0016F6  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4026   0016FA  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4027   0016FE  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4028   001702  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4029   001706  ECAA  F023         	call	_turnLeft	;wreg free
  4030   00170A                     
  4031                           ;dc_motor.c: 200:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4032   00170A  0E05               	movlw	5
  4033   00170C  6E43               	movwf	(??_returnHome+1)^0,c
  4034   00170E  0E0F               	movlw	15
  4035   001710  6E42               	movwf	??_returnHome^0,c
  4036   001712  0EF1               	movlw	241
  4037   001714                     u4337:
  4038   001714  2EE8               	decfsz	wreg,f,c
  4039   001716  D7FE               	bra	u4337
  4040   001718  2E42               	decfsz	??_returnHome^0,f,c
  4041   00171A  D7FC               	bra	u4337
  4042   00171C  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4043   00171E  D7FA               	bra	u4337
  4044   001720  0000               	nop	
  4045   001722                     
  4046                           ;dc_motor.c: 201:     reverseWallAdjust(mL, mR, straightSpeed, straightRamp);
  4047   001722  C032  F023         	movff	returnHome@mL,reverseWallAdjust@mL
  4048   001726  C033  F024         	movff	returnHome@mL+1,reverseWallAdjust@mL+1
  4049   00172A  C034  F025         	movff	returnHome@mR,reverseWallAdjust@mR
  4050   00172E  C035  F026         	movff	returnHome@mR+1,reverseWallAdjust@mR+1
  4051   001732  C03B  F027         	movff	returnHome@straightSpeed,reverseWallAdjust@straightSpeed
  4052   001736  C03E  F028         	movff	returnHome@straightRamp,reverseWallAdjust@straightRamp
  4053   00173A  ECE5  F01E         	call	_reverseWallAdjust	;wreg free
  4054   00173E                     
  4055                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4056   00173E  0E05               	movlw	5
  4057   001740  6E43               	movwf	(??_returnHome+1)^0,c
  4058   001742  0E0F               	movlw	15
  4059   001744  6E42               	movwf	??_returnHome^0,c
  4060   001746  0EF1               	movlw	241
  4061   001748                     u4347:
  4062   001748  2EE8               	decfsz	wreg,f,c
  4063   00174A  D7FE               	bra	u4347
  4064   00174C  2E42               	decfsz	??_returnHome^0,f,c
  4065   00174E  D7FC               	bra	u4347
  4066   001750  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4067   001752  D7FA               	bra	u4347
  4068   001754  0000               	nop	
  4069   001756                     
  4070                           ;dc_motor.c: 203:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4071   001756  C032  F023         	movff	returnHome@mL,fullSpeedAhead@mL
  4072   00175A  C033  F024         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4073   00175E  C034  F025         	movff	returnHome@mR,fullSpeedAhead@mR
  4074   001762  C035  F026         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4075   001766  C03B  F027         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4076   00176A  C03E  F028         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4077   00176E  EC57  F026         	call	_fullSpeedAhead	;wreg free
  4078   001772                     
  4079                           ;dc_motor.c: 204:     resetTimer();
  4080   001772  ECDF  F02A         	call	_resetTimer	;wreg free
  4081   001776                     l3692:
  4082   001776  503A               	movf	returnHome@curMove^0,w,c
  4083   001778  0D02               	mullw	2
  4084   00177A  CFF3 F042          	movff	prodl,??_returnHome
  4085   00177E  CFF4 F043          	movff	prodh,??_returnHome+1
  4086   001782  5042               	movf	??_returnHome^0,w,c
  4087   001784  2438               	addwf	returnHome@straightTime^0,w,c
  4088   001786  6ED9               	movwf	fsr2l,c
  4089   001788  5043               	movf	(??_returnHome+1)^0,w,c
  4090   00178A  2039               	addwfc	(returnHome@straightTime+1)^0,w,c
  4091   00178C  6EDA               	movwf	fsr2h,c
  4092   00178E  CFDE F044          	movff	postinc2,??_returnHome+2
  4093   001792  CFDD F045          	movff	postdec2,??_returnHome+3
  4094   001796  0E58               	movlw	88
  4095   001798  2444               	addwf	(??_returnHome+2)^0,w,c
  4096   00179A  6E46               	movwf	(??_returnHome+4)^0,c
  4097   00179C  0E1B               	movlw	27
  4098   00179E  2045               	addwfc	(??_returnHome+3)^0,w,c
  4099   0017A0  6E47               	movwf	(??_returnHome+5)^0,c
  4100   0017A2  EC00  F02A         	call	_get16bitTMR0val	;wreg free
  4101   0017A6  5046               	movf	(??_returnHome+4)^0,w,c
  4102   0017A8  5C10               	subwf	?_get16bitTMR0val^0,w,c
  4103   0017AA  5047               	movf	(??_returnHome+5)^0,w,c
  4104   0017AC  5811               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4105   0017AE  A0D8               	btfss	status,0,c
  4106   0017B0  EFDC  F00B         	goto	u2481
  4107   0017B4  EFDE  F00B         	goto	u2480
  4108   0017B8                     u2481:
  4109   0017B8  EFBB  F00B         	goto	l3692
  4110   0017BC                     u2480:
  4111   0017BC                     
  4112                           ;dc_motor.c: 206:     stop(mL, mR, straightRamp);
  4113   0017BC  C032  F023         	movff	returnHome@mL,stop@mL
  4114   0017C0  C033  F024         	movff	returnHome@mL+1,stop@mL+1
  4115   0017C4  C034  F025         	movff	returnHome@mR,stop@mR
  4116   0017C8  C035  F026         	movff	returnHome@mR+1,stop@mR+1
  4117   0017CC  C03E  F027         	movff	returnHome@straightRamp,stop@straightRamp
  4118   0017D0  ECD3  F025         	call	_stop	;wreg free
  4119   0017D4                     
  4120                           ;dc_motor.c: 208:     char i=curMove;
  4121   0017D4  C03A  F048         	movff	returnHome@curMove,returnHome@i
  4122                           
  4123                           ;dc_motor.c: 209:     while (i>0) {
  4124   0017D8  EFC2  F00E         	goto	l3788
  4125   0017DC                     l3698:
  4126                           
  4127                           ;dc_motor.c: 210:         i--;
  4128   0017DC  0648               	decf	returnHome@i^0,f,c
  4129   0017DE                     
  4130                           ;dc_motor.c: 212:         if (moveSequence[i] == 1) {
  4131   0017DE  5048               	movf	returnHome@i^0,w,c
  4132   0017E0  2436               	addwf	returnHome@moveSequence^0,w,c
  4133   0017E2  6ED9               	movwf	fsr2l,c
  4134   0017E4  0E00               	movlw	0
  4135   0017E6  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4136   0017E8  6EDA               	movwf	fsr2h,c
  4137   0017EA  04DE               	decf	postinc2,w,c
  4138   0017EC  A4D8               	btfss	status,2,c
  4139   0017EE  EFFB  F00B         	goto	u2491
  4140   0017F2  EFFD  F00B         	goto	u2490
  4141   0017F6                     u2491:
  4142   0017F6  EF37  F00C         	goto	l3708
  4143   0017FA                     u2490:
  4144   0017FA                     
  4145                           ;dc_motor.c: 213:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4146   0017FA  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4147   0017FE  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4148   001802  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4149   001806  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4150   00180A  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4151   00180E  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4152   001812  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4153   001816  ECAA  F023         	call	_turnLeft	;wreg free
  4154   00181A                     
  4155                           ;dc_motor.c: 214:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4156   00181A  0E05               	movlw	5
  4157   00181C  6E43               	movwf	(??_returnHome+1)^0,c
  4158   00181E  0E0F               	movlw	15
  4159   001820  6E42               	movwf	??_returnHome^0,c
  4160   001822  0EF1               	movlw	241
  4161   001824                     u4357:
  4162   001824  2EE8               	decfsz	wreg,f,c
  4163   001826  D7FE               	bra	u4357
  4164   001828  2E42               	decfsz	??_returnHome^0,f,c
  4165   00182A  D7FC               	bra	u4357
  4166   00182C  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4167   00182E  D7FA               	bra	u4357
  4168   001830  0000               	nop	
  4169   001832                     
  4170                           ;dc_motor.c: 215:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4171   001832  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4172   001836  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4173   00183A  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4174   00183E  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4175   001842  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4176   001846  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4177   00184A  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4178   00184E  ECAA  F023         	call	_turnLeft	;wreg free
  4179                           
  4180                           ;dc_motor.c: 216:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4181   001852  0E05               	movlw	5
  4182   001854  6E43               	movwf	(??_returnHome+1)^0,c
  4183   001856  0E0F               	movlw	15
  4184   001858  6E42               	movwf	??_returnHome^0,c
  4185   00185A  0EF1               	movlw	241
  4186   00185C                     u4367:
  4187   00185C  2EE8               	decfsz	wreg,f,c
  4188   00185E  D7FE               	bra	u4367
  4189   001860  2E42               	decfsz	??_returnHome^0,f,c
  4190   001862  D7FC               	bra	u4367
  4191   001864  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4192   001866  D7FA               	bra	u4367
  4193   001868  0000               	nop	
  4194                           
  4195                           ;dc_motor.c: 217:         }
  4196   00186A  EF69  F00E         	goto	l580
  4197   00186E                     l3708:
  4198   00186E  5048               	movf	returnHome@i^0,w,c
  4199   001870  2436               	addwf	returnHome@moveSequence^0,w,c
  4200   001872  6ED9               	movwf	fsr2l,c
  4201   001874  0E00               	movlw	0
  4202   001876  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4203   001878  6EDA               	movwf	fsr2h,c
  4204   00187A  0E02               	movlw	2
  4205   00187C  18DE               	xorwf	postinc2,w,c
  4206   00187E  A4D8               	btfss	status,2,c
  4207   001880  EF44  F00C         	goto	u2501
  4208   001884  EF46  F00C         	goto	u2500
  4209   001888                     u2501:
  4210   001888  EF80  F00C         	goto	l3716
  4211   00188C                     u2500:
  4212   00188C                     
  4213                           ;dc_motor.c: 220:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4214   00188C  C032  F023         	movff	returnHome@mL,turnRight@mL
  4215   001890  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4216   001894  C034  F025         	movff	returnHome@mR,turnRight@mR
  4217   001898  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4218   00189C  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4219   0018A0  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4220   0018A4  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4221   0018A8  ECBD  F022         	call	_turnRight	;wreg free
  4222   0018AC                     
  4223                           ;dc_motor.c: 221:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4224   0018AC  0E05               	movlw	5
  4225   0018AE  6E43               	movwf	(??_returnHome+1)^0,c
  4226   0018B0  0E0F               	movlw	15
  4227   0018B2  6E42               	movwf	??_returnHome^0,c
  4228   0018B4  0EF1               	movlw	241
  4229   0018B6                     u4377:
  4230   0018B6  2EE8               	decfsz	wreg,f,c
  4231   0018B8  D7FE               	bra	u4377
  4232   0018BA  2E42               	decfsz	??_returnHome^0,f,c
  4233   0018BC  D7FC               	bra	u4377
  4234   0018BE  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4235   0018C0  D7FA               	bra	u4377
  4236   0018C2  0000               	nop	
  4237   0018C4                     
  4238                           ;dc_motor.c: 222:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4239   0018C4  C032  F023         	movff	returnHome@mL,turnRight@mL
  4240   0018C8  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4241   0018CC  C034  F025         	movff	returnHome@mR,turnRight@mR
  4242   0018D0  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4243   0018D4  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4244   0018D8  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4245   0018DC  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4246   0018E0  ECBD  F022         	call	_turnRight	;wreg free
  4247                           
  4248                           ;dc_motor.c: 223:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4249   0018E4  0E05               	movlw	5
  4250   0018E6  6E43               	movwf	(??_returnHome+1)^0,c
  4251   0018E8  0E0F               	movlw	15
  4252   0018EA  6E42               	movwf	??_returnHome^0,c
  4253   0018EC  0EF1               	movlw	241
  4254   0018EE                     u4387:
  4255   0018EE  2EE8               	decfsz	wreg,f,c
  4256   0018F0  D7FE               	bra	u4387
  4257   0018F2  2E42               	decfsz	??_returnHome^0,f,c
  4258   0018F4  D7FC               	bra	u4387
  4259   0018F6  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4260   0018F8  D7FA               	bra	u4387
  4261   0018FA  0000               	nop	
  4262                           
  4263                           ;dc_motor.c: 224:         }
  4264   0018FC  EF69  F00E         	goto	l580
  4265   001900                     l3716:
  4266   001900  5048               	movf	returnHome@i^0,w,c
  4267   001902  2436               	addwf	returnHome@moveSequence^0,w,c
  4268   001904  6ED9               	movwf	fsr2l,c
  4269   001906  0E00               	movlw	0
  4270   001908  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4271   00190A  6EDA               	movwf	fsr2h,c
  4272   00190C  0E03               	movlw	3
  4273   00190E  18DE               	xorwf	postinc2,w,c
  4274   001910  A4D8               	btfss	status,2,c
  4275   001912  EF8D  F00C         	goto	u2511
  4276   001916  EF8F  F00C         	goto	u2510
  4277   00191A                     u2511:
  4278   00191A  EF01  F00D         	goto	l3730
  4279   00191E                     u2510:
  4280   00191E                     
  4281                           ;dc_motor.c: 227:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4282   00191E  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4283   001922  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4284   001926  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4285   00192A  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4286   00192E  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4287   001932  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4288   001936  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4289   00193A  ECAA  F023         	call	_turnLeft	;wreg free
  4290   00193E                     
  4291                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4292   00193E  0E05               	movlw	5
  4293   001940  6E43               	movwf	(??_returnHome+1)^0,c
  4294   001942  0E0F               	movlw	15
  4295   001944  6E42               	movwf	??_returnHome^0,c
  4296   001946  0EF1               	movlw	241
  4297   001948                     u4397:
  4298   001948  2EE8               	decfsz	wreg,f,c
  4299   00194A  D7FE               	bra	u4397
  4300   00194C  2E42               	decfsz	??_returnHome^0,f,c
  4301   00194E  D7FC               	bra	u4397
  4302   001950  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4303   001952  D7FA               	bra	u4397
  4304   001954  0000               	nop	
  4305   001956                     
  4306                           ;dc_motor.c: 229:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4307   001956  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4308   00195A  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4309   00195E  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4310   001962  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4311   001966  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4312   00196A  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4313   00196E  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4314   001972  ECAA  F023         	call	_turnLeft	;wreg free
  4315                           
  4316                           ;dc_motor.c: 230:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4317   001976  0E05               	movlw	5
  4318   001978  6E43               	movwf	(??_returnHome+1)^0,c
  4319   00197A  0E0F               	movlw	15
  4320   00197C  6E42               	movwf	??_returnHome^0,c
  4321   00197E  0EF1               	movlw	241
  4322   001980                     u4407:
  4323   001980  2EE8               	decfsz	wreg,f,c
  4324   001982  D7FE               	bra	u4407
  4325   001984  2E42               	decfsz	??_returnHome^0,f,c
  4326   001986  D7FC               	bra	u4407
  4327   001988  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4328   00198A  D7FA               	bra	u4407
  4329   00198C  0000               	nop	
  4330   00198E                     
  4331                           ;dc_motor.c: 231:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4332   00198E  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4333   001992  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4334   001996  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4335   00199A  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4336   00199E  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4337   0019A2  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4338   0019A6  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4339   0019AA  ECAA  F023         	call	_turnLeft	;wreg free
  4340   0019AE                     
  4341                           ;dc_motor.c: 232:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4342   0019AE  0E05               	movlw	5
  4343   0019B0  6E43               	movwf	(??_returnHome+1)^0,c
  4344   0019B2  0E0F               	movlw	15
  4345   0019B4  6E42               	movwf	??_returnHome^0,c
  4346   0019B6  0EF1               	movlw	241
  4347   0019B8                     u4417:
  4348   0019B8  2EE8               	decfsz	wreg,f,c
  4349   0019BA  D7FE               	bra	u4417
  4350   0019BC  2E42               	decfsz	??_returnHome^0,f,c
  4351   0019BE  D7FC               	bra	u4417
  4352   0019C0  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4353   0019C2  D7FA               	bra	u4417
  4354   0019C4  0000               	nop	
  4355                           
  4356                           ;dc_motor.c: 233:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4357   0019C6  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4358   0019CA  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4359   0019CE  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4360   0019D2  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4361   0019D6  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4362   0019DA  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4363   0019DE  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4364   0019E2  ECAA  F023         	call	_turnLeft	;wreg free
  4365   0019E6                     l3728:
  4366                           
  4367                           ;dc_motor.c: 234:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4368   0019E6  0E05               	movlw	5
  4369   0019E8  6E43               	movwf	(??_returnHome+1)^0,c
  4370   0019EA  0E0F               	movlw	15
  4371   0019EC  6E42               	movwf	??_returnHome^0,c
  4372   0019EE  0EF1               	movlw	241
  4373   0019F0                     u4427:
  4374   0019F0  2EE8               	decfsz	wreg,f,c
  4375   0019F2  D7FE               	bra	u4427
  4376   0019F4  2E42               	decfsz	??_returnHome^0,f,c
  4377   0019F6  D7FC               	bra	u4427
  4378   0019F8  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4379   0019FA  D7FA               	bra	u4427
  4380   0019FC  0000               	nop	
  4381                           
  4382                           ;dc_motor.c: 235:         }
  4383   0019FE  EF69  F00E         	goto	l580
  4384   001A02                     l3730:
  4385   001A02  5048               	movf	returnHome@i^0,w,c
  4386   001A04  2436               	addwf	returnHome@moveSequence^0,w,c
  4387   001A06  6ED9               	movwf	fsr2l,c
  4388   001A08  0E00               	movlw	0
  4389   001A0A  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4390   001A0C  6EDA               	movwf	fsr2h,c
  4391   001A0E  0E04               	movlw	4
  4392   001A10  18DE               	xorwf	postinc2,w,c
  4393   001A12  A4D8               	btfss	status,2,c
  4394   001A14  EF0E  F00D         	goto	u2521
  4395   001A18  EF10  F00D         	goto	u2520
  4396   001A1C                     u2521:
  4397   001A1C  EF5C  F00D         	goto	l3742
  4398   001A20                     u2520:
  4399   001A20                     
  4400                           ;dc_motor.c: 238:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4401   001A20  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4402   001A24  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4403   001A28  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4404   001A2C  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4405   001A30  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4406   001A34  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4407   001A38  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4408   001A3C  ECAA  F023         	call	_turnLeft	;wreg free
  4409   001A40                     
  4410                           ;dc_motor.c: 239:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4411   001A40  0E05               	movlw	5
  4412   001A42  6E43               	movwf	(??_returnHome+1)^0,c
  4413   001A44  0E0F               	movlw	15
  4414   001A46  6E42               	movwf	??_returnHome^0,c
  4415   001A48  0EF1               	movlw	241
  4416   001A4A                     u4437:
  4417   001A4A  2EE8               	decfsz	wreg,f,c
  4418   001A4C  D7FE               	bra	u4437
  4419   001A4E  2E42               	decfsz	??_returnHome^0,f,c
  4420   001A50  D7FC               	bra	u4437
  4421   001A52  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4422   001A54  D7FA               	bra	u4437
  4423   001A56  0000               	nop	
  4424   001A58                     
  4425                           ;dc_motor.c: 240:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4426   001A58  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4427   001A5C  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4428   001A60  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4429   001A64  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4430   001A68  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4431   001A6C  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4432   001A70  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4433   001A74  ECAA  F023         	call	_turnLeft	;wreg free
  4434                           
  4435                           ;dc_motor.c: 241:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4436   001A78  0E05               	movlw	5
  4437   001A7A  6E43               	movwf	(??_returnHome+1)^0,c
  4438   001A7C  0E0F               	movlw	15
  4439   001A7E  6E42               	movwf	??_returnHome^0,c
  4440   001A80  0EF1               	movlw	241
  4441   001A82                     u4447:
  4442   001A82  2EE8               	decfsz	wreg,f,c
  4443   001A84  D7FE               	bra	u4447
  4444   001A86  2E42               	decfsz	??_returnHome^0,f,c
  4445   001A88  D7FC               	bra	u4447
  4446   001A8A  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4447   001A8C  D7FA               	bra	u4447
  4448   001A8E  0000               	nop	
  4449   001A90                     
  4450                           ;dc_motor.c: 242:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4451   001A90  C032  F023         	movff	returnHome@mL,reverseOneSquare@mL
  4452   001A94  C033  F024         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4453   001A98  C034  F025         	movff	returnHome@mR,reverseOneSquare@mR
  4454   001A9C  C035  F026         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4455   001AA0  C03B  F027         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4456   001AA4  C03C  F028         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4457   001AA8  C03D  F029         	movff	returnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  4458   001AAC  C03E  F02A         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4459   001AB0  ECCE  F021         	call	_reverseOneSquare	;wreg free
  4460   001AB4  EFF3  F00C         	goto	l3728
  4461   001AB8                     l3742:
  4462   001AB8  5048               	movf	returnHome@i^0,w,c
  4463   001ABA  2436               	addwf	returnHome@moveSequence^0,w,c
  4464   001ABC  6ED9               	movwf	fsr2l,c
  4465   001ABE  0E00               	movlw	0
  4466   001AC0  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4467   001AC2  6EDA               	movwf	fsr2h,c
  4468   001AC4  0E05               	movlw	5
  4469   001AC6  18DE               	xorwf	postinc2,w,c
  4470   001AC8  A4D8               	btfss	status,2,c
  4471   001ACA  EF69  F00D         	goto	u2531
  4472   001ACE  EF6B  F00D         	goto	u2530
  4473   001AD2                     u2531:
  4474   001AD2  EFB7  F00D         	goto	l3754
  4475   001AD6                     u2530:
  4476   001AD6                     
  4477                           ;dc_motor.c: 247:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4478   001AD6  C032  F023         	movff	returnHome@mL,turnRight@mL
  4479   001ADA  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4480   001ADE  C034  F025         	movff	returnHome@mR,turnRight@mR
  4481   001AE2  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4482   001AE6  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4483   001AEA  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4484   001AEE  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4485   001AF2  ECBD  F022         	call	_turnRight	;wreg free
  4486   001AF6                     
  4487                           ;dc_motor.c: 248:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4488   001AF6  0E05               	movlw	5
  4489   001AF8  6E43               	movwf	(??_returnHome+1)^0,c
  4490   001AFA  0E0F               	movlw	15
  4491   001AFC  6E42               	movwf	??_returnHome^0,c
  4492   001AFE  0EF1               	movlw	241
  4493   001B00                     u4457:
  4494   001B00  2EE8               	decfsz	wreg,f,c
  4495   001B02  D7FE               	bra	u4457
  4496   001B04  2E42               	decfsz	??_returnHome^0,f,c
  4497   001B06  D7FC               	bra	u4457
  4498   001B08  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4499   001B0A  D7FA               	bra	u4457
  4500   001B0C  0000               	nop	
  4501   001B0E                     
  4502                           ;dc_motor.c: 249:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4503   001B0E  C032  F023         	movff	returnHome@mL,turnRight@mL
  4504   001B12  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4505   001B16  C034  F025         	movff	returnHome@mR,turnRight@mR
  4506   001B1A  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4507   001B1E  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4508   001B22  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4509   001B26  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4510   001B2A  ECBD  F022         	call	_turnRight	;wreg free
  4511                           
  4512                           ;dc_motor.c: 250:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4513   001B2E  0E05               	movlw	5
  4514   001B30  6E43               	movwf	(??_returnHome+1)^0,c
  4515   001B32  0E0F               	movlw	15
  4516   001B34  6E42               	movwf	??_returnHome^0,c
  4517   001B36  0EF1               	movlw	241
  4518   001B38                     u4467:
  4519   001B38  2EE8               	decfsz	wreg,f,c
  4520   001B3A  D7FE               	bra	u4467
  4521   001B3C  2E42               	decfsz	??_returnHome^0,f,c
  4522   001B3E  D7FC               	bra	u4467
  4523   001B40  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4524   001B42  D7FA               	bra	u4467
  4525   001B44  0000               	nop	
  4526   001B46                     
  4527                           ;dc_motor.c: 251:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4528   001B46  C032  F023         	movff	returnHome@mL,reverseOneSquare@mL
  4529   001B4A  C033  F024         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4530   001B4E  C034  F025         	movff	returnHome@mR,reverseOneSquare@mR
  4531   001B52  C035  F026         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4532   001B56  C03B  F027         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4533   001B5A  C03C  F028         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4534   001B5E  C03D  F029         	movff	returnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  4535   001B62  C03E  F02A         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4536   001B66  ECCE  F021         	call	_reverseOneSquare	;wreg free
  4537   001B6A  EFF3  F00C         	goto	l3728
  4538   001B6E                     l3754:
  4539   001B6E  5048               	movf	returnHome@i^0,w,c
  4540   001B70  2436               	addwf	returnHome@moveSequence^0,w,c
  4541   001B72  6ED9               	movwf	fsr2l,c
  4542   001B74  0E00               	movlw	0
  4543   001B76  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4544   001B78  6EDA               	movwf	fsr2h,c
  4545   001B7A  0E06               	movlw	6
  4546   001B7C  18DE               	xorwf	postinc2,w,c
  4547   001B7E  A4D8               	btfss	status,2,c
  4548   001B80  EFC4  F00D         	goto	u2541
  4549   001B84  EFC6  F00D         	goto	u2540
  4550   001B88                     u2541:
  4551   001B88  EF10  F00E         	goto	l3766
  4552   001B8C                     u2540:
  4553   001B8C                     
  4554                           ;dc_motor.c: 256:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4555   001B8C  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4556   001B90  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4557   001B94  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4558   001B98  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4559   001B9C  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4560   001BA0  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4561   001BA4  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4562   001BA8  ECAA  F023         	call	_turnLeft	;wreg free
  4563   001BAC                     
  4564                           ;dc_motor.c: 257:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4565   001BAC  0E05               	movlw	5
  4566   001BAE  6E43               	movwf	(??_returnHome+1)^0,c
  4567   001BB0  0E0F               	movlw	15
  4568   001BB2  6E42               	movwf	??_returnHome^0,c
  4569   001BB4  0EF1               	movlw	241
  4570   001BB6                     u4477:
  4571   001BB6  2EE8               	decfsz	wreg,f,c
  4572   001BB8  D7FE               	bra	u4477
  4573   001BBA  2E42               	decfsz	??_returnHome^0,f,c
  4574   001BBC  D7FC               	bra	u4477
  4575   001BBE  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4576   001BC0  D7FA               	bra	u4477
  4577   001BC2  0000               	nop	
  4578   001BC4                     
  4579                           ;dc_motor.c: 258:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4580   001BC4  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4581   001BC8  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4582   001BCC  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4583   001BD0  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4584   001BD4  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4585   001BD8  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4586   001BDC  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4587   001BE0  ECAA  F023         	call	_turnLeft	;wreg free
  4588                           
  4589                           ;dc_motor.c: 259:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4590   001BE4  0E05               	movlw	5
  4591   001BE6  6E43               	movwf	(??_returnHome+1)^0,c
  4592   001BE8  0E0F               	movlw	15
  4593   001BEA  6E42               	movwf	??_returnHome^0,c
  4594   001BEC  0EF1               	movlw	241
  4595   001BEE                     u4487:
  4596   001BEE  2EE8               	decfsz	wreg,f,c
  4597   001BF0  D7FE               	bra	u4487
  4598   001BF2  2E42               	decfsz	??_returnHome^0,f,c
  4599   001BF4  D7FC               	bra	u4487
  4600   001BF6  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4601   001BF8  D7FA               	bra	u4487
  4602   001BFA  0000               	nop	
  4603   001BFC                     
  4604                           ;dc_motor.c: 260:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4605   001BFC  C032  F023         	movff	returnHome@mL,turnLeft@mL
  4606   001C00  C033  F024         	movff	returnHome@mL+1,turnLeft@mL+1
  4607   001C04  C034  F025         	movff	returnHome@mR,turnLeft@mR
  4608   001C08  C035  F026         	movff	returnHome@mR+1,turnLeft@mR+1
  4609   001C0C  C03F  F027         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4610   001C10  C040  F028         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4611   001C14  C041  F029         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4612   001C18  ECAA  F023         	call	_turnLeft	;wreg free
  4613   001C1C  EFF3  F00C         	goto	l3728
  4614   001C20                     l3766:
  4615   001C20  5048               	movf	returnHome@i^0,w,c
  4616   001C22  2436               	addwf	returnHome@moveSequence^0,w,c
  4617   001C24  6ED9               	movwf	fsr2l,c
  4618   001C26  0E00               	movlw	0
  4619   001C28  2037               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4620   001C2A  6EDA               	movwf	fsr2h,c
  4621   001C2C  0E07               	movlw	7
  4622   001C2E  18DE               	xorwf	postinc2,w,c
  4623   001C30  A4D8               	btfss	status,2,c
  4624   001C32  EF1D  F00E         	goto	u2551
  4625   001C36  EF1F  F00E         	goto	u2550
  4626   001C3A                     u2551:
  4627   001C3A  EF69  F00E         	goto	l586
  4628   001C3E                     u2550:
  4629   001C3E                     
  4630                           ;dc_motor.c: 265:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4631   001C3E  C032  F023         	movff	returnHome@mL,turnRight@mL
  4632   001C42  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4633   001C46  C034  F025         	movff	returnHome@mR,turnRight@mR
  4634   001C4A  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4635   001C4E  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4636   001C52  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4637   001C56  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4638   001C5A  ECBD  F022         	call	_turnRight	;wreg free
  4639   001C5E                     
  4640                           ;dc_motor.c: 266:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4641   001C5E  0E05               	movlw	5
  4642   001C60  6E43               	movwf	(??_returnHome+1)^0,c
  4643   001C62  0E0F               	movlw	15
  4644   001C64  6E42               	movwf	??_returnHome^0,c
  4645   001C66  0EF1               	movlw	241
  4646   001C68                     u4497:
  4647   001C68  2EE8               	decfsz	wreg,f,c
  4648   001C6A  D7FE               	bra	u4497
  4649   001C6C  2E42               	decfsz	??_returnHome^0,f,c
  4650   001C6E  D7FC               	bra	u4497
  4651   001C70  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4652   001C72  D7FA               	bra	u4497
  4653   001C74  0000               	nop	
  4654   001C76                     
  4655                           ;dc_motor.c: 267:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4656   001C76  C032  F023         	movff	returnHome@mL,turnRight@mL
  4657   001C7A  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4658   001C7E  C034  F025         	movff	returnHome@mR,turnRight@mR
  4659   001C82  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4660   001C86  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4661   001C8A  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4662   001C8E  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4663   001C92  ECBD  F022         	call	_turnRight	;wreg free
  4664                           
  4665                           ;dc_motor.c: 268:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4666   001C96  0E05               	movlw	5
  4667   001C98  6E43               	movwf	(??_returnHome+1)^0,c
  4668   001C9A  0E0F               	movlw	15
  4669   001C9C  6E42               	movwf	??_returnHome^0,c
  4670   001C9E  0EF1               	movlw	241
  4671   001CA0                     u4507:
  4672   001CA0  2EE8               	decfsz	wreg,f,c
  4673   001CA2  D7FE               	bra	u4507
  4674   001CA4  2E42               	decfsz	??_returnHome^0,f,c
  4675   001CA6  D7FC               	bra	u4507
  4676   001CA8  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4677   001CAA  D7FA               	bra	u4507
  4678   001CAC  0000               	nop	
  4679   001CAE                     
  4680                           ;dc_motor.c: 269:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4681   001CAE  C032  F023         	movff	returnHome@mL,turnRight@mL
  4682   001CB2  C033  F024         	movff	returnHome@mL+1,turnRight@mL+1
  4683   001CB6  C034  F025         	movff	returnHome@mR,turnRight@mR
  4684   001CBA  C035  F026         	movff	returnHome@mR+1,turnRight@mR+1
  4685   001CBE  C03F  F027         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4686   001CC2  C040  F028         	movff	returnHome@turnDuration,turnRight@turnDuration
  4687   001CC6  C041  F029         	movff	returnHome@turnRamp,turnRight@turnRamp
  4688   001CCA  ECBD  F022         	call	_turnRight	;wreg free
  4689   001CCE  EFF3  F00C         	goto	l3728
  4690   001CD2                     l586:
  4691   001CD2                     l580:
  4692                           
  4693                           ;dc_motor.c: 273:         reverseWallAdjust(mL, mR, straightSpeed, straightRamp);
  4694   001CD2  C032  F023         	movff	returnHome@mL,reverseWallAdjust@mL
  4695   001CD6  C033  F024         	movff	returnHome@mL+1,reverseWallAdjust@mL+1
  4696   001CDA  C034  F025         	movff	returnHome@mR,reverseWallAdjust@mR
  4697   001CDE  C035  F026         	movff	returnHome@mR+1,reverseWallAdjust@mR+1
  4698   001CE2  C03B  F027         	movff	returnHome@straightSpeed,reverseWallAdjust@straightSpeed
  4699   001CE6  C03E  F028         	movff	returnHome@straightRamp,reverseWallAdjust@straightRamp
  4700   001CEA  ECE5  F01E         	call	_reverseWallAdjust	;wreg free
  4701   001CEE                     
  4702                           ;dc_motor.c: 274:         _delay((unsigned long)((50)*(64000000/4000.0)));
  4703   001CEE  0E05               	movlw	5
  4704   001CF0  6E43               	movwf	(??_returnHome+1)^0,c
  4705   001CF2  0E0F               	movlw	15
  4706   001CF4  6E42               	movwf	??_returnHome^0,c
  4707   001CF6  0EF1               	movlw	241
  4708   001CF8                     u4517:
  4709   001CF8  2EE8               	decfsz	wreg,f,c
  4710   001CFA  D7FE               	bra	u4517
  4711   001CFC  2E42               	decfsz	??_returnHome^0,f,c
  4712   001CFE  D7FC               	bra	u4517
  4713   001D00  2E43               	decfsz	(??_returnHome+1)^0,f,c
  4714   001D02  D7FA               	bra	u4517
  4715   001D04  0000               	nop	
  4716   001D06                     
  4717                           ;dc_motor.c: 275:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4718   001D06  C032  F023         	movff	returnHome@mL,fullSpeedAhead@mL
  4719   001D0A  C033  F024         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4720   001D0E  C034  F025         	movff	returnHome@mR,fullSpeedAhead@mR
  4721   001D12  C035  F026         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4722   001D16  C03B  F027         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4723   001D1A  C03E  F028         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4724   001D1E  EC57  F026         	call	_fullSpeedAhead	;wreg free
  4725   001D22                     
  4726                           ;dc_motor.c: 276:         resetTimer();
  4727   001D22  ECDF  F02A         	call	_resetTimer	;wreg free
  4728   001D26                     l3784:
  4729   001D26  5048               	movf	returnHome@i^0,w,c
  4730   001D28  0D02               	mullw	2
  4731   001D2A  CFF3 F042          	movff	prodl,??_returnHome
  4732   001D2E  CFF4 F043          	movff	prodh,??_returnHome+1
  4733   001D32  5042               	movf	??_returnHome^0,w,c
  4734   001D34  2438               	addwf	returnHome@straightTime^0,w,c
  4735   001D36  6ED9               	movwf	fsr2l,c
  4736   001D38  5043               	movf	(??_returnHome+1)^0,w,c
  4737   001D3A  2039               	addwfc	(returnHome@straightTime+1)^0,w,c
  4738   001D3C  6EDA               	movwf	fsr2h,c
  4739   001D3E  CFDE F044          	movff	postinc2,??_returnHome+2
  4740   001D42  CFDD F045          	movff	postdec2,??_returnHome+3
  4741   001D46  0EAC               	movlw	172
  4742   001D48  2444               	addwf	(??_returnHome+2)^0,w,c
  4743   001D4A  6E46               	movwf	(??_returnHome+4)^0,c
  4744   001D4C  0E0D               	movlw	13
  4745   001D4E  2045               	addwfc	(??_returnHome+3)^0,w,c
  4746   001D50  6E47               	movwf	(??_returnHome+5)^0,c
  4747   001D52  EC00  F02A         	call	_get16bitTMR0val	;wreg free
  4748   001D56  5046               	movf	(??_returnHome+4)^0,w,c
  4749   001D58  5C10               	subwf	?_get16bitTMR0val^0,w,c
  4750   001D5A  5047               	movf	(??_returnHome+5)^0,w,c
  4751   001D5C  5811               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4752   001D5E  A0D8               	btfss	status,0,c
  4753   001D60  EFB4  F00E         	goto	u2561
  4754   001D64  EFB6  F00E         	goto	u2560
  4755   001D68                     u2561:
  4756   001D68  EF93  F00E         	goto	l3784
  4757   001D6C                     u2560:
  4758   001D6C                     
  4759                           ;dc_motor.c: 278:         stop(mL, mR, straightRamp);
  4760   001D6C  C032  F023         	movff	returnHome@mL,stop@mL
  4761   001D70  C033  F024         	movff	returnHome@mL+1,stop@mL+1
  4762   001D74  C034  F025         	movff	returnHome@mR,stop@mR
  4763   001D78  C035  F026         	movff	returnHome@mR+1,stop@mR+1
  4764   001D7C  C03E  F027         	movff	returnHome@straightRamp,stop@straightRamp
  4765   001D80  ECD3  F025         	call	_stop	;wreg free
  4766   001D84                     l3788:
  4767                           
  4768                           ;dc_motor.c: 209:     while (i>0) {
  4769   001D84  5048               	movf	returnHome@i^0,w,c
  4770   001D86  A4D8               	btfss	status,2,c
  4771   001D88  EFC8  F00E         	goto	u2571
  4772   001D8C  EFCA  F00E         	goto	u2570
  4773   001D90                     u2571:
  4774   001D90  EFEE  F00B         	goto	l3698
  4775   001D94                     u2570:
  4776   001D94  0012               	return		;funcret
  4777   001D96                     __end_of_returnHome:
  4778                           	callstack 0
  4779                           
  4780 ;; *************** function _reverseWallAdjust *****************
  4781 ;; Defined at:
  4782 ;;		line 570 in file "dc_motor.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  4785 ;;		 -> main@motorL(10), 
  4786 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  4787 ;;		 -> main@motorR(10), 
  4788 ;;  straightSpee    1   38[COMRAM] unsigned char 
  4789 ;;  straightRamp    1   39[COMRAM] unsigned char 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  cur_power       2   47[COMRAM] int 
  4792 ;;  i               2   45[COMRAM] int 
  4793 ;;  reverseWallS    1   44[COMRAM] unsigned char 
  4794 ;;  reverseAdjus    1   43[COMRAM] unsigned char 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4804 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4806 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4807 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4808 ;;Total ram usage:       15 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; Hardware stack levels required when called: 8
  4811 ;; This function calls:
  4812 ;;		_setMotorPWM
  4813 ;; This function is called by:
  4814 ;;		_returnHome
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text5
  4819   003DCA                     __ptext5:
  4820                           	callstack 0
  4821   003DCA                     _reverseWallAdjust:
  4822                           	callstack 20
  4823   003DCA                     
  4824                           ;dc_motor.c: 570: void reverseWallAdjust(DC_motor *mL, DC_motor *mR, char straightSpeed,
      +                           unsigned char straightRamp);dc_motor.c: 571: {;dc_motor.c: 572:     unsigned char rever
      +                          seAdjustDuration = 60;
  4825   003DCA  0E3C               	movlw	60
  4826   003DCC  6E2C               	movwf	reverseWallAdjust@reverseAdjustDuration^0,c
  4827                           
  4828                           ;dc_motor.c: 573:     unsigned char reverseWallSpeed = 40;
  4829   003DCE  0E28               	movlw	40
  4830   003DD0  6E2D               	movwf	reverseWallAdjust@reverseWallSpeed^0,c
  4831   003DD2                     
  4832                           ;dc_motor.c: 575:     mL->direction = 0;
  4833   003DD2  EE20 F001          	lfsr	2,1
  4834   003DD6  5023               	movf	reverseWallAdjust@mL^0,w,c
  4835   003DD8  26D9               	addwf	fsr2l,f,c
  4836   003DDA  5024               	movf	(reverseWallAdjust@mL+1)^0,w,c
  4837   003DDC  22DA               	addwfc	fsr2h,f,c
  4838   003DDE  6ADF               	clrf	indf2,c
  4839   003DE0                     
  4840                           ;dc_motor.c: 576:     mR->direction = 0;
  4841   003DE0  EE20 F001          	lfsr	2,1
  4842   003DE4  5025               	movf	reverseWallAdjust@mR^0,w,c
  4843   003DE6  26D9               	addwf	fsr2l,f,c
  4844   003DE8  5026               	movf	(reverseWallAdjust@mR+1)^0,w,c
  4845   003DEA  22DA               	addwfc	fsr2h,f,c
  4846   003DEC  6ADF               	clrf	indf2,c
  4847                           
  4848                           ;dc_motor.c: 577:     int i;;dc_motor.c: 578:     int cur_power;;dc_motor.c: 579:     fo
      +                          r (cur_power=1;cur_power<=reverseWallSpeed;cur_power++) {
  4849   003DEE  0E00               	movlw	0
  4850   003DF0  6E31               	movwf	(reverseWallAdjust@cur_power+1)^0,c
  4851   003DF2  0E01               	movlw	1
  4852   003DF4  6E30               	movwf	reverseWallAdjust@cur_power^0,c
  4853   003DF6  EF47  F01F         	goto	l3408
  4854   003DFA                     l3394:
  4855                           
  4856                           ;dc_motor.c: 580:         mL->power = cur_power+mL->compensation;
  4857   003DFA  EE20 F009          	lfsr	2,9
  4858   003DFE  5023               	movf	reverseWallAdjust@mL^0,w,c
  4859   003E00  26D9               	addwf	fsr2l,f,c
  4860   003E02  5024               	movf	(reverseWallAdjust@mL+1)^0,w,c
  4861   003E04  22DA               	addwfc	fsr2h,f,c
  4862   003E06  50DF               	movf	indf2,w,c
  4863   003E08  2430               	addwf	reverseWallAdjust@cur_power^0,w,c
  4864   003E0A  C023  FFD9         	movff	reverseWallAdjust@mL,fsr2l
  4865   003E0E  C024  FFDA         	movff	reverseWallAdjust@mL+1,fsr2h
  4866   003E12  6EDF               	movwf	indf2,c
  4867                           
  4868                           ;dc_motor.c: 581:         mR->power = cur_power+mR->compensation;
  4869   003E14  EE20 F009          	lfsr	2,9
  4870   003E18  5025               	movf	reverseWallAdjust@mR^0,w,c
  4871   003E1A  26D9               	addwf	fsr2l,f,c
  4872   003E1C  5026               	movf	(reverseWallAdjust@mR+1)^0,w,c
  4873   003E1E  22DA               	addwfc	fsr2h,f,c
  4874   003E20  50DF               	movf	indf2,w,c
  4875   003E22  2430               	addwf	reverseWallAdjust@cur_power^0,w,c
  4876   003E24  C025  FFD9         	movff	reverseWallAdjust@mR,fsr2l
  4877   003E28  C026  FFDA         	movff	reverseWallAdjust@mR+1,fsr2h
  4878   003E2C  6EDF               	movwf	indf2,c
  4879   003E2E                     
  4880                           ;dc_motor.c: 582:         setMotorPWM(mL);
  4881   003E2E  C023  F01D         	movff	reverseWallAdjust@mL,setMotorPWM@m
  4882   003E32  C024  F01E         	movff	reverseWallAdjust@mL+1,setMotorPWM@m+1
  4883   003E36  EC97  F024         	call	_setMotorPWM	;wreg free
  4884   003E3A                     
  4885                           ;dc_motor.c: 583:         setMotorPWM(mR);
  4886   003E3A  C025  F01D         	movff	reverseWallAdjust@mR,setMotorPWM@m
  4887   003E3E  C026  F01E         	movff	reverseWallAdjust@mR+1,setMotorPWM@m+1
  4888   003E42  EC97  F024         	call	_setMotorPWM	;wreg free
  4889   003E46                     
  4890                           ;dc_motor.c: 584:         for (i=0;i<straightRamp;i++) {
  4891   003E46  0E00               	movlw	0
  4892   003E48  6E2F               	movwf	(reverseWallAdjust@i+1)^0,c
  4893   003E4A  0E00               	movlw	0
  4894   003E4C  6E2E               	movwf	reverseWallAdjust@i^0,c
  4895   003E4E  EF33  F01F         	goto	l725
  4896   003E52                     l3402:
  4897                           
  4898                           ;dc_motor.c: 585:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4899   003E52  0E68               	movlw	104
  4900   003E54  6E29               	movwf	??_reverseWallAdjust^0,c
  4901   003E56  0EE4               	movlw	228
  4902   003E58                     u4527:
  4903   003E58  2EE8               	decfsz	wreg,f,c
  4904   003E5A  D7FE               	bra	u4527
  4905   003E5C  2E29               	decfsz	??_reverseWallAdjust^0,f,c
  4906   003E5E  D7FC               	bra	u4527
  4907   003E60  D000               	nop2	
  4908   003E62                     
  4909                           ;dc_motor.c: 586:         }
  4910   003E62  4A2E               	infsnz	reverseWallAdjust@i^0,f,c
  4911   003E64  2A2F               	incf	(reverseWallAdjust@i+1)^0,f,c
  4912   003E66                     l725:
  4913   003E66  5028               	movf	reverseWallAdjust@straightRamp^0,w,c
  4914   003E68  6E29               	movwf	??_reverseWallAdjust^0,c
  4915   003E6A  6A2A               	clrf	(??_reverseWallAdjust+1)^0,c
  4916   003E6C  5029               	movf	??_reverseWallAdjust^0,w,c
  4917   003E6E  5C2E               	subwf	reverseWallAdjust@i^0,w,c
  4918   003E70  502F               	movf	(reverseWallAdjust@i+1)^0,w,c
  4919   003E72  0A80               	xorlw	128
  4920   003E74  6E2B               	movwf	(??_reverseWallAdjust+2)^0,c
  4921   003E76  502A               	movf	(??_reverseWallAdjust+1)^0,w,c
  4922   003E78  0A80               	xorlw	128
  4923   003E7A  582B               	subwfb	(??_reverseWallAdjust+2)^0,w,c
  4924   003E7C  A0D8               	btfss	status,0,c
  4925   003E7E  EF43  F01F         	goto	u2191
  4926   003E82  EF45  F01F         	goto	u2190
  4927   003E86                     u2191:
  4928   003E86  EF29  F01F         	goto	l3402
  4929   003E8A                     u2190:
  4930   003E8A                     
  4931                           ;dc_motor.c: 587:     }
  4932   003E8A  4A30               	infsnz	reverseWallAdjust@cur_power^0,f,c
  4933   003E8C  2A31               	incf	(reverseWallAdjust@cur_power+1)^0,f,c
  4934   003E8E                     l3408:
  4935   003E8E  502D               	movf	reverseWallAdjust@reverseWallSpeed^0,w,c
  4936   003E90  6E29               	movwf	??_reverseWallAdjust^0,c
  4937   003E92  6A2A               	clrf	(??_reverseWallAdjust+1)^0,c
  4938   003E94  5030               	movf	reverseWallAdjust@cur_power^0,w,c
  4939   003E96  5C29               	subwf	??_reverseWallAdjust^0,w,c
  4940   003E98  502A               	movf	(??_reverseWallAdjust+1)^0,w,c
  4941   003E9A  0A80               	xorlw	128
  4942   003E9C  6E2B               	movwf	(??_reverseWallAdjust+2)^0,c
  4943   003E9E  5031               	movf	(reverseWallAdjust@cur_power+1)^0,w,c
  4944   003EA0  0A80               	xorlw	128
  4945   003EA2  582B               	subwfb	(??_reverseWallAdjust+2)^0,w,c
  4946   003EA4  B0D8               	btfsc	status,0,c
  4947   003EA6  EF57  F01F         	goto	u2201
  4948   003EAA  EF59  F01F         	goto	u2200
  4949   003EAE                     u2201:
  4950   003EAE  EFFD  F01E         	goto	l3394
  4951   003EB2                     u2200:
  4952   003EB2                     
  4953                           ;dc_motor.c: 589:     for (i=0;i<reverseAdjustDuration;i++) {
  4954   003EB2  0E00               	movlw	0
  4955   003EB4  6E2F               	movwf	(reverseWallAdjust@i+1)^0,c
  4956   003EB6  0E00               	movlw	0
  4957   003EB8  6E2E               	movwf	reverseWallAdjust@i^0,c
  4958   003EBA  EF69  F01F         	goto	l729
  4959   003EBE                     l3412:
  4960                           
  4961                           ;dc_motor.c: 590:             _delay((unsigned long)((5)*(64000000/4000.0)));
  4962   003EBE  0E68               	movlw	104
  4963   003EC0  6E29               	movwf	??_reverseWallAdjust^0,c
  4964   003EC2  0EE4               	movlw	228
  4965   003EC4                     u4537:
  4966   003EC4  2EE8               	decfsz	wreg,f,c
  4967   003EC6  D7FE               	bra	u4537
  4968   003EC8  2E29               	decfsz	??_reverseWallAdjust^0,f,c
  4969   003ECA  D7FC               	bra	u4537
  4970   003ECC  D000               	nop2	
  4971   003ECE                     
  4972                           ;dc_motor.c: 591:         }
  4973   003ECE  4A2E               	infsnz	reverseWallAdjust@i^0,f,c
  4974   003ED0  2A2F               	incf	(reverseWallAdjust@i+1)^0,f,c
  4975   003ED2                     l729:
  4976   003ED2  502C               	movf	reverseWallAdjust@reverseAdjustDuration^0,w,c
  4977   003ED4  6E29               	movwf	??_reverseWallAdjust^0,c
  4978   003ED6  6A2A               	clrf	(??_reverseWallAdjust+1)^0,c
  4979   003ED8  5029               	movf	??_reverseWallAdjust^0,w,c
  4980   003EDA  5C2E               	subwf	reverseWallAdjust@i^0,w,c
  4981   003EDC  502F               	movf	(reverseWallAdjust@i+1)^0,w,c
  4982   003EDE  0A80               	xorlw	128
  4983   003EE0  6E2B               	movwf	(??_reverseWallAdjust+2)^0,c
  4984   003EE2  502A               	movf	(??_reverseWallAdjust+1)^0,w,c
  4985   003EE4  0A80               	xorlw	128
  4986   003EE6  582B               	subwfb	(??_reverseWallAdjust+2)^0,w,c
  4987   003EE8  A0D8               	btfss	status,0,c
  4988   003EEA  EF79  F01F         	goto	u2211
  4989   003EEE  EF7B  F01F         	goto	u2210
  4990   003EF2                     u2211:
  4991   003EF2  EF5F  F01F         	goto	l3412
  4992   003EF6                     u2210:
  4993   003EF6                     
  4994                           ;dc_motor.c: 593:     for (cur_power=reverseWallSpeed;cur_power>=0;cur_power--) {
  4995   003EF6  C02D  F030         	movff	reverseWallAdjust@reverseWallSpeed,reverseWallAdjust@cur_power
  4996   003EFA  6A31               	clrf	(reverseWallAdjust@cur_power+1)^0,c
  4997   003EFC                     l3416:
  4998   003EFC  BE31               	btfsc	(reverseWallAdjust@cur_power+1)^0,7,c
  4999   003EFE  EF85  F01F         	goto	u2220
  5000   003F02  EF83  F01F         	goto	u2221
  5001   003F06                     u2221:
  5002   003F06  EF87  F01F         	goto	l3420
  5003   003F0A                     u2220:
  5004   003F0A  EFD4  F01F         	goto	l3436
  5005   003F0E                     l3420:
  5006                           
  5007                           ;dc_motor.c: 594:         mL->power = cur_power+mL->compensation;
  5008   003F0E  EE20 F009          	lfsr	2,9
  5009   003F12  5023               	movf	reverseWallAdjust@mL^0,w,c
  5010   003F14  26D9               	addwf	fsr2l,f,c
  5011   003F16  5024               	movf	(reverseWallAdjust@mL+1)^0,w,c
  5012   003F18  22DA               	addwfc	fsr2h,f,c
  5013   003F1A  50DF               	movf	indf2,w,c
  5014   003F1C  2430               	addwf	reverseWallAdjust@cur_power^0,w,c
  5015   003F1E  C023  FFD9         	movff	reverseWallAdjust@mL,fsr2l
  5016   003F22  C024  FFDA         	movff	reverseWallAdjust@mL+1,fsr2h
  5017   003F26  6EDF               	movwf	indf2,c
  5018                           
  5019                           ;dc_motor.c: 595:         mR->power = cur_power+mR->compensation;
  5020   003F28  EE20 F009          	lfsr	2,9
  5021   003F2C  5025               	movf	reverseWallAdjust@mR^0,w,c
  5022   003F2E  26D9               	addwf	fsr2l,f,c
  5023   003F30  5026               	movf	(reverseWallAdjust@mR+1)^0,w,c
  5024   003F32  22DA               	addwfc	fsr2h,f,c
  5025   003F34  50DF               	movf	indf2,w,c
  5026   003F36  2430               	addwf	reverseWallAdjust@cur_power^0,w,c
  5027   003F38  C025  FFD9         	movff	reverseWallAdjust@mR,fsr2l
  5028   003F3C  C026  FFDA         	movff	reverseWallAdjust@mR+1,fsr2h
  5029   003F40  6EDF               	movwf	indf2,c
  5030   003F42                     
  5031                           ;dc_motor.c: 596:         setMotorPWM(mL);
  5032   003F42  C023  F01D         	movff	reverseWallAdjust@mL,setMotorPWM@m
  5033   003F46  C024  F01E         	movff	reverseWallAdjust@mL+1,setMotorPWM@m+1
  5034   003F4A  EC97  F024         	call	_setMotorPWM	;wreg free
  5035   003F4E                     
  5036                           ;dc_motor.c: 597:         setMotorPWM(mR);
  5037   003F4E  C025  F01D         	movff	reverseWallAdjust@mR,setMotorPWM@m
  5038   003F52  C026  F01E         	movff	reverseWallAdjust@mR+1,setMotorPWM@m+1
  5039   003F56  EC97  F024         	call	_setMotorPWM	;wreg free
  5040   003F5A                     
  5041                           ;dc_motor.c: 598:         for (i=0;i<straightRamp;i++) {
  5042   003F5A  0E00               	movlw	0
  5043   003F5C  6E2F               	movwf	(reverseWallAdjust@i+1)^0,c
  5044   003F5E  0E00               	movlw	0
  5045   003F60  6E2E               	movwf	reverseWallAdjust@i^0,c
  5046   003F62  EFBD  F01F         	goto	l734
  5047   003F66                     l3428:
  5048                           
  5049                           ;dc_motor.c: 599:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5050   003F66  0E68               	movlw	104
  5051   003F68  6E29               	movwf	??_reverseWallAdjust^0,c
  5052   003F6A  0EE4               	movlw	228
  5053   003F6C                     u4547:
  5054   003F6C  2EE8               	decfsz	wreg,f,c
  5055   003F6E  D7FE               	bra	u4547
  5056   003F70  2E29               	decfsz	??_reverseWallAdjust^0,f,c
  5057   003F72  D7FC               	bra	u4547
  5058   003F74  D000               	nop2	
  5059   003F76                     
  5060                           ;dc_motor.c: 600:         }
  5061   003F76  4A2E               	infsnz	reverseWallAdjust@i^0,f,c
  5062   003F78  2A2F               	incf	(reverseWallAdjust@i+1)^0,f,c
  5063   003F7A                     l734:
  5064   003F7A  5028               	movf	reverseWallAdjust@straightRamp^0,w,c
  5065   003F7C  6E29               	movwf	??_reverseWallAdjust^0,c
  5066   003F7E  6A2A               	clrf	(??_reverseWallAdjust+1)^0,c
  5067   003F80  5029               	movf	??_reverseWallAdjust^0,w,c
  5068   003F82  5C2E               	subwf	reverseWallAdjust@i^0,w,c
  5069   003F84  502F               	movf	(reverseWallAdjust@i+1)^0,w,c
  5070   003F86  0A80               	xorlw	128
  5071   003F88  6E2B               	movwf	(??_reverseWallAdjust+2)^0,c
  5072   003F8A  502A               	movf	(??_reverseWallAdjust+1)^0,w,c
  5073   003F8C  0A80               	xorlw	128
  5074   003F8E  582B               	subwfb	(??_reverseWallAdjust+2)^0,w,c
  5075   003F90  A0D8               	btfss	status,0,c
  5076   003F92  EFCD  F01F         	goto	u2231
  5077   003F96  EFCF  F01F         	goto	u2230
  5078   003F9A                     u2231:
  5079   003F9A  EFB3  F01F         	goto	l3428
  5080   003F9E                     u2230:
  5081   003F9E                     
  5082                           ;dc_motor.c: 601:     }
  5083   003F9E  0630               	decf	reverseWallAdjust@cur_power^0,f,c
  5084   003FA0  A0D8               	btfss	status,0,c
  5085   003FA2  0631               	decf	(reverseWallAdjust@cur_power+1)^0,f,c
  5086   003FA4  EF7E  F01F         	goto	l3416
  5087   003FA8                     l3436:
  5088                           
  5089                           ;dc_motor.c: 602:     mL->power = 0;
  5090   003FA8  C023  FFD9         	movff	reverseWallAdjust@mL,fsr2l
  5091   003FAC  C024  FFDA         	movff	reverseWallAdjust@mL+1,fsr2h
  5092   003FB0  6ADF               	clrf	indf2,c
  5093                           
  5094                           ;dc_motor.c: 603:     mR->power = 0;
  5095   003FB2  C025  FFD9         	movff	reverseWallAdjust@mR,fsr2l
  5096   003FB6  C026  FFDA         	movff	reverseWallAdjust@mR+1,fsr2h
  5097   003FBA  6ADF               	clrf	indf2,c
  5098   003FBC  0012               	return		;funcret
  5099   003FBE                     __end_of_reverseWallAdjust:
  5100                           	callstack 0
  5101                           
  5102 ;; *************** function _lostReturnHome *****************
  5103 ;; Defined at:
  5104 ;;		line 283 in file "dc_motor.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  mL              2   49[COMRAM] PTR struct DC_motor
  5107 ;;		 -> main@motorL(10), 
  5108 ;;  mR              2   51[COMRAM] PTR struct DC_motor
  5109 ;;		 -> main@motorR(10), 
  5110 ;;  moveSequence    2   53[COMRAM] PTR unsigned char 
  5111 ;;		 -> main@moveSequence(40), 
  5112 ;;  straightTime    2   55[COMRAM] PTR unsigned int 
  5113 ;;		 -> main@straightTime(82), 
  5114 ;;  curMove         1   57[COMRAM] unsigned char 
  5115 ;;  straightSpee    1   58[COMRAM] unsigned char 
  5116 ;;  reverseDurat    2   59[COMRAM] unsigned int 
  5117 ;;  straightRamp    1   61[COMRAM] unsigned char 
  5118 ;;  turnSpeed       1   62[COMRAM] unsigned char 
  5119 ;;  turnDuration    1   63[COMRAM] unsigned char 
  5120 ;;  turnRamp        1   64[COMRAM] unsigned char 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  i               1   69[COMRAM] unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5132 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5134 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5135 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5136 ;;Total ram usage:       21 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 9
  5139 ;; This function calls:
  5140 ;;		_fullSpeedAhead
  5141 ;;		_get16bitTMR0val
  5142 ;;		_resetTimer
  5143 ;;		_reverseOneSquare
  5144 ;;		_stop
  5145 ;;		_turnLeft
  5146 ;;		_turnRight
  5147 ;; This function is called by:
  5148 ;;		_main
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text6
  5153   001D96                     __ptext6:
  5154                           	callstack 0
  5155   001D96                     _lostReturnHome:
  5156                           	callstack 21
  5157   001D96                     
  5158                           ;dc_motor.c: 283: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned int revers
      +                          eDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsig
      +                          ned char turnRamp);dc_motor.c: 284: {;dc_motor.c: 285:     LATDbits.LATD7 = LATHbits.LAT
      +                          H3 = 1;
  5159   001D96  8680               	bsf	128,3,c	;volatile
  5160   001D98  8E7C               	bsf	124,7,c	;volatile
  5161   001D9A                     
  5162                           ;dc_motor.c: 286:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5163   001D9A  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5164   001D9E  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5165   001DA2  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5166   001DA6  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5167   001DAA  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5168   001DAE  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5169   001DB2  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5170   001DB6  ECAA  F023         	call	_turnLeft	;wreg free
  5171   001DBA                     
  5172                           ;dc_motor.c: 287:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5173   001DBA  0E05               	movlw	5
  5174   001DBC  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5175   001DBE  0E0F               	movlw	15
  5176   001DC0  6E42               	movwf	??_lostReturnHome^0,c
  5177   001DC2  0EF1               	movlw	241
  5178   001DC4                     u4557:
  5179   001DC4  2EE8               	decfsz	wreg,f,c
  5180   001DC6  D7FE               	bra	u4557
  5181   001DC8  2E42               	decfsz	??_lostReturnHome^0,f,c
  5182   001DCA  D7FC               	bra	u4557
  5183   001DCC  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5184   001DCE  D7FA               	bra	u4557
  5185   001DD0  0000               	nop	
  5186   001DD2                     
  5187                           ;dc_motor.c: 288:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5188   001DD2  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5189   001DD6  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5190   001DDA  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5191   001DDE  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5192   001DE2  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5193   001DE6  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5194   001DEA  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5195   001DEE  ECAA  F023         	call	_turnLeft	;wreg free
  5196                           
  5197                           ;dc_motor.c: 289:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5198   001DF2  0E05               	movlw	5
  5199   001DF4  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5200   001DF6  0E0F               	movlw	15
  5201   001DF8  6E42               	movwf	??_lostReturnHome^0,c
  5202   001DFA  0EF1               	movlw	241
  5203   001DFC                     u4567:
  5204   001DFC  2EE8               	decfsz	wreg,f,c
  5205   001DFE  D7FE               	bra	u4567
  5206   001E00  2E42               	decfsz	??_lostReturnHome^0,f,c
  5207   001E02  D7FC               	bra	u4567
  5208   001E04  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5209   001E06  D7FA               	bra	u4567
  5210   001E08  0000               	nop	
  5211   001E0A                     
  5212                           ;dc_motor.c: 290:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5213   001E0A  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5214   001E0E  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5215   001E12  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5216   001E16  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5217   001E1A  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5218   001E1E  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5219   001E22  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5220   001E26  ECAA  F023         	call	_turnLeft	;wreg free
  5221   001E2A                     
  5222                           ;dc_motor.c: 291:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5223   001E2A  0E05               	movlw	5
  5224   001E2C  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5225   001E2E  0E0F               	movlw	15
  5226   001E30  6E42               	movwf	??_lostReturnHome^0,c
  5227   001E32  0EF1               	movlw	241
  5228   001E34                     u4577:
  5229   001E34  2EE8               	decfsz	wreg,f,c
  5230   001E36  D7FE               	bra	u4577
  5231   001E38  2E42               	decfsz	??_lostReturnHome^0,f,c
  5232   001E3A  D7FC               	bra	u4577
  5233   001E3C  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5234   001E3E  D7FA               	bra	u4577
  5235   001E40  0000               	nop	
  5236                           
  5237                           ;dc_motor.c: 292:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5238   001E42  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5239   001E46  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5240   001E4A  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5241   001E4E  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5242   001E52  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5243   001E56  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5244   001E5A  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5245   001E5E  ECAA  F023         	call	_turnLeft	;wreg free
  5246   001E62                     
  5247                           ;dc_motor.c: 293:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5248   001E62  0E05               	movlw	5
  5249   001E64  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5250   001E66  0E0F               	movlw	15
  5251   001E68  6E42               	movwf	??_lostReturnHome^0,c
  5252   001E6A  0EF1               	movlw	241
  5253   001E6C                     u4587:
  5254   001E6C  2EE8               	decfsz	wreg,f,c
  5255   001E6E  D7FE               	bra	u4587
  5256   001E70  2E42               	decfsz	??_lostReturnHome^0,f,c
  5257   001E72  D7FC               	bra	u4587
  5258   001E74  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5259   001E76  D7FA               	bra	u4587
  5260   001E78  0000               	nop	
  5261   001E7A                     
  5262                           ;dc_motor.c: 294:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  5263   001E7A  C032  F023         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  5264   001E7E  C033  F024         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  5265   001E82  C034  F025         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  5266   001E86  C035  F026         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  5267   001E8A  C03B  F027         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  5268   001E8E  C03E  F028         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  5269   001E92  EC57  F026         	call	_fullSpeedAhead	;wreg free
  5270   001E96                     
  5271                           ;dc_motor.c: 295:     resetTimer();
  5272   001E96  ECDF  F02A         	call	_resetTimer	;wreg free
  5273   001E9A                     
  5274                           ;dc_motor.c: 296:     lost = 0;
  5275   001E9A  0E00               	movlw	0
  5276   001E9C  0100               	movlb	0	; () banked
  5277   001E9E  6FF4               	movwf	_lost& (0+255),b
  5278   001EA0                     l4388:
  5279                           
  5280                           ; BSR set to: 0
  5281   001EA0  51F4               	movf	_lost& (0+255),w,b
  5282   001EA2  B4D8               	btfsc	status,2,c
  5283   001EA4  EF56  F00F         	goto	u3311
  5284   001EA8  EF58  F00F         	goto	u3310
  5285   001EAC                     u3311:
  5286   001EAC  EF50  F00F         	goto	l4388
  5287   001EB0                     u3310:
  5288   001EB0                     
  5289                           ; BSR set to: 0
  5290                           ;dc_motor.c: 298:     stop(mL, mR, straightRamp);
  5291   001EB0  C032  F023         	movff	lostReturnHome@mL,stop@mL
  5292   001EB4  C033  F024         	movff	lostReturnHome@mL+1,stop@mL+1
  5293   001EB8  C034  F025         	movff	lostReturnHome@mR,stop@mR
  5294   001EBC  C035  F026         	movff	lostReturnHome@mR+1,stop@mR+1
  5295   001EC0  C03E  F027         	movff	lostReturnHome@straightRamp,stop@straightRamp
  5296   001EC4  ECD3  F025         	call	_stop	;wreg free
  5297   001EC8                     
  5298                           ;dc_motor.c: 300:     char i=curMove;
  5299   001EC8  C03A  F046         	movff	lostReturnHome@curMove,lostReturnHome@i
  5300                           
  5301                           ;dc_motor.c: 301:     while (i>0) {
  5302   001ECC  EF18  F012         	goto	l4480
  5303   001ED0                     l4394:
  5304                           
  5305                           ;dc_motor.c: 302:         i--;
  5306   001ED0  0646               	decf	lostReturnHome@i^0,f,c
  5307   001ED2                     
  5308                           ;dc_motor.c: 304:         if (moveSequence[i] == 1) {
  5309   001ED2  5046               	movf	lostReturnHome@i^0,w,c
  5310   001ED4  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5311   001ED6  6ED9               	movwf	fsr2l,c
  5312   001ED8  0E00               	movlw	0
  5313   001EDA  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5314   001EDC  6EDA               	movwf	fsr2h,c
  5315   001EDE  04DE               	decf	postinc2,w,c
  5316   001EE0  A4D8               	btfss	status,2,c
  5317   001EE2  EF75  F00F         	goto	u3321
  5318   001EE6  EF77  F00F         	goto	u3320
  5319   001EEA                     u3321:
  5320   001EEA  EFB1  F00F         	goto	l4404
  5321   001EEE                     u3320:
  5322   001EEE                     
  5323                           ;dc_motor.c: 305:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5324   001EEE  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5325   001EF2  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5326   001EF6  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5327   001EFA  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5328   001EFE  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5329   001F02  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5330   001F06  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5331   001F0A  ECAA  F023         	call	_turnLeft	;wreg free
  5332   001F0E                     
  5333                           ;dc_motor.c: 306:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5334   001F0E  0E05               	movlw	5
  5335   001F10  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5336   001F12  0E0F               	movlw	15
  5337   001F14  6E42               	movwf	??_lostReturnHome^0,c
  5338   001F16  0EF1               	movlw	241
  5339   001F18                     u4597:
  5340   001F18  2EE8               	decfsz	wreg,f,c
  5341   001F1A  D7FE               	bra	u4597
  5342   001F1C  2E42               	decfsz	??_lostReturnHome^0,f,c
  5343   001F1E  D7FC               	bra	u4597
  5344   001F20  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5345   001F22  D7FA               	bra	u4597
  5346   001F24  0000               	nop	
  5347   001F26                     
  5348                           ;dc_motor.c: 307:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5349   001F26  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5350   001F2A  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5351   001F2E  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5352   001F32  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5353   001F36  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5354   001F3A  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5355   001F3E  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5356   001F42  ECAA  F023         	call	_turnLeft	;wreg free
  5357                           
  5358                           ;dc_motor.c: 308:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5359   001F46  0E05               	movlw	5
  5360   001F48  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5361   001F4A  0E0F               	movlw	15
  5362   001F4C  6E42               	movwf	??_lostReturnHome^0,c
  5363   001F4E  0EF1               	movlw	241
  5364   001F50                     u4607:
  5365   001F50  2EE8               	decfsz	wreg,f,c
  5366   001F52  D7FE               	bra	u4607
  5367   001F54  2E42               	decfsz	??_lostReturnHome^0,f,c
  5368   001F56  D7FC               	bra	u4607
  5369   001F58  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5370   001F5A  D7FA               	bra	u4607
  5371   001F5C  0000               	nop	
  5372                           
  5373                           ;dc_motor.c: 309:         }
  5374   001F5E  EFE3  F011         	goto	l605
  5375   001F62                     l4404:
  5376   001F62  5046               	movf	lostReturnHome@i^0,w,c
  5377   001F64  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5378   001F66  6ED9               	movwf	fsr2l,c
  5379   001F68  0E00               	movlw	0
  5380   001F6A  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5381   001F6C  6EDA               	movwf	fsr2h,c
  5382   001F6E  0E02               	movlw	2
  5383   001F70  18DE               	xorwf	postinc2,w,c
  5384   001F72  A4D8               	btfss	status,2,c
  5385   001F74  EFBE  F00F         	goto	u3331
  5386   001F78  EFC0  F00F         	goto	u3330
  5387   001F7C                     u3331:
  5388   001F7C  EFFA  F00F         	goto	l4412
  5389   001F80                     u3330:
  5390   001F80                     
  5391                           ;dc_motor.c: 312:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5392   001F80  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5393   001F84  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5394   001F88  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5395   001F8C  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5396   001F90  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5397   001F94  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5398   001F98  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5399   001F9C  ECBD  F022         	call	_turnRight	;wreg free
  5400   001FA0                     
  5401                           ;dc_motor.c: 313:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5402   001FA0  0E05               	movlw	5
  5403   001FA2  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5404   001FA4  0E0F               	movlw	15
  5405   001FA6  6E42               	movwf	??_lostReturnHome^0,c
  5406   001FA8  0EF1               	movlw	241
  5407   001FAA                     u4617:
  5408   001FAA  2EE8               	decfsz	wreg,f,c
  5409   001FAC  D7FE               	bra	u4617
  5410   001FAE  2E42               	decfsz	??_lostReturnHome^0,f,c
  5411   001FB0  D7FC               	bra	u4617
  5412   001FB2  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5413   001FB4  D7FA               	bra	u4617
  5414   001FB6  0000               	nop	
  5415   001FB8                     
  5416                           ;dc_motor.c: 314:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5417   001FB8  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5418   001FBC  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5419   001FC0  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5420   001FC4  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5421   001FC8  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5422   001FCC  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5423   001FD0  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5424   001FD4  ECBD  F022         	call	_turnRight	;wreg free
  5425                           
  5426                           ;dc_motor.c: 315:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5427   001FD8  0E05               	movlw	5
  5428   001FDA  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5429   001FDC  0E0F               	movlw	15
  5430   001FDE  6E42               	movwf	??_lostReturnHome^0,c
  5431   001FE0  0EF1               	movlw	241
  5432   001FE2                     u4627:
  5433   001FE2  2EE8               	decfsz	wreg,f,c
  5434   001FE4  D7FE               	bra	u4627
  5435   001FE6  2E42               	decfsz	??_lostReturnHome^0,f,c
  5436   001FE8  D7FC               	bra	u4627
  5437   001FEA  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5438   001FEC  D7FA               	bra	u4627
  5439   001FEE  0000               	nop	
  5440                           
  5441                           ;dc_motor.c: 316:         }
  5442   001FF0  EFE3  F011         	goto	l605
  5443   001FF4                     l4412:
  5444   001FF4  5046               	movf	lostReturnHome@i^0,w,c
  5445   001FF6  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5446   001FF8  6ED9               	movwf	fsr2l,c
  5447   001FFA  0E00               	movlw	0
  5448   001FFC  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5449   001FFE  6EDA               	movwf	fsr2h,c
  5450   002000  0E03               	movlw	3
  5451   002002  18DE               	xorwf	postinc2,w,c
  5452   002004  A4D8               	btfss	status,2,c
  5453   002006  EF07  F010         	goto	u3341
  5454   00200A  EF09  F010         	goto	u3340
  5455   00200E                     u3341:
  5456   00200E  EF7B  F010         	goto	l4426
  5457   002012                     u3340:
  5458   002012                     
  5459                           ;dc_motor.c: 319:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5460   002012  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5461   002016  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5462   00201A  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5463   00201E  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5464   002022  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5465   002026  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5466   00202A  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5467   00202E  ECAA  F023         	call	_turnLeft	;wreg free
  5468   002032                     
  5469                           ;dc_motor.c: 320:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5470   002032  0E05               	movlw	5
  5471   002034  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5472   002036  0E0F               	movlw	15
  5473   002038  6E42               	movwf	??_lostReturnHome^0,c
  5474   00203A  0EF1               	movlw	241
  5475   00203C                     u4637:
  5476   00203C  2EE8               	decfsz	wreg,f,c
  5477   00203E  D7FE               	bra	u4637
  5478   002040  2E42               	decfsz	??_lostReturnHome^0,f,c
  5479   002042  D7FC               	bra	u4637
  5480   002044  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5481   002046  D7FA               	bra	u4637
  5482   002048  0000               	nop	
  5483   00204A                     
  5484                           ;dc_motor.c: 321:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5485   00204A  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5486   00204E  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5487   002052  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5488   002056  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5489   00205A  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5490   00205E  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5491   002062  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5492   002066  ECAA  F023         	call	_turnLeft	;wreg free
  5493                           
  5494                           ;dc_motor.c: 322:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5495   00206A  0E05               	movlw	5
  5496   00206C  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5497   00206E  0E0F               	movlw	15
  5498   002070  6E42               	movwf	??_lostReturnHome^0,c
  5499   002072  0EF1               	movlw	241
  5500   002074                     u4647:
  5501   002074  2EE8               	decfsz	wreg,f,c
  5502   002076  D7FE               	bra	u4647
  5503   002078  2E42               	decfsz	??_lostReturnHome^0,f,c
  5504   00207A  D7FC               	bra	u4647
  5505   00207C  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5506   00207E  D7FA               	bra	u4647
  5507   002080  0000               	nop	
  5508   002082                     
  5509                           ;dc_motor.c: 323:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5510   002082  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5511   002086  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5512   00208A  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5513   00208E  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5514   002092  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5515   002096  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5516   00209A  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5517   00209E  ECAA  F023         	call	_turnLeft	;wreg free
  5518   0020A2                     
  5519                           ;dc_motor.c: 324:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5520   0020A2  0E05               	movlw	5
  5521   0020A4  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5522   0020A6  0E0F               	movlw	15
  5523   0020A8  6E42               	movwf	??_lostReturnHome^0,c
  5524   0020AA  0EF1               	movlw	241
  5525   0020AC                     u4657:
  5526   0020AC  2EE8               	decfsz	wreg,f,c
  5527   0020AE  D7FE               	bra	u4657
  5528   0020B0  2E42               	decfsz	??_lostReturnHome^0,f,c
  5529   0020B2  D7FC               	bra	u4657
  5530   0020B4  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5531   0020B6  D7FA               	bra	u4657
  5532   0020B8  0000               	nop	
  5533                           
  5534                           ;dc_motor.c: 325:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5535   0020BA  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5536   0020BE  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5537   0020C2  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5538   0020C6  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5539   0020CA  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5540   0020CE  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5541   0020D2  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5542   0020D6  ECAA  F023         	call	_turnLeft	;wreg free
  5543   0020DA                     l4424:
  5544                           
  5545                           ;dc_motor.c: 326:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5546   0020DA  0E05               	movlw	5
  5547   0020DC  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5548   0020DE  0E0F               	movlw	15
  5549   0020E0  6E42               	movwf	??_lostReturnHome^0,c
  5550   0020E2  0EF1               	movlw	241
  5551   0020E4                     u4667:
  5552   0020E4  2EE8               	decfsz	wreg,f,c
  5553   0020E6  D7FE               	bra	u4667
  5554   0020E8  2E42               	decfsz	??_lostReturnHome^0,f,c
  5555   0020EA  D7FC               	bra	u4667
  5556   0020EC  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5557   0020EE  D7FA               	bra	u4667
  5558   0020F0  0000               	nop	
  5559                           
  5560                           ;dc_motor.c: 327:         }
  5561   0020F2  EFE3  F011         	goto	l605
  5562   0020F6                     l4426:
  5563   0020F6  5046               	movf	lostReturnHome@i^0,w,c
  5564   0020F8  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5565   0020FA  6ED9               	movwf	fsr2l,c
  5566   0020FC  0E00               	movlw	0
  5567   0020FE  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5568   002100  6EDA               	movwf	fsr2h,c
  5569   002102  0E04               	movlw	4
  5570   002104  18DE               	xorwf	postinc2,w,c
  5571   002106  A4D8               	btfss	status,2,c
  5572   002108  EF88  F010         	goto	u3351
  5573   00210C  EF8A  F010         	goto	u3350
  5574   002110                     u3351:
  5575   002110  EFD6  F010         	goto	l4438
  5576   002114                     u3350:
  5577   002114                     
  5578                           ;dc_motor.c: 330:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5579   002114  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5580   002118  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5581   00211C  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5582   002120  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5583   002124  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5584   002128  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5585   00212C  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5586   002130  ECAA  F023         	call	_turnLeft	;wreg free
  5587   002134                     
  5588                           ;dc_motor.c: 331:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5589   002134  0E05               	movlw	5
  5590   002136  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5591   002138  0E0F               	movlw	15
  5592   00213A  6E42               	movwf	??_lostReturnHome^0,c
  5593   00213C  0EF1               	movlw	241
  5594   00213E                     u4677:
  5595   00213E  2EE8               	decfsz	wreg,f,c
  5596   002140  D7FE               	bra	u4677
  5597   002142  2E42               	decfsz	??_lostReturnHome^0,f,c
  5598   002144  D7FC               	bra	u4677
  5599   002146  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5600   002148  D7FA               	bra	u4677
  5601   00214A  0000               	nop	
  5602   00214C                     
  5603                           ;dc_motor.c: 332:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5604   00214C  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5605   002150  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5606   002154  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5607   002158  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5608   00215C  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5609   002160  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5610   002164  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5611   002168  ECAA  F023         	call	_turnLeft	;wreg free
  5612                           
  5613                           ;dc_motor.c: 333:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5614   00216C  0E05               	movlw	5
  5615   00216E  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5616   002170  0E0F               	movlw	15
  5617   002172  6E42               	movwf	??_lostReturnHome^0,c
  5618   002174  0EF1               	movlw	241
  5619   002176                     u4687:
  5620   002176  2EE8               	decfsz	wreg,f,c
  5621   002178  D7FE               	bra	u4687
  5622   00217A  2E42               	decfsz	??_lostReturnHome^0,f,c
  5623   00217C  D7FC               	bra	u4687
  5624   00217E  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5625   002180  D7FA               	bra	u4687
  5626   002182  0000               	nop	
  5627   002184                     
  5628                           ;dc_motor.c: 334:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5629   002184  C032  F023         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5630   002188  C033  F024         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5631   00218C  C034  F025         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5632   002190  C035  F026         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5633   002194  C03B  F027         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5634   002198  C03C  F028         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5635   00219C  C03D  F029         	movff	lostReturnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  5636   0021A0  C03E  F02A         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5637   0021A4  ECCE  F021         	call	_reverseOneSquare	;wreg free
  5638   0021A8  EF6D  F010         	goto	l4424
  5639   0021AC                     l4438:
  5640   0021AC  5046               	movf	lostReturnHome@i^0,w,c
  5641   0021AE  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5642   0021B0  6ED9               	movwf	fsr2l,c
  5643   0021B2  0E00               	movlw	0
  5644   0021B4  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5645   0021B6  6EDA               	movwf	fsr2h,c
  5646   0021B8  0E05               	movlw	5
  5647   0021BA  18DE               	xorwf	postinc2,w,c
  5648   0021BC  A4D8               	btfss	status,2,c
  5649   0021BE  EFE3  F010         	goto	u3361
  5650   0021C2  EFE5  F010         	goto	u3360
  5651   0021C6                     u3361:
  5652   0021C6  EF31  F011         	goto	l4450
  5653   0021CA                     u3360:
  5654   0021CA                     
  5655                           ;dc_motor.c: 339:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5656   0021CA  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5657   0021CE  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5658   0021D2  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5659   0021D6  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5660   0021DA  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5661   0021DE  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5662   0021E2  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5663   0021E6  ECBD  F022         	call	_turnRight	;wreg free
  5664   0021EA                     
  5665                           ;dc_motor.c: 340:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5666   0021EA  0E05               	movlw	5
  5667   0021EC  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5668   0021EE  0E0F               	movlw	15
  5669   0021F0  6E42               	movwf	??_lostReturnHome^0,c
  5670   0021F2  0EF1               	movlw	241
  5671   0021F4                     u4697:
  5672   0021F4  2EE8               	decfsz	wreg,f,c
  5673   0021F6  D7FE               	bra	u4697
  5674   0021F8  2E42               	decfsz	??_lostReturnHome^0,f,c
  5675   0021FA  D7FC               	bra	u4697
  5676   0021FC  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5677   0021FE  D7FA               	bra	u4697
  5678   002200  0000               	nop	
  5679   002202                     
  5680                           ;dc_motor.c: 341:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5681   002202  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5682   002206  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5683   00220A  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5684   00220E  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5685   002212  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5686   002216  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5687   00221A  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5688   00221E  ECBD  F022         	call	_turnRight	;wreg free
  5689                           
  5690                           ;dc_motor.c: 342:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5691   002222  0E05               	movlw	5
  5692   002224  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5693   002226  0E0F               	movlw	15
  5694   002228  6E42               	movwf	??_lostReturnHome^0,c
  5695   00222A  0EF1               	movlw	241
  5696   00222C                     u4707:
  5697   00222C  2EE8               	decfsz	wreg,f,c
  5698   00222E  D7FE               	bra	u4707
  5699   002230  2E42               	decfsz	??_lostReturnHome^0,f,c
  5700   002232  D7FC               	bra	u4707
  5701   002234  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5702   002236  D7FA               	bra	u4707
  5703   002238  0000               	nop	
  5704   00223A                     
  5705                           ;dc_motor.c: 343:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5706   00223A  C032  F023         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5707   00223E  C033  F024         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5708   002242  C034  F025         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5709   002246  C035  F026         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5710   00224A  C03B  F027         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5711   00224E  C03C  F028         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5712   002252  C03D  F029         	movff	lostReturnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  5713   002256  C03E  F02A         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5714   00225A  ECCE  F021         	call	_reverseOneSquare	;wreg free
  5715   00225E  EF6D  F010         	goto	l4424
  5716   002262                     l4450:
  5717   002262  5046               	movf	lostReturnHome@i^0,w,c
  5718   002264  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5719   002266  6ED9               	movwf	fsr2l,c
  5720   002268  0E00               	movlw	0
  5721   00226A  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5722   00226C  6EDA               	movwf	fsr2h,c
  5723   00226E  0E06               	movlw	6
  5724   002270  18DE               	xorwf	postinc2,w,c
  5725   002272  A4D8               	btfss	status,2,c
  5726   002274  EF3E  F011         	goto	u3371
  5727   002278  EF40  F011         	goto	u3370
  5728   00227C                     u3371:
  5729   00227C  EF8A  F011         	goto	l4462
  5730   002280                     u3370:
  5731   002280                     
  5732                           ;dc_motor.c: 348:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5733   002280  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5734   002284  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5735   002288  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5736   00228C  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5737   002290  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5738   002294  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5739   002298  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5740   00229C  ECAA  F023         	call	_turnLeft	;wreg free
  5741   0022A0                     
  5742                           ;dc_motor.c: 349:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5743   0022A0  0E05               	movlw	5
  5744   0022A2  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5745   0022A4  0E0F               	movlw	15
  5746   0022A6  6E42               	movwf	??_lostReturnHome^0,c
  5747   0022A8  0EF1               	movlw	241
  5748   0022AA                     u4717:
  5749   0022AA  2EE8               	decfsz	wreg,f,c
  5750   0022AC  D7FE               	bra	u4717
  5751   0022AE  2E42               	decfsz	??_lostReturnHome^0,f,c
  5752   0022B0  D7FC               	bra	u4717
  5753   0022B2  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5754   0022B4  D7FA               	bra	u4717
  5755   0022B6  0000               	nop	
  5756   0022B8                     
  5757                           ;dc_motor.c: 350:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5758   0022B8  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5759   0022BC  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5760   0022C0  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5761   0022C4  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5762   0022C8  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5763   0022CC  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5764   0022D0  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5765   0022D4  ECAA  F023         	call	_turnLeft	;wreg free
  5766                           
  5767                           ;dc_motor.c: 351:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5768   0022D8  0E05               	movlw	5
  5769   0022DA  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5770   0022DC  0E0F               	movlw	15
  5771   0022DE  6E42               	movwf	??_lostReturnHome^0,c
  5772   0022E0  0EF1               	movlw	241
  5773   0022E2                     u4727:
  5774   0022E2  2EE8               	decfsz	wreg,f,c
  5775   0022E4  D7FE               	bra	u4727
  5776   0022E6  2E42               	decfsz	??_lostReturnHome^0,f,c
  5777   0022E8  D7FC               	bra	u4727
  5778   0022EA  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5779   0022EC  D7FA               	bra	u4727
  5780   0022EE  0000               	nop	
  5781   0022F0                     
  5782                           ;dc_motor.c: 352:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5783   0022F0  C032  F023         	movff	lostReturnHome@mL,turnLeft@mL
  5784   0022F4  C033  F024         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5785   0022F8  C034  F025         	movff	lostReturnHome@mR,turnLeft@mR
  5786   0022FC  C035  F026         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5787   002300  C03F  F027         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5788   002304  C040  F028         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5789   002308  C041  F029         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5790   00230C  ECAA  F023         	call	_turnLeft	;wreg free
  5791   002310  EF6D  F010         	goto	l4424
  5792   002314                     l4462:
  5793   002314  5046               	movf	lostReturnHome@i^0,w,c
  5794   002316  2436               	addwf	lostReturnHome@moveSequence^0,w,c
  5795   002318  6ED9               	movwf	fsr2l,c
  5796   00231A  0E00               	movlw	0
  5797   00231C  2037               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5798   00231E  6EDA               	movwf	fsr2h,c
  5799   002320  0E07               	movlw	7
  5800   002322  18DE               	xorwf	postinc2,w,c
  5801   002324  A4D8               	btfss	status,2,c
  5802   002326  EF97  F011         	goto	u3381
  5803   00232A  EF99  F011         	goto	u3380
  5804   00232E                     u3381:
  5805   00232E  EFE3  F011         	goto	l611
  5806   002332                     u3380:
  5807   002332                     
  5808                           ;dc_motor.c: 357:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5809   002332  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5810   002336  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5811   00233A  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5812   00233E  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5813   002342  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5814   002346  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5815   00234A  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5816   00234E  ECBD  F022         	call	_turnRight	;wreg free
  5817   002352                     
  5818                           ;dc_motor.c: 358:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5819   002352  0E05               	movlw	5
  5820   002354  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5821   002356  0E0F               	movlw	15
  5822   002358  6E42               	movwf	??_lostReturnHome^0,c
  5823   00235A  0EF1               	movlw	241
  5824   00235C                     u4737:
  5825   00235C  2EE8               	decfsz	wreg,f,c
  5826   00235E  D7FE               	bra	u4737
  5827   002360  2E42               	decfsz	??_lostReturnHome^0,f,c
  5828   002362  D7FC               	bra	u4737
  5829   002364  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5830   002366  D7FA               	bra	u4737
  5831   002368  0000               	nop	
  5832   00236A                     
  5833                           ;dc_motor.c: 359:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5834   00236A  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5835   00236E  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5836   002372  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5837   002376  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5838   00237A  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5839   00237E  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5840   002382  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5841   002386  ECBD  F022         	call	_turnRight	;wreg free
  5842                           
  5843                           ;dc_motor.c: 360:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5844   00238A  0E05               	movlw	5
  5845   00238C  6E43               	movwf	(??_lostReturnHome+1)^0,c
  5846   00238E  0E0F               	movlw	15
  5847   002390  6E42               	movwf	??_lostReturnHome^0,c
  5848   002392  0EF1               	movlw	241
  5849   002394                     u4747:
  5850   002394  2EE8               	decfsz	wreg,f,c
  5851   002396  D7FE               	bra	u4747
  5852   002398  2E42               	decfsz	??_lostReturnHome^0,f,c
  5853   00239A  D7FC               	bra	u4747
  5854   00239C  2E43               	decfsz	(??_lostReturnHome+1)^0,f,c
  5855   00239E  D7FA               	bra	u4747
  5856   0023A0  0000               	nop	
  5857   0023A2                     
  5858                           ;dc_motor.c: 361:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5859   0023A2  C032  F023         	movff	lostReturnHome@mL,turnRight@mL
  5860   0023A6  C033  F024         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5861   0023AA  C034  F025         	movff	lostReturnHome@mR,turnRight@mR
  5862   0023AE  C035  F026         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5863   0023B2  C03F  F027         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5864   0023B6  C040  F028         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5865   0023BA  C041  F029         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5866   0023BE  ECBD  F022         	call	_turnRight	;wreg free
  5867   0023C2  EF6D  F010         	goto	l4424
  5868   0023C6                     l611:
  5869   0023C6                     l605:
  5870                           
  5871                           ;dc_motor.c: 365:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  5872   0023C6  C032  F023         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  5873   0023CA  C033  F024         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  5874   0023CE  C034  F025         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  5875   0023D2  C035  F026         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  5876   0023D6  C03B  F027         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  5877   0023DA  C03E  F028         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  5878   0023DE  EC57  F026         	call	_fullSpeedAhead	;wreg free
  5879   0023E2                     
  5880                           ;dc_motor.c: 366:         resetTimer();
  5881   0023E2  ECDF  F02A         	call	_resetTimer	;wreg free
  5882   0023E6                     l4476:
  5883   0023E6  5046               	movf	lostReturnHome@i^0,w,c
  5884   0023E8  0D02               	mullw	2
  5885   0023EA  CFF3 F042          	movff	prodl,??_lostReturnHome
  5886   0023EE  CFF4 F043          	movff	prodh,??_lostReturnHome+1
  5887   0023F2  5042               	movf	??_lostReturnHome^0,w,c
  5888   0023F4  2438               	addwf	lostReturnHome@straightTime^0,w,c
  5889   0023F6  6ED9               	movwf	fsr2l,c
  5890   0023F8  5043               	movf	(??_lostReturnHome+1)^0,w,c
  5891   0023FA  2039               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  5892   0023FC  6EDA               	movwf	fsr2h,c
  5893   0023FE  EC00  F02A         	call	_get16bitTMR0val	;wreg free
  5894   002402  50DE               	movf	postinc2,w,c
  5895   002404  5C10               	subwf	?_get16bitTMR0val^0,w,c
  5896   002406  50DE               	movf	postinc2,w,c
  5897   002408  5811               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  5898   00240A  A0D8               	btfss	status,0,c
  5899   00240C  EF0A  F012         	goto	u3391
  5900   002410  EF0C  F012         	goto	u3390
  5901   002414                     u3391:
  5902   002414  EFF3  F011         	goto	l4476
  5903   002418                     u3390:
  5904   002418                     
  5905                           ;dc_motor.c: 368:         stop(mL, mR, straightRamp);
  5906   002418  C032  F023         	movff	lostReturnHome@mL,stop@mL
  5907   00241C  C033  F024         	movff	lostReturnHome@mL+1,stop@mL+1
  5908   002420  C034  F025         	movff	lostReturnHome@mR,stop@mR
  5909   002424  C035  F026         	movff	lostReturnHome@mR+1,stop@mR+1
  5910   002428  C03E  F027         	movff	lostReturnHome@straightRamp,stop@straightRamp
  5911   00242C  ECD3  F025         	call	_stop	;wreg free
  5912   002430                     l4480:
  5913                           
  5914                           ;dc_motor.c: 301:     while (i>0) {
  5915   002430  5046               	movf	lostReturnHome@i^0,w,c
  5916   002432  A4D8               	btfss	status,2,c
  5917   002434  EF1E  F012         	goto	u3401
  5918   002438  EF20  F012         	goto	u3400
  5919   00243C                     u3401:
  5920   00243C  EF68  F00F         	goto	l4394
  5921   002440                     u3400:
  5922   002440  0012               	return		;funcret
  5923   002442                     __end_of_lostReturnHome:
  5924                           	callstack 0
  5925                           
  5926 ;; *************** function _stop *****************
  5927 ;; Defined at:
  5928 ;;		line 373 in file "dc_motor.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  5931 ;;		 -> main@motorL(10), 
  5932 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  5933 ;;		 -> main@motorR(10), 
  5934 ;;  straightRamp    1   38[COMRAM] unsigned char 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  cur_power       2   44[COMRAM] int 
  5937 ;;  i               2   42[COMRAM] int 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5947 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5949 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5950 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5951 ;;Total ram usage:       12 bytes
  5952 ;; Hardware stack levels used: 1
  5953 ;; Hardware stack levels required when called: 8
  5954 ;; This function calls:
  5955 ;;		_setMotorPWM
  5956 ;; This function is called by:
  5957 ;;		_main
  5958 ;;		_returnHome
  5959 ;;		_lostReturnHome
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text7
  5964   004BA6                     __ptext7:
  5965                           	callstack 0
  5966   004BA6                     _stop:
  5967                           	callstack 22
  5968   004BA6                     
  5969                           ;dc_motor.c: 373: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 374: {;dc_motor.c: 375:     mL->direction = 1;
  5970   004BA6  EE20 F001          	lfsr	2,1
  5971   004BAA  5023               	movf	stop@mL^0,w,c
  5972   004BAC  26D9               	addwf	fsr2l,f,c
  5973   004BAE  5024               	movf	(stop@mL+1)^0,w,c
  5974   004BB0  22DA               	addwfc	fsr2h,f,c
  5975   004BB2  0E01               	movlw	1
  5976   004BB4  6EDF               	movwf	indf2,c
  5977                           
  5978                           ;dc_motor.c: 376:     mR->direction = 1;
  5979   004BB6  EE20 F001          	lfsr	2,1
  5980   004BBA  5025               	movf	stop@mR^0,w,c
  5981   004BBC  26D9               	addwf	fsr2l,f,c
  5982   004BBE  5026               	movf	(stop@mR+1)^0,w,c
  5983   004BC0  22DA               	addwfc	fsr2h,f,c
  5984   004BC2  0E01               	movlw	1
  5985   004BC4  6EDF               	movwf	indf2,c
  5986                           
  5987                           ;dc_motor.c: 377:     int i;;dc_motor.c: 378:     int cur_power;;dc_motor.c: 379:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  5988   004BC6  C023  FFD9         	movff	stop@mL,fsr2l
  5989   004BCA  C024  FFDA         	movff	stop@mL+1,fsr2h
  5990   004BCE  50DF               	movf	indf2,w,c
  5991   004BD0  6E28               	movwf	??_stop^0,c
  5992   004BD2  EE20 F009          	lfsr	2,9
  5993   004BD6  5023               	movf	stop@mL^0,w,c
  5994   004BD8  26D9               	addwf	fsr2l,f,c
  5995   004BDA  5024               	movf	(stop@mL+1)^0,w,c
  5996   004BDC  22DA               	addwfc	fsr2h,f,c
  5997   004BDE  50DF               	movf	indf2,w,c
  5998   004BE0  6E29               	movwf	(??_stop+1)^0,c
  5999   004BE2  5029               	movf	(??_stop+1)^0,w,c
  6000   004BE4  5C28               	subwf	??_stop^0,w,c
  6001   004BE6  6E2D               	movwf	stop@cur_power^0,c
  6002   004BE8  6A2E               	clrf	(stop@cur_power+1)^0,c
  6003   004BEA  A0D8               	btfss	status,0,c
  6004   004BEC  062E               	decf	(stop@cur_power+1)^0,f,c
  6005   004BEE                     l3194:
  6006   004BEE  BE2E               	btfsc	(stop@cur_power+1)^0,7,c
  6007   004BF0  EFFE  F025         	goto	u1980
  6008   004BF4  EFFC  F025         	goto	u1981
  6009   004BF8                     u1981:
  6010   004BF8  EF00  F026         	goto	l3198
  6011   004BFC                     u1980:
  6012   004BFC  EF4C  F026         	goto	l3214
  6013   004C00                     l3198:
  6014                           
  6015                           ;dc_motor.c: 380:         mL->power = cur_power+mL->compensation;
  6016   004C00  EE20 F009          	lfsr	2,9
  6017   004C04  5023               	movf	stop@mL^0,w,c
  6018   004C06  26D9               	addwf	fsr2l,f,c
  6019   004C08  5024               	movf	(stop@mL+1)^0,w,c
  6020   004C0A  22DA               	addwfc	fsr2h,f,c
  6021   004C0C  50DF               	movf	indf2,w,c
  6022   004C0E  242D               	addwf	stop@cur_power^0,w,c
  6023   004C10  C023  FFD9         	movff	stop@mL,fsr2l
  6024   004C14  C024  FFDA         	movff	stop@mL+1,fsr2h
  6025   004C18  6EDF               	movwf	indf2,c
  6026                           
  6027                           ;dc_motor.c: 381:         mR->power = cur_power+mR->compensation;
  6028   004C1A  EE20 F009          	lfsr	2,9
  6029   004C1E  5025               	movf	stop@mR^0,w,c
  6030   004C20  26D9               	addwf	fsr2l,f,c
  6031   004C22  5026               	movf	(stop@mR+1)^0,w,c
  6032   004C24  22DA               	addwfc	fsr2h,f,c
  6033   004C26  50DF               	movf	indf2,w,c
  6034   004C28  242D               	addwf	stop@cur_power^0,w,c
  6035   004C2A  C025  FFD9         	movff	stop@mR,fsr2l
  6036   004C2E  C026  FFDA         	movff	stop@mR+1,fsr2h
  6037   004C32  6EDF               	movwf	indf2,c
  6038   004C34                     
  6039                           ;dc_motor.c: 382:         setMotorPWM(mL);
  6040   004C34  C023  F01D         	movff	stop@mL,setMotorPWM@m
  6041   004C38  C024  F01E         	movff	stop@mL+1,setMotorPWM@m+1
  6042   004C3C  EC97  F024         	call	_setMotorPWM	;wreg free
  6043   004C40                     
  6044                           ;dc_motor.c: 383:         setMotorPWM(mR);
  6045   004C40  C025  F01D         	movff	stop@mR,setMotorPWM@m
  6046   004C44  C026  F01E         	movff	stop@mR+1,setMotorPWM@m+1
  6047   004C48  EC97  F024         	call	_setMotorPWM	;wreg free
  6048   004C4C                     
  6049                           ;dc_motor.c: 384:         for (i=0;i<straightRamp;i++) {
  6050   004C4C  0E00               	movlw	0
  6051   004C4E  6E2C               	movwf	(stop@i+1)^0,c
  6052   004C50  0E00               	movlw	0
  6053   004C52  6E2B               	movwf	stop@i^0,c
  6054   004C54  EF35  F026         	goto	l626
  6055   004C58                     l3206:
  6056                           
  6057                           ;dc_motor.c: 385:             _delay((unsigned long)((10)*(64000000/4000.0)));
  6058   004C58  0ED0               	movlw	208
  6059   004C5A  6E28               	movwf	??_stop^0,c
  6060   004C5C  0ECA               	movlw	202
  6061   004C5E                     u4757:
  6062   004C5E  2EE8               	decfsz	wreg,f,c
  6063   004C60  D7FE               	bra	u4757
  6064   004C62  2E28               	decfsz	??_stop^0,f,c
  6065   004C64  D7FC               	bra	u4757
  6066   004C66                     
  6067                           ;dc_motor.c: 386:         }
  6068   004C66  4A2B               	infsnz	stop@i^0,f,c
  6069   004C68  2A2C               	incf	(stop@i+1)^0,f,c
  6070   004C6A                     l626:
  6071   004C6A  5027               	movf	stop@straightRamp^0,w,c
  6072   004C6C  6E28               	movwf	??_stop^0,c
  6073   004C6E  6A29               	clrf	(??_stop+1)^0,c
  6074   004C70  5028               	movf	??_stop^0,w,c
  6075   004C72  5C2B               	subwf	stop@i^0,w,c
  6076   004C74  502C               	movf	(stop@i+1)^0,w,c
  6077   004C76  0A80               	xorlw	128
  6078   004C78  6E2A               	movwf	(??_stop+2)^0,c
  6079   004C7A  5029               	movf	(??_stop+1)^0,w,c
  6080   004C7C  0A80               	xorlw	128
  6081   004C7E  582A               	subwfb	(??_stop+2)^0,w,c
  6082   004C80  A0D8               	btfss	status,0,c
  6083   004C82  EF45  F026         	goto	u1991
  6084   004C86  EF47  F026         	goto	u1990
  6085   004C8A                     u1991:
  6086   004C8A  EF2C  F026         	goto	l3206
  6087   004C8E                     u1990:
  6088   004C8E                     
  6089                           ;dc_motor.c: 387:     }
  6090   004C8E  062D               	decf	stop@cur_power^0,f,c
  6091   004C90  A0D8               	btfss	status,0,c
  6092   004C92  062E               	decf	(stop@cur_power+1)^0,f,c
  6093   004C94  EFF7  F025         	goto	l3194
  6094   004C98                     l3214:
  6095                           
  6096                           ;dc_motor.c: 388:     mL->power = 0;
  6097   004C98  C023  FFD9         	movff	stop@mL,fsr2l
  6098   004C9C  C024  FFDA         	movff	stop@mL+1,fsr2h
  6099   004CA0  6ADF               	clrf	indf2,c
  6100                           
  6101                           ;dc_motor.c: 389:     mR->power = 0;
  6102   004CA2  C025  FFD9         	movff	stop@mR,fsr2l
  6103   004CA6  C026  FFDA         	movff	stop@mR+1,fsr2h
  6104   004CAA  6ADF               	clrf	indf2,c
  6105   004CAC  0012               	return		;funcret
  6106   004CAE                     __end_of_stop:
  6107                           	callstack 0
  6108                           
  6109 ;; *************** function _reverseOneSquare *****************
  6110 ;; Defined at:
  6111 ;;		line 474 in file "dc_motor.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  6114 ;;		 -> main@motorL(10), 
  6115 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  6116 ;;		 -> main@motorR(10), 
  6117 ;;  straightSpee    1   38[COMRAM] unsigned char 
  6118 ;;  reverseDurat    2   39[COMRAM] unsigned int 
  6119 ;;  straightRamp    1   41[COMRAM] unsigned char 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  cur_power       2   47[COMRAM] int 
  6122 ;;  i               2   45[COMRAM] int 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6132 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6135 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6136 ;;Total ram usage:       15 bytes
  6137 ;; Hardware stack levels used: 1
  6138 ;; Hardware stack levels required when called: 8
  6139 ;; This function calls:
  6140 ;;		_setMotorPWM
  6141 ;; This function is called by:
  6142 ;;		_move
  6143 ;;		_returnHome
  6144 ;;		_lostReturnHome
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text8
  6149   00439C                     __ptext8:
  6150                           	callstack 0
  6151   00439C                     _reverseOneSquare:
  6152                           	callstack 21
  6153   00439C                     
  6154                           ;dc_motor.c: 474: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned int reverseDuration, unsigned char straightRamp);dc_motor.c: 475: {;dc_motor.c:
      +                           476:     mL->direction = 0;
  6155   00439C  EE20 F001          	lfsr	2,1
  6156   0043A0  5023               	movf	reverseOneSquare@mL^0,w,c
  6157   0043A2  26D9               	addwf	fsr2l,f,c
  6158   0043A4  5024               	movf	(reverseOneSquare@mL+1)^0,w,c
  6159   0043A6  22DA               	addwfc	fsr2h,f,c
  6160   0043A8  6ADF               	clrf	indf2,c
  6161                           
  6162                           ;dc_motor.c: 477:     mR->direction = 0;
  6163   0043AA  EE20 F001          	lfsr	2,1
  6164   0043AE  5025               	movf	reverseOneSquare@mR^0,w,c
  6165   0043B0  26D9               	addwf	fsr2l,f,c
  6166   0043B2  5026               	movf	(reverseOneSquare@mR+1)^0,w,c
  6167   0043B4  22DA               	addwfc	fsr2h,f,c
  6168   0043B6  6ADF               	clrf	indf2,c
  6169   0043B8                     
  6170                           ;dc_motor.c: 478:     int i;;dc_motor.c: 479:     int cur_power;;dc_motor.c: 480:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  6171   0043B8  0E00               	movlw	0
  6172   0043BA  6E31               	movwf	(reverseOneSquare@cur_power+1)^0,c
  6173   0043BC  0E01               	movlw	1
  6174   0043BE  6E30               	movwf	reverseOneSquare@cur_power^0,c
  6175   0043C0  EF2C  F022         	goto	l3358
  6176   0043C4                     l3344:
  6177                           
  6178                           ;dc_motor.c: 481:         mL->power = cur_power+mL->compensation;
  6179   0043C4  EE20 F009          	lfsr	2,9
  6180   0043C8  5023               	movf	reverseOneSquare@mL^0,w,c
  6181   0043CA  26D9               	addwf	fsr2l,f,c
  6182   0043CC  5024               	movf	(reverseOneSquare@mL+1)^0,w,c
  6183   0043CE  22DA               	addwfc	fsr2h,f,c
  6184   0043D0  50DF               	movf	indf2,w,c
  6185   0043D2  2430               	addwf	reverseOneSquare@cur_power^0,w,c
  6186   0043D4  C023  FFD9         	movff	reverseOneSquare@mL,fsr2l
  6187   0043D8  C024  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  6188   0043DC  6EDF               	movwf	indf2,c
  6189                           
  6190                           ;dc_motor.c: 482:         mR->power = cur_power+mR->compensation;
  6191   0043DE  EE20 F009          	lfsr	2,9
  6192   0043E2  5025               	movf	reverseOneSquare@mR^0,w,c
  6193   0043E4  26D9               	addwf	fsr2l,f,c
  6194   0043E6  5026               	movf	(reverseOneSquare@mR+1)^0,w,c
  6195   0043E8  22DA               	addwfc	fsr2h,f,c
  6196   0043EA  50DF               	movf	indf2,w,c
  6197   0043EC  2430               	addwf	reverseOneSquare@cur_power^0,w,c
  6198   0043EE  C025  FFD9         	movff	reverseOneSquare@mR,fsr2l
  6199   0043F2  C026  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  6200   0043F6  6EDF               	movwf	indf2,c
  6201   0043F8                     
  6202                           ;dc_motor.c: 483:         setMotorPWM(mL);
  6203   0043F8  C023  F01D         	movff	reverseOneSquare@mL,setMotorPWM@m
  6204   0043FC  C024  F01E         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  6205   004400  EC97  F024         	call	_setMotorPWM	;wreg free
  6206   004404                     
  6207                           ;dc_motor.c: 484:         setMotorPWM(mR);
  6208   004404  C025  F01D         	movff	reverseOneSquare@mR,setMotorPWM@m
  6209   004408  C026  F01E         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  6210   00440C  EC97  F024         	call	_setMotorPWM	;wreg free
  6211   004410                     
  6212                           ;dc_motor.c: 485:         for (i=0;i<straightRamp;i++) {
  6213   004410  0E00               	movlw	0
  6214   004412  6E2F               	movwf	(reverseOneSquare@i+1)^0,c
  6215   004414  0E00               	movlw	0
  6216   004416  6E2E               	movwf	reverseOneSquare@i^0,c
  6217   004418  EF18  F022         	goto	l677
  6218   00441C                     l3352:
  6219                           
  6220                           ;dc_motor.c: 486:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6221   00441C  0E68               	movlw	104
  6222   00441E  6E2B               	movwf	??_reverseOneSquare^0,c
  6223   004420  0EE4               	movlw	228
  6224   004422                     u4767:
  6225   004422  2EE8               	decfsz	wreg,f,c
  6226   004424  D7FE               	bra	u4767
  6227   004426  2E2B               	decfsz	??_reverseOneSquare^0,f,c
  6228   004428  D7FC               	bra	u4767
  6229   00442A  D000               	nop2	
  6230   00442C                     
  6231                           ;dc_motor.c: 487:         }
  6232   00442C  4A2E               	infsnz	reverseOneSquare@i^0,f,c
  6233   00442E  2A2F               	incf	(reverseOneSquare@i+1)^0,f,c
  6234   004430                     l677:
  6235   004430  502A               	movf	reverseOneSquare@straightRamp^0,w,c
  6236   004432  6E2B               	movwf	??_reverseOneSquare^0,c
  6237   004434  6A2C               	clrf	(??_reverseOneSquare+1)^0,c
  6238   004436  502B               	movf	??_reverseOneSquare^0,w,c
  6239   004438  5C2E               	subwf	reverseOneSquare@i^0,w,c
  6240   00443A  502F               	movf	(reverseOneSquare@i+1)^0,w,c
  6241   00443C  0A80               	xorlw	128
  6242   00443E  6E2D               	movwf	(??_reverseOneSquare+2)^0,c
  6243   004440  502C               	movf	(??_reverseOneSquare+1)^0,w,c
  6244   004442  0A80               	xorlw	128
  6245   004444  582D               	subwfb	(??_reverseOneSquare+2)^0,w,c
  6246   004446  A0D8               	btfss	status,0,c
  6247   004448  EF28  F022         	goto	u2141
  6248   00444C  EF2A  F022         	goto	u2140
  6249   004450                     u2141:
  6250   004450  EF0E  F022         	goto	l3352
  6251   004454                     u2140:
  6252   004454                     
  6253                           ;dc_motor.c: 488:     }
  6254   004454  4A30               	infsnz	reverseOneSquare@cur_power^0,f,c
  6255   004456  2A31               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  6256   004458                     l3358:
  6257   004458  5027               	movf	reverseOneSquare@straightSpeed^0,w,c
  6258   00445A  6E2B               	movwf	??_reverseOneSquare^0,c
  6259   00445C  6A2C               	clrf	(??_reverseOneSquare+1)^0,c
  6260   00445E  5030               	movf	reverseOneSquare@cur_power^0,w,c
  6261   004460  5C2B               	subwf	??_reverseOneSquare^0,w,c
  6262   004462  502C               	movf	(??_reverseOneSquare+1)^0,w,c
  6263   004464  0A80               	xorlw	128
  6264   004466  6E2D               	movwf	(??_reverseOneSquare+2)^0,c
  6265   004468  5031               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  6266   00446A  0A80               	xorlw	128
  6267   00446C  582D               	subwfb	(??_reverseOneSquare+2)^0,w,c
  6268   00446E  B0D8               	btfsc	status,0,c
  6269   004470  EF3C  F022         	goto	u2151
  6270   004474  EF3E  F022         	goto	u2150
  6271   004478                     u2151:
  6272   004478  EFE2  F021         	goto	l3344
  6273   00447C                     u2150:
  6274   00447C                     
  6275                           ;dc_motor.c: 490:     for (i=0;i<reverseDuration;i++) {
  6276   00447C  0E00               	movlw	0
  6277   00447E  6E2F               	movwf	(reverseOneSquare@i+1)^0,c
  6278   004480  0E00               	movlw	0
  6279   004482  6E2E               	movwf	reverseOneSquare@i^0,c
  6280   004484  EF4E  F022         	goto	l681
  6281   004488                     l3362:
  6282                           
  6283                           ;dc_motor.c: 491:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6284   004488  0E68               	movlw	104
  6285   00448A  6E2B               	movwf	??_reverseOneSquare^0,c
  6286   00448C  0EE4               	movlw	228
  6287   00448E                     u4777:
  6288   00448E  2EE8               	decfsz	wreg,f,c
  6289   004490  D7FE               	bra	u4777
  6290   004492  2E2B               	decfsz	??_reverseOneSquare^0,f,c
  6291   004494  D7FC               	bra	u4777
  6292   004496  D000               	nop2	
  6293   004498                     
  6294                           ;dc_motor.c: 492:         }
  6295   004498  4A2E               	infsnz	reverseOneSquare@i^0,f,c
  6296   00449A  2A2F               	incf	(reverseOneSquare@i+1)^0,f,c
  6297   00449C                     l681:
  6298   00449C  5028               	movf	reverseOneSquare@reverseDuration^0,w,c
  6299   00449E  5C2E               	subwf	reverseOneSquare@i^0,w,c
  6300   0044A0  5029               	movf	(reverseOneSquare@reverseDuration+1)^0,w,c
  6301   0044A2  582F               	subwfb	(reverseOneSquare@i+1)^0,w,c
  6302   0044A4  A0D8               	btfss	status,0,c
  6303   0044A6  EF57  F022         	goto	u2161
  6304   0044AA  EF59  F022         	goto	u2160
  6305   0044AE                     u2161:
  6306   0044AE  EF44  F022         	goto	l3362
  6307   0044B2                     u2160:
  6308   0044B2                     
  6309                           ;dc_motor.c: 494:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  6310   0044B2  C027  F030         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  6311   0044B6  6A31               	clrf	(reverseOneSquare@cur_power+1)^0,c
  6312   0044B8                     l3366:
  6313   0044B8  BE31               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  6314   0044BA  EF63  F022         	goto	u2170
  6315   0044BE  EF61  F022         	goto	u2171
  6316   0044C2                     u2171:
  6317   0044C2  EF65  F022         	goto	l3370
  6318   0044C6                     u2170:
  6319   0044C6  EFB2  F022         	goto	l3386
  6320   0044CA                     l3370:
  6321                           
  6322                           ;dc_motor.c: 495:         mL->power = cur_power+mL->compensation;
  6323   0044CA  EE20 F009          	lfsr	2,9
  6324   0044CE  5023               	movf	reverseOneSquare@mL^0,w,c
  6325   0044D0  26D9               	addwf	fsr2l,f,c
  6326   0044D2  5024               	movf	(reverseOneSquare@mL+1)^0,w,c
  6327   0044D4  22DA               	addwfc	fsr2h,f,c
  6328   0044D6  50DF               	movf	indf2,w,c
  6329   0044D8  2430               	addwf	reverseOneSquare@cur_power^0,w,c
  6330   0044DA  C023  FFD9         	movff	reverseOneSquare@mL,fsr2l
  6331   0044DE  C024  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  6332   0044E2  6EDF               	movwf	indf2,c
  6333                           
  6334                           ;dc_motor.c: 496:         mR->power = cur_power+mR->compensation;
  6335   0044E4  EE20 F009          	lfsr	2,9
  6336   0044E8  5025               	movf	reverseOneSquare@mR^0,w,c
  6337   0044EA  26D9               	addwf	fsr2l,f,c
  6338   0044EC  5026               	movf	(reverseOneSquare@mR+1)^0,w,c
  6339   0044EE  22DA               	addwfc	fsr2h,f,c
  6340   0044F0  50DF               	movf	indf2,w,c
  6341   0044F2  2430               	addwf	reverseOneSquare@cur_power^0,w,c
  6342   0044F4  C025  FFD9         	movff	reverseOneSquare@mR,fsr2l
  6343   0044F8  C026  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  6344   0044FC  6EDF               	movwf	indf2,c
  6345   0044FE                     
  6346                           ;dc_motor.c: 497:         setMotorPWM(mL);
  6347   0044FE  C023  F01D         	movff	reverseOneSquare@mL,setMotorPWM@m
  6348   004502  C024  F01E         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  6349   004506  EC97  F024         	call	_setMotorPWM	;wreg free
  6350   00450A                     
  6351                           ;dc_motor.c: 498:         setMotorPWM(mR);
  6352   00450A  C025  F01D         	movff	reverseOneSquare@mR,setMotorPWM@m
  6353   00450E  C026  F01E         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  6354   004512  EC97  F024         	call	_setMotorPWM	;wreg free
  6355   004516                     
  6356                           ;dc_motor.c: 499:         for (i=0;i<straightRamp;i++) {
  6357   004516  0E00               	movlw	0
  6358   004518  6E2F               	movwf	(reverseOneSquare@i+1)^0,c
  6359   00451A  0E00               	movlw	0
  6360   00451C  6E2E               	movwf	reverseOneSquare@i^0,c
  6361   00451E  EF9B  F022         	goto	l686
  6362   004522                     l3378:
  6363                           
  6364                           ;dc_motor.c: 500:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6365   004522  0E68               	movlw	104
  6366   004524  6E2B               	movwf	??_reverseOneSquare^0,c
  6367   004526  0EE4               	movlw	228
  6368   004528                     u4787:
  6369   004528  2EE8               	decfsz	wreg,f,c
  6370   00452A  D7FE               	bra	u4787
  6371   00452C  2E2B               	decfsz	??_reverseOneSquare^0,f,c
  6372   00452E  D7FC               	bra	u4787
  6373   004530  D000               	nop2	
  6374   004532                     
  6375                           ;dc_motor.c: 501:         }
  6376   004532  4A2E               	infsnz	reverseOneSquare@i^0,f,c
  6377   004534  2A2F               	incf	(reverseOneSquare@i+1)^0,f,c
  6378   004536                     l686:
  6379   004536  502A               	movf	reverseOneSquare@straightRamp^0,w,c
  6380   004538  6E2B               	movwf	??_reverseOneSquare^0,c
  6381   00453A  6A2C               	clrf	(??_reverseOneSquare+1)^0,c
  6382   00453C  502B               	movf	??_reverseOneSquare^0,w,c
  6383   00453E  5C2E               	subwf	reverseOneSquare@i^0,w,c
  6384   004540  502F               	movf	(reverseOneSquare@i+1)^0,w,c
  6385   004542  0A80               	xorlw	128
  6386   004544  6E2D               	movwf	(??_reverseOneSquare+2)^0,c
  6387   004546  502C               	movf	(??_reverseOneSquare+1)^0,w,c
  6388   004548  0A80               	xorlw	128
  6389   00454A  582D               	subwfb	(??_reverseOneSquare+2)^0,w,c
  6390   00454C  A0D8               	btfss	status,0,c
  6391   00454E  EFAB  F022         	goto	u2181
  6392   004552  EFAD  F022         	goto	u2180
  6393   004556                     u2181:
  6394   004556  EF91  F022         	goto	l3378
  6395   00455A                     u2180:
  6396   00455A                     
  6397                           ;dc_motor.c: 502:     }
  6398   00455A  0630               	decf	reverseOneSquare@cur_power^0,f,c
  6399   00455C  A0D8               	btfss	status,0,c
  6400   00455E  0631               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  6401   004560  EF5C  F022         	goto	l3366
  6402   004564                     l3386:
  6403                           
  6404                           ;dc_motor.c: 503:     mL->power = 0;
  6405   004564  C023  FFD9         	movff	reverseOneSquare@mL,fsr2l
  6406   004568  C024  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  6407   00456C  6ADF               	clrf	indf2,c
  6408                           
  6409                           ;dc_motor.c: 504:     mR->power = 0;
  6410   00456E  C025  FFD9         	movff	reverseOneSquare@mR,fsr2l
  6411   004572  C026  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  6412   004576  6ADF               	clrf	indf2,c
  6413   004578  0012               	return		;funcret
  6414   00457A                     __end_of_reverseOneSquare:
  6415                           	callstack 0
  6416                           
  6417 ;; *************** function _resetTimer *****************
  6418 ;; Defined at:
  6419 ;;		line 23 in file "timers.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;		None
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;		None
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  1    wreg      void 
  6426 ;; Registers used:
  6427 ;;		wreg, status,2
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6437 ;;Total ram usage:        0 bytes
  6438 ;; Hardware stack levels used: 1
  6439 ;; Hardware stack levels required when called: 6
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		_main
  6444 ;;		_returnHome
  6445 ;;		_lostReturnHome
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text9
  6450   0055BE                     __ptext9:
  6451                           	callstack 0
  6452   0055BE                     _resetTimer:
  6453                           	callstack 24
  6454   0055BE                     
  6455                           ;timers.c: 25:     TMR0H=0;
  6456   0055BE  0E00               	movlw	0
  6457   0055C0  6ED4               	movwf	212,c	;volatile
  6458                           
  6459                           ;timers.c: 26:     TMR0L=0;
  6460   0055C2  0E00               	movlw	0
  6461   0055C4  6ED3               	movwf	211,c	;volatile
  6462   0055C6  0012               	return		;funcret
  6463   0055C8                     __end_of_resetTimer:
  6464                           	callstack 0
  6465                           
  6466 ;; *************** function _get16bitTMR0val *****************
  6467 ;; Defined at:
  6468 ;;		line 33 in file "timers.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;		None
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  timer_val       2   23[COMRAM] unsigned int 
  6473 ;;  timer_high      2   21[COMRAM] unsigned int 
  6474 ;;  timer_low       2   19[COMRAM] unsigned int 
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  2   15[COMRAM] unsigned int 
  6477 ;; Registers used:
  6478 ;;		wreg, status,2, status,0
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6485 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6487 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6488 ;;Total ram usage:       10 bytes
  6489 ;; Hardware stack levels used: 1
  6490 ;; Hardware stack levels required when called: 6
  6491 ;; This function calls:
  6492 ;;		Nothing
  6493 ;; This function is called by:
  6494 ;;		_main
  6495 ;;		_returnHome
  6496 ;;		_lostReturnHome
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text10
  6501   005400                     __ptext10:
  6502                           	callstack 0
  6503   005400                     _get16bitTMR0val:
  6504                           	callstack 22
  6505   005400                     
  6506                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  6507   005400  CFD3 F014          	movff	4051,get16bitTMR0val@timer_low	;volatile
  6508   005404  6A15               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  6509                           
  6510                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  6511   005406  CFD4 F016          	movff	4052,get16bitTMR0val@timer_high	;volatile
  6512   00540A  6A17               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  6513   00540C                     
  6514                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  6515   00540C  5016               	movf	get16bitTMR0val@timer_high^0,w,c
  6516   00540E  6E13               	movwf	(??_get16bitTMR0val+1)^0,c
  6517   005410  6A12               	clrf	??_get16bitTMR0val^0,c
  6518   005412  5014               	movf	get16bitTMR0val@timer_low^0,w,c
  6519   005414  1012               	iorwf	??_get16bitTMR0val^0,w,c
  6520   005416  6E18               	movwf	get16bitTMR0val@timer_val^0,c
  6521   005418  5015               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  6522   00541A  1013               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  6523   00541C  6E19               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  6524   00541E                     
  6525                           ;timers.c: 39:     return timer_val;
  6526   00541E  C018  F010         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  6527   005422  C019  F011         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  6528   005426  0012               	return		;funcret
  6529   005428                     __end_of_get16bitTMR0val:
  6530                           	callstack 0
  6531                           
  6532 ;; *************** function _fullSpeedAhead *****************
  6533 ;; Defined at:
  6534 ;;		line 457 in file "dc_motor.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  6537 ;;		 -> main@motorL(10), 
  6538 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  6539 ;;		 -> main@motorR(10), 
  6540 ;;  straightSpee    1   38[COMRAM] unsigned char 
  6541 ;;  straightRamp    1   39[COMRAM] unsigned char 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  cur_power       2   45[COMRAM] int 
  6544 ;;  i               2   43[COMRAM] int 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  1    wreg      void 
  6547 ;; Registers used:
  6548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6554 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6555 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6556 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6557 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6558 ;;Total ram usage:       13 bytes
  6559 ;; Hardware stack levels used: 1
  6560 ;; Hardware stack levels required when called: 8
  6561 ;; This function calls:
  6562 ;;		_setMotorPWM
  6563 ;; This function is called by:
  6564 ;;		_main
  6565 ;;		_move
  6566 ;;		_returnHome
  6567 ;;		_lostReturnHome
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text11
  6572   004CAE                     __ptext11:
  6573                           	callstack 0
  6574   004CAE                     _fullSpeedAhead:
  6575                           	callstack 20
  6576   004CAE                     
  6577                           ;dc_motor.c: 457: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 458: {;dc_motor.c: 459:     mL->direction = 1;
  6578   004CAE  EE20 F001          	lfsr	2,1
  6579   004CB2  5023               	movf	fullSpeedAhead@mL^0,w,c
  6580   004CB4  26D9               	addwf	fsr2l,f,c
  6581   004CB6  5024               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6582   004CB8  22DA               	addwfc	fsr2h,f,c
  6583   004CBA  0E01               	movlw	1
  6584   004CBC  6EDF               	movwf	indf2,c
  6585                           
  6586                           ;dc_motor.c: 460:     mR->direction = 1;
  6587   004CBE  EE20 F001          	lfsr	2,1
  6588   004CC2  5025               	movf	fullSpeedAhead@mR^0,w,c
  6589   004CC4  26D9               	addwf	fsr2l,f,c
  6590   004CC6  5026               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6591   004CC8  22DA               	addwfc	fsr2h,f,c
  6592   004CCA  0E01               	movlw	1
  6593   004CCC  6EDF               	movwf	indf2,c
  6594   004CCE                     
  6595                           ;dc_motor.c: 461:     int i;;dc_motor.c: 462:     int cur_power;;dc_motor.c: 463:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  6596   004CCE  0E00               	movlw	0
  6597   004CD0  6E2F               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  6598   004CD2  0E01               	movlw	1
  6599   004CD4  6E2E               	movwf	fullSpeedAhead@cur_power^0,c
  6600   004CD6  EFB7  F026         	goto	l3182
  6601   004CDA                     l3168:
  6602                           
  6603                           ;dc_motor.c: 464:         mL->power = cur_power+mL->compensation;
  6604   004CDA  EE20 F009          	lfsr	2,9
  6605   004CDE  5023               	movf	fullSpeedAhead@mL^0,w,c
  6606   004CE0  26D9               	addwf	fsr2l,f,c
  6607   004CE2  5024               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6608   004CE4  22DA               	addwfc	fsr2h,f,c
  6609   004CE6  50DF               	movf	indf2,w,c
  6610   004CE8  242E               	addwf	fullSpeedAhead@cur_power^0,w,c
  6611   004CEA  C023  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6612   004CEE  C024  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6613   004CF2  6EDF               	movwf	indf2,c
  6614                           
  6615                           ;dc_motor.c: 465:         mR->power = cur_power+mR->compensation;
  6616   004CF4  EE20 F009          	lfsr	2,9
  6617   004CF8  5025               	movf	fullSpeedAhead@mR^0,w,c
  6618   004CFA  26D9               	addwf	fsr2l,f,c
  6619   004CFC  5026               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6620   004CFE  22DA               	addwfc	fsr2h,f,c
  6621   004D00  50DF               	movf	indf2,w,c
  6622   004D02  242E               	addwf	fullSpeedAhead@cur_power^0,w,c
  6623   004D04  C025  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6624   004D08  C026  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6625   004D0C  6EDF               	movwf	indf2,c
  6626   004D0E                     
  6627                           ;dc_motor.c: 466:         setMotorPWM(mL);
  6628   004D0E  C023  F01D         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6629   004D12  C024  F01E         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6630   004D16  EC97  F024         	call	_setMotorPWM	;wreg free
  6631   004D1A                     
  6632                           ;dc_motor.c: 467:         setMotorPWM(mR);
  6633   004D1A  C025  F01D         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6634   004D1E  C026  F01E         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6635   004D22  EC97  F024         	call	_setMotorPWM	;wreg free
  6636   004D26                     
  6637                           ;dc_motor.c: 468:         for (i=0;i<straightRamp;i++) {
  6638   004D26  0E00               	movlw	0
  6639   004D28  6E2D               	movwf	(fullSpeedAhead@i+1)^0,c
  6640   004D2A  0E00               	movlw	0
  6641   004D2C  6E2C               	movwf	fullSpeedAhead@i^0,c
  6642   004D2E  EFA3  F026         	goto	l668
  6643   004D32                     l3176:
  6644                           
  6645                           ;dc_motor.c: 469:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6646   004D32  0E68               	movlw	104
  6647   004D34  6E29               	movwf	??_fullSpeedAhead^0,c
  6648   004D36  0EE4               	movlw	228
  6649   004D38                     u4797:
  6650   004D38  2EE8               	decfsz	wreg,f,c
  6651   004D3A  D7FE               	bra	u4797
  6652   004D3C  2E29               	decfsz	??_fullSpeedAhead^0,f,c
  6653   004D3E  D7FC               	bra	u4797
  6654   004D40  D000               	nop2	
  6655   004D42                     
  6656                           ;dc_motor.c: 470:         }
  6657   004D42  4A2C               	infsnz	fullSpeedAhead@i^0,f,c
  6658   004D44  2A2D               	incf	(fullSpeedAhead@i+1)^0,f,c
  6659   004D46                     l668:
  6660   004D46  5028               	movf	fullSpeedAhead@straightRamp^0,w,c
  6661   004D48  6E29               	movwf	??_fullSpeedAhead^0,c
  6662   004D4A  6A2A               	clrf	(??_fullSpeedAhead+1)^0,c
  6663   004D4C  5029               	movf	??_fullSpeedAhead^0,w,c
  6664   004D4E  5C2C               	subwf	fullSpeedAhead@i^0,w,c
  6665   004D50  502D               	movf	(fullSpeedAhead@i+1)^0,w,c
  6666   004D52  0A80               	xorlw	128
  6667   004D54  6E2B               	movwf	(??_fullSpeedAhead+2)^0,c
  6668   004D56  502A               	movf	(??_fullSpeedAhead+1)^0,w,c
  6669   004D58  0A80               	xorlw	128
  6670   004D5A  582B               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6671   004D5C  A0D8               	btfss	status,0,c
  6672   004D5E  EFB3  F026         	goto	u1961
  6673   004D62  EFB5  F026         	goto	u1960
  6674   004D66                     u1961:
  6675   004D66  EF99  F026         	goto	l3176
  6676   004D6A                     u1960:
  6677   004D6A                     
  6678                           ;dc_motor.c: 471:     }
  6679   004D6A  4A2E               	infsnz	fullSpeedAhead@cur_power^0,f,c
  6680   004D6C  2A2F               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  6681   004D6E                     l3182:
  6682   004D6E  5027               	movf	fullSpeedAhead@straightSpeed^0,w,c
  6683   004D70  6E29               	movwf	??_fullSpeedAhead^0,c
  6684   004D72  6A2A               	clrf	(??_fullSpeedAhead+1)^0,c
  6685   004D74  502E               	movf	fullSpeedAhead@cur_power^0,w,c
  6686   004D76  5C29               	subwf	??_fullSpeedAhead^0,w,c
  6687   004D78  502A               	movf	(??_fullSpeedAhead+1)^0,w,c
  6688   004D7A  0A80               	xorlw	128
  6689   004D7C  6E2B               	movwf	(??_fullSpeedAhead+2)^0,c
  6690   004D7E  502F               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  6691   004D80  0A80               	xorlw	128
  6692   004D82  582B               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6693   004D84  B0D8               	btfsc	status,0,c
  6694   004D86  EFC7  F026         	goto	u1971
  6695   004D8A  EFC9  F026         	goto	u1970
  6696   004D8E                     u1971:
  6697   004D8E  EF6D  F026         	goto	l3168
  6698   004D92                     u1970:
  6699   004D92  0012               	return		;funcret
  6700   004D94                     __end_of_fullSpeedAhead:
  6701                           	callstack 0
  6702                           
  6703 ;; *************** function _initUSART4 *****************
  6704 ;; Defined at:
  6705 ;;		line 4 in file "serial.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;		None
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;		None
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;Total ram usage:        0 bytes
  6724 ;; Hardware stack levels used: 1
  6725 ;; Hardware stack levels required when called: 6
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_main
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text12
  6734   005544                     __ptext12:
  6735                           	callstack 0
  6736   005544                     _initUSART4:
  6737                           	callstack 24
  6738   005544                     
  6739                           ;serial.c: 7:     RC0PPS = 0x12;
  6740   005544  0E12               	movlw	18
  6741   005546  010E               	movlb	14	; () banked
  6742   005548  6F62               	movwf	98,b	;volatile
  6743                           
  6744                           ;serial.c: 8:     RX4PPS = 0x11;
  6745   00554A  0E11               	movlw	17
  6746   00554C  6F15               	movwf	21,b	;volatile
  6747   00554E                     
  6748                           ; BSR set to: 14
  6749                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  6750   00554E  97E9               	bcf	233,3,b	;volatile
  6751   005550                     
  6752                           ; BSR set to: 14
  6753                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  6754   005550  95E8               	bcf	232,2,b	;volatile
  6755                           
  6756                           ;serial.c: 13:     SP4BRGL = 51;
  6757   005552  0E33               	movlw	51
  6758   005554  6FE5               	movwf	229,b	;volatile
  6759                           
  6760                           ;serial.c: 14:     SP4BRGH = 0;
  6761   005556  0E00               	movlw	0
  6762   005558  6FE6               	movwf	230,b	;volatile
  6763   00555A                     
  6764                           ; BSR set to: 14
  6765                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  6766   00555A  89E7               	bsf	231,4,b	;volatile
  6767   00555C                     
  6768                           ; BSR set to: 14
  6769                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  6770   00555C  8BE8               	bsf	232,5,b	;volatile
  6771   00555E                     
  6772                           ; BSR set to: 14
  6773                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  6774   00555E  8FE7               	bsf	231,7,b	;volatile
  6775   005560                     
  6776                           ; BSR set to: 14
  6777   005560  0012               	return		;funcret
  6778   005562                     __end_of_initUSART4:
  6779                           	callstack 0
  6780                           
  6781 ;; *************** function _initDCmotorsPWM *****************
  6782 ;; Defined at:
  6783 ;;		line 9 in file "dc_motor.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  PWMperiod       2   15[COMRAM] unsigned int 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      void 
  6790 ;; Registers used:
  6791 ;;		wreg, status,2
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6801 ;;Total ram usage:        2 bytes
  6802 ;; Hardware stack levels used: 1
  6803 ;; Hardware stack levels required when called: 6
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_main
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           	psect	text13
  6812   005048                     __ptext13:
  6813                           	callstack 0
  6814   005048                     _initDCmotorsPWM:
  6815                           	callstack 24
  6816   005048                     
  6817                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
  6818   005048  947D               	bcf	125,2,c	;volatile
  6819                           
  6820                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  6821   00504A  9485               	bcf	133,2,c	;volatile
  6822                           
  6823                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  6824   00504C  987D               	bcf	125,4,c	;volatile
  6825                           
  6826                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  6827   00504E  9885               	bcf	133,4,c	;volatile
  6828                           
  6829                           ;dc_motor.c: 16:     LATCbits.LATC7=0;
  6830   005050  9E7B               	bcf	123,7,c	;volatile
  6831                           
  6832                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  6833   005052  9E83               	bcf	131,7,c	;volatile
  6834                           
  6835                           ;dc_motor.c: 18:     LATGbits.LATG6=0;
  6836   005054  9C7F               	bcf	127,6,c	;volatile
  6837                           
  6838                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  6839   005056  9C87               	bcf	135,6,c	;volatile
  6840   005058                     
  6841                           ;dc_motor.c: 22:     RE2PPS=0x05;
  6842   005058  0E05               	movlw	5
  6843   00505A  010E               	movlb	14	; () banked
  6844   00505C  6F74               	movwf	116,b	;volatile
  6845                           
  6846                           ;dc_motor.c: 23:     RE4PPS=0x06;
  6847   00505E  0E06               	movlw	6
  6848   005060  6F76               	movwf	118,b	;volatile
  6849                           
  6850                           ;dc_motor.c: 24:     RC7PPS=0x07;
  6851   005062  0E07               	movlw	7
  6852   005064  6F69               	movwf	105,b	;volatile
  6853                           
  6854                           ;dc_motor.c: 25:     RG6PPS=0x08;
  6855   005066  0E08               	movlw	8
  6856   005068  6F88               	movwf	136,b	;volatile
  6857                           
  6858                           ;dc_motor.c: 28:     T2CONbits.CKPS=0b011;
  6859   00506A  50BD               	movf	189,w,c	;volatile
  6860   00506C  0B8F               	andlw	-113
  6861   00506E  0930               	iorlw	48
  6862   005070  6EBD               	movwf	189,c	;volatile
  6863                           
  6864                           ;dc_motor.c: 29:     T2HLTbits.MODE=0b00000;
  6865   005072  0EE0               	movlw	-32
  6866   005074  16BE               	andwf	190,f,c	;volatile
  6867                           
  6868                           ;dc_motor.c: 30:     T2CLKCONbits.CS=0b0001;
  6869   005076  50BF               	movf	191,w,c	;volatile
  6870   005078  0BF0               	andlw	-16
  6871   00507A  0901               	iorlw	1
  6872   00507C  6EBF               	movwf	191,c	;volatile
  6873   00507E                     
  6874                           ; BSR set to: 14
  6875                           ;dc_motor.c: 34:     T2PR=PWMperiod;
  6876   00507E  C010  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  6877   005082                     
  6878                           ; BSR set to: 14
  6879                           ;dc_motor.c: 35:     T2CONbits.ON=1;
  6880   005082  8EBD               	bsf	189,7,c	;volatile
  6881                           
  6882                           ;dc_motor.c: 39:     CCPR1H=0;
  6883   005084  0E00               	movlw	0
  6884   005086  6EAA               	movwf	170,c	;volatile
  6885                           
  6886                           ;dc_motor.c: 40:     CCPR2H=0;
  6887   005088  0E00               	movlw	0
  6888   00508A  6EA6               	movwf	166,c	;volatile
  6889                           
  6890                           ;dc_motor.c: 41:     CCPR3H=0;
  6891   00508C  0E00               	movlw	0
  6892   00508E  010F               	movlb	15	; () banked
  6893   005090  6F25               	movwf	37,b	;volatile
  6894                           
  6895                           ;dc_motor.c: 42:     CCPR4H=0;
  6896   005092  0E00               	movlw	0
  6897   005094  6F21               	movwf	33,b	;volatile
  6898                           
  6899                           ;dc_motor.c: 45:     CCPTMRS0bits.C1TSEL=0;
  6900   005096  0EFC               	movlw	-4
  6901   005098  16AD               	andwf	173,f,c	;volatile
  6902                           
  6903                           ;dc_motor.c: 46:     CCPTMRS0bits.C2TSEL=0;
  6904   00509A  0EF3               	movlw	-13
  6905   00509C  16AD               	andwf	173,f,c	;volatile
  6906                           
  6907                           ;dc_motor.c: 47:     CCPTMRS0bits.C3TSEL=0;
  6908   00509E  0ECF               	movlw	-49
  6909   0050A0  16AD               	andwf	173,f,c	;volatile
  6910                           
  6911                           ;dc_motor.c: 48:     CCPTMRS0bits.C4TSEL=0;
  6912   0050A2  0E3F               	movlw	-193
  6913   0050A4  16AD               	andwf	173,f,c	;volatile
  6914   0050A6                     
  6915                           ; BSR set to: 15
  6916                           ;dc_motor.c: 51:     CCP1CONbits.FMT=1;
  6917   0050A6  88AB               	bsf	171,4,c	;volatile
  6918                           
  6919                           ;dc_motor.c: 52:     CCP1CONbits.CCP1MODE=0b1100;
  6920   0050A8  50AB               	movf	171,w,c	;volatile
  6921   0050AA  0BF0               	andlw	-16
  6922   0050AC  090C               	iorlw	12
  6923   0050AE  6EAB               	movwf	171,c	;volatile
  6924   0050B0                     
  6925                           ; BSR set to: 15
  6926                           ;dc_motor.c: 53:     CCP1CONbits.EN=1;
  6927   0050B0  8EAB               	bsf	171,7,c	;volatile
  6928   0050B2                     
  6929                           ; BSR set to: 15
  6930                           ;dc_motor.c: 55:     CCP2CONbits.FMT=1;
  6931   0050B2  88A7               	bsf	167,4,c	;volatile
  6932                           
  6933                           ;dc_motor.c: 56:     CCP2CONbits.CCP2MODE=0b1100;
  6934   0050B4  50A7               	movf	167,w,c	;volatile
  6935   0050B6  0BF0               	andlw	-16
  6936   0050B8  090C               	iorlw	12
  6937   0050BA  6EA7               	movwf	167,c	;volatile
  6938   0050BC                     
  6939                           ; BSR set to: 15
  6940                           ;dc_motor.c: 57:     CCP2CONbits.EN=1;
  6941   0050BC  8EA7               	bsf	167,7,c	;volatile
  6942   0050BE                     
  6943                           ; BSR set to: 15
  6944                           ;dc_motor.c: 59:     CCP3CONbits.FMT=1;
  6945   0050BE  8926               	bsf	38,4,b	;volatile
  6946                           
  6947                           ;dc_motor.c: 60:     CCP3CONbits.CCP3MODE=0b1100;
  6948   0050C0  5126               	movf	38,w,b	;volatile
  6949   0050C2  0BF0               	andlw	-16
  6950   0050C4  090C               	iorlw	12
  6951   0050C6  6F26               	movwf	38,b	;volatile
  6952   0050C8                     
  6953                           ; BSR set to: 15
  6954                           ;dc_motor.c: 61:     CCP3CONbits.EN=1;
  6955   0050C8  8F26               	bsf	38,7,b	;volatile
  6956   0050CA                     
  6957                           ; BSR set to: 15
  6958                           ;dc_motor.c: 63:     CCP4CONbits.FMT=1;
  6959   0050CA  8922               	bsf	34,4,b	;volatile
  6960                           
  6961                           ;dc_motor.c: 64:     CCP4CONbits.CCP4MODE=0b1100;
  6962   0050CC  5122               	movf	34,w,b	;volatile
  6963   0050CE  0BF0               	andlw	-16
  6964   0050D0  090C               	iorlw	12
  6965   0050D2  6F22               	movwf	34,b	;volatile
  6966   0050D4                     
  6967                           ; BSR set to: 15
  6968                           ;dc_motor.c: 65:     CCP4CONbits.EN=1;
  6969   0050D4  8F22               	bsf	34,7,b	;volatile
  6970   0050D6                     
  6971                           ; BSR set to: 15
  6972   0050D6  0012               	return		;funcret
  6973   0050D8                     __end_of_initDCmotorsPWM:
  6974                           	callstack 0
  6975                           
  6976 ;; *************** function _color_detect *****************
  6977 ;; Defined at:
  6978 ;;		line 116 in file "color.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  HSV             6   19[COMRAM] struct HSV_val
  6981 ;;  red             6   25[COMRAM] struct HSV_calib
  6982 ;;  green           6   31[COMRAM] struct HSV_calib
  6983 ;;  blue            6   37[COMRAM] struct HSV_calib
  6984 ;;  yellow          6   43[COMRAM] struct HSV_calib
  6985 ;;  pink            6   49[COMRAM] struct HSV_calib
  6986 ;;  orange          6   55[COMRAM] struct HSV_calib
  6987 ;;  lightblue       6   61[COMRAM] struct HSV_calib
  6988 ;;  white           6   67[COMRAM] struct HSV_calib
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;  color           1   73[COMRAM] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      unsigned char 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7000 ;;      Params:        54       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;      Totals:        55      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7004 ;;Total ram usage:       68 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; Hardware stack levels required when called: 7
  7007 ;; This function calls:
  7008 ;;		_max
  7009 ;;		_min
  7010 ;; This function is called by:
  7011 ;;		_main
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text14
  7016   003788                     __ptext14:
  7017                           	callstack 0
  7018   003788                     _color_detect:
  7019                           	callstack 23
  7020   003788                     
  7021                           ;color.c: 116: unsigned char color_detect(HSV_val HSV, HSV_calib red, HSV_calib green, H
      +                          SV_calib blue, HSV_calib yellow, HSV_calib pink, HSV_calib orange, HSV_calib lightblue, 
      +                          HSV_calib white);color.c: 117: {;color.c: 118:     unsigned char color=9;
  7022   003788  0E09               	movlw	9
  7023   00378A  6E4A               	movwf	color_detect@color^0,c
  7024   00378C                     
  7025                           ;color.c: 121:     if (min(green.H,lightblue.H)-2000 < HSV.H && HSV.H < max(green.H,ligh
      +                          tblue.H)+2000) {
  7026   00378C  C020  F010         	movff	color_detect@green,min@a
  7027   003790  C021  F011         	movff	color_detect@green+1,min@a+1
  7028   003794  C03E  F012         	movff	color_detect@lightblue,min@b
  7029   003798  C03F  F013         	movff	color_detect@lightblue+1,min@b+1
  7030   00379C  ECBF  F029         	call	_min	;wreg free
  7031   0037A0  0E30               	movlw	48
  7032   0037A2  2410               	addwf	?_min^0,w,c
  7033   0037A4  0100               	movlb	0	; () banked
  7034   0037A6  6F60               	movwf	??_color_detect& (0+255),b
  7035   0037A8  0EF8               	movlw	248
  7036   0037AA  2011               	addwfc	(?_min+1)^0,w,c
  7037   0037AC  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7038   0037AE  5014               	movf	color_detect@HSV^0,w,c
  7039   0037B0  5D60               	subwf	??_color_detect& (0+255),w,b
  7040   0037B2  5015               	movf	(color_detect@HSV+1)^0,w,c
  7041   0037B4  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7042   0037B6  B0D8               	btfsc	status,0,c
  7043   0037B8  EFE0  F01B         	goto	u3011
  7044   0037BC  EFE2  F01B         	goto	u3010
  7045   0037C0                     u3011:
  7046   0037C0  EF19  F01C         	goto	l4194
  7047   0037C4                     u3010:
  7048   0037C4                     
  7049                           ; BSR set to: 0
  7050   0037C4  C020  F010         	movff	color_detect@green,max@a
  7051   0037C8  C021  F011         	movff	color_detect@green+1,max@a+1
  7052   0037CC  C03E  F012         	movff	color_detect@lightblue,max@b
  7053   0037D0  C03F  F013         	movff	color_detect@lightblue+1,max@b+1
  7054   0037D4  ECD5  F029         	call	_max	;wreg free
  7055   0037D8  0ED0               	movlw	208
  7056   0037DA  2410               	addwf	?_max^0,w,c
  7057   0037DC  0100               	movlb	0	; () banked
  7058   0037DE  6F60               	movwf	??_color_detect& (0+255),b
  7059   0037E0  0E07               	movlw	7
  7060   0037E2  2011               	addwfc	(?_max+1)^0,w,c
  7061   0037E4  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7062   0037E6  5160               	movf	??_color_detect& (0+255),w,b
  7063   0037E8  5C14               	subwf	color_detect@HSV^0,w,c
  7064   0037EA  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7065   0037EC  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7066   0037EE  B0D8               	btfsc	status,0,c
  7067   0037F0  EFFC  F01B         	goto	u3021
  7068   0037F4  EFFE  F01B         	goto	u3020
  7069   0037F8                     u3021:
  7070   0037F8  EF19  F01C         	goto	l4194
  7071   0037FC                     u3020:
  7072   0037FC                     
  7073                           ; BSR set to: 0
  7074                           ;color.c: 122:         if (HSV.S > lightblue.S + 1000){color = 2;}
  7075   0037FC  0EE8               	movlw	232
  7076   0037FE  2440               	addwf	(color_detect@lightblue+2)^0,w,c
  7077   003800  6F60               	movwf	??_color_detect& (0+255),b
  7078   003802  0E03               	movlw	3
  7079   003804  2041               	addwfc	(color_detect@lightblue+3)^0,w,c
  7080   003806  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7081   003808  5016               	movf	(color_detect@HSV+2)^0,w,c
  7082   00380A  5D60               	subwf	??_color_detect& (0+255),w,b
  7083   00380C  5017               	movf	(color_detect@HSV+3)^0,w,c
  7084   00380E  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7085   003810  B0D8               	btfsc	status,0,c
  7086   003812  EF0D  F01C         	goto	u3031
  7087   003816  EF0F  F01C         	goto	u3030
  7088   00381A                     u3031:
  7089   00381A  EF13  F01C         	goto	l4192
  7090   00381E                     u3030:
  7091   00381E                     
  7092                           ; BSR set to: 0
  7093   00381E  0E02               	movlw	2
  7094   003820  6E4A               	movwf	color_detect@color^0,c
  7095   003822  EFDA  F01C         	goto	l4222
  7096   003826                     l4192:
  7097                           
  7098                           ; BSR set to: 0
  7099   003826  0E07               	movlw	7
  7100   003828  6E4A               	movwf	color_detect@color^0,c
  7101   00382A  EFDA  F01C         	goto	l4222
  7102   00382E                     l165:
  7103                           
  7104                           ; BSR set to: 0
  7105                           ;color.c: 124:     }
  7106   00382E  EFDA  F01C         	goto	l4222
  7107   003832                     l4194:
  7108                           
  7109                           ; BSR set to: 0
  7110   003832  0E48               	movlw	72
  7111   003834  2426               	addwf	color_detect@blue^0,w,c
  7112   003836  6F60               	movwf	??_color_detect& (0+255),b
  7113   003838  0EF4               	movlw	244
  7114   00383A  2027               	addwfc	(color_detect@blue+1)^0,w,c
  7115   00383C  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7116   00383E  5014               	movf	color_detect@HSV^0,w,c
  7117   003840  5D60               	subwf	??_color_detect& (0+255),w,b
  7118   003842  5015               	movf	(color_detect@HSV+1)^0,w,c
  7119   003844  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7120   003846  B0D8               	btfsc	status,0,c
  7121   003848  EF28  F01C         	goto	u3041
  7122   00384C  EF2A  F01C         	goto	u3040
  7123   003850                     u3041:
  7124   003850  EF3F  F01C         	goto	l4200
  7125   003854                     u3040:
  7126   003854                     
  7127                           ; BSR set to: 0
  7128   003854  0EB8               	movlw	184
  7129   003856  2426               	addwf	color_detect@blue^0,w,c
  7130   003858  6F60               	movwf	??_color_detect& (0+255),b
  7131   00385A  0E0B               	movlw	11
  7132   00385C  2027               	addwfc	(color_detect@blue+1)^0,w,c
  7133   00385E  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7134   003860  5160               	movf	??_color_detect& (0+255),w,b
  7135   003862  5C14               	subwf	color_detect@HSV^0,w,c
  7136   003864  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7137   003866  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7138   003868  B0D8               	btfsc	status,0,c
  7139   00386A  EF39  F01C         	goto	u3051
  7140   00386E  EF3B  F01C         	goto	u3050
  7141   003872                     u3051:
  7142   003872  EF3F  F01C         	goto	l4200
  7143   003876                     u3050:
  7144   003876                     
  7145                           ; BSR set to: 0
  7146   003876  0E03               	movlw	3
  7147   003878  6E4A               	movwf	color_detect@color^0,c
  7148   00387A  EFDA  F01C         	goto	l4222
  7149   00387E                     l4200:
  7150                           
  7151                           ; BSR set to: 0
  7152   00387E  C02C  F010         	movff	color_detect@yellow,min@a
  7153   003882  C02D  F011         	movff	color_detect@yellow+1,min@a+1
  7154   003886  C032  F012         	movff	color_detect@pink,min@b
  7155   00388A  C033  F013         	movff	color_detect@pink+1,min@b+1
  7156   00388E  ECBF  F029         	call	_min	;wreg free
  7157   003892  0E18               	movlw	24
  7158   003894  2410               	addwf	?_min^0,w,c
  7159   003896  0100               	movlb	0	; () banked
  7160   003898  6F60               	movwf	??_color_detect& (0+255),b
  7161   00389A  0EFC               	movlw	252
  7162   00389C  2011               	addwfc	(?_min+1)^0,w,c
  7163   00389E  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7164   0038A0  5014               	movf	color_detect@HSV^0,w,c
  7165   0038A2  5D60               	subwf	??_color_detect& (0+255),w,b
  7166   0038A4  5015               	movf	(color_detect@HSV+1)^0,w,c
  7167   0038A6  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7168   0038A8  B0D8               	btfsc	status,0,c
  7169   0038AA  EF59  F01C         	goto	u3061
  7170   0038AE  EF5B  F01C         	goto	u3060
  7171   0038B2                     u3061:
  7172   0038B2  EF90  F01C         	goto	l4210
  7173   0038B6                     u3060:
  7174   0038B6                     
  7175                           ; BSR set to: 0
  7176   0038B6  C02C  F010         	movff	color_detect@yellow,max@a
  7177   0038BA  C02D  F011         	movff	color_detect@yellow+1,max@a+1
  7178   0038BE  C032  F012         	movff	color_detect@pink,max@b
  7179   0038C2  C033  F013         	movff	color_detect@pink+1,max@b+1
  7180   0038C6  ECD5  F029         	call	_max	;wreg free
  7181   0038CA  0EE8               	movlw	232
  7182   0038CC  2410               	addwf	?_max^0,w,c
  7183   0038CE  0100               	movlb	0	; () banked
  7184   0038D0  6F60               	movwf	??_color_detect& (0+255),b
  7185   0038D2  0E03               	movlw	3
  7186   0038D4  2011               	addwfc	(?_max+1)^0,w,c
  7187   0038D6  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7188   0038D8  5160               	movf	??_color_detect& (0+255),w,b
  7189   0038DA  5C14               	subwf	color_detect@HSV^0,w,c
  7190   0038DC  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7191   0038DE  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7192   0038E0  B0D8               	btfsc	status,0,c
  7193   0038E2  EF75  F01C         	goto	u3071
  7194   0038E6  EF77  F01C         	goto	u3070
  7195   0038EA                     u3071:
  7196   0038EA  EF90  F01C         	goto	l4210
  7197   0038EE                     u3070:
  7198   0038EE                     
  7199                           ; BSR set to: 0
  7200                           ;color.c: 131:         if (HSV.S > pink.S + 500){color = 4;}
  7201   0038EE  0EF4               	movlw	244
  7202   0038F0  2434               	addwf	(color_detect@pink+2)^0,w,c
  7203   0038F2  6F60               	movwf	??_color_detect& (0+255),b
  7204   0038F4  0E01               	movlw	1
  7205   0038F6  2035               	addwfc	(color_detect@pink+3)^0,w,c
  7206   0038F8  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7207   0038FA  5016               	movf	(color_detect@HSV+2)^0,w,c
  7208   0038FC  5D60               	subwf	??_color_detect& (0+255),w,b
  7209   0038FE  5017               	movf	(color_detect@HSV+3)^0,w,c
  7210   003900  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7211   003902  B0D8               	btfsc	status,0,c
  7212   003904  EF86  F01C         	goto	u3081
  7213   003908  EF88  F01C         	goto	u3080
  7214   00390C                     u3081:
  7215   00390C  EF8C  F01C         	goto	l4208
  7216   003910                     u3080:
  7217   003910                     
  7218                           ; BSR set to: 0
  7219   003910  0E04               	movlw	4
  7220   003912  6E4A               	movwf	color_detect@color^0,c
  7221   003914  EFDA  F01C         	goto	l4222
  7222   003918                     l4208:
  7223                           
  7224                           ; BSR set to: 0
  7225   003918  0E05               	movlw	5
  7226   00391A  6E4A               	movwf	color_detect@color^0,c
  7227   00391C  EFDA  F01C         	goto	l4222
  7228   003920                     l4210:
  7229                           
  7230                           ; BSR set to: 0
  7231   003920  0E0C               	movlw	12
  7232   003922  2438               	addwf	color_detect@orange^0,w,c
  7233   003924  6F60               	movwf	??_color_detect& (0+255),b
  7234   003926  0EFE               	movlw	254
  7235   003928  2039               	addwfc	(color_detect@orange+1)^0,w,c
  7236   00392A  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7237   00392C  5014               	movf	color_detect@HSV^0,w,c
  7238   00392E  5D60               	subwf	??_color_detect& (0+255),w,b
  7239   003930  5015               	movf	(color_detect@HSV+1)^0,w,c
  7240   003932  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7241   003934  B0D8               	btfsc	status,0,c
  7242   003936  EF9F  F01C         	goto	u3091
  7243   00393A  EFA1  F01C         	goto	u3090
  7244   00393E                     u3091:
  7245   00393E  EFB6  F01C         	goto	l4216
  7246   003942                     u3090:
  7247   003942                     
  7248                           ; BSR set to: 0
  7249   003942  0EF4               	movlw	244
  7250   003944  2438               	addwf	color_detect@orange^0,w,c
  7251   003946  6F60               	movwf	??_color_detect& (0+255),b
  7252   003948  0E01               	movlw	1
  7253   00394A  2039               	addwfc	(color_detect@orange+1)^0,w,c
  7254   00394C  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7255   00394E  5160               	movf	??_color_detect& (0+255),w,b
  7256   003950  5C14               	subwf	color_detect@HSV^0,w,c
  7257   003952  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7258   003954  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7259   003956  B0D8               	btfsc	status,0,c
  7260   003958  EFB0  F01C         	goto	u3101
  7261   00395C  EFB2  F01C         	goto	u3100
  7262   003960                     u3101:
  7263   003960  EFB6  F01C         	goto	l4216
  7264   003964                     u3100:
  7265   003964                     
  7266                           ; BSR set to: 0
  7267   003964  0E06               	movlw	6
  7268   003966  6E4A               	movwf	color_detect@color^0,c
  7269   003968  EFDA  F01C         	goto	l4222
  7270   00396C                     l4216:
  7271                           
  7272                           ; BSR set to: 0
  7273   00396C  0E0C               	movlw	12
  7274   00396E  2444               	addwf	color_detect@white^0,w,c
  7275   003970  6F60               	movwf	??_color_detect& (0+255),b
  7276   003972  0EFE               	movlw	254
  7277   003974  2045               	addwfc	(color_detect@white+1)^0,w,c
  7278   003976  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7279   003978  5014               	movf	color_detect@HSV^0,w,c
  7280   00397A  5D60               	subwf	??_color_detect& (0+255),w,b
  7281   00397C  5015               	movf	(color_detect@HSV+1)^0,w,c
  7282   00397E  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7283   003980  B0D8               	btfsc	status,0,c
  7284   003982  EFC5  F01C         	goto	u3111
  7285   003986  EFC7  F01C         	goto	u3110
  7286   00398A                     u3111:
  7287   00398A  EF17  F01C         	goto	l165
  7288   00398E                     u3110:
  7289   00398E                     
  7290                           ; BSR set to: 0
  7291   00398E  0EF4               	movlw	244
  7292   003990  2444               	addwf	color_detect@white^0,w,c
  7293   003992  6F60               	movwf	??_color_detect& (0+255),b
  7294   003994  0E01               	movlw	1
  7295   003996  2045               	addwfc	(color_detect@white+1)^0,w,c
  7296   003998  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7297   00399A  5160               	movf	??_color_detect& (0+255),w,b
  7298   00399C  5C14               	subwf	color_detect@HSV^0,w,c
  7299   00399E  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7300   0039A0  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7301   0039A2  B0D8               	btfsc	status,0,c
  7302   0039A4  EFD6  F01C         	goto	u3121
  7303   0039A8  EFD8  F01C         	goto	u3120
  7304   0039AC                     u3121:
  7305   0039AC  EF17  F01C         	goto	l165
  7306   0039B0                     u3120:
  7307   0039B0                     
  7308                           ; BSR set to: 0
  7309   0039B0  0E08               	movlw	8
  7310   0039B2  6E4A               	movwf	color_detect@color^0,c
  7311   0039B4                     l4222:
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;color.c: 142:     if (red.H > 30000){
  7315   0039B4  0E31               	movlw	49
  7316   0039B6  5C1A               	subwf	color_detect@red^0,w,c
  7317   0039B8  0E75               	movlw	117
  7318   0039BA  581B               	subwfb	(color_detect@red+1)^0,w,c
  7319   0039BC  A0D8               	btfss	status,0,c
  7320   0039BE  EFE3  F01C         	goto	u3131
  7321   0039C2  EFE5  F01C         	goto	u3130
  7322   0039C6                     u3131:
  7323   0039C6  EF39  F01D         	goto	l4234
  7324   0039CA                     u3130:
  7325   0039CA                     
  7326                           ; BSR set to: 0
  7327                           ;color.c: 143:         if(((red.H)-1000 < HSV.H && HSV.H < 36000) || (0 < HSV.H && HSV.H
      +                           < 1000 + red.H -36000)) {color = 1;}
  7328   0039CA  0E18               	movlw	24
  7329   0039CC  241A               	addwf	color_detect@red^0,w,c
  7330   0039CE  6F60               	movwf	??_color_detect& (0+255),b
  7331   0039D0  0EFC               	movlw	252
  7332   0039D2  201B               	addwfc	(color_detect@red+1)^0,w,c
  7333   0039D4  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7334   0039D6  5014               	movf	color_detect@HSV^0,w,c
  7335   0039D8  5D60               	subwf	??_color_detect& (0+255),w,b
  7336   0039DA  5015               	movf	(color_detect@HSV+1)^0,w,c
  7337   0039DC  5961               	subwfb	(??_color_detect+1)& (0+255),w,b
  7338   0039DE  B0D8               	btfsc	status,0,c
  7339   0039E0  EFF4  F01C         	goto	u3141
  7340   0039E4  EFF6  F01C         	goto	u3140
  7341   0039E8                     u3141:
  7342   0039E8  EF01  F01D         	goto	l4228
  7343   0039EC                     u3140:
  7344   0039EC                     
  7345                           ; BSR set to: 0
  7346   0039EC  0EA0               	movlw	160
  7347   0039EE  5C14               	subwf	color_detect@HSV^0,w,c
  7348   0039F0  0E8C               	movlw	140
  7349   0039F2  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7350   0039F4  A0D8               	btfss	status,0,c
  7351   0039F6  EFFF  F01C         	goto	u3151
  7352   0039FA  EF01  F01D         	goto	u3150
  7353   0039FE                     u3151:
  7354   0039FE  EF37  F01D         	goto	l4232
  7355   003A02                     u3150:
  7356   003A02                     l4228:
  7357                           
  7358                           ; BSR set to: 0
  7359   003A02  5014               	movf	color_detect@HSV^0,w,c
  7360   003A04  1015               	iorwf	(color_detect@HSV+1)^0,w,c
  7361   003A06  B4D8               	btfsc	status,2,c
  7362   003A08  EF08  F01D         	goto	u3161
  7363   003A0C  EF0A  F01D         	goto	u3160
  7364   003A10                     u3161:
  7365   003A10  EF39  F01D         	goto	l4234
  7366   003A14                     u3160:
  7367   003A14                     
  7368                           ; BSR set to: 0
  7369   003A14  0EE8               	movlw	232
  7370   003A16  241A               	addwf	color_detect@red^0,w,c
  7371   003A18  6F60               	movwf	??_color_detect& (0+255),b
  7372   003A1A  0E03               	movlw	3
  7373   003A1C  201B               	addwfc	(color_detect@red+1)^0,w,c
  7374   003A1E  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7375   003A20  6B62               	clrf	(??_color_detect+2)& (0+255),b
  7376   003A22  6B63               	clrf	(??_color_detect+3)& (0+255),b
  7377   003A24  0E60               	movlw	96
  7378   003A26  2560               	addwf	??_color_detect& (0+255),w,b
  7379   003A28  6F64               	movwf	(??_color_detect+4)& (0+255),b
  7380   003A2A  0E73               	movlw	115
  7381   003A2C  2161               	addwfc	(??_color_detect+1)& (0+255),w,b
  7382   003A2E  6F65               	movwf	(??_color_detect+5)& (0+255),b
  7383   003A30  0EFF               	movlw	255
  7384   003A32  2162               	addwfc	(??_color_detect+2)& (0+255),w,b
  7385   003A34  6F66               	movwf	(??_color_detect+6)& (0+255),b
  7386   003A36  0EFF               	movlw	255
  7387   003A38  2163               	addwfc	(??_color_detect+3)& (0+255),w,b
  7388   003A3A  6F67               	movwf	(??_color_detect+7)& (0+255),b
  7389   003A3C  5014               	movf	color_detect@HSV^0,w,c
  7390   003A3E  6F68               	movwf	(??_color_detect+8)& (0+255),b
  7391   003A40  5015               	movf	(color_detect@HSV+1)^0,w,c
  7392   003A42  6F69               	movwf	(??_color_detect+9)& (0+255),b
  7393   003A44  6B6A               	clrf	(??_color_detect+10)& (0+255),b
  7394   003A46  6B6B               	clrf	(??_color_detect+11)& (0+255),b
  7395   003A48  5164               	movf	(??_color_detect+4)& (0+255),w,b
  7396   003A4A  5D68               	subwf	(??_color_detect+8)& (0+255),w,b
  7397   003A4C  5165               	movf	(??_color_detect+5)& (0+255),w,b
  7398   003A4E  5969               	subwfb	(??_color_detect+9)& (0+255),w,b
  7399   003A50  5166               	movf	(??_color_detect+6)& (0+255),w,b
  7400   003A52  596A               	subwfb	(??_color_detect+10)& (0+255),w,b
  7401   003A54  516B               	movf	(??_color_detect+11)& (0+255),w,b
  7402   003A56  0A80               	xorlw	128
  7403   003A58  6F6C               	movwf	(??_color_detect+12)& (0+255),b
  7404   003A5A  5167               	movf	(??_color_detect+7)& (0+255),w,b
  7405   003A5C  0A80               	xorlw	128
  7406   003A5E  596C               	subwfb	(??_color_detect+12)& (0+255),w,b
  7407   003A60  B0D8               	btfsc	status,0,c
  7408   003A62  EF35  F01D         	goto	u3171
  7409   003A66  EF37  F01D         	goto	u3170
  7410   003A6A                     u3171:
  7411   003A6A  EF39  F01D         	goto	l4234
  7412   003A6E                     u3170:
  7413   003A6E                     l4232:
  7414                           
  7415                           ; BSR set to: 0
  7416   003A6E  0E01               	movlw	1
  7417   003A70  6E4A               	movwf	color_detect@color^0,c
  7418   003A72                     l4234:
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;color.c: 146:     if (red.H < 10000){
  7422   003A72  0E10               	movlw	16
  7423   003A74  5C1A               	subwf	color_detect@red^0,w,c
  7424   003A76  0E27               	movlw	39
  7425   003A78  581B               	subwfb	(color_detect@red+1)^0,w,c
  7426   003A7A  B0D8               	btfsc	status,0,c
  7427   003A7C  EF42  F01D         	goto	u3181
  7428   003A80  EF44  F01D         	goto	u3180
  7429   003A84                     u3181:
  7430   003A84  EF96  F01D         	goto	l182
  7431   003A88                     u3180:
  7432   003A88                     
  7433                           ; BSR set to: 0
  7434                           ;color.c: 147:         if((36000 - 1000 + (red.H) < HSV.H && HSV.H < 36000) || (0 < HSV.
      +                          H && HSV.H < red.H + 1000)) {color = 1;}
  7435   003A88  5014               	movf	color_detect@HSV^0,w,c
  7436   003A8A  6F60               	movwf	??_color_detect& (0+255),b
  7437   003A8C  5015               	movf	(color_detect@HSV+1)^0,w,c
  7438   003A8E  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7439   003A90  6B62               	clrf	(??_color_detect+2)& (0+255),b
  7440   003A92  6B63               	clrf	(??_color_detect+3)& (0+255),b
  7441   003A94  501A               	movf	color_detect@red^0,w,c
  7442   003A96  6F64               	movwf	(??_color_detect+4)& (0+255),b
  7443   003A98  501B               	movf	(color_detect@red+1)^0,w,c
  7444   003A9A  6F65               	movwf	(??_color_detect+5)& (0+255),b
  7445   003A9C  6B66               	clrf	(??_color_detect+6)& (0+255),b
  7446   003A9E  6B67               	clrf	(??_color_detect+7)& (0+255),b
  7447   003AA0  0EB8               	movlw	184
  7448   003AA2  2564               	addwf	(??_color_detect+4)& (0+255),w,b
  7449   003AA4  6F68               	movwf	(??_color_detect+8)& (0+255),b
  7450   003AA6  0E88               	movlw	136
  7451   003AA8  2165               	addwfc	(??_color_detect+5)& (0+255),w,b
  7452   003AAA  6F69               	movwf	(??_color_detect+9)& (0+255),b
  7453   003AAC  0E00               	movlw	0
  7454   003AAE  2166               	addwfc	(??_color_detect+6)& (0+255),w,b
  7455   003AB0  6F6A               	movwf	(??_color_detect+10)& (0+255),b
  7456   003AB2  0E00               	movlw	0
  7457   003AB4  2167               	addwfc	(??_color_detect+7)& (0+255),w,b
  7458   003AB6  6F6B               	movwf	(??_color_detect+11)& (0+255),b
  7459   003AB8  5160               	movf	??_color_detect& (0+255),w,b
  7460   003ABA  5D68               	subwf	(??_color_detect+8)& (0+255),w,b
  7461   003ABC  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7462   003ABE  5969               	subwfb	(??_color_detect+9)& (0+255),w,b
  7463   003AC0  5162               	movf	(??_color_detect+2)& (0+255),w,b
  7464   003AC2  596A               	subwfb	(??_color_detect+10)& (0+255),w,b
  7465   003AC4  516B               	movf	(??_color_detect+11)& (0+255),w,b
  7466   003AC6  0A80               	xorlw	128
  7467   003AC8  6F6C               	movwf	(??_color_detect+12)& (0+255),b
  7468   003ACA  5163               	movf	(??_color_detect+3)& (0+255),w,b
  7469   003ACC  0A80               	xorlw	128
  7470   003ACE  596C               	subwfb	(??_color_detect+12)& (0+255),w,b
  7471   003AD0  B0D8               	btfsc	status,0,c
  7472   003AD2  EF6D  F01D         	goto	u3191
  7473   003AD6  EF6F  F01D         	goto	u3190
  7474   003ADA                     u3191:
  7475   003ADA  EF7A  F01D         	goto	l4240
  7476   003ADE                     u3190:
  7477   003ADE                     
  7478                           ; BSR set to: 0
  7479   003ADE  0EA0               	movlw	160
  7480   003AE0  5C14               	subwf	color_detect@HSV^0,w,c
  7481   003AE2  0E8C               	movlw	140
  7482   003AE4  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7483   003AE6  A0D8               	btfss	status,0,c
  7484   003AE8  EF78  F01D         	goto	u3201
  7485   003AEC  EF7A  F01D         	goto	u3200
  7486   003AF0                     u3201:
  7487   003AF0  EF94  F01D         	goto	l4244
  7488   003AF4                     u3200:
  7489   003AF4                     l4240:
  7490                           
  7491                           ; BSR set to: 0
  7492   003AF4  5014               	movf	color_detect@HSV^0,w,c
  7493   003AF6  1015               	iorwf	(color_detect@HSV+1)^0,w,c
  7494   003AF8  B4D8               	btfsc	status,2,c
  7495   003AFA  EF81  F01D         	goto	u3211
  7496   003AFE  EF83  F01D         	goto	u3210
  7497   003B02                     u3211:
  7498   003B02  EF96  F01D         	goto	l182
  7499   003B06                     u3210:
  7500   003B06                     
  7501                           ; BSR set to: 0
  7502   003B06  0EE8               	movlw	232
  7503   003B08  241A               	addwf	color_detect@red^0,w,c
  7504   003B0A  6F60               	movwf	??_color_detect& (0+255),b
  7505   003B0C  0E03               	movlw	3
  7506   003B0E  201B               	addwfc	(color_detect@red+1)^0,w,c
  7507   003B10  6F61               	movwf	(??_color_detect+1)& (0+255),b
  7508   003B12  5160               	movf	??_color_detect& (0+255),w,b
  7509   003B14  5C14               	subwf	color_detect@HSV^0,w,c
  7510   003B16  5161               	movf	(??_color_detect+1)& (0+255),w,b
  7511   003B18  5815               	subwfb	(color_detect@HSV+1)^0,w,c
  7512   003B1A  B0D8               	btfsc	status,0,c
  7513   003B1C  EF92  F01D         	goto	u3221
  7514   003B20  EF94  F01D         	goto	u3220
  7515   003B24                     u3221:
  7516   003B24  EF96  F01D         	goto	l182
  7517   003B28                     u3220:
  7518   003B28                     l4244:
  7519                           
  7520                           ; BSR set to: 0
  7521   003B28  0E01               	movlw	1
  7522   003B2A  6E4A               	movwf	color_detect@color^0,c
  7523   003B2C                     l182:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;color.c: 150:     return color;
  7527   003B2C  504A               	movf	color_detect@color^0,w,c
  7528   003B2E                     
  7529                           ; BSR set to: 0
  7530   003B2E  0012               	return		;funcret
  7531   003B30                     __end_of_color_detect:
  7532                           	callstack 0
  7533                           
  7534 ;; *************** function _color_click_init *****************
  7535 ;; Defined at:
  7536 ;;		line 7 in file "color.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;		None
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;		None
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  1    wreg      void 
  7543 ;; Registers used:
  7544 ;;		wreg, status,2, status,0, cstack
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 0/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7553 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7554 ;;Total ram usage:        1 bytes
  7555 ;; Hardware stack levels used: 1
  7556 ;; Hardware stack levels required when called: 10
  7557 ;; This function calls:
  7558 ;;		_I2C_2_Master_Init
  7559 ;;		_color_clear_init_interrupts
  7560 ;;		_color_writetoaddr
  7561 ;; This function is called by:
  7562 ;;		_main
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           	psect	text15
  7567   005310                     __ptext15:
  7568                           	callstack 0
  7569   005310                     _color_click_init:
  7570                           	callstack 20
  7571   005310                     
  7572                           ;color.c: 10:     I2C_2_Master_Init();
  7573   005310  ECEB  F029         	call	_I2C_2_Master_Init	;wreg free
  7574   005314                     
  7575                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  7576   005314  0E01               	movlw	1
  7577   005316  6E12               	movwf	color_writetoaddr@value^0,c
  7578   005318  0E00               	movlw	0
  7579   00531A  EC72  F02A         	call	_color_writetoaddr
  7580   00531E                     
  7581                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7582   00531E  0E3F               	movlw	63
  7583   005320  6E22               	movwf	??_color_click_init^0,c
  7584   005322  0E55               	movlw	85
  7585   005324                     u4807:
  7586   005324  2EE8               	decfsz	wreg,f,c
  7587   005326  D7FE               	bra	u4807
  7588   005328  2E22               	decfsz	??_color_click_init^0,f,c
  7589   00532A  D7FC               	bra	u4807
  7590   00532C  0000               	nop	
  7591   00532E                     
  7592                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  7593   00532E  0E03               	movlw	3
  7594   005330  6E12               	movwf	color_writetoaddr@value^0,c
  7595   005332  0E00               	movlw	0
  7596   005334  EC72  F02A         	call	_color_writetoaddr
  7597   005338                     
  7598                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  7599   005338  0ED5               	movlw	213
  7600   00533A  6E12               	movwf	color_writetoaddr@value^0,c
  7601   00533C  0E01               	movlw	1
  7602   00533E  EC72  F02A         	call	_color_writetoaddr
  7603   005342                     
  7604                           ;color.c: 23:     color_clear_init_interrupts();
  7605   005342  EC2C  F027         	call	_color_clear_init_interrupts	;wreg free
  7606   005346  0012               	return		;funcret
  7607   005348                     __end_of_color_click_init:
  7608                           	callstack 0
  7609                           
  7610 ;; *************** function _color_clear_init_interrupts *****************
  7611 ;; Defined at:
  7612 ;;		line 27 in file "color.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;  low_threshol    2   31[COMRAM] unsigned int 
  7617 ;;  high_thresho    2   29[COMRAM] unsigned int 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  1    wreg      void 
  7620 ;; Registers used:
  7621 ;;		wreg, status,2, status,0, cstack
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7628 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7631 ;;Total ram usage:        5 bytes
  7632 ;; Hardware stack levels used: 1
  7633 ;; Hardware stack levels required when called: 9
  7634 ;; This function calls:
  7635 ;;		_I2C_2_Master_Start
  7636 ;;		_I2C_2_Master_Stop
  7637 ;;		_I2C_2_Master_Write
  7638 ;;		___lwdiv
  7639 ;;		_color_writetoaddr
  7640 ;; This function is called by:
  7641 ;;		_main
  7642 ;;		_color_click_init
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text16
  7647   004E58                     __ptext16:
  7648                           	callstack 0
  7649   004E58                     _color_clear_init_interrupts:
  7650                           	callstack 20
  7651   004E58                     
  7652                           ;color.c: 29:     I2C_2_Master_Start();
  7653   004E58  ECE9  F02A         	call	_I2C_2_Master_Start	;wreg free
  7654                           
  7655                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  7656   004E5C  0E52               	movlw	82
  7657   004E5E  ECD3  F02A         	call	_I2C_2_Master_Write
  7658                           
  7659                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  7660   004E62  0EE6               	movlw	230
  7661   004E64  ECD3  F02A         	call	_I2C_2_Master_Write
  7662                           
  7663                           ;color.c: 32:     I2C_2_Master_Stop();
  7664   004E68  ECE4  F02A         	call	_I2C_2_Master_Stop	;wreg free
  7665                           
  7666                           ;color.c: 38:     unsigned int high_threshold = ambient + (ambient/3);
  7667   004E6C  C0FA  F016         	movff	_ambient,___lwdiv@dividend
  7668   004E70  C0FB  F017         	movff	_ambient+1,___lwdiv@dividend+1
  7669   004E74  0E00               	movlw	0
  7670   004E76  6E19               	movwf	(___lwdiv@divisor+1)^0,c
  7671   004E78  0E03               	movlw	3
  7672   004E7A  6E18               	movwf	___lwdiv@divisor^0,c
  7673   004E7C  EC6C  F028         	call	___lwdiv	;wreg free
  7674   004E80  0100               	movlb	0	; () banked
  7675   004E82  51FA               	movf	_ambient& (0+255),w,b
  7676   004E84  2416               	addwf	?___lwdiv^0,w,c
  7677   004E86  6E1E               	movwf	color_clear_init_interrupts@high_threshold^0,c
  7678   004E88  51FB               	movf	(_ambient+1)& (0+255),w,b
  7679   004E8A  2017               	addwfc	(?___lwdiv+1)^0,w,c
  7680   004E8C  6E1F               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  7681                           
  7682                           ;color.c: 39:     unsigned int low_threshold = ambient - (ambient/20);
  7683   004E8E  C0FA  F016         	movff	_ambient,___lwdiv@dividend
  7684   004E92  C0FB  F017         	movff	_ambient+1,___lwdiv@dividend+1
  7685   004E96  0E00               	movlw	0
  7686   004E98  6E19               	movwf	(___lwdiv@divisor+1)^0,c
  7687   004E9A  0E14               	movlw	20
  7688   004E9C  6E18               	movwf	___lwdiv@divisor^0,c
  7689   004E9E  EC6C  F028         	call	___lwdiv	;wreg free
  7690   004EA2  5016               	movf	?___lwdiv^0,w,c
  7691   004EA4  0100               	movlb	0	; () banked
  7692   004EA6  5DFA               	subwf	_ambient& (0+255),w,b
  7693   004EA8  6E20               	movwf	color_clear_init_interrupts@low_threshold^0,c
  7694   004EAA  5017               	movf	(?___lwdiv+1)^0,w,c
  7695   004EAC  59FB               	subwfb	(_ambient+1)& (0+255),w,b
  7696   004EAE  6E21               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  7697                           
  7698                           ;color.c: 42:  color_writetoaddr(0x00, 0x13);
  7699   004EB0  0E13               	movlw	19
  7700   004EB2  6E12               	movwf	color_writetoaddr@value^0,c
  7701   004EB4  0E00               	movlw	0
  7702   004EB6  EC72  F02A         	call	_color_writetoaddr
  7703   004EBA                     
  7704                           ;color.c: 43:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7705   004EBA  0E3F               	movlw	63
  7706   004EBC  6E1D               	movwf	??_color_clear_init_interrupts^0,c
  7707   004EBE  0E55               	movlw	85
  7708   004EC0                     u4817:
  7709   004EC0  2EE8               	decfsz	wreg,f,c
  7710   004EC2  D7FE               	bra	u4817
  7711   004EC4  2E1D               	decfsz	??_color_clear_init_interrupts^0,f,c
  7712   004EC6  D7FC               	bra	u4817
  7713   004EC8  0000               	nop	
  7714   004ECA                     
  7715                           ;color.c: 44:     color_writetoaddr(0x07, (high_threshold >> 8));
  7716   004ECA  501F               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  7717   004ECC  6E12               	movwf	color_writetoaddr@value^0,c
  7718   004ECE  0E07               	movlw	7
  7719   004ED0  EC72  F02A         	call	_color_writetoaddr
  7720   004ED4                     
  7721                           ;color.c: 45:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  7722   004ED4  C01E  F012         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  7723   004ED8  0E06               	movlw	6
  7724   004EDA  EC72  F02A         	call	_color_writetoaddr
  7725   004EDE                     
  7726                           ;color.c: 46:     color_writetoaddr(0x05, (low_threshold >> 8));
  7727   004EDE  5021               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  7728   004EE0  6E12               	movwf	color_writetoaddr@value^0,c
  7729   004EE2  0E05               	movlw	5
  7730   004EE4  EC72  F02A         	call	_color_writetoaddr
  7731   004EE8                     
  7732                           ;color.c: 47:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  7733   004EE8  C020  F012         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  7734   004EEC  0E04               	movlw	4
  7735   004EEE  EC72  F02A         	call	_color_writetoaddr
  7736   004EF2                     
  7737                           ;color.c: 48:     color_writetoaddr(0x0C, 0b11);
  7738   004EF2  0E03               	movlw	3
  7739   004EF4  6E12               	movwf	color_writetoaddr@value^0,c
  7740   004EF6  0E0C               	movlw	12
  7741   004EF8  EC72  F02A         	call	_color_writetoaddr
  7742   004EFC  0012               	return		;funcret
  7743   004EFE                     __end_of_color_clear_init_interrupts:
  7744                           	callstack 0
  7745                           
  7746 ;; *************** function _color_writetoaddr *****************
  7747 ;; Defined at:
  7748 ;;		line 53 in file "color.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  address         1    wreg     unsigned char 
  7751 ;;  value           1   17[COMRAM] unsigned char 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  address         1   18[COMRAM] unsigned char 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      void 
  7756 ;; Registers used:
  7757 ;;		wreg, status,2, status,0, cstack
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7763 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7767 ;;Total ram usage:        2 bytes
  7768 ;; Hardware stack levels used: 1
  7769 ;; Hardware stack levels required when called: 8
  7770 ;; This function calls:
  7771 ;;		_I2C_2_Master_Start
  7772 ;;		_I2C_2_Master_Stop
  7773 ;;		_I2C_2_Master_Write
  7774 ;; This function is called by:
  7775 ;;		_color_click_init
  7776 ;;		_color_clear_init_interrupts
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           	psect	text17
  7781   0054E4                     __ptext17:
  7782                           	callstack 0
  7783   0054E4                     _color_writetoaddr:
  7784                           	callstack 21
  7785                           
  7786                           ;incstack = 0
  7787                           ;color_writetoaddr@address stored from wreg
  7788   0054E4  6E13               	movwf	color_writetoaddr@address^0,c
  7789   0054E6                     
  7790                           ;color.c: 54:     I2C_2_Master_Start();
  7791   0054E6  ECE9  F02A         	call	_I2C_2_Master_Start	;wreg free
  7792                           
  7793                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  7794   0054EA  0E52               	movlw	82
  7795   0054EC  ECD3  F02A         	call	_I2C_2_Master_Write
  7796                           
  7797                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
  7798   0054F0  5013               	movf	color_writetoaddr@address^0,w,c
  7799   0054F2  0980               	iorlw	128
  7800   0054F4  ECD3  F02A         	call	_I2C_2_Master_Write
  7801                           
  7802                           ;color.c: 57:     I2C_2_Master_Write(value);
  7803   0054F8  5012               	movf	color_writetoaddr@value^0,w,c
  7804   0054FA  ECD3  F02A         	call	_I2C_2_Master_Write
  7805                           
  7806                           ;color.c: 58:     I2C_2_Master_Stop();
  7807   0054FE  ECE4  F02A         	call	_I2C_2_Master_Stop	;wreg free
  7808   005502  0012               	return		;funcret
  7809   005504                     __end_of_color_writetoaddr:
  7810                           	callstack 0
  7811                           
  7812 ;; *************** function _I2C_2_Master_Init *****************
  7813 ;; Defined at:
  7814 ;;		line 4 in file "i2c.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;		None
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;		None
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      void 
  7821 ;; Registers used:
  7822 ;;		wreg, status,2
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7832 ;;Total ram usage:        0 bytes
  7833 ;; Hardware stack levels used: 1
  7834 ;; Hardware stack levels required when called: 6
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		_color_click_init
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text18
  7843   0053D6                     __ptext18:
  7844                           	callstack 0
  7845   0053D6                     _I2C_2_Master_Init:
  7846                           	callstack 23
  7847   0053D6                     
  7848                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7849   0053D6  010E               	movlb	14	; () banked
  7850   0053D8  51D9               	movf	217,w,b	;volatile
  7851   0053DA  0BF0               	andlw	-16
  7852   0053DC  0908               	iorlw	8
  7853   0053DE  6FD9               	movwf	217,b	;volatile
  7854   0053E0                     
  7855                           ; BSR set to: 14
  7856                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7857   0053E0  8BD9               	bsf	217,5,b	;volatile
  7858                           
  7859                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7860   0053E2  0E9F               	movlw	159
  7861   0053E4  6FD6               	movwf	214,b	;volatile
  7862   0053E6                     
  7863                           ; BSR set to: 14
  7864                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7865   0053E6  8A84               	bsf	132,5,c	;volatile
  7866   0053E8                     
  7867                           ; BSR set to: 14
  7868                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7869   0053E8  8C84               	bsf	132,6,c	;volatile
  7870   0053EA                     
  7871                           ; BSR set to: 14
  7872                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7873   0053EA  9BA7               	bcf	167,5,b	;volatile
  7874   0053EC                     
  7875                           ; BSR set to: 14
  7876                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7877   0053EC  9DA7               	bcf	167,6,b	;volatile
  7878                           
  7879                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7880   0053EE  0E1D               	movlw	29
  7881   0053F0  6F1D               	movwf	29,b	;volatile
  7882                           
  7883                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7884   0053F2  0E1E               	movlw	30
  7885   0053F4  6F1C               	movwf	28,b	;volatile
  7886                           
  7887                           ;i2c.c: 18:   RD5PPS=0x1C;
  7888   0053F6  0E1C               	movlw	28
  7889   0053F8  6F6F               	movwf	111,b	;volatile
  7890                           
  7891                           ;i2c.c: 19:   RD6PPS=0x1B;
  7892   0053FA  0E1B               	movlw	27
  7893   0053FC  6F70               	movwf	112,b	;volatile
  7894   0053FE                     
  7895                           ; BSR set to: 14
  7896   0053FE  0012               	return		;funcret
  7897   005400                     __end_of_I2C_2_Master_Init:
  7898                           	callstack 0
  7899                           
  7900 ;; *************** function _color_calibration *****************
  7901 ;; Defined at:
  7902 ;;		line 153 in file "color.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;  RGBC            2   22[BANK0 ] PTR struct RGBC_val
  7905 ;;		 -> main@RGBC(8), 
  7906 ;;  HSV             2   24[BANK0 ] PTR struct HSV_val
  7907 ;;		 -> main@HSV(6), 
  7908 ;;  red             2   26[BANK0 ] PTR struct HSV_calib
  7909 ;;		 -> main@red(6), 
  7910 ;;  green           2   28[BANK0 ] PTR struct HSV_calib
  7911 ;;		 -> main@green(6), 
  7912 ;;  blue            2   30[BANK0 ] PTR struct HSV_calib
  7913 ;;		 -> main@blue(6), 
  7914 ;;  yellow          2   32[BANK0 ] PTR struct HSV_calib
  7915 ;;		 -> main@yellow(6), 
  7916 ;;  pink            2   34[BANK0 ] PTR struct HSV_calib
  7917 ;;		 -> main@pink(6), 
  7918 ;;  orange          2   36[BANK0 ] PTR struct HSV_calib
  7919 ;;		 -> main@orange(6), 
  7920 ;;  lightblue       2   38[BANK0 ] PTR struct HSV_calib
  7921 ;;		 -> main@lightblue(6), 
  7922 ;;  white           2   40[BANK0 ] PTR struct HSV_calib
  7923 ;;		 -> main@white(6), 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;		None
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  1    wreg      void 
  7928 ;; Registers used:
  7929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7935 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7937 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7938 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7939 ;;Total ram usage:       22 bytes
  7940 ;; Hardware stack levels used: 1
  7941 ;; Hardware stack levels required when called: 9
  7942 ;; This function calls:
  7943 ;;		_color_read
  7944 ;;		_rgb_2_hsv
  7945 ;;		_white_Light
  7946 ;; This function is called by:
  7947 ;;		_main
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951                           	psect	text19
  7952   002442                     __ptext19:
  7953                           	callstack 0
  7954   002442                     _color_calibration:
  7955                           	callstack 21
  7956   002442                     
  7957                           ;color.c: 153: void color_calibration(RGBC_val *RGBC, HSV_val *HSV, HSV_calib *red, HSV_
      +                          calib *green, HSV_calib *blue, HSV_calib *yellow, HSV_calib *pink, HSV_calib *orange, HS
      +                          V_calib *lightblue, HSV_calib *white);color.c: 154: {;color.c: 155:     white_Light(1);
  7958   002442  0E01               	movlw	1
  7959   002444  EC4F  F02A         	call	_white_Light
  7960   002448                     
  7961                           ;color.c: 156:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7962   002448  8680               	bsf	128,3,c	;volatile
  7963   00244A  8E7C               	bsf	124,7,c	;volatile
  7964   00244C                     l191:
  7965   00244C  B48E               	btfsc	142,2,c	;volatile
  7966   00244E  EF2B  F012         	goto	u2691
  7967   002452  EF2D  F012         	goto	u2690
  7968   002456                     u2691:
  7969   002456  EF26  F012         	goto	l191
  7970   00245A                     u2690:
  7971   00245A                     
  7972                           ;color.c: 160:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7973   00245A  9680               	bcf	128,3,c	;volatile
  7974   00245C  9E7C               	bcf	124,7,c	;volatile
  7975   00245E                     
  7976                           ;color.c: 161:     color_read(RGBC);
  7977   00245E  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  7978   002462  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7979   002466  ECD7  F020         	call	_color_read	;wreg free
  7980   00246A                     
  7981                           ;color.c: 162:     rgb_2_hsv(*RGBC, HSV);
  7982   00246A  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  7983   00246E  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7984   002472  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  7985   002476  0E07               	movlw	7
  7986   002478                     u2701:
  7987   002478  CFDB FFEB          	movff	plusw2,plusw0
  7988   00247C  06E8               	decf	wreg,f,c
  7989   00247E  E2FC               	bc	u2701
  7990   002480  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7991   002484  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7992   002488  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  7993   00248C                     
  7994                           ;color.c: 163:     red->H = HSV->H;
  7995   00248C  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  7996   002490  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7997   002494  C07A  FFE1         	movff	color_calibration@red,fsr1l
  7998   002498  C07B  FFE2         	movff	color_calibration@red+1,fsr1h
  7999   00249C  CFDE FFE6          	movff	postinc2,postinc1
  8000   0024A0  CFDD FFE5          	movff	postdec2,postdec1
  8001   0024A4                     
  8002                           ;color.c: 164:     red->S = HSV->S;
  8003   0024A4  0100               	movlb	0	; () banked
  8004   0024A6  EE20 F002          	lfsr	2,2
  8005   0024AA  5178               	movf	color_calibration@HSV& (0+255),w,b
  8006   0024AC  26D9               	addwf	fsr2l,f,c
  8007   0024AE  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8008   0024B0  22DA               	addwfc	fsr2h,f,c
  8009   0024B2  EE10 F002          	lfsr	1,2
  8010   0024B6  517A               	movf	color_calibration@red& (0+255),w,b
  8011   0024B8  26E1               	addwf	fsr1l,f,c
  8012   0024BA  517B               	movf	(color_calibration@red+1)& (0+255),w,b
  8013   0024BC  22E2               	addwfc	fsr1h,f,c
  8014   0024BE  CFDE FFE6          	movff	postinc2,postinc1
  8015   0024C2  CFDD FFE5          	movff	postdec2,postdec1
  8016   0024C6                     
  8017                           ; BSR set to: 0
  8018                           ;color.c: 165:     red->V = HSV->V;
  8019   0024C6  EE20 F004          	lfsr	2,4
  8020   0024CA  5178               	movf	color_calibration@HSV& (0+255),w,b
  8021   0024CC  26D9               	addwf	fsr2l,f,c
  8022   0024CE  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8023   0024D0  22DA               	addwfc	fsr2h,f,c
  8024   0024D2  EE10 F004          	lfsr	1,4
  8025   0024D6  517A               	movf	color_calibration@red& (0+255),w,b
  8026   0024D8  26E1               	addwf	fsr1l,f,c
  8027   0024DA  517B               	movf	(color_calibration@red+1)& (0+255),w,b
  8028   0024DC  22E2               	addwfc	fsr1h,f,c
  8029   0024DE  CFDE FFE6          	movff	postinc2,postinc1
  8030   0024E2  CFDD FFE5          	movff	postdec2,postdec1
  8031   0024E6                     
  8032                           ; BSR set to: 0
  8033                           ;color.c: 167:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8034   0024E6  0E29               	movlw	41
  8035   0024E8  6E41               	movwf	(??_color_calibration+1)^0,c
  8036   0024EA  0E96               	movlw	150
  8037   0024EC  6E40               	movwf	??_color_calibration^0,c
  8038   0024EE  0E7F               	movlw	127
  8039   0024F0                     u4827:
  8040   0024F0  2EE8               	decfsz	wreg,f,c
  8041   0024F2  D7FE               	bra	u4827
  8042   0024F4  2E40               	decfsz	??_color_calibration^0,f,c
  8043   0024F6  D7FC               	bra	u4827
  8044   0024F8  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8045   0024FA  D7FA               	bra	u4827
  8046   0024FC  0000               	nop	
  8047   0024FE                     
  8048                           ;color.c: 168:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8049   0024FE  8680               	bsf	128,3,c	;volatile
  8050   002500  8E7C               	bsf	124,7,c	;volatile
  8051   002502                     l194:
  8052   002502  B48E               	btfsc	142,2,c	;volatile
  8053   002504  EF86  F012         	goto	u2711
  8054   002508  EF88  F012         	goto	u2710
  8055   00250C                     u2711:
  8056   00250C  EF81  F012         	goto	l194
  8057   002510                     u2710:
  8058   002510                     
  8059                           ;color.c: 172:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8060   002510  9680               	bcf	128,3,c	;volatile
  8061   002512  9E7C               	bcf	124,7,c	;volatile
  8062   002514                     
  8063                           ;color.c: 173:     color_read(RGBC);
  8064   002514  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8065   002518  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8066   00251C  ECD7  F020         	call	_color_read	;wreg free
  8067   002520                     
  8068                           ;color.c: 174:     rgb_2_hsv(*RGBC, HSV);
  8069   002520  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8070   002524  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8071   002528  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8072   00252C  0E07               	movlw	7
  8073   00252E                     u2721:
  8074   00252E  CFDB FFEB          	movff	plusw2,plusw0
  8075   002532  06E8               	decf	wreg,f,c
  8076   002534  E2FC               	bc	u2721
  8077   002536  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8078   00253A  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8079   00253E  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8080   002542                     
  8081                           ;color.c: 175:     green->H = HSV->H;
  8082   002542  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8083   002546  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8084   00254A  C07C  FFE1         	movff	color_calibration@green,fsr1l
  8085   00254E  C07D  FFE2         	movff	color_calibration@green+1,fsr1h
  8086   002552  CFDE FFE6          	movff	postinc2,postinc1
  8087   002556  CFDD FFE5          	movff	postdec2,postdec1
  8088   00255A                     
  8089                           ;color.c: 176:     green->S = HSV->S;
  8090   00255A  0100               	movlb	0	; () banked
  8091   00255C  EE20 F002          	lfsr	2,2
  8092   002560  5178               	movf	color_calibration@HSV& (0+255),w,b
  8093   002562  26D9               	addwf	fsr2l,f,c
  8094   002564  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8095   002566  22DA               	addwfc	fsr2h,f,c
  8096   002568  EE10 F002          	lfsr	1,2
  8097   00256C  517C               	movf	color_calibration@green& (0+255),w,b
  8098   00256E  26E1               	addwf	fsr1l,f,c
  8099   002570  517D               	movf	(color_calibration@green+1)& (0+255),w,b
  8100   002572  22E2               	addwfc	fsr1h,f,c
  8101   002574  CFDE FFE6          	movff	postinc2,postinc1
  8102   002578  CFDD FFE5          	movff	postdec2,postdec1
  8103   00257C                     
  8104                           ; BSR set to: 0
  8105                           ;color.c: 177:     green->V = HSV->V;
  8106   00257C  EE20 F004          	lfsr	2,4
  8107   002580  5178               	movf	color_calibration@HSV& (0+255),w,b
  8108   002582  26D9               	addwf	fsr2l,f,c
  8109   002584  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8110   002586  22DA               	addwfc	fsr2h,f,c
  8111   002588  EE10 F004          	lfsr	1,4
  8112   00258C  517C               	movf	color_calibration@green& (0+255),w,b
  8113   00258E  26E1               	addwf	fsr1l,f,c
  8114   002590  517D               	movf	(color_calibration@green+1)& (0+255),w,b
  8115   002592  22E2               	addwfc	fsr1h,f,c
  8116   002594  CFDE FFE6          	movff	postinc2,postinc1
  8117   002598  CFDD FFE5          	movff	postdec2,postdec1
  8118   00259C                     
  8119                           ; BSR set to: 0
  8120                           ;color.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8121   00259C  0E29               	movlw	41
  8122   00259E  6E41               	movwf	(??_color_calibration+1)^0,c
  8123   0025A0  0E96               	movlw	150
  8124   0025A2  6E40               	movwf	??_color_calibration^0,c
  8125   0025A4  0E7F               	movlw	127
  8126   0025A6                     u4837:
  8127   0025A6  2EE8               	decfsz	wreg,f,c
  8128   0025A8  D7FE               	bra	u4837
  8129   0025AA  2E40               	decfsz	??_color_calibration^0,f,c
  8130   0025AC  D7FC               	bra	u4837
  8131   0025AE  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8132   0025B0  D7FA               	bra	u4837
  8133   0025B2  0000               	nop	
  8134   0025B4                     
  8135                           ;color.c: 180:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8136   0025B4  8680               	bsf	128,3,c	;volatile
  8137   0025B6  8E7C               	bsf	124,7,c	;volatile
  8138   0025B8                     l197:
  8139   0025B8  B48E               	btfsc	142,2,c	;volatile
  8140   0025BA  EFE1  F012         	goto	u2731
  8141   0025BE  EFE3  F012         	goto	u2730
  8142   0025C2                     u2731:
  8143   0025C2  EFDC  F012         	goto	l197
  8144   0025C6                     u2730:
  8145   0025C6                     
  8146                           ;color.c: 184:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8147   0025C6  9680               	bcf	128,3,c	;volatile
  8148   0025C8  9E7C               	bcf	124,7,c	;volatile
  8149   0025CA                     
  8150                           ;color.c: 185:     color_read(RGBC);
  8151   0025CA  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8152   0025CE  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8153   0025D2  ECD7  F020         	call	_color_read	;wreg free
  8154   0025D6                     
  8155                           ;color.c: 186:     rgb_2_hsv(*RGBC, HSV);
  8156   0025D6  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8157   0025DA  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8158   0025DE  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8159   0025E2  0E07               	movlw	7
  8160   0025E4                     u2741:
  8161   0025E4  CFDB FFEB          	movff	plusw2,plusw0
  8162   0025E8  06E8               	decf	wreg,f,c
  8163   0025EA  E2FC               	bc	u2741
  8164   0025EC  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8165   0025F0  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8166   0025F4  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8167   0025F8                     
  8168                           ;color.c: 187:     blue->H = HSV->H;
  8169   0025F8  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8170   0025FC  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8171   002600  C07E  FFE1         	movff	color_calibration@blue,fsr1l
  8172   002604  C07F  FFE2         	movff	color_calibration@blue+1,fsr1h
  8173   002608  CFDE FFE6          	movff	postinc2,postinc1
  8174   00260C  CFDD FFE5          	movff	postdec2,postdec1
  8175   002610                     
  8176                           ;color.c: 188:     blue->S = HSV->S;
  8177   002610  0100               	movlb	0	; () banked
  8178   002612  EE20 F002          	lfsr	2,2
  8179   002616  5178               	movf	color_calibration@HSV& (0+255),w,b
  8180   002618  26D9               	addwf	fsr2l,f,c
  8181   00261A  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8182   00261C  22DA               	addwfc	fsr2h,f,c
  8183   00261E  EE10 F002          	lfsr	1,2
  8184   002622  517E               	movf	color_calibration@blue& (0+255),w,b
  8185   002624  26E1               	addwf	fsr1l,f,c
  8186   002626  517F               	movf	(color_calibration@blue+1)& (0+255),w,b
  8187   002628  22E2               	addwfc	fsr1h,f,c
  8188   00262A  CFDE FFE6          	movff	postinc2,postinc1
  8189   00262E  CFDD FFE5          	movff	postdec2,postdec1
  8190   002632                     
  8191                           ; BSR set to: 0
  8192                           ;color.c: 189:     blue->V = HSV->V;
  8193   002632  EE20 F004          	lfsr	2,4
  8194   002636  5178               	movf	color_calibration@HSV& (0+255),w,b
  8195   002638  26D9               	addwf	fsr2l,f,c
  8196   00263A  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8197   00263C  22DA               	addwfc	fsr2h,f,c
  8198   00263E  EE10 F004          	lfsr	1,4
  8199   002642  517E               	movf	color_calibration@blue& (0+255),w,b
  8200   002644  26E1               	addwf	fsr1l,f,c
  8201   002646  517F               	movf	(color_calibration@blue+1)& (0+255),w,b
  8202   002648  22E2               	addwfc	fsr1h,f,c
  8203   00264A  CFDE FFE6          	movff	postinc2,postinc1
  8204   00264E  CFDD FFE5          	movff	postdec2,postdec1
  8205   002652                     
  8206                           ; BSR set to: 0
  8207                           ;color.c: 191:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8208   002652  0E29               	movlw	41
  8209   002654  6E41               	movwf	(??_color_calibration+1)^0,c
  8210   002656  0E96               	movlw	150
  8211   002658  6E40               	movwf	??_color_calibration^0,c
  8212   00265A  0E7F               	movlw	127
  8213   00265C                     u4847:
  8214   00265C  2EE8               	decfsz	wreg,f,c
  8215   00265E  D7FE               	bra	u4847
  8216   002660  2E40               	decfsz	??_color_calibration^0,f,c
  8217   002662  D7FC               	bra	u4847
  8218   002664  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8219   002666  D7FA               	bra	u4847
  8220   002668  0000               	nop	
  8221   00266A                     
  8222                           ;color.c: 192:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8223   00266A  8680               	bsf	128,3,c	;volatile
  8224   00266C  8E7C               	bsf	124,7,c	;volatile
  8225   00266E                     l200:
  8226   00266E  B48E               	btfsc	142,2,c	;volatile
  8227   002670  EF3C  F013         	goto	u2751
  8228   002674  EF3E  F013         	goto	u2750
  8229   002678                     u2751:
  8230   002678  EF37  F013         	goto	l200
  8231   00267C                     u2750:
  8232   00267C                     
  8233                           ;color.c: 196:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8234   00267C  9680               	bcf	128,3,c	;volatile
  8235   00267E  9E7C               	bcf	124,7,c	;volatile
  8236   002680                     
  8237                           ;color.c: 197:     color_read(RGBC);
  8238   002680  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8239   002684  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8240   002688  ECD7  F020         	call	_color_read	;wreg free
  8241   00268C                     
  8242                           ;color.c: 198:     rgb_2_hsv(*RGBC, HSV);
  8243   00268C  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8244   002690  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8245   002694  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8246   002698  0E07               	movlw	7
  8247   00269A                     u2761:
  8248   00269A  CFDB FFEB          	movff	plusw2,plusw0
  8249   00269E  06E8               	decf	wreg,f,c
  8250   0026A0  E2FC               	bc	u2761
  8251   0026A2  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8252   0026A6  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8253   0026AA  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8254   0026AE                     
  8255                           ;color.c: 199:     yellow->H = HSV->H;
  8256   0026AE  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8257   0026B2  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8258   0026B6  C080  FFE1         	movff	color_calibration@yellow,fsr1l
  8259   0026BA  C081  FFE2         	movff	color_calibration@yellow+1,fsr1h
  8260   0026BE  CFDE FFE6          	movff	postinc2,postinc1
  8261   0026C2  CFDD FFE5          	movff	postdec2,postdec1
  8262   0026C6                     
  8263                           ;color.c: 200:     yellow->S = HSV->S;
  8264   0026C6  0100               	movlb	0	; () banked
  8265   0026C8  EE20 F002          	lfsr	2,2
  8266   0026CC  5178               	movf	color_calibration@HSV& (0+255),w,b
  8267   0026CE  26D9               	addwf	fsr2l,f,c
  8268   0026D0  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8269   0026D2  22DA               	addwfc	fsr2h,f,c
  8270   0026D4  EE10 F002          	lfsr	1,2
  8271   0026D8  5180               	movf	color_calibration@yellow& (0+255),w,b
  8272   0026DA  26E1               	addwf	fsr1l,f,c
  8273   0026DC  5181               	movf	(color_calibration@yellow+1)& (0+255),w,b
  8274   0026DE  22E2               	addwfc	fsr1h,f,c
  8275   0026E0  CFDE FFE6          	movff	postinc2,postinc1
  8276   0026E4  CFDD FFE5          	movff	postdec2,postdec1
  8277   0026E8                     
  8278                           ; BSR set to: 0
  8279                           ;color.c: 201:     yellow->V = HSV->V;
  8280   0026E8  EE20 F004          	lfsr	2,4
  8281   0026EC  5178               	movf	color_calibration@HSV& (0+255),w,b
  8282   0026EE  26D9               	addwf	fsr2l,f,c
  8283   0026F0  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8284   0026F2  22DA               	addwfc	fsr2h,f,c
  8285   0026F4  EE10 F004          	lfsr	1,4
  8286   0026F8  5180               	movf	color_calibration@yellow& (0+255),w,b
  8287   0026FA  26E1               	addwf	fsr1l,f,c
  8288   0026FC  5181               	movf	(color_calibration@yellow+1)& (0+255),w,b
  8289   0026FE  22E2               	addwfc	fsr1h,f,c
  8290   002700  CFDE FFE6          	movff	postinc2,postinc1
  8291   002704  CFDD FFE5          	movff	postdec2,postdec1
  8292   002708                     
  8293                           ; BSR set to: 0
  8294                           ;color.c: 203:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8295   002708  0E29               	movlw	41
  8296   00270A  6E41               	movwf	(??_color_calibration+1)^0,c
  8297   00270C  0E96               	movlw	150
  8298   00270E  6E40               	movwf	??_color_calibration^0,c
  8299   002710  0E7F               	movlw	127
  8300   002712                     u4857:
  8301   002712  2EE8               	decfsz	wreg,f,c
  8302   002714  D7FE               	bra	u4857
  8303   002716  2E40               	decfsz	??_color_calibration^0,f,c
  8304   002718  D7FC               	bra	u4857
  8305   00271A  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8306   00271C  D7FA               	bra	u4857
  8307   00271E  0000               	nop	
  8308   002720                     
  8309                           ;color.c: 204:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8310   002720  8680               	bsf	128,3,c	;volatile
  8311   002722  8E7C               	bsf	124,7,c	;volatile
  8312   002724                     l203:
  8313   002724  B48E               	btfsc	142,2,c	;volatile
  8314   002726  EF97  F013         	goto	u2771
  8315   00272A  EF99  F013         	goto	u2770
  8316   00272E                     u2771:
  8317   00272E  EF92  F013         	goto	l203
  8318   002732                     u2770:
  8319   002732                     
  8320                           ;color.c: 208:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8321   002732  9680               	bcf	128,3,c	;volatile
  8322   002734  9E7C               	bcf	124,7,c	;volatile
  8323   002736                     
  8324                           ;color.c: 209:     color_read(RGBC);
  8325   002736  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8326   00273A  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8327   00273E  ECD7  F020         	call	_color_read	;wreg free
  8328   002742                     
  8329                           ;color.c: 210:     rgb_2_hsv(*RGBC, HSV);
  8330   002742  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8331   002746  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8332   00274A  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8333   00274E  0E07               	movlw	7
  8334   002750                     u2781:
  8335   002750  CFDB FFEB          	movff	plusw2,plusw0
  8336   002754  06E8               	decf	wreg,f,c
  8337   002756  E2FC               	bc	u2781
  8338   002758  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8339   00275C  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8340   002760  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8341   002764                     
  8342                           ;color.c: 211:     pink->H = HSV->H;
  8343   002764  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8344   002768  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8345   00276C  C082  FFE1         	movff	color_calibration@pink,fsr1l
  8346   002770  C083  FFE2         	movff	color_calibration@pink+1,fsr1h
  8347   002774  CFDE FFE6          	movff	postinc2,postinc1
  8348   002778  CFDD FFE5          	movff	postdec2,postdec1
  8349   00277C                     
  8350                           ;color.c: 212:     pink->S = HSV->S;
  8351   00277C  0100               	movlb	0	; () banked
  8352   00277E  EE20 F002          	lfsr	2,2
  8353   002782  5178               	movf	color_calibration@HSV& (0+255),w,b
  8354   002784  26D9               	addwf	fsr2l,f,c
  8355   002786  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8356   002788  22DA               	addwfc	fsr2h,f,c
  8357   00278A  EE10 F002          	lfsr	1,2
  8358   00278E  5182               	movf	color_calibration@pink& (0+255),w,b
  8359   002790  26E1               	addwf	fsr1l,f,c
  8360   002792  5183               	movf	(color_calibration@pink+1)& (0+255),w,b
  8361   002794  22E2               	addwfc	fsr1h,f,c
  8362   002796  CFDE FFE6          	movff	postinc2,postinc1
  8363   00279A  CFDD FFE5          	movff	postdec2,postdec1
  8364   00279E                     
  8365                           ; BSR set to: 0
  8366                           ;color.c: 213:     pink->V = HSV->V;
  8367   00279E  EE20 F004          	lfsr	2,4
  8368   0027A2  5178               	movf	color_calibration@HSV& (0+255),w,b
  8369   0027A4  26D9               	addwf	fsr2l,f,c
  8370   0027A6  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8371   0027A8  22DA               	addwfc	fsr2h,f,c
  8372   0027AA  EE10 F004          	lfsr	1,4
  8373   0027AE  5182               	movf	color_calibration@pink& (0+255),w,b
  8374   0027B0  26E1               	addwf	fsr1l,f,c
  8375   0027B2  5183               	movf	(color_calibration@pink+1)& (0+255),w,b
  8376   0027B4  22E2               	addwfc	fsr1h,f,c
  8377   0027B6  CFDE FFE6          	movff	postinc2,postinc1
  8378   0027BA  CFDD FFE5          	movff	postdec2,postdec1
  8379   0027BE                     
  8380                           ; BSR set to: 0
  8381                           ;color.c: 215:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8382   0027BE  0E29               	movlw	41
  8383   0027C0  6E41               	movwf	(??_color_calibration+1)^0,c
  8384   0027C2  0E96               	movlw	150
  8385   0027C4  6E40               	movwf	??_color_calibration^0,c
  8386   0027C6  0E7F               	movlw	127
  8387   0027C8                     u4867:
  8388   0027C8  2EE8               	decfsz	wreg,f,c
  8389   0027CA  D7FE               	bra	u4867
  8390   0027CC  2E40               	decfsz	??_color_calibration^0,f,c
  8391   0027CE  D7FC               	bra	u4867
  8392   0027D0  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8393   0027D2  D7FA               	bra	u4867
  8394   0027D4  0000               	nop	
  8395   0027D6                     
  8396                           ;color.c: 216:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8397   0027D6  8680               	bsf	128,3,c	;volatile
  8398   0027D8  8E7C               	bsf	124,7,c	;volatile
  8399   0027DA                     l206:
  8400   0027DA  B48E               	btfsc	142,2,c	;volatile
  8401   0027DC  EFF2  F013         	goto	u2791
  8402   0027E0  EFF4  F013         	goto	u2790
  8403   0027E4                     u2791:
  8404   0027E4  EFED  F013         	goto	l206
  8405   0027E8                     u2790:
  8406   0027E8                     
  8407                           ;color.c: 220:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8408   0027E8  9680               	bcf	128,3,c	;volatile
  8409   0027EA  9E7C               	bcf	124,7,c	;volatile
  8410   0027EC                     
  8411                           ;color.c: 221:     color_read(RGBC);
  8412   0027EC  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8413   0027F0  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8414   0027F4  ECD7  F020         	call	_color_read	;wreg free
  8415   0027F8                     
  8416                           ;color.c: 222:     rgb_2_hsv(*RGBC, HSV);
  8417   0027F8  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8418   0027FC  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8419   002800  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8420   002804  0E07               	movlw	7
  8421   002806                     u2801:
  8422   002806  CFDB FFEB          	movff	plusw2,plusw0
  8423   00280A  06E8               	decf	wreg,f,c
  8424   00280C  E2FC               	bc	u2801
  8425   00280E  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8426   002812  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8427   002816  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8428   00281A                     
  8429                           ;color.c: 223:     orange->H = HSV->H;
  8430   00281A  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8431   00281E  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8432   002822  C084  FFE1         	movff	color_calibration@orange,fsr1l
  8433   002826  C085  FFE2         	movff	color_calibration@orange+1,fsr1h
  8434   00282A  CFDE FFE6          	movff	postinc2,postinc1
  8435   00282E  CFDD FFE5          	movff	postdec2,postdec1
  8436   002832                     
  8437                           ;color.c: 224:     orange->S = HSV->S;
  8438   002832  0100               	movlb	0	; () banked
  8439   002834  EE20 F002          	lfsr	2,2
  8440   002838  5178               	movf	color_calibration@HSV& (0+255),w,b
  8441   00283A  26D9               	addwf	fsr2l,f,c
  8442   00283C  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8443   00283E  22DA               	addwfc	fsr2h,f,c
  8444   002840  EE10 F002          	lfsr	1,2
  8445   002844  5184               	movf	color_calibration@orange& (0+255),w,b
  8446   002846  26E1               	addwf	fsr1l,f,c
  8447   002848  5185               	movf	(color_calibration@orange+1)& (0+255),w,b
  8448   00284A  22E2               	addwfc	fsr1h,f,c
  8449   00284C  CFDE FFE6          	movff	postinc2,postinc1
  8450   002850  CFDD FFE5          	movff	postdec2,postdec1
  8451   002854                     
  8452                           ; BSR set to: 0
  8453                           ;color.c: 225:     orange->V = HSV->V;
  8454   002854  EE20 F004          	lfsr	2,4
  8455   002858  5178               	movf	color_calibration@HSV& (0+255),w,b
  8456   00285A  26D9               	addwf	fsr2l,f,c
  8457   00285C  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8458   00285E  22DA               	addwfc	fsr2h,f,c
  8459   002860  EE10 F004          	lfsr	1,4
  8460   002864  5184               	movf	color_calibration@orange& (0+255),w,b
  8461   002866  26E1               	addwf	fsr1l,f,c
  8462   002868  5185               	movf	(color_calibration@orange+1)& (0+255),w,b
  8463   00286A  22E2               	addwfc	fsr1h,f,c
  8464   00286C  CFDE FFE6          	movff	postinc2,postinc1
  8465   002870  CFDD FFE5          	movff	postdec2,postdec1
  8466   002874                     
  8467                           ; BSR set to: 0
  8468                           ;color.c: 227:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8469   002874  0E29               	movlw	41
  8470   002876  6E41               	movwf	(??_color_calibration+1)^0,c
  8471   002878  0E96               	movlw	150
  8472   00287A  6E40               	movwf	??_color_calibration^0,c
  8473   00287C  0E7F               	movlw	127
  8474   00287E                     u4877:
  8475   00287E  2EE8               	decfsz	wreg,f,c
  8476   002880  D7FE               	bra	u4877
  8477   002882  2E40               	decfsz	??_color_calibration^0,f,c
  8478   002884  D7FC               	bra	u4877
  8479   002886  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8480   002888  D7FA               	bra	u4877
  8481   00288A  0000               	nop	
  8482   00288C                     
  8483                           ;color.c: 228:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8484   00288C  8680               	bsf	128,3,c	;volatile
  8485   00288E  8E7C               	bsf	124,7,c	;volatile
  8486   002890                     l209:
  8487   002890  B48E               	btfsc	142,2,c	;volatile
  8488   002892  EF4D  F014         	goto	u2811
  8489   002896  EF4F  F014         	goto	u2810
  8490   00289A                     u2811:
  8491   00289A  EF48  F014         	goto	l209
  8492   00289E                     u2810:
  8493   00289E                     
  8494                           ;color.c: 232:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8495   00289E  9680               	bcf	128,3,c	;volatile
  8496   0028A0  9E7C               	bcf	124,7,c	;volatile
  8497   0028A2                     
  8498                           ;color.c: 233:     color_read(RGBC);
  8499   0028A2  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8500   0028A6  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8501   0028AA  ECD7  F020         	call	_color_read	;wreg free
  8502   0028AE                     
  8503                           ;color.c: 234:     rgb_2_hsv(*RGBC, HSV);
  8504   0028AE  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8505   0028B2  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8506   0028B6  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8507   0028BA  0E07               	movlw	7
  8508   0028BC                     u2821:
  8509   0028BC  CFDB FFEB          	movff	plusw2,plusw0
  8510   0028C0  06E8               	decf	wreg,f,c
  8511   0028C2  E2FC               	bc	u2821
  8512   0028C4  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8513   0028C8  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8514   0028CC  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8515   0028D0                     
  8516                           ;color.c: 235:     lightblue->H = HSV->H;
  8517   0028D0  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8518   0028D4  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8519   0028D8  C086  FFE1         	movff	color_calibration@lightblue,fsr1l
  8520   0028DC  C087  FFE2         	movff	color_calibration@lightblue+1,fsr1h
  8521   0028E0  CFDE FFE6          	movff	postinc2,postinc1
  8522   0028E4  CFDD FFE5          	movff	postdec2,postdec1
  8523   0028E8                     
  8524                           ;color.c: 236:     lightblue->S = HSV->S;
  8525   0028E8  0100               	movlb	0	; () banked
  8526   0028EA  EE20 F002          	lfsr	2,2
  8527   0028EE  5178               	movf	color_calibration@HSV& (0+255),w,b
  8528   0028F0  26D9               	addwf	fsr2l,f,c
  8529   0028F2  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8530   0028F4  22DA               	addwfc	fsr2h,f,c
  8531   0028F6  EE10 F002          	lfsr	1,2
  8532   0028FA  5186               	movf	color_calibration@lightblue& (0+255),w,b
  8533   0028FC  26E1               	addwf	fsr1l,f,c
  8534   0028FE  5187               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  8535   002900  22E2               	addwfc	fsr1h,f,c
  8536   002902  CFDE FFE6          	movff	postinc2,postinc1
  8537   002906  CFDD FFE5          	movff	postdec2,postdec1
  8538   00290A                     
  8539                           ; BSR set to: 0
  8540                           ;color.c: 237:     lightblue->V = HSV->V;
  8541   00290A  EE20 F004          	lfsr	2,4
  8542   00290E  5178               	movf	color_calibration@HSV& (0+255),w,b
  8543   002910  26D9               	addwf	fsr2l,f,c
  8544   002912  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8545   002914  22DA               	addwfc	fsr2h,f,c
  8546   002916  EE10 F004          	lfsr	1,4
  8547   00291A  5186               	movf	color_calibration@lightblue& (0+255),w,b
  8548   00291C  26E1               	addwf	fsr1l,f,c
  8549   00291E  5187               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  8550   002920  22E2               	addwfc	fsr1h,f,c
  8551   002922  CFDE FFE6          	movff	postinc2,postinc1
  8552   002926  CFDD FFE5          	movff	postdec2,postdec1
  8553   00292A                     
  8554                           ; BSR set to: 0
  8555                           ;color.c: 239:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8556   00292A  0E29               	movlw	41
  8557   00292C  6E41               	movwf	(??_color_calibration+1)^0,c
  8558   00292E  0E96               	movlw	150
  8559   002930  6E40               	movwf	??_color_calibration^0,c
  8560   002932  0E7F               	movlw	127
  8561   002934                     u4887:
  8562   002934  2EE8               	decfsz	wreg,f,c
  8563   002936  D7FE               	bra	u4887
  8564   002938  2E40               	decfsz	??_color_calibration^0,f,c
  8565   00293A  D7FC               	bra	u4887
  8566   00293C  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8567   00293E  D7FA               	bra	u4887
  8568   002940  0000               	nop	
  8569   002942                     
  8570                           ;color.c: 240:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8571   002942  8680               	bsf	128,3,c	;volatile
  8572   002944  8E7C               	bsf	124,7,c	;volatile
  8573   002946                     l212:
  8574   002946  B48E               	btfsc	142,2,c	;volatile
  8575   002948  EFA8  F014         	goto	u2831
  8576   00294C  EFAA  F014         	goto	u2830
  8577   002950                     u2831:
  8578   002950  EFA3  F014         	goto	l212
  8579   002954                     u2830:
  8580   002954                     
  8581                           ;color.c: 244:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8582   002954  9680               	bcf	128,3,c	;volatile
  8583   002956  9E7C               	bcf	124,7,c	;volatile
  8584   002958                     
  8585                           ;color.c: 245:     color_read(RGBC);
  8586   002958  C076  F014         	movff	color_calibration@RGBC,color_read@RGBC
  8587   00295C  C077  F015         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8588   002960  ECD7  F020         	call	_color_read	;wreg free
  8589   002964                     
  8590                           ;color.c: 246:     rgb_2_hsv(*RGBC, HSV);
  8591   002964  C076  FFD9         	movff	color_calibration@RGBC,fsr2l
  8592   002968  C077  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8593   00296C  EE00  F02A         	lfsr	0,rgb_2_hsv@RGBC
  8594   002970  0E07               	movlw	7
  8595   002972                     u2841:
  8596   002972  CFDB FFEB          	movff	plusw2,plusw0
  8597   002976  06E8               	decf	wreg,f,c
  8598   002978  E2FC               	bc	u2841
  8599   00297A  C078  F032         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8600   00297E  C079  F033         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8601   002982  EC6D  F017         	call	_rgb_2_hsv	;wreg free
  8602   002986                     
  8603                           ;color.c: 247:     white->H = HSV->H;
  8604   002986  C078  FFD9         	movff	color_calibration@HSV,fsr2l
  8605   00298A  C079  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8606   00298E  C088  FFE1         	movff	color_calibration@white,fsr1l
  8607   002992  C089  FFE2         	movff	color_calibration@white+1,fsr1h
  8608   002996  CFDE FFE6          	movff	postinc2,postinc1
  8609   00299A  CFDD FFE5          	movff	postdec2,postdec1
  8610   00299E                     
  8611                           ;color.c: 248:     white->S = HSV->S;
  8612   00299E  0100               	movlb	0	; () banked
  8613   0029A0  EE20 F002          	lfsr	2,2
  8614   0029A4  5178               	movf	color_calibration@HSV& (0+255),w,b
  8615   0029A6  26D9               	addwf	fsr2l,f,c
  8616   0029A8  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8617   0029AA  22DA               	addwfc	fsr2h,f,c
  8618   0029AC  EE10 F002          	lfsr	1,2
  8619   0029B0  5188               	movf	color_calibration@white& (0+255),w,b
  8620   0029B2  26E1               	addwf	fsr1l,f,c
  8621   0029B4  5189               	movf	(color_calibration@white+1)& (0+255),w,b
  8622   0029B6  22E2               	addwfc	fsr1h,f,c
  8623   0029B8  CFDE FFE6          	movff	postinc2,postinc1
  8624   0029BC  CFDD FFE5          	movff	postdec2,postdec1
  8625   0029C0                     
  8626                           ; BSR set to: 0
  8627                           ;color.c: 249:     white->V = HSV->V;
  8628   0029C0  EE20 F004          	lfsr	2,4
  8629   0029C4  5178               	movf	color_calibration@HSV& (0+255),w,b
  8630   0029C6  26D9               	addwf	fsr2l,f,c
  8631   0029C8  5179               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8632   0029CA  22DA               	addwfc	fsr2h,f,c
  8633   0029CC  EE10 F004          	lfsr	1,4
  8634   0029D0  5188               	movf	color_calibration@white& (0+255),w,b
  8635   0029D2  26E1               	addwf	fsr1l,f,c
  8636   0029D4  5189               	movf	(color_calibration@white+1)& (0+255),w,b
  8637   0029D6  22E2               	addwfc	fsr1h,f,c
  8638   0029D8  CFDE FFE6          	movff	postinc2,postinc1
  8639   0029DC  CFDD FFE5          	movff	postdec2,postdec1
  8640   0029E0                     
  8641                           ; BSR set to: 0
  8642                           ;color.c: 251:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8643   0029E0  0E29               	movlw	41
  8644   0029E2  6E41               	movwf	(??_color_calibration+1)^0,c
  8645   0029E4  0E96               	movlw	150
  8646   0029E6  6E40               	movwf	??_color_calibration^0,c
  8647   0029E8  0E7F               	movlw	127
  8648   0029EA                     u4897:
  8649   0029EA  2EE8               	decfsz	wreg,f,c
  8650   0029EC  D7FE               	bra	u4897
  8651   0029EE  2E40               	decfsz	??_color_calibration^0,f,c
  8652   0029F0  D7FC               	bra	u4897
  8653   0029F2  2E41               	decfsz	(??_color_calibration+1)^0,f,c
  8654   0029F4  D7FA               	bra	u4897
  8655   0029F6  0000               	nop	
  8656   0029F8                     
  8657                           ;color.c: 252:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8658   0029F8  8680               	bsf	128,3,c	;volatile
  8659   0029FA  8E7C               	bsf	124,7,c	;volatile
  8660   0029FC  0012               	return		;funcret
  8661   0029FE                     __end_of_color_calibration:
  8662                           	callstack 0
  8663                           
  8664 ;; *************** function _white_Light *****************
  8665 ;; Defined at:
  8666 ;;		line 62 in file "color.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;  state           1    wreg     unsigned char 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  state           1   15[COMRAM] unsigned char 
  8671 ;; Return value:  Size  Location     Type
  8672 ;;                  1    wreg      void 
  8673 ;; Registers used:
  8674 ;;		wreg, status,2
  8675 ;; Tracked objects:
  8676 ;;		On entry : 0/0
  8677 ;;		On exit  : 0/0
  8678 ;;		Unchanged: 0/0
  8679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8684 ;;Total ram usage:        1 bytes
  8685 ;; Hardware stack levels used: 1
  8686 ;; Hardware stack levels required when called: 6
  8687 ;; This function calls:
  8688 ;;		Nothing
  8689 ;; This function is called by:
  8690 ;;		_main
  8691 ;;		_color_calibration
  8692 ;;		_returnHome
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           	psect	text20
  8697   00549E                     __ptext20:
  8698                           	callstack 0
  8699   00549E                     _white_Light:
  8700                           	callstack 24
  8701                           
  8702                           ;incstack = 0
  8703                           ;white_Light@state stored from wreg
  8704   00549E  6E10               	movwf	white_Light@state^0,c
  8705   0054A0                     
  8706                           ;color.c: 62: void white_Light(char state);color.c: 63: {;color.c: 64:     if (state){
  8707   0054A0  5010               	movf	white_Light@state^0,w,c
  8708   0054A2  B4D8               	btfsc	status,2,c
  8709   0054A4  EF56  F02A         	goto	u1951
  8710   0054A8  EF58  F02A         	goto	u1950
  8711   0054AC                     u1951:
  8712   0054AC  EF5D  F02A         	goto	l155
  8713   0054B0                     u1950:
  8714   0054B0                     
  8715                           ;color.c: 65:         LATGbits.LATG0 = 1;
  8716   0054B0  807F               	bsf	127,0,c	;volatile
  8717                           
  8718                           ;color.c: 66:         LATEbits.LATE7 = 1;
  8719   0054B2  8E7D               	bsf	125,7,c	;volatile
  8720                           
  8721                           ;color.c: 67:         LATAbits.LATA3 = 1;
  8722   0054B4  8679               	bsf	121,3,c	;volatile
  8723                           
  8724                           ;color.c: 68:     }
  8725   0054B6  EF60  F02A         	goto	l157
  8726   0054BA                     l155:
  8727                           
  8728                           ;color.c: 70:         LATGbits.LATG0 = 0;
  8729   0054BA  907F               	bcf	127,0,c	;volatile
  8730                           
  8731                           ;color.c: 71:         LATEbits.LATE7 = 0;
  8732   0054BC  9E7D               	bcf	125,7,c	;volatile
  8733                           
  8734                           ;color.c: 72:         LATAbits.LATA3 = 0;
  8735   0054BE  9679               	bcf	121,3,c	;volatile
  8736   0054C0                     l157:
  8737   0054C0  0012               	return		;funcret
  8738   0054C2                     __end_of_white_Light:
  8739                           	callstack 0
  8740                           
  8741 ;; *************** function _rgb_2_hsv *****************
  8742 ;; Defined at:
  8743 ;;		line 265 in file "color.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;  RGBC            8   41[COMRAM] struct RGBC_val
  8746 ;;  HSV             2   49[COMRAM] PTR struct HSV_val
  8747 ;;		 -> main@HSV(6), 
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;  diff            4   14[BANK0 ] unsigned long 
  8750 ;;  b               2   20[BANK0 ] unsigned int 
  8751 ;;  g               2   18[BANK0 ] unsigned int 
  8752 ;;  cmax            2   12[BANK0 ] unsigned int 
  8753 ;;  r               2   10[BANK0 ] unsigned int 
  8754 ;;  cmin            2    4[BANK0 ] unsigned int 
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  1    wreg      void 
  8757 ;; Registers used:
  8758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8764 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8765 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8766 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8767 ;;      Totals:        22      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8768 ;;Total ram usage:       44 bytes
  8769 ;; Hardware stack levels used: 1
  8770 ;; Hardware stack levels required when called: 7
  8771 ;; This function calls:
  8772 ;;		___aldiv
  8773 ;;		___lldiv
  8774 ;;		___lmul
  8775 ;;		_max
  8776 ;;		_min
  8777 ;; This function is called by:
  8778 ;;		_main
  8779 ;;		_color_calibration
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text21
  8784   002EDA                     __ptext21:
  8785                           	callstack 0
  8786   002EDA                     _rgb_2_hsv:
  8787                           	callstack 23
  8788   002EDA                     
  8789                           ;color.c: 271:     unsigned int r = (unsigned int)(RGBC.R*10000L/1900);
  8790   002EDA  C02A  F010         	movff	rgb_2_hsv@RGBC,___lmul@multiplier
  8791   002EDE  C02B  F011         	movff	rgb_2_hsv@RGBC+1,___lmul@multiplier+1
  8792   002EE2  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8793   002EE4  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8794   002EE6  0E10               	movlw	16
  8795   002EE8  6E14               	movwf	___lmul@multiplicand^0,c
  8796   002EEA  0E27               	movlw	39
  8797   002EEC  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8798   002EEE  0E00               	movlw	0
  8799   002EF0  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8800   002EF2  0E00               	movlw	0
  8801   002EF4  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8802   002EF6  ECE0  F028         	call	___lmul	;wreg free
  8803   002EFA  C010  F01C         	movff	?___lmul,___aldiv@dividend
  8804   002EFE  C011  F01D         	movff	?___lmul+1,___aldiv@dividend+1
  8805   002F02  C012  F01E         	movff	?___lmul+2,___aldiv@dividend+2
  8806   002F06  C013  F01F         	movff	?___lmul+3,___aldiv@dividend+3
  8807   002F0A  0E6C               	movlw	108
  8808   002F0C  6E20               	movwf	___aldiv@divisor^0,c
  8809   002F0E  0E07               	movlw	7
  8810   002F10  6E21               	movwf	(___aldiv@divisor+1)^0,c
  8811   002F12  0E00               	movlw	0
  8812   002F14  6E22               	movwf	(___aldiv@divisor+2)^0,c
  8813   002F16  0E00               	movlw	0
  8814   002F18  6E23               	movwf	(___aldiv@divisor+3)^0,c
  8815   002F1A  EC4D  F025         	call	___aldiv	;wreg free
  8816   002F1E  C01C  F06A         	movff	?___aldiv,rgb_2_hsv@r
  8817   002F22  C01D  F06B         	movff	?___aldiv+1,rgb_2_hsv@r+1
  8818                           
  8819                           ;color.c: 272:     unsigned int g = (unsigned int)(RGBC.G*10000L/1400);
  8820   002F26  C02C  F010         	movff	rgb_2_hsv@RGBC+2,___lmul@multiplier
  8821   002F2A  C02D  F011         	movff	rgb_2_hsv@RGBC+3,___lmul@multiplier+1
  8822   002F2E  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8823   002F30  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8824   002F32  0E10               	movlw	16
  8825   002F34  6E14               	movwf	___lmul@multiplicand^0,c
  8826   002F36  0E27               	movlw	39
  8827   002F38  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8828   002F3A  0E00               	movlw	0
  8829   002F3C  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8830   002F3E  0E00               	movlw	0
  8831   002F40  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8832   002F42  ECE0  F028         	call	___lmul	;wreg free
  8833   002F46  C010  F01C         	movff	?___lmul,___aldiv@dividend
  8834   002F4A  C011  F01D         	movff	?___lmul+1,___aldiv@dividend+1
  8835   002F4E  C012  F01E         	movff	?___lmul+2,___aldiv@dividend+2
  8836   002F52  C013  F01F         	movff	?___lmul+3,___aldiv@dividend+3
  8837   002F56  0E78               	movlw	120
  8838   002F58  6E20               	movwf	___aldiv@divisor^0,c
  8839   002F5A  0E05               	movlw	5
  8840   002F5C  6E21               	movwf	(___aldiv@divisor+1)^0,c
  8841   002F5E  0E00               	movlw	0
  8842   002F60  6E22               	movwf	(___aldiv@divisor+2)^0,c
  8843   002F62  0E00               	movlw	0
  8844   002F64  6E23               	movwf	(___aldiv@divisor+3)^0,c
  8845   002F66  EC4D  F025         	call	___aldiv	;wreg free
  8846   002F6A  C01C  F072         	movff	?___aldiv,rgb_2_hsv@g
  8847   002F6E  C01D  F073         	movff	?___aldiv+1,rgb_2_hsv@g+1
  8848                           
  8849                           ;color.c: 273:     unsigned int b = (unsigned int)(RGBC.B*10000L/1600);
  8850   002F72  C02E  F010         	movff	rgb_2_hsv@RGBC+4,___lmul@multiplier
  8851   002F76  C02F  F011         	movff	rgb_2_hsv@RGBC+5,___lmul@multiplier+1
  8852   002F7A  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8853   002F7C  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8854   002F7E  0E10               	movlw	16
  8855   002F80  6E14               	movwf	___lmul@multiplicand^0,c
  8856   002F82  0E27               	movlw	39
  8857   002F84  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8858   002F86  0E00               	movlw	0
  8859   002F88  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8860   002F8A  0E00               	movlw	0
  8861   002F8C  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8862   002F8E  ECE0  F028         	call	___lmul	;wreg free
  8863   002F92  C010  F01C         	movff	?___lmul,___aldiv@dividend
  8864   002F96  C011  F01D         	movff	?___lmul+1,___aldiv@dividend+1
  8865   002F9A  C012  F01E         	movff	?___lmul+2,___aldiv@dividend+2
  8866   002F9E  C013  F01F         	movff	?___lmul+3,___aldiv@dividend+3
  8867   002FA2  0E40               	movlw	64
  8868   002FA4  6E20               	movwf	___aldiv@divisor^0,c
  8869   002FA6  0E06               	movlw	6
  8870   002FA8  6E21               	movwf	(___aldiv@divisor+1)^0,c
  8871   002FAA  0E00               	movlw	0
  8872   002FAC  6E22               	movwf	(___aldiv@divisor+2)^0,c
  8873   002FAE  0E00               	movlw	0
  8874   002FB0  6E23               	movwf	(___aldiv@divisor+3)^0,c
  8875   002FB2  EC4D  F025         	call	___aldiv	;wreg free
  8876   002FB6  C01C  F074         	movff	?___aldiv,rgb_2_hsv@b
  8877   002FBA  C01D  F075         	movff	?___aldiv+1,rgb_2_hsv@b+1
  8878                           
  8879                           ;color.c: 276:     unsigned int cmax = max(r, max(g, b));
  8880   002FBE  C072  F010         	movff	rgb_2_hsv@g,max@a
  8881   002FC2  C073  F011         	movff	rgb_2_hsv@g+1,max@a+1
  8882   002FC6  C074  F012         	movff	rgb_2_hsv@b,max@b
  8883   002FCA  C075  F013         	movff	rgb_2_hsv@b+1,max@b+1
  8884   002FCE  ECD5  F029         	call	_max	;wreg free
  8885   002FD2  C010  F066         	movff	?_max,_rgb_2_hsv$3588
  8886   002FD6  C011  F067         	movff	?_max+1,_rgb_2_hsv$3588+1
  8887                           
  8888                           ;color.c: 276:     unsigned int cmax = max(r, max(g, b));
  8889   002FDA  C06A  F010         	movff	rgb_2_hsv@r,max@a
  8890   002FDE  C06B  F011         	movff	rgb_2_hsv@r+1,max@a+1
  8891   002FE2  C066  F012         	movff	_rgb_2_hsv$3588,max@b
  8892   002FE6  C067  F013         	movff	_rgb_2_hsv$3588+1,max@b+1
  8893   002FEA  ECD5  F029         	call	_max	;wreg free
  8894   002FEE  C010  F06C         	movff	?_max,rgb_2_hsv@cmax
  8895   002FF2  C011  F06D         	movff	?_max+1,rgb_2_hsv@cmax+1
  8896                           
  8897                           ;color.c: 277:     unsigned int cmin = min(r, min(g, b));
  8898   002FF6  C072  F010         	movff	rgb_2_hsv@g,min@a
  8899   002FFA  C073  F011         	movff	rgb_2_hsv@g+1,min@a+1
  8900   002FFE  C074  F012         	movff	rgb_2_hsv@b,min@b
  8901   003002  C075  F013         	movff	rgb_2_hsv@b+1,min@b+1
  8902   003006  ECBF  F029         	call	_min	;wreg free
  8903   00300A  C010  F068         	movff	?_min,_rgb_2_hsv$3589
  8904   00300E  C011  F069         	movff	?_min+1,_rgb_2_hsv$3589+1
  8905                           
  8906                           ;color.c: 277:     unsigned int cmin = min(r, min(g, b));
  8907   003012  C06A  F010         	movff	rgb_2_hsv@r,min@a
  8908   003016  C06B  F011         	movff	rgb_2_hsv@r+1,min@a+1
  8909   00301A  C068  F012         	movff	_rgb_2_hsv$3589,min@b
  8910   00301E  C069  F013         	movff	_rgb_2_hsv$3589+1,min@b+1
  8911   003022  ECBF  F029         	call	_min	;wreg free
  8912   003026  C010  F064         	movff	?_min,rgb_2_hsv@cmin
  8913   00302A  C011  F065         	movff	?_min+1,rgb_2_hsv@cmin+1
  8914   00302E                     
  8915                           ;color.c: 278:     unsigned long diff = cmax - cmin;
  8916   00302E  0100               	movlb	0	; () banked
  8917   003030  5164               	movf	rgb_2_hsv@cmin& (0+255),w,b
  8918   003032  5D6C               	subwf	rgb_2_hsv@cmax& (0+255),w,b
  8919   003034  6E34               	movwf	??_rgb_2_hsv^0,c
  8920   003036  5165               	movf	(rgb_2_hsv@cmin+1)& (0+255),w,b
  8921   003038  596D               	subwfb	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8922   00303A  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8923   00303C  C034  F06E         	movff	??_rgb_2_hsv,rgb_2_hsv@diff
  8924   003040  C035  F06F         	movff	??_rgb_2_hsv+1,rgb_2_hsv@diff+1
  8925   003044  6B70               	clrf	(rgb_2_hsv@diff+2)& (0+255),b
  8926   003046  6B71               	clrf	(rgb_2_hsv@diff+3)& (0+255),b
  8927   003048                     
  8928                           ; BSR set to: 0
  8929                           ;color.c: 281:     if (cmax == r){
  8930   003048  516A               	movf	rgb_2_hsv@r& (0+255),w,b
  8931   00304A  196C               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8932   00304C  E107               	bnz	u2351
  8933   00304E  516B               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8934   003050  196D               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8935   003052  A4D8               	btfss	status,2,c
  8936   003054  EF2E  F018         	goto	u2351
  8937   003058  EF30  F018         	goto	u2350
  8938   00305C                     u2351:
  8939   00305C  EFD7  F018         	goto	l3574
  8940   003060                     u2350:
  8941   003060                     
  8942                           ; BSR set to: 0
  8943                           ;color.c: 282:         if (g > b){HSV->H = (unsigned int)((g-b)*6000L/diff);}
  8944   003060  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  8945   003062  5D74               	subwf	rgb_2_hsv@b& (0+255),w,b
  8946   003064  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8947   003066  5975               	subwfb	(rgb_2_hsv@b+1)& (0+255),w,b
  8948   003068  B0D8               	btfsc	status,0,c
  8949   00306A  EF39  F018         	goto	u2361
  8950   00306E  EF3B  F018         	goto	u2360
  8951   003072                     u2361:
  8952   003072  EF6D  F018         	goto	l3568
  8953   003076                     u2360:
  8954   003076                     
  8955                           ; BSR set to: 0
  8956   003076  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8957   003078  5D72               	subwf	rgb_2_hsv@g& (0+255),w,b
  8958   00307A  6E34               	movwf	??_rgb_2_hsv^0,c
  8959   00307C  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8960   00307E  5973               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8961   003080  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  8962   003082  C034  F010         	movff	??_rgb_2_hsv,___lmul@multiplier
  8963   003086  C035  F011         	movff	??_rgb_2_hsv+1,___lmul@multiplier+1
  8964   00308A  6A12               	clrf	(___lmul@multiplier+2)^0,c
  8965   00308C  6A13               	clrf	(___lmul@multiplier+3)^0,c
  8966   00308E  0E70               	movlw	112
  8967   003090  6E14               	movwf	___lmul@multiplicand^0,c
  8968   003092  0E17               	movlw	23
  8969   003094  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  8970   003096  0E00               	movlw	0
  8971   003098  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  8972   00309A  0E00               	movlw	0
  8973   00309C  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  8974   00309E  ECE0  F028         	call	___lmul	;wreg free
  8975   0030A2  C010  F01C         	movff	?___lmul,___lldiv@dividend
  8976   0030A6  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  8977   0030AA  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  8978   0030AE  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  8979   0030B2  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8980   0030B6  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8981   0030BA  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8982   0030BE  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8983   0030C2  ECD2  F027         	call	___lldiv	;wreg free
  8984   0030C6  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8985   0030CA  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8986   0030CE  C01C  FFDE         	movff	?___lldiv,postinc2
  8987   0030D2  C01D  FFDD         	movff	?___lldiv+1,postdec2
  8988   0030D6  EF8F  F019         	goto	l232
  8989   0030DA                     l3568:
  8990                           
  8991                           ; BSR set to: 0
  8992   0030DA  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  8993   0030DC  5D72               	subwf	rgb_2_hsv@g& (0+255),w,b
  8994   0030DE  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8995   0030E0  5973               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8996   0030E2  B0D8               	btfsc	status,0,c
  8997   0030E4  EF76  F018         	goto	u2371
  8998   0030E8  EF78  F018         	goto	u2370
  8999   0030EC                     u2371:
  9000   0030EC  EF8F  F019         	goto	l232
  9001   0030F0                     u2370:
  9002   0030F0                     
  9003                           ; BSR set to: 0
  9004   0030F0  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  9005   0030F2  6E34               	movwf	??_rgb_2_hsv^0,c
  9006   0030F4  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  9007   0030F6  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  9008   0030F8  6A36               	clrf	(??_rgb_2_hsv+2)^0,c
  9009   0030FA  6A37               	clrf	(??_rgb_2_hsv+3)^0,c
  9010   0030FC  C06E  F010         	movff	rgb_2_hsv@diff,___lmul@multiplier
  9011   003100  C06F  F011         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  9012   003104  C070  F012         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  9013   003108  C071  F013         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  9014   00310C  0E06               	movlw	6
  9015   00310E  6E14               	movwf	___lmul@multiplicand^0,c
  9016   003110  0E00               	movlw	0
  9017   003112  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  9018   003114  0E00               	movlw	0
  9019   003116  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  9020   003118  0E00               	movlw	0
  9021   00311A  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  9022   00311C  ECE0  F028         	call	___lmul	;wreg free
  9023   003120  0100               	movlb	0	; () banked
  9024   003122  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  9025   003124  2410               	addwf	?___lmul^0,w,c
  9026   003126  6E38               	movwf	(??_rgb_2_hsv+4)^0,c
  9027   003128  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  9028   00312A  2011               	addwfc	(?___lmul+1)^0,w,c
  9029   00312C  6E39               	movwf	(??_rgb_2_hsv+5)^0,c
  9030   00312E  0E00               	movlw	0
  9031   003130  2012               	addwfc	(?___lmul+2)^0,w,c
  9032   003132  6E3A               	movwf	(??_rgb_2_hsv+6)^0,c
  9033   003134  0E00               	movlw	0
  9034   003136  2013               	addwfc	(?___lmul+3)^0,w,c
  9035   003138  6E3B               	movwf	(??_rgb_2_hsv+7)^0,c
  9036   00313A  5034               	movf	??_rgb_2_hsv^0,w,c
  9037   00313C  5C38               	subwf	(??_rgb_2_hsv+4)^0,w,c
  9038   00313E  6F60               	movwf	_rgb_2_hsv$3590& (0+255),b
  9039   003140  5035               	movf	(??_rgb_2_hsv+1)^0,w,c
  9040   003142  5839               	subwfb	(??_rgb_2_hsv+5)^0,w,c
  9041   003144  6F61               	movwf	(_rgb_2_hsv$3590+1)& (0+255),b
  9042   003146  5036               	movf	(??_rgb_2_hsv+2)^0,w,c
  9043   003148  583A               	subwfb	(??_rgb_2_hsv+6)^0,w,c
  9044   00314A  6F62               	movwf	(_rgb_2_hsv$3590+2)& (0+255),b
  9045   00314C  5037               	movf	(??_rgb_2_hsv+3)^0,w,c
  9046   00314E  583B               	subwfb	(??_rgb_2_hsv+7)^0,w,c
  9047   003150  6F63               	movwf	(_rgb_2_hsv$3590+3)& (0+255),b
  9048   003152                     
  9049                           ; BSR set to: 0
  9050   003152  C060  F010         	movff	_rgb_2_hsv$3590,___lmul@multiplier
  9051   003156  C061  F011         	movff	_rgb_2_hsv$3590+1,___lmul@multiplier+1
  9052   00315A  C062  F012         	movff	_rgb_2_hsv$3590+2,___lmul@multiplier+2
  9053   00315E  C063  F013         	movff	_rgb_2_hsv$3590+3,___lmul@multiplier+3
  9054   003162  0E70               	movlw	112
  9055   003164  6E14               	movwf	___lmul@multiplicand^0,c
  9056   003166  0E17               	movlw	23
  9057   003168  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  9058   00316A  0E00               	movlw	0
  9059   00316C  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  9060   00316E  0E00               	movlw	0
  9061   003170  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  9062   003172  ECE0  F028         	call	___lmul	;wreg free
  9063   003176  C010  F01C         	movff	?___lmul,___lldiv@dividend
  9064   00317A  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  9065   00317E  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  9066   003182  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  9067   003186  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  9068   00318A  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  9069   00318E  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  9070   003192  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  9071   003196  ECD2  F027         	call	___lldiv	;wreg free
  9072   00319A  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  9073   00319E  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  9074   0031A2  C01C  FFDE         	movff	?___lldiv,postinc2
  9075   0031A6  C01D  FFDD         	movff	?___lldiv+1,postdec2
  9076   0031AA  EF8F  F019         	goto	l232
  9077   0031AE                     l3574:
  9078                           
  9079                           ; BSR set to: 0
  9080   0031AE  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  9081   0031B0  196C               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  9082   0031B2  E107               	bnz	u2381
  9083   0031B4  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  9084   0031B6  196D               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  9085   0031B8  A4D8               	btfss	status,2,c
  9086   0031BA  EFE1  F018         	goto	u2381
  9087   0031BE  EFE3  F018         	goto	u2380
  9088   0031C2                     u2381:
  9089   0031C2  EF30  F019         	goto	l3578
  9090   0031C6                     u2380:
  9091   0031C6                     
  9092                           ; BSR set to: 0
  9093   0031C6  516A               	movf	rgb_2_hsv@r& (0+255),w,b
  9094   0031C8  6E34               	movwf	??_rgb_2_hsv^0,c
  9095   0031CA  516B               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  9096   0031CC  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  9097   0031CE  6A36               	clrf	(??_rgb_2_hsv+2)^0,c
  9098   0031D0  6A37               	clrf	(??_rgb_2_hsv+3)^0,c
  9099   0031D2  90D8               	bcf	status,0,c
  9100   0031D4  356E               	rlcf	rgb_2_hsv@diff& (0+255),w,b
  9101   0031D6  6E38               	movwf	(??_rgb_2_hsv+4)^0,c
  9102   0031D8  356F               	rlcf	(rgb_2_hsv@diff+1)& (0+255),w,b
  9103   0031DA  6E39               	movwf	(??_rgb_2_hsv+5)^0,c
  9104   0031DC  3570               	rlcf	(rgb_2_hsv@diff+2)& (0+255),w,b
  9105   0031DE  6E3A               	movwf	(??_rgb_2_hsv+6)^0,c
  9106   0031E0  3571               	rlcf	(rgb_2_hsv@diff+3)& (0+255),w,b
  9107   0031E2  6E3B               	movwf	(??_rgb_2_hsv+7)^0,c
  9108   0031E4  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  9109   0031E6  2438               	addwf	(??_rgb_2_hsv+4)^0,w,c
  9110   0031E8  6E3C               	movwf	(??_rgb_2_hsv+8)^0,c
  9111   0031EA  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  9112   0031EC  2039               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  9113   0031EE  6E3D               	movwf	(??_rgb_2_hsv+9)^0,c
  9114   0031F0  0E00               	movlw	0
  9115   0031F2  203A               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  9116   0031F4  6E3E               	movwf	(??_rgb_2_hsv+10)^0,c
  9117   0031F6  0E00               	movlw	0
  9118   0031F8  203B               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  9119   0031FA  6E3F               	movwf	(??_rgb_2_hsv+11)^0,c
  9120   0031FC  5034               	movf	??_rgb_2_hsv^0,w,c
  9121   0031FE  5C3C               	subwf	(??_rgb_2_hsv+8)^0,w,c
  9122   003200  6E10               	movwf	___lmul@multiplier^0,c
  9123   003202  5035               	movf	(??_rgb_2_hsv+1)^0,w,c
  9124   003204  583D               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  9125   003206  6E11               	movwf	(___lmul@multiplier+1)^0,c
  9126   003208  5036               	movf	(??_rgb_2_hsv+2)^0,w,c
  9127   00320A  583E               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  9128   00320C  6E12               	movwf	(___lmul@multiplier+2)^0,c
  9129   00320E  5037               	movf	(??_rgb_2_hsv+3)^0,w,c
  9130   003210  583F               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  9131   003212  6E13               	movwf	(___lmul@multiplier+3)^0,c
  9132   003214  0E70               	movlw	112
  9133   003216  6E14               	movwf	___lmul@multiplicand^0,c
  9134   003218  0E17               	movlw	23
  9135   00321A  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  9136   00321C  0E00               	movlw	0
  9137   00321E  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  9138   003220  0E00               	movlw	0
  9139   003222  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  9140   003224  ECE0  F028         	call	___lmul	;wreg free
  9141   003228  C010  F01C         	movff	?___lmul,___lldiv@dividend
  9142   00322C  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  9143   003230  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  9144   003234  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  9145   003238  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  9146   00323C  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  9147   003240  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  9148   003244  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  9149   003248  ECD2  F027         	call	___lldiv	;wreg free
  9150   00324C  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  9151   003250  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  9152   003254  C01C  FFDE         	movff	?___lldiv,postinc2
  9153   003258  C01D  FFDD         	movff	?___lldiv+1,postdec2
  9154   00325C  EF8F  F019         	goto	l232
  9155   003260                     l3578:
  9156                           
  9157                           ; BSR set to: 0
  9158   003260  5174               	movf	rgb_2_hsv@b& (0+255),w,b
  9159   003262  196C               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  9160   003264  E107               	bnz	u2391
  9161   003266  5175               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  9162   003268  196D               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  9163   00326A  A4D8               	btfss	status,2,c
  9164   00326C  EF3A  F019         	goto	u2391
  9165   003270  EF3C  F019         	goto	u2390
  9166   003274                     u2391:
  9167   003274  EF8F  F019         	goto	l232
  9168   003278                     u2390:
  9169   003278                     
  9170                           ; BSR set to: 0
  9171   003278  5172               	movf	rgb_2_hsv@g& (0+255),w,b
  9172   00327A  6E34               	movwf	??_rgb_2_hsv^0,c
  9173   00327C  5173               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  9174   00327E  6E35               	movwf	(??_rgb_2_hsv+1)^0,c
  9175   003280  6A36               	clrf	(??_rgb_2_hsv+2)^0,c
  9176   003282  6A37               	clrf	(??_rgb_2_hsv+3)^0,c
  9177   003284  C06E  F038         	movff	rgb_2_hsv@diff,??_rgb_2_hsv+4
  9178   003288  C06F  F039         	movff	rgb_2_hsv@diff+1,??_rgb_2_hsv+5
  9179   00328C  C070  F03A         	movff	rgb_2_hsv@diff+2,??_rgb_2_hsv+6
  9180   003290  C071  F03B         	movff	rgb_2_hsv@diff+3,??_rgb_2_hsv+7
  9181   003294  0E02               	movlw	2
  9182   003296                     u2405:
  9183   003296  90D8               	bcf	status,0,c
  9184   003298  3638               	rlcf	(??_rgb_2_hsv+4)^0,f,c
  9185   00329A  3639               	rlcf	(??_rgb_2_hsv+5)^0,f,c
  9186   00329C  363A               	rlcf	(??_rgb_2_hsv+6)^0,f,c
  9187   00329E  363B               	rlcf	(??_rgb_2_hsv+7)^0,f,c
  9188   0032A0  2EE8               	decfsz	wreg,f,c
  9189   0032A2  EF4B  F019         	goto	u2405
  9190   0032A6  516A               	movf	rgb_2_hsv@r& (0+255),w,b
  9191   0032A8  2438               	addwf	(??_rgb_2_hsv+4)^0,w,c
  9192   0032AA  6E3C               	movwf	(??_rgb_2_hsv+8)^0,c
  9193   0032AC  516B               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  9194   0032AE  2039               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  9195   0032B0  6E3D               	movwf	(??_rgb_2_hsv+9)^0,c
  9196   0032B2  0E00               	movlw	0
  9197   0032B4  203A               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  9198   0032B6  6E3E               	movwf	(??_rgb_2_hsv+10)^0,c
  9199   0032B8  0E00               	movlw	0
  9200   0032BA  203B               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  9201   0032BC  6E3F               	movwf	(??_rgb_2_hsv+11)^0,c
  9202   0032BE  5034               	movf	??_rgb_2_hsv^0,w,c
  9203   0032C0  5C3C               	subwf	(??_rgb_2_hsv+8)^0,w,c
  9204   0032C2  6E10               	movwf	___lmul@multiplier^0,c
  9205   0032C4  5035               	movf	(??_rgb_2_hsv+1)^0,w,c
  9206   0032C6  583D               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  9207   0032C8  6E11               	movwf	(___lmul@multiplier+1)^0,c
  9208   0032CA  5036               	movf	(??_rgb_2_hsv+2)^0,w,c
  9209   0032CC  583E               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  9210   0032CE  6E12               	movwf	(___lmul@multiplier+2)^0,c
  9211   0032D0  5037               	movf	(??_rgb_2_hsv+3)^0,w,c
  9212   0032D2  583F               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  9213   0032D4  6E13               	movwf	(___lmul@multiplier+3)^0,c
  9214   0032D6  0E70               	movlw	112
  9215   0032D8  6E14               	movwf	___lmul@multiplicand^0,c
  9216   0032DA  0E17               	movlw	23
  9217   0032DC  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  9218   0032DE  0E00               	movlw	0
  9219   0032E0  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  9220   0032E2  0E00               	movlw	0
  9221   0032E4  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  9222   0032E6  ECE0  F028         	call	___lmul	;wreg free
  9223   0032EA  C010  F01C         	movff	?___lmul,___lldiv@dividend
  9224   0032EE  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  9225   0032F2  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  9226   0032F6  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  9227   0032FA  C06E  F020         	movff	rgb_2_hsv@diff,___lldiv@divisor
  9228   0032FE  C06F  F021         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  9229   003302  C070  F022         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  9230   003306  C071  F023         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  9231   00330A  ECD2  F027         	call	___lldiv	;wreg free
  9232   00330E  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  9233   003312  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  9234   003316  C01C  FFDE         	movff	?___lldiv,postinc2
  9235   00331A  C01D  FFDD         	movff	?___lldiv+1,postdec2
  9236   00331E                     l232:
  9237                           
  9238                           ;color.c: 291:     HSV->S = (unsigned int)((diff * 10000)/cmax);
  9239   00331E  C06E  F010         	movff	rgb_2_hsv@diff,___lmul@multiplier
  9240   003322  C06F  F011         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  9241   003326  C070  F012         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  9242   00332A  C071  F013         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  9243   00332E  0E10               	movlw	16
  9244   003330  6E14               	movwf	___lmul@multiplicand^0,c
  9245   003332  0E27               	movlw	39
  9246   003334  6E15               	movwf	(___lmul@multiplicand+1)^0,c
  9247   003336  0E00               	movlw	0
  9248   003338  6E16               	movwf	(___lmul@multiplicand+2)^0,c
  9249   00333A  0E00               	movlw	0
  9250   00333C  6E17               	movwf	(___lmul@multiplicand+3)^0,c
  9251   00333E  ECE0  F028         	call	___lmul	;wreg free
  9252   003342  C010  F01C         	movff	?___lmul,___lldiv@dividend
  9253   003346  C011  F01D         	movff	?___lmul+1,___lldiv@dividend+1
  9254   00334A  C012  F01E         	movff	?___lmul+2,___lldiv@dividend+2
  9255   00334E  C013  F01F         	movff	?___lmul+3,___lldiv@dividend+3
  9256   003352  C06C  F020         	movff	rgb_2_hsv@cmax,___lldiv@divisor
  9257   003356  C06D  F021         	movff	rgb_2_hsv@cmax+1,___lldiv@divisor+1
  9258   00335A  6A22               	clrf	(___lldiv@divisor+2)^0,c
  9259   00335C  6A23               	clrf	(___lldiv@divisor+3)^0,c
  9260   00335E  ECD2  F027         	call	___lldiv	;wreg free
  9261   003362  EE20 F002          	lfsr	2,2
  9262   003366  5032               	movf	rgb_2_hsv@HSV^0,w,c
  9263   003368  26D9               	addwf	fsr2l,f,c
  9264   00336A  5033               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  9265   00336C  22DA               	addwfc	fsr2h,f,c
  9266   00336E  C01C  FFDE         	movff	?___lldiv,postinc2
  9267   003372  C01D  FFDD         	movff	?___lldiv+1,postdec2
  9268   003376                     
  9269                           ;color.c: 293:     if (HSV->S == 0){HSV->H = 0;}
  9270   003376  EE20 F002          	lfsr	2,2
  9271   00337A  5032               	movf	rgb_2_hsv@HSV^0,w,c
  9272   00337C  26D9               	addwf	fsr2l,f,c
  9273   00337E  5033               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  9274   003380  22DA               	addwfc	fsr2h,f,c
  9275   003382  50DE               	movf	postinc2,w,c
  9276   003384  10DE               	iorwf	postinc2,w,c
  9277   003386  A4D8               	btfss	status,2,c
  9278   003388  EFC8  F019         	goto	u2411
  9279   00338C  EFCA  F019         	goto	u2410
  9280   003390                     u2411:
  9281   003390  EFD0  F019         	goto	l3586
  9282   003394                     u2410:
  9283   003394  C032  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  9284   003398  C033  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  9285   00339C  6ADE               	clrf	postinc2,c
  9286   00339E  6ADD               	clrf	postdec2,c
  9287   0033A0                     l3586:
  9288                           
  9289                           ;color.c: 296:     HSV->V = cmax;
  9290   0033A0  EE20 F004          	lfsr	2,4
  9291   0033A4  5032               	movf	rgb_2_hsv@HSV^0,w,c
  9292   0033A6  26D9               	addwf	fsr2l,f,c
  9293   0033A8  5033               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  9294   0033AA  22DA               	addwfc	fsr2h,f,c
  9295   0033AC  C06C  FFDE         	movff	rgb_2_hsv@cmax,postinc2
  9296   0033B0  C06D  FFDD         	movff	rgb_2_hsv@cmax+1,postdec2
  9297   0033B4  0012               	return		;funcret
  9298   0033B6                     __end_of_rgb_2_hsv:
  9299                           	callstack 0
  9300                           
  9301 ;; *************** function _min *****************
  9302 ;; Defined at:
  9303 ;;		line 260 in file "color.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;  a               2   15[COMRAM] unsigned int 
  9306 ;;  b               2   17[COMRAM] unsigned int 
  9307 ;; Auto vars:     Size  Location     Type
  9308 ;;		None
  9309 ;; Return value:  Size  Location     Type
  9310 ;;                  2   15[COMRAM] unsigned int 
  9311 ;; Registers used:
  9312 ;;		wreg, status,2, status,0
  9313 ;; Tracked objects:
  9314 ;;		On entry : 0/0
  9315 ;;		On exit  : 0/0
  9316 ;;		Unchanged: 0/0
  9317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9318 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9321 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9322 ;;Total ram usage:        4 bytes
  9323 ;; Hardware stack levels used: 1
  9324 ;; Hardware stack levels required when called: 6
  9325 ;; This function calls:
  9326 ;;		Nothing
  9327 ;; This function is called by:
  9328 ;;		_color_detect
  9329 ;;		_rgb_2_hsv
  9330 ;; This function uses a non-reentrant model
  9331 ;;
  9332                           
  9333                           	psect	text22
  9334   00537E                     __ptext22:
  9335                           	callstack 0
  9336   00537E                     _min:
  9337                           	callstack 23
  9338   00537E                     
  9339                           ;color.c: 261:     if (a < b){return a;}
  9340   00537E  5012               	movf	min@b^0,w,c
  9341   005380  5C10               	subwf	min@a^0,w,c
  9342   005382  5013               	movf	(min@b+1)^0,w,c
  9343   005384  5811               	subwfb	(min@a+1)^0,w,c
  9344   005386  B0D8               	btfsc	status,0,c
  9345   005388  EFC8  F029         	goto	u2021
  9346   00538C  EFCA  F029         	goto	u2020
  9347   005390                     u2021:
  9348   005390  EFD0  F029         	goto	l223
  9349   005394                     u2020:
  9350   005394  C010  F010         	movff	min@a,?_min
  9351   005398  C011  F011         	movff	min@a+1,?_min+1
  9352   00539C  EFD4  F029         	goto	l224
  9353   0053A0                     l223:
  9354   0053A0  C012  F010         	movff	min@b,?_min
  9355   0053A4  C013  F011         	movff	min@b+1,?_min+1
  9356   0053A8                     l224:
  9357   0053A8  0012               	return		;funcret
  9358   0053AA                     __end_of_min:
  9359                           	callstack 0
  9360                           
  9361 ;; *************** function _max *****************
  9362 ;; Defined at:
  9363 ;;		line 255 in file "color.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;  a               2   15[COMRAM] unsigned int 
  9366 ;;  b               2   17[COMRAM] unsigned int 
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;		None
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  2   15[COMRAM] unsigned int 
  9371 ;; Registers used:
  9372 ;;		wreg, status,2, status,0
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9381 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9382 ;;Total ram usage:        4 bytes
  9383 ;; Hardware stack levels used: 1
  9384 ;; Hardware stack levels required when called: 6
  9385 ;; This function calls:
  9386 ;;		Nothing
  9387 ;; This function is called by:
  9388 ;;		_color_detect
  9389 ;;		_rgb_2_hsv
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           	psect	text23
  9394   0053AA                     __ptext23:
  9395                           	callstack 0
  9396   0053AA                     _max:
  9397                           	callstack 23
  9398   0053AA                     
  9399                           ;color.c: 256:     if (a > b){return a;}
  9400   0053AA  5010               	movf	max@a^0,w,c
  9401   0053AC  5C12               	subwf	max@b^0,w,c
  9402   0053AE  5011               	movf	(max@a+1)^0,w,c
  9403   0053B0  5813               	subwfb	(max@b+1)^0,w,c
  9404   0053B2  B0D8               	btfsc	status,0,c
  9405   0053B4  EFDE  F029         	goto	u2031
  9406   0053B8  EFE0  F029         	goto	u2030
  9407   0053BC                     u2031:
  9408   0053BC  EFE6  F029         	goto	l218
  9409   0053C0                     u2030:
  9410   0053C0  C010  F010         	movff	max@a,?_max
  9411   0053C4  C011  F011         	movff	max@a+1,?_max+1
  9412   0053C8  EFEA  F029         	goto	l219
  9413   0053CC                     l218:
  9414   0053CC  C012  F010         	movff	max@b,?_max
  9415   0053D0  C013  F011         	movff	max@b+1,?_max+1
  9416   0053D4                     l219:
  9417   0053D4  0012               	return		;funcret
  9418   0053D6                     __end_of_max:
  9419                           	callstack 0
  9420                           
  9421 ;; *************** function ___lmul *****************
  9422 ;; Defined at:
  9423 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  9424 ;; Parameters:    Size  Location     Type
  9425 ;;  multiplier      4   15[COMRAM] unsigned long 
  9426 ;;  multiplicand    4   19[COMRAM] unsigned long 
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;  product         4   23[COMRAM] unsigned long 
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  4   15[COMRAM] unsigned long 
  9431 ;; Registers used:
  9432 ;;		wreg, status,2, status,0
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9438 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9439 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9441 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9442 ;;Total ram usage:       12 bytes
  9443 ;; Hardware stack levels used: 1
  9444 ;; Hardware stack levels required when called: 6
  9445 ;; This function calls:
  9446 ;;		Nothing
  9447 ;; This function is called by:
  9448 ;;		_rgb_2_hsv
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text24
  9453   0051C0                     __ptext24:
  9454                           	callstack 0
  9455   0051C0                     ___lmul:
  9456                           	callstack 23
  9457   0051C0  0E00               	movlw	0
  9458   0051C2  6E18               	movwf	___lmul@product^0,c
  9459   0051C4  0E00               	movlw	0
  9460   0051C6  6E19               	movwf	(___lmul@product+1)^0,c
  9461   0051C8  0E00               	movlw	0
  9462   0051CA  6E1A               	movwf	(___lmul@product+2)^0,c
  9463   0051CC  0E00               	movlw	0
  9464   0051CE  6E1B               	movwf	(___lmul@product+3)^0,c
  9465   0051D0                     l3440:
  9466   0051D0  A010               	btfss	___lmul@multiplier^0,0,c
  9467   0051D2  EFED  F028         	goto	u2241
  9468   0051D6  EFEF  F028         	goto	u2240
  9469   0051DA                     u2241:
  9470   0051DA  EFF7  F028         	goto	l3444
  9471   0051DE                     u2240:
  9472   0051DE  5014               	movf	___lmul@multiplicand^0,w,c
  9473   0051E0  2618               	addwf	___lmul@product^0,f,c
  9474   0051E2  5015               	movf	(___lmul@multiplicand+1)^0,w,c
  9475   0051E4  2219               	addwfc	(___lmul@product+1)^0,f,c
  9476   0051E6  5016               	movf	(___lmul@multiplicand+2)^0,w,c
  9477   0051E8  221A               	addwfc	(___lmul@product+2)^0,f,c
  9478   0051EA  5017               	movf	(___lmul@multiplicand+3)^0,w,c
  9479   0051EC  221B               	addwfc	(___lmul@product+3)^0,f,c
  9480   0051EE                     l3444:
  9481   0051EE  90D8               	bcf	status,0,c
  9482   0051F0  3614               	rlcf	___lmul@multiplicand^0,f,c
  9483   0051F2  3615               	rlcf	(___lmul@multiplicand+1)^0,f,c
  9484   0051F4  3616               	rlcf	(___lmul@multiplicand+2)^0,f,c
  9485   0051F6  3617               	rlcf	(___lmul@multiplicand+3)^0,f,c
  9486   0051F8  90D8               	bcf	status,0,c
  9487   0051FA  3213               	rrcf	(___lmul@multiplier+3)^0,f,c
  9488   0051FC  3212               	rrcf	(___lmul@multiplier+2)^0,f,c
  9489   0051FE  3211               	rrcf	(___lmul@multiplier+1)^0,f,c
  9490   005200  3210               	rrcf	___lmul@multiplier^0,f,c
  9491   005202  5010               	movf	___lmul@multiplier^0,w,c
  9492   005204  1011               	iorwf	(___lmul@multiplier+1)^0,w,c
  9493   005206  1012               	iorwf	(___lmul@multiplier+2)^0,w,c
  9494   005208  1013               	iorwf	(___lmul@multiplier+3)^0,w,c
  9495   00520A  A4D8               	btfss	status,2,c
  9496   00520C  EF0A  F029         	goto	u2251
  9497   005210  EF0C  F029         	goto	u2250
  9498   005214                     u2251:
  9499   005214  EFE8  F028         	goto	l3440
  9500   005218                     u2250:
  9501   005218  C018  F010         	movff	___lmul@product,?___lmul
  9502   00521C  C019  F011         	movff	___lmul@product+1,?___lmul+1
  9503   005220  C01A  F012         	movff	___lmul@product+2,?___lmul+2
  9504   005224  C01B  F013         	movff	___lmul@product+3,?___lmul+3
  9505   005228  0012               	return		;funcret
  9506   00522A                     __end_of___lmul:
  9507                           	callstack 0
  9508                           
  9509 ;; *************** function ___lldiv *****************
  9510 ;; Defined at:
  9511 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;  dividend        4   27[COMRAM] unsigned long 
  9514 ;;  divisor         4   31[COMRAM] unsigned long 
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;  quotient        4   35[COMRAM] unsigned long 
  9517 ;;  counter         1   39[COMRAM] unsigned char 
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  4   27[COMRAM] unsigned long 
  9520 ;; Registers used:
  9521 ;;		wreg, status,2, status,0
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 0/0
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9527 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9528 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9530 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9531 ;;Total ram usage:       13 bytes
  9532 ;; Hardware stack levels used: 1
  9533 ;; Hardware stack levels required when called: 6
  9534 ;; This function calls:
  9535 ;;		Nothing
  9536 ;; This function is called by:
  9537 ;;		_rgb_2_hsv
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text25
  9542   004FA4                     __ptext25:
  9543                           	callstack 0
  9544   004FA4                     ___lldiv:
  9545                           	callstack 23
  9546   004FA4  0E00               	movlw	0
  9547   004FA6  6E24               	movwf	___lldiv@quotient^0,c
  9548   004FA8  0E00               	movlw	0
  9549   004FAA  6E25               	movwf	(___lldiv@quotient+1)^0,c
  9550   004FAC  0E00               	movlw	0
  9551   004FAE  6E26               	movwf	(___lldiv@quotient+2)^0,c
  9552   004FB0  0E00               	movlw	0
  9553   004FB2  6E27               	movwf	(___lldiv@quotient+3)^0,c
  9554   004FB4  5020               	movf	___lldiv@divisor^0,w,c
  9555   004FB6  1021               	iorwf	(___lldiv@divisor+1)^0,w,c
  9556   004FB8  1022               	iorwf	(___lldiv@divisor+2)^0,w,c
  9557   004FBA  1023               	iorwf	(___lldiv@divisor+3)^0,w,c
  9558   004FBC  B4D8               	btfsc	status,2,c
  9559   004FBE  EFE3  F027         	goto	u2261
  9560   004FC2  EFE5  F027         	goto	u2260
  9561   004FC6                     u2261:
  9562   004FC6  EF1B  F028         	goto	l816
  9563   004FCA                     u2260:
  9564   004FCA  0E01               	movlw	1
  9565   004FCC  6E28               	movwf	___lldiv@counter^0,c
  9566   004FCE  EFEF  F027         	goto	l3456
  9567   004FD2                     l3454:
  9568   004FD2  90D8               	bcf	status,0,c
  9569   004FD4  3620               	rlcf	___lldiv@divisor^0,f,c
  9570   004FD6  3621               	rlcf	(___lldiv@divisor+1)^0,f,c
  9571   004FD8  3622               	rlcf	(___lldiv@divisor+2)^0,f,c
  9572   004FDA  3623               	rlcf	(___lldiv@divisor+3)^0,f,c
  9573   004FDC  2A28               	incf	___lldiv@counter^0,f,c
  9574   004FDE                     l3456:
  9575   004FDE  AE23               	btfss	(___lldiv@divisor+3)^0,7,c
  9576   004FE0  EFF4  F027         	goto	u2271
  9577   004FE4  EFF6  F027         	goto	u2270
  9578   004FE8                     u2271:
  9579   004FE8  EFE9  F027         	goto	l3454
  9580   004FEC                     u2270:
  9581   004FEC                     l3458:
  9582   004FEC  90D8               	bcf	status,0,c
  9583   004FEE  3624               	rlcf	___lldiv@quotient^0,f,c
  9584   004FF0  3625               	rlcf	(___lldiv@quotient+1)^0,f,c
  9585   004FF2  3626               	rlcf	(___lldiv@quotient+2)^0,f,c
  9586   004FF4  3627               	rlcf	(___lldiv@quotient+3)^0,f,c
  9587   004FF6  5020               	movf	___lldiv@divisor^0,w,c
  9588   004FF8  5C1C               	subwf	___lldiv@dividend^0,w,c
  9589   004FFA  5021               	movf	(___lldiv@divisor+1)^0,w,c
  9590   004FFC  581D               	subwfb	(___lldiv@dividend+1)^0,w,c
  9591   004FFE  5022               	movf	(___lldiv@divisor+2)^0,w,c
  9592   005000  581E               	subwfb	(___lldiv@dividend+2)^0,w,c
  9593   005002  5023               	movf	(___lldiv@divisor+3)^0,w,c
  9594   005004  581F               	subwfb	(___lldiv@dividend+3)^0,w,c
  9595   005006  A0D8               	btfss	status,0,c
  9596   005008  EF08  F028         	goto	u2281
  9597   00500C  EF0A  F028         	goto	u2280
  9598   005010                     u2281:
  9599   005010  EF13  F028         	goto	l3466
  9600   005014                     u2280:
  9601   005014  5020               	movf	___lldiv@divisor^0,w,c
  9602   005016  5E1C               	subwf	___lldiv@dividend^0,f,c
  9603   005018  5021               	movf	(___lldiv@divisor+1)^0,w,c
  9604   00501A  5A1D               	subwfb	(___lldiv@dividend+1)^0,f,c
  9605   00501C  5022               	movf	(___lldiv@divisor+2)^0,w,c
  9606   00501E  5A1E               	subwfb	(___lldiv@dividend+2)^0,f,c
  9607   005020  5023               	movf	(___lldiv@divisor+3)^0,w,c
  9608   005022  5A1F               	subwfb	(___lldiv@dividend+3)^0,f,c
  9609   005024  8024               	bsf	___lldiv@quotient^0,0,c
  9610   005026                     l3466:
  9611   005026  90D8               	bcf	status,0,c
  9612   005028  3223               	rrcf	(___lldiv@divisor+3)^0,f,c
  9613   00502A  3222               	rrcf	(___lldiv@divisor+2)^0,f,c
  9614   00502C  3221               	rrcf	(___lldiv@divisor+1)^0,f,c
  9615   00502E  3220               	rrcf	___lldiv@divisor^0,f,c
  9616   005030  2E28               	decfsz	___lldiv@counter^0,f,c
  9617   005032  EFF6  F027         	goto	l3458
  9618   005036                     l816:
  9619   005036  C024  F01C         	movff	___lldiv@quotient,?___lldiv
  9620   00503A  C025  F01D         	movff	___lldiv@quotient+1,?___lldiv+1
  9621   00503E  C026  F01E         	movff	___lldiv@quotient+2,?___lldiv+2
  9622   005042  C027  F01F         	movff	___lldiv@quotient+3,?___lldiv+3
  9623   005046  0012               	return		;funcret
  9624   005048                     __end_of___lldiv:
  9625                           	callstack 0
  9626                           
  9627 ;; *************** function ___aldiv *****************
  9628 ;; Defined at:
  9629 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;  dividend        4   27[COMRAM] long 
  9632 ;;  divisor         4   31[COMRAM] long 
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;  quotient        4   37[COMRAM] long 
  9635 ;;  sign            1   36[COMRAM] unsigned char 
  9636 ;;  counter         1   35[COMRAM] unsigned char 
  9637 ;; Return value:  Size  Location     Type
  9638 ;;                  4   27[COMRAM] long 
  9639 ;; Registers used:
  9640 ;;		wreg, status,2, status,0
  9641 ;; Tracked objects:
  9642 ;;		On entry : 0/0
  9643 ;;		On exit  : 0/0
  9644 ;;		Unchanged: 0/0
  9645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9646 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9647 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9649 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9650 ;;Total ram usage:       14 bytes
  9651 ;; Hardware stack levels used: 1
  9652 ;; Hardware stack levels required when called: 6
  9653 ;; This function calls:
  9654 ;;		Nothing
  9655 ;; This function is called by:
  9656 ;;		_rgb_2_hsv
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           	psect	text26
  9661   004A9A                     __ptext26:
  9662                           	callstack 0
  9663   004A9A                     ___aldiv:
  9664                           	callstack 23
  9665   004A9A  0E00               	movlw	0
  9666   004A9C  6E25               	movwf	___aldiv@sign^0,c
  9667   004A9E  BE23               	btfsc	(___aldiv@divisor+3)^0,7,c
  9668   004AA0  EF56  F025         	goto	u2290
  9669   004AA4  EF54  F025         	goto	u2291
  9670   004AA8                     u2291:
  9671   004AA8  EF60  F025         	goto	l3478
  9672   004AAC                     u2290:
  9673   004AAC  1E23               	comf	(___aldiv@divisor+3)^0,f,c
  9674   004AAE  1E22               	comf	(___aldiv@divisor+2)^0,f,c
  9675   004AB0  1E21               	comf	(___aldiv@divisor+1)^0,f,c
  9676   004AB2  6C20               	negf	___aldiv@divisor^0,c
  9677   004AB4  0E00               	movlw	0
  9678   004AB6  2221               	addwfc	(___aldiv@divisor+1)^0,f,c
  9679   004AB8  2222               	addwfc	(___aldiv@divisor+2)^0,f,c
  9680   004ABA  2223               	addwfc	(___aldiv@divisor+3)^0,f,c
  9681   004ABC  0E01               	movlw	1
  9682   004ABE  6E25               	movwf	___aldiv@sign^0,c
  9683   004AC0                     l3478:
  9684   004AC0  BE1F               	btfsc	(___aldiv@dividend+3)^0,7,c
  9685   004AC2  EF67  F025         	goto	u2300
  9686   004AC6  EF65  F025         	goto	u2301
  9687   004ACA                     u2301:
  9688   004ACA  EF71  F025         	goto	l3484
  9689   004ACE                     u2300:
  9690   004ACE  1E1F               	comf	(___aldiv@dividend+3)^0,f,c
  9691   004AD0  1E1E               	comf	(___aldiv@dividend+2)^0,f,c
  9692   004AD2  1E1D               	comf	(___aldiv@dividend+1)^0,f,c
  9693   004AD4  6C1C               	negf	___aldiv@dividend^0,c
  9694   004AD6  0E00               	movlw	0
  9695   004AD8  221D               	addwfc	(___aldiv@dividend+1)^0,f,c
  9696   004ADA  221E               	addwfc	(___aldiv@dividend+2)^0,f,c
  9697   004ADC  221F               	addwfc	(___aldiv@dividend+3)^0,f,c
  9698   004ADE  0E01               	movlw	1
  9699   004AE0  1A25               	xorwf	___aldiv@sign^0,f,c
  9700   004AE2                     l3484:
  9701   004AE2  0E00               	movlw	0
  9702   004AE4  6E26               	movwf	___aldiv@quotient^0,c
  9703   004AE6  0E00               	movlw	0
  9704   004AE8  6E27               	movwf	(___aldiv@quotient+1)^0,c
  9705   004AEA  0E00               	movlw	0
  9706   004AEC  6E28               	movwf	(___aldiv@quotient+2)^0,c
  9707   004AEE  0E00               	movlw	0
  9708   004AF0  6E29               	movwf	(___aldiv@quotient+3)^0,c
  9709   004AF2  5020               	movf	___aldiv@divisor^0,w,c
  9710   004AF4  1021               	iorwf	(___aldiv@divisor+1)^0,w,c
  9711   004AF6  1022               	iorwf	(___aldiv@divisor+2)^0,w,c
  9712   004AF8  1023               	iorwf	(___aldiv@divisor+3)^0,w,c
  9713   004AFA  B4D8               	btfsc	status,2,c
  9714   004AFC  EF82  F025         	goto	u2311
  9715   004B00  EF84  F025         	goto	u2310
  9716   004B04                     u2311:
  9717   004B04  EFBA  F025         	goto	l3506
  9718   004B08                     u2310:
  9719   004B08  0E01               	movlw	1
  9720   004B0A  6E24               	movwf	___aldiv@counter^0,c
  9721   004B0C  EF8E  F025         	goto	l3492
  9722   004B10                     l3490:
  9723   004B10  90D8               	bcf	status,0,c
  9724   004B12  3620               	rlcf	___aldiv@divisor^0,f,c
  9725   004B14  3621               	rlcf	(___aldiv@divisor+1)^0,f,c
  9726   004B16  3622               	rlcf	(___aldiv@divisor+2)^0,f,c
  9727   004B18  3623               	rlcf	(___aldiv@divisor+3)^0,f,c
  9728   004B1A  2A24               	incf	___aldiv@counter^0,f,c
  9729   004B1C                     l3492:
  9730   004B1C  AE23               	btfss	(___aldiv@divisor+3)^0,7,c
  9731   004B1E  EF93  F025         	goto	u2321
  9732   004B22  EF95  F025         	goto	u2320
  9733   004B26                     u2321:
  9734   004B26  EF88  F025         	goto	l3490
  9735   004B2A                     u2320:
  9736   004B2A                     l3494:
  9737   004B2A  90D8               	bcf	status,0,c
  9738   004B2C  3626               	rlcf	___aldiv@quotient^0,f,c
  9739   004B2E  3627               	rlcf	(___aldiv@quotient+1)^0,f,c
  9740   004B30  3628               	rlcf	(___aldiv@quotient+2)^0,f,c
  9741   004B32  3629               	rlcf	(___aldiv@quotient+3)^0,f,c
  9742   004B34  5020               	movf	___aldiv@divisor^0,w,c
  9743   004B36  5C1C               	subwf	___aldiv@dividend^0,w,c
  9744   004B38  5021               	movf	(___aldiv@divisor+1)^0,w,c
  9745   004B3A  581D               	subwfb	(___aldiv@dividend+1)^0,w,c
  9746   004B3C  5022               	movf	(___aldiv@divisor+2)^0,w,c
  9747   004B3E  581E               	subwfb	(___aldiv@dividend+2)^0,w,c
  9748   004B40  5023               	movf	(___aldiv@divisor+3)^0,w,c
  9749   004B42  581F               	subwfb	(___aldiv@dividend+3)^0,w,c
  9750   004B44  A0D8               	btfss	status,0,c
  9751   004B46  EFA7  F025         	goto	u2331
  9752   004B4A  EFA9  F025         	goto	u2330
  9753   004B4E                     u2331:
  9754   004B4E  EFB2  F025         	goto	l3502
  9755   004B52                     u2330:
  9756   004B52  5020               	movf	___aldiv@divisor^0,w,c
  9757   004B54  5E1C               	subwf	___aldiv@dividend^0,f,c
  9758   004B56  5021               	movf	(___aldiv@divisor+1)^0,w,c
  9759   004B58  5A1D               	subwfb	(___aldiv@dividend+1)^0,f,c
  9760   004B5A  5022               	movf	(___aldiv@divisor+2)^0,w,c
  9761   004B5C  5A1E               	subwfb	(___aldiv@dividend+2)^0,f,c
  9762   004B5E  5023               	movf	(___aldiv@divisor+3)^0,w,c
  9763   004B60  5A1F               	subwfb	(___aldiv@dividend+3)^0,f,c
  9764   004B62  8026               	bsf	___aldiv@quotient^0,0,c
  9765   004B64                     l3502:
  9766   004B64  90D8               	bcf	status,0,c
  9767   004B66  3223               	rrcf	(___aldiv@divisor+3)^0,f,c
  9768   004B68  3222               	rrcf	(___aldiv@divisor+2)^0,f,c
  9769   004B6A  3221               	rrcf	(___aldiv@divisor+1)^0,f,c
  9770   004B6C  3220               	rrcf	___aldiv@divisor^0,f,c
  9771   004B6E  2E24               	decfsz	___aldiv@counter^0,f,c
  9772   004B70  EF95  F025         	goto	l3494
  9773   004B74                     l3506:
  9774   004B74  5025               	movf	___aldiv@sign^0,w,c
  9775   004B76  B4D8               	btfsc	status,2,c
  9776   004B78  EFC0  F025         	goto	u2341
  9777   004B7C  EFC2  F025         	goto	u2340
  9778   004B80                     u2341:
  9779   004B80  EFCA  F025         	goto	l3510
  9780   004B84                     u2340:
  9781   004B84  1E29               	comf	(___aldiv@quotient+3)^0,f,c
  9782   004B86  1E28               	comf	(___aldiv@quotient+2)^0,f,c
  9783   004B88  1E27               	comf	(___aldiv@quotient+1)^0,f,c
  9784   004B8A  6C26               	negf	___aldiv@quotient^0,c
  9785   004B8C  0E00               	movlw	0
  9786   004B8E  2227               	addwfc	(___aldiv@quotient+1)^0,f,c
  9787   004B90  2228               	addwfc	(___aldiv@quotient+2)^0,f,c
  9788   004B92  2229               	addwfc	(___aldiv@quotient+3)^0,f,c
  9789   004B94                     l3510:
  9790   004B94  C026  F01C         	movff	___aldiv@quotient,?___aldiv
  9791   004B98  C027  F01D         	movff	___aldiv@quotient+1,?___aldiv+1
  9792   004B9C  C028  F01E         	movff	___aldiv@quotient+2,?___aldiv+2
  9793   004BA0  C029  F01F         	movff	___aldiv@quotient+3,?___aldiv+3
  9794   004BA4  0012               	return		;funcret
  9795   004BA6                     __end_of___aldiv:
  9796                           	callstack 0
  9797                           
  9798 ;; *************** function _color_read *****************
  9799 ;; Defined at:
  9800 ;;		line 77 in file "color.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  RGBC            2   19[COMRAM] PTR struct RGBC_val
  9803 ;;		 -> main@RGBC(8), 
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;		None
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  1    wreg      void 
  9808 ;; Registers used:
  9809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9817 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9818 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9819 ;;Total ram usage:        9 bytes
  9820 ;; Hardware stack levels used: 1
  9821 ;; Hardware stack levels required when called: 8
  9822 ;; This function calls:
  9823 ;;		_I2C_2_Master_Read
  9824 ;;		_I2C_2_Master_RepStart
  9825 ;;		_I2C_2_Master_Start
  9826 ;;		_I2C_2_Master_Stop
  9827 ;;		_I2C_2_Master_Write
  9828 ;; This function is called by:
  9829 ;;		_main
  9830 ;;		_color_calibration
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           	psect	text27
  9835   0041AE                     __ptext27:
  9836                           	callstack 0
  9837   0041AE                     _color_read:
  9838                           	callstack 22
  9839   0041AE                     
  9840                           ;color.c: 77: void color_read(RGBC_val *RGBC);color.c: 78: {;color.c: 79:  I2C_2_Master_
      +                          Start();
  9841   0041AE  ECE9  F02A         	call	_I2C_2_Master_Start	;wreg free
  9842                           
  9843                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  9844   0041B2  0E52               	movlw	82
  9845   0041B4  ECD3  F02A         	call	_I2C_2_Master_Write
  9846                           
  9847                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x16);
  9848   0041B8  0EB6               	movlw	182
  9849   0041BA  ECD3  F02A         	call	_I2C_2_Master_Write
  9850                           
  9851                           ;color.c: 82:  I2C_2_Master_RepStart();
  9852   0041BE  ECEE  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  9853                           
  9854                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  9855   0041C2  0E53               	movlw	83
  9856   0041C4  ECD3  F02A         	call	_I2C_2_Master_Write
  9857   0041C8                     
  9858                           ;color.c: 84:  RGBC->R=I2C_2_Master_Read(1);
  9859   0041C8  0E01               	movlw	1
  9860   0041CA  EC67  F029         	call	_I2C_2_Master_Read
  9861   0041CE  6E16               	movwf	??_color_read^0,c
  9862   0041D0  6A17               	clrf	(??_color_read+1)^0,c
  9863   0041D2  C014  FFD9         	movff	color_read@RGBC,fsr2l
  9864   0041D6  C015  FFDA         	movff	color_read@RGBC+1,fsr2h
  9865   0041DA  C016  FFDE         	movff	??_color_read,postinc2
  9866   0041DE  C017  FFDD         	movff	??_color_read+1,postdec2
  9867   0041E2                     
  9868                           ;color.c: 85:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  9869   0041E2  C014  FFD9         	movff	color_read@RGBC,fsr2l
  9870   0041E6  C015  FFDA         	movff	color_read@RGBC+1,fsr2h
  9871   0041EA  CFDE F016          	movff	postinc2,??_color_read
  9872   0041EE  CFDD F017          	movff	postdec2,??_color_read+1
  9873   0041F2  0E00               	movlw	0
  9874   0041F4  EC67  F029         	call	_I2C_2_Master_Read
  9875   0041F8  6E18               	movwf	(??_color_read+2)^0,c
  9876   0041FA  5018               	movf	(??_color_read+2)^0,w,c
  9877   0041FC  6E1A               	movwf	(??_color_read+4)^0,c
  9878   0041FE  6A19               	clrf	(??_color_read+3)^0,c
  9879   004200  5016               	movf	??_color_read^0,w,c
  9880   004202  1019               	iorwf	(??_color_read+3)^0,w,c
  9881   004204  6E1B               	movwf	(??_color_read+5)^0,c
  9882   004206  5017               	movf	(??_color_read+1)^0,w,c
  9883   004208  101A               	iorwf	(??_color_read+4)^0,w,c
  9884   00420A  6E1C               	movwf	(??_color_read+6)^0,c
  9885   00420C  C014  FFD9         	movff	color_read@RGBC,fsr2l
  9886   004210  C015  FFDA         	movff	color_read@RGBC+1,fsr2h
  9887   004214  C01B  FFDE         	movff	??_color_read+5,postinc2
  9888   004218  C01C  FFDD         	movff	??_color_read+6,postdec2
  9889                           
  9890                           ;color.c: 86:  I2C_2_Master_Stop();
  9891   00421C  ECE4  F02A         	call	_I2C_2_Master_Stop	;wreg free
  9892                           
  9893                           ;color.c: 88:     I2C_2_Master_Start();
  9894   004220  ECE9  F02A         	call	_I2C_2_Master_Start	;wreg free
  9895                           
  9896                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x00);
  9897   004224  0E52               	movlw	82
  9898   004226  ECD3  F02A         	call	_I2C_2_Master_Write
  9899                           
  9900                           ;color.c: 90:  I2C_2_Master_Write(0xA0 | 0x18);
  9901   00422A  0EB8               	movlw	184
  9902   00422C  ECD3  F02A         	call	_I2C_2_Master_Write
  9903                           
  9904                           ;color.c: 91:  I2C_2_Master_RepStart();
  9905   004230  ECEE  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  9906                           
  9907                           ;color.c: 92:  I2C_2_Master_Write(0x52 | 0x01);
  9908   004234  0E53               	movlw	83
  9909   004236  ECD3  F02A         	call	_I2C_2_Master_Write
  9910   00423A                     
  9911                           ;color.c: 93:  RGBC->G=I2C_2_Master_Read(1);
  9912   00423A  0E01               	movlw	1
  9913   00423C  EC67  F029         	call	_I2C_2_Master_Read
  9914   004240  6E16               	movwf	??_color_read^0,c
  9915   004242  6A17               	clrf	(??_color_read+1)^0,c
  9916   004244  EE20 F002          	lfsr	2,2
  9917   004248  5014               	movf	color_read@RGBC^0,w,c
  9918   00424A  26D9               	addwf	fsr2l,f,c
  9919   00424C  5015               	movf	(color_read@RGBC+1)^0,w,c
  9920   00424E  22DA               	addwfc	fsr2h,f,c
  9921   004250  C016  FFDE         	movff	??_color_read,postinc2
  9922   004254  C017  FFDD         	movff	??_color_read+1,postdec2
  9923   004258                     
  9924                           ;color.c: 94:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  9925   004258  EE20 F002          	lfsr	2,2
  9926   00425C  5014               	movf	color_read@RGBC^0,w,c
  9927   00425E  26D9               	addwf	fsr2l,f,c
  9928   004260  5015               	movf	(color_read@RGBC+1)^0,w,c
  9929   004262  22DA               	addwfc	fsr2h,f,c
  9930   004264  CFDE F016          	movff	postinc2,??_color_read
  9931   004268  CFDD F017          	movff	postdec2,??_color_read+1
  9932   00426C  0E00               	movlw	0
  9933   00426E  EC67  F029         	call	_I2C_2_Master_Read
  9934   004272  6E18               	movwf	(??_color_read+2)^0,c
  9935   004274  5018               	movf	(??_color_read+2)^0,w,c
  9936   004276  6E1A               	movwf	(??_color_read+4)^0,c
  9937   004278  6A19               	clrf	(??_color_read+3)^0,c
  9938   00427A  5016               	movf	??_color_read^0,w,c
  9939   00427C  1019               	iorwf	(??_color_read+3)^0,w,c
  9940   00427E  6E1B               	movwf	(??_color_read+5)^0,c
  9941   004280  5017               	movf	(??_color_read+1)^0,w,c
  9942   004282  101A               	iorwf	(??_color_read+4)^0,w,c
  9943   004284  6E1C               	movwf	(??_color_read+6)^0,c
  9944   004286  EE20 F002          	lfsr	2,2
  9945   00428A  5014               	movf	color_read@RGBC^0,w,c
  9946   00428C  26D9               	addwf	fsr2l,f,c
  9947   00428E  5015               	movf	(color_read@RGBC+1)^0,w,c
  9948   004290  22DA               	addwfc	fsr2h,f,c
  9949   004292  C01B  FFDE         	movff	??_color_read+5,postinc2
  9950   004296  C01C  FFDD         	movff	??_color_read+6,postdec2
  9951                           
  9952                           ;color.c: 95:  I2C_2_Master_Stop();
  9953   00429A  ECE4  F02A         	call	_I2C_2_Master_Stop	;wreg free
  9954                           
  9955                           ;color.c: 97:     I2C_2_Master_Start();
  9956   00429E  ECE9  F02A         	call	_I2C_2_Master_Start	;wreg free
  9957                           
  9958                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  9959   0042A2  0E52               	movlw	82
  9960   0042A4  ECD3  F02A         	call	_I2C_2_Master_Write
  9961                           
  9962                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x1A);
  9963   0042A8  0EBA               	movlw	186
  9964   0042AA  ECD3  F02A         	call	_I2C_2_Master_Write
  9965                           
  9966                           ;color.c: 100:  I2C_2_Master_RepStart();
  9967   0042AE  ECEE  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  9968                           
  9969                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  9970   0042B2  0E53               	movlw	83
  9971   0042B4  ECD3  F02A         	call	_I2C_2_Master_Write
  9972   0042B8                     
  9973                           ;color.c: 102:  RGBC->B=I2C_2_Master_Read(1);
  9974   0042B8  0E01               	movlw	1
  9975   0042BA  EC67  F029         	call	_I2C_2_Master_Read
  9976   0042BE  6E16               	movwf	??_color_read^0,c
  9977   0042C0  6A17               	clrf	(??_color_read+1)^0,c
  9978   0042C2  EE20 F004          	lfsr	2,4
  9979   0042C6  5014               	movf	color_read@RGBC^0,w,c
  9980   0042C8  26D9               	addwf	fsr2l,f,c
  9981   0042CA  5015               	movf	(color_read@RGBC+1)^0,w,c
  9982   0042CC  22DA               	addwfc	fsr2h,f,c
  9983   0042CE  C016  FFDE         	movff	??_color_read,postinc2
  9984   0042D2  C017  FFDD         	movff	??_color_read+1,postdec2
  9985   0042D6                     
  9986                           ;color.c: 103:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  9987   0042D6  EE20 F004          	lfsr	2,4
  9988   0042DA  5014               	movf	color_read@RGBC^0,w,c
  9989   0042DC  26D9               	addwf	fsr2l,f,c
  9990   0042DE  5015               	movf	(color_read@RGBC+1)^0,w,c
  9991   0042E0  22DA               	addwfc	fsr2h,f,c
  9992   0042E2  CFDE F016          	movff	postinc2,??_color_read
  9993   0042E6  CFDD F017          	movff	postdec2,??_color_read+1
  9994   0042EA  0E00               	movlw	0
  9995   0042EC  EC67  F029         	call	_I2C_2_Master_Read
  9996   0042F0  6E18               	movwf	(??_color_read+2)^0,c
  9997   0042F2  5018               	movf	(??_color_read+2)^0,w,c
  9998   0042F4  6E1A               	movwf	(??_color_read+4)^0,c
  9999   0042F6  6A19               	clrf	(??_color_read+3)^0,c
 10000   0042F8  5016               	movf	??_color_read^0,w,c
 10001   0042FA  1019               	iorwf	(??_color_read+3)^0,w,c
 10002   0042FC  6E1B               	movwf	(??_color_read+5)^0,c
 10003   0042FE  5017               	movf	(??_color_read+1)^0,w,c
 10004   004300  101A               	iorwf	(??_color_read+4)^0,w,c
 10005   004302  6E1C               	movwf	(??_color_read+6)^0,c
 10006   004304  EE20 F004          	lfsr	2,4
 10007   004308  5014               	movf	color_read@RGBC^0,w,c
 10008   00430A  26D9               	addwf	fsr2l,f,c
 10009   00430C  5015               	movf	(color_read@RGBC+1)^0,w,c
 10010   00430E  22DA               	addwfc	fsr2h,f,c
 10011   004310  C01B  FFDE         	movff	??_color_read+5,postinc2
 10012   004314  C01C  FFDD         	movff	??_color_read+6,postdec2
 10013                           
 10014                           ;color.c: 104:  I2C_2_Master_Stop();
 10015   004318  ECE4  F02A         	call	_I2C_2_Master_Stop	;wreg free
 10016                           
 10017                           ;color.c: 106:     I2C_2_Master_Start();
 10018   00431C  ECE9  F02A         	call	_I2C_2_Master_Start	;wreg free
 10019                           
 10020                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x00);
 10021   004320  0E52               	movlw	82
 10022   004322  ECD3  F02A         	call	_I2C_2_Master_Write
 10023                           
 10024                           ;color.c: 108:  I2C_2_Master_Write(0xA0 | 0x14);
 10025   004326  0EB4               	movlw	180
 10026   004328  ECD3  F02A         	call	_I2C_2_Master_Write
 10027                           
 10028                           ;color.c: 109:  I2C_2_Master_RepStart();
 10029   00432C  ECEE  F02A         	call	_I2C_2_Master_RepStart	;wreg free
 10030                           
 10031                           ;color.c: 110:  I2C_2_Master_Write(0x52 | 0x01);
 10032   004330  0E53               	movlw	83
 10033   004332  ECD3  F02A         	call	_I2C_2_Master_Write
 10034   004336                     
 10035                           ;color.c: 111:  RGBC->C=I2C_2_Master_Read(1);
 10036   004336  0E01               	movlw	1
 10037   004338  EC67  F029         	call	_I2C_2_Master_Read
 10038   00433C  6E16               	movwf	??_color_read^0,c
 10039   00433E  6A17               	clrf	(??_color_read+1)^0,c
 10040   004340  EE20 F006          	lfsr	2,6
 10041   004344  5014               	movf	color_read@RGBC^0,w,c
 10042   004346  26D9               	addwf	fsr2l,f,c
 10043   004348  5015               	movf	(color_read@RGBC+1)^0,w,c
 10044   00434A  22DA               	addwfc	fsr2h,f,c
 10045   00434C  C016  FFDE         	movff	??_color_read,postinc2
 10046   004350  C017  FFDD         	movff	??_color_read+1,postdec2
 10047   004354                     
 10048                           ;color.c: 112:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
 10049   004354  EE20 F006          	lfsr	2,6
 10050   004358  5014               	movf	color_read@RGBC^0,w,c
 10051   00435A  26D9               	addwf	fsr2l,f,c
 10052   00435C  5015               	movf	(color_read@RGBC+1)^0,w,c
 10053   00435E  22DA               	addwfc	fsr2h,f,c
 10054   004360  CFDE F016          	movff	postinc2,??_color_read
 10055   004364  CFDD F017          	movff	postdec2,??_color_read+1
 10056   004368  0E00               	movlw	0
 10057   00436A  EC67  F029         	call	_I2C_2_Master_Read
 10058   00436E  6E18               	movwf	(??_color_read+2)^0,c
 10059   004370  5018               	movf	(??_color_read+2)^0,w,c
 10060   004372  6E1A               	movwf	(??_color_read+4)^0,c
 10061   004374  6A19               	clrf	(??_color_read+3)^0,c
 10062   004376  5016               	movf	??_color_read^0,w,c
 10063   004378  1019               	iorwf	(??_color_read+3)^0,w,c
 10064   00437A  6E1B               	movwf	(??_color_read+5)^0,c
 10065   00437C  5017               	movf	(??_color_read+1)^0,w,c
 10066   00437E  101A               	iorwf	(??_color_read+4)^0,w,c
 10067   004380  6E1C               	movwf	(??_color_read+6)^0,c
 10068   004382  EE20 F006          	lfsr	2,6
 10069   004386  5014               	movf	color_read@RGBC^0,w,c
 10070   004388  26D9               	addwf	fsr2l,f,c
 10071   00438A  5015               	movf	(color_read@RGBC+1)^0,w,c
 10072   00438C  22DA               	addwfc	fsr2h,f,c
 10073   00438E  C01B  FFDE         	movff	??_color_read+5,postinc2
 10074   004392  C01C  FFDD         	movff	??_color_read+6,postdec2
 10075                           
 10076                           ;color.c: 113:  I2C_2_Master_Stop();
 10077   004396  ECE4  F02A         	call	_I2C_2_Master_Stop	;wreg free
 10078   00439A  0012               	return		;funcret
 10079   00439C                     __end_of_color_read:
 10080                           	callstack 0
 10081                           
 10082 ;; *************** function _I2C_2_Master_Write *****************
 10083 ;; Defined at:
 10084 ;;		line 45 in file "i2c.c"
 10085 ;; Parameters:    Size  Location     Type
 10086 ;;  data_byte       1    wreg     unsigned char 
 10087 ;; Auto vars:     Size  Location     Type
 10088 ;;  data_byte       1   16[COMRAM] unsigned char 
 10089 ;; Return value:  Size  Location     Type
 10090 ;;                  1    wreg      void 
 10091 ;; Registers used:
 10092 ;;		wreg, status,2, status,0, cstack
 10093 ;; Tracked objects:
 10094 ;;		On entry : 0/0
 10095 ;;		On exit  : 0/0
 10096 ;;		Unchanged: 0/0
 10097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10102 ;;Total ram usage:        1 bytes
 10103 ;; Hardware stack levels used: 1
 10104 ;; Hardware stack levels required when called: 7
 10105 ;; This function calls:
 10106 ;;		_I2C_2_Master_Idle
 10107 ;; This function is called by:
 10108 ;;		_color_clear_init_interrupts
 10109 ;;		_color_writetoaddr
 10110 ;;		_color_read
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           	psect	text28
 10115   0055A6                     __ptext28:
 10116                           	callstack 0
 10117   0055A6                     _I2C_2_Master_Write:
 10118                           	callstack 22
 10119                           
 10120                           ;incstack = 0
 10121                           ;I2C_2_Master_Write@data_byte stored from wreg
 10122   0055A6  6E11               	movwf	I2C_2_Master_Write@data_byte^0,c
 10123   0055A8                     
 10124                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10125   0055A8  EC14  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10126   0055AC                     
 10127                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10128   0055AC  C011  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10129   0055B0  0012               	return		;funcret
 10130   0055B2                     __end_of_I2C_2_Master_Write:
 10131                           	callstack 0
 10132                           
 10133 ;; *************** function _I2C_2_Master_Stop *****************
 10134 ;; Defined at:
 10135 ;;		line 39 in file "i2c.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;		None
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;		None
 10140 ;; Return value:  Size  Location     Type
 10141 ;;                  1    wreg      void 
 10142 ;; Registers used:
 10143 ;;		wreg, status,2, status,0, cstack
 10144 ;; Tracked objects:
 10145 ;;		On entry : 0/0
 10146 ;;		On exit  : 0/0
 10147 ;;		Unchanged: 0/0
 10148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10153 ;;Total ram usage:        0 bytes
 10154 ;; Hardware stack levels used: 1
 10155 ;; Hardware stack levels required when called: 7
 10156 ;; This function calls:
 10157 ;;		_I2C_2_Master_Idle
 10158 ;; This function is called by:
 10159 ;;		_color_clear_init_interrupts
 10160 ;;		_color_writetoaddr
 10161 ;;		_color_read
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           
 10165                           	psect	text29
 10166   0055C8                     __ptext29:
 10167                           	callstack 0
 10168   0055C8                     _I2C_2_Master_Stop:
 10169                           	callstack 22
 10170   0055C8                     
 10171                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10172   0055C8  EC14  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10173   0055CC                     
 10174                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10175   0055CC  010E               	movlb	14	; () banked
 10176   0055CE  85DA               	bsf	218,2,b	;volatile
 10177   0055D0                     
 10178                           ; BSR set to: 14
 10179   0055D0  0012               	return		;funcret
 10180   0055D2                     __end_of_I2C_2_Master_Stop:
 10181                           	callstack 0
 10182                           
 10183 ;; *************** function _I2C_2_Master_Start *****************
 10184 ;; Defined at:
 10185 ;;		line 27 in file "i2c.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;		None
 10188 ;; Auto vars:     Size  Location     Type
 10189 ;;		None
 10190 ;; Return value:  Size  Location     Type
 10191 ;;                  1    wreg      void 
 10192 ;; Registers used:
 10193 ;;		wreg, status,2, status,0, cstack
 10194 ;; Tracked objects:
 10195 ;;		On entry : 0/0
 10196 ;;		On exit  : 0/0
 10197 ;;		Unchanged: 0/0
 10198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10203 ;;Total ram usage:        0 bytes
 10204 ;; Hardware stack levels used: 1
 10205 ;; Hardware stack levels required when called: 7
 10206 ;; This function calls:
 10207 ;;		_I2C_2_Master_Idle
 10208 ;; This function is called by:
 10209 ;;		_color_clear_init_interrupts
 10210 ;;		_color_writetoaddr
 10211 ;;		_color_read
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           	psect	text30
 10216   0055D2                     __ptext30:
 10217                           	callstack 0
 10218   0055D2                     _I2C_2_Master_Start:
 10219                           	callstack 22
 10220   0055D2                     
 10221                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10222   0055D2  EC14  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10223   0055D6                     
 10224                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10225   0055D6  010E               	movlb	14	; () banked
 10226   0055D8  81DA               	bsf	218,0,b	;volatile
 10227   0055DA                     
 10228                           ; BSR set to: 14
 10229   0055DA  0012               	return		;funcret
 10230   0055DC                     __end_of_I2C_2_Master_Start:
 10231                           	callstack 0
 10232                           
 10233 ;; *************** function _I2C_2_Master_RepStart *****************
 10234 ;; Defined at:
 10235 ;;		line 33 in file "i2c.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;		None
 10238 ;; Auto vars:     Size  Location     Type
 10239 ;;		None
 10240 ;; Return value:  Size  Location     Type
 10241 ;;                  1    wreg      void 
 10242 ;; Registers used:
 10243 ;;		wreg, status,2, status,0, cstack
 10244 ;; Tracked objects:
 10245 ;;		On entry : 0/0
 10246 ;;		On exit  : 0/0
 10247 ;;		Unchanged: 0/0
 10248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10253 ;;Total ram usage:        0 bytes
 10254 ;; Hardware stack levels used: 1
 10255 ;; Hardware stack levels required when called: 7
 10256 ;; This function calls:
 10257 ;;		_I2C_2_Master_Idle
 10258 ;; This function is called by:
 10259 ;;		_color_read
 10260 ;; This function uses a non-reentrant model
 10261 ;;
 10262                           
 10263                           	psect	text31
 10264   0055DC                     __ptext31:
 10265                           	callstack 0
 10266   0055DC                     _I2C_2_Master_RepStart:
 10267                           	callstack 22
 10268   0055DC                     
 10269                           ;i2c.c: 35:   I2C_2_Master_Idle();
 10270   0055DC  EC14  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10271   0055E0                     
 10272                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 10273   0055E0  010E               	movlb	14	; () banked
 10274   0055E2  83DA               	bsf	218,1,b	;volatile
 10275   0055E4                     
 10276                           ; BSR set to: 14
 10277   0055E4  0012               	return		;funcret
 10278   0055E6                     __end_of_I2C_2_Master_RepStart:
 10279                           	callstack 0
 10280                           
 10281 ;; *************** function _I2C_2_Master_Read *****************
 10282 ;; Defined at:
 10283 ;;		line 51 in file "i2c.c"
 10284 ;; Parameters:    Size  Location     Type
 10285 ;;  ack             1    wreg     unsigned char 
 10286 ;; Auto vars:     Size  Location     Type
 10287 ;;  ack             1   17[COMRAM] unsigned char 
 10288 ;;  tmp             1   18[COMRAM] unsigned char 
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  1    wreg      unsigned char 
 10291 ;; Registers used:
 10292 ;;		wreg, status,2, status,0, cstack
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10301 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10302 ;;Total ram usage:        3 bytes
 10303 ;; Hardware stack levels used: 1
 10304 ;; Hardware stack levels required when called: 7
 10305 ;; This function calls:
 10306 ;;		_I2C_2_Master_Idle
 10307 ;; This function is called by:
 10308 ;;		_color_read
 10309 ;; This function uses a non-reentrant model
 10310 ;;
 10311                           
 10312                           	psect	text32
 10313   0052CE                     __ptext32:
 10314                           	callstack 0
 10315   0052CE                     _I2C_2_Master_Read:
 10316                           	callstack 22
 10317                           
 10318                           ; BSR set to: 14
 10319                           ;incstack = 0
 10320                           ;I2C_2_Master_Read@ack stored from wreg
 10321   0052CE  6E12               	movwf	I2C_2_Master_Read@ack^0,c
 10322   0052D0                     
 10323                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 10324   0052D0  EC14  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10325   0052D4                     
 10326                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 10327   0052D4  010E               	movlb	14	; () banked
 10328   0052D6  87DA               	bsf	218,3,b	;volatile
 10329                           
 10330                           ;i2c.c: 56:   I2C_2_Master_Idle();
 10331   0052D8  EC14  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10332   0052DC                     
 10333                           ;i2c.c: 57:   tmp = SSP2BUF;
 10334   0052DC  CED5 F013          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 10335                           
 10336                           ;i2c.c: 58:   I2C_2_Master_Idle();
 10337   0052E0  EC14  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10338   0052E4                     
 10339                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 10340   0052E4  5012               	movf	I2C_2_Master_Read@ack^0,w,c
 10341   0052E6  B4D8               	btfsc	status,2,c
 10342   0052E8  EF78  F029         	goto	u2001
 10343   0052EC  EF7C  F029         	goto	u2000
 10344   0052F0                     u2001:
 10345   0052F0  6A11               	clrf	??_I2C_2_Master_Read^0,c
 10346   0052F2  2A11               	incf	??_I2C_2_Master_Read^0,f,c
 10347   0052F4  EF7D  F029         	goto	u2018
 10348   0052F8                     u2000:
 10349   0052F8  6A11               	clrf	??_I2C_2_Master_Read^0,c
 10350   0052FA                     u2018:
 10351   0052FA  3A11               	swapf	??_I2C_2_Master_Read^0,f,c
 10352   0052FC  4611               	rlncf	??_I2C_2_Master_Read^0,f,c
 10353   0052FE  010E               	movlb	14	; () banked
 10354   005300  51DA               	movf	218,w,b	;volatile
 10355   005302  1811               	xorwf	??_I2C_2_Master_Read^0,w,c
 10356   005304  0BDF               	andlw	-33
 10357   005306  1811               	xorwf	??_I2C_2_Master_Read^0,w,c
 10358   005308  6FDA               	movwf	218,b	;volatile
 10359   00530A                     
 10360                           ; BSR set to: 14
 10361                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 10362   00530A  89DA               	bsf	218,4,b	;volatile
 10363   00530C                     
 10364                           ; BSR set to: 14
 10365                           ;i2c.c: 61:   return tmp;
 10366   00530C  5013               	movf	I2C_2_Master_Read@tmp^0,w,c
 10367   00530E                     
 10368                           ; BSR set to: 14
 10369   00530E  0012               	return		;funcret
 10370   005310                     __end_of_I2C_2_Master_Read:
 10371                           	callstack 0
 10372                           
 10373 ;; *************** function _I2C_2_Master_Idle *****************
 10374 ;; Defined at:
 10375 ;;		line 22 in file "i2c.c"
 10376 ;; Parameters:    Size  Location     Type
 10377 ;;		None
 10378 ;; Auto vars:     Size  Location     Type
 10379 ;;		None
 10380 ;; Return value:  Size  Location     Type
 10381 ;;                  1    wreg      void 
 10382 ;; Registers used:
 10383 ;;		wreg, status,2, status,0
 10384 ;; Tracked objects:
 10385 ;;		On entry : 0/0
 10386 ;;		On exit  : 0/0
 10387 ;;		Unchanged: 0/0
 10388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10393 ;;Total ram usage:        1 bytes
 10394 ;; Hardware stack levels used: 1
 10395 ;; Hardware stack levels required when called: 6
 10396 ;; This function calls:
 10397 ;;		Nothing
 10398 ;; This function is called by:
 10399 ;;		_I2C_2_Master_Start
 10400 ;;		_I2C_2_Master_RepStart
 10401 ;;		_I2C_2_Master_Stop
 10402 ;;		_I2C_2_Master_Write
 10403 ;;		_I2C_2_Master_Read
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           	psect	text33
 10408   005428                     __ptext33:
 10409                           	callstack 0
 10410   005428                     _I2C_2_Master_Idle:
 10411                           	callstack 22
 10412   005428                     l267:
 10413   005428  010E               	movlb	14	; () banked
 10414   00542A  B5D8               	btfsc	216,2,b	;volatile
 10415   00542C  EF1A  F02A         	goto	u1861
 10416   005430  EF1C  F02A         	goto	u1860
 10417   005434                     u1861:
 10418   005434  EF14  F02A         	goto	l267
 10419   005438                     u1860:
 10420   005438                     
 10421                           ; BSR set to: 14
 10422   005438  CEDA F010          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10423   00543C  0E1F               	movlw	31
 10424   00543E  1610               	andwf	??_I2C_2_Master_Idle^0,f,c
 10425   005440  A4D8               	btfss	status,2,c
 10426   005442  EF25  F02A         	goto	u1871
 10427   005446  EF27  F02A         	goto	u1870
 10428   00544A                     u1871:
 10429   00544A  EF14  F02A         	goto	l267
 10430   00544E                     u1870:
 10431   00544E                     
 10432                           ; BSR set to: 14
 10433   00544E  0012               	return		;funcret
 10434   005450                     __end_of_I2C_2_Master_Idle:
 10435                           	callstack 0
 10436                           
 10437 ;; *************** function _calibration *****************
 10438 ;; Defined at:
 10439 ;;		line 641 in file "dc_motor.c"
 10440 ;; Parameters:    Size  Location     Type
 10441 ;;  mL              2   48[COMRAM] PTR struct DC_motor
 10442 ;;		 -> main@motorL(10), 
 10443 ;;  mR              2   50[COMRAM] PTR struct DC_motor
 10444 ;;		 -> main@motorR(10), 
 10445 ;;  turnSpeed       1   52[COMRAM] unsigned char 
 10446 ;;  turnDuration    2   53[COMRAM] PTR unsigned char 
 10447 ;;		 -> main@turnDuration(1), 
 10448 ;;  turnRamp        1   55[COMRAM] unsigned char 
 10449 ;; Auto vars:     Size  Location     Type
 10450 ;;		None
 10451 ;; Return value:  Size  Location     Type
 10452 ;;                  1    wreg      void 
 10453 ;; Registers used:
 10454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10455 ;; Tracked objects:
 10456 ;;		On entry : 0/0
 10457 ;;		On exit  : 0/0
 10458 ;;		Unchanged: 0/0
 10459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10460 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10462 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10463 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10464 ;;Total ram usage:       10 bytes
 10465 ;; Hardware stack levels used: 1
 10466 ;; Hardware stack levels required when called: 9
 10467 ;; This function calls:
 10468 ;;		_turnLeft
 10469 ;;		_turnRight
 10470 ;; This function is called by:
 10471 ;;		_main
 10472 ;; This function uses a non-reentrant model
 10473 ;;
 10474                           
 10475                           	psect	text34
 10476   003B30                     __ptext34:
 10477                           	callstack 0
 10478   003B30                     _calibration:
 10479                           	callstack 21
 10480   003B30                     
 10481                           ;dc_motor.c: 641: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 642: {;dc_motor.c: 644:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10482   003B30  C031  F023         	movff	calibration@mL,turnLeft@mL
 10483   003B34  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10484   003B38  C033  F025         	movff	calibration@mR,turnLeft@mR
 10485   003B3C  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10486   003B40  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10487   003B44  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10488   003B48  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10489   003B4C  50DF               	movf	indf2,w,c
 10490   003B4E  6E28               	movwf	turnLeft@turnDuration^0,c
 10491   003B50  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10492   003B54  ECAA  F023         	call	_turnLeft	;wreg free
 10493   003B58                     
 10494                           ;dc_motor.c: 645:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10495   003B58  0E05               	movlw	5
 10496   003B5A  6E3A               	movwf	(??_calibration+1)^0,c
 10497   003B5C  0E0F               	movlw	15
 10498   003B5E  6E39               	movwf	??_calibration^0,c
 10499   003B60  0EF1               	movlw	241
 10500   003B62                     u4907:
 10501   003B62  2EE8               	decfsz	wreg,f,c
 10502   003B64  D7FE               	bra	u4907
 10503   003B66  2E39               	decfsz	??_calibration^0,f,c
 10504   003B68  D7FC               	bra	u4907
 10505   003B6A  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10506   003B6C  D7FA               	bra	u4907
 10507   003B6E  0000               	nop	
 10508   003B70                     
 10509                           ;dc_motor.c: 646:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10510   003B70  C031  F023         	movff	calibration@mL,turnLeft@mL
 10511   003B74  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10512   003B78  C033  F025         	movff	calibration@mR,turnLeft@mR
 10513   003B7C  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10514   003B80  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10515   003B84  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10516   003B88  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10517   003B8C  50DF               	movf	indf2,w,c
 10518   003B8E  6E28               	movwf	turnLeft@turnDuration^0,c
 10519   003B90  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10520   003B94  ECAA  F023         	call	_turnLeft	;wreg free
 10521                           
 10522                           ;dc_motor.c: 647:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10523   003B98  0E05               	movlw	5
 10524   003B9A  6E3A               	movwf	(??_calibration+1)^0,c
 10525   003B9C  0E0F               	movlw	15
 10526   003B9E  6E39               	movwf	??_calibration^0,c
 10527   003BA0  0EF1               	movlw	241
 10528   003BA2                     u4917:
 10529   003BA2  2EE8               	decfsz	wreg,f,c
 10530   003BA4  D7FE               	bra	u4917
 10531   003BA6  2E39               	decfsz	??_calibration^0,f,c
 10532   003BA8  D7FC               	bra	u4917
 10533   003BAA  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10534   003BAC  D7FA               	bra	u4917
 10535   003BAE  0000               	nop	
 10536   003BB0                     
 10537                           ;dc_motor.c: 648:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10538   003BB0  C031  F023         	movff	calibration@mL,turnRight@mL
 10539   003BB4  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10540   003BB8  C033  F025         	movff	calibration@mR,turnRight@mR
 10541   003BBC  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10542   003BC0  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10543   003BC4  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10544   003BC8  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10545   003BCC  50DF               	movf	indf2,w,c
 10546   003BCE  6E28               	movwf	turnRight@turnDuration^0,c
 10547   003BD0  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10548   003BD4  ECBD  F022         	call	_turnRight	;wreg free
 10549   003BD8                     
 10550                           ;dc_motor.c: 649:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10551   003BD8  0E05               	movlw	5
 10552   003BDA  6E3A               	movwf	(??_calibration+1)^0,c
 10553   003BDC  0E0F               	movlw	15
 10554   003BDE  6E39               	movwf	??_calibration^0,c
 10555   003BE0  0EF1               	movlw	241
 10556   003BE2                     u4927:
 10557   003BE2  2EE8               	decfsz	wreg,f,c
 10558   003BE4  D7FE               	bra	u4927
 10559   003BE6  2E39               	decfsz	??_calibration^0,f,c
 10560   003BE8  D7FC               	bra	u4927
 10561   003BEA  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10562   003BEC  D7FA               	bra	u4927
 10563   003BEE  0000               	nop	
 10564                           
 10565                           ;dc_motor.c: 650:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10566   003BF0  C031  F023         	movff	calibration@mL,turnRight@mL
 10567   003BF4  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10568   003BF8  C033  F025         	movff	calibration@mR,turnRight@mR
 10569   003BFC  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10570   003C00  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10571   003C04  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10572   003C08  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10573   003C0C  50DF               	movf	indf2,w,c
 10574   003C0E  6E28               	movwf	turnRight@turnDuration^0,c
 10575   003C10  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10576   003C14  ECBD  F022         	call	_turnRight	;wreg free
 10577   003C18                     l758:
 10578   003C18  A48E               	btfss	142,2,c	;volatile
 10579   003C1A  EF11  F01E         	goto	u2851
 10580   003C1E  EF13  F01E         	goto	u2850
 10581   003C22                     u2851:
 10582   003C22  EF1A  F01E         	goto	l762
 10583   003C26                     u2850:
 10584   003C26  B68E               	btfsc	142,3,c	;volatile
 10585   003C28  EF18  F01E         	goto	u2861
 10586   003C2C  EF1A  F01E         	goto	u2860
 10587   003C30                     u2861:
 10588   003C30  EF0C  F01E         	goto	l758
 10589   003C34                     u2860:
 10590   003C34                     l762:
 10591                           
 10592                           ;dc_motor.c: 655:         if (!PORTFbits.RF2 && *turnDuration>0) {
 10593   003C34  B48E               	btfsc	142,2,c	;volatile
 10594   003C36  EF1F  F01E         	goto	u2871
 10595   003C3A  EF21  F01E         	goto	u2870
 10596   003C3E                     u2871:
 10597   003C3E  EF35  F01E         	goto	l763
 10598   003C42                     u2870:
 10599   003C42  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10600   003C46  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10601   003C4A  50DF               	movf	indf2,w,c
 10602   003C4C  B4D8               	btfsc	status,2,c
 10603   003C4E  EF2B  F01E         	goto	u2881
 10604   003C52  EF2D  F01E         	goto	u2880
 10605   003C56                     u2881:
 10606   003C56  EF35  F01E         	goto	l763
 10607   003C5A                     u2880:
 10608   003C5A                     
 10609                           ;dc_motor.c: 656:             (*turnDuration)--;
 10610   003C5A  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10611   003C5E  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10612   003C62  06DF               	decf	indf2,f,c
 10613   003C64                     
 10614                           ;dc_motor.c: 657:             LATDbits.LATD7 = 1;
 10615   003C64  8E7C               	bsf	124,7,c	;volatile
 10616                           
 10617                           ;dc_motor.c: 658:         }
 10618   003C66  EF42  F01E         	goto	l4056
 10619   003C6A                     l763:
 10620   003C6A  B68E               	btfsc	142,3,c	;volatile
 10621   003C6C  EF3A  F01E         	goto	u2891
 10622   003C70  EF3C  F01E         	goto	u2890
 10623   003C74                     u2891:
 10624   003C74  EF42  F01E         	goto	l4056
 10625   003C78                     u2890:
 10626   003C78                     
 10627                           ;dc_motor.c: 661:             (*turnDuration)++;
 10628   003C78  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10629   003C7C  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10630   003C80  2ADF               	incf	indf2,f,c
 10631   003C82                     
 10632                           ;dc_motor.c: 662:             LATHbits.LATH3 = 1;
 10633   003C82  8680               	bsf	128,3,c	;volatile
 10634   003C84                     l4056:
 10635                           
 10636                           ;dc_motor.c: 665:         _delay((unsigned long)((500)*(64000000/4000.0)));
 10637   003C84  0E29               	movlw	41
 10638   003C86  6E3A               	movwf	(??_calibration+1)^0,c
 10639   003C88  0E96               	movlw	150
 10640   003C8A  6E39               	movwf	??_calibration^0,c
 10641   003C8C  0E7F               	movlw	127
 10642   003C8E                     u4937:
 10643   003C8E  2EE8               	decfsz	wreg,f,c
 10644   003C90  D7FE               	bra	u4937
 10645   003C92  2E39               	decfsz	??_calibration^0,f,c
 10646   003C94  D7FC               	bra	u4937
 10647   003C96  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10648   003C98  D7FA               	bra	u4937
 10649   003C9A  0000               	nop	
 10650   003C9C                     
 10651                           ;dc_motor.c: 667:         if (!PORTFbits.RF3) {
 10652   003C9C  B68E               	btfsc	142,3,c	;volatile
 10653   003C9E  EF53  F01E         	goto	u2901
 10654   003CA2  EF55  F01E         	goto	u2900
 10655   003CA6                     u2901:
 10656   003CA6  EF5C  F01E         	goto	l766
 10657   003CAA                     u2900:
 10658   003CAA                     
 10659                           ;dc_motor.c: 668:             (*turnDuration)--;
 10660   003CAA  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10661   003CAE  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10662   003CB2  06DF               	decf	indf2,f,c
 10663                           
 10664                           ;dc_motor.c: 669:             break;
 10665   003CB4  EFD4  F01E         	goto	l767
 10666   003CB8                     l766:
 10667                           
 10668                           ;dc_motor.c: 672:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10669   003CB8  9680               	bcf	128,3,c	;volatile
 10670   003CBA  9E7C               	bcf	124,7,c	;volatile
 10671   003CBC                     
 10672                           ;dc_motor.c: 675:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10673   003CBC  C031  F023         	movff	calibration@mL,turnLeft@mL
 10674   003CC0  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10675   003CC4  C033  F025         	movff	calibration@mR,turnLeft@mR
 10676   003CC8  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10677   003CCC  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10678   003CD0  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10679   003CD4  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10680   003CD8  50DF               	movf	indf2,w,c
 10681   003CDA  6E28               	movwf	turnLeft@turnDuration^0,c
 10682   003CDC  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10683   003CE0  ECAA  F023         	call	_turnLeft	;wreg free
 10684   003CE4                     
 10685                           ;dc_motor.c: 676:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10686   003CE4  0E05               	movlw	5
 10687   003CE6  6E3A               	movwf	(??_calibration+1)^0,c
 10688   003CE8  0E0F               	movlw	15
 10689   003CEA  6E39               	movwf	??_calibration^0,c
 10690   003CEC  0EF1               	movlw	241
 10691   003CEE                     u4947:
 10692   003CEE  2EE8               	decfsz	wreg,f,c
 10693   003CF0  D7FE               	bra	u4947
 10694   003CF2  2E39               	decfsz	??_calibration^0,f,c
 10695   003CF4  D7FC               	bra	u4947
 10696   003CF6  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10697   003CF8  D7FA               	bra	u4947
 10698   003CFA  0000               	nop	
 10699   003CFC                     
 10700                           ;dc_motor.c: 677:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10701   003CFC  C031  F023         	movff	calibration@mL,turnLeft@mL
 10702   003D00  C032  F024         	movff	calibration@mL+1,turnLeft@mL+1
 10703   003D04  C033  F025         	movff	calibration@mR,turnLeft@mR
 10704   003D08  C034  F026         	movff	calibration@mR+1,turnLeft@mR+1
 10705   003D0C  C035  F027         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10706   003D10  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10707   003D14  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10708   003D18  50DF               	movf	indf2,w,c
 10709   003D1A  6E28               	movwf	turnLeft@turnDuration^0,c
 10710   003D1C  C038  F029         	movff	calibration@turnRamp,turnLeft@turnRamp
 10711   003D20  ECAA  F023         	call	_turnLeft	;wreg free
 10712                           
 10713                           ;dc_motor.c: 678:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10714   003D24  0E05               	movlw	5
 10715   003D26  6E3A               	movwf	(??_calibration+1)^0,c
 10716   003D28  0E0F               	movlw	15
 10717   003D2A  6E39               	movwf	??_calibration^0,c
 10718   003D2C  0EF1               	movlw	241
 10719   003D2E                     u4957:
 10720   003D2E  2EE8               	decfsz	wreg,f,c
 10721   003D30  D7FE               	bra	u4957
 10722   003D32  2E39               	decfsz	??_calibration^0,f,c
 10723   003D34  D7FC               	bra	u4957
 10724   003D36  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10725   003D38  D7FA               	bra	u4957
 10726   003D3A  0000               	nop	
 10727   003D3C                     
 10728                           ;dc_motor.c: 679:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10729   003D3C  C031  F023         	movff	calibration@mL,turnRight@mL
 10730   003D40  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10731   003D44  C033  F025         	movff	calibration@mR,turnRight@mR
 10732   003D48  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10733   003D4C  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10734   003D50  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10735   003D54  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10736   003D58  50DF               	movf	indf2,w,c
 10737   003D5A  6E28               	movwf	turnRight@turnDuration^0,c
 10738   003D5C  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10739   003D60  ECBD  F022         	call	_turnRight	;wreg free
 10740   003D64                     
 10741                           ;dc_motor.c: 680:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10742   003D64  0E05               	movlw	5
 10743   003D66  6E3A               	movwf	(??_calibration+1)^0,c
 10744   003D68  0E0F               	movlw	15
 10745   003D6A  6E39               	movwf	??_calibration^0,c
 10746   003D6C  0EF1               	movlw	241
 10747   003D6E                     u4967:
 10748   003D6E  2EE8               	decfsz	wreg,f,c
 10749   003D70  D7FE               	bra	u4967
 10750   003D72  2E39               	decfsz	??_calibration^0,f,c
 10751   003D74  D7FC               	bra	u4967
 10752   003D76  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10753   003D78  D7FA               	bra	u4967
 10754   003D7A  0000               	nop	
 10755                           
 10756                           ;dc_motor.c: 681:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10757   003D7C  C031  F023         	movff	calibration@mL,turnRight@mL
 10758   003D80  C032  F024         	movff	calibration@mL+1,turnRight@mL+1
 10759   003D84  C033  F025         	movff	calibration@mR,turnRight@mR
 10760   003D88  C034  F026         	movff	calibration@mR+1,turnRight@mR+1
 10761   003D8C  C035  F027         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10762   003D90  C036  FFD9         	movff	calibration@turnDuration,fsr2l
 10763   003D94  C037  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10764   003D98  50DF               	movf	indf2,w,c
 10765   003D9A  6E28               	movwf	turnRight@turnDuration^0,c
 10766   003D9C  C038  F029         	movff	calibration@turnRamp,turnRight@turnRamp
 10767   003DA0  ECBD  F022         	call	_turnRight	;wreg free
 10768   003DA4  EF0C  F01E         	goto	l758
 10769   003DA8                     l767:
 10770                           
 10771                           ;dc_motor.c: 686:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
 10772   003DA8  8680               	bsf	128,3,c	;volatile
 10773   003DAA  8E7C               	bsf	124,7,c	;volatile
 10774   003DAC                     
 10775                           ;dc_motor.c: 687:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10776   003DAC  0E09               	movlw	9
 10777   003DAE  6E3A               	movwf	(??_calibration+1)^0,c
 10778   003DB0  0E1E               	movlw	30
 10779   003DB2  6E39               	movwf	??_calibration^0,c
 10780   003DB4  0EE4               	movlw	228
 10781   003DB6                     u4977:
 10782   003DB6  2EE8               	decfsz	wreg,f,c
 10783   003DB8  D7FE               	bra	u4977
 10784   003DBA  2E39               	decfsz	??_calibration^0,f,c
 10785   003DBC  D7FC               	bra	u4977
 10786   003DBE  2E3A               	decfsz	(??_calibration+1)^0,f,c
 10787   003DC0  D7FA               	bra	u4977
 10788   003DC2  D000               	nop2	
 10789   003DC4                     
 10790                           ;dc_motor.c: 688:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10791   003DC4  9680               	bcf	128,3,c	;volatile
 10792   003DC6  9E7C               	bcf	124,7,c	;volatile
 10793   003DC8  0012               	return		;funcret
 10794   003DCA                     __end_of_calibration:
 10795                           	callstack 0
 10796                           
 10797 ;; *************** function _turnRight *****************
 10798 ;; Defined at:
 10799 ;;		line 425 in file "dc_motor.c"
 10800 ;; Parameters:    Size  Location     Type
 10801 ;;  mL              2   34[COMRAM] PTR struct DC_motor
 10802 ;;		 -> main@motorL(10), 
 10803 ;;  mR              2   36[COMRAM] PTR struct DC_motor
 10804 ;;		 -> main@motorR(10), 
 10805 ;;  turnSpeed       1   38[COMRAM] unsigned char 
 10806 ;;  turnDuration    1   39[COMRAM] unsigned char 
 10807 ;;  turnRamp        1   40[COMRAM] unsigned char 
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;  cur_power       2   46[COMRAM] int 
 10810 ;;  i               2   44[COMRAM] int 
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      void 
 10813 ;; Registers used:
 10814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10820 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10821 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10822 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10823 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10824 ;;Total ram usage:       14 bytes
 10825 ;; Hardware stack levels used: 1
 10826 ;; Hardware stack levels required when called: 8
 10827 ;; This function calls:
 10828 ;;		_setMotorPWM
 10829 ;; This function is called by:
 10830 ;;		_move
 10831 ;;		_returnHome
 10832 ;;		_lostReturnHome
 10833 ;;		_calibration
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837                           	psect	text35
 10838   00457A                     __ptext35:
 10839                           	callstack 0
 10840   00457A                     _turnRight:
 10841                           	callstack 21
 10842   00457A                     
 10843                           ;dc_motor.c: 425: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 426: {;dc_motor.c: 427:     mL->dir
      +                          ection = 1;
 10844   00457A  EE20 F001          	lfsr	2,1
 10845   00457E  5023               	movf	turnRight@mL^0,w,c
 10846   004580  26D9               	addwf	fsr2l,f,c
 10847   004582  5024               	movf	(turnRight@mL+1)^0,w,c
 10848   004584  22DA               	addwfc	fsr2h,f,c
 10849   004586  0E01               	movlw	1
 10850   004588  6EDF               	movwf	indf2,c
 10851                           
 10852                           ;dc_motor.c: 428:     mR->direction = 0;
 10853   00458A  EE20 F001          	lfsr	2,1
 10854   00458E  5025               	movf	turnRight@mR^0,w,c
 10855   004590  26D9               	addwf	fsr2l,f,c
 10856   004592  5026               	movf	(turnRight@mR+1)^0,w,c
 10857   004594  22DA               	addwfc	fsr2h,f,c
 10858   004596  6ADF               	clrf	indf2,c
 10859   004598                     
 10860                           ;dc_motor.c: 429:     int i;;dc_motor.c: 430:     int cur_power;;dc_motor.c: 431:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 10861   004598  0E00               	movlw	0
 10862   00459A  6E30               	movwf	(turnRight@cur_power+1)^0,c
 10863   00459C  0E01               	movlw	1
 10864   00459E  6E2F               	movwf	turnRight@cur_power^0,c
 10865   0045A0  EF1C  F023         	goto	l3266
 10866   0045A4                     l3252:
 10867                           
 10868                           ;dc_motor.c: 432:         mL->power = cur_power+mL->compensation;
 10869   0045A4  EE20 F009          	lfsr	2,9
 10870   0045A8  5023               	movf	turnRight@mL^0,w,c
 10871   0045AA  26D9               	addwf	fsr2l,f,c
 10872   0045AC  5024               	movf	(turnRight@mL+1)^0,w,c
 10873   0045AE  22DA               	addwfc	fsr2h,f,c
 10874   0045B0  50DF               	movf	indf2,w,c
 10875   0045B2  242F               	addwf	turnRight@cur_power^0,w,c
 10876   0045B4  C023  FFD9         	movff	turnRight@mL,fsr2l
 10877   0045B8  C024  FFDA         	movff	turnRight@mL+1,fsr2h
 10878   0045BC  6EDF               	movwf	indf2,c
 10879                           
 10880                           ;dc_motor.c: 433:         mR->power = cur_power+mR->compensation;
 10881   0045BE  EE20 F009          	lfsr	2,9
 10882   0045C2  5025               	movf	turnRight@mR^0,w,c
 10883   0045C4  26D9               	addwf	fsr2l,f,c
 10884   0045C6  5026               	movf	(turnRight@mR+1)^0,w,c
 10885   0045C8  22DA               	addwfc	fsr2h,f,c
 10886   0045CA  50DF               	movf	indf2,w,c
 10887   0045CC  242F               	addwf	turnRight@cur_power^0,w,c
 10888   0045CE  C025  FFD9         	movff	turnRight@mR,fsr2l
 10889   0045D2  C026  FFDA         	movff	turnRight@mR+1,fsr2h
 10890   0045D6  6EDF               	movwf	indf2,c
 10891   0045D8                     
 10892                           ;dc_motor.c: 434:         setMotorPWM(mL);
 10893   0045D8  C023  F01D         	movff	turnRight@mL,setMotorPWM@m
 10894   0045DC  C024  F01E         	movff	turnRight@mL+1,setMotorPWM@m+1
 10895   0045E0  EC97  F024         	call	_setMotorPWM	;wreg free
 10896   0045E4                     
 10897                           ;dc_motor.c: 435:         setMotorPWM(mR);
 10898   0045E4  C025  F01D         	movff	turnRight@mR,setMotorPWM@m
 10899   0045E8  C026  F01E         	movff	turnRight@mR+1,setMotorPWM@m+1
 10900   0045EC  EC97  F024         	call	_setMotorPWM	;wreg free
 10901   0045F0                     
 10902                           ;dc_motor.c: 436:         for (i=0;i<turnRamp;i++) {
 10903   0045F0  0E00               	movlw	0
 10904   0045F2  6E2E               	movwf	(turnRight@i+1)^0,c
 10905   0045F4  0E00               	movlw	0
 10906   0045F6  6E2D               	movwf	turnRight@i^0,c
 10907   0045F8  EF08  F023         	goto	l651
 10908   0045FC                     l3260:
 10909                           
 10910                           ;dc_motor.c: 437:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10911   0045FC  0E68               	movlw	104
 10912   0045FE  6E2A               	movwf	??_turnRight^0,c
 10913   004600  0EE4               	movlw	228
 10914   004602                     u4987:
 10915   004602  2EE8               	decfsz	wreg,f,c
 10916   004604  D7FE               	bra	u4987
 10917   004606  2E2A               	decfsz	??_turnRight^0,f,c
 10918   004608  D7FC               	bra	u4987
 10919   00460A  D000               	nop2	
 10920   00460C                     
 10921                           ;dc_motor.c: 438:         }
 10922   00460C  4A2D               	infsnz	turnRight@i^0,f,c
 10923   00460E  2A2E               	incf	(turnRight@i+1)^0,f,c
 10924   004610                     l651:
 10925   004610  5029               	movf	turnRight@turnRamp^0,w,c
 10926   004612  6E2A               	movwf	??_turnRight^0,c
 10927   004614  6A2B               	clrf	(??_turnRight+1)^0,c
 10928   004616  502A               	movf	??_turnRight^0,w,c
 10929   004618  5C2D               	subwf	turnRight@i^0,w,c
 10930   00461A  502E               	movf	(turnRight@i+1)^0,w,c
 10931   00461C  0A80               	xorlw	128
 10932   00461E  6E2C               	movwf	(??_turnRight+2)^0,c
 10933   004620  502B               	movf	(??_turnRight+1)^0,w,c
 10934   004622  0A80               	xorlw	128
 10935   004624  582C               	subwfb	(??_turnRight+2)^0,w,c
 10936   004626  A0D8               	btfss	status,0,c
 10937   004628  EF18  F023         	goto	u2041
 10938   00462C  EF1A  F023         	goto	u2040
 10939   004630                     u2041:
 10940   004630  EFFE  F022         	goto	l3260
 10941   004634                     u2040:
 10942   004634                     
 10943                           ;dc_motor.c: 439:     }
 10944   004634  4A2F               	infsnz	turnRight@cur_power^0,f,c
 10945   004636  2A30               	incf	(turnRight@cur_power+1)^0,f,c
 10946   004638                     l3266:
 10947   004638  5027               	movf	turnRight@turnSpeed^0,w,c
 10948   00463A  6E2A               	movwf	??_turnRight^0,c
 10949   00463C  6A2B               	clrf	(??_turnRight+1)^0,c
 10950   00463E  502F               	movf	turnRight@cur_power^0,w,c
 10951   004640  5C2A               	subwf	??_turnRight^0,w,c
 10952   004642  502B               	movf	(??_turnRight+1)^0,w,c
 10953   004644  0A80               	xorlw	128
 10954   004646  6E2C               	movwf	(??_turnRight+2)^0,c
 10955   004648  5030               	movf	(turnRight@cur_power+1)^0,w,c
 10956   00464A  0A80               	xorlw	128
 10957   00464C  582C               	subwfb	(??_turnRight+2)^0,w,c
 10958   00464E  B0D8               	btfsc	status,0,c
 10959   004650  EF2C  F023         	goto	u2051
 10960   004654  EF2E  F023         	goto	u2050
 10961   004658                     u2051:
 10962   004658  EFD2  F022         	goto	l3252
 10963   00465C                     u2050:
 10964   00465C                     
 10965                           ;dc_motor.c: 441:     for (i=0;i<turnDuration;i++) {
 10966   00465C  0E00               	movlw	0
 10967   00465E  6E2E               	movwf	(turnRight@i+1)^0,c
 10968   004660  0E00               	movlw	0
 10969   004662  6E2D               	movwf	turnRight@i^0,c
 10970   004664  EF3E  F023         	goto	l655
 10971   004668                     l3270:
 10972                           
 10973                           ;dc_motor.c: 442:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10974   004668  0E68               	movlw	104
 10975   00466A  6E2A               	movwf	??_turnRight^0,c
 10976   00466C  0EE4               	movlw	228
 10977   00466E                     u4997:
 10978   00466E  2EE8               	decfsz	wreg,f,c
 10979   004670  D7FE               	bra	u4997
 10980   004672  2E2A               	decfsz	??_turnRight^0,f,c
 10981   004674  D7FC               	bra	u4997
 10982   004676  D000               	nop2	
 10983   004678                     
 10984                           ;dc_motor.c: 443:         }
 10985   004678  4A2D               	infsnz	turnRight@i^0,f,c
 10986   00467A  2A2E               	incf	(turnRight@i+1)^0,f,c
 10987   00467C                     l655:
 10988   00467C  5028               	movf	turnRight@turnDuration^0,w,c
 10989   00467E  6E2A               	movwf	??_turnRight^0,c
 10990   004680  6A2B               	clrf	(??_turnRight+1)^0,c
 10991   004682  502A               	movf	??_turnRight^0,w,c
 10992   004684  5C2D               	subwf	turnRight@i^0,w,c
 10993   004686  502E               	movf	(turnRight@i+1)^0,w,c
 10994   004688  0A80               	xorlw	128
 10995   00468A  6E2C               	movwf	(??_turnRight+2)^0,c
 10996   00468C  502B               	movf	(??_turnRight+1)^0,w,c
 10997   00468E  0A80               	xorlw	128
 10998   004690  582C               	subwfb	(??_turnRight+2)^0,w,c
 10999   004692  A0D8               	btfss	status,0,c
 11000   004694  EF4E  F023         	goto	u2061
 11001   004698  EF50  F023         	goto	u2060
 11002   00469C                     u2061:
 11003   00469C  EF34  F023         	goto	l3270
 11004   0046A0                     u2060:
 11005   0046A0                     
 11006                           ;dc_motor.c: 445:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 11007   0046A0  C027  F02F         	movff	turnRight@turnSpeed,turnRight@cur_power
 11008   0046A4  6A30               	clrf	(turnRight@cur_power+1)^0,c
 11009   0046A6                     l3274:
 11010   0046A6  BE30               	btfsc	(turnRight@cur_power+1)^0,7,c
 11011   0046A8  EF5A  F023         	goto	u2070
 11012   0046AC  EF58  F023         	goto	u2071
 11013   0046B0                     u2071:
 11014   0046B0  EF5C  F023         	goto	l3278
 11015   0046B4                     u2070:
 11016   0046B4  EFA9  F023         	goto	l663
 11017   0046B8                     l3278:
 11018                           
 11019                           ;dc_motor.c: 446:         mL->power = cur_power+mL->compensation;
 11020   0046B8  EE20 F009          	lfsr	2,9
 11021   0046BC  5023               	movf	turnRight@mL^0,w,c
 11022   0046BE  26D9               	addwf	fsr2l,f,c
 11023   0046C0  5024               	movf	(turnRight@mL+1)^0,w,c
 11024   0046C2  22DA               	addwfc	fsr2h,f,c
 11025   0046C4  50DF               	movf	indf2,w,c
 11026   0046C6  242F               	addwf	turnRight@cur_power^0,w,c
 11027   0046C8  C023  FFD9         	movff	turnRight@mL,fsr2l
 11028   0046CC  C024  FFDA         	movff	turnRight@mL+1,fsr2h
 11029   0046D0  6EDF               	movwf	indf2,c
 11030                           
 11031                           ;dc_motor.c: 447:         mR->power = cur_power+mR->compensation;
 11032   0046D2  EE20 F009          	lfsr	2,9
 11033   0046D6  5025               	movf	turnRight@mR^0,w,c
 11034   0046D8  26D9               	addwf	fsr2l,f,c
 11035   0046DA  5026               	movf	(turnRight@mR+1)^0,w,c
 11036   0046DC  22DA               	addwfc	fsr2h,f,c
 11037   0046DE  50DF               	movf	indf2,w,c
 11038   0046E0  242F               	addwf	turnRight@cur_power^0,w,c
 11039   0046E2  C025  FFD9         	movff	turnRight@mR,fsr2l
 11040   0046E6  C026  FFDA         	movff	turnRight@mR+1,fsr2h
 11041   0046EA  6EDF               	movwf	indf2,c
 11042   0046EC                     
 11043                           ;dc_motor.c: 448:         setMotorPWM(mL);
 11044   0046EC  C023  F01D         	movff	turnRight@mL,setMotorPWM@m
 11045   0046F0  C024  F01E         	movff	turnRight@mL+1,setMotorPWM@m+1
 11046   0046F4  EC97  F024         	call	_setMotorPWM	;wreg free
 11047   0046F8                     
 11048                           ;dc_motor.c: 449:         setMotorPWM(mR);
 11049   0046F8  C025  F01D         	movff	turnRight@mR,setMotorPWM@m
 11050   0046FC  C026  F01E         	movff	turnRight@mR+1,setMotorPWM@m+1
 11051   004700  EC97  F024         	call	_setMotorPWM	;wreg free
 11052   004704                     
 11053                           ;dc_motor.c: 450:         for (i=0;i<turnRamp;i++) {
 11054   004704  0E00               	movlw	0
 11055   004706  6E2E               	movwf	(turnRight@i+1)^0,c
 11056   004708  0E00               	movlw	0
 11057   00470A  6E2D               	movwf	turnRight@i^0,c
 11058   00470C  EF92  F023         	goto	l660
 11059   004710                     l3286:
 11060                           
 11061                           ;dc_motor.c: 451:             _delay((unsigned long)((5)*(64000000/4000.0)));
 11062   004710  0E68               	movlw	104
 11063   004712  6E2A               	movwf	??_turnRight^0,c
 11064   004714  0EE4               	movlw	228
 11065   004716                     u5007:
 11066   004716  2EE8               	decfsz	wreg,f,c
 11067   004718  D7FE               	bra	u5007
 11068   00471A  2E2A               	decfsz	??_turnRight^0,f,c
 11069   00471C  D7FC               	bra	u5007
 11070   00471E  D000               	nop2	
 11071   004720                     
 11072                           ;dc_motor.c: 452:         }
 11073   004720  4A2D               	infsnz	turnRight@i^0,f,c
 11074   004722  2A2E               	incf	(turnRight@i+1)^0,f,c
 11075   004724                     l660:
 11076   004724  5029               	movf	turnRight@turnRamp^0,w,c
 11077   004726  6E2A               	movwf	??_turnRight^0,c
 11078   004728  6A2B               	clrf	(??_turnRight+1)^0,c
 11079   00472A  502A               	movf	??_turnRight^0,w,c
 11080   00472C  5C2D               	subwf	turnRight@i^0,w,c
 11081   00472E  502E               	movf	(turnRight@i+1)^0,w,c
 11082   004730  0A80               	xorlw	128
 11083   004732  6E2C               	movwf	(??_turnRight+2)^0,c
 11084   004734  502B               	movf	(??_turnRight+1)^0,w,c
 11085   004736  0A80               	xorlw	128
 11086   004738  582C               	subwfb	(??_turnRight+2)^0,w,c
 11087   00473A  A0D8               	btfss	status,0,c
 11088   00473C  EFA2  F023         	goto	u2081
 11089   004740  EFA4  F023         	goto	u2080
 11090   004744                     u2081:
 11091   004744  EF88  F023         	goto	l3286
 11092   004748                     u2080:
 11093   004748                     
 11094                           ;dc_motor.c: 453:     }
 11095   004748  062F               	decf	turnRight@cur_power^0,f,c
 11096   00474A  A0D8               	btfss	status,0,c
 11097   00474C  0630               	decf	(turnRight@cur_power+1)^0,f,c
 11098   00474E  EF53  F023         	goto	l3274
 11099   004752                     l663:
 11100   004752  0012               	return		;funcret
 11101   004754                     __end_of_turnRight:
 11102                           	callstack 0
 11103                           
 11104 ;; *************** function _turnLeft *****************
 11105 ;; Defined at:
 11106 ;;		line 393 in file "dc_motor.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;  mL              2   34[COMRAM] PTR struct DC_motor
 11109 ;;		 -> main@motorL(10), 
 11110 ;;  mR              2   36[COMRAM] PTR struct DC_motor
 11111 ;;		 -> main@motorR(10), 
 11112 ;;  turnSpeed       1   38[COMRAM] unsigned char 
 11113 ;;  turnDuration    1   39[COMRAM] unsigned char 
 11114 ;;  turnRamp        1   40[COMRAM] unsigned char 
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;  cur_power       2   46[COMRAM] int 
 11117 ;;  i               2   44[COMRAM] int 
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  1    wreg      void 
 11120 ;; Registers used:
 11121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11127 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11128 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11129 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11130 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11131 ;;Total ram usage:       14 bytes
 11132 ;; Hardware stack levels used: 1
 11133 ;; Hardware stack levels required when called: 8
 11134 ;; This function calls:
 11135 ;;		_setMotorPWM
 11136 ;; This function is called by:
 11137 ;;		_move
 11138 ;;		_returnHome
 11139 ;;		_lostReturnHome
 11140 ;;		_calibration
 11141 ;; This function uses a non-reentrant model
 11142 ;;
 11143                           
 11144                           	psect	text36
 11145   004754                     __ptext36:
 11146                           	callstack 0
 11147   004754                     _turnLeft:
 11148                           	callstack 21
 11149   004754                     
 11150                           ;dc_motor.c: 393: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 394: {;dc_motor.c: 395:     mL->dire
      +                          ction = 0;
 11151   004754  EE20 F001          	lfsr	2,1
 11152   004758  5023               	movf	turnLeft@mL^0,w,c
 11153   00475A  26D9               	addwf	fsr2l,f,c
 11154   00475C  5024               	movf	(turnLeft@mL+1)^0,w,c
 11155   00475E  22DA               	addwfc	fsr2h,f,c
 11156   004760  6ADF               	clrf	indf2,c
 11157                           
 11158                           ;dc_motor.c: 396:     mR->direction = 1;
 11159   004762  EE20 F001          	lfsr	2,1
 11160   004766  5025               	movf	turnLeft@mR^0,w,c
 11161   004768  26D9               	addwf	fsr2l,f,c
 11162   00476A  5026               	movf	(turnLeft@mR+1)^0,w,c
 11163   00476C  22DA               	addwfc	fsr2h,f,c
 11164   00476E  0E01               	movlw	1
 11165   004770  6EDF               	movwf	indf2,c
 11166   004772                     
 11167                           ;dc_motor.c: 397:     int i;;dc_motor.c: 398:     int cur_power;;dc_motor.c: 399:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 11168   004772  0E00               	movlw	0
 11169   004774  6E30               	movwf	(turnLeft@cur_power+1)^0,c
 11170   004776  0E01               	movlw	1
 11171   004778  6E2F               	movwf	turnLeft@cur_power^0,c
 11172   00477A  EF09  F024         	goto	l3312
 11173   00477E                     l3298:
 11174                           
 11175                           ;dc_motor.c: 400:         mL->power = cur_power+mL->compensation;
 11176   00477E  EE20 F009          	lfsr	2,9
 11177   004782  5023               	movf	turnLeft@mL^0,w,c
 11178   004784  26D9               	addwf	fsr2l,f,c
 11179   004786  5024               	movf	(turnLeft@mL+1)^0,w,c
 11180   004788  22DA               	addwfc	fsr2h,f,c
 11181   00478A  50DF               	movf	indf2,w,c
 11182   00478C  242F               	addwf	turnLeft@cur_power^0,w,c
 11183   00478E  C023  FFD9         	movff	turnLeft@mL,fsr2l
 11184   004792  C024  FFDA         	movff	turnLeft@mL+1,fsr2h
 11185   004796  6EDF               	movwf	indf2,c
 11186                           
 11187                           ;dc_motor.c: 401:         mR->power = cur_power+mR->compensation;
 11188   004798  EE20 F009          	lfsr	2,9
 11189   00479C  5025               	movf	turnLeft@mR^0,w,c
 11190   00479E  26D9               	addwf	fsr2l,f,c
 11191   0047A0  5026               	movf	(turnLeft@mR+1)^0,w,c
 11192   0047A2  22DA               	addwfc	fsr2h,f,c
 11193   0047A4  50DF               	movf	indf2,w,c
 11194   0047A6  242F               	addwf	turnLeft@cur_power^0,w,c
 11195   0047A8  C025  FFD9         	movff	turnLeft@mR,fsr2l
 11196   0047AC  C026  FFDA         	movff	turnLeft@mR+1,fsr2h
 11197   0047B0  6EDF               	movwf	indf2,c
 11198   0047B2                     
 11199                           ;dc_motor.c: 402:         setMotorPWM(mL);
 11200   0047B2  C023  F01D         	movff	turnLeft@mL,setMotorPWM@m
 11201   0047B6  C024  F01E         	movff	turnLeft@mL+1,setMotorPWM@m+1
 11202   0047BA  EC97  F024         	call	_setMotorPWM	;wreg free
 11203   0047BE                     
 11204                           ;dc_motor.c: 403:         setMotorPWM(mR);
 11205   0047BE  C025  F01D         	movff	turnLeft@mR,setMotorPWM@m
 11206   0047C2  C026  F01E         	movff	turnLeft@mR+1,setMotorPWM@m+1
 11207   0047C6  EC97  F024         	call	_setMotorPWM	;wreg free
 11208   0047CA                     
 11209                           ;dc_motor.c: 404:         for (i=0;i<turnRamp;i++) {
 11210   0047CA  0E00               	movlw	0
 11211   0047CC  6E2E               	movwf	(turnLeft@i+1)^0,c
 11212   0047CE  0E00               	movlw	0
 11213   0047D0  6E2D               	movwf	turnLeft@i^0,c
 11214   0047D2  EFF5  F023         	goto	l634
 11215   0047D6                     l3306:
 11216                           
 11217                           ;dc_motor.c: 405:             _delay((unsigned long)((5)*(64000000/4000.0)));
 11218   0047D6  0E68               	movlw	104
 11219   0047D8  6E2A               	movwf	??_turnLeft^0,c
 11220   0047DA  0EE4               	movlw	228
 11221   0047DC                     u5017:
 11222   0047DC  2EE8               	decfsz	wreg,f,c
 11223   0047DE  D7FE               	bra	u5017
 11224   0047E0  2E2A               	decfsz	??_turnLeft^0,f,c
 11225   0047E2  D7FC               	bra	u5017
 11226   0047E4  D000               	nop2	
 11227   0047E6                     
 11228                           ;dc_motor.c: 406:         }
 11229   0047E6  4A2D               	infsnz	turnLeft@i^0,f,c
 11230   0047E8  2A2E               	incf	(turnLeft@i+1)^0,f,c
 11231   0047EA                     l634:
 11232   0047EA  5029               	movf	turnLeft@turnRamp^0,w,c
 11233   0047EC  6E2A               	movwf	??_turnLeft^0,c
 11234   0047EE  6A2B               	clrf	(??_turnLeft+1)^0,c
 11235   0047F0  502A               	movf	??_turnLeft^0,w,c
 11236   0047F2  5C2D               	subwf	turnLeft@i^0,w,c
 11237   0047F4  502E               	movf	(turnLeft@i+1)^0,w,c
 11238   0047F6  0A80               	xorlw	128
 11239   0047F8  6E2C               	movwf	(??_turnLeft+2)^0,c
 11240   0047FA  502B               	movf	(??_turnLeft+1)^0,w,c
 11241   0047FC  0A80               	xorlw	128
 11242   0047FE  582C               	subwfb	(??_turnLeft+2)^0,w,c
 11243   004800  A0D8               	btfss	status,0,c
 11244   004802  EF05  F024         	goto	u2091
 11245   004806  EF07  F024         	goto	u2090
 11246   00480A                     u2091:
 11247   00480A  EFEB  F023         	goto	l3306
 11248   00480E                     u2090:
 11249   00480E                     
 11250                           ;dc_motor.c: 407:     }
 11251   00480E  4A2F               	infsnz	turnLeft@cur_power^0,f,c
 11252   004810  2A30               	incf	(turnLeft@cur_power+1)^0,f,c
 11253   004812                     l3312:
 11254   004812  5027               	movf	turnLeft@turnSpeed^0,w,c
 11255   004814  6E2A               	movwf	??_turnLeft^0,c
 11256   004816  6A2B               	clrf	(??_turnLeft+1)^0,c
 11257   004818  502F               	movf	turnLeft@cur_power^0,w,c
 11258   00481A  5C2A               	subwf	??_turnLeft^0,w,c
 11259   00481C  502B               	movf	(??_turnLeft+1)^0,w,c
 11260   00481E  0A80               	xorlw	128
 11261   004820  6E2C               	movwf	(??_turnLeft+2)^0,c
 11262   004822  5030               	movf	(turnLeft@cur_power+1)^0,w,c
 11263   004824  0A80               	xorlw	128
 11264   004826  582C               	subwfb	(??_turnLeft+2)^0,w,c
 11265   004828  B0D8               	btfsc	status,0,c
 11266   00482A  EF19  F024         	goto	u2101
 11267   00482E  EF1B  F024         	goto	u2100
 11268   004832                     u2101:
 11269   004832  EFBF  F023         	goto	l3298
 11270   004836                     u2100:
 11271   004836                     
 11272                           ;dc_motor.c: 409:     for (i=0;i<turnDuration;i++) {
 11273   004836  0E00               	movlw	0
 11274   004838  6E2E               	movwf	(turnLeft@i+1)^0,c
 11275   00483A  0E00               	movlw	0
 11276   00483C  6E2D               	movwf	turnLeft@i^0,c
 11277   00483E  EF2B  F024         	goto	l638
 11278   004842                     l3316:
 11279                           
 11280                           ;dc_motor.c: 410:             _delay((unsigned long)((5)*(64000000/4000.0)));
 11281   004842  0E68               	movlw	104
 11282   004844  6E2A               	movwf	??_turnLeft^0,c
 11283   004846  0EE4               	movlw	228
 11284   004848                     u5027:
 11285   004848  2EE8               	decfsz	wreg,f,c
 11286   00484A  D7FE               	bra	u5027
 11287   00484C  2E2A               	decfsz	??_turnLeft^0,f,c
 11288   00484E  D7FC               	bra	u5027
 11289   004850  D000               	nop2	
 11290   004852                     
 11291                           ;dc_motor.c: 411:         }
 11292   004852  4A2D               	infsnz	turnLeft@i^0,f,c
 11293   004854  2A2E               	incf	(turnLeft@i+1)^0,f,c
 11294   004856                     l638:
 11295   004856  5028               	movf	turnLeft@turnDuration^0,w,c
 11296   004858  6E2A               	movwf	??_turnLeft^0,c
 11297   00485A  6A2B               	clrf	(??_turnLeft+1)^0,c
 11298   00485C  502A               	movf	??_turnLeft^0,w,c
 11299   00485E  5C2D               	subwf	turnLeft@i^0,w,c
 11300   004860  502E               	movf	(turnLeft@i+1)^0,w,c
 11301   004862  0A80               	xorlw	128
 11302   004864  6E2C               	movwf	(??_turnLeft+2)^0,c
 11303   004866  502B               	movf	(??_turnLeft+1)^0,w,c
 11304   004868  0A80               	xorlw	128
 11305   00486A  582C               	subwfb	(??_turnLeft+2)^0,w,c
 11306   00486C  A0D8               	btfss	status,0,c
 11307   00486E  EF3B  F024         	goto	u2111
 11308   004872  EF3D  F024         	goto	u2110
 11309   004876                     u2111:
 11310   004876  EF21  F024         	goto	l3316
 11311   00487A                     u2110:
 11312   00487A                     
 11313                           ;dc_motor.c: 413:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 11314   00487A  C027  F02F         	movff	turnLeft@turnSpeed,turnLeft@cur_power
 11315   00487E  6A30               	clrf	(turnLeft@cur_power+1)^0,c
 11316   004880                     l3320:
 11317   004880  BE30               	btfsc	(turnLeft@cur_power+1)^0,7,c
 11318   004882  EF47  F024         	goto	u2120
 11319   004886  EF45  F024         	goto	u2121
 11320   00488A                     u2121:
 11321   00488A  EF49  F024         	goto	l3324
 11322   00488E                     u2120:
 11323   00488E  EF96  F024         	goto	l646
 11324   004892                     l3324:
 11325                           
 11326                           ;dc_motor.c: 414:         mL->power = cur_power+mL->compensation;
 11327   004892  EE20 F009          	lfsr	2,9
 11328   004896  5023               	movf	turnLeft@mL^0,w,c
 11329   004898  26D9               	addwf	fsr2l,f,c
 11330   00489A  5024               	movf	(turnLeft@mL+1)^0,w,c
 11331   00489C  22DA               	addwfc	fsr2h,f,c
 11332   00489E  50DF               	movf	indf2,w,c
 11333   0048A0  242F               	addwf	turnLeft@cur_power^0,w,c
 11334   0048A2  C023  FFD9         	movff	turnLeft@mL,fsr2l
 11335   0048A6  C024  FFDA         	movff	turnLeft@mL+1,fsr2h
 11336   0048AA  6EDF               	movwf	indf2,c
 11337                           
 11338                           ;dc_motor.c: 415:         mR->power = cur_power+mR->compensation;
 11339   0048AC  EE20 F009          	lfsr	2,9
 11340   0048B0  5025               	movf	turnLeft@mR^0,w,c
 11341   0048B2  26D9               	addwf	fsr2l,f,c
 11342   0048B4  5026               	movf	(turnLeft@mR+1)^0,w,c
 11343   0048B6  22DA               	addwfc	fsr2h,f,c
 11344   0048B8  50DF               	movf	indf2,w,c
 11345   0048BA  242F               	addwf	turnLeft@cur_power^0,w,c
 11346   0048BC  C025  FFD9         	movff	turnLeft@mR,fsr2l
 11347   0048C0  C026  FFDA         	movff	turnLeft@mR+1,fsr2h
 11348   0048C4  6EDF               	movwf	indf2,c
 11349   0048C6                     
 11350                           ;dc_motor.c: 416:         setMotorPWM(mL);
 11351   0048C6  C023  F01D         	movff	turnLeft@mL,setMotorPWM@m
 11352   0048CA  C024  F01E         	movff	turnLeft@mL+1,setMotorPWM@m+1
 11353   0048CE  EC97  F024         	call	_setMotorPWM	;wreg free
 11354   0048D2                     
 11355                           ;dc_motor.c: 417:         setMotorPWM(mR);
 11356   0048D2  C025  F01D         	movff	turnLeft@mR,setMotorPWM@m
 11357   0048D6  C026  F01E         	movff	turnLeft@mR+1,setMotorPWM@m+1
 11358   0048DA  EC97  F024         	call	_setMotorPWM	;wreg free
 11359   0048DE                     
 11360                           ;dc_motor.c: 418:         for (i=0;i<turnRamp;i++) {
 11361   0048DE  0E00               	movlw	0
 11362   0048E0  6E2E               	movwf	(turnLeft@i+1)^0,c
 11363   0048E2  0E00               	movlw	0
 11364   0048E4  6E2D               	movwf	turnLeft@i^0,c
 11365   0048E6  EF7F  F024         	goto	l643
 11366   0048EA                     l3332:
 11367                           
 11368                           ;dc_motor.c: 419:             _delay((unsigned long)((5)*(64000000/4000.0)));
 11369   0048EA  0E68               	movlw	104
 11370   0048EC  6E2A               	movwf	??_turnLeft^0,c
 11371   0048EE  0EE4               	movlw	228
 11372   0048F0                     u5037:
 11373   0048F0  2EE8               	decfsz	wreg,f,c
 11374   0048F2  D7FE               	bra	u5037
 11375   0048F4  2E2A               	decfsz	??_turnLeft^0,f,c
 11376   0048F6  D7FC               	bra	u5037
 11377   0048F8  D000               	nop2	
 11378   0048FA                     
 11379                           ;dc_motor.c: 420:         }
 11380   0048FA  4A2D               	infsnz	turnLeft@i^0,f,c
 11381   0048FC  2A2E               	incf	(turnLeft@i+1)^0,f,c
 11382   0048FE                     l643:
 11383   0048FE  5029               	movf	turnLeft@turnRamp^0,w,c
 11384   004900  6E2A               	movwf	??_turnLeft^0,c
 11385   004902  6A2B               	clrf	(??_turnLeft+1)^0,c
 11386   004904  502A               	movf	??_turnLeft^0,w,c
 11387   004906  5C2D               	subwf	turnLeft@i^0,w,c
 11388   004908  502E               	movf	(turnLeft@i+1)^0,w,c
 11389   00490A  0A80               	xorlw	128
 11390   00490C  6E2C               	movwf	(??_turnLeft+2)^0,c
 11391   00490E  502B               	movf	(??_turnLeft+1)^0,w,c
 11392   004910  0A80               	xorlw	128
 11393   004912  582C               	subwfb	(??_turnLeft+2)^0,w,c
 11394   004914  A0D8               	btfss	status,0,c
 11395   004916  EF8F  F024         	goto	u2131
 11396   00491A  EF91  F024         	goto	u2130
 11397   00491E                     u2131:
 11398   00491E  EF75  F024         	goto	l3332
 11399   004922                     u2130:
 11400   004922                     
 11401                           ;dc_motor.c: 421:     }
 11402   004922  062F               	decf	turnLeft@cur_power^0,f,c
 11403   004924  A0D8               	btfss	status,0,c
 11404   004926  0630               	decf	(turnLeft@cur_power+1)^0,f,c
 11405   004928  EF40  F024         	goto	l3320
 11406   00492C                     l646:
 11407   00492C  0012               	return		;funcret
 11408   00492E                     __end_of_turnLeft:
 11409                           	callstack 0
 11410                           
 11411 ;; *************** function _setMotorPWM *****************
 11412 ;; Defined at:
 11413 ;;		line 69 in file "dc_motor.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;  m               2   28[COMRAM] PTR struct DC_motor
 11416 ;;		 -> main@motorR(10), main@motorL(10), 
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;  negDuty         1   33[COMRAM] unsigned char 
 11419 ;;  posDuty         1   32[COMRAM] unsigned char 
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  1    wreg      void 
 11422 ;; Registers used:
 11423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11424 ;; Tracked objects:
 11425 ;;		On entry : 0/0
 11426 ;;		On exit  : 0/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11432 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11433 ;;Total ram usage:        6 bytes
 11434 ;; Hardware stack levels used: 1
 11435 ;; Hardware stack levels required when called: 7
 11436 ;; This function calls:
 11437 ;;		___lwdiv
 11438 ;;		___wmul
 11439 ;; This function is called by:
 11440 ;;		_stop
 11441 ;;		_turnLeft
 11442 ;;		_turnRight
 11443 ;;		_fullSpeedAhead
 11444 ;;		_reverseOneSquare
 11445 ;;		_wallAdjust
 11446 ;;		_reverseWallAdjust
 11447 ;;		_reverseShort
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           	psect	text37
 11452   00492E                     __ptext37:
 11453                           	callstack 0
 11454   00492E                     _setMotorPWM:
 11455                           	callstack 22
 11456   00492E                     
 11457                           ;dc_motor.c: 69: void setMotorPWM(DC_motor *m);dc_motor.c: 70: {;dc_motor.c: 71:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 73:     if(m->brakemode) {
 11458   00492E  EE20 F002          	lfsr	2,2
 11459   004932  501D               	movf	setMotorPWM@m^0,w,c
 11460   004934  26D9               	addwf	fsr2l,f,c
 11461   004936  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11462   004938  22DA               	addwfc	fsr2h,f,c
 11463   00493A  50DF               	movf	indf2,w,c
 11464   00493C  B4D8               	btfsc	status,2,c
 11465   00493E  EFA3  F024         	goto	u1911
 11466   004942  EFA5  F024         	goto	u1910
 11467   004946                     u1911:
 11468   004946  EFD9  F024         	goto	l3144
 11469   00494A                     u1910:
 11470   00494A                     
 11471                           ;dc_motor.c: 74:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11472   00494A  C01D  FFD9         	movff	setMotorPWM@m,fsr2l
 11473   00494E  C01E  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11474   004952  50DF               	movf	indf2,w,c
 11475   004954  6E1F               	movwf	??_setMotorPWM^0,c
 11476   004956  501F               	movf	??_setMotorPWM^0,w,c
 11477   004958  6E10               	movwf	___wmul@multiplier^0,c
 11478   00495A  6A11               	clrf	(___wmul@multiplier+1)^0,c
 11479   00495C  EE20 F003          	lfsr	2,3
 11480   004960  501D               	movf	setMotorPWM@m^0,w,c
 11481   004962  26D9               	addwf	fsr2l,f,c
 11482   004964  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11483   004966  22DA               	addwfc	fsr2h,f,c
 11484   004968  CFDE F012          	movff	postinc2,___wmul@multiplicand
 11485   00496C  CFDD F013          	movff	postdec2,___wmul@multiplicand+1
 11486   004970  EC3C  F02A         	call	___wmul	;wreg free
 11487   004974  C010  F016         	movff	?___wmul,___lwdiv@dividend
 11488   004978  C011  F017         	movff	?___wmul+1,___lwdiv@dividend+1
 11489   00497C  0E00               	movlw	0
 11490   00497E  6E19               	movwf	(___lwdiv@divisor+1)^0,c
 11491   004980  0E64               	movlw	100
 11492   004982  6E18               	movwf	___lwdiv@divisor^0,c
 11493   004984  EC6C  F028         	call	___lwdiv	;wreg free
 11494   004988  EE20 F003          	lfsr	2,3
 11495   00498C  501D               	movf	setMotorPWM@m^0,w,c
 11496   00498E  26D9               	addwf	fsr2l,f,c
 11497   004990  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11498   004992  22DA               	addwfc	fsr2h,f,c
 11499   004994  50DF               	movf	indf2,w,c
 11500   004996  6E20               	movwf	(??_setMotorPWM+1)^0,c
 11501   004998  5016               	movf	?___lwdiv^0,w,c
 11502   00499A  5C20               	subwf	(??_setMotorPWM+1)^0,w,c
 11503   00499C  6E21               	movwf	setMotorPWM@posDuty^0,c
 11504   00499E                     
 11505                           ;dc_motor.c: 75:         negDuty=m->PWMperiod;
 11506   00499E  EE20 F003          	lfsr	2,3
 11507   0049A2  501D               	movf	setMotorPWM@m^0,w,c
 11508   0049A4  26D9               	addwf	fsr2l,f,c
 11509   0049A6  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11510   0049A8  22DA               	addwfc	fsr2h,f,c
 11511   0049AA  50DF               	movf	indf2,w,c
 11512   0049AC  6E22               	movwf	setMotorPWM@negDuty^0,c
 11513                           
 11514                           ;dc_motor.c: 76:     }
 11515   0049AE  EFFC  F024         	goto	l3148
 11516   0049B2                     l3144:
 11517                           
 11518                           ;dc_motor.c: 78:         posDuty=0;
 11519   0049B2  0E00               	movlw	0
 11520   0049B4  6E21               	movwf	setMotorPWM@posDuty^0,c
 11521   0049B6                     
 11522                           ;dc_motor.c: 79:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11523   0049B6  C01D  FFD9         	movff	setMotorPWM@m,fsr2l
 11524   0049BA  C01E  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11525   0049BE  50DF               	movf	indf2,w,c
 11526   0049C0  6E1F               	movwf	??_setMotorPWM^0,c
 11527   0049C2  501F               	movf	??_setMotorPWM^0,w,c
 11528   0049C4  6E10               	movwf	___wmul@multiplier^0,c
 11529   0049C6  6A11               	clrf	(___wmul@multiplier+1)^0,c
 11530   0049C8  EE20 F003          	lfsr	2,3
 11531   0049CC  501D               	movf	setMotorPWM@m^0,w,c
 11532   0049CE  26D9               	addwf	fsr2l,f,c
 11533   0049D0  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11534   0049D2  22DA               	addwfc	fsr2h,f,c
 11535   0049D4  CFDE F012          	movff	postinc2,___wmul@multiplicand
 11536   0049D8  CFDD F013          	movff	postdec2,___wmul@multiplicand+1
 11537   0049DC  EC3C  F02A         	call	___wmul	;wreg free
 11538   0049E0  C010  F016         	movff	?___wmul,___lwdiv@dividend
 11539   0049E4  C011  F017         	movff	?___wmul+1,___lwdiv@dividend+1
 11540   0049E8  0E00               	movlw	0
 11541   0049EA  6E19               	movwf	(___lwdiv@divisor+1)^0,c
 11542   0049EC  0E64               	movlw	100
 11543   0049EE  6E18               	movwf	___lwdiv@divisor^0,c
 11544   0049F0  EC6C  F028         	call	___lwdiv	;wreg free
 11545   0049F4  5016               	movf	?___lwdiv^0,w,c
 11546   0049F6  6E22               	movwf	setMotorPWM@negDuty^0,c
 11547   0049F8                     l3148:
 11548                           
 11549                           ;dc_motor.c: 82:     if (m->direction) {
 11550   0049F8  EE20 F001          	lfsr	2,1
 11551   0049FC  501D               	movf	setMotorPWM@m^0,w,c
 11552   0049FE  26D9               	addwf	fsr2l,f,c
 11553   004A00  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11554   004A02  22DA               	addwfc	fsr2h,f,c
 11555   004A04  50DF               	movf	indf2,w,c
 11556   004A06  B4D8               	btfsc	status,2,c
 11557   004A08  EF08  F025         	goto	u1921
 11558   004A0C  EF0A  F025         	goto	u1920
 11559   004A10                     u1921:
 11560   004A10  EF2C  F025         	goto	l3152
 11561   004A14                     u1920:
 11562   004A14                     
 11563                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11564   004A14  EE20 F005          	lfsr	2,5
 11565   004A18  501D               	movf	setMotorPWM@m^0,w,c
 11566   004A1A  26D9               	addwf	fsr2l,f,c
 11567   004A1C  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11568   004A1E  22DA               	addwfc	fsr2h,f,c
 11569   004A20  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11570   004A24  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11571   004A28  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11572   004A2C  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11573   004A30  C021  FFDF         	movff	setMotorPWM@posDuty,indf2
 11574                           
 11575                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11576   004A34  EE20 F007          	lfsr	2,7
 11577   004A38  501D               	movf	setMotorPWM@m^0,w,c
 11578   004A3A  26D9               	addwf	fsr2l,f,c
 11579   004A3C  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11580   004A3E  22DA               	addwfc	fsr2h,f,c
 11581   004A40  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11582   004A44  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11583   004A48  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11584   004A4C  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11585   004A50  C022  FFDF         	movff	setMotorPWM@negDuty,indf2
 11586                           
 11587                           ;dc_motor.c: 85:     } else {
 11588   004A54  EF4C  F025         	goto	l552
 11589   004A58                     l3152:
 11590                           
 11591                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
 11592   004A58  EE20 F005          	lfsr	2,5
 11593   004A5C  501D               	movf	setMotorPWM@m^0,w,c
 11594   004A5E  26D9               	addwf	fsr2l,f,c
 11595   004A60  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11596   004A62  22DA               	addwfc	fsr2h,f,c
 11597   004A64  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11598   004A68  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11599   004A6C  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11600   004A70  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11601   004A74  C022  FFDF         	movff	setMotorPWM@negDuty,indf2
 11602                           
 11603                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
 11604   004A78  EE20 F007          	lfsr	2,7
 11605   004A7C  501D               	movf	setMotorPWM@m^0,w,c
 11606   004A7E  26D9               	addwf	fsr2l,f,c
 11607   004A80  501E               	movf	(setMotorPWM@m+1)^0,w,c
 11608   004A82  22DA               	addwfc	fsr2h,f,c
 11609   004A84  CFDE F01F          	movff	postinc2,??_setMotorPWM
 11610   004A88  CFDD F020          	movff	postdec2,??_setMotorPWM+1
 11611   004A8C  C01F  FFD9         	movff	??_setMotorPWM,fsr2l
 11612   004A90  C020  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11613   004A94  C021  FFDF         	movff	setMotorPWM@posDuty,indf2
 11614   004A98                     l552:
 11615   004A98  0012               	return		;funcret
 11616   004A9A                     __end_of_setMotorPWM:
 11617                           	callstack 0
 11618                           
 11619 ;; *************** function ___wmul *****************
 11620 ;; Defined at:
 11621 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
 11622 ;; Parameters:    Size  Location     Type
 11623 ;;  multiplier      2   15[COMRAM] unsigned int 
 11624 ;;  multiplicand    2   17[COMRAM] unsigned int 
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;  product         2   19[COMRAM] unsigned int 
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  2   15[COMRAM] unsigned int 
 11629 ;; Registers used:
 11630 ;;		wreg, status,2, status,0, prodl, prodh
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11640 ;;Total ram usage:        6 bytes
 11641 ;; Hardware stack levels used: 1
 11642 ;; Hardware stack levels required when called: 6
 11643 ;; This function calls:
 11644 ;;		Nothing
 11645 ;; This function is called by:
 11646 ;;		_setMotorPWM
 11647 ;; This function uses a non-reentrant model
 11648 ;;
 11649                           
 11650                           	psect	text38
 11651   005478                     __ptext38:
 11652                           	callstack 0
 11653   005478                     ___wmul:
 11654                           	callstack 22
 11655   005478  5010               	movf	___wmul@multiplier^0,w,c
 11656   00547A  0212               	mulwf	___wmul@multiplicand^0,c
 11657   00547C  CFF3 F014          	movff	prodl,___wmul@product
 11658   005480  CFF4 F015          	movff	prodh,___wmul@product+1
 11659   005484  5010               	movf	___wmul@multiplier^0,w,c
 11660   005486  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 11661   005488  50F3               	movf	243,w,c
 11662   00548A  2615               	addwf	(___wmul@product+1)^0,f,c
 11663   00548C  5011               	movf	(___wmul@multiplier+1)^0,w,c
 11664   00548E  0212               	mulwf	___wmul@multiplicand^0,c
 11665   005490  50F3               	movf	243,w,c
 11666   005492  2615               	addwf	(___wmul@product+1)^0,f,c
 11667   005494  C014  F010         	movff	___wmul@product,?___wmul
 11668   005498  C015  F011         	movff	___wmul@product+1,?___wmul+1
 11669   00549C  0012               	return		;funcret
 11670   00549E                     __end_of___wmul:
 11671                           	callstack 0
 11672                           
 11673 ;; *************** function ___lwdiv *****************
 11674 ;; Defined at:
 11675 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 11676 ;; Parameters:    Size  Location     Type
 11677 ;;  dividend        2   21[COMRAM] unsigned int 
 11678 ;;  divisor         2   23[COMRAM] unsigned int 
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;  quotient        2   25[COMRAM] unsigned int 
 11681 ;;  counter         1   27[COMRAM] unsigned char 
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  2   21[COMRAM] unsigned int 
 11684 ;; Registers used:
 11685 ;;		wreg, status,2, status,0
 11686 ;; Tracked objects:
 11687 ;;		On entry : 0/0
 11688 ;;		On exit  : 0/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11692 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11694 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11695 ;;Total ram usage:        7 bytes
 11696 ;; Hardware stack levels used: 1
 11697 ;; Hardware stack levels required when called: 6
 11698 ;; This function calls:
 11699 ;;		Nothing
 11700 ;; This function is called by:
 11701 ;;		_color_clear_init_interrupts
 11702 ;;		_setMotorPWM
 11703 ;; This function uses a non-reentrant model
 11704 ;;
 11705                           
 11706                           	psect	text39
 11707   0050D8                     __ptext39:
 11708                           	callstack 0
 11709   0050D8                     ___lwdiv:
 11710                           	callstack 22
 11711   0050D8  0E00               	movlw	0
 11712   0050DA  6E1B               	movwf	(___lwdiv@quotient+1)^0,c
 11713   0050DC  0E00               	movlw	0
 11714   0050DE  6E1A               	movwf	___lwdiv@quotient^0,c
 11715   0050E0  5018               	movf	___lwdiv@divisor^0,w,c
 11716   0050E2  1019               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11717   0050E4  B4D8               	btfsc	status,2,c
 11718   0050E6  EF77  F028         	goto	u1881
 11719   0050EA  EF79  F028         	goto	u1880
 11720   0050EE                     u1881:
 11721   0050EE  EFA1  F028         	goto	l1280
 11722   0050F2                     u1880:
 11723   0050F2  0E01               	movlw	1
 11724   0050F4  6E1C               	movwf	___lwdiv@counter^0,c
 11725   0050F6  EF81  F028         	goto	l3112
 11726   0050FA                     l3110:
 11727   0050FA  90D8               	bcf	status,0,c
 11728   0050FC  3618               	rlcf	___lwdiv@divisor^0,f,c
 11729   0050FE  3619               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11730   005100  2A1C               	incf	___lwdiv@counter^0,f,c
 11731   005102                     l3112:
 11732   005102  AE19               	btfss	(___lwdiv@divisor+1)^0,7,c
 11733   005104  EF86  F028         	goto	u1891
 11734   005108  EF88  F028         	goto	u1890
 11735   00510C                     u1891:
 11736   00510C  EF7D  F028         	goto	l3110
 11737   005110                     u1890:
 11738   005110                     l3114:
 11739   005110  90D8               	bcf	status,0,c
 11740   005112  361A               	rlcf	___lwdiv@quotient^0,f,c
 11741   005114  361B               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11742   005116  5018               	movf	___lwdiv@divisor^0,w,c
 11743   005118  5C16               	subwf	___lwdiv@dividend^0,w,c
 11744   00511A  5019               	movf	(___lwdiv@divisor+1)^0,w,c
 11745   00511C  5817               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11746   00511E  A0D8               	btfss	status,0,c
 11747   005120  EF94  F028         	goto	u1901
 11748   005124  EF96  F028         	goto	u1900
 11749   005128                     u1901:
 11750   005128  EF9B  F028         	goto	l3122
 11751   00512C                     u1900:
 11752   00512C  5018               	movf	___lwdiv@divisor^0,w,c
 11753   00512E  5E16               	subwf	___lwdiv@dividend^0,f,c
 11754   005130  5019               	movf	(___lwdiv@divisor+1)^0,w,c
 11755   005132  5A17               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11756   005134  801A               	bsf	___lwdiv@quotient^0,0,c
 11757   005136                     l3122:
 11758   005136  90D8               	bcf	status,0,c
 11759   005138  3219               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11760   00513A  3218               	rrcf	___lwdiv@divisor^0,f,c
 11761   00513C  2E1C               	decfsz	___lwdiv@counter^0,f,c
 11762   00513E  EF88  F028         	goto	l3114
 11763   005142                     l1280:
 11764   005142  C01A  F016         	movff	___lwdiv@quotient,?___lwdiv
 11765   005146  C01B  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11766   00514A  0012               	return		;funcret
 11767   00514C                     __end_of___lwdiv:
 11768                           	callstack 0
 11769                           
 11770 ;; *************** function _batteryLevel *****************
 11771 ;; Defined at:
 11772 ;;		line 6 in file "battery.c"
 11773 ;; Parameters:    Size  Location     Type
 11774 ;;		None
 11775 ;; Auto vars:     Size  Location     Type
 11776 ;;  batteryQuart    1   24[COMRAM] unsigned char 
 11777 ;;  batteryVolta    1   23[COMRAM] unsigned char 
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  1    wreg      void 
 11780 ;; Registers used:
 11781 ;;		wreg, status,2, status,0, cstack
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/0
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11791 ;;Total ram usage:        2 bytes
 11792 ;; Hardware stack levels used: 1
 11793 ;; Hardware stack levels required when called: 7
 11794 ;; This function calls:
 11795 ;;		_ADC_getval
 11796 ;;		_ADC_init
 11797 ;;		___awdiv
 11798 ;; This function is called by:
 11799 ;;		_main
 11800 ;; This function uses a non-reentrant model
 11801 ;;
 11802                           
 11803                           	psect	text40
 11804   005280                     __ptext40:
 11805                           	callstack 0
 11806   005280                     _batteryLevel:
 11807                           	callstack 23
 11808   005280                     
 11809                           ;battery.c: 7:     ADC_init();
 11810   005280  ECB1  F02A         	call	_ADC_init	;wreg free
 11811                           
 11812                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
 11813   005284  ECBE  F02A         	call	_ADC_getval	;wreg free
 11814   005288  6E18               	movwf	batteryLevel@batteryVoltage^0,c
 11815   00528A                     
 11816                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
 11817   00528A  C018  F010         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
 11818   00528E  6A11               	clrf	(___awdiv@dividend+1)^0,c
 11819   005290  0E00               	movlw	0
 11820   005292  6E13               	movwf	(___awdiv@divisor+1)^0,c
 11821   005294  0E18               	movlw	24
 11822   005296  6E12               	movwf	___awdiv@divisor^0,c
 11823   005298  ECCA  F026         	call	___awdiv	;wreg free
 11824   00529C  5010               	movf	?___awdiv^0,w,c
 11825   00529E  6E19               	movwf	batteryLevel@batteryQuarter^0,c
 11826   0052A0                     
 11827                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
 11828   0052A0  A219               	btfss	batteryLevel@batteryQuarter^0,1,c
 11829   0052A2  EF55  F029         	goto	u2671
 11830   0052A6  EF57  F029         	goto	u2670
 11831   0052AA                     u2671:
 11832   0052AA  EF5A  F029         	goto	l460
 11833   0052AE                     u2670:
 11834   0052AE  8E7C               	bsf	124,7,c	;volatile
 11835   0052B0  EF5B  F029         	goto	l461
 11836   0052B4                     l460:
 11837   0052B4  9E7C               	bcf	124,7,c	;volatile
 11838   0052B6                     l461:
 11839                           
 11840                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
 11841   0052B6  A019               	btfss	batteryLevel@batteryQuarter^0,0,c
 11842   0052B8  EF60  F029         	goto	u2681
 11843   0052BC  EF62  F029         	goto	u2680
 11844   0052C0                     u2681:
 11845   0052C0  EF65  F029         	goto	l462
 11846   0052C4                     u2680:
 11847   0052C4  8680               	bsf	128,3,c	;volatile
 11848   0052C6  EF66  F029         	goto	l464
 11849   0052CA                     l462:
 11850   0052CA  9680               	bcf	128,3,c	;volatile
 11851   0052CC                     l464:
 11852   0052CC  0012               	return		;funcret
 11853   0052CE                     __end_of_batteryLevel:
 11854                           	callstack 0
 11855                           
 11856 ;; *************** function ___awdiv *****************
 11857 ;; Defined at:
 11858 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;  dividend        2   15[COMRAM] int 
 11861 ;;  divisor         2   17[COMRAM] int 
 11862 ;; Auto vars:     Size  Location     Type
 11863 ;;  quotient        2   21[COMRAM] int 
 11864 ;;  sign            1   20[COMRAM] unsigned char 
 11865 ;;  counter         1   19[COMRAM] unsigned char 
 11866 ;; Return value:  Size  Location     Type
 11867 ;;                  2   15[COMRAM] int 
 11868 ;; Registers used:
 11869 ;;		wreg, status,2, status,0
 11870 ;; Tracked objects:
 11871 ;;		On entry : 0/0
 11872 ;;		On exit  : 0/0
 11873 ;;		Unchanged: 0/0
 11874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11876 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11878 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11879 ;;Total ram usage:        8 bytes
 11880 ;; Hardware stack levels used: 1
 11881 ;; Hardware stack levels required when called: 6
 11882 ;; This function calls:
 11883 ;;		Nothing
 11884 ;; This function is called by:
 11885 ;;		_batteryLevel
 11886 ;; This function uses a non-reentrant model
 11887 ;;
 11888                           
 11889                           	psect	text41
 11890   004D94                     __ptext41:
 11891                           	callstack 0
 11892   004D94                     ___awdiv:
 11893                           	callstack 23
 11894   004D94  0E00               	movlw	0
 11895   004D96  6E15               	movwf	___awdiv@sign^0,c
 11896   004D98  BE13               	btfsc	(___awdiv@divisor+1)^0,7,c
 11897   004D9A  EFD3  F026         	goto	u2580
 11898   004D9E  EFD1  F026         	goto	u2581
 11899   004DA2                     u2581:
 11900   004DA2  EFD9  F026         	goto	l3798
 11901   004DA6                     u2580:
 11902   004DA6  6C12               	negf	___awdiv@divisor^0,c
 11903   004DA8  1E13               	comf	(___awdiv@divisor+1)^0,f,c
 11904   004DAA  B0D8               	btfsc	status,0,c
 11905   004DAC  2A13               	incf	(___awdiv@divisor+1)^0,f,c
 11906   004DAE  0E01               	movlw	1
 11907   004DB0  6E15               	movwf	___awdiv@sign^0,c
 11908   004DB2                     l3798:
 11909   004DB2  BE11               	btfsc	(___awdiv@dividend+1)^0,7,c
 11910   004DB4  EFE0  F026         	goto	u2590
 11911   004DB8  EFDE  F026         	goto	u2591
 11912   004DBC                     u2591:
 11913   004DBC  EFE6  F026         	goto	l3804
 11914   004DC0                     u2590:
 11915   004DC0  6C10               	negf	___awdiv@dividend^0,c
 11916   004DC2  1E11               	comf	(___awdiv@dividend+1)^0,f,c
 11917   004DC4  B0D8               	btfsc	status,0,c
 11918   004DC6  2A11               	incf	(___awdiv@dividend+1)^0,f,c
 11919   004DC8  0E01               	movlw	1
 11920   004DCA  1A15               	xorwf	___awdiv@sign^0,f,c
 11921   004DCC                     l3804:
 11922   004DCC  0E00               	movlw	0
 11923   004DCE  6E17               	movwf	(___awdiv@quotient+1)^0,c
 11924   004DD0  0E00               	movlw	0
 11925   004DD2  6E16               	movwf	___awdiv@quotient^0,c
 11926   004DD4  5012               	movf	___awdiv@divisor^0,w,c
 11927   004DD6  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
 11928   004DD8  B4D8               	btfsc	status,2,c
 11929   004DDA  EFF1  F026         	goto	u2601
 11930   004DDE  EFF3  F026         	goto	u2600
 11931   004DE2                     u2601:
 11932   004DE2  EF1B  F027         	goto	l3826
 11933   004DE6                     u2600:
 11934   004DE6  0E01               	movlw	1
 11935   004DE8  6E14               	movwf	___awdiv@counter^0,c
 11936   004DEA  EFFB  F026         	goto	l3812
 11937   004DEE                     l3810:
 11938   004DEE  90D8               	bcf	status,0,c
 11939   004DF0  3612               	rlcf	___awdiv@divisor^0,f,c
 11940   004DF2  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
 11941   004DF4  2A14               	incf	___awdiv@counter^0,f,c
 11942   004DF6                     l3812:
 11943   004DF6  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
 11944   004DF8  EF00  F027         	goto	u2611
 11945   004DFC  EF02  F027         	goto	u2610
 11946   004E00                     u2611:
 11947   004E00  EFF7  F026         	goto	l3810
 11948   004E04                     u2610:
 11949   004E04                     l3814:
 11950   004E04  90D8               	bcf	status,0,c
 11951   004E06  3616               	rlcf	___awdiv@quotient^0,f,c
 11952   004E08  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
 11953   004E0A  5012               	movf	___awdiv@divisor^0,w,c
 11954   004E0C  5C10               	subwf	___awdiv@dividend^0,w,c
 11955   004E0E  5013               	movf	(___awdiv@divisor+1)^0,w,c
 11956   004E10  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
 11957   004E12  A0D8               	btfss	status,0,c
 11958   004E14  EF0E  F027         	goto	u2621
 11959   004E18  EF10  F027         	goto	u2620
 11960   004E1C                     u2621:
 11961   004E1C  EF15  F027         	goto	l3822
 11962   004E20                     u2620:
 11963   004E20  5012               	movf	___awdiv@divisor^0,w,c
 11964   004E22  5E10               	subwf	___awdiv@dividend^0,f,c
 11965   004E24  5013               	movf	(___awdiv@divisor+1)^0,w,c
 11966   004E26  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
 11967   004E28  8016               	bsf	___awdiv@quotient^0,0,c
 11968   004E2A                     l3822:
 11969   004E2A  90D8               	bcf	status,0,c
 11970   004E2C  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
 11971   004E2E  3212               	rrcf	___awdiv@divisor^0,f,c
 11972   004E30  2E14               	decfsz	___awdiv@counter^0,f,c
 11973   004E32  EF02  F027         	goto	l3814
 11974   004E36                     l3826:
 11975   004E36  5015               	movf	___awdiv@sign^0,w,c
 11976   004E38  B4D8               	btfsc	status,2,c
 11977   004E3A  EF21  F027         	goto	u2631
 11978   004E3E  EF23  F027         	goto	u2630
 11979   004E42                     u2631:
 11980   004E42  EF27  F027         	goto	l3830
 11981   004E46                     u2630:
 11982   004E46  6C16               	negf	___awdiv@quotient^0,c
 11983   004E48  1E17               	comf	(___awdiv@quotient+1)^0,f,c
 11984   004E4A  B0D8               	btfsc	status,0,c
 11985   004E4C  2A17               	incf	(___awdiv@quotient+1)^0,f,c
 11986   004E4E                     l3830:
 11987   004E4E  C016  F010         	movff	___awdiv@quotient,?___awdiv
 11988   004E52  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
 11989   004E56  0012               	return		;funcret
 11990   004E58                     __end_of___awdiv:
 11991                           	callstack 0
 11992                           
 11993 ;; *************** function _ADC_init *****************
 11994 ;; Defined at:
 11995 ;;		line 9 in file "ADC.c"
 11996 ;; Parameters:    Size  Location     Type
 11997 ;;		None
 11998 ;; Auto vars:     Size  Location     Type
 11999 ;;		None
 12000 ;; Return value:  Size  Location     Type
 12001 ;;                  1    wreg      void 
 12002 ;; Registers used:
 12003 ;;		wreg, status,2
 12004 ;; Tracked objects:
 12005 ;;		On entry : 0/0
 12006 ;;		On exit  : 0/0
 12007 ;;		Unchanged: 0/0
 12008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12013 ;;Total ram usage:        0 bytes
 12014 ;; Hardware stack levels used: 1
 12015 ;; Hardware stack levels required when called: 6
 12016 ;; This function calls:
 12017 ;;		Nothing
 12018 ;; This function is called by:
 12019 ;;		_batteryLevel
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           	psect	text42
 12024   005562                     __ptext42:
 12025                           	callstack 0
 12026   005562                     _ADC_init:
 12027                           	callstack 23
 12028   005562                     
 12029                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 12030   005562  8C86               	bsf	134,6,c	;volatile
 12031                           
 12032                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 12033   005564  010E               	movlb	14	; () banked
 12034   005566  8DB4               	bsf	180,6,b	;volatile
 12035                           
 12036                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 12037   005568  010F               	movlb	15	; () banked
 12038   00556A  9958               	bcf	88,4,b	;volatile
 12039   00556C                     
 12040                           ; BSR set to: 15
 12041                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 12042   00556C  0EFC               	movlw	-4
 12043   00556E  1758               	andwf	88,f,b	;volatile
 12044                           
 12045                           ;ADC.c: 17:     ADPCH=0b101110;
 12046   005570  0E2E               	movlw	46
 12047   005572  6F5F               	movwf	95,b	;volatile
 12048   005574                     
 12049                           ; BSR set to: 15
 12050                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 12051   005574  9460               	bcf	96,2,c	;volatile
 12052   005576                     
 12053                           ; BSR set to: 15
 12054                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 12055   005576  8860               	bsf	96,4,c	;volatile
 12056   005578                     
 12057                           ; BSR set to: 15
 12058                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 12059   005578  8E60               	bsf	96,7,c	;volatile
 12060   00557A                     
 12061                           ; BSR set to: 15
 12062   00557A  0012               	return		;funcret
 12063   00557C                     __end_of_ADC_init:
 12064                           	callstack 0
 12065                           
 12066 ;; *************** function _ADC_getval *****************
 12067 ;; Defined at:
 12068 ;;		line 23 in file "ADC.c"
 12069 ;; Parameters:    Size  Location     Type
 12070 ;;		None
 12071 ;; Auto vars:     Size  Location     Type
 12072 ;;  tmpval          1   15[COMRAM] unsigned char 
 12073 ;; Return value:  Size  Location     Type
 12074 ;;                  1    wreg      unsigned char 
 12075 ;; Registers used:
 12076 ;;		wreg, status,2
 12077 ;; Tracked objects:
 12078 ;;		On entry : 0/0
 12079 ;;		On exit  : 0/0
 12080 ;;		Unchanged: 0/0
 12081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12086 ;;Total ram usage:        1 bytes
 12087 ;; Hardware stack levels used: 1
 12088 ;; Hardware stack levels required when called: 6
 12089 ;; This function calls:
 12090 ;;		Nothing
 12091 ;; This function is called by:
 12092 ;;		_batteryLevel
 12093 ;; This function uses a non-reentrant model
 12094 ;;
 12095                           
 12096                           	psect	text43
 12097   00557C                     __ptext43:
 12098                           	callstack 0
 12099   00557C                     _ADC_getval:
 12100                           	callstack 23
 12101   00557C                     
 12102                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
 12103   00557C  8060               	bsf	96,0,c	;volatile
 12104   00557E                     l446:
 12105   00557E  B060               	btfsc	96,0,c	;volatile
 12106   005580  EFC4  F02A         	goto	u2421
 12107   005584  EFC6  F02A         	goto	u2420
 12108   005588                     u2421:
 12109   005588  EFBF  F02A         	goto	l446
 12110   00558C                     u2420:
 12111   00558C                     
 12112                           ;ADC.c: 31:     tmpval = ADRESH;
 12113   00558C  CF64 F010          	movff	3940,ADC_getval@tmpval	;volatile
 12114   005590                     
 12115                           ;ADC.c: 35:     return tmpval;
 12116   005590  5010               	movf	ADC_getval@tmpval^0,w,c
 12117   005592  0012               	return		;funcret
 12118   005594                     __end_of_ADC_getval:
 12119                           	callstack 0
 12120                           
 12121 ;; *************** function _Timer0_init *****************
 12122 ;; Defined at:
 12123 ;;		line 7 in file "timers.c"
 12124 ;; Parameters:    Size  Location     Type
 12125 ;;		None
 12126 ;; Auto vars:     Size  Location     Type
 12127 ;;		None
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  1    wreg      void 
 12130 ;; Registers used:
 12131 ;;		wreg, status,2
 12132 ;; Tracked objects:
 12133 ;;		On entry : 0/0
 12134 ;;		On exit  : 0/0
 12135 ;;		Unchanged: 0/0
 12136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12141 ;;Total ram usage:        0 bytes
 12142 ;; Hardware stack levels used: 1
 12143 ;; Hardware stack levels required when called: 6
 12144 ;; This function calls:
 12145 ;;		Nothing
 12146 ;; This function is called by:
 12147 ;;		_main
 12148 ;; This function uses a non-reentrant model
 12149 ;;
 12150                           
 12151                           	psect	text44
 12152   005504                     __ptext44:
 12153                           	callstack 0
 12154   005504                     _Timer0_init:
 12155                           	callstack 24
 12156   005504                     
 12157                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 12158   005504  50D6               	movf	214,w,c	;volatile
 12159   005506  0B1F               	andlw	-225
 12160   005508  0940               	iorlw	64
 12161   00550A  6ED6               	movwf	214,c	;volatile
 12162   00550C                     
 12163                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 12164   00550C  88D6               	bsf	214,4,c	;volatile
 12165                           
 12166                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
 12167   00550E  50D6               	movf	214,w,c	;volatile
 12168   005510  0BF0               	andlw	-16
 12169   005512  090B               	iorlw	11
 12170   005514  6ED6               	movwf	214,c	;volatile
 12171   005516                     
 12172                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 12173   005516  88D5               	bsf	213,4,c	;volatile
 12174                           
 12175                           ;timers.c: 15:     TMR0H=0;
 12176   005518  0E00               	movlw	0
 12177   00551A  6ED4               	movwf	212,c	;volatile
 12178                           
 12179                           ;timers.c: 16:     TMR0L=0;
 12180   00551C  0E00               	movlw	0
 12181   00551E  6ED3               	movwf	211,c	;volatile
 12182   005520                     
 12183                           ;timers.c: 17:     T0CON0bits.T0EN=1;
 12184   005520  8ED5               	bsf	213,7,c	;volatile
 12185   005522  0012               	return		;funcret
 12186   005524                     __end_of_Timer0_init:
 12187                           	callstack 0
 12188                           
 12189 ;; *************** function _Interrupts_init *****************
 12190 ;; Defined at:
 12191 ;;		line 11 in file "interrupts.c"
 12192 ;; Parameters:    Size  Location     Type
 12193 ;;		None
 12194 ;; Auto vars:     Size  Location     Type
 12195 ;;		None
 12196 ;; Return value:  Size  Location     Type
 12197 ;;                  1    wreg      void 
 12198 ;; Registers used:
 12199 ;;		None
 12200 ;; Tracked objects:
 12201 ;;		On entry : 0/0
 12202 ;;		On exit  : 0/0
 12203 ;;		Unchanged: 0/0
 12204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12209 ;;Total ram usage:        0 bytes
 12210 ;; Hardware stack levels used: 1
 12211 ;; Hardware stack levels required when called: 6
 12212 ;; This function calls:
 12213 ;;		Nothing
 12214 ;; This function is called by:
 12215 ;;		_main
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           	psect	text45
 12220   005594                     __ptext45:
 12221                           	callstack 0
 12222   005594                     _Interrupts_init:
 12223                           	callstack 24
 12224   005594                     
 12225                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
 12226   005594  8082               	bsf	130,0,c	;volatile
 12227                           
 12228                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
 12229   005596  010E               	movlb	14	; () banked
 12230   005598  919A               	bcf	154,0,b	;volatile
 12231                           
 12232                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
 12233   00559A  8129               	bsf	41,0,b	;volatile
 12234                           
 12235                           ;interrupts.c: 17:     IPR0bits.INT0IP=1;
 12236   00559C  811F               	bsf	31,0,b	;volatile
 12237                           
 12238                           ;interrupts.c: 18:     INTCONbits.INT0EDG=0;
 12239   00559E  90F2               	bcf	242,0,c	;volatile
 12240                           
 12241                           ;interrupts.c: 29:     INTCONbits.PEIE=1;
 12242   0055A0  8CF2               	bsf	242,6,c	;volatile
 12243                           
 12244                           ;interrupts.c: 30:     INTCONbits.GIE=1;
 12245   0055A2  8EF2               	bsf	242,7,c	;volatile
 12246   0055A4                     
 12247                           ; BSR set to: 14
 12248   0055A4  0012               	return		;funcret
 12249   0055A6                     __end_of_Interrupts_init:
 12250                           	callstack 0
 12251                           
 12252 ;; *************** function _Buggy_init *****************
 12253 ;; Defined at:
 12254 ;;		line 7 in file "buggysetup.c"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;		None
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;		None
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  1    wreg      void 
 12261 ;; Registers used:
 12262 ;;		None
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12272 ;;Total ram usage:        0 bytes
 12273 ;; Hardware stack levels used: 1
 12274 ;; Hardware stack levels required when called: 6
 12275 ;; This function calls:
 12276 ;;		Nothing
 12277 ;; This function is called by:
 12278 ;;		_main
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           	psect	text46
 12283   005348                     __ptext46:
 12284                           	callstack 0
 12285   005348                     _Buggy_init:
 12286                           	callstack 24
 12287   005348                     
 12288                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
 12289   005348  9E7C               	bcf	124,7,c	;volatile
 12290                           
 12291                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
 12292   00534A  9E84               	bcf	132,7,c	;volatile
 12293                           
 12294                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
 12295   00534C  9680               	bcf	128,3,c	;volatile
 12296                           
 12297                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
 12298   00534E  9688               	bcf	136,3,c	;volatile
 12299                           
 12300                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
 12301   005350  8486               	bsf	134,2,c	;volatile
 12302                           
 12303                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
 12304   005352  010E               	movlb	14	; () banked
 12305   005354  95B4               	bcf	180,2,b	;volatile
 12306                           
 12307                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
 12308   005356  8686               	bsf	134,3,c	;volatile
 12309                           
 12310                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
 12311   005358  97B4               	bcf	180,3,b	;volatile
 12312                           
 12313                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
 12314   00535A  9280               	bcf	128,1,c	;volatile
 12315                           
 12316                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
 12317   00535C  9288               	bcf	136,1,c	;volatile
 12318                           
 12319                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
 12320   00535E  987C               	bcf	124,4,c	;volatile
 12321                           
 12322                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
 12323   005360  9884               	bcf	132,4,c	;volatile
 12324                           
 12325                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
 12326   005362  967C               	bcf	124,3,c	;volatile
 12327                           
 12328                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
 12329   005364  9684               	bcf	132,3,c	;volatile
 12330                           
 12331                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
 12332   005366  97A7               	bcf	167,3,b	;volatile
 12333                           
 12334                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
 12335   005368  9080               	bcf	128,0,c	;volatile
 12336                           
 12337                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
 12338   00536A  9088               	bcf	136,0,c	;volatile
 12339                           
 12340                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
 12341   00536C  907E               	bcf	126,0,c	;volatile
 12342                           
 12343                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
 12344   00536E  9086               	bcf	134,0,c	;volatile
 12345                           
 12346                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
 12347   005370  907F               	bcf	127,0,c	;volatile
 12348                           
 12349                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
 12350   005372  9087               	bcf	135,0,c	;volatile
 12351                           
 12352                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
 12353   005374  9E7D               	bcf	125,7,c	;volatile
 12354                           
 12355                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
 12356   005376  9E85               	bcf	133,7,c	;volatile
 12357                           
 12358                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
 12359   005378  9679               	bcf	121,3,c	;volatile
 12360                           
 12361                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
 12362   00537A  9681               	bcf	129,3,c	;volatile
 12363   00537C                     
 12364                           ; BSR set to: 14
 12365   00537C  0012               	return		;funcret
 12366   00537E                     __end_of_Buggy_init:
 12367                           	callstack 0
 12368                           
 12369 ;; *************** function _LowISR *****************
 12370 ;; Defined at:
 12371 ;;		line 69 in file "interrupts.c"
 12372 ;; Parameters:    Size  Location     Type
 12373 ;;		None
 12374 ;; Auto vars:     Size  Location     Type
 12375 ;;		None
 12376 ;; Return value:  Size  Location     Type
 12377 ;;                  1    wreg      void 
 12378 ;; Registers used:
 12379 ;;		wreg, status,2
 12380 ;; Tracked objects:
 12381 ;;		On entry : 0/0
 12382 ;;		On exit  : 0/0
 12383 ;;		Unchanged: 0/0
 12384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12387 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12388 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12389 ;;Total ram usage:        3 bytes
 12390 ;; Hardware stack levels used: 1
 12391 ;; Hardware stack levels required when called: 5
 12392 ;; This function calls:
 12393 ;;		Nothing
 12394 ;; This function is called by:
 12395 ;;		Interrupt level 1
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399                           	psect	intcodelo
 12400   000018                     __pintcodelo:
 12401                           	callstack 0
 12402   000018                     _LowISR:
 12403                           	callstack 20
 12404                           
 12405                           ; BSR set to: 14
 12406                           ;incstack = 0
 12407   000018  804F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 12408   00001A  CFD8 F00D          	movff	status,??_LowISR
 12409   00001E  CFE8 F00E          	movff	wreg,??_LowISR+1
 12410   000022  CFE0 F00F          	movff	bsr,??_LowISR+2
 12411   000026                     
 12412                           ;interrupts.c: 73:     if(PIR0bits.TMR0IF){
 12413   000026  010E               	movlb	14	; () banked
 12414   000028  AB33               	btfss	51,5,b	;volatile
 12415   00002A  EF19  F000         	goto	i1u363_21
 12416   00002E  EF1B  F000         	goto	i1u363_20
 12417   000032                     i1u363_21:
 12418   000032  EF24  F000         	goto	i1l365
 12419   000036                     i1u363_20:
 12420   000036                     
 12421                           ; BSR set to: 14
 12422                           ;interrupts.c: 74:         lost = 1;
 12423   000036  0E01               	movlw	1
 12424   000038  0100               	movlb	0	; () banked
 12425   00003A  6FF4               	movwf	_lost& (0+255),b
 12426                           
 12427                           ;interrupts.c: 75:         TMR0H=0;
 12428   00003C  0E00               	movlw	0
 12429   00003E  6ED4               	movwf	212,c	;volatile
 12430                           
 12431                           ;interrupts.c: 76:         TMR0L=0;
 12432   000040  0E00               	movlw	0
 12433   000042  6ED3               	movwf	211,c	;volatile
 12434   000044                     
 12435                           ; BSR set to: 0
 12436                           ;interrupts.c: 77:         PIR0bits.TMR0IF=0;
 12437   000044  010E               	movlb	14	; () banked
 12438   000046  9B33               	bcf	51,5,b	;volatile
 12439   000048                     i1l365:
 12440                           
 12441                           ; BSR set to: 14
 12442   000048  C00F  FFE0         	movff	??_LowISR+2,bsr
 12443   00004C  C00E  FFE8         	movff	??_LowISR+1,wreg
 12444   000050  C00D  FFD8         	movff	??_LowISR,status
 12445   000054  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 12446   000056  0010               	retfie	
 12447   000058                     __end_of_LowISR:
 12448                           	callstack 0
 12449                           
 12450 ;; *************** function _HighISR *****************
 12451 ;; Defined at:
 12452 ;;		line 38 in file "interrupts.c"
 12453 ;; Parameters:    Size  Location     Type
 12454 ;;		None
 12455 ;; Auto vars:     Size  Location     Type
 12456 ;;		None
 12457 ;; Return value:  Size  Location     Type
 12458 ;;                  1    wreg      void 
 12459 ;; Registers used:
 12460 ;;		wreg, status,2, status,0, cstack
 12461 ;; Tracked objects:
 12462 ;;		On entry : 0/0
 12463 ;;		On exit  : 0/0
 12464 ;;		Unchanged: 0/0
 12465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12470 ;;Total ram usage:        0 bytes
 12471 ;; Hardware stack levels used: 1
 12472 ;; Hardware stack levels required when called: 4
 12473 ;; This function calls:
 12474 ;;		i2_color_clear_init_interrupts
 12475 ;; This function is called by:
 12476 ;;		Interrupt level 2
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480                           	psect	intcode
 12481   000008                     __pintcode:
 12482                           	callstack 0
 12483   000008                     _HighISR:
 12484                           	callstack 20
 12485                           
 12486                           ; BSR set to: 14
 12487                           ;incstack = 0
 12488   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12489   00000A  EF61  F02A         	goto	int_func
 12490                           
 12491                           	psect	intcode_body
 12492   0054C2                     __pintcode_body:
 12493                           	callstack 20
 12494   0054C2                     int_func:
 12495                           	callstack 20
 12496   0054C2                     
 12497                           ;interrupts.c: 42:     if(PIR0bits.INT0IF){
 12498   0054C2  010E               	movlb	14	; () banked
 12499   0054C4  A133               	btfss	51,0,b	;volatile
 12500   0054C6  EF67  F02A         	goto	i2u362_41
 12501   0054CA  EF69  F02A         	goto	i2u362_40
 12502   0054CE                     i2u362_41:
 12503   0054CE  EF70  F02A         	goto	i2l359
 12504   0054D2                     i2u362_40:
 12505   0054D2                     
 12506                           ; BSR set to: 14
 12507                           ;interrupts.c: 43:         brightnessChange = 1;
 12508   0054D2  0E01               	movlw	1
 12509   0054D4  0100               	movlb	0	; () banked
 12510   0054D6  6FF5               	movwf	_brightnessChange& (0+255),b
 12511   0054D8                     
 12512                           ; BSR set to: 0
 12513                           ;interrupts.c: 44:         color_clear_init_interrupts();
 12514   0054D8  EC7F  F027         	call	i2_color_clear_init_interrupts	;wreg free
 12515   0054DC                     
 12516                           ;interrupts.c: 45:         PIR0bits.INT0IF = 0;
 12517   0054DC  010E               	movlb	14	; () banked
 12518   0054DE  9133               	bcf	51,0,b	;volatile
 12519   0054E0                     i2l359:
 12520                           
 12521                           ; BSR set to: 14
 12522   0054E0  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12523   0054E2  0011               	retfie		f
 12524   0054E4                     __end_of_HighISR:
 12525                           	callstack 0
 12526                           
 12527 ;; *************** function i2_color_clear_init_interrupts *****************
 12528 ;; Defined at:
 12529 ;;		line 27 in file "color.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;		None
 12532 ;; Auto vars:     Size  Location     Type
 12533 ;;  low_threshol    2   10[COMRAM] unsigned int 
 12534 ;;  high_thresho    2    8[COMRAM] unsigned int 
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  1    wreg      void 
 12537 ;; Registers used:
 12538 ;;		wreg, status,2, status,0, cstack
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12545 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12547 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12548 ;;Total ram usage:        5 bytes
 12549 ;; Hardware stack levels used: 1
 12550 ;; Hardware stack levels required when called: 3
 12551 ;; This function calls:
 12552 ;;		i2_I2C_2_Master_Start
 12553 ;;		i2_I2C_2_Master_Stop
 12554 ;;		i2_I2C_2_Master_Write
 12555 ;;		i2___lwdiv
 12556 ;;		i2_color_writetoaddr
 12557 ;; This function is called by:
 12558 ;;		_HighISR
 12559 ;; This function uses a non-reentrant model
 12560 ;;
 12561                           
 12562                           	psect	text49
 12563   004EFE                     __ptext49:
 12564                           	callstack 0
 12565   004EFE                     i2_color_clear_init_interrupts:
 12566                           	callstack 20
 12567   004EFE                     
 12568                           ;color.c: 29:     I2C_2_Master_Start();
 12569   004EFE  ECF8  F02A         	call	i2_I2C_2_Master_Start	;wreg free
 12570                           
 12571                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
 12572   004F02  0E52               	movlw	82
 12573   004F04  ECD9  F02A         	call	i2_I2C_2_Master_Write
 12574                           
 12575                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
 12576   004F08  0EE6               	movlw	230
 12577   004F0A  ECD9  F02A         	call	i2_I2C_2_Master_Write
 12578                           
 12579                           ;color.c: 32:     I2C_2_Master_Stop();
 12580   004F0E  ECF3  F02A         	call	i2_I2C_2_Master_Stop	;wreg free
 12581                           
 12582                           ;color.c: 38:     unsigned int high_threshold = ambient + (ambient/3);
 12583   004F12  C0FA  F001         	movff	_ambient,i2___lwdiv@dividend
 12584   004F16  C0FB  F002         	movff	_ambient+1,i2___lwdiv@dividend+1
 12585   004F1A  0E00               	movlw	0
 12586   004F1C  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 12587   004F1E  0E03               	movlw	3
 12588   004F20  6E03               	movwf	i2___lwdiv@divisor^0,c
 12589   004F22  ECA6  F028         	call	i2___lwdiv	;wreg free
 12590   004F26  0100               	movlb	0	; () banked
 12591   004F28  51FA               	movf	_ambient& (0+255),w,b
 12592   004F2A  2401               	addwf	?i2___lwdiv^0,w,c
 12593   004F2C  6E09               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
 12594   004F2E  51FB               	movf	(_ambient+1)& (0+255),w,b
 12595   004F30  2002               	addwfc	(?i2___lwdiv+1)^0,w,c
 12596   004F32  6E0A               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
 12597                           
 12598                           ;color.c: 39:     unsigned int low_threshold = ambient - (ambient/20);
 12599   004F34  C0FA  F001         	movff	_ambient,i2___lwdiv@dividend
 12600   004F38  C0FB  F002         	movff	_ambient+1,i2___lwdiv@dividend+1
 12601   004F3C  0E00               	movlw	0
 12602   004F3E  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 12603   004F40  0E14               	movlw	20
 12604   004F42  6E03               	movwf	i2___lwdiv@divisor^0,c
 12605   004F44  ECA6  F028         	call	i2___lwdiv	;wreg free
 12606   004F48  5001               	movf	?i2___lwdiv^0,w,c
 12607   004F4A  0100               	movlb	0	; () banked
 12608   004F4C  5DFA               	subwf	_ambient& (0+255),w,b
 12609   004F4E  6E0B               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
 12610   004F50  5002               	movf	(?i2___lwdiv+1)^0,w,c
 12611   004F52  59FB               	subwfb	(_ambient+1)& (0+255),w,b
 12612   004F54  6E0C               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
 12613                           
 12614                           ;color.c: 42:  color_writetoaddr(0x00, 0x13);
 12615   004F56  0E13               	movlw	19
 12616   004F58  6E03               	movwf	i2color_writetoaddr@value^0,c
 12617   004F5A  0E00               	movlw	0
 12618   004F5C  EC92  F02A         	call	i2_color_writetoaddr
 12619   004F60                     
 12620                           ;color.c: 43:     _delay((unsigned long)((3)*(64000000/4000.0)));
 12621   004F60  0E3F               	movlw	63
 12622   004F62  6E08               	movwf	??i2_color_clear_init_interrupts^0,c
 12623   004F64  0E55               	movlw	85
 12624   004F66                     i2u504_47:
 12625   004F66  2EE8               	decfsz	wreg,f,c
 12626   004F68  D7FE               	bra	i2u504_47
 12627   004F6A  2E08               	decfsz	??i2_color_clear_init_interrupts^0,f,c
 12628   004F6C  D7FC               	bra	i2u504_47
 12629   004F6E  0000               	nop	
 12630   004F70                     
 12631                           ;color.c: 44:     color_writetoaddr(0x07, (high_threshold >> 8));
 12632   004F70  500A               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
 12633   004F72  6E03               	movwf	i2color_writetoaddr@value^0,c
 12634   004F74  0E07               	movlw	7
 12635   004F76  EC92  F02A         	call	i2_color_writetoaddr
 12636   004F7A                     
 12637                           ;color.c: 45:     color_writetoaddr(0x06, (high_threshold & 0xFF));
 12638   004F7A  C009  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
 12639   004F7E  0E06               	movlw	6
 12640   004F80  EC92  F02A         	call	i2_color_writetoaddr
 12641   004F84                     
 12642                           ;color.c: 46:     color_writetoaddr(0x05, (low_threshold >> 8));
 12643   004F84  500C               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
 12644   004F86  6E03               	movwf	i2color_writetoaddr@value^0,c
 12645   004F88  0E05               	movlw	5
 12646   004F8A  EC92  F02A         	call	i2_color_writetoaddr
 12647   004F8E                     
 12648                           ;color.c: 47:     color_writetoaddr(0x04, (low_threshold & 0xFF));
 12649   004F8E  C00B  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
 12650   004F92  0E04               	movlw	4
 12651   004F94  EC92  F02A         	call	i2_color_writetoaddr
 12652   004F98                     
 12653                           ;color.c: 48:     color_writetoaddr(0x0C, 0b11);
 12654   004F98  0E03               	movlw	3
 12655   004F9A  6E03               	movwf	i2color_writetoaddr@value^0,c
 12656   004F9C  0E0C               	movlw	12
 12657   004F9E  EC92  F02A         	call	i2_color_writetoaddr
 12658   004FA2  0012               	return		;funcret
 12659   004FA4                     __end_ofi2_color_clear_init_interrupts:
 12660                           	callstack 0
 12661                           
 12662 ;; *************** function i2_color_writetoaddr *****************
 12663 ;; Defined at:
 12664 ;;		line 53 in file "color.c"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;  address         1    wreg     unsigned char 
 12667 ;;  value           1    2[COMRAM] unsigned char 
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;  address         1    3[COMRAM] unsigned char 
 12670 ;; Return value:  Size  Location     Type
 12671 ;;                  1    wreg      void 
 12672 ;; Registers used:
 12673 ;;		wreg, status,2, status,0, cstack
 12674 ;; Tracked objects:
 12675 ;;		On entry : 0/0
 12676 ;;		On exit  : 0/0
 12677 ;;		Unchanged: 0/0
 12678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12679 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12683 ;;Total ram usage:        2 bytes
 12684 ;; Hardware stack levels used: 1
 12685 ;; Hardware stack levels required when called: 2
 12686 ;; This function calls:
 12687 ;;		i2_I2C_2_Master_Start
 12688 ;;		i2_I2C_2_Master_Stop
 12689 ;;		i2_I2C_2_Master_Write
 12690 ;; This function is called by:
 12691 ;;		i2_color_clear_init_interrupts
 12692 ;; This function uses a non-reentrant model
 12693 ;;
 12694                           
 12695                           	psect	text50
 12696   005524                     __ptext50:
 12697                           	callstack 0
 12698   005524                     i2_color_writetoaddr:
 12699                           	callstack 20
 12700                           
 12701                           ;incstack = 0
 12702                           ;i2color_writetoaddr@address stored from wreg
 12703   005524  6E04               	movwf	i2color_writetoaddr@address^0,c
 12704   005526                     
 12705                           ;color.c: 54:     I2C_2_Master_Start();
 12706   005526  ECF8  F02A         	call	i2_I2C_2_Master_Start	;wreg free
 12707                           
 12708                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
 12709   00552A  0E52               	movlw	82
 12710   00552C  ECD9  F02A         	call	i2_I2C_2_Master_Write
 12711                           
 12712                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
 12713   005530  5004               	movf	i2color_writetoaddr@address^0,w,c
 12714   005532  0980               	iorlw	128
 12715   005534  ECD9  F02A         	call	i2_I2C_2_Master_Write
 12716                           
 12717                           ;color.c: 57:     I2C_2_Master_Write(value);
 12718   005538  5003               	movf	i2color_writetoaddr@value^0,w,c
 12719   00553A  ECD9  F02A         	call	i2_I2C_2_Master_Write
 12720                           
 12721                           ;color.c: 58:     I2C_2_Master_Stop();
 12722   00553E  ECF3  F02A         	call	i2_I2C_2_Master_Stop	;wreg free
 12723   005542  0012               	return		;funcret
 12724   005544                     __end_ofi2_color_writetoaddr:
 12725                           	callstack 0
 12726                           
 12727 ;; *************** function i2_I2C_2_Master_Write *****************
 12728 ;; Defined at:
 12729 ;;		line 45 in file "i2c.c"
 12730 ;; Parameters:    Size  Location     Type
 12731 ;;  data_byte       1    wreg     unsigned char 
 12732 ;; Auto vars:     Size  Location     Type
 12733 ;;  data_byte       1    1[COMRAM] unsigned char 
 12734 ;; Return value:  Size  Location     Type
 12735 ;;                  1    wreg      void 
 12736 ;; Registers used:
 12737 ;;		wreg, status,2, status,0, cstack
 12738 ;; Tracked objects:
 12739 ;;		On entry : 0/0
 12740 ;;		On exit  : 0/0
 12741 ;;		Unchanged: 0/0
 12742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12747 ;;Total ram usage:        1 bytes
 12748 ;; Hardware stack levels used: 1
 12749 ;; Hardware stack levels required when called: 1
 12750 ;; This function calls:
 12751 ;;		i2_I2C_2_Master_Idle
 12752 ;; This function is called by:
 12753 ;;		i2_color_clear_init_interrupts
 12754 ;;		i2_color_writetoaddr
 12755 ;; This function uses a non-reentrant model
 12756 ;;
 12757                           
 12758                           	psect	text51
 12759   0055B2                     __ptext51:
 12760                           	callstack 0
 12761   0055B2                     i2_I2C_2_Master_Write:
 12762                           	callstack 20
 12763                           
 12764                           ;incstack = 0
 12765                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 12766   0055B2  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 12767   0055B4                     
 12768                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 12769   0055B4  EC28  F02A         	call	i2_I2C_2_Master_Idle	;wreg free
 12770   0055B8                     
 12771                           ;i2c.c: 48:   SSP2BUF = data_byte;
 12772   0055B8  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 12773   0055BC  0012               	return		;funcret
 12774   0055BE                     __end_ofi2_I2C_2_Master_Write:
 12775                           	callstack 0
 12776                           
 12777 ;; *************** function i2_I2C_2_Master_Stop *****************
 12778 ;; Defined at:
 12779 ;;		line 39 in file "i2c.c"
 12780 ;; Parameters:    Size  Location     Type
 12781 ;;		None
 12782 ;; Auto vars:     Size  Location     Type
 12783 ;;		None
 12784 ;; Return value:  Size  Location     Type
 12785 ;;                  1    wreg      void 
 12786 ;; Registers used:
 12787 ;;		wreg, status,2, status,0, cstack
 12788 ;; Tracked objects:
 12789 ;;		On entry : 0/0
 12790 ;;		On exit  : 0/0
 12791 ;;		Unchanged: 0/0
 12792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12797 ;;Total ram usage:        0 bytes
 12798 ;; Hardware stack levels used: 1
 12799 ;; Hardware stack levels required when called: 1
 12800 ;; This function calls:
 12801 ;;		i2_I2C_2_Master_Idle
 12802 ;; This function is called by:
 12803 ;;		i2_color_clear_init_interrupts
 12804 ;;		i2_color_writetoaddr
 12805 ;; This function uses a non-reentrant model
 12806 ;;
 12807                           
 12808                           	psect	text52
 12809   0055E6                     __ptext52:
 12810                           	callstack 0
 12811   0055E6                     i2_I2C_2_Master_Stop:
 12812                           	callstack 20
 12813   0055E6                     
 12814                           ;i2c.c: 41:   I2C_2_Master_Idle();
 12815   0055E6  EC28  F02A         	call	i2_I2C_2_Master_Idle	;wreg free
 12816   0055EA                     
 12817                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 12818   0055EA  010E               	movlb	14	; () banked
 12819   0055EC  85DA               	bsf	218,2,b	;volatile
 12820   0055EE                     
 12821                           ; BSR set to: 14
 12822   0055EE  0012               	return		;funcret
 12823   0055F0                     __end_ofi2_I2C_2_Master_Stop:
 12824                           	callstack 0
 12825                           
 12826 ;; *************** function i2_I2C_2_Master_Start *****************
 12827 ;; Defined at:
 12828 ;;		line 27 in file "i2c.c"
 12829 ;; Parameters:    Size  Location     Type
 12830 ;;		None
 12831 ;; Auto vars:     Size  Location     Type
 12832 ;;		None
 12833 ;; Return value:  Size  Location     Type
 12834 ;;                  1    wreg      void 
 12835 ;; Registers used:
 12836 ;;		wreg, status,2, status,0, cstack
 12837 ;; Tracked objects:
 12838 ;;		On entry : 0/0
 12839 ;;		On exit  : 0/0
 12840 ;;		Unchanged: 0/0
 12841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12846 ;;Total ram usage:        0 bytes
 12847 ;; Hardware stack levels used: 1
 12848 ;; Hardware stack levels required when called: 1
 12849 ;; This function calls:
 12850 ;;		i2_I2C_2_Master_Idle
 12851 ;; This function is called by:
 12852 ;;		i2_color_clear_init_interrupts
 12853 ;;		i2_color_writetoaddr
 12854 ;; This function uses a non-reentrant model
 12855 ;;
 12856                           
 12857                           	psect	text53
 12858   0055F0                     __ptext53:
 12859                           	callstack 0
 12860   0055F0                     i2_I2C_2_Master_Start:
 12861                           	callstack 20
 12862   0055F0                     
 12863                           ;i2c.c: 29:   I2C_2_Master_Idle();
 12864   0055F0  EC28  F02A         	call	i2_I2C_2_Master_Idle	;wreg free
 12865   0055F4                     
 12866                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 12867   0055F4  010E               	movlb	14	; () banked
 12868   0055F6  81DA               	bsf	218,0,b	;volatile
 12869   0055F8                     
 12870                           ; BSR set to: 14
 12871   0055F8  0012               	return		;funcret
 12872   0055FA                     __end_ofi2_I2C_2_Master_Start:
 12873                           	callstack 0
 12874                           
 12875 ;; *************** function i2_I2C_2_Master_Idle *****************
 12876 ;; Defined at:
 12877 ;;		line 22 in file "i2c.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;		None
 12880 ;; Auto vars:     Size  Location     Type
 12881 ;;		None
 12882 ;; Return value:  Size  Location     Type
 12883 ;;                  1    wreg      void 
 12884 ;; Registers used:
 12885 ;;		wreg, status,2, status,0
 12886 ;; Tracked objects:
 12887 ;;		On entry : 0/0
 12888 ;;		On exit  : 0/0
 12889 ;;		Unchanged: 0/0
 12890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12893 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12895 ;;Total ram usage:        1 bytes
 12896 ;; Hardware stack levels used: 1
 12897 ;; This function calls:
 12898 ;;		Nothing
 12899 ;; This function is called by:
 12900 ;;		i2_I2C_2_Master_Start
 12901 ;;		i2_I2C_2_Master_Stop
 12902 ;;		i2_I2C_2_Master_Write
 12903 ;; This function uses a non-reentrant model
 12904 ;;
 12905                           
 12906                           	psect	text54
 12907   005450                     __ptext54:
 12908                           	callstack 0
 12909   005450                     i2_I2C_2_Master_Idle:
 12910                           	callstack 20
 12911   005450                     i2l267:
 12912   005450  010E               	movlb	14	; () banked
 12913   005452  B5D8               	btfsc	216,2,b	;volatile
 12914   005454  EF2E  F02A         	goto	i2u193_41
 12915   005458  EF30  F02A         	goto	i2u193_40
 12916   00545C                     i2u193_41:
 12917   00545C  EF28  F02A         	goto	i2l267
 12918   005460                     i2u193_40:
 12919   005460                     
 12920                           ; BSR set to: 14
 12921   005460  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 12922   005464  0E1F               	movlw	31
 12923   005466  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 12924   005468  A4D8               	btfss	status,2,c
 12925   00546A  EF39  F02A         	goto	i2u194_41
 12926   00546E  EF3B  F02A         	goto	i2u194_40
 12927   005472                     i2u194_41:
 12928   005472  EF28  F02A         	goto	i2l267
 12929   005476                     i2u194_40:
 12930   005476                     
 12931                           ; BSR set to: 14
 12932   005476  0012               	return		;funcret
 12933   005478                     __end_ofi2_I2C_2_Master_Idle:
 12934                           	callstack 0
 12935                           
 12936 ;; *************** function i2___lwdiv *****************
 12937 ;; Defined at:
 12938 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 12939 ;; Parameters:    Size  Location     Type
 12940 ;;  dividend        2    0[COMRAM] unsigned int 
 12941 ;;  divisor         2    2[COMRAM] unsigned int 
 12942 ;; Auto vars:     Size  Location     Type
 12943 ;;  quotient        2    4[COMRAM] unsigned int 
 12944 ;;  counter         1    6[COMRAM] unsigned char 
 12945 ;; Return value:  Size  Location     Type
 12946 ;;                  2    0[COMRAM] unsigned int 
 12947 ;; Registers used:
 12948 ;;		wreg, status,2, status,0
 12949 ;; Tracked objects:
 12950 ;;		On entry : 0/0
 12951 ;;		On exit  : 0/0
 12952 ;;		Unchanged: 0/0
 12953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12955 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12957 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12958 ;;Total ram usage:        7 bytes
 12959 ;; Hardware stack levels used: 1
 12960 ;; This function calls:
 12961 ;;		Nothing
 12962 ;; This function is called by:
 12963 ;;		i2_color_clear_init_interrupts
 12964 ;; This function uses a non-reentrant model
 12965 ;;
 12966                           
 12967                           	psect	text55
 12968   00514C                     __ptext55:
 12969                           	callstack 0
 12970   00514C                     i2___lwdiv:
 12971                           	callstack 22
 12972   00514C  0E00               	movlw	0
 12973   00514E  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
 12974   005150  0E00               	movlw	0
 12975   005152  6E05               	movwf	i2___lwdiv@quotient^0,c
 12976   005154  5003               	movf	i2___lwdiv@divisor^0,w,c
 12977   005156  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 12978   005158  B4D8               	btfsc	status,2,c
 12979   00515A  EFB1  F028         	goto	i2u264_41
 12980   00515E  EFB3  F028         	goto	i2u264_40
 12981   005162                     i2u264_41:
 12982   005162  EFDB  F028         	goto	i2l1280
 12983   005166                     i2u264_40:
 12984   005166  0E01               	movlw	1
 12985   005168  6E07               	movwf	i2___lwdiv@counter^0,c
 12986   00516A  EFBB  F028         	goto	i2l3844
 12987   00516E                     i2l3842:
 12988   00516E  90D8               	bcf	status,0,c
 12989   005170  3603               	rlcf	i2___lwdiv@divisor^0,f,c
 12990   005172  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 12991   005174  2A07               	incf	i2___lwdiv@counter^0,f,c
 12992   005176                     i2l3844:
 12993   005176  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 12994   005178  EFC0  F028         	goto	i2u265_41
 12995   00517C  EFC2  F028         	goto	i2u265_40
 12996   005180                     i2u265_41:
 12997   005180  EFB7  F028         	goto	i2l3842
 12998   005184                     i2u265_40:
 12999   005184                     i2l3846:
 13000   005184  90D8               	bcf	status,0,c
 13001   005186  3605               	rlcf	i2___lwdiv@quotient^0,f,c
 13002   005188  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 13003   00518A  5003               	movf	i2___lwdiv@divisor^0,w,c
 13004   00518C  5C01               	subwf	i2___lwdiv@dividend^0,w,c
 13005   00518E  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 13006   005190  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 13007   005192  A0D8               	btfss	status,0,c
 13008   005194  EFCE  F028         	goto	i2u266_41
 13009   005198  EFD0  F028         	goto	i2u266_40
 13010   00519C                     i2u266_41:
 13011   00519C  EFD5  F028         	goto	i2l3854
 13012   0051A0                     i2u266_40:
 13013   0051A0  5003               	movf	i2___lwdiv@divisor^0,w,c
 13014   0051A2  5E01               	subwf	i2___lwdiv@dividend^0,f,c
 13015   0051A4  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 13016   0051A6  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 13017   0051A8  8005               	bsf	i2___lwdiv@quotient^0,0,c
 13018   0051AA                     i2l3854:
 13019   0051AA  90D8               	bcf	status,0,c
 13020   0051AC  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 13021   0051AE  3203               	rrcf	i2___lwdiv@divisor^0,f,c
 13022   0051B0  2E07               	decfsz	i2___lwdiv@counter^0,f,c
 13023   0051B2  EFC2  F028         	goto	i2l3846
 13024   0051B6                     i2l1280:
 13025   0051B6  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 13026   0051BA  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 13027   0051BE  0012               	return		;funcret
 13028   0051C0                     __end_ofi2___lwdiv:
 13029                           	callstack 0
 13030                           
 13031                           	psect	smallconst
 13032   000E00                     __psmallconst:
 13033                           	callstack 0
 13034   000E00  00                 	db	0
 13035   000E01  00                 	db	0	; dummy byte at the end
 13036   000000                     
 13037                           	psect	rparam
 13038   000000                     
 13039                           	psect	temp
 13040   00004F                     btemp:
 13041                           	callstack 0
 13042   00004F                     	ds	1
 13043   000000                     int$flags	set	btemp
 13044   000000                     wtemp8	set	btemp+1
 13045   000000                     ttemp5	set	btemp+1
 13046   000000                     ttemp6	set	btemp+4
 13047   000000                     ttemp7	set	btemp+8
 13048                           
 13049                           	psect	config
 13050                           
 13051                           ;Config register CONFIG1L @ 0x300000
 13052                           ;	External Oscillator mode Selection bits
 13053                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 13054                           ;	Power-up default value for COSC bits
 13055                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13056   300000                     	org	3145728
 13057   300000  AA                 	db	170
 13058                           
 13059                           ;Config register CONFIG1H @ 0x300001
 13060                           ;	unspecified, using default values
 13061                           ;	Clock Out Enable bit
 13062                           ;	CLKOUTEN = 0x1, unprogrammed default
 13063                           ;	Clock Switch Enable bit
 13064                           ;	CSWEN = 0x1, unprogrammed default
 13065                           ;	Fail-Safe Clock Monitor Enable bit
 13066                           ;	FCMEN = 0x1, unprogrammed default
 13067   300001                     	org	3145729
 13068   300001  FF                 	db	255
 13069                           
 13070                           ;Config register CONFIG3L @ 0x300004
 13071                           ;	WDT Period Select bits
 13072                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13073                           ;	WDT operating mode
 13074                           ;	WDTE = OFF, WDT Disabled
 13075   300004                     	org	3145732
 13076   300004  9F                 	db	159
 13077                           
 13078                           ;Config register CONFIG3H @ 0x300005
 13079                           ;	unspecified, using default values
 13080                           ;	WDT Window Select bits
 13081                           ;	WDTCWS = 0x7, unprogrammed default
 13082                           ;	WDT input clock selector
 13083                           ;	WDTCCS = 0x7, unprogrammed default
 13084   300005                     	org	3145733
 13085   300005  FF                 	db	255
 13086                           tosu	equ	0xFFF
 13087                           tosh	equ	0xFFE
 13088                           tosl	equ	0xFFD
 13089                           stkptr	equ	0xFFC
 13090                           pclatu	equ	0xFFB
 13091                           pclath	equ	0xFFA
 13092                           pcl	equ	0xFF9
 13093                           tblptru	equ	0xFF8
 13094                           tblptrh	equ	0xFF7
 13095                           tblptrl	equ	0xFF6
 13096                           tablat	equ	0xFF5
 13097                           prodh	equ	0xFF4
 13098                           prodl	equ	0xFF3
 13099                           indf0	equ	0xFEF
 13100                           postinc0	equ	0xFEE
 13101                           postdec0	equ	0xFED
 13102                           preinc0	equ	0xFEC
 13103                           plusw0	equ	0xFEB
 13104                           fsr0h	equ	0xFEA
 13105                           fsr0l	equ	0xFE9
 13106                           wreg	equ	0xFE8
 13107                           indf1	equ	0xFE7
 13108                           postinc1	equ	0xFE6
 13109                           postdec1	equ	0xFE5
 13110                           preinc1	equ	0xFE4
 13111                           plusw1	equ	0xFE3
 13112                           fsr1h	equ	0xFE2
 13113                           fsr1l	equ	0xFE1
 13114                           bsr	equ	0xFE0
 13115                           indf2	equ	0xFDF
 13116                           postinc2	equ	0xFDE
 13117                           postdec2	equ	0xFDD
 13118                           preinc2	equ	0xFDC
 13119                           plusw2	equ	0xFDB
 13120                           fsr2h	equ	0xFDA
 13121                           fsr2l	equ	0xFD9
 13122                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      78
    BANK0           160     88     156
    BANK1           256    216     256
    BANK2           256      0     142
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK1[1]), 

    color_calibration@blue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@blue(BANK1[6]), 

    color_calibration@green	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@green(BANK1[6]), 

    color_calibration@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK1[6]), 

    color_calibration@lightblue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@lightblue(BANK1[6]), 

    color_calibration@orange	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@orange(BANK1[6]), 

    color_calibration@pink	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@pink(BANK1[6]), 

    color_calibration@red	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@red(BANK1[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    color_calibration@white	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@white(BANK1[6]), 

    color_calibration@yellow	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@yellow(BANK1[6]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseShort@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseShort@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseWallAdjust@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseWallAdjust@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseWallAdjust@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseWallAdjust@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseWallAdjust@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseWallAdjust@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    rgb_2_hsv@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK1[6]), 

    S33DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S33DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), main@motorR(BANK1[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    wallAdjust@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    wallAdjust@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_detect
    _main->_move
    _wallAdjust->_setMotorPWM
    _move->_returnHome
    _reverseShort->_setMotorPWM
    _returnHome->_reverseOneSquare
    _returnHome->_reverseWallAdjust
    _reverseWallAdjust->_setMotorPWM
    _lostReturnHome->_reverseOneSquare
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_detect->_max
    _color_detect->_min
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->___lwdiv
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_rgb_2_hsv
    _rgb_2_hsv->___aldiv
    ___lldiv->___lmul
    ___aldiv->___lmul
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2___lwdiv
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_calibration
    _color_calibration->_rgb_2_hsv

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               272   272      0  274799
                                             42 BANK0     46    46      0
                                              0 BANK1    216   216      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
        _color_clear_init_interrupts
                   _color_click_init
                       _color_detect
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                          _rgb_2_hsv
                               _stop
                         _wallAdjust
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _wallAdjust                                          16    10      6    5452
                                             34 COMRAM    16    10      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _move                                                19     2     17  128519
                                             72 COMRAM     2     2      0
                                              0 BANK0     17     0     17
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                       _reverseShort
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _reverseShort                                        14     8      6    7234
                                             34 COMRAM    14     8      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          23     7     16   66057
                                             49 COMRAM    23     7     16
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                  _reverseWallAdjust
                               _stop
                           _turnLeft
                          _turnRight
                        _white_Light
 ---------------------------------------------------------------------------------
 (3) _reverseWallAdjust                                   15     9      6    5107
                                             34 COMRAM    15     9      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      21     5     16   59872
                                             49 COMRAM    21     5     16
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    5573
                                             34 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    15     7      8    6777
                                             34 COMRAM    15     7      8
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2      69
                                             15 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    7765
                                             34 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        68    14     54    3036
                                             19 COMRAM    55     1     54
                                              0 BANK0     13    13      0
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    2274
                                             33 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0    1524
                                             28 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                            ___lwdiv
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             17 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20   10744
                                             63 COMRAM     2     2      0
                                             22 BANK0     20     0     20
                         _color_read
                          _rgb_2_hsv
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rgb_2_hsv                                           44    34     10    7135
                                             41 COMRAM    22    12     10
                                              0 BANK0     22    22      0
                            ___aldiv
                            ___lldiv
                             ___lmul
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (2) _min                                                  4     0      4     696
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _max                                                  4     0      4     696
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1586
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     922
                                             27 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             27 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2    1243
                                             19 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                             16 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                             16 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   36854
                                             48 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   13953
                                             34 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   21553
                                             34 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3805
                                             28 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     662
                                             21 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     543
                                             23 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _LowISR                                               3     3      0       0
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighISR                                              0     0      0     600
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (8) i2_color_clear_init_interrupts                        5     5      0     600
                                              7 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                          i2___lwdiv
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (9) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _rgb_2_hsv
       ___aldiv
         ___lmul (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _max
       _min
     _white_Light
   _color_clear_init_interrupts
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
     ___lwdiv
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
     _color_writetoaddr
   _color_detect
     _max
     _min
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _reverseWallAdjust
         _setMotorPWM
       _stop
       _turnLeft
       _turnRight
       _white_Light
     _reverseOneSquare
     _reverseShort
       _setMotorPWM
     _turnLeft
     _turnRight
   _resetTimer
   _rgb_2_hsv
   _stop
   _wallAdjust
     _setMotorPWM
   _white_Light

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2___lwdiv
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      66        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      8E       9       55.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D8     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4A      4E       1       83.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2E      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      64        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhlllh       E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRllllhh      A      0       0      47        0.0%
BITBIGSFRlllllh      9      0       0      61        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      63        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      59        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      60        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      62        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhllll       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     278      65        0.0%
DATA                 0      0     278       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 14:47:55 2024

                                _white_Light 549E                           reverseWallAdjust@i 002E  
                                         l91 2ACA                                           l93 2AD8  
                               ___awdiv@sign 0015                          reverseWallAdjust@mL 0023  
                        reverseWallAdjust@mR 0025                                           bsr 0FE0  
                        ___wmul@multiplicand 0012                           i2___lwdiv@dividend 0001  
              wallAdjust@wallReverseDuration 002D                             main@turnDuration 01B5  
                          ??_Interrupts_init 0010                                          l200 266E  
                                        l105 2ED6                                          l202 267C  
                                        l211 289E                                          l203 2724  
                                        l212 2946                                          l205 2732  
                                        l214 2954                                          l206 27DA  
                                        l223 53A0                                          l215 29FC  
                                        l160 439A                                          l224 53A8  
                                        l232 331E                                          l208 27E8  
                                        l152 5502                                          l209 2890  
                                        l218 53CC                                          l146 5346  
                                        l219 53D4                                          l155 54BA  
                                        l316 537C                                          l237 33B4  
                                        l157 54C0                                          l149 4EFC  
                                        l165 382E                                          l270 544E  
                                        l182 3B2C                                          l191 244C  
                                        l264 53FE                                          l353 55A4  
                                        l273 55DA                                          l193 245A  
                                        l282 55B0                                          l194 2502  
                                        l443 557A                                          l267 5428  
                                        l611 23C6                                          l460 52B4  
                                        l276 55E4                                          l196 2510  
                                        l188 3B2E                                          l700 34EA  
                                        l461 52B6                                          l285 530E  
                                        l197 25B8                                          l621 2440  
                                        l605 23C6                                          l446 557E  
                                        l462 52CA                                          l279 55D0  
                                        l199 25C6                                          l703 356E  
                                        l448 558C                                          l464 52CC  
                                        l552 4A98                                          l640 487A  
                                        l800 5218                                          l720 3786  
                                        l712 369C                                          l449 5592  
                                        l801 5228                                          l545 50D6  
                                        l634 47EA                                          l626 4C6A  
                                        l714 36C0                                          l643 48FE  
                                        l651 4610                                          l731 3EF6  
                                        l571 163A                                          l660 4724  
                                        l396 5560                                          l580 1CD2  
                                        l708 3630                                          l629 4CAC  
                                        l725 3E66                                          l717 3744  
                                        l646 492C                                          l638 4856  
                                        l734 3F7A                                          l742 4056  
                                        l663 4752                                          l655 467C  
                                        l823 5046                                          l751 416A  
                                        l816 5036                                          l672 4D92  
                                        l657 46A0                                          l681 449C  
                                        l737 3FBC                                          l729 3ED2  
                                        l762 3C34                                          l586 1CD2  
                                        l754 41AC                                          l746 40C2  
                                        l763 3C6A                                          l683 44B2  
                                        l780 5522                                          l668 4D46  
                                        l596 1D94                                          l748 40E6  
                                        l677 4430                                          l766 3CB8  
                                        l758 3C18                                          l686 4536  
                                        l694 345A                                          l767 3DA8  
                                        l783 55C6                                          l769 3DC8  
                                        l689 4578                                          l786 5426  
                                        l698 34C6                                          l868 4BA4  
                                        l789 549C                                          _max 53AA  
                                        _min 537E                              color_detect@HSV 0014  
                              ?_color_detect 0014                                          prod 0FF3  
                        i2_color_writetoaddr 5524                                          wreg 0FE8  
                            color_detect@red 001A    color_clear_init_interrupts@high_threshold 001E  
i2color_clear_init_interrupts@high_threshold 0009                                         l1020 4E56  
                                       l3100 5494                                         l3110 50FA  
                                       l3120 5134                                         l3112 5102  
                                       l1280 5142                                         l3104 50D8  
                                       l4000 2854                                         l3200 4C34  
                                       l3122 5136                                         l3114 5110  
                                       l3106 50E0                                         l3130 55A8  
                                       l4010 28D0                                         l4002 2874  
                                       l3210 4C8E                                         l3202 4C40  
                                       l3124 513C                                         l3116 5116  
                                       l3108 50F2                                         l3140 494A  
                                       l3300 47B2                                         l3220 55E0  
                                       l3132 55AC                                         l4020 2958  
                                       l4012 28E8                                         l4004 288C  
                                       l3204 4C4C                                         l4100 3446  
                                       l3118 512C                                         l3150 4A14  
                                       l3142 499E                                         l3310 480E  
                                       l3302 47BE                                         l3230 530A  
                                       l3222 52D0                                         l3126 55D2  
                                       l3134 55C8                                         l4030 29E0  
                                       l4022 2964                                         l4014 290A  
                                       l4006 28A2                                         l3206 4C58  
                                       l3214 4C98                                         l4110 34B2  
                                       l4102 3456                                         l1287 514A  
                                       l3152 4A58                                         l3144 49B2  
                                       l3320 4880                                         l3304 47CA  
                                       l3312 4812                                         l4040 3BB0  
                                       l3232 530C                                         l3224 52D4  
                                       l3128 55D6                                         l3136 55CC  
                                       l3160 54B0                                         l4032 29F8  
                                       l4024 2986                                         l4016 292A  
                                       l4008 28AE                                         l3216 54E6  
                                       l4200 387E                                         l3208 4C66  
                                       l3400 3E46                                         l4120 3536  
                                       l4112 34C2                                         l4104 347E  
                                       l3146 49B6                                         l3138 492E  
                                       l3330 48DE                                         l3314 4836  
                                       l3306 47D6                                         l3250 4598  
                                       l4050 3C64                                         l4042 3BD8  
                                       l4034 3B30                                         l3226 52DC  
                                       l3218 55DC                                         l3242 53AA  
                                       l4026 299E                                         l4018 2942  
                                       l4202 38B6                                         l4210 3920  
                                       l3170 4D0E                                         l3162 55BE  
                                       l3410 3EB2                                         l3402 3E52  
                                       l4130 3592                                         l4122 3542  
                                       l4114 34F0                                         l4106 3482  
                                       l3148 49F8                                         l3332 48EA  
                                       l3324 4892                                         l3316 4842  
                                       l3308 47E6                                         l3260 45FC  
                                       l3252 45A4                                         l4060 3CAA  
                                       l4052 3C78                                         l4044 3C26  
                                       l4036 3B58                                         l3228 52E4  
                                       l3500 4B62                                         l3244 53C0  
                                       l3236 537E                                         l4028 29C0  
                                       l4220 39B0                                         l4212 3942  
                                       l4204 38EE                                         l3180 4D6A  
                                       l3172 4D1A                                         l3164 4CAE  
                                       l3340 439C                                         l3420 3F0E  
                                       l3412 3EBE                                         l3404 3E62  
                                       l4300 1196                                         l4140 35F8  
                                       l4124 354E                                         l4108 34A6  
                                       l3334 48FA                                         l3326 48C6  
                                       l3318 4852                                         l3270 4668  
                                       l3262 460C                                         l3254 45D8  
                                       l4070 3D64                                         l4062 3CBC  
                                       l4054 3C82                                         l4046 3C42  
                                       l4038 3B70                                         l3094 5428  
                                       l3510 4B94                                         l3502 4B64  
                                       l3238 5394                                         l3158 54A0  
                                       l4230 3A14                                         l4214 3964  
                                       l4206 3910                                         l4222 39B4  
                                       l3174 4D26                                         l3182 4D6E  
                                       l3166 4CCE                                         l3350 4410  
                                       l3342 43B8                                         l3430 3F76  
                                       l3422 3F42                                         l3414 3ECE  
                                       l3406 3E8A                                         l4310 1234  
                                       l4302 11CE                                         l4150 3654  
                                       l4142 3604                                         l4126 355A  
                                       l4134 359C                                         l4118 3502  
                                       l4080 5516                                         l3600 5562  
                                       l3336 4922                                         l3328 48D2  
                                       l3280 46EC                                         l3272 4678  
                                       l3264 4634                                         l3256 45E4  
                                       l3248 457A                                         l4072 3DAC  
                                       l4064 3CE4                                         l4056 3C84  
                                       l4048 3C5A                                         l3096 5438  
                                       l3504 4B6E                                         l3440 51D0  
                                       l4240 3AF4                                         l4232 3A6E  
                                       l4224 39CA                                         l4216 396C  
                                       l4208 3918                                         l3176 4D32  
                                       l3168 4CDA                                         l3184 5400  
                                       l3360 447C                                         l3352 441C  
                                       l3344 43C4                                         l3192 4BA6  
                                       l4400 1F0E                                         l3432 3F9E  
                                       l3424 3F4E                                         l3416 3EFC  
                                       l3408 3E8E                                         l4320 12F8  
                                       l4312 124C                                         l4304 11E6  
                                       l4160 36C6                                         l4144 3610  
                                       l4152 3658                                         l4136 35B8  
                                       l4128 356A                                         l4082 5520  
                                       l3610 557C                                         l3602 556C  
                                       l3098 5478                                         l3290 4748  
                                       l3282 46F8                                         l3274 46A6  
                                       l3258 45F0                                         l3266 4638  
                                       l4074 3DC4                                         l4066 3CFC  
                                       l4058 3C9C                                         l3530 41E2  
                                       l3506 4B74                                         l3450 4FB4  
                                       l3442 51DE                                         l4242 3B06  
                                       l4226 39EC                                         l4234 3A72  
                                       l4218 398E                                         l3178 4D42  
                                       l3186 540C                                         l3370 44CA  
                                       l3362 4488                                         l3354 442C  
                                       l3346 43F8                                         l3194 4BEE  
                                       l4410 1FB8                                         l4402 1F26  
                                       l3426 3F5A                                         l4330 1396  
                                       l4314 1288                                         l4322 1318  
                                       l4306 1206                                         l4250 0E14  
                                       l4170 3724                                         l4154 367C  
                                       l4146 361C                                         l4138 35C4  
                                       l4090 33D2                                         l4084 5594  
                                       l4076 5504                                         l3612 5590  
                                       l3604 5574                                         l3284 4704  
                                       l3268 465C                                         l4068 3D3C  
                                       l3540 4336                                         l3532 423A  
                                       l3508 4B84                                         l3460 4FF6  
                                       l3452 4FCA                                         l3444 51EE  
                                       l4244 3B28                                         l4236 3A88  
                                       l4228 3A02                                         l3188 541E  
                                       l3380 4532                                         l3372 44FE  
                                       l3364 4498                                         l3356 4454  
                                       l3348 4404                                         l4420 2082  
                                       l4412 1FF4                                         l4404 1F62  
                                       l3428 3F66                                         l3436 3FA8  
                                       l3700 17DE                                         l3620 3FD0  
                                       l4340 1438                                         l4332 13B6  
                                       l4324 132A                                         l4316 12A8  
                                       l4308 1218                                         l4252 0E30  
                                       l4260 0ED8                                         l4172 3730  
                                       l4180 3772                                         l4164 36D8  
                                       l4156 3688                                         l4148 362C  
                                       l4092 33EE                                         l4078 550C  
                                       l3606 5576                                         l3294 4754  
                                       l3286 4710                                         l3278 46B8  
                                       l3542 4354                                         l3534 4258  
                                       l3526 41AE                                         l3470 4A9A  
                                       l3462 5014                                         l3454 4FD2  
                                       l3446 51F8                                         l3438 51C0  
                                       l3550 4ED4                                         l4238 3ADE  
                                       l4190 381E                                         l4182 3788  
                                       l3382 455A                                         l3374 450A  
                                       l3366 44B8                                         l3358 4458  
                                       l3198 4C00                                         l4430 2134  
                                       l4422 20A2                                         l4414 2012  
                                       l4406 1F80                                         l3390 3DD2  
                                       l3710 188C                                         l3702 17FA  
                                       l3630 4042                                         l3622 3FEA  
                                       l4350 14FC                                         l4342 1454  
                                       l4334 13EE                                         l4326 1346  
                                       l4318 12E0                                         l4270 0F76  
                                       l4262 0EEA                                         l4254 0E48  
                                       l4174 3740                                         l4166 370C  
                                       l4158 3698                                         l4094 3422  
                                       l4086 33B6                                         l3608 5578  
                                       l3800 4DC0                                         l3296 4772  
                                       l3288 4720                                         l3536 42B8  
                                       l3528 41C8                                         l3480 4ACE  
                                       l3472 4A9E                                         l3464 5024  
                                       l3456 4FDE                                         l3448 4FA4  
                                       l3560 302E                                         l3552 4EDE  
                                       l3544 4E58                                         l4192 3826  
                                       l4184 378C                                         l3376 4516  
                                       l4440 21CA                                         l4432 214C  
                                       l4424 20DA                                         l4416 2032  
                                       l4408 1FA0                                         l3392 3DE0  
                                       l3720 193E                                         l3712 18AC  
                                       l3704 181A                                         l3640 40AE  
                                       l3632 4052                                         l3624 401E  
                                       l3616 3FBE                                         l4360 157A  
                                       l4352 1514                                         l4344 146C  
                                       l4336 1406                                         l4328 135E  
                                       l4280 102C                                         l4264 0F06  
                                       l4272 0FAE                                         l4256 0E80  
                                       l4248 0E02                                         l4176 3768  
                                       l4168 3718                                         l4096 342E  
                                       l4088 33C2                                         l3810 4DEE  
                                       l3802 4DC8                                         l3298 477E  
                                       l3538 42D6                                         l3490 4B10  
                                       l3482 4ADE                                         l3474 4AAC  
                                       l3466 5026                                         l3458 4FEC  
                                       l3570 30F0                                         l3562 3048  
                                       l3554 4EE8                                         l3546 4EBA  
                                       l4186 37C4                                         l4194 3832  
                                       l3378 4522                                         l3386 4564  
                                       l4442 21EA                                         l4450 2262  
                                       l4434 2184                                         l4418 204A  
                                       l4426 20F6                                         l4370 1D9A  
                                       l3394 3DFA                                         l3722 1956  
                                       l3730 1A02                                         l3714 18C4  
                                       l3706 1832                                         l3650 4132  
                                       l3642 40BE                                         l3634 407A  
                                       l3626 402A                                         l3618 3FC2  
                                       l4362 15C2                                         l4346 14A4  
                                       l4354 1534                                         l4338 1426  
                                       l4282 104C                                         l4274 0FC0  
                                       l4290 10F4                                         l4266 0F1E  
                                       l4258 0EA0                                         l4098 343A  
                                       l3820 4E28                                         l3812 4DF6  
                                       l3804 4DCC                                         l3492 4B1C  
                                       l3484 4AE2                                         l3476 4ABC  
                                       l3468 5030                                         l3580 3278  
                                       l3572 3152                                         l3564 3060  
                                       l3556 4EF2                                         l3548 4ECA  
                                       l4196 3854                                         l4188 37FC  
                                       l3900 50BE                                         l4452 2280  
                                       l4444 2202                                         l4428 2114  
                                       l4380 1E62                                         l4372 1DBA  
                                       l3396 3E2E                                         l3388 3DCA  
                                       l3732 1A20                                         l3724 198E  
                                       l3716 1900                                         l3708 186E  
                                       l3660 418E                                         l3652 413E  
                                       l3644 40EC                                         l3628 4036  
                                       l3636 407E                                         l4364 15DE  
                                       l4356 1546                                         l4348 14C4  
                                       l4292 1106                                         l4284 1084  
                                       l4276 0FDC                                         l4268 0F56  
                                       l3830 4E4E                                         l3822 4E2A  
                                       l3814 4E04                                         l3806 4DD4  
                                       l3910 528A                                         l3494 4B2A  
                                       l3486 4AF2                                         l3478 4AC0  
                                       l3582 3376                                         l3566 3076  
                                       l3574 31AE                                         l3558 2EDA  
                                       l3590 53E0                                         l4198 3876  
                                       l3902 50C8                                         l4470 23A2  
                                       l4454 22A0                                         l4462 2314  
                                       l4446 223A                                         l4438 21AC  
                                       l4390 1EB0                                         l4382 1E7A  
                                       l4374 1DD2                                         l3398 3E3A  
                                       l3750 1B46                                         l3734 1A40  
                                       l3742 1AB8                                         l3726 19AE  
                                       l3718 191E                                         l3670 1662  
                                       l3654 414A                                         l3638 40A2  
                                       l4366 15F6                                         l4358 1562  
                                       l4294 1122                                         l4286 109C  
                                       l4278 0FF4                                         l3824 4E30  
                                       l3816 4E0A                                         l3808 4DE6  
                                       l3912 52A0                                         l3496 4B34  
                                       l3488 4B08                                         l3584 3394  
                                       l3576 31C6                                         l3568 30DA  
                                       l3920 2448                                         l3592 53E6  
                                       l3904 50CA                                         l4464 2332  
                                       l4456 22B8                                         l4480 2430  
                                       l4392 1EC8                                         l4384 1E96  
                                       l4376 1E0A                                         l4368 1D96  
                                       l3760 1BC4                                         l3744 1AD6  
                                       l3736 1A58                                         l3728 19E6  
                                       l3680 16EA                                         l3672 167A  
                                       l3656 4156                                         l3664 4198  
                                       l3648 40FE                                         l4296 113A  
                                       l4288 10D4                                         l4800 2BAA  
                                       l4720 2A0A                                         l3818 4E20  
                                       l3826 4E36                                         l3914 52AE  
                                       l3498 4B52                                         l3586 33A0  
                                       l3578 3260                                         l3930 24C6  
                                       l3922 245E                                         l3594 53E8  
                                       l3906 50D4                                         l4474 23E2  
                                       l4466 2352                                         l4458 22F0  
                                       l4394 1ED0                                         l4386 1E9A  
                                       l4378 1E2A                                         l3770 1C5E  
                                       l3762 1BFC                                         l3746 1AF6  
                                       l3754 1B6E                                         l3738 1A90  
                                       l3690 1772                                         l3682 170A  
                                       l3674 169A                                         l3666 163C  
                                       l3658 4166                                         l4298 1176  
                                       l4810 2BE8                                         l4802 2BB2  
                                       l4730 2A30                                         l4722 2A10  
                                       l3828 4E46                                         l3916 52C4  
                                       l3908 5280                                         l3940 2542  
                                       l3932 24E6                                         l3924 246A  
                                       l3596 53EA                                         l3588 53D6  
                                       l3860 5310                                         l4476 23E6  
                                       l4468 236A                                         l4396 1ED2  
                                       l4388 1EA0                                         l3780 1D06  
                                       l3772 1C76                                         l3756 1B8C  
                                       l3748 1B0E                                         l3692 1776  
                                       l3684 1722                                         l3676 16B2  
                                       l3668 1642                                         l4820 2C18  
                                       l4812 2BEE                                         l4804 2BB6  
                                       l4740 2A58                                         l4732 2A40  
                                       l4724 2A14                                         l4716 29FE  
                                       l3790 4D94                                         l3950 25CA  
                                       l3942 255A                                         l3934 24FE  
                                       l3926 248C                                         l3918 2442  
                                       l3598 53EC                                         l3870 5342  
                                       l3862 5314                                         l4478 2418  
                                       l4398 1EEE                                         l3782 1D22  
                                       l3774 1CAE                                         l3758 1BAC  
                                       l3766 1C20                                         l3694 17BC  
                                       l3686 173E                                         l3678 16D2  
                                       l4822 2C36                                         l4830 2C5E  
                                       l4814 2BF2                                         l4806 2BC8  
                                       l4750 2A76                                         l4742 2A5E  
                                       l4734 2A44                                         l4726 2A20  
                                       l4718 2A0A                                         ?_max 0010  
                                       l3792 4D98                                         l3960 2652  
                                       l3952 25D6                                         l3944 257C  
                                       l3936 2514                                         l3928 24A4  
                                       l3864 531E                                         l3880 555C  
                                       l3872 5544                                         l3784 1D26  
                                       l3768 1C3E                                         l3696 17D4  
                                       l3688 1756                                         l4840 2CDE  
                                       l4824 2C3E                                         l4816 2C04  
                                       l4832 2C6A                                         l4808 2BE4  
                                       l4760 2A8E                                         l4752 2A7E  
                                       l4744 2A62                                         l4736 2A48  
                                       l4728 2A2C                                         l3858 5348  
                                       l3794 4DA6                                         l3970 26C6  
                                       l3962 266A                                         l3954 25F8  
                                       l3946 259C                                         l3938 2520  
                                       l3866 532E                                         l3890 5082  
                                       l3882 555E                                         l3874 554E  
                                       l3786 1D6C                                         l3778 1CEE  
                                       l3698 17DC                                         l4850 2E0C  
                                       l4842 2CFC                                         l4834 2C7C  
                                       l4826 2C42                                         l4818 2C10  
                                       l4770 2AAE                                         l4762 2A96  
                                       l4754 2A82                                         l4746 2A66  
                                       l4738 2A4C                                  main@curMove 01B3  
                                       l3796 4DAE                                         l3980 2742  
                                       l3972 26E8                                         l3964 2680  
                                       l3956 2610                                         l3948 25B4  
                                       l3868 5338                                         l3892 50A6  
                                       l3884 5048                                         l3876 5550  
                                       l3788 1D84                                         l4860 2E26  
                                       l4852 2E14                                         l4844 2DA6  
                                       l4836 2C80                                         l4828 2C54  
                                       l4780 2AC6                                         l4772 2AB2  
                                       l4764 2A9E                                         l4756 2A86  
                                       l4748 2A6E                                         ?_min 0010  
                                       l3798 4DB2                                         l3990 27D6  
                                       l3982 2764                                         l3974 2708  
                                       l3966 268C                                         l3958 2632  
                                       l3894 50B0                                         l3886 5058  
                                       l3878 555A                                         l4870 2EA2  
                                       l4862 2E2A                                         l4854 2E18  
                                       l4846 2DB6                                         l4838 2CD2  
                                       l4790 2B78                                         l4782 2AE0  
                                       l4774 2ABA                                         l4766 2AA6  
                                       l4758 2A8A                                         l3992 27EC  
                                       l3984 277C                                         l3976 2720  
                                       l3968 26AE                                         l3896 50B2  
                                       l3888 507E                                         l4872 2EA6  
                                       l4856 2E1E                                         l4848 2E00  
                                       l4864 2E30                                         l4792 2B92  
                                       l4784 2AF8                                         l4776 2ABE  
                                       l4768 2AAA                                         l3994 27F8  
                                       l3986 279E                                         l3978 2736  
                                       l3898 50BC                                         l4866 2E42  
                                       l4874 2EB0                                         l4858 2E22  
                                       l4794 2B96                                         l4786 2B4E  
                                       l4778 2AC2                                         l3996 281A  
                                       l3988 27BE                                         l4876 2EC4  
                                       l4868 2E46                                         l4796 2B9A  
                                       l4788 2B72                                         l3998 2832  
                                       l4798 2B9E                                         u2000 52F8  
                                       u2001 52F0                                         u2100 4836  
                                       u2020 5394                                         u2101 4832  
                                       u2021 5390                                         u2110 487A  
                                       u2030 53C0                                         u2111 4876  
                                       u2031 53BC                                         u2120 488E  
                                       u2040 4634                                         u2200 3EB2  
                                       u3000 3768                                         u2121 488A  
                                       u2041 4630                                         u2201 3EAE  
                                       u3001 3764                                         u2130 4922  
                                       u2050 465C                                         u2018 52FA  
                                       u3010 37C4                                         u2210 3EF6  
                                       u2131 491E                                         u2051 4658  
                                       u3011 37C0                                         u2211 3EF2  
                                       u2060 46A0                                         u2300 4ACE  
                                       u3100 3964                                         u3020 37FC  
                                       u2140 4454                                         u2220 3F0A  
                                       u2061 469C                                         u2301 4ACA  
                                       u3101 3960                                         u3021 37F8  
                                       u2141 4450                                         u2221 3F06  
                                       u2070 46B4                                         u2310 4B08  
                                       u3110 398E                                         u3030 381E  
                                       u2150 447C                                         u2230 3F9E  
                                       u2071 46B0                                         u2311 4B04  
                                       u3111 398A                                         u3031 381A  
                                       u2151 4478                                         u2231 3F9A  
                                       u2080 4748                                         u2320 4B2A  
                                       u2240 51DE                                         u3200 3AF4  
                                       u3120 39B0                                         u3040 3854  
                                       u2160 44B2                      color_calibration@orange 0084  
                               _BAUD4CONbits 0EE9                                         u2081 4744  
                                       u2321 4B26                                         u2241 51DA  
                                       u3201 3AF0                                         u3121 39AC  
                                       u3041 3850                                         u2161 44AE  
                                       u2090 480E                                         u2330 4B52  
                                       u2250 5218                                         u2410 3394  
                                       u3210 3B06                                         u3130 39CA  
                                       u3050 3876                                         u2170 44C6  
                                       u2091 480A                                         u2331 4B4E  
                                       u2251 5214                                         u2411 3390  
                                       u3211 3B02                                         u3131 39C6  
                                       u3051 3872                                         u2171 44C2  
                                       u2420 558C                                         u2340 4B84  
                                       u2260 4FCA                                         u3220 3B28  
                                       u3140 39EC                                         u3060 38B6  
                                       u2180 455A                                         u2500 188C  
                                       u3300 1546                                         u2421 5588  
                                       u2341 4B80                                         u2261 4FC6  
                                       u2405 3296                                         u3221 3B24  
                                       u3141 39E8                                         u3061 38B2  
                                       u2181 4556                                         u2501 1888  
                                       u3301 1542                                         u2270 4FEC  
                                       u2350 3060                                         u3150 3A02  
                                       u3070 38EE                                         u3310 1EB0  
                                       u2190 3E8A                                         u2510 191E  
                                       u2430 407A                                         u3230 0E14  
                                       u2271 4FE8                                         u2351 305C  
                                       u3151 39FE                                         u3071 38EA  
                                       u3311 1EAC                                         u2191 3E86  
                                       u2511 191A                                         u2431 4076  
                                       u4007 0EAA                                         u3231 0E10  
                                       u2600 4DE6                                         u2280 5014  
                                       u2360 3076                                         u3160 3A14  
                                       u3080 3910                                         u3400 2440  
                                       u3320 1EEE                                         u2520 1A20  
                                       u2440 40A2                                         u3240 0EEA  
                                       u2601 4DE2                                         u2281 5010  
                                       u2361 3072                                         u3161 3A10  
                                       u3081 390C                                         u3401 243C  
                                       u3321 1EEA                                         u2521 1A1C  
                                       u2441 409E                                         u4017 0F10  
                                       u3241 0EE6                                         u2610 4E04  
                                       u2290 4AAC                                         u2370 30F0  
                                       u3170 3A6E                                         u3090 3942  
                                       u3330 1F80                                         u2530 1AD6  
                                       u2450 40E6                                         u3250 0FC0  
                                       _T2PR 0FBC                                         u2611 4E00  
                                       u2291 4AA8                                         u2371 30EC  
                                       u3171 3A6A                                         u3091 393E  
                                       u3331 1F7C                                         u2531 1AD2  
                                       u2451 40E2                                         u4107 1168  
                                       u3251 0FBC                                         u4027 0F48  
                                       u2620 4E20                                         u1900 512C  
                                       u2380 31C6                                         u3180 3A88  
                                       u3340 2012                                         u2540 1B8C  
                                       u2460 40FA                                         u3260 1106  
                                       u2621 4E1C                                         u1901 5128  
                                       u2381 31C2                                         u2701 2478  
                                       u3181 3A84                                         u3341 200E  
                                       u2541 1B88                                         u2461 40F6  
                                       u4117 11A0                                         u3261 1102  
                                       u4037 0F80                                         u2630 4E46  
                                       u1910 494A                                         u2390 3278  
                                       u2710 2510                                         u3190 3ADE  
                                       u3350 2114                                         u2550 1C3E  
                                       u2470 418E                                         u3270 1218  
                                       u2631 4E42                                         u1911 4946  
                                       u5007 4716                                         u2391 3274  
                                       u2711 250C                                         u3191 3ADA  
                                       u3351 2110                                         u2551 1C3A  
                                       u2471 418A                                         u4207 13F8  
                                       u3271 1214                                         u4127 11D8  
                                       u4047 0FE6                                         u1920 4A14  
                                       u3360 21CA                                         u2560 1D6C  
                                       u2480 17BC                                         u3280 132A  
                                       u1921 4A10                                         u5017 47DC  
                                       u2801 2806                                         u2721 252E  
                                       u3361 21C6                                         u2561 1D68  
                                       u2481 17B8                                         u4217 145E  
                                       u3281 1326                                         u4137 123E  
                                       u4057 101E                                         u2810 289E  
                                       u2730 25C6                                         u3370 2280  
                                       u2570 1D94                                         u2490 17FA  
                                       u3290 1438                                         u5027 4848  
                                       u2811 289A                                         u2731 25C2  
                                       u3371 227C                                         u2571 1D90  
                                       u2491 17F6                                         u4307 166C  
                                       u4227 1496                                         u3291 1434  
                                       u4147 127A                                         u4067 1056  
                                       u2580 4DA6                                         u2900 3CAA  
                                       u1860 5438                                         u3380 2332  
                                       u2581 4DA2                                         u5037 48F0  
                                       u2901 3CA6                                         u1861 5434  
                                       u2821 28BC                                         u2741 25E4  
                                       u3381 232E                                         u4317 16A4  
                                       u4237 14CE                                         u4157 12B2  
                                       u4077 108E                                         u3701 2A26  
                                       u2590 4DC0                                         u2670 52AE  
                                       u1870 544E                                         u1950 54B0  
                                       u2830 2954                                         u2750 267C  
                                       u3390 2418                                         u2910 347E  
                                       u3710 2AD8                                         u2591 4DBC  
                                       u2671 52AA                                         u1871 544A  
                                       u1951 54AC                                         u2831 2950  
                                       u2751 2678                                         u3391 2414  
                                       u4407 1980                                         u4327 16DC  
                                       u4247 1506                                         u4167 12EA  
                                       u4087 10C6                                         u2911 347A  
                                       u3711 2AD4                                         u2680 52C4  
                                       u1880 50F2                                         u1960 4D6A  
                                       u2920 34A6                                         u3720 2C04  
                                       u2681 52C0                                         u1881 50EE  
                                       u2841 2972                                         u2761 269A  
                                       u1961 4D66                                         u4417 19B8  
                                       u4337 1714                                         u4257 156C  
                                       u4177 1350                                         u4097 112C  
                                       u2921 34A2                                         u3801 2D4E  
                                       u3721 2C00                                         u1890 5110  
                                       u2850 3C26                                         u2770 2732  
                                       u2690 245A                                         u1970 4D92  
                                       u2930 34EA                                         u3730 2C36  
                                       u1891 510C                                         u2851 3C22  
                                       u2771 272E                                         u2691 2456  
                                       u1971 4D8E                                         u4507 1CA0  
                                       u4427 19F0                                         u4347 1748  
                                       u4267 15E8                                         u4187 1388  
                                       u2931 34E6                                         u3811 2D60  
                                       u3731 2C32                                         u2860 3C34  
                                       u1980 4BFC                                         u2940 34FE  
                                       u3740 2C7C                                         u2861 3C30  
                                       u2781 2750                                         u1981 4BF8  
                                       u4517 1CF8                                         u4437 1A4A  
                                       u4357 1824                                         u4277 4048  
                                       u4197 13C0                                         u2941 34FA  
                                       u3821 2D72                                         u3741 2C78  
                                       u2870 3C42                                         u2790 27E8  
                                       u1990 4C8E                                         u2950 3592  
                                       u2871 3C3E                                         u2791 27E4  
                                       u1991 4C8A                                         u4607 1F50  
                                       u4527 3E58                                         u4447 1A82  
                                       u4367 185C                                         u4287 40B4  
                                       u2951 358E                                         u3831 2D84  
                                       u3751 2CE8                                         u2880 3C5A  
                                       u2960 3654                                         u2881 3C56  
                                       u4617 1FAA                                         u4537 3EC4  
                                       u4457 1B00                                         u4377 18B6  
                                       u4297 415C                                         u2961 3650  
                                       u3841 2D96                                         u3761 2D06  
                                       u3681 2A04                                         u2890 3C78  
                                       u2970 367C                                         u3850 2E42  
                                       u2891 3C74                                         u4707 222C  
                                       u4627 1FE2                                         u4547 3F6C  
                                       u4467 1B38                                         u4387 18EE  
                                       u2971 3678                                         u3851 2E3E  
                                       u3771 2D18                                         u3907 2BBE  
                                       u3691 2A1A                                         u2980 36C0  
                                       u3860 2EC4                                         u4717 22AA  
                                       u4637 203C                                         u4557 1DC4  
                                       u4477 1BB6                                         u4397 1948  
                                       u2981 36BC                                         u3861 2EC0  
                                       u3781 2D2A                                         u3917 2C4A  
                                       u2990 36D4                                         u3870 2ED6  
                                       u4807 5324                                         u4727 22E2  
                                       u4647 2074                                         u4567 1DFC  
                                       u4487 1BEE                                         u2991 36D0  
                                       u3927 344C                                         u3871 2ED2  
                                       u3791 2D3C                                         u4817 4EC0  
                                       u4737 235C                                         u4657 20AC  
                                       u4577 1E34                                         u4497 1C68  
                                       u3937 34B8                                         u4907 3B62  
                                       u4827 24F0                                         u4747 2394  
                                       u4667 20E4                                         u4587 1E6C  
                                       u3947 3560                                         u4917 3BA2  
                                       u4837 25A6                                         u4757 4C5E  
                                       u4677 213E                                         u4597 1F18  
                                       u3957 3622                                         u4927 3BE2  
                                       u4847 265C                                         u4767 4422  
                                       u4687 2176                                         u3967 368E  
                                       u3887 2AEC                                         u4937 3C8E  
                                       u4857 2712                                         u4777 448E  
                                       u4697 21F4                                         u3977 3736  
                                       u3897 2B84                                         u4947 3CEE  
                                       u4867 27C8                                         u4787 4528  
                                       u3987 0E3A                                         u4957 3D2E  
                                       u4877 287E                                         u4797 4D38  
                                       u3997 0E72                                         u4967 3D6E  
                                       u4887 2934                                         u4977 3DB6  
                                       u4897 29EA                                         u4987 4602  
                                       u4997 466E                      color_calibration@yellow 0080  
                lostReturnHome@straightSpeed 003B                                         _main 29FE  
                                       _move 0E02                                         _lost 00F4  
                                       fsr1h 0FE2                           i2___lwdiv@quotient 0005  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                                       max@a 0010                                         max@b 0012  
                                       btemp 004F                                         _stop 4BA6  
                                       min@a 0010                                         min@b 0012  
                                       prodh 0FF4                                         prodl 0FF3  
                                       start 0058                             color_detect@blue 0026  
                        main@reverseDuration 017D                             __end_of_ADC_init 557C  
                       ?i2_color_writetoaddr 0003                             color_detect@pink 0032  
                            __end_of_HighISR 54E4                        lostReturnHome@curMove 003A  
                               ___param_bank 0000                         __end_of_batteryLevel 52CE  
                                      ??_max 0014                                        ??_min 0014  
                            __end_of___aldiv 4BA6                                        ?_main 0001  
                                      _ADPCH 0F5F                              __end_of___awdiv 4E58  
                                      ?_move 0060                              __end_of___lldiv 5048  
                                      ?_stop 0023                              ___awdiv@divisor 0012  
                            __end_of___lwdiv 514C                                        i1l365 0048  
                                      i2l152 5542                                        i2l149 4FA2  
                                      i2l270 5476                                        i2l273 55F8  
                                      i2l282 55BC                                        i2l267 5450  
                                      i2l279 55EE                                        i2l359 54E0  
                            ___awdiv@counter 0014                               ??_color_detect 0060  
                                      _TMR0H 0FD4                                        _TMR0L 0FD3  
                        ___lmul@multiplicand 0014                   __end_of_I2C_2_Master_Start 55DC  
                 __end_of_I2C_2_Master_Write 55B2                                   _Buggy_init 5348  
                 color_calibration@lightblue 0086                       returnHome@straightRamp 003E  
                     returnHome@straightTime 0038                                        tablat 0FF5  
                                      plusw0 0FEB                                        plusw2 0FDB  
                                      ttemp5 0050                                        ttemp6 0053  
                                      ttemp7 0057                                        stop@i 002B  
                                      status 0FD8                                        wtemp8 0050  
                          color_detect@color 004A                            color_detect@green 0020  
                          color_detect@white 0044                        ??i2_color_writetoaddr 0004  
                               main@turnRamp 01B0                        _I2C_2_Master_RepStart 55DC  
                            __initialization 522A                    get16bitTMR0val@timer_high 0016  
                               __end_of_main 2EDA                                 __end_of_move 163C  
                               __end_of_stop 4CAE                          move@reverseDuration 006B  
                            _get16bitTMR0val 5400                                       ??_main 008A  
                                     ??_move 0049                                       ??_stop 0028  
                              __activetblptr 0000                                calibration@mL 0031  
                              calibration@mR 0033                       returnHome@turnDuration 0040  
                               ?_setMotorPWM 001D                                       _ADRESH 0F64  
                                     _CCPR1H 0FAA                                       _CCPR2H 0FA6  
                                     _CCPR3H 0F25                                       _CCPR4H 0F21  
                           ___awdiv@dividend 0010                       lostReturnHome@turnRamp 0041  
                                     _RC0PPS 0E62                       wallAdjust@straightRamp 0028  
                                     _RE2PPS 0E74                                       _RC7PPS 0E69  
                                     _RD5PPS 0E6F                                       _RE4PPS 0E76  
                                     _RD6PPS 0E70                                       i2l1280 51B6  
                                     i2l1287 51BE                                       i2l3154 5450  
                                     i1l4674 0026                                       i2l3156 5460  
                                     i1l4676 0036                                       i1l4678 0044  
                                     i2l3520 55EA                                       i2l3514 55F0  
                                     i2l3522 55B4                                       i2l3516 55F4  
                                     i2l3524 55B8                                       i2l4500 4F8E  
                                     i2l3518 55E6                                       i2l4502 4F98  
                                     i2l3840 5166                                       i2l3850 51A0  
                                     i2l3842 516E                                       i2l3834 5526  
                                     i2l4490 4EFE                                       _RG6PPS 0E88  
                                     i2l3852 51A8                                       i2l3844 5176  
                                     i2l3836 514C                                       i2l4492 4F60  
                                     i2l3854 51AA                                       i2l3846 5184  
                                     i2l3838 5154                                       i2l4494 4F70  
                                     i2l4670 54D8                                       i2l3856 51B0  
                                     i2l3848 518A                                       i2l4496 4F7A  
                                     i2l4672 54DC                                       i2l4498 4F84  
                                     i2l4666 54C2                                       i2l4668 54D2  
                                  ??_HighISR 000D                     __end_of_color_click_init 5348  
                                     _RX4PPS 0E15                                main@lightblue 01A3  
                                     _LowISR 0018                                 ??_ADC_getval 0010  
                              ??_Timer0_init 0010                          calibration@turnRamp 0038  
                    calibration@turnDuration 0036                                 _CCPTMRS0bits 0FAD  
                                     ___lmul 51C0                                    ??___aldiv 0024  
                                     ___wmul 5478                                    ??___awdiv 0014  
                                  ??___lldiv 0024                                    ??___lwdiv 001A  
                                     clear_0 5250                                       clear_1 525C  
                                     clear_2 5268                             ___awdiv@quotient 0016  
                                     isa$std 0001                      returnHome@straightSpeed 003B  
                                     move@mL 0060                                       move@mR 0062  
                          __end_ofi2___lwdiv 51C0                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                                    ?_ADC_init 0001  
                                     stop@mL 0023                                       stop@mR 0025  
                                ?_Buggy_init 0001                            ??_initDCmotorsPWM 0012  
                         __end_of_ADC_getval 5594                   i2color_writetoaddr@address 0004  
                           __end_of_turnLeft 492E                           color_detect@orange 0038  
                 lostReturnHome@moveSequence 0036                                   __accesstop 0060  
                    __end_of__initialization 5276                           color_detect@yellow 002C  
                            fullSpeedAhead@i 002C                                main@turnSpeed 01AF  
                     ?_I2C_2_Master_RepStart 0001                                ___rparam_used 0001  
                       __end_of_color_detect 3B30                    reverseShort@straightSpeed 0027  
              lostReturnHome@reverseDuration 003C                              _Interrupts_init 5594  
                             __pcstackCOMRAM 0001                      __end_of_get16bitTMR0val 5428  
                               ?_white_Light 0001                                 __pidataBANK0 55FA  
                   get16bitTMR0val@timer_low 0014                     get16bitTMR0val@timer_val 0018  
               ?_color_clear_init_interrupts 0001                             _reverseOneSquare 439C  
                        __end_of_Timer0_init 5524                               main@ambientNew 017B  
          reverseWallAdjust@reverseWallSpeed 002D                                   ??_ADC_init 0010  
                               rgb_2_hsv@HSV 0032                                 _batteryLevel 5280  
                                 __pbssBANK0 00B8                                   __pbssBANK1 01D8  
                                 __pbssBANK2 0200                               _rgb_2_hsv$3590 0060  
                             _rgb_2_hsv$3588 0066                               _rgb_2_hsv$3589 0068  
                                    ?_LowISR 0001                            _color_writetoaddr 54E4  
                               _T2CLKCONbits 0FBF                               _lostReturnHome 1D96  
                   reverseShort@straightRamp 0028               reverseWallAdjust@straightSpeed 0027  
                         ?_color_writetoaddr 0012                                      ?___lmul 0010  
                                    ?___wmul 0010                     wallAdjust@adjustDuration 002C  
                             ___lmul@product 0018                ??_color_clear_init_interrupts 001D  
                                move@curMove 0069                      lostReturnHome@turnSpeed 003F  
                        ??_color_writetoaddr 0013                      wallAdjust@straightSpeed 0027  
                                    _SP4BRGH 0EE6                                      _SP4BRGL 0EE5  
                 fullSpeedAhead@straightRamp 0028                        turnRight@turnDuration 0028  
                                    _SSP2ADD 0ED6                                      _SSP2BUF 0ED5  
                           _brightnessChange 00F5                                   _color_read 41AE  
                    __end_of_Interrupts_init 55A6                       color_writetoaddr@value 0012  
                                    _HighISR 0008                    __end_of_color_writetoaddr 5504  
                     __end_of_lostReturnHome 2442                                    _ADREFbits 0F58  
                         _I2C_2_Master_Start 55D2                                   _initUSART4 5544  
                        i2_I2C_2_Master_Idle 5450                           _I2C_2_Master_Write 55A6  
                                    __Hparam 0000                          i2_I2C_2_Master_Stop 55E6  
                                    __Lparam 0000                                  wallAdjust@i 002F  
                                _Timer0_init 5504                         calibration@turnSpeed 0035  
                           ?_get16bitTMR0val 0010                                      ___aldiv 4A9A  
                                    ___awdiv 4D94                              lostReturnHome@i 0046  
                                    ___lldiv 4FA4                                ??_calibration 0039  
                        ?_I2C_2_Master_Start 0001                                      ___lwdiv 50D8  
                        ?_I2C_2_Master_Write 0001                                 __psmallconst 0E00  
                                    _ambient 00FA                                      __pcinit 522A  
                                    __ramtop 0E00                                    ?_turnLeft 0023  
                          __end_of_rgb_2_hsv 33B6                                      __ptext0 29FE  
                                    __ptext1 33B6                                      __ptext2 0E02  
                                    __ptext3 3FBE                                      __ptext4 163C  
                                    __ptext5 3DCA                                      __ptext6 1D96  
                                    __ptext7 4BA6                                      __ptext8 439C  
                                    __ptext9 55BE                         ?i2_I2C_2_Master_Idle 0001  
                                  _T2CONbits 0FBD                                ?_reverseShort 0023  
                       ?i2_I2C_2_Master_Stop 0001                             ___aldiv@dividend 001C  
                                  _T2HLTbits 0FBE                                _RxBufWriteCnt 004E  
                                    main@HSV 01B6                                      main@buf 008C  
                                    main@red 017F                         ??_I2C_2_Master_Start 0011  
                       ??_I2C_2_Master_Write 0011                               __pintcode_body 54C2  
                       end_of_initialization 5276              ??i2_color_clear_init_interrupts 0008  
                __end_ofi2_color_writetoaddr 5544                             ADC_getval@tmpval 0010  
                 reverseWallAdjust@cur_power 0030                            reverseOneSquare@i 002E  
                                    int_func 54C2                            ?_color_click_init 0001  
                            ?_lostReturnHome 0032                                   _wallAdjust 33B6  
                            ___lldiv@divisor 0020                                   _resetTimer 55BE  
                         ??_color_click_init 0022                              ___lldiv@counter 0028  
                           ___aldiv@quotient 0026                   batteryLevel@batteryQuarter 0019  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc1 0FE6  
                                    postinc2 0FDE                   batteryLevel@batteryVoltage 0018  
                                 main@F14662 01D8                                   main@F14664 0200  
                                 main@F14656 00B8                                   main@F14667 00F6  
                                 _returnHome 163C                              _initDCmotorsPWM 5048  
                                 ??_turnLeft 002A                                    _PORTFbits 0F8E  
                         setMotorPWM@negDuty 0022                               ??_reverseShort 0029  
                      ??i2_I2C_2_Master_Idle 0001                                move@turnSpeed 006E  
                          __end_of_turnRight 4754                        ??i2_I2C_2_Master_Stop 0002  
                        __end_of_calibration 3DCA                                 _color_detect 3788  
                                returnHome@i 0048                                    _TRISAbits 0F81  
                         setMotorPWM@posDuty 0021                                    _TRISBbits 0F82  
                                  _TRISCbits 0F83                                    _TRISDbits 0F84  
                                  _TRISEbits 0F85                                    _TRISFbits 0F86  
                                  _TRISGbits 0F87                                    _TRISHbits 0F88  
                           white_Light@state 0010                                 ??_Buggy_init 0010  
                           fullSpeedAhead@mL 0023                             fullSpeedAhead@mR 0025  
                                ?_color_read 0014                            i2___lwdiv@divisor 0003  
                   color_writetoaddr@address 0013                                    i2___lwdiv 514C  
                    ??_I2C_2_Master_RepStart 0011                            i2___lwdiv@counter 0007  
                   __end_of_reverseOneSquare 457A                             ?_Interrupts_init 0001  
                              stop@cur_power 002D                                  _CCP1CONbits 0FAB  
                     color_calibration@green 007C                                 _EUSART4RXbuf 00E0  
                        returnHome@turnSpeed 003F                                 _EUSART4TXbuf 0252  
                                _CCP2CONbits 0FA7                       color_calibration@white 0088  
                                _CCP3CONbits 0F26                   lostReturnHome@straightRamp 003E  
                 lostReturnHome@straightTime 0038                                  ?_initUSART4 0001  
                                 main@orange 019D                                  _CCP4CONbits 0F22  
                                 main@motorL 01CE                                   main@motorR 01C4  
                                 main@yellow 0191                               __end_of_LowISR 0058  
                             color_read@RGBC 0014                               _fullSpeedAhead 4CAE  
                             __end_of___lmul 522A                         turnLeft@turnDuration 0028  
                             __end_of___wmul 549E                           __end_of_Buggy_init 537E  
                        start_initialization 522A                                  __end_of_max 53D6  
                                __end_of_min 53AA                                _TxBufWriteCnt 004C  
                 lostReturnHome@turnDuration 0040                                   rgb_2_hsv@b 0074  
                                 rgb_2_hsv@g 0072                                   ?i2___lwdiv 0001  
                                 rgb_2_hsv@r 006A                             move@moveSequence 0065  
                        wallAdjust@cur_power 0031        __end_ofi2_color_clear_init_interrupts 4FA4  
              i2_color_clear_init_interrupts 4EFE                            _reverseWallAdjust 3DCA  
                                ?_wallAdjust 0023                                  ?_resetTimer 0001  
                                   ??_LowISR 000D                           ?_reverseWallAdjust 0023  
                    __end_of_initDCmotorsPWM 50D8                       __end_of_fullSpeedAhead 4D94  
                         turnRight@cur_power 002F                                     ??___lmul 0018  
                              rgb_2_hsv@RGBC 002A                                     ??___wmul 0014  
                                __pdataBANK0 00F6                                rgb_2_hsv@diff 006E  
              i2I2C_2_Master_Write@data_byte 0002                                  _calibration 3B30  
                              rgb_2_hsv@cmax 006C                                rgb_2_hsv@cmin 0064  
                        ??_reverseWallAdjust 0029                                  ?_returnHome 0032  
                        wallAdjust@wallSpeed 002E                 reverseOneSquare@straightRamp 002A  
               __end_ofi2_I2C_2_Master_Start 55FA                 __end_ofi2_I2C_2_Master_Write 55BE  
                          turnLeft@cur_power 002F                                  __pbssCOMRAM 004B  
                              __pcstackBANK0 0060                                __pcstackBANK1 0100  
                  __end_of_reverseWallAdjust 3FBE                                     ?_HighISR 0001  
                       __end_of_reverseShort 41AE                             stop@straightRamp 0027  
                           ___lwdiv@dividend 0016                                 ?_Timer0_init 0001  
                            ?_fullSpeedAhead 0023                                    __pintcode 0008  
                                   ?___aldiv 001C                           turnRight@turnSpeed 0027  
                                   ?___awdiv 0010                                     ?___lldiv 001C  
                                   ?___lwdiv 0016             reverseShort@shortReverseDuration 002C  
                                __pintcodelo 0018                         I2C_2_Master_Read@ack 0012  
                       I2C_2_Master_Read@tmp 0013                                  __smallconst 0E00  
                             reverseShort@mL 0023                               reverseShort@mR 0025  
                           main@moveSequence 0152                            _I2C_2_Master_Idle 5428  
                          _I2C_2_Master_Init 53D6                            _I2C_2_Master_Read 52CE  
                          turnLeft@turnSpeed 0027                            _I2C_2_Master_Stop 55C8  
                                  _rgb_2_hsv 2EDA                                 _RxBufReadCnt 004D  
                                   _ADC_init 5562                           ?_I2C_2_Master_Idle 0001  
                         ?_I2C_2_Master_Init 0001                           ?_I2C_2_Master_Read 0001  
                              ??_setMotorPWM 001F                           ?_I2C_2_Master_Stop 0001  
                           ___lwdiv@quotient 001A                     initDCmotorsPWM@PWMperiod 0010  
                                ??i2___lwdiv 0005                             ??_lostReturnHome 0042  
                          move@straightSpeed 006A                              ___aldiv@divisor 0020  
                        ??_I2C_2_Master_Idle 0010                              ___aldiv@counter 0024  
                        ??_I2C_2_Master_Init 0010                          ??_I2C_2_Master_Read 0011  
                             ___wmul@product 0014                                     _LATAbits 0F79  
                        ??_I2C_2_Master_Stop 0011                                     _LATCbits 0F7B  
                                   _LATDbits 0F7C                                     _LATEbits 0F7D  
                                   _LATFbits 0F7E                                     _LATGbits 0F7F  
                                   _LATHbits 0F80                                     _IPR0bits 0E1F  
                                   _PIE0bits 0E29                                     _PIE4bits 0E2D  
                                   i1u363_20 0036                                     i1u363_21 0032  
                                turnRight@mL 0023                                  turnRight@mR 0025  
                                   _PIR0bits 0E33                                     i2u264_40 5166  
                                   i2u264_41 5162                                     i2u504_47 4F66  
                                   i2u265_40 5184                                     i2u193_40 5460  
                                   i2u265_41 5180                                     i2u193_41 545C  
                                   i2u266_40 51A0                                     i2u194_40 5476  
                                   i2u362_40 54D2                                     i2u266_41 519C  
                                   i2u194_41 5472                                     i2u362_41 54CE  
                           ?_initDCmotorsPWM 0010                  fullSpeedAhead@straightSpeed 0027  
        __end_of_color_clear_init_interrupts 4EFE               ?i2_color_clear_init_interrupts 0001  
                _color_clear_init_interrupts 4E58                                     _SSP2CON2 0EDA  
                                   _SSP2STAT 0ED8                                 move@turnRamp 0070  
                                 _ADCON0bits 0F60                    __end_of_I2C_2_Master_Idle 5450  
                      color_calibration@RGBC 0076                    __end_of_I2C_2_Master_Init 5400  
                  __end_of_I2C_2_Master_Read 5310                            ___wmul@multiplier 0010  
                  __end_of_I2C_2_Master_Stop 55D2     color_clear_init_interrupts@low_threshold 0020  
 i2color_clear_init_interrupts@low_threshold 000B                                 setMotorPWM@m 001D  
                I2C_2_Master_Write@data_byte 0011                        color_calibration@blue 007E  
                         returnHome@turnRamp 0041                                    main@color 01B2  
                      color_calibration@pink 0082                                    main@green 0185  
                                  main@white 01A9                                   ?_rgb_2_hsv 002A  
                               _TxBufReadCnt 004B                     i2color_writetoaddr@value 0003  
                                  _turnRight 457A                    returnHome@reverseDuration 003C  
                               ??_color_read 0016                            ___lmul@multiplier 0010  
                                  copy_data0 523E                __end_of_I2C_2_Master_RepStart 55E6  
                          ?_reverseOneSquare 0023                          __end_of_setMotorPWM 4A9A  
                               ??_initUSART4 0010                         i2_I2C_2_Master_Start 55F0  
            reverseOneSquare@reverseDuration 0028                         i2_I2C_2_Master_Write 55B2  
                         ??_reverseOneSquare 002B                                     __Hrparam 0000  
                                 _ADC_getval 557C                             main@testSequence 00B4  
                                   __Lrparam 0000                                 wallAdjust@mL 0023  
                               wallAdjust@mR 0025                                ??_white_Light 0010  
                __end_ofi2_I2C_2_Master_Idle 5478                  __end_ofi2_I2C_2_Master_Stop 55F0  
                           lostReturnHome@mL 0032                             lostReturnHome@mR 0034  
                         __end_of_color_read 439C                                   _ANSELBbits 0E9A  
                                 _ANSELDbits 0EA7                                   _ANSELFbits 0EB4  
                                 _T0CON0bits 0FD5                                   _T0CON1bits 0FD6  
                          _color_calibration 2442                reverseOneSquare@straightSpeed 0027  
                            ___lwdiv@divisor 0018                       returnHome@moveSequence 0036  
                         __end_of_initUSART4 5562                              ___lwdiv@counter 001C  
                          turnRight@turnRamp 0029                                   ?_turnRight 0023  
                                   __ptext10 5400                                     __ptext11 4CAE  
                                   __ptext20 549E                                     __ptext12 5544  
                                   __ptext21 2EDA                                     __ptext13 5048  
                                   __ptext30 55D2                                     __ptext22 537E  
                                   __ptext14 3788                                     __ptext31 55DC  
                                   __ptext23 53AA                                     __ptext15 5310  
                                   __ptext40 5280                                     __ptext32 52CE  
                                   __ptext24 51C0                                     __ptext16 4E58  
                                   __ptext41 4D94                                     __ptext33 5428  
                                   __ptext25 4FA4                                     __ptext17 54E4  
                                   __ptext50 5524                                     __ptext42 5562  
                                   __ptext34 3B30                                     __ptext26 4A9A  
                                   __ptext18 53D6                                     __ptext51 55B2  
                                   __ptext43 557C                                     __ptext35 457A  
                                   __ptext27 41AE                                     __ptext19 2442  
                                   __ptext52 55E6                                     __ptext44 5504  
                                   __ptext36 4754                                     __ptext28 55A6  
                                   __ptext53 55F0                                     __ptext45 5594  
                                   __ptext37 492E                                     __ptext29 55C8  
                                   __ptext54 5450                                     __ptext46 5348  
                                   __ptext38 5478                                     __ptext55 514C  
                                   __ptext39 50D8                                     __ptext49 4EFE  
                                  move@color 0064                           ?_color_calibration 0076  
                              ?_batteryLevel 0001                                 _SSP2CON1bits 0ED9  
                               _SSP2CON2bits 0EDA                                reverseShort@i 002D  
                           turnLeft@turnRamp 0029                        reverseShort@cur_power 002F  
                                 turnLeft@mL 0023                                   turnLeft@mR 0025  
                        ??_color_calibration 0040                        ?i2_I2C_2_Master_Start 0001  
                               ??_wallAdjust 0029                             move@straightRamp 006D  
                      ?i2_I2C_2_Master_Write 0001                             move@straightTime 0067  
                          returnHome@curMove 003A                                 ??_resetTimer 0010  
                                 turnRight@i 002D                                     isa$xinst 0000  
                                 _RC4STAbits 0EE7                reverseWallAdjust@straightRamp 0028  
                                   main@RGBC 01BC                                     int$flags 004F  
                       color_calibration@HSV 0078                                 ?_calibration 0031  
                                   main@blue 018B                         color_calibration@red 007A  
                               ??_returnHome 0042                                     main@pink 0197  
                                   main@wall 017A                                     _turnLeft 4754  
                    fullSpeedAhead@cur_power 002E                          __end_of_white_Light 54C2  
                  __end_of_color_calibration 29FE                                   _INTCONbits 0FF2  
                               _reverseShort 3FBE                    reverseOneSquare@cur_power 0030  
                                ??_rgb_2_hsv 0034                           __end_of_wallAdjust 3788  
                         reverseOneSquare@mL 0023                           reverseOneSquare@mR 0025  
                         __end_of_resetTimer 55C8                             move@turnDuration 006F  
                             ??_batteryLevel 0018                                  _setMotorPWM 492E  
                          ??_get16bitTMR0val 0012                                     intlevel1 0000  
                                   intlevel2 0000                             ___lldiv@dividend 001C  
                           ??_fullSpeedAhead 0029                           __end_of_returnHome 1D96  
                                  turnLeft@i 002D       reverseWallAdjust@reverseAdjustDuration 002C  
                                ?_ADC_getval 0001                            main@straightSpeed 01B1  
                           _color_click_init 5310                        color_detect@lightblue 003E  
                                 _SSP2DATPPS 0E1D                             ___lldiv@quotient 0024  
                                 _SSP2CLKPPS 0E1C                                 ___aldiv@sign 0025  
                                ??_turnRight 002A                             main@straightRamp 01B4  
                           main@straightTime 0100                                   _TX4STAbits 0EE8  
                     ??i2_I2C_2_Master_Start 0002                       ??i2_I2C_2_Master_Write 0002  
                               returnHome@mL 0032                                 returnHome@mR 0034  
