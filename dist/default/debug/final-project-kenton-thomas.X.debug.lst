

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 02:08:37 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 21/07/2023 GMT
    77                           ; 
    78                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F67K40 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataCOMRAM
   112   004A0E                     __pidataCOMRAM:
   113                           	callstack 0
   114                           
   115                           ;initializer for _ambient
   116   004A0E  01F4               	dw	500
   117                           
   118                           	psect	idataBANK0
   119   004A0A                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for main@F14649
   123   004A0A  04                 	db	4
   124   004A0B  03                 	db	3
   125   004A0C  09                 	db	9
   126   004A0D  08                 	db	8
   127   000000                     _TRISCbits	set	3971
   128   000000                     _RC4STAbits	set	3815
   129   000000                     _SP4BRGH	set	3814
   130   000000                     _SP4BRGL	set	3813
   131   000000                     _TX4STAbits	set	3816
   132   000000                     _BAUD4CONbits	set	3817
   133   000000                     _TX4REG	set	3812
   134   000000                     _TRISBbits	set	3970
   135   000000                     _TRISAbits	set	3969
   136   000000                     _TRISEbits	set	3973
   137   000000                     _TRISGbits	set	3975
   138   000000                     _LATFbits	set	3966
   139   000000                     _TRISFbits	set	3974
   140   000000                     _TRISHbits	set	3976
   141   000000                     _TRISDbits	set	3972
   142   000000                     _LATEbits	set	3965
   143   000000                     _LATGbits	set	3967
   144   000000                     _LATHbits	set	3968
   145   000000                     _SSP2CON2bits	set	3802
   146   000000                     _TMR0IF	set	29085
   147   000000                     _TMR0IE	set	29005
   148   000000                     _RX4PPS	set	3605
   149   000000                     _SSP2CLKPPS	set	3612
   150   000000                     _SSP2DATPPS	set	3613
   151   000000                     _PIE0bits	set	3625
   152   000000                     _CCPR4H	set	3873
   153   000000                     _CCPR3H	set	3877
   154   000000                     _CCPR2H	set	4006
   155   000000                     _CCPR1H	set	4010
   156   000000                     _CCP1CONbits	set	4011
   157   000000                     _CCPTMRS0bits	set	4013
   158   000000                     _T2PR	set	4028
   159   000000                     _T2CONbits	set	4029
   160   000000                     _INTCONbits	set	4082
   161   000000                     _CCP2CONbits	set	4007
   162   000000                     _CCP3CONbits	set	3878
   163   000000                     _ADREFbits	set	3928
   164   000000                     _LATAbits	set	3961
   165   000000                     _LATDbits	set	3964
   166   000000                     _PORTFbits	set	3982
   167   000000                     _CCP4CONbits	set	3874
   168   000000                     _PIE4bits	set	3629
   169   000000                     _RD5PPS	set	3695
   170   000000                     _ANSELDbits	set	3751
   171   000000                     _SSP2ADD	set	3798
   172   000000                     _SSP2CON1bits	set	3801
   173   000000                     _LATCbits	set	3963
   174   000000                     _RC4REG	set	3811
   175   000000                     _SSP2CON2	set	3802
   176   000000                     _SSP2STAT	set	3800
   177   000000                     _ANSELFbits	set	3764
   178   000000                     _SSP2BUF	set	3797
   179   000000                     _IPR0bits	set	3615
   180   000000                     _RE2PPS	set	3700
   181   000000                     _ANSELBbits	set	3738
   182   000000                     _RD6PPS	set	3696
   183   000000                     _PIR0bits	set	3635
   184   000000                     _PIR4bits	set	3639
   185   000000                     _RC0PPS	set	3682
   186   000000                     _RC7PPS	set	3689
   187   000000                     _ADPCH	set	3935
   188   000000                     _ADRESH	set	3940
   189   000000                     _ADCON0bits	set	3936
   190   000000                     _RE4PPS	set	3702
   191   000000                     _RG6PPS	set	3720
   192   000000                     _TMR0L	set	4051
   193   000000                     _TMR0H	set	4052
   194   000000                     _T0CON0bits	set	4053
   195   000000                     _T0CON1bits	set	4054
   196   000000                     _T2CLKCONbits	set	4031
   197   000000                     _T2HLTbits	set	4030
   198                           
   199                           ; #config settings
   200                           
   201                           	psect	cinit
   202   0045FA                     __pcinit:
   203                           	callstack 0
   204   0045FA                     start_initialization:
   205                           	callstack 0
   206   0045FA                     __initialization:
   207                           	callstack 0
   208                           
   209                           ; Initialize objects allocated to BANK0 (4 bytes)
   210                           ; load TBLPTR registers with __pidataBANK0
   211   0045FA  0E0A               	movlw	low __pidataBANK0
   212   0045FC  6EF6               	movwf	tblptrl,c
   213   0045FE  0E4A               	movlw	high __pidataBANK0
   214   004600  6EF7               	movwf	tblptrh,c
   215   004602  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   216   004604  6EF8               	movwf	tblptru,c
   217   004606  EE00  F0EE         	lfsr	0,__pdataBANK0
   218   00460A  EE10 F004          	lfsr	1,4
   219   00460E                     copy_data0:
   220   00460E  0009               	tblrd		*+
   221   004610  CFF5 FFEE          	movff	tablat,postinc0
   222   004614  50E5               	movf	postdec1,w,c
   223   004616  50E1               	movf	fsr1l,w,c
   224   004618  E1FA               	bnz	copy_data0
   225                           
   226                           ; Initialize objects allocated to COMRAM (2 bytes)
   227                           ; load TBLPTR registers with __pidataCOMRAM
   228   00461A  0E0E               	movlw	low __pidataCOMRAM
   229   00461C  6EF6               	movwf	tblptrl,c
   230   00461E  0E4A               	movlw	high __pidataCOMRAM
   231   004620  6EF7               	movwf	tblptrh,c
   232   004622  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   233   004624  6EF8               	movwf	tblptru,c
   234   004626  0009               	tblrd		*+	;fetch initializer
   235   004628  CFF5 F04D          	movff	tablat,__pdataCOMRAM
   236   00462C  0009               	tblrd		*+	;fetch initializer
   237   00462E  CFF5 F04E          	movff	tablat,__pdataCOMRAM+1
   238                           
   239                           ; Clear objects allocated to BANK2 (122 bytes)
   240   004632  EE02  F000         	lfsr	0,__pbssBANK2
   241   004636  0E7A               	movlw	122
   242   004638                     clear_0:
   243   004638  6AEE               	clrf	postinc0,c
   244   00463A  06E8               	decf	wreg,f,c
   245   00463C  E1FD               	bnz	clear_0
   246                           
   247                           ; Clear objects allocated to BANK0 (120 bytes)
   248   00463E  EE00  F060         	lfsr	0,__pbssBANK0
   249   004642  0E78               	movlw	120
   250   004644                     clear_1:
   251   004644  6AEE               	clrf	postinc0,c
   252   004646  06E8               	decf	wreg,f,c
   253   004648  E1FD               	bnz	clear_1
   254                           
   255                           ; Clear objects allocated to COMRAM (6 bytes)
   256   00464A  6A4C               	clrf	(__pbssCOMRAM+5)& (0+255),c
   257   00464C  6A4B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   258   00464E  6A4A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   259   004650  6A49               	clrf	(__pbssCOMRAM+2)& (0+255),c
   260   004652  6A48               	clrf	(__pbssCOMRAM+1)& (0+255),c
   261   004654  6A47               	clrf	__pbssCOMRAM& (0+255),c
   262   004656                     end_of_initialization:
   263                           	callstack 0
   264   004656                     __end_of__initialization:
   265                           	callstack 0
   266   004656  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   267   004658  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   268   00465A  0100               	movlb	0
   269   00465C  EFB7  F013         	goto	_main	;jump to C main() function
   270                           
   271                           	psect	bssCOMRAM
   272   000047                     __pbssCOMRAM:
   273                           	callstack 0
   274   000047                     _lost:
   275                           	callstack 0
   276   000047                     	ds	1
   277   000048                     _wall:
   278                           	callstack 0
   279   000048                     	ds	1
   280   000049                     _TxBufReadCnt:
   281                           	callstack 0
   282   000049                     	ds	1
   283   00004A                     _TxBufWriteCnt:
   284                           	callstack 0
   285   00004A                     	ds	1
   286   00004B                     _RxBufReadCnt:
   287                           	callstack 0
   288   00004B                     	ds	1
   289   00004C                     _RxBufWriteCnt:
   290                           	callstack 0
   291   00004C                     	ds	1
   292                           
   293                           	psect	dataCOMRAM
   294   00004D                     __pdataCOMRAM:
   295                           	callstack 0
   296   00004D                     _ambient:
   297                           	callstack 0
   298   00004D                     	ds	2
   299                           
   300                           	psect	bssBANK0
   301   000060                     __pbssBANK0:
   302                           	callstack 0
   303   000060                     _EUSART4TXbuf:
   304                           	callstack 0
   305   000060                     	ds	60
   306   00009C                     	ds	40
   307   0000C4                     _EUSART4RXbuf:
   308                           	callstack 0
   309   0000C4                     	ds	20
   310                           
   311                           	psect	dataBANK0
   312   0000EE                     __pdataBANK0:
   313                           	callstack 0
   314   0000EE                     main@F14649:
   315                           	callstack 0
   316   0000EE                     	ds	4
   317                           
   318                           	psect	bssBANK2
   319   000200                     __pbssBANK2:
   320                           	callstack 0
   321   000200                     	ds	82
   322   000252                     	ds	40
   323                           
   324                           	psect	cstackBANK3
   325   000300                     __pcstackBANK3:
   326                           	callstack 0
   327   000300                     main@buf:
   328                           	callstack 0
   329                           
   330                           ; 40 bytes @ 0x0
   331   000300                     	ds	40
   332   000328                     main@straightTime:
   333                           	callstack 0
   334                           
   335                           ; 82 bytes @ 0x28
   336   000328                     	ds	82
   337   00037A                     main@testSequence:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x7A
   341   00037A                     	ds	4
   342   00037E                     main@moveSequence:
   343                           	callstack 0
   344                           
   345                           ; 40 bytes @ 0x7E
   346   00037E                     	ds	40
   347   0003A6                     main@reverseDuration:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0xA6
   351   0003A6                     	ds	1
   352   0003A7                     main@straightSpeed:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0xA7
   356   0003A7                     	ds	1
   357   0003A8                     main@turnSpeed:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0xA8
   361   0003A8                     	ds	1
   362   0003A9                     main@turnRamp:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0xA9
   366   0003A9                     	ds	1
   367   0003AA                     main@red:
   368                           	callstack 0
   369                           
   370                           ; 6 bytes @ 0xAA
   371   0003AA                     	ds	6
   372   0003B0                     main@green:
   373                           	callstack 0
   374                           
   375                           ; 6 bytes @ 0xB0
   376   0003B0                     	ds	6
   377   0003B6                     main@blue:
   378                           	callstack 0
   379                           
   380                           ; 6 bytes @ 0xB6
   381   0003B6                     	ds	6
   382   0003BC                     main@yellow:
   383                           	callstack 0
   384                           
   385                           ; 6 bytes @ 0xBC
   386   0003BC                     	ds	6
   387   0003C2                     main@pink:
   388                           	callstack 0
   389                           
   390                           ; 6 bytes @ 0xC2
   391   0003C2                     	ds	6
   392   0003C8                     main@orange:
   393                           	callstack 0
   394                           
   395                           ; 6 bytes @ 0xC8
   396   0003C8                     	ds	6
   397   0003CE                     main@lightblue:
   398                           	callstack 0
   399                           
   400                           ; 6 bytes @ 0xCE
   401   0003CE                     	ds	6
   402   0003D4                     main@white:
   403                           	callstack 0
   404                           
   405                           ; 6 bytes @ 0xD4
   406   0003D4                     	ds	6
   407   0003DA                     main@curMove:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0xDA
   411   0003DA                     	ds	1
   412   0003DB                     main@color:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0xDB
   416   0003DB                     	ds	1
   417   0003DC                     main@straightRamp:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0xDC
   421   0003DC                     	ds	1
   422   0003DD                     main@turnDuration:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0xDD
   426   0003DD                     	ds	1
   427   0003DE                     main@HSV:
   428                           	callstack 0
   429                           
   430                           ; 6 bytes @ 0xDE
   431   0003DE                     	ds	6
   432   0003E4                     main@RGBC:
   433                           	callstack 0
   434                           
   435                           ; 8 bytes @ 0xE4
   436   0003E4                     	ds	8
   437   0003EC                     main@motorR:
   438                           	callstack 0
   439                           
   440                           ; 10 bytes @ 0xEC
   441   0003EC                     	ds	10
   442   0003F6                     main@motorL:
   443                           	callstack 0
   444                           
   445                           ; 10 bytes @ 0xF6
   446   0003F6                     	ds	10
   447                           
   448                           	psect	cstackBANK1
   449   000100                     __pcstackBANK1:
   450                           	callstack 0
   451   000100                     color_calibration@RGBC:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x0
   455   000100                     	ds	2
   456   000102                     color_calibration@HSV:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x2
   460   000102                     	ds	2
   461   000104                     color_calibration@red:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x4
   465   000104                     	ds	2
   466   000106                     color_calibration@green:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x6
   470   000106                     	ds	2
   471   000108                     color_calibration@blue:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x8
   475   000108                     	ds	2
   476   00010A                     color_calibration@yellow:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xA
   480   00010A                     	ds	2
   481   00010C                     color_calibration@pink:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0xC
   485   00010C                     	ds	2
   486   00010E                     color_calibration@orange:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0xE
   490   00010E                     	ds	2
   491   000110                     color_calibration@lightblue:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x10
   495   000110                     	ds	2
   496   000112                     color_calibration@white:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x12
   500   000112                     	ds	2
   501                           
   502                           	psect	cstackBANK0
   503   0000D8                     __pcstackBANK0:
   504                           	callstack 0
   505   0000D8                     move@mL:
   506                           	callstack 0
   507   0000D8                     _rgb_2_hsv$3532:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x0
   511   0000D8                     	ds	2
   512   0000DA                     move@mR:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x2
   516   0000DA                     	ds	2
   517   0000DC                     move@color:
   518                           	callstack 0
   519   0000DC                     rgb_2_hsv@cmin:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x4
   523   0000DC                     	ds	1
   524   0000DD                     move@moveSequence:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x5
   528   0000DD                     	ds	1
   529   0000DE                     _rgb_2_hsv$3530:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x6
   533   0000DE                     	ds	1
   534   0000DF                     move@straightTime:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x7
   538   0000DF                     	ds	1
   539   0000E0                     _rgb_2_hsv$3531:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x8
   543   0000E0                     	ds	1
   544   0000E1                     move@curMove:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x9
   548   0000E1                     	ds	1
   549   0000E2                     move@straightSpeed:
   550                           	callstack 0
   551   0000E2                     rgb_2_hsv@r:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xA
   555   0000E2                     	ds	1
   556   0000E3                     move@reverseDuration:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0xB
   560   0000E3                     	ds	1
   561   0000E4                     move@straightRamp:
   562                           	callstack 0
   563   0000E4                     rgb_2_hsv@cmax:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0xC
   567   0000E4                     	ds	1
   568   0000E5                     move@turnSpeed:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0xD
   572   0000E5                     	ds	1
   573   0000E6                     move@turnDuration:
   574                           	callstack 0
   575   0000E6                     rgb_2_hsv@diff:
   576                           	callstack 0
   577                           
   578                           ; 4 bytes @ 0xE
   579   0000E6                     	ds	1
   580   0000E7                     move@turnRamp:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0xF
   584   0000E7                     	ds	3
   585   0000EA                     rgb_2_hsv@g:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x12
   589   0000EA                     	ds	2
   590   0000EC                     rgb_2_hsv@b:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x14
   594   0000EC                     	ds	2
   595                           
   596                           	psect	cstackCOMRAM
   597   000001                     __pcstackCOMRAM:
   598                           	callstack 0
   599   000001                     ??_getCharFromTxBuf:
   600   000001                     ??i2_I2C_2_Master_Idle:
   601   000001                     putCharToRxBuf@byte:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x0
   605   000001                     	ds	1
   606   000002                     i2I2C_2_Master_Write@data_byte:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x1
   610   000002                     	ds	1
   611   000003                     i2color_writetoaddr@value:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x2
   615   000003                     	ds	1
   616   000004                     i2color_writetoaddr@address:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x3
   620   000004                     	ds	1
   621   000005                     ??i2_color_clear_init_interrupts:
   622                           
   623                           ; 1 bytes @ 0x4
   624   000005                     	ds	1
   625   000006                     i2color_clear_init_interrupts@high_threshold:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x5
   629   000006                     	ds	2
   630   000008                     i2color_clear_init_interrupts@low_threshold:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x7
   634   000008                     	ds	2
   635   00000A                     ??_HighISR:
   636                           
   637                           ; 1 bytes @ 0x9
   638   00000A                     	ds	2
   639   00000C                     ??_I2C_2_Master_Idle:
   640   00000C                     ?_get16bitTMR0val:
   641                           	callstack 0
   642   00000C                     ?_max:
   643                           	callstack 0
   644   00000C                     ?_min:
   645                           	callstack 0
   646   00000C                     ?___wmul:
   647                           	callstack 0
   648   00000C                     ?___awdiv:
   649                           	callstack 0
   650   00000C                     ?___lmul:
   651                           	callstack 0
   652   00000C                     white_Light@state:
   653                           	callstack 0
   654   00000C                     ADC_getval@tmpval:
   655                           	callstack 0
   656   00000C                     max@a:
   657                           	callstack 0
   658   00000C                     min@a:
   659                           	callstack 0
   660   00000C                     initDCmotorsPWM@PWMperiod:
   661                           	callstack 0
   662   00000C                     ___wmul@multiplier:
   663                           	callstack 0
   664   00000C                     ___awdiv@dividend:
   665                           	callstack 0
   666   00000C                     ___lmul@multiplier:
   667                           	callstack 0
   668   00000C                     color_detect@HSV:
   669                           	callstack 0
   670                           
   671                           ; 6 bytes @ 0xB
   672   00000C                     	ds	1
   673   00000D                     ??_I2C_2_Master_Read:
   674   00000D                     I2C_2_Master_Write@data_byte:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0xC
   678   00000D                     	ds	1
   679   00000E                     ??_get16bitTMR0val:
   680   00000E                     color_writetoaddr@value:
   681                           	callstack 0
   682   00000E                     I2C_2_Master_Read@ack:
   683                           	callstack 0
   684   00000E                     max@b:
   685                           	callstack 0
   686   00000E                     min@b:
   687                           	callstack 0
   688   00000E                     ___wmul@multiplicand:
   689                           	callstack 0
   690   00000E                     ___awdiv@divisor:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0xD
   694   00000E                     	ds	1
   695   00000F                     color_writetoaddr@address:
   696                           	callstack 0
   697   00000F                     I2C_2_Master_Read@tmp:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0xE
   701   00000F                     	ds	1
   702   000010                     ??_color_clear_init_interrupts:
   703   000010                     ___awdiv@counter:
   704                           	callstack 0
   705   000010                     color_read@RGBC:
   706                           	callstack 0
   707   000010                     get16bitTMR0val@timer_low:
   708                           	callstack 0
   709   000010                     ___wmul@product:
   710                           	callstack 0
   711   000010                     ___lmul@multiplicand:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0xF
   715   000010                     	ds	1
   716   000011                     ___awdiv@sign:
   717                           	callstack 0
   718   000011                     color_clear_init_interrupts@high_threshold:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x10
   722   000011                     	ds	1
   723   000012                     ??_color_read:
   724   000012                     ?___lwdiv:
   725                           	callstack 0
   726   000012                     get16bitTMR0val@timer_high:
   727                           	callstack 0
   728   000012                     ___awdiv@quotient:
   729                           	callstack 0
   730   000012                     ___lwdiv@dividend:
   731                           	callstack 0
   732   000012                     color_detect@red:
   733                           	callstack 0
   734                           
   735                           ; 6 bytes @ 0x11
   736   000012                     	ds	1
   737   000013                     color_clear_init_interrupts@low_threshold:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x12
   741   000013                     	ds	1
   742   000014                     batteryLevel@batteryVoltage:
   743                           	callstack 0
   744   000014                     get16bitTMR0val@timer_val:
   745                           	callstack 0
   746   000014                     ___lwdiv@divisor:
   747                           	callstack 0
   748   000014                     ___lmul@product:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x13
   752   000014                     	ds	1
   753   000015                     ??_color_click_init:
   754   000015                     batteryLevel@batteryQuarter:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x14
   758   000015                     	ds	1
   759   000016                     ___lwdiv@counter:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x15
   763   000016                     	ds	1
   764   000017                     ___lwdiv@quotient:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x16
   768   000017                     	ds	1
   769   000018                     ?___lldiv:
   770                           	callstack 0
   771   000018                     ?___aldiv:
   772                           	callstack 0
   773   000018                     ___lldiv@dividend:
   774                           	callstack 0
   775   000018                     ___aldiv@dividend:
   776                           	callstack 0
   777   000018                     color_detect@green:
   778                           	callstack 0
   779                           
   780                           ; 6 bytes @ 0x17
   781   000018                     	ds	1
   782   000019                     setMotorPWM@m:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x18
   786   000019                     	ds	2
   787   00001B                     ??_setMotorPWM:
   788                           
   789                           ; 1 bytes @ 0x1A
   790   00001B                     	ds	1
   791   00001C                     ___lldiv@divisor:
   792                           	callstack 0
   793   00001C                     ___aldiv@divisor:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x1B
   797   00001C                     	ds	1
   798   00001D                     setMotorPWM@posDuty:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x1C
   802   00001D                     	ds	1
   803   00001E                     setMotorPWM@negDuty:
   804                           	callstack 0
   805   00001E                     color_detect@blue:
   806                           	callstack 0
   807                           
   808                           ; 6 bytes @ 0x1D
   809   00001E                     	ds	1
   810   00001F                     stop@mL:
   811                           	callstack 0
   812   00001F                     turnLeft@mL:
   813                           	callstack 0
   814   00001F                     turnRight@mL:
   815                           	callstack 0
   816   00001F                     fullSpeedAhead@mL:
   817                           	callstack 0
   818   00001F                     reverseOneSquare@mL:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x1E
   822   00001F                     	ds	1
   823   000020                     ___aldiv@counter:
   824                           	callstack 0
   825   000020                     ___lldiv@quotient:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x1F
   829   000020                     	ds	1
   830   000021                     ___aldiv@sign:
   831                           	callstack 0
   832   000021                     stop@mR:
   833                           	callstack 0
   834   000021                     turnLeft@mR:
   835                           	callstack 0
   836   000021                     turnRight@mR:
   837                           	callstack 0
   838   000021                     fullSpeedAhead@mR:
   839                           	callstack 0
   840   000021                     reverseOneSquare@mR:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x20
   844   000021                     	ds	1
   845   000022                     ___aldiv@quotient:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x21
   849   000022                     	ds	1
   850   000023                     stop@straightRamp:
   851                           	callstack 0
   852   000023                     turnLeft@turnSpeed:
   853                           	callstack 0
   854   000023                     turnRight@turnSpeed:
   855                           	callstack 0
   856   000023                     fullSpeedAhead@straightSpeed:
   857                           	callstack 0
   858   000023                     reverseOneSquare@straightSpeed:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x22
   862   000023                     	ds	1
   863   000024                     ??_stop:
   864   000024                     turnLeft@turnDuration:
   865                           	callstack 0
   866   000024                     turnRight@turnDuration:
   867                           	callstack 0
   868   000024                     fullSpeedAhead@straightRamp:
   869                           	callstack 0
   870   000024                     reverseOneSquare@reverseDuration:
   871                           	callstack 0
   872   000024                     ___lldiv@counter:
   873                           	callstack 0
   874   000024                     color_detect@yellow:
   875                           	callstack 0
   876                           
   877                           ; 6 bytes @ 0x23
   878   000024                     	ds	1
   879   000025                     ??_fullSpeedAhead:
   880   000025                     turnLeft@turnRamp:
   881                           	callstack 0
   882   000025                     turnRight@turnRamp:
   883                           	callstack 0
   884   000025                     reverseOneSquare@straightRamp:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x24
   888   000025                     	ds	1
   889   000026                     ??_turnRight:
   890   000026                     ??_turnLeft:
   891   000026                     ??_reverseOneSquare:
   892   000026                     rgb_2_hsv@RGBC:
   893                           	callstack 0
   894                           
   895                           ; 8 bytes @ 0x25
   896   000026                     	ds	1
   897   000027                     stop@i:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x26
   901   000027                     	ds	1
   902   000028                     fullSpeedAhead@i:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x27
   906   000028                     	ds	1
   907   000029                     stop@cur_power:
   908                           	callstack 0
   909   000029                     turnLeft@i:
   910                           	callstack 0
   911   000029                     turnRight@i:
   912                           	callstack 0
   913   000029                     reverseOneSquare@i:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x28
   917   000029                     	ds	1
   918   00002A                     fullSpeedAhead@cur_power:
   919                           	callstack 0
   920   00002A                     color_detect@pink:
   921                           	callstack 0
   922                           
   923                           ; 6 bytes @ 0x29
   924   00002A                     	ds	1
   925   00002B                     turnLeft@cur_power:
   926                           	callstack 0
   927   00002B                     turnRight@cur_power:
   928                           	callstack 0
   929   00002B                     reverseOneSquare@cur_power:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x2A
   933   00002B                     	ds	2
   934   00002D                     returnHome@mL:
   935                           	callstack 0
   936   00002D                     lostReturnHome@mL:
   937                           	callstack 0
   938   00002D                     calibration@mL:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x2C
   942   00002D                     	ds	1
   943   00002E                     rgb_2_hsv@HSV:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x2D
   947   00002E                     	ds	1
   948   00002F                     returnHome@mR:
   949                           	callstack 0
   950   00002F                     lostReturnHome@mR:
   951                           	callstack 0
   952   00002F                     calibration@mR:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x2E
   956   00002F                     	ds	1
   957   000030                     ??_rgb_2_hsv:
   958   000030                     color_detect@orange:
   959                           	callstack 0
   960                           
   961                           ; 6 bytes @ 0x2F
   962   000030                     	ds	1
   963   000031                     calibration@turnSpeed:
   964                           	callstack 0
   965   000031                     returnHome@moveSequence:
   966                           	callstack 0
   967   000031                     lostReturnHome@moveSequence:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x30
   971   000031                     	ds	1
   972   000032                     calibration@turnDuration:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x31
   976   000032                     	ds	1
   977   000033                     returnHome@straightTime:
   978                           	callstack 0
   979   000033                     lostReturnHome@straightTime:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x32
   983   000033                     	ds	1
   984   000034                     calibration@turnRamp:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0x33
   988   000034                     	ds	1
   989   000035                     ??_calibration:
   990   000035                     returnHome@curMove:
   991                           	callstack 0
   992   000035                     lostReturnHome@curMove:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x34
   996   000035                     	ds	1
   997   000036                     returnHome@straightSpeed:
   998                           	callstack 0
   999   000036                     lostReturnHome@straightSpeed:
  1000                           	callstack 0
  1001   000036                     color_detect@lightblue:
  1002                           	callstack 0
  1003                           
  1004                           ; 6 bytes @ 0x35
  1005   000036                     	ds	1
  1006   000037                     returnHome@reverseDuration:
  1007                           	callstack 0
  1008   000037                     lostReturnHome@reverseDuration:
  1009                           	callstack 0
  1010                           
  1011                           ; 1 bytes @ 0x36
  1012   000037                     	ds	1
  1013   000038                     returnHome@straightRamp:
  1014                           	callstack 0
  1015   000038                     lostReturnHome@straightRamp:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x37
  1019   000038                     	ds	1
  1020   000039                     returnHome@turnSpeed:
  1021                           	callstack 0
  1022   000039                     lostReturnHome@turnSpeed:
  1023                           	callstack 0
  1024                           
  1025                           ; 1 bytes @ 0x38
  1026   000039                     	ds	1
  1027   00003A                     returnHome@turnDuration:
  1028                           	callstack 0
  1029   00003A                     lostReturnHome@turnDuration:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x39
  1033   00003A                     	ds	1
  1034   00003B                     returnHome@turnRamp:
  1035                           	callstack 0
  1036   00003B                     lostReturnHome@turnRamp:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x3A
  1040   00003B                     	ds	1
  1041   00003C                     ??_color_calibration:
  1042   00003C                     ??_lostReturnHome:
  1043   00003C                     ??_returnHome:
  1044   00003C                     color_detect@white:
  1045                           	callstack 0
  1046                           
  1047                           ; 6 bytes @ 0x3B
  1048   00003C                     	ds	4
  1049   000040                     returnHome@i:
  1050                           	callstack 0
  1051   000040                     lostReturnHome@i:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x3F
  1055   000040                     	ds	1
  1056   000041                     ??_move:
  1057                           
  1058                           ; 1 bytes @ 0x40
  1059   000041                     	ds	1
  1060   000042                     ??_color_detect:
  1061                           
  1062                           ; 1 bytes @ 0x41
  1063   000042                     	ds	2
  1064   000044                     color_detect@color:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x43
  1068   000044                     	ds	1
  1069   000045                     ??_main:
  1070                           
  1071                           ; 1 bytes @ 0x44
  1072   000045                     	ds	2
  1073                           
  1074 ;;
  1075 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1076 ;;
  1077 ;; *************** function _main *****************
  1078 ;; Defined at:
  1079 ;;		line 28 in file "main.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  straightTime   82   40[BANK3 ] unsigned int [41]
  1084 ;;  moveSequence   40  126[BANK3 ] unsigned char [40]
  1085 ;;  buf            40    0[BANK3 ] unsigned char [40]
  1086 ;;  motorL         10  246[BANK3 ] struct DC_motor
  1087 ;;  motorR         10  236[BANK3 ] struct DC_motor
  1088 ;;  RGBC            8  228[BANK3 ] struct RGBC_val
  1089 ;;  RGBC_n          8    0        struct RGBC_val
  1090 ;;  HSV             6  222[BANK3 ] struct HSV_val
  1091 ;;  white           6  212[BANK3 ] struct HSV_calib
  1092 ;;  lightblue       6  206[BANK3 ] struct HSV_calib
  1093 ;;  orange          6  200[BANK3 ] struct HSV_calib
  1094 ;;  pink            6  194[BANK3 ] struct HSV_calib
  1095 ;;  yellow          6  188[BANK3 ] struct HSV_calib
  1096 ;;  blue            6  182[BANK3 ] struct HSV_calib
  1097 ;;  green           6  176[BANK3 ] struct HSV_calib
  1098 ;;  red             6  170[BANK3 ] struct HSV_calib
  1099 ;;  testSequence    4  122[BANK3 ] unsigned char [4]
  1100 ;;  PWMcycle        2    0        unsigned int 
  1101 ;;  turnDuration    1  221[BANK3 ] unsigned char 
  1102 ;;  straightRamp    1  220[BANK3 ] unsigned char 
  1103 ;;  color           1  219[BANK3 ] unsigned char 
  1104 ;;  curMove         1  218[BANK3 ] unsigned char 
  1105 ;;  turnRamp        1  169[BANK3 ] unsigned char 
  1106 ;;  turnSpeed       1  168[BANK3 ] unsigned char 
  1107 ;;  straightSpee    1  167[BANK3 ] unsigned char 
  1108 ;;  reverseDurat    1  166[BANK3 ] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1119 ;;      Locals:         0       0       0       0     256       0       0       0       0       0       0       0       
      +0       0       0
  1120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1121 ;;      Totals:         2       0       0       0     256       0       0       0       0       0       0       0       
      +0       0       0
  1122 ;;Total ram usage:      258 bytes
  1123 ;; Hardware stack levels required when called: 10
  1124 ;; This function calls:
  1125 ;;		_Buggy_init
  1126 ;;		_Timer0_init
  1127 ;;		_batteryLevel
  1128 ;;		_calibration
  1129 ;;		_color_calibration
  1130 ;;		_color_click_init
  1131 ;;		_color_detect
  1132 ;;		_color_read
  1133 ;;		_fullSpeedAhead
  1134 ;;		_get16bitTMR0val
  1135 ;;		_initDCmotorsPWM
  1136 ;;		_initUSART4
  1137 ;;		_lostReturnHome
  1138 ;;		_move
  1139 ;;		_resetTimer
  1140 ;;		_rgb_2_hsv
  1141 ;;		_stop
  1142 ;;		_white_Light
  1143 ;; This function is called by:
  1144 ;;		Startup code after reset
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text0
  1149   00276E                     __ptext0:
  1150                           	callstack 0
  1151   00276E                     _main:
  1152                           	callstack 21
  1153   00276E                     
  1154                           ;main.c: 30:     char buf[40] = {0};
  1155   00276E  EE23  F000         	lfsr	2,main@buf
  1156   002772  0E27               	movlw	39
  1157   002774                     u4601:
  1158   002774  6ADE               	clrf	postinc2,c
  1159   002776  06E8               	decf	wreg,f,c
  1160   002778  E2FD               	bc	u4601
  1161   00277A                     
  1162                           ;main.c: 33:     unsigned char moveSequence[40] = {0};
  1163   00277A  EE23  F07E         	lfsr	2,main@moveSequence
  1164   00277E  0E27               	movlw	39
  1165   002780                     u4611:
  1166   002780  6ADE               	clrf	postinc2,c
  1167   002782  06E8               	decf	wreg,f,c
  1168   002784  E2FD               	bc	u4611
  1169                           
  1170                           ;main.c: 34:     unsigned int straightTime[41] = {0};
  1171   002786  EE23  F028         	lfsr	2,main@straightTime
  1172   00278A  0E51               	movlw	81
  1173   00278C                     u4621:
  1174   00278C  6ADE               	clrf	postinc2,c
  1175   00278E  06E8               	decf	wreg,f,c
  1176   002790  E2FD               	bc	u4621
  1177   002792                     
  1178                           ;main.c: 35:     char curMove = 0;
  1179   002792  0E00               	movlw	0
  1180   002794  0103               	movlb	3	; () banked
  1181   002796  6FDA               	movwf	main@curMove& (0+255),b
  1182   002798                     
  1183                           ; BSR set to: 3
  1184                           ;main.c: 37:     unsigned char testSequence[4] = {4,3,9,8};
  1185   002798  C0EE  F37A         	movff	main@F14649,main@testSequence
  1186   00279C  C0EF  F37B         	movff	main@F14649+1,main@testSequence+1
  1187   0027A0  C0F0  F37C         	movff	main@F14649+2,main@testSequence+2
  1188   0027A4  C0F1  F37D         	movff	main@F14649+3,main@testSequence+3
  1189   0027A8                     
  1190                           ; BSR set to: 3
  1191                           ;main.c: 40:     struct RGBC_val RGBC, RGBC_n;;main.c: 41:     struct HSV_val HSV;;main.
      +                          c: 42:     struct DC_motor motorL, motorR;;main.c: 45:     Buggy_init();
  1192   0027A8  EC94  F023         	call	_Buggy_init	;wreg free
  1193   0027AC                     
  1194                           ;main.c: 46:     color_click_init();
  1195   0027AC  EC78  F023         	call	_color_click_init	;wreg free
  1196   0027B0                     
  1197                           ;main.c: 47:     Timer0_init();
  1198   0027B0  EC87  F024         	call	_Timer0_init	;wreg free
  1199   0027B4                     
  1200                           ;main.c: 49:     initUSART4();
  1201   0027B4  ECA7  F024         	call	_initUSART4	;wreg free
  1202   0027B8                     
  1203                           ;main.c: 50:     initDCmotorsPWM(PWMcycle);
  1204   0027B8  0E00               	movlw	0
  1205   0027BA  6E0D               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1206   0027BC  0EC7               	movlw	199
  1207   0027BE  6E0C               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1208   0027C0  ECCC  F021         	call	_initDCmotorsPWM	;wreg free
  1209   0027C4                     
  1210                           ;main.c: 52:     motorL.power=0;
  1211   0027C4  0E00               	movlw	0
  1212   0027C6  0103               	movlb	3	; () banked
  1213   0027C8  6FF6               	movwf	main@motorL& (0+255),b
  1214   0027CA                     
  1215                           ; BSR set to: 3
  1216                           ;main.c: 53:     motorL.direction=1;
  1217   0027CA  0E01               	movlw	1
  1218   0027CC  6FF7               	movwf	(main@motorL+1)& (0+255),b
  1219   0027CE                     
  1220                           ; BSR set to: 3
  1221                           ;main.c: 54:     motorL.brakemode=1;
  1222   0027CE  0E01               	movlw	1
  1223   0027D0  6FF8               	movwf	(main@motorL+2)& (0+255),b
  1224   0027D2                     
  1225                           ; BSR set to: 3
  1226                           ;main.c: 55:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1227   0027D2  0EAA               	movlw	170
  1228   0027D4  6FFB               	movwf	(main@motorL+5)& (0+255),b
  1229   0027D6  0E0F               	movlw	15
  1230   0027D8  6FFC               	movwf	(main@motorL+6)& (0+255),b
  1231   0027DA                     
  1232                           ; BSR set to: 3
  1233                           ;main.c: 56:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1234   0027DA  0EA6               	movlw	166
  1235   0027DC  6FFD               	movwf	(main@motorL+7)& (0+255),b
  1236   0027DE  0E0F               	movlw	15
  1237   0027E0  6FFE               	movwf	(main@motorL+8)& (0+255),b
  1238   0027E2                     
  1239                           ; BSR set to: 3
  1240                           ;main.c: 57:     motorL.PWMperiod=PWMcycle;
  1241   0027E2  0E00               	movlw	0
  1242   0027E4  6FFA               	movwf	(main@motorL+4)& (0+255),b
  1243   0027E6  0EC7               	movlw	199
  1244   0027E8  6FF9               	movwf	(main@motorL+3)& (0+255),b
  1245   0027EA                     
  1246                           ; BSR set to: 3
  1247                           ;main.c: 58:     motorL.compensation=3;
  1248   0027EA  0E03               	movlw	3
  1249   0027EC  6FFF               	movwf	(main@motorL+9)& (0+255),b
  1250   0027EE                     
  1251                           ; BSR set to: 3
  1252                           ;main.c: 60:     motorR.power=0;
  1253   0027EE  0E00               	movlw	0
  1254   0027F0  6FEC               	movwf	main@motorR& (0+255),b
  1255   0027F2                     
  1256                           ; BSR set to: 3
  1257                           ;main.c: 61:     motorR.direction=1;
  1258   0027F2  0E01               	movlw	1
  1259   0027F4  6FED               	movwf	(main@motorR+1)& (0+255),b
  1260   0027F6                     
  1261                           ; BSR set to: 3
  1262                           ;main.c: 62:     motorR.brakemode=1;
  1263   0027F6  0E01               	movlw	1
  1264   0027F8  6FEE               	movwf	(main@motorR+2)& (0+255),b
  1265   0027FA                     
  1266                           ; BSR set to: 3
  1267                           ;main.c: 63:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1268   0027FA  0E25               	movlw	37
  1269   0027FC  6FF1               	movwf	(main@motorR+5)& (0+255),b
  1270   0027FE  0E0F               	movlw	15
  1271   002800  6FF2               	movwf	(main@motorR+6)& (0+255),b
  1272   002802                     
  1273                           ; BSR set to: 3
  1274                           ;main.c: 64:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1275   002802  0E21               	movlw	33
  1276   002804  6FF3               	movwf	(main@motorR+7)& (0+255),b
  1277   002806  0E0F               	movlw	15
  1278   002808  6FF4               	movwf	(main@motorR+8)& (0+255),b
  1279   00280A                     
  1280                           ; BSR set to: 3
  1281                           ;main.c: 65:     motorR.PWMperiod=PWMcycle;
  1282   00280A  0E00               	movlw	0
  1283   00280C  6FF0               	movwf	(main@motorR+4)& (0+255),b
  1284   00280E  0EC7               	movlw	199
  1285   002810  6FEF               	movwf	(main@motorR+3)& (0+255),b
  1286   002812                     
  1287                           ; BSR set to: 3
  1288                           ;main.c: 66:     motorR.compensation=0;
  1289   002812  0E00               	movlw	0
  1290   002814  6FF5               	movwf	(main@motorR+9)& (0+255),b
  1291   002816                     
  1292                           ; BSR set to: 3
  1293                           ;main.c: 69:     char straightSpeed=25;
  1294   002816  0E19               	movlw	25
  1295   002818  6FA7               	movwf	main@straightSpeed& (0+255),b
  1296   00281A                     
  1297                           ; BSR set to: 3
  1298                           ;main.c: 70:     unsigned char straightRamp=1;
  1299   00281A  0E01               	movlw	1
  1300   00281C  6FDC               	movwf	main@straightRamp& (0+255),b
  1301   00281E                     
  1302                           ; BSR set to: 3
  1303                           ;main.c: 72:     unsigned char reverseDuration=10;
  1304   00281E  0E0A               	movlw	10
  1305   002820  6FA6               	movwf	main@reverseDuration& (0+255),b
  1306   002822                     
  1307                           ; BSR set to: 3
  1308                           ;main.c: 74:     char turnSpeed=20;
  1309   002822  0E14               	movlw	20
  1310   002824  6FA8               	movwf	main@turnSpeed& (0+255),b
  1311   002826                     
  1312                           ; BSR set to: 3
  1313                           ;main.c: 75:     unsigned char turnDuration=5;
  1314   002826  0E05               	movlw	5
  1315   002828  6FDD               	movwf	main@turnDuration& (0+255),b
  1316   00282A                     
  1317                           ; BSR set to: 3
  1318                           ;main.c: 76:     unsigned char turnRamp=2;
  1319   00282A  0E02               	movlw	2
  1320   00282C  6FA9               	movwf	main@turnRamp& (0+255),b
  1321   00282E                     
  1322                           ; BSR set to: 3
  1323                           ;main.c: 79:     batteryLevel();
  1324   00282E  EC30  F023         	call	_batteryLevel	;wreg free
  1325   002832                     l87:
  1326   002832  B48E               	btfsc	142,2,c	;volatile
  1327   002834  EF1E  F014         	goto	u4631
  1328   002838  EF20  F014         	goto	u4630
  1329   00283C                     u4631:
  1330   00283C  EF19  F014         	goto	l87
  1331   002840                     u4630:
  1332   002840                     
  1333                           ;main.c: 92:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1334   002840  9680               	bcf	128,3,c	;volatile
  1335   002842  9E7C               	bcf	124,7,c	;volatile
  1336                           
  1337                           ;main.c: 95:     LATHbits.LATH1=LATDbits.LATD3=1;
  1338   002844  867C               	bsf	124,3,c	;volatile
  1339   002846  8280               	bsf	128,1,c	;volatile
  1340   002848                     
  1341                           ;main.c: 96:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1342   002848  0E29               	movlw	41
  1343   00284A  6E46               	movwf	(??_main+1)^0,c
  1344   00284C  0E96               	movlw	150
  1345   00284E  6E45               	movwf	??_main^0,c
  1346   002850  0E7F               	movlw	127
  1347   002852                     u4907:
  1348   002852  2EE8               	decfsz	wreg,f,c
  1349   002854  D7FE               	bra	u4907
  1350   002856  2E45               	decfsz	??_main^0,f,c
  1351   002858  D7FC               	bra	u4907
  1352   00285A  2E46               	decfsz	(??_main+1)^0,f,c
  1353   00285C  D7FA               	bra	u4907
  1354   00285E  0000               	nop	
  1355   002860                     
  1356                           ;main.c: 99:     struct HSV_calib red, green, blue, yellow, pink, orange, lightblue, whi
      +                          te;;main.c: 100:     color_calibration(&RGBC, &HSV, &red, &green, &blue, &yellow, &pink,
      +                           &orange, &lightblue, &white);
  1357   002860  0EE4               	movlw	low main@RGBC
  1358   002862  0101               	movlb	1	; () banked
  1359   002864  6F00               	movwf	color_calibration@RGBC& (0+255),b
  1360   002866  0E03               	movlw	high main@RGBC
  1361   002868  6F01               	movwf	(color_calibration@RGBC+1)& (0+255),b
  1362   00286A  0EDE               	movlw	low main@HSV
  1363   00286C  6F02               	movwf	color_calibration@HSV& (0+255),b
  1364   00286E  0E03               	movlw	high main@HSV
  1365   002870  6F03               	movwf	(color_calibration@HSV+1)& (0+255),b
  1366   002872  0EAA               	movlw	low main@red
  1367   002874  6F04               	movwf	color_calibration@red& (0+255),b
  1368   002876  0E03               	movlw	high main@red
  1369   002878  6F05               	movwf	(color_calibration@red+1)& (0+255),b
  1370   00287A  0EB0               	movlw	low main@green
  1371   00287C  6F06               	movwf	color_calibration@green& (0+255),b
  1372   00287E  0E03               	movlw	high main@green
  1373   002880  6F07               	movwf	(color_calibration@green+1)& (0+255),b
  1374   002882  0EB6               	movlw	low main@blue
  1375   002884  6F08               	movwf	color_calibration@blue& (0+255),b
  1376   002886  0E03               	movlw	high main@blue
  1377   002888  6F09               	movwf	(color_calibration@blue+1)& (0+255),b
  1378   00288A  0EBC               	movlw	low main@yellow
  1379   00288C  6F0A               	movwf	color_calibration@yellow& (0+255),b
  1380   00288E  0E03               	movlw	high main@yellow
  1381   002890  6F0B               	movwf	(color_calibration@yellow+1)& (0+255),b
  1382   002892  0EC2               	movlw	low main@pink
  1383   002894  6F0C               	movwf	color_calibration@pink& (0+255),b
  1384   002896  0E03               	movlw	high main@pink
  1385   002898  6F0D               	movwf	(color_calibration@pink+1)& (0+255),b
  1386   00289A  0EC8               	movlw	low main@orange
  1387   00289C  6F0E               	movwf	color_calibration@orange& (0+255),b
  1388   00289E  0E03               	movlw	high main@orange
  1389   0028A0  6F0F               	movwf	(color_calibration@orange+1)& (0+255),b
  1390   0028A2  0ECE               	movlw	low main@lightblue
  1391   0028A4  6F10               	movwf	color_calibration@lightblue& (0+255),b
  1392   0028A6  0E03               	movlw	high main@lightblue
  1393   0028A8  6F11               	movwf	(color_calibration@lightblue+1)& (0+255),b
  1394   0028AA  0ED4               	movlw	low main@white
  1395   0028AC  6F12               	movwf	color_calibration@white& (0+255),b
  1396   0028AE  0E03               	movlw	high main@white
  1397   0028B0  6F13               	movwf	(color_calibration@white+1)& (0+255),b
  1398   0028B2  ECD9  F010         	call	_color_calibration	;wreg free
  1399   0028B6                     
  1400                           ;main.c: 103:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1401   0028B6  0EF6               	movlw	low main@motorL
  1402   0028B8  6E2D               	movwf	calibration@mL^0,c
  1403   0028BA  0E03               	movlw	high main@motorL
  1404   0028BC  6E2E               	movwf	(calibration@mL+1)^0,c
  1405   0028BE  0EEC               	movlw	low main@motorR
  1406   0028C0  6E2F               	movwf	calibration@mR^0,c
  1407   0028C2  0E03               	movlw	high main@motorR
  1408   0028C4  6E30               	movwf	(calibration@mR+1)^0,c
  1409   0028C6  0E14               	movlw	20
  1410   0028C8  6E31               	movwf	calibration@turnSpeed^0,c
  1411   0028CA  0EDD               	movlw	low main@turnDuration
  1412   0028CC  6E32               	movwf	calibration@turnDuration^0,c
  1413   0028CE  0E03               	movlw	high main@turnDuration
  1414   0028D0  6E33               	movwf	(calibration@turnDuration+1)^0,c
  1415   0028D2  0E02               	movlw	2
  1416   0028D4  6E34               	movwf	calibration@turnRamp^0,c
  1417   0028D6  ECA7  F018         	call	_calibration	;wreg free
  1418   0028DA                     
  1419                           ;main.c: 106:     color_read(&RGBC);
  1420   0028DA  0EE4               	movlw	low main@RGBC
  1421   0028DC  6E10               	movwf	color_read@RGBC^0,c
  1422   0028DE  0E03               	movlw	high main@RGBC
  1423   0028E0  6E11               	movwf	(color_read@RGBC+1)^0,c
  1424   0028E2  EC28  F01B         	call	_color_read	;wreg free
  1425   0028E6                     
  1426                           ;main.c: 107:     rgb_2_hsv(RGBC, &HSV);
  1427   0028E6  EE23  F0E4         	lfsr	2,main@RGBC
  1428   0028EA  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  1429   0028EE  0E07               	movlw	7
  1430   0028F0                     u4641:
  1431   0028F0  CFDB FFEB          	movff	plusw2,plusw0
  1432   0028F4  06E8               	decf	wreg,f,c
  1433   0028F6  E2FC               	bc	u4641
  1434   0028F8  0EDE               	movlw	low main@HSV
  1435   0028FA  6E2E               	movwf	rgb_2_hsv@HSV^0,c
  1436   0028FC  0E03               	movlw	high main@HSV
  1437   0028FE  6E2F               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1438   002900  EC39  F016         	call	_rgb_2_hsv	;wreg free
  1439   002904                     
  1440                           ;main.c: 108:     color = color_detect(HSV, red, green, blue, yellow, pink, orange, ligh
      +                          tblue, white);
  1441   002904  EE23  F0DE         	lfsr	2,main@HSV
  1442   002908  EE00  F00C         	lfsr	0,color_detect@HSV
  1443   00290C  0E05               	movlw	5
  1444   00290E                     u4651:
  1445   00290E  CFDB FFEB          	movff	plusw2,plusw0
  1446   002912  06E8               	decf	wreg,f,c
  1447   002914  E2FC               	bc	u4651
  1448   002916  EE23  F0AA         	lfsr	2,main@red
  1449   00291A  EE00  F012         	lfsr	0,color_detect@red
  1450   00291E  0E05               	movlw	5
  1451   002920                     u4661:
  1452   002920  CFDB FFEB          	movff	plusw2,plusw0
  1453   002924  06E8               	decf	wreg,f,c
  1454   002926  E2FC               	bc	u4661
  1455   002928  EE23  F0B0         	lfsr	2,main@green
  1456   00292C  EE00  F018         	lfsr	0,color_detect@green
  1457   002930  0E05               	movlw	5
  1458   002932                     u4671:
  1459   002932  CFDB FFEB          	movff	plusw2,plusw0
  1460   002936  06E8               	decf	wreg,f,c
  1461   002938  E2FC               	bc	u4671
  1462   00293A  EE23  F0B6         	lfsr	2,main@blue
  1463   00293E  EE00  F01E         	lfsr	0,color_detect@blue
  1464   002942  0E05               	movlw	5
  1465   002944                     u4681:
  1466   002944  CFDB FFEB          	movff	plusw2,plusw0
  1467   002948  06E8               	decf	wreg,f,c
  1468   00294A  E2FC               	bc	u4681
  1469   00294C  EE23  F0BC         	lfsr	2,main@yellow
  1470   002950  EE00  F024         	lfsr	0,color_detect@yellow
  1471   002954  0E05               	movlw	5
  1472   002956                     u4691:
  1473   002956  CFDB FFEB          	movff	plusw2,plusw0
  1474   00295A  06E8               	decf	wreg,f,c
  1475   00295C  E2FC               	bc	u4691
  1476   00295E  EE23  F0C2         	lfsr	2,main@pink
  1477   002962  EE00  F02A         	lfsr	0,color_detect@pink
  1478   002966  0E05               	movlw	5
  1479   002968                     u4701:
  1480   002968  CFDB FFEB          	movff	plusw2,plusw0
  1481   00296C  06E8               	decf	wreg,f,c
  1482   00296E  E2FC               	bc	u4701
  1483   002970  EE23  F0C8         	lfsr	2,main@orange
  1484   002974  EE00  F030         	lfsr	0,color_detect@orange
  1485   002978  0E05               	movlw	5
  1486   00297A                     u4711:
  1487   00297A  CFDB FFEB          	movff	plusw2,plusw0
  1488   00297E  06E8               	decf	wreg,f,c
  1489   002980  E2FC               	bc	u4711
  1490   002982  EE23  F0CE         	lfsr	2,main@lightblue
  1491   002986  EE00  F036         	lfsr	0,color_detect@lightblue
  1492   00298A  0E05               	movlw	5
  1493   00298C                     u4721:
  1494   00298C  CFDB FFEB          	movff	plusw2,plusw0
  1495   002990  06E8               	decf	wreg,f,c
  1496   002992  E2FC               	bc	u4721
  1497   002994  EE23  F0D4         	lfsr	2,main@white
  1498   002998  EE00  F03C         	lfsr	0,color_detect@white
  1499   00299C  0E05               	movlw	5
  1500   00299E                     u4731:
  1501   00299E  CFDB FFEB          	movff	plusw2,plusw0
  1502   0029A2  06E8               	decf	wreg,f,c
  1503   0029A4  E2FC               	bc	u4731
  1504   0029A6  ECF4  F019         	call	_color_detect	;wreg free
  1505   0029AA  0103               	movlb	3	; () banked
  1506   0029AC  6FDB               	movwf	main@color& (0+255),b
  1507   0029AE                     
  1508                           ; BSR set to: 3
  1509                           ;main.c: 112:     white_Light(1);
  1510   0029AE  0E01               	movlw	1
  1511   0029B0  EC65  F024         	call	_white_Light
  1512   0029B4                     
  1513                           ;main.c: 113:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1514   0029B4  0E52               	movlw	82
  1515   0029B6  6E46               	movwf	(??_main+1)^0,c
  1516   0029B8  0E2B               	movlw	43
  1517   0029BA  6E45               	movwf	??_main^0,c
  1518   0029BC  0E00               	movlw	0
  1519   0029BE                     u4917:
  1520   0029BE  2EE8               	decfsz	wreg,f,c
  1521   0029C0  D7FE               	bra	u4917
  1522   0029C2  2E45               	decfsz	??_main^0,f,c
  1523   0029C4  D7FC               	bra	u4917
  1524   0029C6  2E46               	decfsz	(??_main+1)^0,f,c
  1525   0029C8  D7FA               	bra	u4917
  1526   0029CA  D000               	nop2	
  1527   0029CC                     
  1528                           ;main.c: 116:     color_read(&RGBC);
  1529   0029CC  0EE4               	movlw	low main@RGBC
  1530   0029CE  6E10               	movwf	color_read@RGBC^0,c
  1531   0029D0  0E03               	movlw	high main@RGBC
  1532   0029D2  6E11               	movwf	(color_read@RGBC+1)^0,c
  1533   0029D4  EC28  F01B         	call	_color_read	;wreg free
  1534   0029D8                     
  1535                           ;main.c: 117:     ambient=RGBC.C;
  1536   0029D8  C3EA  F04D         	movff	main@RGBC+6,_ambient
  1537   0029DC  C3EB  F04E         	movff	main@RGBC+7,_ambient+1
  1538   0029E0                     
  1539                           ;main.c: 118:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1540   0029E0  0E29               	movlw	41
  1541   0029E2  6E46               	movwf	(??_main+1)^0,c
  1542   0029E4  0E96               	movlw	150
  1543   0029E6  6E45               	movwf	??_main^0,c
  1544   0029E8  0E7F               	movlw	127
  1545   0029EA                     u4927:
  1546   0029EA  2EE8               	decfsz	wreg,f,c
  1547   0029EC  D7FE               	bra	u4927
  1548   0029EE  2E45               	decfsz	??_main^0,f,c
  1549   0029F0  D7FC               	bra	u4927
  1550   0029F2  2E46               	decfsz	(??_main+1)^0,f,c
  1551   0029F4  D7FA               	bra	u4927
  1552   0029F6  0000               	nop	
  1553   0029F8                     
  1554                           ;main.c: 120:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1555   0029F8  0EF6               	movlw	low main@motorL
  1556   0029FA  6E1F               	movwf	fullSpeedAhead@mL^0,c
  1557   0029FC  0E03               	movlw	high main@motorL
  1558   0029FE  6E20               	movwf	(fullSpeedAhead@mL+1)^0,c
  1559   002A00  0EEC               	movlw	low main@motorR
  1560   002A02  6E21               	movwf	fullSpeedAhead@mR^0,c
  1561   002A04  0E03               	movlw	high main@motorR
  1562   002A06  6E22               	movwf	(fullSpeedAhead@mR+1)^0,c
  1563   002A08  0E19               	movlw	25
  1564   002A0A  6E23               	movwf	fullSpeedAhead@straightSpeed^0,c
  1565   002A0C  0E01               	movlw	1
  1566   002A0E  6E24               	movwf	fullSpeedAhead@straightRamp^0,c
  1567   002A10  ECA6  F020         	call	_fullSpeedAhead	;wreg free
  1568   002A14                     
  1569                           ;main.c: 121:     resetTimer();
  1570   002A14  ECE7  F024         	call	_resetTimer	;wreg free
  1571   002A18                     
  1572                           ;main.c: 123:     wall=0;
  1573   002A18  0E00               	movlw	0
  1574   002A1A  6E48               	movwf	_wall^0,c
  1575   002A1C                     
  1576                           ;main.c: 124:     lost=0;
  1577   002A1C  0E00               	movlw	0
  1578   002A1E  6E47               	movwf	_lost^0,c
  1579   002A20                     l5270:
  1580                           
  1581                           ;main.c: 127:         if (wall == 1) {
  1582   002A20  0448               	decf	_wall^0,w,c
  1583   002A22  A4D8               	btfss	status,2,c
  1584   002A24  EF16  F015         	goto	u4741
  1585   002A28  EF18  F015         	goto	u4740
  1586   002A2C                     u4741:
  1587   002A2C  EFE8  F015         	goto	l5298
  1588   002A30                     u4740:
  1589   002A30                     
  1590                           ;main.c: 128:             PIE0bits.INT0IE=TMR0IE=0;
  1591   002A30  010E               	movlb	14	; () banked
  1592   002A32  9B29               	bcf	41,5,b	;volatile
  1593   002A34  AB29               	btfss	41,5,b	;volatile
  1594   002A36  D002               	bra	u4755
  1595   002A38  8129               	bsf	41,0,b	;volatile
  1596   002A3A  D002               	bra	u4757
  1597   002A3C                     u4755:
  1598   002A3C  010E               	movlb	14	; () banked
  1599   002A3E  9129               	bcf	41,0,b	;volatile
  1600   002A40                     u4757:
  1601   002A40                     
  1602                           ; BSR set to: 14
  1603                           ;main.c: 129:             straightTime[curMove] = get16bitTMR0val();
  1604   002A40  ECF0  F023         	call	_get16bitTMR0val	;wreg free
  1605   002A44  0103               	movlb	3	; () banked
  1606   002A46  51DA               	movf	main@curMove& (0+255),w,b
  1607   002A48  0D02               	mullw	2
  1608   002A4A  0E28               	movlw	low main@straightTime
  1609   002A4C  24F3               	addwf	243,w,c
  1610   002A4E  6ED9               	movwf	fsr2l,c
  1611   002A50  0E03               	movlw	high main@straightTime
  1612   002A52  20F4               	addwfc	prodh,w,c
  1613   002A54  6EDA               	movwf	fsr2h,c
  1614   002A56  C00C  FFDE         	movff	?_get16bitTMR0val,postinc2
  1615   002A5A  C00D  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1616                           
  1617                           ;main.c: 132:             stop(&motorL, &motorR, straightRamp);
  1618   002A5E  0EF6               	movlw	low main@motorL
  1619   002A60  6E1F               	movwf	stop@mL^0,c
  1620   002A62  0E03               	movlw	high main@motorL
  1621   002A64  6E20               	movwf	(stop@mL+1)^0,c
  1622   002A66  0EEC               	movlw	low main@motorR
  1623   002A68  6E21               	movwf	stop@mR^0,c
  1624   002A6A  0E03               	movlw	high main@motorR
  1625   002A6C  6E22               	movwf	(stop@mR+1)^0,c
  1626   002A6E  C3DC  F023         	movff	main@straightRamp,stop@straightRamp
  1627   002A72  EC22  F020         	call	_stop	;wreg free
  1628   002A76                     
  1629                           ;main.c: 133:             color_read(&RGBC);
  1630   002A76  0EE4               	movlw	low main@RGBC
  1631   002A78  6E10               	movwf	color_read@RGBC^0,c
  1632   002A7A  0E03               	movlw	high main@RGBC
  1633   002A7C  6E11               	movwf	(color_read@RGBC+1)^0,c
  1634   002A7E  EC28  F01B         	call	_color_read	;wreg free
  1635   002A82                     
  1636                           ;main.c: 135:             rgb_2_hsv(RGBC, &HSV);
  1637   002A82  EE23  F0E4         	lfsr	2,main@RGBC
  1638   002A86  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  1639   002A8A  0E07               	movlw	7
  1640   002A8C                     u4761:
  1641   002A8C  CFDB FFEB          	movff	plusw2,plusw0
  1642   002A90  06E8               	decf	wreg,f,c
  1643   002A92  E2FC               	bc	u4761
  1644   002A94  0EDE               	movlw	low main@HSV
  1645   002A96  6E2E               	movwf	rgb_2_hsv@HSV^0,c
  1646   002A98  0E03               	movlw	high main@HSV
  1647   002A9A  6E2F               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1648   002A9C  EC39  F016         	call	_rgb_2_hsv	;wreg free
  1649   002AA0                     
  1650                           ;main.c: 136:             color = color_detect(HSV, red, green, blue, yellow, pink, oran
      +                          ge, lightblue, white);
  1651   002AA0  EE23  F0DE         	lfsr	2,main@HSV
  1652   002AA4  EE00  F00C         	lfsr	0,color_detect@HSV
  1653   002AA8  0E05               	movlw	5
  1654   002AAA                     u4771:
  1655   002AAA  CFDB FFEB          	movff	plusw2,plusw0
  1656   002AAE  06E8               	decf	wreg,f,c
  1657   002AB0  E2FC               	bc	u4771
  1658   002AB2  EE23  F0AA         	lfsr	2,main@red
  1659   002AB6  EE00  F012         	lfsr	0,color_detect@red
  1660   002ABA  0E05               	movlw	5
  1661   002ABC                     u4781:
  1662   002ABC  CFDB FFEB          	movff	plusw2,plusw0
  1663   002AC0  06E8               	decf	wreg,f,c
  1664   002AC2  E2FC               	bc	u4781
  1665   002AC4  EE23  F0B0         	lfsr	2,main@green
  1666   002AC8  EE00  F018         	lfsr	0,color_detect@green
  1667   002ACC  0E05               	movlw	5
  1668   002ACE                     u4791:
  1669   002ACE  CFDB FFEB          	movff	plusw2,plusw0
  1670   002AD2  06E8               	decf	wreg,f,c
  1671   002AD4  E2FC               	bc	u4791
  1672   002AD6  EE23  F0B6         	lfsr	2,main@blue
  1673   002ADA  EE00  F01E         	lfsr	0,color_detect@blue
  1674   002ADE  0E05               	movlw	5
  1675   002AE0                     u4801:
  1676   002AE0  CFDB FFEB          	movff	plusw2,plusw0
  1677   002AE4  06E8               	decf	wreg,f,c
  1678   002AE6  E2FC               	bc	u4801
  1679   002AE8  EE23  F0BC         	lfsr	2,main@yellow
  1680   002AEC  EE00  F024         	lfsr	0,color_detect@yellow
  1681   002AF0  0E05               	movlw	5
  1682   002AF2                     u4811:
  1683   002AF2  CFDB FFEB          	movff	plusw2,plusw0
  1684   002AF6  06E8               	decf	wreg,f,c
  1685   002AF8  E2FC               	bc	u4811
  1686   002AFA  EE23  F0C2         	lfsr	2,main@pink
  1687   002AFE  EE00  F02A         	lfsr	0,color_detect@pink
  1688   002B02  0E05               	movlw	5
  1689   002B04                     u4821:
  1690   002B04  CFDB FFEB          	movff	plusw2,plusw0
  1691   002B08  06E8               	decf	wreg,f,c
  1692   002B0A  E2FC               	bc	u4821
  1693   002B0C  EE23  F0C8         	lfsr	2,main@orange
  1694   002B10  EE00  F030         	lfsr	0,color_detect@orange
  1695   002B14  0E05               	movlw	5
  1696   002B16                     u4831:
  1697   002B16  CFDB FFEB          	movff	plusw2,plusw0
  1698   002B1A  06E8               	decf	wreg,f,c
  1699   002B1C  E2FC               	bc	u4831
  1700   002B1E  EE23  F0CE         	lfsr	2,main@lightblue
  1701   002B22  EE00  F036         	lfsr	0,color_detect@lightblue
  1702   002B26  0E05               	movlw	5
  1703   002B28                     u4841:
  1704   002B28  CFDB FFEB          	movff	plusw2,plusw0
  1705   002B2C  06E8               	decf	wreg,f,c
  1706   002B2E  E2FC               	bc	u4841
  1707   002B30  EE23  F0D4         	lfsr	2,main@white
  1708   002B34  EE00  F03C         	lfsr	0,color_detect@white
  1709   002B38  0E05               	movlw	5
  1710   002B3A                     u4851:
  1711   002B3A  CFDB FFEB          	movff	plusw2,plusw0
  1712   002B3E  06E8               	decf	wreg,f,c
  1713   002B40  E2FC               	bc	u4851
  1714   002B42  ECF4  F019         	call	_color_detect	;wreg free
  1715   002B46  0103               	movlb	3	; () banked
  1716   002B48  6FDB               	movwf	main@color& (0+255),b
  1717   002B4A                     
  1718                           ; BSR set to: 3
  1719                           ;main.c: 138:             moveSequence[curMove] = color;
  1720   002B4A  0E7E               	movlw	low main@moveSequence
  1721   002B4C  25DA               	addwf	main@curMove& (0+255),w,b
  1722   002B4E  6ED9               	movwf	fsr2l,c
  1723   002B50  6ADA               	clrf	fsr2h,c
  1724   002B52  0E03               	movlw	high main@moveSequence
  1725   002B54  22DA               	addwfc	fsr2h,f,c
  1726   002B56  C3DB  FFDF         	movff	main@color,indf2
  1727   002B5A                     
  1728                           ; BSR set to: 3
  1729                           ;main.c: 141:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1730   002B5A  0EF6               	movlw	low main@motorL
  1731   002B5C  0100               	movlb	0	; () banked
  1732   002B5E  6FD8               	movwf	move@mL& (0+255),b
  1733   002B60  0E03               	movlw	high main@motorL
  1734   002B62  6FD9               	movwf	(move@mL+1)& (0+255),b
  1735   002B64  0EEC               	movlw	low main@motorR
  1736   002B66  6FDA               	movwf	move@mR& (0+255),b
  1737   002B68  0E03               	movlw	high main@motorR
  1738   002B6A  6FDB               	movwf	(move@mR+1)& (0+255),b
  1739   002B6C  C3DB  F0DC         	movff	main@color,move@color
  1740   002B70  0E7E               	movlw	low main@moveSequence
  1741   002B72  6FDD               	movwf	move@moveSequence& (0+255),b
  1742   002B74  0E03               	movlw	high main@moveSequence
  1743   002B76  6FDE               	movwf	(move@moveSequence+1)& (0+255),b
  1744   002B78  0E28               	movlw	low main@straightTime
  1745   002B7A  6FDF               	movwf	move@straightTime& (0+255),b
  1746   002B7C  0E03               	movlw	high main@straightTime
  1747   002B7E  6FE0               	movwf	(move@straightTime+1)& (0+255),b
  1748   002B80  C3DA  F0E1         	movff	main@curMove,move@curMove
  1749   002B84  C3A7  F0E2         	movff	main@straightSpeed,move@straightSpeed
  1750   002B88  C3A6  F0E3         	movff	main@reverseDuration,move@reverseDuration
  1751   002B8C  C3DC  F0E4         	movff	main@straightRamp,move@straightRamp
  1752   002B90  C3A8  F0E5         	movff	main@turnSpeed,move@turnSpeed
  1753   002B94  C3DD  F0E6         	movff	main@turnDuration,move@turnDuration
  1754   002B98  C3A9  F0E7         	movff	main@turnRamp,move@turnRamp
  1755   002B9C  ECAE  F00D         	call	_move	;wreg free
  1756   002BA0                     
  1757                           ;main.c: 144:             color_read(&RGBC);
  1758   002BA0  0EE4               	movlw	low main@RGBC
  1759   002BA2  6E10               	movwf	color_read@RGBC^0,c
  1760   002BA4  0E03               	movlw	high main@RGBC
  1761   002BA6  6E11               	movwf	(color_read@RGBC+1)^0,c
  1762   002BA8  EC28  F01B         	call	_color_read	;wreg free
  1763   002BAC                     
  1764                           ;main.c: 145:             ambient=RGBC.C;
  1765   002BAC  C3EA  F04D         	movff	main@RGBC+6,_ambient
  1766   002BB0  C3EB  F04E         	movff	main@RGBC+7,_ambient+1
  1767   002BB4                     
  1768                           ;main.c: 147:             curMove++;
  1769   002BB4  0103               	movlb	3	; () banked
  1770   002BB6  2BDA               	incf	main@curMove& (0+255),f,b
  1771   002BB8                     
  1772                           ; BSR set to: 3
  1773                           ;main.c: 148:             resetTimer();
  1774   002BB8  ECE7  F024         	call	_resetTimer	;wreg free
  1775   002BBC                     
  1776                           ;main.c: 149:             PIE0bits.INT0IE=TMR0IE=1;
  1777   002BBC  010E               	movlb	14	; () banked
  1778   002BBE  8B29               	bsf	41,5,b	;volatile
  1779   002BC0  AB29               	btfss	41,5,b	;volatile
  1780   002BC2  D002               	bra	u4865
  1781   002BC4  8129               	bsf	41,0,b	;volatile
  1782   002BC6  D002               	bra	u4867
  1783   002BC8                     u4865:
  1784   002BC8  010E               	movlb	14	; () banked
  1785   002BCA  9129               	bcf	41,0,b	;volatile
  1786   002BCC                     u4867:
  1787   002BCC                     
  1788                           ; BSR set to: 14
  1789                           ;main.c: 150:             wall = 0;
  1790   002BCC  0E00               	movlw	0
  1791   002BCE  6E48               	movwf	_wall^0,c
  1792   002BD0                     l5298:
  1793                           
  1794                           ;main.c: 154:         if (lost == 1) {
  1795   002BD0  0447               	decf	_lost^0,w,c
  1796   002BD2  A4D8               	btfss	status,2,c
  1797   002BD4  EFEE  F015         	goto	u4871
  1798   002BD8  EFF0  F015         	goto	u4870
  1799   002BDC                     u4871:
  1800   002BDC  EF24  F016         	goto	l5308
  1801   002BE0                     u4870:
  1802   002BE0                     
  1803                           ;main.c: 155:             PIE0bits.INT0IE=0;
  1804   002BE0  010E               	movlb	14	; () banked
  1805   002BE2  9129               	bcf	41,0,b	;volatile
  1806   002BE4                     
  1807                           ; BSR set to: 14
  1808                           ;main.c: 156:             stop(&motorL, &motorR, straightRamp);
  1809   002BE4  0EF6               	movlw	low main@motorL
  1810   002BE6  6E1F               	movwf	stop@mL^0,c
  1811   002BE8  0E03               	movlw	high main@motorL
  1812   002BEA  6E20               	movwf	(stop@mL+1)^0,c
  1813   002BEC  0EEC               	movlw	low main@motorR
  1814   002BEE  6E21               	movwf	stop@mR^0,c
  1815   002BF0  0E03               	movlw	high main@motorR
  1816   002BF2  6E22               	movwf	(stop@mR+1)^0,c
  1817   002BF4  C3DC  F023         	movff	main@straightRamp,stop@straightRamp
  1818   002BF8  EC22  F020         	call	_stop	;wreg free
  1819                           
  1820                           ;main.c: 157:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1821   002BFC  0EF6               	movlw	low main@motorL
  1822   002BFE  6E2D               	movwf	lostReturnHome@mL^0,c
  1823   002C00  0E03               	movlw	high main@motorL
  1824   002C02  6E2E               	movwf	(lostReturnHome@mL+1)^0,c
  1825   002C04  0EEC               	movlw	low main@motorR
  1826   002C06  6E2F               	movwf	lostReturnHome@mR^0,c
  1827   002C08  0E03               	movlw	high main@motorR
  1828   002C0A  6E30               	movwf	(lostReturnHome@mR+1)^0,c
  1829   002C0C  0E7E               	movlw	low main@moveSequence
  1830   002C0E  6E31               	movwf	lostReturnHome@moveSequence^0,c
  1831   002C10  0E03               	movlw	high main@moveSequence
  1832   002C12  6E32               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1833   002C14  0E28               	movlw	low main@straightTime
  1834   002C16  6E33               	movwf	lostReturnHome@straightTime^0,c
  1835   002C18  0E03               	movlw	high main@straightTime
  1836   002C1A  6E34               	movwf	(lostReturnHome@straightTime+1)^0,c
  1837   002C1C  C3DA  F035         	movff	main@curMove,lostReturnHome@curMove
  1838   002C20  C3A7  F036         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1839   002C24  C3A6  F037         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1840   002C28  C3DC  F038         	movff	main@straightRamp,lostReturnHome@straightRamp
  1841   002C2C  C3A8  F039         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1842   002C30  C3DD  F03A         	movff	main@turnDuration,lostReturnHome@turnDuration
  1843   002C34  C3A9  F03B         	movff	main@turnRamp,lostReturnHome@turnRamp
  1844   002C38  EC5F  F00A         	call	_lostReturnHome	;wreg free
  1845   002C3C                     
  1846                           ;main.c: 158:             PIE0bits.INT0IE=1;
  1847   002C3C  010E               	movlb	14	; () banked
  1848   002C3E  8129               	bsf	41,0,b	;volatile
  1849   002C40                     
  1850                           ; BSR set to: 14
  1851                           ;main.c: 159:             lost = 0;
  1852   002C40  0E00               	movlw	0
  1853   002C42  6E47               	movwf	_lost^0,c
  1854                           
  1855                           ;main.c: 160:             break;
  1856   002C44  EF37  F016         	goto	l98
  1857   002C48                     l5308:
  1858                           
  1859                           ;main.c: 163:         if (color == 8 || color == 9) {break;}
  1860   002C48  0E08               	movlw	8
  1861   002C4A  0103               	movlb	3	; () banked
  1862   002C4C  19DB               	xorwf	main@color& (0+255),w,b
  1863   002C4E  B4D8               	btfsc	status,2,c
  1864   002C50  EF2C  F016         	goto	u4881
  1865   002C54  EF2E  F016         	goto	u4880
  1866   002C58                     u4881:
  1867   002C58  EF37  F016         	goto	l98
  1868   002C5C                     u4880:
  1869   002C5C                     
  1870                           ; BSR set to: 3
  1871   002C5C  0E09               	movlw	9
  1872   002C5E  19DB               	xorwf	main@color& (0+255),w,b
  1873   002C60  A4D8               	btfss	status,2,c
  1874   002C62  EF35  F016         	goto	u4891
  1875   002C66  EF37  F016         	goto	u4890
  1876   002C6A                     u4891:
  1877   002C6A  EF10  F015         	goto	l5270
  1878   002C6E                     u4890:
  1879   002C6E                     l98:
  1880   002C6E  EF49  F000         	goto	start
  1881   002C72                     __end_of_main:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _move *****************
  1885 ;; Defined at:
  1886 ;;		line 91 in file "dc_motor.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  1889 ;;		 -> main@motorL(10), 
  1890 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  1891 ;;		 -> main@motorR(10), 
  1892 ;;  color           1    4[BANK0 ] unsigned char 
  1893 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  1894 ;;		 -> main@moveSequence(40), 
  1895 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  1896 ;;		 -> main@straightTime(82), 
  1897 ;;  curMove         1    9[BANK0 ] unsigned char 
  1898 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  1899 ;;  reverseDurat    1   11[BANK0 ] unsigned char 
  1900 ;;  straightRamp    1   12[BANK0 ] unsigned char 
  1901 ;;  turnSpeed       1   13[BANK0 ] unsigned char 
  1902 ;;  turnDuration    1   14[BANK0 ] unsigned char 
  1903 ;;  turnRamp        1   15[BANK0 ] unsigned char 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1915 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;Total ram usage:       18 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; Hardware stack levels required when called: 9
  1922 ;; This function calls:
  1923 ;;		_fullSpeedAhead
  1924 ;;		_returnHome
  1925 ;;		_reverseOneSquare
  1926 ;;		_turnLeft
  1927 ;;		_turnRight
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text1
  1934   001B5C                     __ptext1:
  1935                           	callstack 0
  1936   001B5C                     _move:
  1937                           	callstack 21
  1938   001B5C                     
  1939                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reve
      +                          rseDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, uns
      +                          igned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  1940   001B5C  0100               	movlb	0	; () banked
  1941   001B5E  05DC               	decf	move@color& (0+255),w,b
  1942   001B60  A4D8               	btfss	status,2,c
  1943   001B62  EFB5  F00D         	goto	u4421
  1944   001B66  EFB7  F00D         	goto	u4420
  1945   001B6A                     u4421:
  1946   001B6A  EFFF  F00D         	goto	l4986
  1947   001B6E                     u4420:
  1948   001B6E                     
  1949                           ; BSR set to: 0
  1950                           ;dc_motor.c: 94:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1951   001B6E  C0D8  F01F         	movff	move@mL,turnRight@mL
  1952   001B72  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  1953   001B76  C0DA  F021         	movff	move@mR,turnRight@mR
  1954   001B7A  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  1955   001B7E  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1956   001B82  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  1957   001B86  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  1958   001B8A  EC12  F01D         	call	_turnRight	;wreg free
  1959   001B8E                     
  1960                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1961   001B8E  0E05               	movlw	5
  1962   001B90  6E42               	movwf	(??_move+1)^0,c
  1963   001B92  0E0F               	movlw	15
  1964   001B94  6E41               	movwf	??_move^0,c
  1965   001B96  0EF1               	movlw	241
  1966   001B98                     u4937:
  1967   001B98  2EE8               	decfsz	wreg,f,c
  1968   001B9A  D7FE               	bra	u4937
  1969   001B9C  2E41               	decfsz	??_move^0,f,c
  1970   001B9E  D7FC               	bra	u4937
  1971   001BA0  2E42               	decfsz	(??_move+1)^0,f,c
  1972   001BA2  D7FA               	bra	u4937
  1973   001BA4  0000               	nop	
  1974   001BA6                     
  1975                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1976   001BA6  C0D8  F01F         	movff	move@mL,turnRight@mL
  1977   001BAA  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  1978   001BAE  C0DA  F021         	movff	move@mR,turnRight@mR
  1979   001BB2  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  1980   001BB6  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1981   001BBA  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  1982   001BBE  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  1983   001BC2  EC12  F01D         	call	_turnRight	;wreg free
  1984                           
  1985                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1986   001BC6  0E05               	movlw	5
  1987   001BC8  6E42               	movwf	(??_move+1)^0,c
  1988   001BCA  0E0F               	movlw	15
  1989   001BCC  6E41               	movwf	??_move^0,c
  1990   001BCE  0EF1               	movlw	241
  1991   001BD0                     u4947:
  1992   001BD0  2EE8               	decfsz	wreg,f,c
  1993   001BD2  D7FE               	bra	u4947
  1994   001BD4  2E41               	decfsz	??_move^0,f,c
  1995   001BD6  D7FC               	bra	u4947
  1996   001BD8  2E42               	decfsz	(??_move+1)^0,f,c
  1997   001BDA  D7FA               	bra	u4947
  1998   001BDC  0000               	nop	
  1999   001BDE                     
  2000                           ;dc_motor.c: 98:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2001   001BDE  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2002   001BE2  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2003   001BE6  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2004   001BEA  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2005   001BEE  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2006   001BF2  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2007   001BF6  ECA6  F020         	call	_fullSpeedAhead	;wreg free
  2008                           
  2009                           ;dc_motor.c: 99:     }
  2010   001BFA  EFD8  F010         	goto	l560
  2011   001BFE                     l4986:
  2012                           
  2013                           ; BSR set to: 0
  2014   001BFE  0E02               	movlw	2
  2015   001C00  19DC               	xorwf	move@color& (0+255),w,b
  2016   001C02  A4D8               	btfss	status,2,c
  2017   001C04  EF06  F00E         	goto	u4431
  2018   001C08  EF08  F00E         	goto	u4430
  2019   001C0C                     u4431:
  2020   001C0C  EF50  F00E         	goto	l4996
  2021   001C10                     u4430:
  2022   001C10                     
  2023                           ; BSR set to: 0
  2024                           ;dc_motor.c: 102:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2025   001C10  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2026   001C14  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2027   001C18  C0DA  F021         	movff	move@mR,turnLeft@mR
  2028   001C1C  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2029   001C20  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2030   001C24  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2031   001C28  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2032   001C2C  ECFC  F01D         	call	_turnLeft	;wreg free
  2033   001C30                     
  2034                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2035   001C30  0E05               	movlw	5
  2036   001C32  6E42               	movwf	(??_move+1)^0,c
  2037   001C34  0E0F               	movlw	15
  2038   001C36  6E41               	movwf	??_move^0,c
  2039   001C38  0EF1               	movlw	241
  2040   001C3A                     u4957:
  2041   001C3A  2EE8               	decfsz	wreg,f,c
  2042   001C3C  D7FE               	bra	u4957
  2043   001C3E  2E41               	decfsz	??_move^0,f,c
  2044   001C40  D7FC               	bra	u4957
  2045   001C42  2E42               	decfsz	(??_move+1)^0,f,c
  2046   001C44  D7FA               	bra	u4957
  2047   001C46  0000               	nop	
  2048   001C48                     
  2049                           ;dc_motor.c: 104:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2050   001C48  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2051   001C4C  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2052   001C50  C0DA  F021         	movff	move@mR,turnLeft@mR
  2053   001C54  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2054   001C58  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2055   001C5C  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2056   001C60  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2057   001C64  ECFC  F01D         	call	_turnLeft	;wreg free
  2058                           
  2059                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2060   001C68  0E05               	movlw	5
  2061   001C6A  6E42               	movwf	(??_move+1)^0,c
  2062   001C6C  0E0F               	movlw	15
  2063   001C6E  6E41               	movwf	??_move^0,c
  2064   001C70  0EF1               	movlw	241
  2065   001C72                     u4967:
  2066   001C72  2EE8               	decfsz	wreg,f,c
  2067   001C74  D7FE               	bra	u4967
  2068   001C76  2E41               	decfsz	??_move^0,f,c
  2069   001C78  D7FC               	bra	u4967
  2070   001C7A  2E42               	decfsz	(??_move+1)^0,f,c
  2071   001C7C  D7FA               	bra	u4967
  2072   001C7E  0000               	nop	
  2073   001C80                     
  2074                           ;dc_motor.c: 106:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2075   001C80  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2076   001C84  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2077   001C88  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2078   001C8C  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2079   001C90  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2080   001C94  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2081   001C98  ECA6  F020         	call	_fullSpeedAhead	;wreg free
  2082                           
  2083                           ;dc_motor.c: 107:     }
  2084   001C9C  EFD8  F010         	goto	l560
  2085   001CA0                     l4996:
  2086                           
  2087                           ; BSR set to: 0
  2088   001CA0  0E03               	movlw	3
  2089   001CA2  19DC               	xorwf	move@color& (0+255),w,b
  2090   001CA4  A4D8               	btfss	status,2,c
  2091   001CA6  EF57  F00E         	goto	u4441
  2092   001CAA  EF59  F00E         	goto	u4440
  2093   001CAE                     u4441:
  2094   001CAE  EFD9  F00E         	goto	l5012
  2095   001CB2                     u4440:
  2096   001CB2                     
  2097                           ; BSR set to: 0
  2098                           ;dc_motor.c: 110:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2099   001CB2  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2100   001CB6  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2101   001CBA  C0DA  F021         	movff	move@mR,turnLeft@mR
  2102   001CBE  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2103   001CC2  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2104   001CC6  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2105   001CCA  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2106   001CCE  ECFC  F01D         	call	_turnLeft	;wreg free
  2107   001CD2                     
  2108                           ;dc_motor.c: 111:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2109   001CD2  0E05               	movlw	5
  2110   001CD4  6E42               	movwf	(??_move+1)^0,c
  2111   001CD6  0E0F               	movlw	15
  2112   001CD8  6E41               	movwf	??_move^0,c
  2113   001CDA  0EF1               	movlw	241
  2114   001CDC                     u4977:
  2115   001CDC  2EE8               	decfsz	wreg,f,c
  2116   001CDE  D7FE               	bra	u4977
  2117   001CE0  2E41               	decfsz	??_move^0,f,c
  2118   001CE2  D7FC               	bra	u4977
  2119   001CE4  2E42               	decfsz	(??_move+1)^0,f,c
  2120   001CE6  D7FA               	bra	u4977
  2121   001CE8  0000               	nop	
  2122   001CEA                     
  2123                           ;dc_motor.c: 112:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2124   001CEA  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2125   001CEE  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2126   001CF2  C0DA  F021         	movff	move@mR,turnLeft@mR
  2127   001CF6  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2128   001CFA  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2129   001CFE  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2130   001D02  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2131   001D06  ECFC  F01D         	call	_turnLeft	;wreg free
  2132                           
  2133                           ;dc_motor.c: 113:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2134   001D0A  0E05               	movlw	5
  2135   001D0C  6E42               	movwf	(??_move+1)^0,c
  2136   001D0E  0E0F               	movlw	15
  2137   001D10  6E41               	movwf	??_move^0,c
  2138   001D12  0EF1               	movlw	241
  2139   001D14                     u4987:
  2140   001D14  2EE8               	decfsz	wreg,f,c
  2141   001D16  D7FE               	bra	u4987
  2142   001D18  2E41               	decfsz	??_move^0,f,c
  2143   001D1A  D7FC               	bra	u4987
  2144   001D1C  2E42               	decfsz	(??_move+1)^0,f,c
  2145   001D1E  D7FA               	bra	u4987
  2146   001D20  0000               	nop	
  2147   001D22                     
  2148                           ;dc_motor.c: 114:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2149   001D22  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2150   001D26  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2151   001D2A  C0DA  F021         	movff	move@mR,turnLeft@mR
  2152   001D2E  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2153   001D32  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2154   001D36  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2155   001D3A  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2156   001D3E  ECFC  F01D         	call	_turnLeft	;wreg free
  2157   001D42                     
  2158                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2159   001D42  0E05               	movlw	5
  2160   001D44  6E42               	movwf	(??_move+1)^0,c
  2161   001D46  0E0F               	movlw	15
  2162   001D48  6E41               	movwf	??_move^0,c
  2163   001D4A  0EF1               	movlw	241
  2164   001D4C                     u4997:
  2165   001D4C  2EE8               	decfsz	wreg,f,c
  2166   001D4E  D7FE               	bra	u4997
  2167   001D50  2E41               	decfsz	??_move^0,f,c
  2168   001D52  D7FC               	bra	u4997
  2169   001D54  2E42               	decfsz	(??_move+1)^0,f,c
  2170   001D56  D7FA               	bra	u4997
  2171   001D58  0000               	nop	
  2172                           
  2173                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2174   001D5A  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2175   001D5E  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2176   001D62  C0DA  F021         	movff	move@mR,turnLeft@mR
  2177   001D66  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2178   001D6A  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2179   001D6E  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2180   001D72  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2181   001D76  ECFC  F01D         	call	_turnLeft	;wreg free
  2182   001D7A                     
  2183                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2184   001D7A  0E05               	movlw	5
  2185   001D7C  6E42               	movwf	(??_move+1)^0,c
  2186   001D7E  0E0F               	movlw	15
  2187   001D80  6E41               	movwf	??_move^0,c
  2188   001D82  0EF1               	movlw	241
  2189   001D84                     u5007:
  2190   001D84  2EE8               	decfsz	wreg,f,c
  2191   001D86  D7FE               	bra	u5007
  2192   001D88  2E41               	decfsz	??_move^0,f,c
  2193   001D8A  D7FC               	bra	u5007
  2194   001D8C  2E42               	decfsz	(??_move+1)^0,f,c
  2195   001D8E  D7FA               	bra	u5007
  2196   001D90  0000               	nop	
  2197   001D92                     
  2198                           ;dc_motor.c: 118:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2199   001D92  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2200   001D96  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2201   001D9A  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2202   001D9E  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2203   001DA2  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2204   001DA6  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2205   001DAA  ECA6  F020         	call	_fullSpeedAhead	;wreg free
  2206                           
  2207                           ;dc_motor.c: 119:     }
  2208   001DAE  EFD8  F010         	goto	l560
  2209   001DB2                     l5012:
  2210                           
  2211                           ; BSR set to: 0
  2212   001DB2  0E04               	movlw	4
  2213   001DB4  19DC               	xorwf	move@color& (0+255),w,b
  2214   001DB6  A4D8               	btfss	status,2,c
  2215   001DB8  EFE0  F00E         	goto	u4451
  2216   001DBC  EFE2  F00E         	goto	u4450
  2217   001DC0                     u4451:
  2218   001DC0  EF46  F00F         	goto	l5024
  2219   001DC4                     u4450:
  2220   001DC4                     
  2221                           ; BSR set to: 0
  2222                           ;dc_motor.c: 122:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2223   001DC4  C0D8  F01F         	movff	move@mL,reverseOneSquare@mL
  2224   001DC8  C0D9  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2225   001DCC  C0DA  F021         	movff	move@mR,reverseOneSquare@mR
  2226   001DD0  C0DB  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2227   001DD4  C0E2  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2228   001DD8  C0E3  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2229   001DDC  C0E4  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2230   001DE0  EC1F  F01C         	call	_reverseOneSquare	;wreg free
  2231   001DE4                     
  2232                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2233   001DE4  0E05               	movlw	5
  2234   001DE6  6E42               	movwf	(??_move+1)^0,c
  2235   001DE8  0E0F               	movlw	15
  2236   001DEA  6E41               	movwf	??_move^0,c
  2237   001DEC  0EF1               	movlw	241
  2238   001DEE                     u5017:
  2239   001DEE  2EE8               	decfsz	wreg,f,c
  2240   001DF0  D7FE               	bra	u5017
  2241   001DF2  2E41               	decfsz	??_move^0,f,c
  2242   001DF4  D7FC               	bra	u5017
  2243   001DF6  2E42               	decfsz	(??_move+1)^0,f,c
  2244   001DF8  D7FA               	bra	u5017
  2245   001DFA  0000               	nop	
  2246   001DFC                     
  2247                           ;dc_motor.c: 124:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2248   001DFC  C0D8  F01F         	movff	move@mL,turnRight@mL
  2249   001E00  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2250   001E04  C0DA  F021         	movff	move@mR,turnRight@mR
  2251   001E08  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2252   001E0C  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2253   001E10  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2254   001E14  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2255   001E18  EC12  F01D         	call	_turnRight	;wreg free
  2256                           
  2257                           ;dc_motor.c: 125:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2258   001E1C  0E05               	movlw	5
  2259   001E1E  6E42               	movwf	(??_move+1)^0,c
  2260   001E20  0E0F               	movlw	15
  2261   001E22  6E41               	movwf	??_move^0,c
  2262   001E24  0EF1               	movlw	241
  2263   001E26                     u5027:
  2264   001E26  2EE8               	decfsz	wreg,f,c
  2265   001E28  D7FE               	bra	u5027
  2266   001E2A  2E41               	decfsz	??_move^0,f,c
  2267   001E2C  D7FC               	bra	u5027
  2268   001E2E  2E42               	decfsz	(??_move+1)^0,f,c
  2269   001E30  D7FA               	bra	u5027
  2270   001E32  0000               	nop	
  2271   001E34                     
  2272                           ;dc_motor.c: 126:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2273   001E34  C0D8  F01F         	movff	move@mL,turnRight@mL
  2274   001E38  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2275   001E3C  C0DA  F021         	movff	move@mR,turnRight@mR
  2276   001E40  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2277   001E44  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2278   001E48  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2279   001E4C  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2280   001E50  EC12  F01D         	call	_turnRight	;wreg free
  2281   001E54                     
  2282                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2283   001E54  0E05               	movlw	5
  2284   001E56  6E42               	movwf	(??_move+1)^0,c
  2285   001E58  0E0F               	movlw	15
  2286   001E5A  6E41               	movwf	??_move^0,c
  2287   001E5C  0EF1               	movlw	241
  2288   001E5E                     u5037:
  2289   001E5E  2EE8               	decfsz	wreg,f,c
  2290   001E60  D7FE               	bra	u5037
  2291   001E62  2E41               	decfsz	??_move^0,f,c
  2292   001E64  D7FC               	bra	u5037
  2293   001E66  2E42               	decfsz	(??_move+1)^0,f,c
  2294   001E68  D7FA               	bra	u5037
  2295   001E6A  0000               	nop	
  2296                           
  2297                           ;dc_motor.c: 128:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2298   001E6C  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2299   001E70  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2300   001E74  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2301   001E78  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2302   001E7C  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2303   001E80  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2304   001E84  ECA6  F020         	call	_fullSpeedAhead	;wreg free
  2305                           
  2306                           ;dc_motor.c: 129:     }
  2307   001E88  EFD8  F010         	goto	l560
  2308   001E8C                     l5024:
  2309                           
  2310                           ; BSR set to: 0
  2311   001E8C  0E05               	movlw	5
  2312   001E8E  19DC               	xorwf	move@color& (0+255),w,b
  2313   001E90  A4D8               	btfss	status,2,c
  2314   001E92  EF4D  F00F         	goto	u4461
  2315   001E96  EF4F  F00F         	goto	u4460
  2316   001E9A                     u4461:
  2317   001E9A  EFB3  F00F         	goto	l5036
  2318   001E9E                     u4460:
  2319   001E9E                     
  2320                           ; BSR set to: 0
  2321                           ;dc_motor.c: 132:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2322   001E9E  C0D8  F01F         	movff	move@mL,reverseOneSquare@mL
  2323   001EA2  C0D9  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2324   001EA6  C0DA  F021         	movff	move@mR,reverseOneSquare@mR
  2325   001EAA  C0DB  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2326   001EAE  C0E2  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2327   001EB2  C0E3  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2328   001EB6  C0E4  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2329   001EBA  EC1F  F01C         	call	_reverseOneSquare	;wreg free
  2330   001EBE                     
  2331                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2332   001EBE  0E05               	movlw	5
  2333   001EC0  6E42               	movwf	(??_move+1)^0,c
  2334   001EC2  0E0F               	movlw	15
  2335   001EC4  6E41               	movwf	??_move^0,c
  2336   001EC6  0EF1               	movlw	241
  2337   001EC8                     u5047:
  2338   001EC8  2EE8               	decfsz	wreg,f,c
  2339   001ECA  D7FE               	bra	u5047
  2340   001ECC  2E41               	decfsz	??_move^0,f,c
  2341   001ECE  D7FC               	bra	u5047
  2342   001ED0  2E42               	decfsz	(??_move+1)^0,f,c
  2343   001ED2  D7FA               	bra	u5047
  2344   001ED4  0000               	nop	
  2345   001ED6                     
  2346                           ;dc_motor.c: 134:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2347   001ED6  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2348   001EDA  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2349   001EDE  C0DA  F021         	movff	move@mR,turnLeft@mR
  2350   001EE2  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2351   001EE6  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2352   001EEA  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2353   001EEE  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2354   001EF2  ECFC  F01D         	call	_turnLeft	;wreg free
  2355                           
  2356                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2357   001EF6  0E05               	movlw	5
  2358   001EF8  6E42               	movwf	(??_move+1)^0,c
  2359   001EFA  0E0F               	movlw	15
  2360   001EFC  6E41               	movwf	??_move^0,c
  2361   001EFE  0EF1               	movlw	241
  2362   001F00                     u5057:
  2363   001F00  2EE8               	decfsz	wreg,f,c
  2364   001F02  D7FE               	bra	u5057
  2365   001F04  2E41               	decfsz	??_move^0,f,c
  2366   001F06  D7FC               	bra	u5057
  2367   001F08  2E42               	decfsz	(??_move+1)^0,f,c
  2368   001F0A  D7FA               	bra	u5057
  2369   001F0C  0000               	nop	
  2370   001F0E                     
  2371                           ;dc_motor.c: 136:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2372   001F0E  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2373   001F12  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2374   001F16  C0DA  F021         	movff	move@mR,turnLeft@mR
  2375   001F1A  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2376   001F1E  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2377   001F22  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2378   001F26  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2379   001F2A  ECFC  F01D         	call	_turnLeft	;wreg free
  2380   001F2E                     
  2381                           ;dc_motor.c: 137:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2382   001F2E  0E05               	movlw	5
  2383   001F30  6E42               	movwf	(??_move+1)^0,c
  2384   001F32  0E0F               	movlw	15
  2385   001F34  6E41               	movwf	??_move^0,c
  2386   001F36  0EF1               	movlw	241
  2387   001F38                     u5067:
  2388   001F38  2EE8               	decfsz	wreg,f,c
  2389   001F3A  D7FE               	bra	u5067
  2390   001F3C  2E41               	decfsz	??_move^0,f,c
  2391   001F3E  D7FC               	bra	u5067
  2392   001F40  2E42               	decfsz	(??_move+1)^0,f,c
  2393   001F42  D7FA               	bra	u5067
  2394   001F44  0000               	nop	
  2395                           
  2396                           ;dc_motor.c: 138:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2397   001F46  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2398   001F4A  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2399   001F4E  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2400   001F52  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2401   001F56  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2402   001F5A  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2403   001F5E  ECA6  F020         	call	_fullSpeedAhead	;wreg free
  2404                           
  2405                           ;dc_motor.c: 139:     }
  2406   001F62  EFD8  F010         	goto	l560
  2407   001F66                     l5036:
  2408                           
  2409                           ; BSR set to: 0
  2410   001F66  0E06               	movlw	6
  2411   001F68  19DC               	xorwf	move@color& (0+255),w,b
  2412   001F6A  A4D8               	btfss	status,2,c
  2413   001F6C  EFBA  F00F         	goto	u4471
  2414   001F70  EFBC  F00F         	goto	u4470
  2415   001F74                     u4471:
  2416   001F74  EF20  F010         	goto	l5048
  2417   001F78                     u4470:
  2418   001F78                     
  2419                           ; BSR set to: 0
  2420                           ;dc_motor.c: 142:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2421   001F78  C0D8  F01F         	movff	move@mL,turnRight@mL
  2422   001F7C  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2423   001F80  C0DA  F021         	movff	move@mR,turnRight@mR
  2424   001F84  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2425   001F88  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2426   001F8C  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2427   001F90  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2428   001F94  EC12  F01D         	call	_turnRight	;wreg free
  2429   001F98                     
  2430                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2431   001F98  0E05               	movlw	5
  2432   001F9A  6E42               	movwf	(??_move+1)^0,c
  2433   001F9C  0E0F               	movlw	15
  2434   001F9E  6E41               	movwf	??_move^0,c
  2435   001FA0  0EF1               	movlw	241
  2436   001FA2                     u5077:
  2437   001FA2  2EE8               	decfsz	wreg,f,c
  2438   001FA4  D7FE               	bra	u5077
  2439   001FA6  2E41               	decfsz	??_move^0,f,c
  2440   001FA8  D7FC               	bra	u5077
  2441   001FAA  2E42               	decfsz	(??_move+1)^0,f,c
  2442   001FAC  D7FA               	bra	u5077
  2443   001FAE  0000               	nop	
  2444   001FB0                     
  2445                           ;dc_motor.c: 144:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2446   001FB0  C0D8  F01F         	movff	move@mL,turnRight@mL
  2447   001FB4  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2448   001FB8  C0DA  F021         	movff	move@mR,turnRight@mR
  2449   001FBC  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2450   001FC0  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2451   001FC4  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2452   001FC8  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2453   001FCC  EC12  F01D         	call	_turnRight	;wreg free
  2454                           
  2455                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2456   001FD0  0E05               	movlw	5
  2457   001FD2  6E42               	movwf	(??_move+1)^0,c
  2458   001FD4  0E0F               	movlw	15
  2459   001FD6  6E41               	movwf	??_move^0,c
  2460   001FD8  0EF1               	movlw	241
  2461   001FDA                     u5087:
  2462   001FDA  2EE8               	decfsz	wreg,f,c
  2463   001FDC  D7FE               	bra	u5087
  2464   001FDE  2E41               	decfsz	??_move^0,f,c
  2465   001FE0  D7FC               	bra	u5087
  2466   001FE2  2E42               	decfsz	(??_move+1)^0,f,c
  2467   001FE4  D7FA               	bra	u5087
  2468   001FE6  0000               	nop	
  2469   001FE8                     
  2470                           ;dc_motor.c: 146:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2471   001FE8  C0D8  F01F         	movff	move@mL,turnRight@mL
  2472   001FEC  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2473   001FF0  C0DA  F021         	movff	move@mR,turnRight@mR
  2474   001FF4  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2475   001FF8  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2476   001FFC  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2477   002000  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2478   002004  EC12  F01D         	call	_turnRight	;wreg free
  2479   002008                     
  2480                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2481   002008  0E05               	movlw	5
  2482   00200A  6E42               	movwf	(??_move+1)^0,c
  2483   00200C  0E0F               	movlw	15
  2484   00200E  6E41               	movwf	??_move^0,c
  2485   002010  0EF1               	movlw	241
  2486   002012                     u5097:
  2487   002012  2EE8               	decfsz	wreg,f,c
  2488   002014  D7FE               	bra	u5097
  2489   002016  2E41               	decfsz	??_move^0,f,c
  2490   002018  D7FC               	bra	u5097
  2491   00201A  2E42               	decfsz	(??_move+1)^0,f,c
  2492   00201C  D7FA               	bra	u5097
  2493   00201E  0000               	nop	
  2494                           
  2495                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2496   002020  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2497   002024  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2498   002028  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2499   00202C  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2500   002030  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2501   002034  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2502   002038  ECA6  F020         	call	_fullSpeedAhead	;wreg free
  2503                           
  2504                           ;dc_motor.c: 149:     }
  2505   00203C  EFD8  F010         	goto	l560
  2506   002040                     l5048:
  2507                           
  2508                           ; BSR set to: 0
  2509   002040  0E07               	movlw	7
  2510   002042  19DC               	xorwf	move@color& (0+255),w,b
  2511   002044  A4D8               	btfss	status,2,c
  2512   002046  EF27  F010         	goto	u4481
  2513   00204A  EF29  F010         	goto	u4480
  2514   00204E                     u4481:
  2515   00204E  EF8D  F010         	goto	l5060
  2516   002052                     u4480:
  2517   002052                     
  2518                           ; BSR set to: 0
  2519                           ;dc_motor.c: 152:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2520   002052  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2521   002056  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2522   00205A  C0DA  F021         	movff	move@mR,turnLeft@mR
  2523   00205E  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2524   002062  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2525   002066  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2526   00206A  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2527   00206E  ECFC  F01D         	call	_turnLeft	;wreg free
  2528   002072                     
  2529                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2530   002072  0E05               	movlw	5
  2531   002074  6E42               	movwf	(??_move+1)^0,c
  2532   002076  0E0F               	movlw	15
  2533   002078  6E41               	movwf	??_move^0,c
  2534   00207A  0EF1               	movlw	241
  2535   00207C                     u5107:
  2536   00207C  2EE8               	decfsz	wreg,f,c
  2537   00207E  D7FE               	bra	u5107
  2538   002080  2E41               	decfsz	??_move^0,f,c
  2539   002082  D7FC               	bra	u5107
  2540   002084  2E42               	decfsz	(??_move+1)^0,f,c
  2541   002086  D7FA               	bra	u5107
  2542   002088  0000               	nop	
  2543   00208A                     
  2544                           ;dc_motor.c: 154:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2545   00208A  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2546   00208E  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2547   002092  C0DA  F021         	movff	move@mR,turnLeft@mR
  2548   002096  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2549   00209A  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2550   00209E  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2551   0020A2  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2552   0020A6  ECFC  F01D         	call	_turnLeft	;wreg free
  2553                           
  2554                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2555   0020AA  0E05               	movlw	5
  2556   0020AC  6E42               	movwf	(??_move+1)^0,c
  2557   0020AE  0E0F               	movlw	15
  2558   0020B0  6E41               	movwf	??_move^0,c
  2559   0020B2  0EF1               	movlw	241
  2560   0020B4                     u5117:
  2561   0020B4  2EE8               	decfsz	wreg,f,c
  2562   0020B6  D7FE               	bra	u5117
  2563   0020B8  2E41               	decfsz	??_move^0,f,c
  2564   0020BA  D7FC               	bra	u5117
  2565   0020BC  2E42               	decfsz	(??_move+1)^0,f,c
  2566   0020BE  D7FA               	bra	u5117
  2567   0020C0  0000               	nop	
  2568   0020C2                     
  2569                           ;dc_motor.c: 156:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2570   0020C2  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2571   0020C6  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2572   0020CA  C0DA  F021         	movff	move@mR,turnLeft@mR
  2573   0020CE  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2574   0020D2  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2575   0020D6  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2576   0020DA  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2577   0020DE  ECFC  F01D         	call	_turnLeft	;wreg free
  2578   0020E2                     
  2579                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2580   0020E2  0E05               	movlw	5
  2581   0020E4  6E42               	movwf	(??_move+1)^0,c
  2582   0020E6  0E0F               	movlw	15
  2583   0020E8  6E41               	movwf	??_move^0,c
  2584   0020EA  0EF1               	movlw	241
  2585   0020EC                     u5127:
  2586   0020EC  2EE8               	decfsz	wreg,f,c
  2587   0020EE  D7FE               	bra	u5127
  2588   0020F0  2E41               	decfsz	??_move^0,f,c
  2589   0020F2  D7FC               	bra	u5127
  2590   0020F4  2E42               	decfsz	(??_move+1)^0,f,c
  2591   0020F6  D7FA               	bra	u5127
  2592   0020F8  0000               	nop	
  2593                           
  2594                           ;dc_motor.c: 158:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2595   0020FA  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2596   0020FE  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2597   002102  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2598   002106  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2599   00210A  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2600   00210E  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2601   002112  ECA6  F020         	call	_fullSpeedAhead	;wreg free
  2602                           
  2603                           ;dc_motor.c: 159:     }
  2604   002116  EFD8  F010         	goto	l560
  2605   00211A                     l5060:
  2606                           
  2607                           ; BSR set to: 0
  2608   00211A  0E08               	movlw	8
  2609   00211C  19DC               	xorwf	move@color& (0+255),w,b
  2610   00211E  A4D8               	btfss	status,2,c
  2611   002120  EF94  F010         	goto	u4491
  2612   002124  EF96  F010         	goto	u4490
  2613   002128                     u4491:
  2614   002128  EFB8  F010         	goto	l5064
  2615   00212C                     u4490:
  2616   00212C                     
  2617                           ; BSR set to: 0
  2618                           ;dc_motor.c: 162:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2619   00212C  C0D8  F02D         	movff	move@mL,returnHome@mL
  2620   002130  C0D9  F02E         	movff	move@mL+1,returnHome@mL+1
  2621   002134  C0DA  F02F         	movff	move@mR,returnHome@mR
  2622   002138  C0DB  F030         	movff	move@mR+1,returnHome@mR+1
  2623   00213C  C0DD  F031         	movff	move@moveSequence,returnHome@moveSequence
  2624   002140  C0DE  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2625   002144  C0DF  F033         	movff	move@straightTime,returnHome@straightTime
  2626   002148  C0E0  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2627   00214C  C0E1  F035         	movff	move@curMove,returnHome@curMove
  2628   002150  C0E2  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2629   002154  C0E3  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2630   002158  C0E4  F038         	movff	move@straightRamp,returnHome@straightRamp
  2631   00215C  C0E5  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2632   002160  C0E6  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2633   002164  C0E7  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2634   002168  EC01  F007         	call	_returnHome	;wreg free
  2635                           
  2636                           ;dc_motor.c: 163:     }
  2637   00216C  EFD8  F010         	goto	l560
  2638   002170                     l5064:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;dc_motor.c: 166:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2642   002170  C0D8  F02D         	movff	move@mL,returnHome@mL
  2643   002174  C0D9  F02E         	movff	move@mL+1,returnHome@mL+1
  2644   002178  C0DA  F02F         	movff	move@mR,returnHome@mR
  2645   00217C  C0DB  F030         	movff	move@mR+1,returnHome@mR+1
  2646   002180  C0DD  F031         	movff	move@moveSequence,returnHome@moveSequence
  2647   002184  C0DE  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2648   002188  C0DF  F033         	movff	move@straightTime,returnHome@straightTime
  2649   00218C  C0E0  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2650   002190  C0E1  F035         	movff	move@curMove,returnHome@curMove
  2651   002194  C0E2  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2652   002198  C0E3  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2653   00219C  C0E4  F038         	movff	move@straightRamp,returnHome@straightRamp
  2654   0021A0  C0E5  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2655   0021A4  C0E6  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2656   0021A8  C0E7  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2657   0021AC  EC01  F007         	call	_returnHome	;wreg free
  2658   0021B0                     l560:
  2659   0021B0  0012               	return		;funcret
  2660   0021B2                     __end_of_move:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function _returnHome *****************
  2664 ;; Defined at:
  2665 ;;		line 171 in file "dc_motor.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2668 ;;		 -> main@motorL(10), 
  2669 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2670 ;;		 -> main@motorR(10), 
  2671 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  2672 ;;		 -> main@moveSequence(40), 
  2673 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  2674 ;;		 -> main@straightTime(82), 
  2675 ;;  curMove         1   52[COMRAM] unsigned char 
  2676 ;;  straightSpee    1   53[COMRAM] unsigned char 
  2677 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  2678 ;;  straightRamp    1   55[COMRAM] unsigned char 
  2679 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  2680 ;;  turnDuration    1   57[COMRAM] unsigned char 
  2681 ;;  turnRamp        1   58[COMRAM] unsigned char 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  i               1   63[COMRAM] unsigned char 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2693 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2695 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;Total ram usage:       20 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 8
  2700 ;; This function calls:
  2701 ;;		_fullSpeedAhead
  2702 ;;		_get16bitTMR0val
  2703 ;;		_resetTimer
  2704 ;;		_reverseOneSquare
  2705 ;;		_stop
  2706 ;;		_turnLeft
  2707 ;;		_turnRight
  2708 ;; This function is called by:
  2709 ;;		_move
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text2
  2714   000E02                     __ptext2:
  2715                           	callstack 0
  2716   000E02                     _returnHome:
  2717                           	callstack 21
  2718   000E02                     
  2719                           ;dc_motor.c: 171: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reverseDu
      +                          ration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned
      +                           char turnRamp);dc_motor.c: 172: {;dc_motor.c: 173:     turnLeft(mL, mR, turnSpeed, turn
      +                          Duration, turnRamp);
  2720   000E02  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2721   000E06  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2722   000E0A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2723   000E0E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2724   000E12  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2725   000E16  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2726   000E1A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2727   000E1E  ECFC  F01D         	call	_turnLeft	;wreg free
  2728   000E22                     
  2729                           ;dc_motor.c: 174:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2730   000E22  0E05               	movlw	5
  2731   000E24  6E3D               	movwf	(??_returnHome+1)^0,c
  2732   000E26  0E0F               	movlw	15
  2733   000E28  6E3C               	movwf	??_returnHome^0,c
  2734   000E2A  0EF1               	movlw	241
  2735   000E2C                     u5137:
  2736   000E2C  2EE8               	decfsz	wreg,f,c
  2737   000E2E  D7FE               	bra	u5137
  2738   000E30  2E3C               	decfsz	??_returnHome^0,f,c
  2739   000E32  D7FC               	bra	u5137
  2740   000E34  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2741   000E36  D7FA               	bra	u5137
  2742   000E38  0000               	nop	
  2743   000E3A                     
  2744                           ;dc_motor.c: 175:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2745   000E3A  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2746   000E3E  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2747   000E42  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2748   000E46  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2749   000E4A  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2750   000E4E  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2751   000E52  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2752   000E56  ECFC  F01D         	call	_turnLeft	;wreg free
  2753                           
  2754                           ;dc_motor.c: 176:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2755   000E5A  0E05               	movlw	5
  2756   000E5C  6E3D               	movwf	(??_returnHome+1)^0,c
  2757   000E5E  0E0F               	movlw	15
  2758   000E60  6E3C               	movwf	??_returnHome^0,c
  2759   000E62  0EF1               	movlw	241
  2760   000E64                     u5147:
  2761   000E64  2EE8               	decfsz	wreg,f,c
  2762   000E66  D7FE               	bra	u5147
  2763   000E68  2E3C               	decfsz	??_returnHome^0,f,c
  2764   000E6A  D7FC               	bra	u5147
  2765   000E6C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2766   000E6E  D7FA               	bra	u5147
  2767   000E70  0000               	nop	
  2768   000E72                     
  2769                           ;dc_motor.c: 177:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2770   000E72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2771   000E76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2772   000E7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2773   000E7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2774   000E82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2775   000E86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2776   000E8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2777   000E8E  ECFC  F01D         	call	_turnLeft	;wreg free
  2778   000E92                     
  2779                           ;dc_motor.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2780   000E92  0E05               	movlw	5
  2781   000E94  6E3D               	movwf	(??_returnHome+1)^0,c
  2782   000E96  0E0F               	movlw	15
  2783   000E98  6E3C               	movwf	??_returnHome^0,c
  2784   000E9A  0EF1               	movlw	241
  2785   000E9C                     u5157:
  2786   000E9C  2EE8               	decfsz	wreg,f,c
  2787   000E9E  D7FE               	bra	u5157
  2788   000EA0  2E3C               	decfsz	??_returnHome^0,f,c
  2789   000EA2  D7FC               	bra	u5157
  2790   000EA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2791   000EA6  D7FA               	bra	u5157
  2792   000EA8  0000               	nop	
  2793                           
  2794                           ;dc_motor.c: 179:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2795   000EAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2796   000EAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2797   000EB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2798   000EB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2799   000EBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2800   000EBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2801   000EC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2802   000EC6  ECFC  F01D         	call	_turnLeft	;wreg free
  2803   000ECA                     
  2804                           ;dc_motor.c: 180:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2805   000ECA  0E05               	movlw	5
  2806   000ECC  6E3D               	movwf	(??_returnHome+1)^0,c
  2807   000ECE  0E0F               	movlw	15
  2808   000ED0  6E3C               	movwf	??_returnHome^0,c
  2809   000ED2  0EF1               	movlw	241
  2810   000ED4                     u5167:
  2811   000ED4  2EE8               	decfsz	wreg,f,c
  2812   000ED6  D7FE               	bra	u5167
  2813   000ED8  2E3C               	decfsz	??_returnHome^0,f,c
  2814   000EDA  D7FC               	bra	u5167
  2815   000EDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2816   000EDE  D7FA               	bra	u5167
  2817   000EE0  0000               	nop	
  2818   000EE2                     
  2819                           ;dc_motor.c: 181:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2820   000EE2  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  2821   000EE6  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  2822   000EEA  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  2823   000EEE  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  2824   000EF2  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  2825   000EF6  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  2826   000EFA  ECA6  F020         	call	_fullSpeedAhead	;wreg free
  2827   000EFE                     
  2828                           ;dc_motor.c: 182:     resetTimer();
  2829   000EFE  ECE7  F024         	call	_resetTimer	;wreg free
  2830   000F02                     l4558:
  2831   000F02  5035               	movf	returnHome@curMove^0,w,c
  2832   000F04  0D02               	mullw	2
  2833   000F06  CFF3 F03C          	movff	prodl,??_returnHome
  2834   000F0A  CFF4 F03D          	movff	prodh,??_returnHome+1
  2835   000F0E  503C               	movf	??_returnHome^0,w,c
  2836   000F10  2433               	addwf	returnHome@straightTime^0,w,c
  2837   000F12  6ED9               	movwf	fsr2l,c
  2838   000F14  503D               	movf	(??_returnHome+1)^0,w,c
  2839   000F16  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  2840   000F18  6EDA               	movwf	fsr2h,c
  2841   000F1A  ECF0  F023         	call	_get16bitTMR0val	;wreg free
  2842   000F1E  50DE               	movf	postinc2,w,c
  2843   000F20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  2844   000F22  50DE               	movf	postinc2,w,c
  2845   000F24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  2846   000F26  A0D8               	btfss	status,0,c
  2847   000F28  EF98  F007         	goto	u3861
  2848   000F2C  EF9A  F007         	goto	u3860
  2849   000F30                     u3861:
  2850   000F30  EF81  F007         	goto	l4558
  2851   000F34                     u3860:
  2852   000F34                     
  2853                           ;dc_motor.c: 184:     stop(mL, mR, straightRamp);
  2854   000F34  C02D  F01F         	movff	returnHome@mL,stop@mL
  2855   000F38  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  2856   000F3C  C02F  F021         	movff	returnHome@mR,stop@mR
  2857   000F40  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  2858   000F44  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  2859   000F48  EC22  F020         	call	_stop	;wreg free
  2860   000F4C                     
  2861                           ;dc_motor.c: 186:     char i=curMove;
  2862   000F4C  C035  F040         	movff	returnHome@curMove,returnHome@i
  2863                           
  2864                           ;dc_motor.c: 187:     while (i>0) {
  2865   000F50  EF56  F00A         	goto	l4650
  2866   000F54                     l4564:
  2867                           
  2868                           ;dc_motor.c: 188:         i--;
  2869   000F54  0640               	decf	returnHome@i^0,f,c
  2870   000F56                     
  2871                           ;dc_motor.c: 190:         if (moveSequence[i] == 1) {
  2872   000F56  5040               	movf	returnHome@i^0,w,c
  2873   000F58  2431               	addwf	returnHome@moveSequence^0,w,c
  2874   000F5A  6ED9               	movwf	fsr2l,c
  2875   000F5C  0E00               	movlw	0
  2876   000F5E  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2877   000F60  6EDA               	movwf	fsr2h,c
  2878   000F62  04DE               	decf	postinc2,w,c
  2879   000F64  A4D8               	btfss	status,2,c
  2880   000F66  EFB7  F007         	goto	u3871
  2881   000F6A  EFB9  F007         	goto	u3870
  2882   000F6E                     u3871:
  2883   000F6E  EFF3  F007         	goto	l4574
  2884   000F72                     u3870:
  2885   000F72                     
  2886                           ;dc_motor.c: 191:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2887   000F72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2888   000F76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2889   000F7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2890   000F7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2891   000F82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2892   000F86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2893   000F8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2894   000F8E  ECFC  F01D         	call	_turnLeft	;wreg free
  2895   000F92                     
  2896                           ;dc_motor.c: 192:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2897   000F92  0E05               	movlw	5
  2898   000F94  6E3D               	movwf	(??_returnHome+1)^0,c
  2899   000F96  0E0F               	movlw	15
  2900   000F98  6E3C               	movwf	??_returnHome^0,c
  2901   000F9A  0EF1               	movlw	241
  2902   000F9C                     u5177:
  2903   000F9C  2EE8               	decfsz	wreg,f,c
  2904   000F9E  D7FE               	bra	u5177
  2905   000FA0  2E3C               	decfsz	??_returnHome^0,f,c
  2906   000FA2  D7FC               	bra	u5177
  2907   000FA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2908   000FA6  D7FA               	bra	u5177
  2909   000FA8  0000               	nop	
  2910   000FAA                     
  2911                           ;dc_motor.c: 193:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2912   000FAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2913   000FAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2914   000FB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2915   000FB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2916   000FBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2917   000FBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2918   000FC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2919   000FC6  ECFC  F01D         	call	_turnLeft	;wreg free
  2920                           
  2921                           ;dc_motor.c: 194:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2922   000FCA  0E05               	movlw	5
  2923   000FCC  6E3D               	movwf	(??_returnHome+1)^0,c
  2924   000FCE  0E0F               	movlw	15
  2925   000FD0  6E3C               	movwf	??_returnHome^0,c
  2926   000FD2  0EF1               	movlw	241
  2927   000FD4                     u5187:
  2928   000FD4  2EE8               	decfsz	wreg,f,c
  2929   000FD6  D7FE               	bra	u5187
  2930   000FD8  2E3C               	decfsz	??_returnHome^0,f,c
  2931   000FDA  D7FC               	bra	u5187
  2932   000FDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2933   000FDE  D7FA               	bra	u5187
  2934   000FE0  0000               	nop	
  2935                           
  2936                           ;dc_motor.c: 195:         }
  2937   000FE2  EF21  F00A         	goto	l569
  2938   000FE6                     l4574:
  2939   000FE6  5040               	movf	returnHome@i^0,w,c
  2940   000FE8  2431               	addwf	returnHome@moveSequence^0,w,c
  2941   000FEA  6ED9               	movwf	fsr2l,c
  2942   000FEC  0E00               	movlw	0
  2943   000FEE  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2944   000FF0  6EDA               	movwf	fsr2h,c
  2945   000FF2  0E02               	movlw	2
  2946   000FF4  18DE               	xorwf	postinc2,w,c
  2947   000FF6  A4D8               	btfss	status,2,c
  2948   000FF8  EF00  F008         	goto	u3881
  2949   000FFC  EF02  F008         	goto	u3880
  2950   001000                     u3881:
  2951   001000  EF3C  F008         	goto	l4582
  2952   001004                     u3880:
  2953   001004                     
  2954                           ;dc_motor.c: 198:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2955   001004  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2956   001008  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2957   00100C  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2958   001010  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2959   001014  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2960   001018  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2961   00101C  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2962   001020  EC12  F01D         	call	_turnRight	;wreg free
  2963   001024                     
  2964                           ;dc_motor.c: 199:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2965   001024  0E05               	movlw	5
  2966   001026  6E3D               	movwf	(??_returnHome+1)^0,c
  2967   001028  0E0F               	movlw	15
  2968   00102A  6E3C               	movwf	??_returnHome^0,c
  2969   00102C  0EF1               	movlw	241
  2970   00102E                     u5197:
  2971   00102E  2EE8               	decfsz	wreg,f,c
  2972   001030  D7FE               	bra	u5197
  2973   001032  2E3C               	decfsz	??_returnHome^0,f,c
  2974   001034  D7FC               	bra	u5197
  2975   001036  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2976   001038  D7FA               	bra	u5197
  2977   00103A  0000               	nop	
  2978   00103C                     
  2979                           ;dc_motor.c: 200:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2980   00103C  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2981   001040  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2982   001044  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2983   001048  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2984   00104C  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2985   001050  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2986   001054  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2987   001058  EC12  F01D         	call	_turnRight	;wreg free
  2988                           
  2989                           ;dc_motor.c: 201:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2990   00105C  0E05               	movlw	5
  2991   00105E  6E3D               	movwf	(??_returnHome+1)^0,c
  2992   001060  0E0F               	movlw	15
  2993   001062  6E3C               	movwf	??_returnHome^0,c
  2994   001064  0EF1               	movlw	241
  2995   001066                     u5207:
  2996   001066  2EE8               	decfsz	wreg,f,c
  2997   001068  D7FE               	bra	u5207
  2998   00106A  2E3C               	decfsz	??_returnHome^0,f,c
  2999   00106C  D7FC               	bra	u5207
  3000   00106E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3001   001070  D7FA               	bra	u5207
  3002   001072  0000               	nop	
  3003                           
  3004                           ;dc_motor.c: 202:         }
  3005   001074  EF21  F00A         	goto	l569
  3006   001078                     l4582:
  3007   001078  5040               	movf	returnHome@i^0,w,c
  3008   00107A  2431               	addwf	returnHome@moveSequence^0,w,c
  3009   00107C  6ED9               	movwf	fsr2l,c
  3010   00107E  0E00               	movlw	0
  3011   001080  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3012   001082  6EDA               	movwf	fsr2h,c
  3013   001084  0E03               	movlw	3
  3014   001086  18DE               	xorwf	postinc2,w,c
  3015   001088  A4D8               	btfss	status,2,c
  3016   00108A  EF49  F008         	goto	u3891
  3017   00108E  EF4B  F008         	goto	u3890
  3018   001092                     u3891:
  3019   001092  EFBD  F008         	goto	l4596
  3020   001096                     u3890:
  3021   001096                     
  3022                           ;dc_motor.c: 205:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3023   001096  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3024   00109A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3025   00109E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3026   0010A2  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3027   0010A6  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3028   0010AA  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3029   0010AE  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3030   0010B2  ECFC  F01D         	call	_turnLeft	;wreg free
  3031   0010B6                     
  3032                           ;dc_motor.c: 206:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3033   0010B6  0E05               	movlw	5
  3034   0010B8  6E3D               	movwf	(??_returnHome+1)^0,c
  3035   0010BA  0E0F               	movlw	15
  3036   0010BC  6E3C               	movwf	??_returnHome^0,c
  3037   0010BE  0EF1               	movlw	241
  3038   0010C0                     u5217:
  3039   0010C0  2EE8               	decfsz	wreg,f,c
  3040   0010C2  D7FE               	bra	u5217
  3041   0010C4  2E3C               	decfsz	??_returnHome^0,f,c
  3042   0010C6  D7FC               	bra	u5217
  3043   0010C8  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3044   0010CA  D7FA               	bra	u5217
  3045   0010CC  0000               	nop	
  3046   0010CE                     
  3047                           ;dc_motor.c: 207:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3048   0010CE  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3049   0010D2  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3050   0010D6  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3051   0010DA  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3052   0010DE  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3053   0010E2  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3054   0010E6  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3055   0010EA  ECFC  F01D         	call	_turnLeft	;wreg free
  3056                           
  3057                           ;dc_motor.c: 208:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3058   0010EE  0E05               	movlw	5
  3059   0010F0  6E3D               	movwf	(??_returnHome+1)^0,c
  3060   0010F2  0E0F               	movlw	15
  3061   0010F4  6E3C               	movwf	??_returnHome^0,c
  3062   0010F6  0EF1               	movlw	241
  3063   0010F8                     u5227:
  3064   0010F8  2EE8               	decfsz	wreg,f,c
  3065   0010FA  D7FE               	bra	u5227
  3066   0010FC  2E3C               	decfsz	??_returnHome^0,f,c
  3067   0010FE  D7FC               	bra	u5227
  3068   001100  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3069   001102  D7FA               	bra	u5227
  3070   001104  0000               	nop	
  3071   001106                     
  3072                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3073   001106  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3074   00110A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3075   00110E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3076   001112  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3077   001116  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3078   00111A  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3079   00111E  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3080   001122  ECFC  F01D         	call	_turnLeft	;wreg free
  3081   001126                     
  3082                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3083   001126  0E05               	movlw	5
  3084   001128  6E3D               	movwf	(??_returnHome+1)^0,c
  3085   00112A  0E0F               	movlw	15
  3086   00112C  6E3C               	movwf	??_returnHome^0,c
  3087   00112E  0EF1               	movlw	241
  3088   001130                     u5237:
  3089   001130  2EE8               	decfsz	wreg,f,c
  3090   001132  D7FE               	bra	u5237
  3091   001134  2E3C               	decfsz	??_returnHome^0,f,c
  3092   001136  D7FC               	bra	u5237
  3093   001138  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3094   00113A  D7FA               	bra	u5237
  3095   00113C  0000               	nop	
  3096                           
  3097                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3098   00113E  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3099   001142  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3100   001146  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3101   00114A  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3102   00114E  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3103   001152  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3104   001156  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3105   00115A  ECFC  F01D         	call	_turnLeft	;wreg free
  3106   00115E                     l4594:
  3107                           
  3108                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3109   00115E  0E05               	movlw	5
  3110   001160  6E3D               	movwf	(??_returnHome+1)^0,c
  3111   001162  0E0F               	movlw	15
  3112   001164  6E3C               	movwf	??_returnHome^0,c
  3113   001166  0EF1               	movlw	241
  3114   001168                     u5247:
  3115   001168  2EE8               	decfsz	wreg,f,c
  3116   00116A  D7FE               	bra	u5247
  3117   00116C  2E3C               	decfsz	??_returnHome^0,f,c
  3118   00116E  D7FC               	bra	u5247
  3119   001170  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3120   001172  D7FA               	bra	u5247
  3121   001174  0000               	nop	
  3122                           
  3123                           ;dc_motor.c: 213:         }
  3124   001176  EF21  F00A         	goto	l569
  3125   00117A                     l4596:
  3126   00117A  5040               	movf	returnHome@i^0,w,c
  3127   00117C  2431               	addwf	returnHome@moveSequence^0,w,c
  3128   00117E  6ED9               	movwf	fsr2l,c
  3129   001180  0E00               	movlw	0
  3130   001182  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3131   001184  6EDA               	movwf	fsr2h,c
  3132   001186  0E04               	movlw	4
  3133   001188  18DE               	xorwf	postinc2,w,c
  3134   00118A  A4D8               	btfss	status,2,c
  3135   00118C  EFCA  F008         	goto	u3901
  3136   001190  EFCC  F008         	goto	u3900
  3137   001194                     u3901:
  3138   001194  EF16  F009         	goto	l4608
  3139   001198                     u3900:
  3140   001198                     
  3141                           ;dc_motor.c: 216:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3142   001198  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3143   00119C  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3144   0011A0  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3145   0011A4  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3146   0011A8  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3147   0011AC  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3148   0011B0  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3149   0011B4  ECFC  F01D         	call	_turnLeft	;wreg free
  3150   0011B8                     
  3151                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3152   0011B8  0E05               	movlw	5
  3153   0011BA  6E3D               	movwf	(??_returnHome+1)^0,c
  3154   0011BC  0E0F               	movlw	15
  3155   0011BE  6E3C               	movwf	??_returnHome^0,c
  3156   0011C0  0EF1               	movlw	241
  3157   0011C2                     u5257:
  3158   0011C2  2EE8               	decfsz	wreg,f,c
  3159   0011C4  D7FE               	bra	u5257
  3160   0011C6  2E3C               	decfsz	??_returnHome^0,f,c
  3161   0011C8  D7FC               	bra	u5257
  3162   0011CA  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3163   0011CC  D7FA               	bra	u5257
  3164   0011CE  0000               	nop	
  3165   0011D0                     
  3166                           ;dc_motor.c: 218:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3167   0011D0  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3168   0011D4  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3169   0011D8  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3170   0011DC  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3171   0011E0  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3172   0011E4  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3173   0011E8  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3174   0011EC  ECFC  F01D         	call	_turnLeft	;wreg free
  3175                           
  3176                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3177   0011F0  0E05               	movlw	5
  3178   0011F2  6E3D               	movwf	(??_returnHome+1)^0,c
  3179   0011F4  0E0F               	movlw	15
  3180   0011F6  6E3C               	movwf	??_returnHome^0,c
  3181   0011F8  0EF1               	movlw	241
  3182   0011FA                     u5267:
  3183   0011FA  2EE8               	decfsz	wreg,f,c
  3184   0011FC  D7FE               	bra	u5267
  3185   0011FE  2E3C               	decfsz	??_returnHome^0,f,c
  3186   001200  D7FC               	bra	u5267
  3187   001202  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3188   001204  D7FA               	bra	u5267
  3189   001206  0000               	nop	
  3190   001208                     
  3191                           ;dc_motor.c: 220:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3192   001208  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  3193   00120C  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  3194   001210  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  3195   001214  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  3196   001218  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  3197   00121C  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  3198   001220  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  3199   001224  EC1F  F01C         	call	_reverseOneSquare	;wreg free
  3200   001228  EFAF  F008         	goto	l4594
  3201   00122C                     l4608:
  3202   00122C  5040               	movf	returnHome@i^0,w,c
  3203   00122E  2431               	addwf	returnHome@moveSequence^0,w,c
  3204   001230  6ED9               	movwf	fsr2l,c
  3205   001232  0E00               	movlw	0
  3206   001234  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3207   001236  6EDA               	movwf	fsr2h,c
  3208   001238  0E05               	movlw	5
  3209   00123A  18DE               	xorwf	postinc2,w,c
  3210   00123C  A4D8               	btfss	status,2,c
  3211   00123E  EF23  F009         	goto	u3911
  3212   001242  EF25  F009         	goto	u3910
  3213   001246                     u3911:
  3214   001246  EF6F  F009         	goto	l4620
  3215   00124A                     u3910:
  3216   00124A                     
  3217                           ;dc_motor.c: 225:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3218   00124A  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3219   00124E  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3220   001252  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3221   001256  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3222   00125A  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3223   00125E  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3224   001262  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3225   001266  EC12  F01D         	call	_turnRight	;wreg free
  3226   00126A                     
  3227                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3228   00126A  0E05               	movlw	5
  3229   00126C  6E3D               	movwf	(??_returnHome+1)^0,c
  3230   00126E  0E0F               	movlw	15
  3231   001270  6E3C               	movwf	??_returnHome^0,c
  3232   001272  0EF1               	movlw	241
  3233   001274                     u5277:
  3234   001274  2EE8               	decfsz	wreg,f,c
  3235   001276  D7FE               	bra	u5277
  3236   001278  2E3C               	decfsz	??_returnHome^0,f,c
  3237   00127A  D7FC               	bra	u5277
  3238   00127C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3239   00127E  D7FA               	bra	u5277
  3240   001280  0000               	nop	
  3241   001282                     
  3242                           ;dc_motor.c: 227:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3243   001282  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3244   001286  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3245   00128A  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3246   00128E  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3247   001292  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3248   001296  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3249   00129A  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3250   00129E  EC12  F01D         	call	_turnRight	;wreg free
  3251                           
  3252                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3253   0012A2  0E05               	movlw	5
  3254   0012A4  6E3D               	movwf	(??_returnHome+1)^0,c
  3255   0012A6  0E0F               	movlw	15
  3256   0012A8  6E3C               	movwf	??_returnHome^0,c
  3257   0012AA  0EF1               	movlw	241
  3258   0012AC                     u5287:
  3259   0012AC  2EE8               	decfsz	wreg,f,c
  3260   0012AE  D7FE               	bra	u5287
  3261   0012B0  2E3C               	decfsz	??_returnHome^0,f,c
  3262   0012B2  D7FC               	bra	u5287
  3263   0012B4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3264   0012B6  D7FA               	bra	u5287
  3265   0012B8  0000               	nop	
  3266   0012BA                     
  3267                           ;dc_motor.c: 229:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3268   0012BA  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  3269   0012BE  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  3270   0012C2  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  3271   0012C6  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  3272   0012CA  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  3273   0012CE  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  3274   0012D2  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  3275   0012D6  EC1F  F01C         	call	_reverseOneSquare	;wreg free
  3276   0012DA  EFAF  F008         	goto	l4594
  3277   0012DE                     l4620:
  3278   0012DE  5040               	movf	returnHome@i^0,w,c
  3279   0012E0  2431               	addwf	returnHome@moveSequence^0,w,c
  3280   0012E2  6ED9               	movwf	fsr2l,c
  3281   0012E4  0E00               	movlw	0
  3282   0012E6  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3283   0012E8  6EDA               	movwf	fsr2h,c
  3284   0012EA  0E06               	movlw	6
  3285   0012EC  18DE               	xorwf	postinc2,w,c
  3286   0012EE  A4D8               	btfss	status,2,c
  3287   0012F0  EF7C  F009         	goto	u3921
  3288   0012F4  EF7E  F009         	goto	u3920
  3289   0012F8                     u3921:
  3290   0012F8  EFC8  F009         	goto	l4632
  3291   0012FC                     u3920:
  3292   0012FC                     
  3293                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3294   0012FC  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3295   001300  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3296   001304  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3297   001308  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3298   00130C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3299   001310  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3300   001314  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3301   001318  ECFC  F01D         	call	_turnLeft	;wreg free
  3302   00131C                     
  3303                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3304   00131C  0E05               	movlw	5
  3305   00131E  6E3D               	movwf	(??_returnHome+1)^0,c
  3306   001320  0E0F               	movlw	15
  3307   001322  6E3C               	movwf	??_returnHome^0,c
  3308   001324  0EF1               	movlw	241
  3309   001326                     u5297:
  3310   001326  2EE8               	decfsz	wreg,f,c
  3311   001328  D7FE               	bra	u5297
  3312   00132A  2E3C               	decfsz	??_returnHome^0,f,c
  3313   00132C  D7FC               	bra	u5297
  3314   00132E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3315   001330  D7FA               	bra	u5297
  3316   001332  0000               	nop	
  3317   001334                     
  3318                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3319   001334  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3320   001338  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3321   00133C  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3322   001340  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3323   001344  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3324   001348  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3325   00134C  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3326   001350  ECFC  F01D         	call	_turnLeft	;wreg free
  3327                           
  3328                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3329   001354  0E05               	movlw	5
  3330   001356  6E3D               	movwf	(??_returnHome+1)^0,c
  3331   001358  0E0F               	movlw	15
  3332   00135A  6E3C               	movwf	??_returnHome^0,c
  3333   00135C  0EF1               	movlw	241
  3334   00135E                     u5307:
  3335   00135E  2EE8               	decfsz	wreg,f,c
  3336   001360  D7FE               	bra	u5307
  3337   001362  2E3C               	decfsz	??_returnHome^0,f,c
  3338   001364  D7FC               	bra	u5307
  3339   001366  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3340   001368  D7FA               	bra	u5307
  3341   00136A  0000               	nop	
  3342   00136C                     
  3343                           ;dc_motor.c: 238:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3344   00136C  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3345   001370  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3346   001374  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3347   001378  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3348   00137C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3349   001380  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3350   001384  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3351   001388  ECFC  F01D         	call	_turnLeft	;wreg free
  3352   00138C  EFAF  F008         	goto	l4594
  3353   001390                     l4632:
  3354   001390  5040               	movf	returnHome@i^0,w,c
  3355   001392  2431               	addwf	returnHome@moveSequence^0,w,c
  3356   001394  6ED9               	movwf	fsr2l,c
  3357   001396  0E00               	movlw	0
  3358   001398  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3359   00139A  6EDA               	movwf	fsr2h,c
  3360   00139C  0E07               	movlw	7
  3361   00139E  18DE               	xorwf	postinc2,w,c
  3362   0013A0  A4D8               	btfss	status,2,c
  3363   0013A2  EFD5  F009         	goto	u3931
  3364   0013A6  EFD7  F009         	goto	u3930
  3365   0013AA                     u3931:
  3366   0013AA  EF21  F00A         	goto	l575
  3367   0013AE                     u3930:
  3368   0013AE                     
  3369                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3370   0013AE  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3371   0013B2  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3372   0013B6  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3373   0013BA  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3374   0013BE  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3375   0013C2  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3376   0013C6  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3377   0013CA  EC12  F01D         	call	_turnRight	;wreg free
  3378   0013CE                     
  3379                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3380   0013CE  0E05               	movlw	5
  3381   0013D0  6E3D               	movwf	(??_returnHome+1)^0,c
  3382   0013D2  0E0F               	movlw	15
  3383   0013D4  6E3C               	movwf	??_returnHome^0,c
  3384   0013D6  0EF1               	movlw	241
  3385   0013D8                     u5317:
  3386   0013D8  2EE8               	decfsz	wreg,f,c
  3387   0013DA  D7FE               	bra	u5317
  3388   0013DC  2E3C               	decfsz	??_returnHome^0,f,c
  3389   0013DE  D7FC               	bra	u5317
  3390   0013E0  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3391   0013E2  D7FA               	bra	u5317
  3392   0013E4  0000               	nop	
  3393   0013E6                     
  3394                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3395   0013E6  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3396   0013EA  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3397   0013EE  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3398   0013F2  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3399   0013F6  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3400   0013FA  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3401   0013FE  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3402   001402  EC12  F01D         	call	_turnRight	;wreg free
  3403                           
  3404                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3405   001406  0E05               	movlw	5
  3406   001408  6E3D               	movwf	(??_returnHome+1)^0,c
  3407   00140A  0E0F               	movlw	15
  3408   00140C  6E3C               	movwf	??_returnHome^0,c
  3409   00140E  0EF1               	movlw	241
  3410   001410                     u5327:
  3411   001410  2EE8               	decfsz	wreg,f,c
  3412   001412  D7FE               	bra	u5327
  3413   001414  2E3C               	decfsz	??_returnHome^0,f,c
  3414   001416  D7FC               	bra	u5327
  3415   001418  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3416   00141A  D7FA               	bra	u5327
  3417   00141C  0000               	nop	
  3418   00141E                     
  3419                           ;dc_motor.c: 247:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3420   00141E  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3421   001422  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3422   001426  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3423   00142A  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3424   00142E  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3425   001432  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3426   001436  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3427   00143A  EC12  F01D         	call	_turnRight	;wreg free
  3428   00143E  EFAF  F008         	goto	l4594
  3429   001442                     l575:
  3430   001442                     l569:
  3431                           
  3432                           ;dc_motor.c: 251:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3433   001442  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  3434   001446  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  3435   00144A  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  3436   00144E  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  3437   001452  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3438   001456  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  3439   00145A  ECA6  F020         	call	_fullSpeedAhead	;wreg free
  3440   00145E                     
  3441                           ;dc_motor.c: 252:         resetTimer();
  3442   00145E  ECE7  F024         	call	_resetTimer	;wreg free
  3443   001462                     l4646:
  3444   001462  5040               	movf	returnHome@i^0,w,c
  3445   001464  0D02               	mullw	2
  3446   001466  CFF3 F03C          	movff	prodl,??_returnHome
  3447   00146A  CFF4 F03D          	movff	prodh,??_returnHome+1
  3448   00146E  503C               	movf	??_returnHome^0,w,c
  3449   001470  2433               	addwf	returnHome@straightTime^0,w,c
  3450   001472  6ED9               	movwf	fsr2l,c
  3451   001474  503D               	movf	(??_returnHome+1)^0,w,c
  3452   001476  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  3453   001478  6EDA               	movwf	fsr2h,c
  3454   00147A  ECF0  F023         	call	_get16bitTMR0val	;wreg free
  3455   00147E  50DE               	movf	postinc2,w,c
  3456   001480  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  3457   001482  50DE               	movf	postinc2,w,c
  3458   001484  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  3459   001486  A0D8               	btfss	status,0,c
  3460   001488  EF48  F00A         	goto	u3941
  3461   00148C  EF4A  F00A         	goto	u3940
  3462   001490                     u3941:
  3463   001490  EF31  F00A         	goto	l4646
  3464   001494                     u3940:
  3465   001494                     
  3466                           ;dc_motor.c: 254:         stop(mL, mR, straightRamp);
  3467   001494  C02D  F01F         	movff	returnHome@mL,stop@mL
  3468   001498  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  3469   00149C  C02F  F021         	movff	returnHome@mR,stop@mR
  3470   0014A0  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  3471   0014A4  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  3472   0014A8  EC22  F020         	call	_stop	;wreg free
  3473   0014AC                     l4650:
  3474                           
  3475                           ;dc_motor.c: 187:     while (i>0) {
  3476   0014AC  5040               	movf	returnHome@i^0,w,c
  3477   0014AE  A4D8               	btfss	status,2,c
  3478   0014B0  EF5C  F00A         	goto	u3951
  3479   0014B4  EF5E  F00A         	goto	u3950
  3480   0014B8                     u3951:
  3481   0014B8  EFAA  F007         	goto	l4564
  3482   0014BC                     u3950:
  3483   0014BC  0012               	return		;funcret
  3484   0014BE                     __end_of_returnHome:
  3485                           	callstack 0
  3486                           
  3487 ;; *************** function _lostReturnHome *****************
  3488 ;; Defined at:
  3489 ;;		line 259 in file "dc_motor.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  3492 ;;		 -> main@motorL(10), 
  3493 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  3494 ;;		 -> main@motorR(10), 
  3495 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  3496 ;;		 -> main@moveSequence(40), 
  3497 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  3498 ;;		 -> main@straightTime(82), 
  3499 ;;  curMove         1   52[COMRAM] unsigned char 
  3500 ;;  straightSpee    1   53[COMRAM] unsigned char 
  3501 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  3502 ;;  straightRamp    1   55[COMRAM] unsigned char 
  3503 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  3504 ;;  turnDuration    1   57[COMRAM] unsigned char 
  3505 ;;  turnRamp        1   58[COMRAM] unsigned char 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;  i               1   63[COMRAM] unsigned char 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3517 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3520 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3521 ;;Total ram usage:       20 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: 8
  3524 ;; This function calls:
  3525 ;;		_fullSpeedAhead
  3526 ;;		_get16bitTMR0val
  3527 ;;		_resetTimer
  3528 ;;		_reverseOneSquare
  3529 ;;		_stop
  3530 ;;		_turnLeft
  3531 ;;		_turnRight
  3532 ;; This function is called by:
  3533 ;;		_main
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text3
  3538   0014BE                     __ptext3:
  3539                           	callstack 0
  3540   0014BE                     _lostReturnHome:
  3541                           	callstack 22
  3542   0014BE                     
  3543                           ;dc_motor.c: 259: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 260: {;dc_motor.c: 261:     turnLeft(mL, mR, turnSpeed, 
      +                          turnDuration, turnRamp);
  3544   0014BE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3545   0014C2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3546   0014C6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3547   0014CA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3548   0014CE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3549   0014D2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3550   0014D6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3551   0014DA  ECFC  F01D         	call	_turnLeft	;wreg free
  3552   0014DE                     
  3553                           ;dc_motor.c: 262:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3554   0014DE  0E05               	movlw	5
  3555   0014E0  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3556   0014E2  0E0F               	movlw	15
  3557   0014E4  6E3C               	movwf	??_lostReturnHome^0,c
  3558   0014E6  0EF1               	movlw	241
  3559   0014E8                     u5337:
  3560   0014E8  2EE8               	decfsz	wreg,f,c
  3561   0014EA  D7FE               	bra	u5337
  3562   0014EC  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3563   0014EE  D7FC               	bra	u5337
  3564   0014F0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3565   0014F2  D7FA               	bra	u5337
  3566   0014F4  0000               	nop	
  3567   0014F6                     
  3568                           ;dc_motor.c: 263:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3569   0014F6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3570   0014FA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3571   0014FE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3572   001502  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3573   001506  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3574   00150A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3575   00150E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3576   001512  ECFC  F01D         	call	_turnLeft	;wreg free
  3577                           
  3578                           ;dc_motor.c: 264:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3579   001516  0E05               	movlw	5
  3580   001518  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3581   00151A  0E0F               	movlw	15
  3582   00151C  6E3C               	movwf	??_lostReturnHome^0,c
  3583   00151E  0EF1               	movlw	241
  3584   001520                     u5347:
  3585   001520  2EE8               	decfsz	wreg,f,c
  3586   001522  D7FE               	bra	u5347
  3587   001524  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3588   001526  D7FC               	bra	u5347
  3589   001528  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3590   00152A  D7FA               	bra	u5347
  3591   00152C  0000               	nop	
  3592   00152E                     
  3593                           ;dc_motor.c: 265:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3594   00152E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3595   001532  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3596   001536  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3597   00153A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3598   00153E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3599   001542  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3600   001546  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3601   00154A  ECFC  F01D         	call	_turnLeft	;wreg free
  3602   00154E                     
  3603                           ;dc_motor.c: 266:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3604   00154E  0E05               	movlw	5
  3605   001550  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3606   001552  0E0F               	movlw	15
  3607   001554  6E3C               	movwf	??_lostReturnHome^0,c
  3608   001556  0EF1               	movlw	241
  3609   001558                     u5357:
  3610   001558  2EE8               	decfsz	wreg,f,c
  3611   00155A  D7FE               	bra	u5357
  3612   00155C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3613   00155E  D7FC               	bra	u5357
  3614   001560  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3615   001562  D7FA               	bra	u5357
  3616   001564  0000               	nop	
  3617                           
  3618                           ;dc_motor.c: 267:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3619   001566  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3620   00156A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3621   00156E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3622   001572  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3623   001576  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3624   00157A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3625   00157E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3626   001582  ECFC  F01D         	call	_turnLeft	;wreg free
  3627   001586                     
  3628                           ;dc_motor.c: 268:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3629   001586  0E05               	movlw	5
  3630   001588  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3631   00158A  0E0F               	movlw	15
  3632   00158C  6E3C               	movwf	??_lostReturnHome^0,c
  3633   00158E  0EF1               	movlw	241
  3634   001590                     u5367:
  3635   001590  2EE8               	decfsz	wreg,f,c
  3636   001592  D7FE               	bra	u5367
  3637   001594  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3638   001596  D7FC               	bra	u5367
  3639   001598  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3640   00159A  D7FA               	bra	u5367
  3641   00159C  0000               	nop	
  3642   00159E                     
  3643                           ;dc_motor.c: 269:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3644   00159E  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  3645   0015A2  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  3646   0015A6  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  3647   0015AA  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  3648   0015AE  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3649   0015B2  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  3650   0015B6  ECA6  F020         	call	_fullSpeedAhead	;wreg free
  3651   0015BA                     
  3652                           ;dc_motor.c: 270:     resetTimer();
  3653   0015BA  ECE7  F024         	call	_resetTimer	;wreg free
  3654   0015BE                     
  3655                           ;dc_motor.c: 271:     lost = 0;
  3656   0015BE  0E00               	movlw	0
  3657   0015C0  6E47               	movwf	_lost^0,c
  3658   0015C2                     l5084:
  3659   0015C2  5047               	movf	_lost^0,w,c
  3660   0015C4  B4D8               	btfsc	status,2,c
  3661   0015C6  EFE7  F00A         	goto	u4501
  3662   0015CA  EFE9  F00A         	goto	u4500
  3663   0015CE                     u4501:
  3664   0015CE  EFE1  F00A         	goto	l5084
  3665   0015D2                     u4500:
  3666   0015D2                     
  3667                           ;dc_motor.c: 273:     stop(mL, mR, straightRamp);
  3668   0015D2  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  3669   0015D6  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  3670   0015DA  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  3671   0015DE  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  3672   0015E2  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  3673   0015E6  EC22  F020         	call	_stop	;wreg free
  3674   0015EA                     
  3675                           ;dc_motor.c: 275:     char i=curMove;
  3676   0015EA  C035  F040         	movff	lostReturnHome@curMove,lostReturnHome@i
  3677                           
  3678                           ;dc_motor.c: 276:     while (i>0) {
  3679   0015EE  EFA5  F00D         	goto	l5176
  3680   0015F2                     l5090:
  3681                           
  3682                           ;dc_motor.c: 277:         i--;
  3683   0015F2  0640               	decf	lostReturnHome@i^0,f,c
  3684   0015F4                     
  3685                           ;dc_motor.c: 279:         if (moveSequence[i] == 1) {
  3686   0015F4  5040               	movf	lostReturnHome@i^0,w,c
  3687   0015F6  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3688   0015F8  6ED9               	movwf	fsr2l,c
  3689   0015FA  0E00               	movlw	0
  3690   0015FC  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3691   0015FE  6EDA               	movwf	fsr2h,c
  3692   001600  04DE               	decf	postinc2,w,c
  3693   001602  A4D8               	btfss	status,2,c
  3694   001604  EF06  F00B         	goto	u4511
  3695   001608  EF08  F00B         	goto	u4510
  3696   00160C                     u4511:
  3697   00160C  EF42  F00B         	goto	l5100
  3698   001610                     u4510:
  3699   001610                     
  3700                           ;dc_motor.c: 280:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3701   001610  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3702   001614  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3703   001618  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3704   00161C  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3705   001620  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3706   001624  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3707   001628  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3708   00162C  ECFC  F01D         	call	_turnLeft	;wreg free
  3709   001630                     
  3710                           ;dc_motor.c: 281:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3711   001630  0E05               	movlw	5
  3712   001632  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3713   001634  0E0F               	movlw	15
  3714   001636  6E3C               	movwf	??_lostReturnHome^0,c
  3715   001638  0EF1               	movlw	241
  3716   00163A                     u5377:
  3717   00163A  2EE8               	decfsz	wreg,f,c
  3718   00163C  D7FE               	bra	u5377
  3719   00163E  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3720   001640  D7FC               	bra	u5377
  3721   001642  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3722   001644  D7FA               	bra	u5377
  3723   001646  0000               	nop	
  3724   001648                     
  3725                           ;dc_motor.c: 282:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3726   001648  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3727   00164C  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3728   001650  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3729   001654  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3730   001658  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3731   00165C  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3732   001660  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3733   001664  ECFC  F01D         	call	_turnLeft	;wreg free
  3734                           
  3735                           ;dc_motor.c: 283:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3736   001668  0E05               	movlw	5
  3737   00166A  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3738   00166C  0E0F               	movlw	15
  3739   00166E  6E3C               	movwf	??_lostReturnHome^0,c
  3740   001670  0EF1               	movlw	241
  3741   001672                     u5387:
  3742   001672  2EE8               	decfsz	wreg,f,c
  3743   001674  D7FE               	bra	u5387
  3744   001676  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3745   001678  D7FC               	bra	u5387
  3746   00167A  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3747   00167C  D7FA               	bra	u5387
  3748   00167E  0000               	nop	
  3749                           
  3750                           ;dc_motor.c: 284:         }
  3751   001680  EF70  F00D         	goto	l594
  3752   001684                     l5100:
  3753   001684  5040               	movf	lostReturnHome@i^0,w,c
  3754   001686  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3755   001688  6ED9               	movwf	fsr2l,c
  3756   00168A  0E00               	movlw	0
  3757   00168C  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3758   00168E  6EDA               	movwf	fsr2h,c
  3759   001690  0E02               	movlw	2
  3760   001692  18DE               	xorwf	postinc2,w,c
  3761   001694  A4D8               	btfss	status,2,c
  3762   001696  EF4F  F00B         	goto	u4521
  3763   00169A  EF51  F00B         	goto	u4520
  3764   00169E                     u4521:
  3765   00169E  EF8B  F00B         	goto	l5108
  3766   0016A2                     u4520:
  3767   0016A2                     
  3768                           ;dc_motor.c: 287:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3769   0016A2  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3770   0016A6  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3771   0016AA  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3772   0016AE  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3773   0016B2  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3774   0016B6  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3775   0016BA  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3776   0016BE  EC12  F01D         	call	_turnRight	;wreg free
  3777   0016C2                     
  3778                           ;dc_motor.c: 288:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3779   0016C2  0E05               	movlw	5
  3780   0016C4  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3781   0016C6  0E0F               	movlw	15
  3782   0016C8  6E3C               	movwf	??_lostReturnHome^0,c
  3783   0016CA  0EF1               	movlw	241
  3784   0016CC                     u5397:
  3785   0016CC  2EE8               	decfsz	wreg,f,c
  3786   0016CE  D7FE               	bra	u5397
  3787   0016D0  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3788   0016D2  D7FC               	bra	u5397
  3789   0016D4  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3790   0016D6  D7FA               	bra	u5397
  3791   0016D8  0000               	nop	
  3792   0016DA                     
  3793                           ;dc_motor.c: 289:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3794   0016DA  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3795   0016DE  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3796   0016E2  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3797   0016E6  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3798   0016EA  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3799   0016EE  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3800   0016F2  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3801   0016F6  EC12  F01D         	call	_turnRight	;wreg free
  3802                           
  3803                           ;dc_motor.c: 290:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3804   0016FA  0E05               	movlw	5
  3805   0016FC  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3806   0016FE  0E0F               	movlw	15
  3807   001700  6E3C               	movwf	??_lostReturnHome^0,c
  3808   001702  0EF1               	movlw	241
  3809   001704                     u5407:
  3810   001704  2EE8               	decfsz	wreg,f,c
  3811   001706  D7FE               	bra	u5407
  3812   001708  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3813   00170A  D7FC               	bra	u5407
  3814   00170C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3815   00170E  D7FA               	bra	u5407
  3816   001710  0000               	nop	
  3817                           
  3818                           ;dc_motor.c: 291:         }
  3819   001712  EF70  F00D         	goto	l594
  3820   001716                     l5108:
  3821   001716  5040               	movf	lostReturnHome@i^0,w,c
  3822   001718  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3823   00171A  6ED9               	movwf	fsr2l,c
  3824   00171C  0E00               	movlw	0
  3825   00171E  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3826   001720  6EDA               	movwf	fsr2h,c
  3827   001722  0E03               	movlw	3
  3828   001724  18DE               	xorwf	postinc2,w,c
  3829   001726  A4D8               	btfss	status,2,c
  3830   001728  EF98  F00B         	goto	u4531
  3831   00172C  EF9A  F00B         	goto	u4530
  3832   001730                     u4531:
  3833   001730  EF0C  F00C         	goto	l5122
  3834   001734                     u4530:
  3835   001734                     
  3836                           ;dc_motor.c: 294:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3837   001734  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3838   001738  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3839   00173C  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3840   001740  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3841   001744  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3842   001748  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3843   00174C  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3844   001750  ECFC  F01D         	call	_turnLeft	;wreg free
  3845   001754                     
  3846                           ;dc_motor.c: 295:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3847   001754  0E05               	movlw	5
  3848   001756  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3849   001758  0E0F               	movlw	15
  3850   00175A  6E3C               	movwf	??_lostReturnHome^0,c
  3851   00175C  0EF1               	movlw	241
  3852   00175E                     u5417:
  3853   00175E  2EE8               	decfsz	wreg,f,c
  3854   001760  D7FE               	bra	u5417
  3855   001762  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3856   001764  D7FC               	bra	u5417
  3857   001766  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3858   001768  D7FA               	bra	u5417
  3859   00176A  0000               	nop	
  3860   00176C                     
  3861                           ;dc_motor.c: 296:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3862   00176C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3863   001770  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3864   001774  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3865   001778  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3866   00177C  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3867   001780  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3868   001784  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3869   001788  ECFC  F01D         	call	_turnLeft	;wreg free
  3870                           
  3871                           ;dc_motor.c: 297:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3872   00178C  0E05               	movlw	5
  3873   00178E  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3874   001790  0E0F               	movlw	15
  3875   001792  6E3C               	movwf	??_lostReturnHome^0,c
  3876   001794  0EF1               	movlw	241
  3877   001796                     u5427:
  3878   001796  2EE8               	decfsz	wreg,f,c
  3879   001798  D7FE               	bra	u5427
  3880   00179A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3881   00179C  D7FC               	bra	u5427
  3882   00179E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3883   0017A0  D7FA               	bra	u5427
  3884   0017A2  0000               	nop	
  3885   0017A4                     
  3886                           ;dc_motor.c: 298:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3887   0017A4  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3888   0017A8  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3889   0017AC  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3890   0017B0  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3891   0017B4  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3892   0017B8  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3893   0017BC  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3894   0017C0  ECFC  F01D         	call	_turnLeft	;wreg free
  3895   0017C4                     
  3896                           ;dc_motor.c: 299:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3897   0017C4  0E05               	movlw	5
  3898   0017C6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3899   0017C8  0E0F               	movlw	15
  3900   0017CA  6E3C               	movwf	??_lostReturnHome^0,c
  3901   0017CC  0EF1               	movlw	241
  3902   0017CE                     u5437:
  3903   0017CE  2EE8               	decfsz	wreg,f,c
  3904   0017D0  D7FE               	bra	u5437
  3905   0017D2  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3906   0017D4  D7FC               	bra	u5437
  3907   0017D6  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3908   0017D8  D7FA               	bra	u5437
  3909   0017DA  0000               	nop	
  3910                           
  3911                           ;dc_motor.c: 300:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3912   0017DC  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3913   0017E0  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3914   0017E4  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3915   0017E8  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3916   0017EC  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3917   0017F0  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3918   0017F4  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3919   0017F8  ECFC  F01D         	call	_turnLeft	;wreg free
  3920   0017FC                     l5120:
  3921                           
  3922                           ;dc_motor.c: 301:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3923   0017FC  0E05               	movlw	5
  3924   0017FE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3925   001800  0E0F               	movlw	15
  3926   001802  6E3C               	movwf	??_lostReturnHome^0,c
  3927   001804  0EF1               	movlw	241
  3928   001806                     u5447:
  3929   001806  2EE8               	decfsz	wreg,f,c
  3930   001808  D7FE               	bra	u5447
  3931   00180A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3932   00180C  D7FC               	bra	u5447
  3933   00180E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3934   001810  D7FA               	bra	u5447
  3935   001812  0000               	nop	
  3936                           
  3937                           ;dc_motor.c: 302:         }
  3938   001814  EF70  F00D         	goto	l594
  3939   001818                     l5122:
  3940   001818  5040               	movf	lostReturnHome@i^0,w,c
  3941   00181A  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3942   00181C  6ED9               	movwf	fsr2l,c
  3943   00181E  0E00               	movlw	0
  3944   001820  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3945   001822  6EDA               	movwf	fsr2h,c
  3946   001824  0E04               	movlw	4
  3947   001826  18DE               	xorwf	postinc2,w,c
  3948   001828  A4D8               	btfss	status,2,c
  3949   00182A  EF19  F00C         	goto	u4541
  3950   00182E  EF1B  F00C         	goto	u4540
  3951   001832                     u4541:
  3952   001832  EF65  F00C         	goto	l5134
  3953   001836                     u4540:
  3954   001836                     
  3955                           ;dc_motor.c: 305:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3956   001836  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3957   00183A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3958   00183E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3959   001842  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3960   001846  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3961   00184A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3962   00184E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3963   001852  ECFC  F01D         	call	_turnLeft	;wreg free
  3964   001856                     
  3965                           ;dc_motor.c: 306:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3966   001856  0E05               	movlw	5
  3967   001858  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3968   00185A  0E0F               	movlw	15
  3969   00185C  6E3C               	movwf	??_lostReturnHome^0,c
  3970   00185E  0EF1               	movlw	241
  3971   001860                     u5457:
  3972   001860  2EE8               	decfsz	wreg,f,c
  3973   001862  D7FE               	bra	u5457
  3974   001864  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3975   001866  D7FC               	bra	u5457
  3976   001868  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3977   00186A  D7FA               	bra	u5457
  3978   00186C  0000               	nop	
  3979   00186E                     
  3980                           ;dc_motor.c: 307:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3981   00186E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3982   001872  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3983   001876  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3984   00187A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3985   00187E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3986   001882  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3987   001886  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3988   00188A  ECFC  F01D         	call	_turnLeft	;wreg free
  3989                           
  3990                           ;dc_motor.c: 308:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3991   00188E  0E05               	movlw	5
  3992   001890  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3993   001892  0E0F               	movlw	15
  3994   001894  6E3C               	movwf	??_lostReturnHome^0,c
  3995   001896  0EF1               	movlw	241
  3996   001898                     u5467:
  3997   001898  2EE8               	decfsz	wreg,f,c
  3998   00189A  D7FE               	bra	u5467
  3999   00189C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4000   00189E  D7FC               	bra	u5467
  4001   0018A0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4002   0018A2  D7FA               	bra	u5467
  4003   0018A4  0000               	nop	
  4004   0018A6                     
  4005                           ;dc_motor.c: 309:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4006   0018A6  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  4007   0018AA  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  4008   0018AE  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  4009   0018B2  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  4010   0018B6  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  4011   0018BA  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  4012   0018BE  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  4013   0018C2  EC1F  F01C         	call	_reverseOneSquare	;wreg free
  4014   0018C6  EFFE  F00B         	goto	l5120
  4015   0018CA                     l5134:
  4016   0018CA  5040               	movf	lostReturnHome@i^0,w,c
  4017   0018CC  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4018   0018CE  6ED9               	movwf	fsr2l,c
  4019   0018D0  0E00               	movlw	0
  4020   0018D2  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4021   0018D4  6EDA               	movwf	fsr2h,c
  4022   0018D6  0E05               	movlw	5
  4023   0018D8  18DE               	xorwf	postinc2,w,c
  4024   0018DA  A4D8               	btfss	status,2,c
  4025   0018DC  EF72  F00C         	goto	u4551
  4026   0018E0  EF74  F00C         	goto	u4550
  4027   0018E4                     u4551:
  4028   0018E4  EFBE  F00C         	goto	l5146
  4029   0018E8                     u4550:
  4030   0018E8                     
  4031                           ;dc_motor.c: 314:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4032   0018E8  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4033   0018EC  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4034   0018F0  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4035   0018F4  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4036   0018F8  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4037   0018FC  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4038   001900  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4039   001904  EC12  F01D         	call	_turnRight	;wreg free
  4040   001908                     
  4041                           ;dc_motor.c: 315:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4042   001908  0E05               	movlw	5
  4043   00190A  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4044   00190C  0E0F               	movlw	15
  4045   00190E  6E3C               	movwf	??_lostReturnHome^0,c
  4046   001910  0EF1               	movlw	241
  4047   001912                     u5477:
  4048   001912  2EE8               	decfsz	wreg,f,c
  4049   001914  D7FE               	bra	u5477
  4050   001916  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4051   001918  D7FC               	bra	u5477
  4052   00191A  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4053   00191C  D7FA               	bra	u5477
  4054   00191E  0000               	nop	
  4055   001920                     
  4056                           ;dc_motor.c: 316:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4057   001920  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4058   001924  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4059   001928  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4060   00192C  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4061   001930  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4062   001934  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4063   001938  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4064   00193C  EC12  F01D         	call	_turnRight	;wreg free
  4065                           
  4066                           ;dc_motor.c: 317:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4067   001940  0E05               	movlw	5
  4068   001942  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4069   001944  0E0F               	movlw	15
  4070   001946  6E3C               	movwf	??_lostReturnHome^0,c
  4071   001948  0EF1               	movlw	241
  4072   00194A                     u5487:
  4073   00194A  2EE8               	decfsz	wreg,f,c
  4074   00194C  D7FE               	bra	u5487
  4075   00194E  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4076   001950  D7FC               	bra	u5487
  4077   001952  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4078   001954  D7FA               	bra	u5487
  4079   001956  0000               	nop	
  4080   001958                     
  4081                           ;dc_motor.c: 318:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4082   001958  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  4083   00195C  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  4084   001960  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  4085   001964  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  4086   001968  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  4087   00196C  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  4088   001970  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  4089   001974  EC1F  F01C         	call	_reverseOneSquare	;wreg free
  4090   001978  EFFE  F00B         	goto	l5120
  4091   00197C                     l5146:
  4092   00197C  5040               	movf	lostReturnHome@i^0,w,c
  4093   00197E  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4094   001980  6ED9               	movwf	fsr2l,c
  4095   001982  0E00               	movlw	0
  4096   001984  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4097   001986  6EDA               	movwf	fsr2h,c
  4098   001988  0E06               	movlw	6
  4099   00198A  18DE               	xorwf	postinc2,w,c
  4100   00198C  A4D8               	btfss	status,2,c
  4101   00198E  EFCB  F00C         	goto	u4561
  4102   001992  EFCD  F00C         	goto	u4560
  4103   001996                     u4561:
  4104   001996  EF17  F00D         	goto	l5158
  4105   00199A                     u4560:
  4106   00199A                     
  4107                           ;dc_motor.c: 323:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4108   00199A  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4109   00199E  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4110   0019A2  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4111   0019A6  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4112   0019AA  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4113   0019AE  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4114   0019B2  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4115   0019B6  ECFC  F01D         	call	_turnLeft	;wreg free
  4116   0019BA                     
  4117                           ;dc_motor.c: 324:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4118   0019BA  0E05               	movlw	5
  4119   0019BC  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4120   0019BE  0E0F               	movlw	15
  4121   0019C0  6E3C               	movwf	??_lostReturnHome^0,c
  4122   0019C2  0EF1               	movlw	241
  4123   0019C4                     u5497:
  4124   0019C4  2EE8               	decfsz	wreg,f,c
  4125   0019C6  D7FE               	bra	u5497
  4126   0019C8  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4127   0019CA  D7FC               	bra	u5497
  4128   0019CC  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4129   0019CE  D7FA               	bra	u5497
  4130   0019D0  0000               	nop	
  4131   0019D2                     
  4132                           ;dc_motor.c: 325:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4133   0019D2  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4134   0019D6  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4135   0019DA  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4136   0019DE  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4137   0019E2  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4138   0019E6  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4139   0019EA  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4140   0019EE  ECFC  F01D         	call	_turnLeft	;wreg free
  4141                           
  4142                           ;dc_motor.c: 326:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4143   0019F2  0E05               	movlw	5
  4144   0019F4  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4145   0019F6  0E0F               	movlw	15
  4146   0019F8  6E3C               	movwf	??_lostReturnHome^0,c
  4147   0019FA  0EF1               	movlw	241
  4148   0019FC                     u5507:
  4149   0019FC  2EE8               	decfsz	wreg,f,c
  4150   0019FE  D7FE               	bra	u5507
  4151   001A00  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4152   001A02  D7FC               	bra	u5507
  4153   001A04  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4154   001A06  D7FA               	bra	u5507
  4155   001A08  0000               	nop	
  4156   001A0A                     
  4157                           ;dc_motor.c: 327:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4158   001A0A  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4159   001A0E  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4160   001A12  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4161   001A16  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4162   001A1A  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4163   001A1E  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4164   001A22  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4165   001A26  ECFC  F01D         	call	_turnLeft	;wreg free
  4166   001A2A  EFFE  F00B         	goto	l5120
  4167   001A2E                     l5158:
  4168   001A2E  5040               	movf	lostReturnHome@i^0,w,c
  4169   001A30  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4170   001A32  6ED9               	movwf	fsr2l,c
  4171   001A34  0E00               	movlw	0
  4172   001A36  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4173   001A38  6EDA               	movwf	fsr2h,c
  4174   001A3A  0E07               	movlw	7
  4175   001A3C  18DE               	xorwf	postinc2,w,c
  4176   001A3E  A4D8               	btfss	status,2,c
  4177   001A40  EF24  F00D         	goto	u4571
  4178   001A44  EF26  F00D         	goto	u4570
  4179   001A48                     u4571:
  4180   001A48  EF70  F00D         	goto	l600
  4181   001A4C                     u4570:
  4182   001A4C                     
  4183                           ;dc_motor.c: 332:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4184   001A4C  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4185   001A50  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4186   001A54  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4187   001A58  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4188   001A5C  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4189   001A60  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4190   001A64  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4191   001A68  EC12  F01D         	call	_turnRight	;wreg free
  4192   001A6C                     
  4193                           ;dc_motor.c: 333:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4194   001A6C  0E05               	movlw	5
  4195   001A6E  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4196   001A70  0E0F               	movlw	15
  4197   001A72  6E3C               	movwf	??_lostReturnHome^0,c
  4198   001A74  0EF1               	movlw	241
  4199   001A76                     u5517:
  4200   001A76  2EE8               	decfsz	wreg,f,c
  4201   001A78  D7FE               	bra	u5517
  4202   001A7A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4203   001A7C  D7FC               	bra	u5517
  4204   001A7E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4205   001A80  D7FA               	bra	u5517
  4206   001A82  0000               	nop	
  4207   001A84                     
  4208                           ;dc_motor.c: 334:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4209   001A84  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4210   001A88  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4211   001A8C  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4212   001A90  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4213   001A94  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4214   001A98  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4215   001A9C  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4216   001AA0  EC12  F01D         	call	_turnRight	;wreg free
  4217                           
  4218                           ;dc_motor.c: 335:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4219   001AA4  0E05               	movlw	5
  4220   001AA6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4221   001AA8  0E0F               	movlw	15
  4222   001AAA  6E3C               	movwf	??_lostReturnHome^0,c
  4223   001AAC  0EF1               	movlw	241
  4224   001AAE                     u5527:
  4225   001AAE  2EE8               	decfsz	wreg,f,c
  4226   001AB0  D7FE               	bra	u5527
  4227   001AB2  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4228   001AB4  D7FC               	bra	u5527
  4229   001AB6  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4230   001AB8  D7FA               	bra	u5527
  4231   001ABA  0000               	nop	
  4232   001ABC                     
  4233                           ;dc_motor.c: 336:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4234   001ABC  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4235   001AC0  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4236   001AC4  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4237   001AC8  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4238   001ACC  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4239   001AD0  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4240   001AD4  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4241   001AD8  EC12  F01D         	call	_turnRight	;wreg free
  4242   001ADC  EFFE  F00B         	goto	l5120
  4243   001AE0                     l600:
  4244   001AE0                     l594:
  4245                           
  4246                           ;dc_motor.c: 340:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4247   001AE0  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4248   001AE4  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4249   001AE8  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4250   001AEC  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4251   001AF0  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4252   001AF4  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4253   001AF8  ECA6  F020         	call	_fullSpeedAhead	;wreg free
  4254   001AFC                     
  4255                           ;dc_motor.c: 341:         resetTimer();
  4256   001AFC  ECE7  F024         	call	_resetTimer	;wreg free
  4257   001B00                     l5172:
  4258   001B00  5040               	movf	lostReturnHome@i^0,w,c
  4259   001B02  0D02               	mullw	2
  4260   001B04  CFF3 F03C          	movff	prodl,??_lostReturnHome
  4261   001B08  CFF4 F03D          	movff	prodh,??_lostReturnHome+1
  4262   001B0C  503C               	movf	??_lostReturnHome^0,w,c
  4263   001B0E  2433               	addwf	lostReturnHome@straightTime^0,w,c
  4264   001B10  6ED9               	movwf	fsr2l,c
  4265   001B12  503D               	movf	(??_lostReturnHome+1)^0,w,c
  4266   001B14  2034               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  4267   001B16  6EDA               	movwf	fsr2h,c
  4268   001B18  ECF0  F023         	call	_get16bitTMR0val	;wreg free
  4269   001B1C  50DE               	movf	postinc2,w,c
  4270   001B1E  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  4271   001B20  50DE               	movf	postinc2,w,c
  4272   001B22  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4273   001B24  A0D8               	btfss	status,0,c
  4274   001B26  EF97  F00D         	goto	u4581
  4275   001B2A  EF99  F00D         	goto	u4580
  4276   001B2E                     u4581:
  4277   001B2E  EF80  F00D         	goto	l5172
  4278   001B32                     u4580:
  4279   001B32                     
  4280                           ;dc_motor.c: 343:         stop(mL, mR, straightRamp);
  4281   001B32  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  4282   001B36  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  4283   001B3A  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  4284   001B3E  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  4285   001B42  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4286   001B46  EC22  F020         	call	_stop	;wreg free
  4287   001B4A                     l5176:
  4288                           
  4289                           ;dc_motor.c: 276:     while (i>0) {
  4290   001B4A  5040               	movf	lostReturnHome@i^0,w,c
  4291   001B4C  A4D8               	btfss	status,2,c
  4292   001B4E  EFAB  F00D         	goto	u4591
  4293   001B52  EFAD  F00D         	goto	u4590
  4294   001B56                     u4591:
  4295   001B56  EFF9  F00A         	goto	l5090
  4296   001B5A                     u4590:
  4297   001B5A  0012               	return		;funcret
  4298   001B5C                     __end_of_lostReturnHome:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _stop *****************
  4302 ;; Defined at:
  4303 ;;		line 348 in file "dc_motor.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4306 ;;		 -> main@motorL(10), 
  4307 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4308 ;;		 -> main@motorR(10), 
  4309 ;;  straightRamp    1   34[COMRAM] unsigned char 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  cur_power       2   40[COMRAM] int 
  4312 ;;  i               2   38[COMRAM] int 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4322 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4323 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4324 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4325 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4326 ;;Total ram usage:       12 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; Hardware stack levels required when called: 7
  4329 ;; This function calls:
  4330 ;;		_setMotorPWM
  4331 ;; This function is called by:
  4332 ;;		_main
  4333 ;;		_returnHome
  4334 ;;		_lostReturnHome
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text4
  4339   004044                     __ptext4:
  4340                           	callstack 0
  4341   004044                     _stop:
  4342                           	callstack 23
  4343   004044                     
  4344                           ;dc_motor.c: 348: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 349: {;dc_motor.c: 350:     mL->direction = 1;
  4345   004044  EE20 F001          	lfsr	2,1
  4346   004048  501F               	movf	stop@mL^0,w,c
  4347   00404A  26D9               	addwf	fsr2l,f,c
  4348   00404C  5020               	movf	(stop@mL+1)^0,w,c
  4349   00404E  22DA               	addwfc	fsr2h,f,c
  4350   004050  0E01               	movlw	1
  4351   004052  6EDF               	movwf	indf2,c
  4352                           
  4353                           ;dc_motor.c: 351:     mR->direction = 1;
  4354   004054  EE20 F001          	lfsr	2,1
  4355   004058  5021               	movf	stop@mR^0,w,c
  4356   00405A  26D9               	addwf	fsr2l,f,c
  4357   00405C  5022               	movf	(stop@mR+1)^0,w,c
  4358   00405E  22DA               	addwfc	fsr2h,f,c
  4359   004060  0E01               	movlw	1
  4360   004062  6EDF               	movwf	indf2,c
  4361                           
  4362                           ;dc_motor.c: 352:     int i;;dc_motor.c: 353:     int cur_power;;dc_motor.c: 354:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  4363   004064  C01F  FFD9         	movff	stop@mL,fsr2l
  4364   004068  C020  FFDA         	movff	stop@mL+1,fsr2h
  4365   00406C  50DF               	movf	indf2,w,c
  4366   00406E  6E24               	movwf	??_stop^0,c
  4367   004070  EE20 F009          	lfsr	2,9
  4368   004074  501F               	movf	stop@mL^0,w,c
  4369   004076  26D9               	addwf	fsr2l,f,c
  4370   004078  5020               	movf	(stop@mL+1)^0,w,c
  4371   00407A  22DA               	addwfc	fsr2h,f,c
  4372   00407C  50DF               	movf	indf2,w,c
  4373   00407E  6E25               	movwf	(??_stop+1)^0,c
  4374   004080  5025               	movf	(??_stop+1)^0,w,c
  4375   004082  5C24               	subwf	??_stop^0,w,c
  4376   004084  6E29               	movwf	stop@cur_power^0,c
  4377   004086  6A2A               	clrf	(stop@cur_power+1)^0,c
  4378   004088  A0D8               	btfss	status,0,c
  4379   00408A  062A               	decf	(stop@cur_power+1)^0,f,c
  4380   00408C                     l4174:
  4381   00408C  BE2A               	btfsc	(stop@cur_power+1)^0,7,c
  4382   00408E  EF4D  F020         	goto	u3450
  4383   004092  EF4B  F020         	goto	u3451
  4384   004096                     u3451:
  4385   004096  EF4F  F020         	goto	l4178
  4386   00409A                     u3450:
  4387   00409A  EF9B  F020         	goto	l4194
  4388   00409E                     l4178:
  4389                           
  4390                           ;dc_motor.c: 355:         mL->power = cur_power+mL->compensation;
  4391   00409E  EE20 F009          	lfsr	2,9
  4392   0040A2  501F               	movf	stop@mL^0,w,c
  4393   0040A4  26D9               	addwf	fsr2l,f,c
  4394   0040A6  5020               	movf	(stop@mL+1)^0,w,c
  4395   0040A8  22DA               	addwfc	fsr2h,f,c
  4396   0040AA  50DF               	movf	indf2,w,c
  4397   0040AC  2429               	addwf	stop@cur_power^0,w,c
  4398   0040AE  C01F  FFD9         	movff	stop@mL,fsr2l
  4399   0040B2  C020  FFDA         	movff	stop@mL+1,fsr2h
  4400   0040B6  6EDF               	movwf	indf2,c
  4401                           
  4402                           ;dc_motor.c: 356:         mR->power = cur_power+mR->compensation;
  4403   0040B8  EE20 F009          	lfsr	2,9
  4404   0040BC  5021               	movf	stop@mR^0,w,c
  4405   0040BE  26D9               	addwf	fsr2l,f,c
  4406   0040C0  5022               	movf	(stop@mR+1)^0,w,c
  4407   0040C2  22DA               	addwfc	fsr2h,f,c
  4408   0040C4  50DF               	movf	indf2,w,c
  4409   0040C6  2429               	addwf	stop@cur_power^0,w,c
  4410   0040C8  C021  FFD9         	movff	stop@mR,fsr2l
  4411   0040CC  C022  FFDA         	movff	stop@mR+1,fsr2h
  4412   0040D0  6EDF               	movwf	indf2,c
  4413   0040D2                     
  4414                           ;dc_motor.c: 357:         setMotorPWM(mL);
  4415   0040D2  C01F  F019         	movff	stop@mL,setMotorPWM@m
  4416   0040D6  C020  F01A         	movff	stop@mL+1,setMotorPWM@m+1
  4417   0040DA  ECE6  F01E         	call	_setMotorPWM	;wreg free
  4418   0040DE                     
  4419                           ;dc_motor.c: 358:         setMotorPWM(mR);
  4420   0040DE  C021  F019         	movff	stop@mR,setMotorPWM@m
  4421   0040E2  C022  F01A         	movff	stop@mR+1,setMotorPWM@m+1
  4422   0040E6  ECE6  F01E         	call	_setMotorPWM	;wreg free
  4423   0040EA                     
  4424                           ;dc_motor.c: 359:         for (i=0;i<straightRamp;i++) {
  4425   0040EA  0E00               	movlw	0
  4426   0040EC  6E28               	movwf	(stop@i+1)^0,c
  4427   0040EE  0E00               	movlw	0
  4428   0040F0  6E27               	movwf	stop@i^0,c
  4429   0040F2  EF84  F020         	goto	l615
  4430   0040F6                     l4186:
  4431                           
  4432                           ;dc_motor.c: 360:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4433   0040F6  0ED0               	movlw	208
  4434   0040F8  6E24               	movwf	??_stop^0,c
  4435   0040FA  0ECA               	movlw	202
  4436   0040FC                     u5537:
  4437   0040FC  2EE8               	decfsz	wreg,f,c
  4438   0040FE  D7FE               	bra	u5537
  4439   004100  2E24               	decfsz	??_stop^0,f,c
  4440   004102  D7FC               	bra	u5537
  4441   004104                     
  4442                           ;dc_motor.c: 361:         }
  4443   004104  4A27               	infsnz	stop@i^0,f,c
  4444   004106  2A28               	incf	(stop@i+1)^0,f,c
  4445   004108                     l615:
  4446   004108  5023               	movf	stop@straightRamp^0,w,c
  4447   00410A  6E24               	movwf	??_stop^0,c
  4448   00410C  6A25               	clrf	(??_stop+1)^0,c
  4449   00410E  5024               	movf	??_stop^0,w,c
  4450   004110  5C27               	subwf	stop@i^0,w,c
  4451   004112  5028               	movf	(stop@i+1)^0,w,c
  4452   004114  0A80               	xorlw	128
  4453   004116  6E26               	movwf	(??_stop+2)^0,c
  4454   004118  5025               	movf	(??_stop+1)^0,w,c
  4455   00411A  0A80               	xorlw	128
  4456   00411C  5826               	subwfb	(??_stop+2)^0,w,c
  4457   00411E  A0D8               	btfss	status,0,c
  4458   004120  EF94  F020         	goto	u3461
  4459   004124  EF96  F020         	goto	u3460
  4460   004128                     u3461:
  4461   004128  EF7B  F020         	goto	l4186
  4462   00412C                     u3460:
  4463   00412C                     
  4464                           ;dc_motor.c: 362:     }
  4465   00412C  0629               	decf	stop@cur_power^0,f,c
  4466   00412E  A0D8               	btfss	status,0,c
  4467   004130  062A               	decf	(stop@cur_power+1)^0,f,c
  4468   004132  EF46  F020         	goto	l4174
  4469   004136                     l4194:
  4470                           
  4471                           ;dc_motor.c: 363:     mL->power = 0;
  4472   004136  C01F  FFD9         	movff	stop@mL,fsr2l
  4473   00413A  C020  FFDA         	movff	stop@mL+1,fsr2h
  4474   00413E  6ADF               	clrf	indf2,c
  4475                           
  4476                           ;dc_motor.c: 364:     mR->power = 0;
  4477   004140  C021  FFD9         	movff	stop@mR,fsr2l
  4478   004144  C022  FFDA         	movff	stop@mR+1,fsr2h
  4479   004148  6ADF               	clrf	indf2,c
  4480   00414A  0012               	return		;funcret
  4481   00414C                     __end_of_stop:
  4482                           	callstack 0
  4483                           
  4484 ;; *************** function _reverseOneSquare *****************
  4485 ;; Defined at:
  4486 ;;		line 449 in file "dc_motor.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4489 ;;		 -> main@motorL(10), 
  4490 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4491 ;;		 -> main@motorR(10), 
  4492 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4493 ;;  reverseDurat    1   35[COMRAM] unsigned char 
  4494 ;;  straightRamp    1   36[COMRAM] unsigned char 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  cur_power       2   42[COMRAM] int 
  4497 ;;  i               2   40[COMRAM] int 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4507 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4508 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4509 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4510 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4511 ;;Total ram usage:       14 bytes
  4512 ;; Hardware stack levels used: 1
  4513 ;; Hardware stack levels required when called: 7
  4514 ;; This function calls:
  4515 ;;		_setMotorPWM
  4516 ;; This function is called by:
  4517 ;;		_move
  4518 ;;		_returnHome
  4519 ;;		_lostReturnHome
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text5
  4524   00383E                     __ptext5:
  4525                           	callstack 0
  4526   00383E                     _reverseOneSquare:
  4527                           	callstack 22
  4528   00383E                     
  4529                           ;dc_motor.c: 449: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned char reverseDuration, unsigned char straightRamp);dc_motor.c: 450: {;dc_motor.c
      +                          : 451:     mL->direction = 0;
  4530   00383E  EE20 F001          	lfsr	2,1
  4531   003842  501F               	movf	reverseOneSquare@mL^0,w,c
  4532   003844  26D9               	addwf	fsr2l,f,c
  4533   003846  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4534   003848  22DA               	addwfc	fsr2h,f,c
  4535   00384A  6ADF               	clrf	indf2,c
  4536                           
  4537                           ;dc_motor.c: 452:     mR->direction = 0;
  4538   00384C  EE20 F001          	lfsr	2,1
  4539   003850  5021               	movf	reverseOneSquare@mR^0,w,c
  4540   003852  26D9               	addwf	fsr2l,f,c
  4541   003854  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4542   003856  22DA               	addwfc	fsr2h,f,c
  4543   003858  6ADF               	clrf	indf2,c
  4544   00385A                     
  4545                           ;dc_motor.c: 453:     int i;;dc_motor.c: 454:     int cur_power;;dc_motor.c: 455:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4546   00385A  0E00               	movlw	0
  4547   00385C  6E2C               	movwf	(reverseOneSquare@cur_power+1)^0,c
  4548   00385E  0E01               	movlw	1
  4549   003860  6E2B               	movwf	reverseOneSquare@cur_power^0,c
  4550   003862  EF7C  F01C         	goto	l4338
  4551   003866                     l4324:
  4552                           
  4553                           ;dc_motor.c: 456:         mL->power = cur_power+mL->compensation;
  4554   003866  EE20 F009          	lfsr	2,9
  4555   00386A  501F               	movf	reverseOneSquare@mL^0,w,c
  4556   00386C  26D9               	addwf	fsr2l,f,c
  4557   00386E  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4558   003870  22DA               	addwfc	fsr2h,f,c
  4559   003872  50DF               	movf	indf2,w,c
  4560   003874  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4561   003876  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4562   00387A  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4563   00387E  6EDF               	movwf	indf2,c
  4564                           
  4565                           ;dc_motor.c: 457:         mR->power = cur_power+mR->compensation;
  4566   003880  EE20 F009          	lfsr	2,9
  4567   003884  5021               	movf	reverseOneSquare@mR^0,w,c
  4568   003886  26D9               	addwf	fsr2l,f,c
  4569   003888  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4570   00388A  22DA               	addwfc	fsr2h,f,c
  4571   00388C  50DF               	movf	indf2,w,c
  4572   00388E  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4573   003890  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4574   003894  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4575   003898  6EDF               	movwf	indf2,c
  4576   00389A                     
  4577                           ;dc_motor.c: 458:         setMotorPWM(mL);
  4578   00389A  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4579   00389E  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4580   0038A2  ECE6  F01E         	call	_setMotorPWM	;wreg free
  4581   0038A6                     
  4582                           ;dc_motor.c: 459:         setMotorPWM(mR);
  4583   0038A6  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4584   0038AA  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4585   0038AE  ECE6  F01E         	call	_setMotorPWM	;wreg free
  4586   0038B2                     
  4587                           ;dc_motor.c: 460:         for (i=0;i<straightRamp;i++) {
  4588   0038B2  0E00               	movlw	0
  4589   0038B4  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4590   0038B6  0E00               	movlw	0
  4591   0038B8  6E29               	movwf	reverseOneSquare@i^0,c
  4592   0038BA  EF68  F01C         	goto	l666
  4593   0038BE                     l4332:
  4594                           
  4595                           ;dc_motor.c: 461:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4596   0038BE  0ED0               	movlw	208
  4597   0038C0  6E26               	movwf	??_reverseOneSquare^0,c
  4598   0038C2  0ECA               	movlw	202
  4599   0038C4                     u5547:
  4600   0038C4  2EE8               	decfsz	wreg,f,c
  4601   0038C6  D7FE               	bra	u5547
  4602   0038C8  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4603   0038CA  D7FC               	bra	u5547
  4604   0038CC                     
  4605                           ;dc_motor.c: 462:         }
  4606   0038CC  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4607   0038CE  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4608   0038D0                     l666:
  4609   0038D0  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4610   0038D2  6E26               	movwf	??_reverseOneSquare^0,c
  4611   0038D4  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4612   0038D6  5026               	movf	??_reverseOneSquare^0,w,c
  4613   0038D8  5C29               	subwf	reverseOneSquare@i^0,w,c
  4614   0038DA  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4615   0038DC  0A80               	xorlw	128
  4616   0038DE  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4617   0038E0  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4618   0038E2  0A80               	xorlw	128
  4619   0038E4  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4620   0038E6  A0D8               	btfss	status,0,c
  4621   0038E8  EF78  F01C         	goto	u3611
  4622   0038EC  EF7A  F01C         	goto	u3610
  4623   0038F0                     u3611:
  4624   0038F0  EF5F  F01C         	goto	l4332
  4625   0038F4                     u3610:
  4626   0038F4                     
  4627                           ;dc_motor.c: 463:     }
  4628   0038F4  4A2B               	infsnz	reverseOneSquare@cur_power^0,f,c
  4629   0038F6  2A2C               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  4630   0038F8                     l4338:
  4631   0038F8  5023               	movf	reverseOneSquare@straightSpeed^0,w,c
  4632   0038FA  6E26               	movwf	??_reverseOneSquare^0,c
  4633   0038FC  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4634   0038FE  502B               	movf	reverseOneSquare@cur_power^0,w,c
  4635   003900  5C26               	subwf	??_reverseOneSquare^0,w,c
  4636   003902  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4637   003904  0A80               	xorlw	128
  4638   003906  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4639   003908  502C               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  4640   00390A  0A80               	xorlw	128
  4641   00390C  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4642   00390E  B0D8               	btfsc	status,0,c
  4643   003910  EF8C  F01C         	goto	u3621
  4644   003914  EF8E  F01C         	goto	u3620
  4645   003918                     u3621:
  4646   003918  EF33  F01C         	goto	l4324
  4647   00391C                     u3620:
  4648   00391C                     
  4649                           ;dc_motor.c: 465:     for (i=0;i<reverseDuration;i++) {
  4650   00391C  0E00               	movlw	0
  4651   00391E  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4652   003920  0E00               	movlw	0
  4653   003922  6E29               	movwf	reverseOneSquare@i^0,c
  4654   003924  EF9D  F01C         	goto	l670
  4655   003928                     l4342:
  4656                           
  4657                           ;dc_motor.c: 466:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4658   003928  0ED0               	movlw	208
  4659   00392A  6E26               	movwf	??_reverseOneSquare^0,c
  4660   00392C  0ECA               	movlw	202
  4661   00392E                     u5557:
  4662   00392E  2EE8               	decfsz	wreg,f,c
  4663   003930  D7FE               	bra	u5557
  4664   003932  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4665   003934  D7FC               	bra	u5557
  4666   003936                     
  4667                           ;dc_motor.c: 467:         }
  4668   003936  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4669   003938  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4670   00393A                     l670:
  4671   00393A  5024               	movf	reverseOneSquare@reverseDuration^0,w,c
  4672   00393C  6E26               	movwf	??_reverseOneSquare^0,c
  4673   00393E  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4674   003940  5026               	movf	??_reverseOneSquare^0,w,c
  4675   003942  5C29               	subwf	reverseOneSquare@i^0,w,c
  4676   003944  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4677   003946  0A80               	xorlw	128
  4678   003948  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4679   00394A  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4680   00394C  0A80               	xorlw	128
  4681   00394E  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4682   003950  A0D8               	btfss	status,0,c
  4683   003952  EFAD  F01C         	goto	u3631
  4684   003956  EFAF  F01C         	goto	u3630
  4685   00395A                     u3631:
  4686   00395A  EF94  F01C         	goto	l4342
  4687   00395E                     u3630:
  4688   00395E                     
  4689                           ;dc_motor.c: 469:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  4690   00395E  C023  F02B         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  4691   003962  6A2C               	clrf	(reverseOneSquare@cur_power+1)^0,c
  4692   003964                     l4346:
  4693   003964  BE2C               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  4694   003966  EFB9  F01C         	goto	u3640
  4695   00396A  EFB7  F01C         	goto	u3641
  4696   00396E                     u3641:
  4697   00396E  EFBB  F01C         	goto	l4350
  4698   003972                     u3640:
  4699   003972  EF07  F01D         	goto	l4366
  4700   003976                     l4350:
  4701                           
  4702                           ;dc_motor.c: 470:         mL->power = cur_power+mL->compensation;
  4703   003976  EE20 F009          	lfsr	2,9
  4704   00397A  501F               	movf	reverseOneSquare@mL^0,w,c
  4705   00397C  26D9               	addwf	fsr2l,f,c
  4706   00397E  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4707   003980  22DA               	addwfc	fsr2h,f,c
  4708   003982  50DF               	movf	indf2,w,c
  4709   003984  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4710   003986  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4711   00398A  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4712   00398E  6EDF               	movwf	indf2,c
  4713                           
  4714                           ;dc_motor.c: 471:         mR->power = cur_power+mR->compensation;
  4715   003990  EE20 F009          	lfsr	2,9
  4716   003994  5021               	movf	reverseOneSquare@mR^0,w,c
  4717   003996  26D9               	addwf	fsr2l,f,c
  4718   003998  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4719   00399A  22DA               	addwfc	fsr2h,f,c
  4720   00399C  50DF               	movf	indf2,w,c
  4721   00399E  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4722   0039A0  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4723   0039A4  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4724   0039A8  6EDF               	movwf	indf2,c
  4725   0039AA                     
  4726                           ;dc_motor.c: 472:         setMotorPWM(mL);
  4727   0039AA  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4728   0039AE  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4729   0039B2  ECE6  F01E         	call	_setMotorPWM	;wreg free
  4730   0039B6                     
  4731                           ;dc_motor.c: 473:         setMotorPWM(mR);
  4732   0039B6  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4733   0039BA  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4734   0039BE  ECE6  F01E         	call	_setMotorPWM	;wreg free
  4735   0039C2                     
  4736                           ;dc_motor.c: 474:         for (i=0;i<straightRamp;i++) {
  4737   0039C2  0E00               	movlw	0
  4738   0039C4  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4739   0039C6  0E00               	movlw	0
  4740   0039C8  6E29               	movwf	reverseOneSquare@i^0,c
  4741   0039CA  EFF0  F01C         	goto	l675
  4742   0039CE                     l4358:
  4743                           
  4744                           ;dc_motor.c: 475:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4745   0039CE  0ED0               	movlw	208
  4746   0039D0  6E26               	movwf	??_reverseOneSquare^0,c
  4747   0039D2  0ECA               	movlw	202
  4748   0039D4                     u5567:
  4749   0039D4  2EE8               	decfsz	wreg,f,c
  4750   0039D6  D7FE               	bra	u5567
  4751   0039D8  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4752   0039DA  D7FC               	bra	u5567
  4753   0039DC                     
  4754                           ;dc_motor.c: 476:         }
  4755   0039DC  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4756   0039DE  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4757   0039E0                     l675:
  4758   0039E0  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4759   0039E2  6E26               	movwf	??_reverseOneSquare^0,c
  4760   0039E4  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4761   0039E6  5026               	movf	??_reverseOneSquare^0,w,c
  4762   0039E8  5C29               	subwf	reverseOneSquare@i^0,w,c
  4763   0039EA  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4764   0039EC  0A80               	xorlw	128
  4765   0039EE  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4766   0039F0  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4767   0039F2  0A80               	xorlw	128
  4768   0039F4  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4769   0039F6  A0D8               	btfss	status,0,c
  4770   0039F8  EF00  F01D         	goto	u3651
  4771   0039FC  EF02  F01D         	goto	u3650
  4772   003A00                     u3651:
  4773   003A00  EFE7  F01C         	goto	l4358
  4774   003A04                     u3650:
  4775   003A04                     
  4776                           ;dc_motor.c: 477:     }
  4777   003A04  062B               	decf	reverseOneSquare@cur_power^0,f,c
  4778   003A06  A0D8               	btfss	status,0,c
  4779   003A08  062C               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  4780   003A0A  EFB2  F01C         	goto	l4346
  4781   003A0E                     l4366:
  4782                           
  4783                           ;dc_motor.c: 478:     mL->power = 0;
  4784   003A0E  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4785   003A12  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4786   003A16  6ADF               	clrf	indf2,c
  4787                           
  4788                           ;dc_motor.c: 479:     mR->power = 0;
  4789   003A18  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4790   003A1C  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4791   003A20  6ADF               	clrf	indf2,c
  4792   003A22  0012               	return		;funcret
  4793   003A24                     __end_of_reverseOneSquare:
  4794                           	callstack 0
  4795                           
  4796 ;; *************** function _resetTimer *****************
  4797 ;; Defined at:
  4798 ;;		line 23 in file "timers.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 5
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;;		_returnHome
  4824 ;;		_lostReturnHome
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text6
  4829   0049CE                     __ptext6:
  4830                           	callstack 0
  4831   0049CE                     _resetTimer:
  4832                           	callstack 25
  4833   0049CE                     
  4834                           ;timers.c: 25:     TMR0H=0;
  4835   0049CE  0E00               	movlw	0
  4836   0049D0  6ED4               	movwf	212,c	;volatile
  4837                           
  4838                           ;timers.c: 26:     TMR0L=0;
  4839   0049D2  0E00               	movlw	0
  4840   0049D4  6ED3               	movwf	211,c	;volatile
  4841   0049D6  0012               	return		;funcret
  4842   0049D8                     __end_of_resetTimer:
  4843                           	callstack 0
  4844                           
  4845 ;; *************** function _get16bitTMR0val *****************
  4846 ;; Defined at:
  4847 ;;		line 33 in file "timers.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;		None
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  timer_val       2   19[COMRAM] unsigned int 
  4852 ;;  timer_high      2   17[COMRAM] unsigned int 
  4853 ;;  timer_low       2   15[COMRAM] unsigned int 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  2   11[COMRAM] unsigned int 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4864 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4865 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4866 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4867 ;;Total ram usage:       10 bytes
  4868 ;; Hardware stack levels used: 1
  4869 ;; Hardware stack levels required when called: 5
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_main
  4874 ;;		_returnHome
  4875 ;;		_lostReturnHome
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text7
  4880   0047E0                     __ptext7:
  4881                           	callstack 0
  4882   0047E0                     _get16bitTMR0val:
  4883                           	callstack 23
  4884   0047E0                     
  4885                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  4886   0047E0  CFD3 F010          	movff	4051,get16bitTMR0val@timer_low	;volatile
  4887   0047E4  6A11               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  4888                           
  4889                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  4890   0047E6  CFD4 F012          	movff	4052,get16bitTMR0val@timer_high	;volatile
  4891   0047EA  6A13               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  4892   0047EC                     
  4893                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  4894   0047EC  5012               	movf	get16bitTMR0val@timer_high^0,w,c
  4895   0047EE  6E0F               	movwf	(??_get16bitTMR0val+1)^0,c
  4896   0047F0  6A0E               	clrf	??_get16bitTMR0val^0,c
  4897   0047F2  5010               	movf	get16bitTMR0val@timer_low^0,w,c
  4898   0047F4  100E               	iorwf	??_get16bitTMR0val^0,w,c
  4899   0047F6  6E14               	movwf	get16bitTMR0val@timer_val^0,c
  4900   0047F8  5011               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  4901   0047FA  100F               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  4902   0047FC  6E15               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  4903   0047FE                     
  4904                           ;timers.c: 39:     return timer_val;
  4905   0047FE  C014  F00C         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  4906   004802  C015  F00D         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  4907   004806  0012               	return		;funcret
  4908   004808                     __end_of_get16bitTMR0val:
  4909                           	callstack 0
  4910                           
  4911 ;; *************** function _fullSpeedAhead *****************
  4912 ;; Defined at:
  4913 ;;		line 432 in file "dc_motor.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4916 ;;		 -> main@motorL(10), 
  4917 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4918 ;;		 -> main@motorR(10), 
  4919 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4920 ;;  straightRamp    1   35[COMRAM] unsigned char 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  cur_power       2   41[COMRAM] int 
  4923 ;;  i               2   39[COMRAM] int 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4933 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4934 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4935 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4936 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4937 ;;Total ram usage:       13 bytes
  4938 ;; Hardware stack levels used: 1
  4939 ;; Hardware stack levels required when called: 7
  4940 ;; This function calls:
  4941 ;;		_setMotorPWM
  4942 ;; This function is called by:
  4943 ;;		_main
  4944 ;;		_move
  4945 ;;		_returnHome
  4946 ;;		_lostReturnHome
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text8
  4951   00414C                     __ptext8:
  4952                           	callstack 0
  4953   00414C                     _fullSpeedAhead:
  4954                           	callstack 21
  4955   00414C                     
  4956                           ;dc_motor.c: 432: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 433: {;dc_motor.c: 434:     mL->direction = 1;
  4957   00414C  EE20 F001          	lfsr	2,1
  4958   004150  501F               	movf	fullSpeedAhead@mL^0,w,c
  4959   004152  26D9               	addwf	fsr2l,f,c
  4960   004154  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4961   004156  22DA               	addwfc	fsr2h,f,c
  4962   004158  0E01               	movlw	1
  4963   00415A  6EDF               	movwf	indf2,c
  4964                           
  4965                           ;dc_motor.c: 435:     mR->direction = 1;
  4966   00415C  EE20 F001          	lfsr	2,1
  4967   004160  5021               	movf	fullSpeedAhead@mR^0,w,c
  4968   004162  26D9               	addwf	fsr2l,f,c
  4969   004164  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4970   004166  22DA               	addwfc	fsr2h,f,c
  4971   004168  0E01               	movlw	1
  4972   00416A  6EDF               	movwf	indf2,c
  4973   00416C                     
  4974                           ;dc_motor.c: 436:     int i;;dc_motor.c: 437:     int cur_power;;dc_motor.c: 438:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4975   00416C  0E00               	movlw	0
  4976   00416E  6E2B               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  4977   004170  0E01               	movlw	1
  4978   004172  6E2A               	movwf	fullSpeedAhead@cur_power^0,c
  4979   004174  EF05  F021         	goto	l4160
  4980   004178                     l4146:
  4981                           
  4982                           ;dc_motor.c: 439:         mL->power = cur_power+mL->compensation;
  4983   004178  EE20 F009          	lfsr	2,9
  4984   00417C  501F               	movf	fullSpeedAhead@mL^0,w,c
  4985   00417E  26D9               	addwf	fsr2l,f,c
  4986   004180  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4987   004182  22DA               	addwfc	fsr2h,f,c
  4988   004184  50DF               	movf	indf2,w,c
  4989   004186  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4990   004188  C01F  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4991   00418C  C020  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4992   004190  6EDF               	movwf	indf2,c
  4993                           
  4994                           ;dc_motor.c: 440:         mR->power = cur_power+mR->compensation;
  4995   004192  EE20 F009          	lfsr	2,9
  4996   004196  5021               	movf	fullSpeedAhead@mR^0,w,c
  4997   004198  26D9               	addwf	fsr2l,f,c
  4998   00419A  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4999   00419C  22DA               	addwfc	fsr2h,f,c
  5000   00419E  50DF               	movf	indf2,w,c
  5001   0041A0  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  5002   0041A2  C021  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5003   0041A6  C022  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5004   0041AA  6EDF               	movwf	indf2,c
  5005   0041AC                     
  5006                           ;dc_motor.c: 441:         setMotorPWM(mL);
  5007   0041AC  C01F  F019         	movff	fullSpeedAhead@mL,setMotorPWM@m
  5008   0041B0  C020  F01A         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  5009   0041B4  ECE6  F01E         	call	_setMotorPWM	;wreg free
  5010   0041B8                     
  5011                           ;dc_motor.c: 442:         setMotorPWM(mR);
  5012   0041B8  C021  F019         	movff	fullSpeedAhead@mR,setMotorPWM@m
  5013   0041BC  C022  F01A         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  5014   0041C0  ECE6  F01E         	call	_setMotorPWM	;wreg free
  5015   0041C4                     
  5016                           ;dc_motor.c: 443:         for (i=0;i<straightRamp;i++) {
  5017   0041C4  0E00               	movlw	0
  5018   0041C6  6E29               	movwf	(fullSpeedAhead@i+1)^0,c
  5019   0041C8  0E00               	movlw	0
  5020   0041CA  6E28               	movwf	fullSpeedAhead@i^0,c
  5021   0041CC  EFF1  F020         	goto	l657
  5022   0041D0                     l4154:
  5023                           
  5024                           ;dc_motor.c: 444:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5025   0041D0  0ED0               	movlw	208
  5026   0041D2  6E25               	movwf	??_fullSpeedAhead^0,c
  5027   0041D4  0ECA               	movlw	202
  5028   0041D6                     u5577:
  5029   0041D6  2EE8               	decfsz	wreg,f,c
  5030   0041D8  D7FE               	bra	u5577
  5031   0041DA  2E25               	decfsz	??_fullSpeedAhead^0,f,c
  5032   0041DC  D7FC               	bra	u5577
  5033   0041DE                     
  5034                           ;dc_motor.c: 445:         }
  5035   0041DE  4A28               	infsnz	fullSpeedAhead@i^0,f,c
  5036   0041E0  2A29               	incf	(fullSpeedAhead@i+1)^0,f,c
  5037   0041E2                     l657:
  5038   0041E2  5024               	movf	fullSpeedAhead@straightRamp^0,w,c
  5039   0041E4  6E25               	movwf	??_fullSpeedAhead^0,c
  5040   0041E6  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  5041   0041E8  5025               	movf	??_fullSpeedAhead^0,w,c
  5042   0041EA  5C28               	subwf	fullSpeedAhead@i^0,w,c
  5043   0041EC  5029               	movf	(fullSpeedAhead@i+1)^0,w,c
  5044   0041EE  0A80               	xorlw	128
  5045   0041F0  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  5046   0041F2  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  5047   0041F4  0A80               	xorlw	128
  5048   0041F6  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  5049   0041F8  A0D8               	btfss	status,0,c
  5050   0041FA  EF01  F021         	goto	u3431
  5051   0041FE  EF03  F021         	goto	u3430
  5052   004202                     u3431:
  5053   004202  EFE8  F020         	goto	l4154
  5054   004206                     u3430:
  5055   004206                     
  5056                           ;dc_motor.c: 446:     }
  5057   004206  4A2A               	infsnz	fullSpeedAhead@cur_power^0,f,c
  5058   004208  2A2B               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  5059   00420A                     l4160:
  5060   00420A  5023               	movf	fullSpeedAhead@straightSpeed^0,w,c
  5061   00420C  6E25               	movwf	??_fullSpeedAhead^0,c
  5062   00420E  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  5063   004210  502A               	movf	fullSpeedAhead@cur_power^0,w,c
  5064   004212  5C25               	subwf	??_fullSpeedAhead^0,w,c
  5065   004214  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  5066   004216  0A80               	xorlw	128
  5067   004218  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  5068   00421A  502B               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  5069   00421C  0A80               	xorlw	128
  5070   00421E  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  5071   004220  B0D8               	btfsc	status,0,c
  5072   004222  EF15  F021         	goto	u3441
  5073   004226  EF17  F021         	goto	u3440
  5074   00422A                     u3441:
  5075   00422A  EFBC  F020         	goto	l4146
  5076   00422E                     u3440:
  5077   00422E  0012               	return		;funcret
  5078   004230                     __end_of_fullSpeedAhead:
  5079                           	callstack 0
  5080                           
  5081 ;; *************** function _initUSART4 *****************
  5082 ;; Defined at:
  5083 ;;		line 4 in file "serial.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;		None
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		wreg, status,2
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5101 ;;Total ram usage:        0 bytes
  5102 ;; Hardware stack levels used: 1
  5103 ;; Hardware stack levels required when called: 5
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_main
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text9
  5112   00494E                     __ptext9:
  5113                           	callstack 0
  5114   00494E                     _initUSART4:
  5115                           	callstack 25
  5116   00494E                     
  5117                           ;serial.c: 7:     RC0PPS = 0x12;
  5118   00494E  0E12               	movlw	18
  5119   004950  010E               	movlb	14	; () banked
  5120   004952  6F62               	movwf	98,b	;volatile
  5121                           
  5122                           ;serial.c: 8:     RX4PPS = 0x11;
  5123   004954  0E11               	movlw	17
  5124   004956  6F15               	movwf	21,b	;volatile
  5125   004958                     
  5126                           ; BSR set to: 14
  5127                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  5128   004958  97E9               	bcf	233,3,b	;volatile
  5129   00495A                     
  5130                           ; BSR set to: 14
  5131                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  5132   00495A  95E8               	bcf	232,2,b	;volatile
  5133                           
  5134                           ;serial.c: 13:     SP4BRGL = 51;
  5135   00495C  0E33               	movlw	51
  5136   00495E  6FE5               	movwf	229,b	;volatile
  5137                           
  5138                           ;serial.c: 14:     SP4BRGH = 0;
  5139   004960  0E00               	movlw	0
  5140   004962  6FE6               	movwf	230,b	;volatile
  5141   004964                     
  5142                           ; BSR set to: 14
  5143                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  5144   004964  89E7               	bsf	231,4,b	;volatile
  5145   004966                     
  5146                           ; BSR set to: 14
  5147                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  5148   004966  8BE8               	bsf	232,5,b	;volatile
  5149   004968                     
  5150                           ; BSR set to: 14
  5151                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  5152   004968  8FE7               	bsf	231,7,b	;volatile
  5153   00496A                     
  5154                           ; BSR set to: 14
  5155   00496A  0012               	return		;funcret
  5156   00496C                     __end_of_initUSART4:
  5157                           	callstack 0
  5158                           
  5159 ;; *************** function _initDCmotorsPWM *****************
  5160 ;; Defined at:
  5161 ;;		line 8 in file "dc_motor.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  PWMperiod       2   11[COMRAM] unsigned int 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      void 
  5168 ;; Registers used:
  5169 ;;		wreg, status,2
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5179 ;;Total ram usage:        2 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; Hardware stack levels required when called: 5
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_main
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text10
  5190   004398                     __ptext10:
  5191                           	callstack 0
  5192   004398                     _initDCmotorsPWM:
  5193                           	callstack 25
  5194   004398                     
  5195                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  5196   004398  947D               	bcf	125,2,c	;volatile
  5197                           
  5198                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  5199   00439A  9485               	bcf	133,2,c	;volatile
  5200                           
  5201                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  5202   00439C  987D               	bcf	125,4,c	;volatile
  5203                           
  5204                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  5205   00439E  9885               	bcf	133,4,c	;volatile
  5206                           
  5207                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  5208   0043A0  9E7B               	bcf	123,7,c	;volatile
  5209                           
  5210                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  5211   0043A2  9E83               	bcf	131,7,c	;volatile
  5212                           
  5213                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  5214   0043A4  9C7F               	bcf	127,6,c	;volatile
  5215                           
  5216                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  5217   0043A6  9C87               	bcf	135,6,c	;volatile
  5218   0043A8                     
  5219                           ;dc_motor.c: 21:     RE2PPS=0x05;
  5220   0043A8  0E05               	movlw	5
  5221   0043AA  010E               	movlb	14	; () banked
  5222   0043AC  6F74               	movwf	116,b	;volatile
  5223                           
  5224                           ;dc_motor.c: 22:     RE4PPS=0x06;
  5225   0043AE  0E06               	movlw	6
  5226   0043B0  6F76               	movwf	118,b	;volatile
  5227                           
  5228                           ;dc_motor.c: 23:     RC7PPS=0x07;
  5229   0043B2  0E07               	movlw	7
  5230   0043B4  6F69               	movwf	105,b	;volatile
  5231                           
  5232                           ;dc_motor.c: 24:     RG6PPS=0x08;
  5233   0043B6  0E08               	movlw	8
  5234   0043B8  6F88               	movwf	136,b	;volatile
  5235                           
  5236                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  5237   0043BA  50BD               	movf	189,w,c	;volatile
  5238   0043BC  0B8F               	andlw	-113
  5239   0043BE  0930               	iorlw	48
  5240   0043C0  6EBD               	movwf	189,c	;volatile
  5241                           
  5242                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  5243   0043C2  0EE0               	movlw	-32
  5244   0043C4  16BE               	andwf	190,f,c	;volatile
  5245                           
  5246                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  5247   0043C6  50BF               	movf	191,w,c	;volatile
  5248   0043C8  0BF0               	andlw	-16
  5249   0043CA  0901               	iorlw	1
  5250   0043CC  6EBF               	movwf	191,c	;volatile
  5251   0043CE                     
  5252                           ; BSR set to: 14
  5253                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  5254   0043CE  C00C  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  5255   0043D2                     
  5256                           ; BSR set to: 14
  5257                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  5258   0043D2  8EBD               	bsf	189,7,c	;volatile
  5259                           
  5260                           ;dc_motor.c: 38:     CCPR1H=0;
  5261   0043D4  0E00               	movlw	0
  5262   0043D6  6EAA               	movwf	170,c	;volatile
  5263                           
  5264                           ;dc_motor.c: 39:     CCPR2H=0;
  5265   0043D8  0E00               	movlw	0
  5266   0043DA  6EA6               	movwf	166,c	;volatile
  5267                           
  5268                           ;dc_motor.c: 40:     CCPR3H=0;
  5269   0043DC  0E00               	movlw	0
  5270   0043DE  010F               	movlb	15	; () banked
  5271   0043E0  6F25               	movwf	37,b	;volatile
  5272                           
  5273                           ;dc_motor.c: 41:     CCPR4H=0;
  5274   0043E2  0E00               	movlw	0
  5275   0043E4  6F21               	movwf	33,b	;volatile
  5276                           
  5277                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  5278   0043E6  0EFC               	movlw	-4
  5279   0043E8  16AD               	andwf	173,f,c	;volatile
  5280                           
  5281                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  5282   0043EA  0EF3               	movlw	-13
  5283   0043EC  16AD               	andwf	173,f,c	;volatile
  5284                           
  5285                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  5286   0043EE  0ECF               	movlw	-49
  5287   0043F0  16AD               	andwf	173,f,c	;volatile
  5288                           
  5289                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  5290   0043F2  0E3F               	movlw	-193
  5291   0043F4  16AD               	andwf	173,f,c	;volatile
  5292   0043F6                     
  5293                           ; BSR set to: 15
  5294                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  5295   0043F6  88AB               	bsf	171,4,c	;volatile
  5296                           
  5297                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  5298   0043F8  50AB               	movf	171,w,c	;volatile
  5299   0043FA  0BF0               	andlw	-16
  5300   0043FC  090C               	iorlw	12
  5301   0043FE  6EAB               	movwf	171,c	;volatile
  5302   004400                     
  5303                           ; BSR set to: 15
  5304                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  5305   004400  8EAB               	bsf	171,7,c	;volatile
  5306   004402                     
  5307                           ; BSR set to: 15
  5308                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  5309   004402  88A7               	bsf	167,4,c	;volatile
  5310                           
  5311                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  5312   004404  50A7               	movf	167,w,c	;volatile
  5313   004406  0BF0               	andlw	-16
  5314   004408  090C               	iorlw	12
  5315   00440A  6EA7               	movwf	167,c	;volatile
  5316   00440C                     
  5317                           ; BSR set to: 15
  5318                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  5319   00440C  8EA7               	bsf	167,7,c	;volatile
  5320   00440E                     
  5321                           ; BSR set to: 15
  5322                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  5323   00440E  8926               	bsf	38,4,b	;volatile
  5324                           
  5325                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  5326   004410  5126               	movf	38,w,b	;volatile
  5327   004412  0BF0               	andlw	-16
  5328   004414  090C               	iorlw	12
  5329   004416  6F26               	movwf	38,b	;volatile
  5330   004418                     
  5331                           ; BSR set to: 15
  5332                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  5333   004418  8F26               	bsf	38,7,b	;volatile
  5334   00441A                     
  5335                           ; BSR set to: 15
  5336                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  5337   00441A  8922               	bsf	34,4,b	;volatile
  5338                           
  5339                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  5340   00441C  5122               	movf	34,w,b	;volatile
  5341   00441E  0BF0               	andlw	-16
  5342   004420  090C               	iorlw	12
  5343   004422  6F22               	movwf	34,b	;volatile
  5344   004424                     
  5345                           ; BSR set to: 15
  5346                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  5347   004424  8F22               	bsf	34,7,b	;volatile
  5348   004426                     
  5349                           ; BSR set to: 15
  5350   004426  0012               	return		;funcret
  5351   004428                     __end_of_initDCmotorsPWM:
  5352                           	callstack 0
  5353                           
  5354 ;; *************** function _color_detect *****************
  5355 ;; Defined at:
  5356 ;;		line 138 in file "color.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  HSV             6   11[COMRAM] struct HSV_val
  5359 ;;  red             6   17[COMRAM] struct HSV_calib
  5360 ;;  green           6   23[COMRAM] struct HSV_calib
  5361 ;;  blue            6   29[COMRAM] struct HSV_calib
  5362 ;;  yellow          6   35[COMRAM] struct HSV_calib
  5363 ;;  pink            6   41[COMRAM] struct HSV_calib
  5364 ;;  orange          6   47[COMRAM] struct HSV_calib
  5365 ;;  lightblue       6   53[COMRAM] struct HSV_calib
  5366 ;;  white           6   59[COMRAM] struct HSV_calib
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  color           1   67[COMRAM] unsigned char 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      unsigned char 
  5371 ;; Registers used:
  5372 ;;		wreg, status,2, status,0
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5378 ;;      Params:        54       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5381 ;;      Totals:        57       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5382 ;;Total ram usage:       57 bytes
  5383 ;; Hardware stack levels used: 1
  5384 ;; Hardware stack levels required when called: 5
  5385 ;; This function calls:
  5386 ;;		Nothing
  5387 ;; This function is called by:
  5388 ;;		_main
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text11
  5393   0033E8                     __ptext11:
  5394                           	callstack 0
  5395   0033E8                     _color_detect:
  5396                           	callstack 25
  5397   0033E8                     
  5398                           ;color.c: 143:     if ((red.H)-1000 < HSV.H && HSV.H < (red.H)+1000) {color = 1;}
  5399   0033E8  0E18               	movlw	24
  5400   0033EA  2412               	addwf	color_detect@red^0,w,c
  5401   0033EC  6E42               	movwf	??_color_detect^0,c
  5402   0033EE  0EFC               	movlw	252
  5403   0033F0  2013               	addwfc	(color_detect@red+1)^0,w,c
  5404   0033F2  6E43               	movwf	(??_color_detect+1)^0,c
  5405   0033F4  500C               	movf	color_detect@HSV^0,w,c
  5406   0033F6  5C42               	subwf	??_color_detect^0,w,c
  5407   0033F8  500D               	movf	(color_detect@HSV+1)^0,w,c
  5408   0033FA  5843               	subwfb	(??_color_detect+1)^0,w,c
  5409   0033FC  B0D8               	btfsc	status,0,c
  5410   0033FE  EF03  F01A         	goto	u4261
  5411   003402  EF05  F01A         	goto	u4260
  5412   003406                     u4261:
  5413   003406  EF1A  F01A         	goto	l4930
  5414   00340A                     u4260:
  5415   00340A  0EE8               	movlw	232
  5416   00340C  2412               	addwf	color_detect@red^0,w,c
  5417   00340E  6E42               	movwf	??_color_detect^0,c
  5418   003410  0E03               	movlw	3
  5419   003412  2013               	addwfc	(color_detect@red+1)^0,w,c
  5420   003414  6E43               	movwf	(??_color_detect+1)^0,c
  5421   003416  5042               	movf	??_color_detect^0,w,c
  5422   003418  5C0C               	subwf	color_detect@HSV^0,w,c
  5423   00341A  5043               	movf	(??_color_detect+1)^0,w,c
  5424   00341C  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5425   00341E  B0D8               	btfsc	status,0,c
  5426   003420  EF14  F01A         	goto	u4271
  5427   003424  EF16  F01A         	goto	u4270
  5428   003428                     u4271:
  5429   003428  EF1A  F01A         	goto	l4930
  5430   00342C                     u4270:
  5431   00342C  0E01               	movlw	1
  5432   00342E  6E44               	movwf	color_detect@color^0,c
  5433   003430  EF26  F01B         	goto	l156
  5434   003434                     l4930:
  5435   003434  0E18               	movlw	24
  5436   003436  2418               	addwf	color_detect@green^0,w,c
  5437   003438  6E42               	movwf	??_color_detect^0,c
  5438   00343A  0EFC               	movlw	252
  5439   00343C  2019               	addwfc	(color_detect@green+1)^0,w,c
  5440   00343E  6E43               	movwf	(??_color_detect+1)^0,c
  5441   003440  500C               	movf	color_detect@HSV^0,w,c
  5442   003442  5C42               	subwf	??_color_detect^0,w,c
  5443   003444  500D               	movf	(color_detect@HSV+1)^0,w,c
  5444   003446  5843               	subwfb	(??_color_detect+1)^0,w,c
  5445   003448  B0D8               	btfsc	status,0,c
  5446   00344A  EF29  F01A         	goto	u4281
  5447   00344E  EF2B  F01A         	goto	u4280
  5448   003452                     u4281:
  5449   003452  EF40  F01A         	goto	l4936
  5450   003456                     u4280:
  5451   003456  0EE8               	movlw	232
  5452   003458  2418               	addwf	color_detect@green^0,w,c
  5453   00345A  6E42               	movwf	??_color_detect^0,c
  5454   00345C  0E03               	movlw	3
  5455   00345E  2019               	addwfc	(color_detect@green+1)^0,w,c
  5456   003460  6E43               	movwf	(??_color_detect+1)^0,c
  5457   003462  5042               	movf	??_color_detect^0,w,c
  5458   003464  5C0C               	subwf	color_detect@HSV^0,w,c
  5459   003466  5043               	movf	(??_color_detect+1)^0,w,c
  5460   003468  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5461   00346A  B0D8               	btfsc	status,0,c
  5462   00346C  EF3A  F01A         	goto	u4291
  5463   003470  EF3C  F01A         	goto	u4290
  5464   003474                     u4291:
  5465   003474  EF40  F01A         	goto	l4936
  5466   003478                     u4290:
  5467   003478  0E02               	movlw	2
  5468   00347A  6E44               	movwf	color_detect@color^0,c
  5469   00347C  EF26  F01B         	goto	l156
  5470   003480                     l4936:
  5471   003480  0E18               	movlw	24
  5472   003482  241E               	addwf	color_detect@blue^0,w,c
  5473   003484  6E42               	movwf	??_color_detect^0,c
  5474   003486  0EFC               	movlw	252
  5475   003488  201F               	addwfc	(color_detect@blue+1)^0,w,c
  5476   00348A  6E43               	movwf	(??_color_detect+1)^0,c
  5477   00348C  500C               	movf	color_detect@HSV^0,w,c
  5478   00348E  5C42               	subwf	??_color_detect^0,w,c
  5479   003490  500D               	movf	(color_detect@HSV+1)^0,w,c
  5480   003492  5843               	subwfb	(??_color_detect+1)^0,w,c
  5481   003494  B0D8               	btfsc	status,0,c
  5482   003496  EF4F  F01A         	goto	u4301
  5483   00349A  EF51  F01A         	goto	u4300
  5484   00349E                     u4301:
  5485   00349E  EF66  F01A         	goto	l4942
  5486   0034A2                     u4300:
  5487   0034A2  0EE8               	movlw	232
  5488   0034A4  241E               	addwf	color_detect@blue^0,w,c
  5489   0034A6  6E42               	movwf	??_color_detect^0,c
  5490   0034A8  0E03               	movlw	3
  5491   0034AA  201F               	addwfc	(color_detect@blue+1)^0,w,c
  5492   0034AC  6E43               	movwf	(??_color_detect+1)^0,c
  5493   0034AE  5042               	movf	??_color_detect^0,w,c
  5494   0034B0  5C0C               	subwf	color_detect@HSV^0,w,c
  5495   0034B2  5043               	movf	(??_color_detect+1)^0,w,c
  5496   0034B4  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5497   0034B6  B0D8               	btfsc	status,0,c
  5498   0034B8  EF60  F01A         	goto	u4311
  5499   0034BC  EF62  F01A         	goto	u4310
  5500   0034C0                     u4311:
  5501   0034C0  EF66  F01A         	goto	l4942
  5502   0034C4                     u4310:
  5503   0034C4  0E03               	movlw	3
  5504   0034C6  6E44               	movwf	color_detect@color^0,c
  5505   0034C8  EF26  F01B         	goto	l156
  5506   0034CC                     l4942:
  5507   0034CC  0E18               	movlw	24
  5508   0034CE  2424               	addwf	color_detect@yellow^0,w,c
  5509   0034D0  6E42               	movwf	??_color_detect^0,c
  5510   0034D2  0EFC               	movlw	252
  5511   0034D4  2025               	addwfc	(color_detect@yellow+1)^0,w,c
  5512   0034D6  6E43               	movwf	(??_color_detect+1)^0,c
  5513   0034D8  500C               	movf	color_detect@HSV^0,w,c
  5514   0034DA  5C42               	subwf	??_color_detect^0,w,c
  5515   0034DC  500D               	movf	(color_detect@HSV+1)^0,w,c
  5516   0034DE  5843               	subwfb	(??_color_detect+1)^0,w,c
  5517   0034E0  B0D8               	btfsc	status,0,c
  5518   0034E2  EF75  F01A         	goto	u4321
  5519   0034E6  EF77  F01A         	goto	u4320
  5520   0034EA                     u4321:
  5521   0034EA  EF8C  F01A         	goto	l4948
  5522   0034EE                     u4320:
  5523   0034EE  0EE8               	movlw	232
  5524   0034F0  2424               	addwf	color_detect@yellow^0,w,c
  5525   0034F2  6E42               	movwf	??_color_detect^0,c
  5526   0034F4  0E03               	movlw	3
  5527   0034F6  2025               	addwfc	(color_detect@yellow+1)^0,w,c
  5528   0034F8  6E43               	movwf	(??_color_detect+1)^0,c
  5529   0034FA  5042               	movf	??_color_detect^0,w,c
  5530   0034FC  5C0C               	subwf	color_detect@HSV^0,w,c
  5531   0034FE  5043               	movf	(??_color_detect+1)^0,w,c
  5532   003500  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5533   003502  B0D8               	btfsc	status,0,c
  5534   003504  EF86  F01A         	goto	u4331
  5535   003508  EF88  F01A         	goto	u4330
  5536   00350C                     u4331:
  5537   00350C  EF8C  F01A         	goto	l4948
  5538   003510                     u4330:
  5539   003510  0E04               	movlw	4
  5540   003512  6E44               	movwf	color_detect@color^0,c
  5541   003514  EF26  F01B         	goto	l156
  5542   003518                     l4948:
  5543   003518  0E18               	movlw	24
  5544   00351A  242A               	addwf	color_detect@pink^0,w,c
  5545   00351C  6E42               	movwf	??_color_detect^0,c
  5546   00351E  0EFC               	movlw	252
  5547   003520  202B               	addwfc	(color_detect@pink+1)^0,w,c
  5548   003522  6E43               	movwf	(??_color_detect+1)^0,c
  5549   003524  500C               	movf	color_detect@HSV^0,w,c
  5550   003526  5C42               	subwf	??_color_detect^0,w,c
  5551   003528  500D               	movf	(color_detect@HSV+1)^0,w,c
  5552   00352A  5843               	subwfb	(??_color_detect+1)^0,w,c
  5553   00352C  B0D8               	btfsc	status,0,c
  5554   00352E  EF9B  F01A         	goto	u4341
  5555   003532  EF9D  F01A         	goto	u4340
  5556   003536                     u4341:
  5557   003536  EFB2  F01A         	goto	l4954
  5558   00353A                     u4340:
  5559   00353A  0EE8               	movlw	232
  5560   00353C  242A               	addwf	color_detect@pink^0,w,c
  5561   00353E  6E42               	movwf	??_color_detect^0,c
  5562   003540  0E03               	movlw	3
  5563   003542  202B               	addwfc	(color_detect@pink+1)^0,w,c
  5564   003544  6E43               	movwf	(??_color_detect+1)^0,c
  5565   003546  5042               	movf	??_color_detect^0,w,c
  5566   003548  5C0C               	subwf	color_detect@HSV^0,w,c
  5567   00354A  5043               	movf	(??_color_detect+1)^0,w,c
  5568   00354C  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5569   00354E  B0D8               	btfsc	status,0,c
  5570   003550  EFAC  F01A         	goto	u4351
  5571   003554  EFAE  F01A         	goto	u4350
  5572   003558                     u4351:
  5573   003558  EFB2  F01A         	goto	l4954
  5574   00355C                     u4350:
  5575   00355C  0E05               	movlw	5
  5576   00355E  6E44               	movwf	color_detect@color^0,c
  5577   003560  EF26  F01B         	goto	l156
  5578   003564                     l4954:
  5579   003564  0E18               	movlw	24
  5580   003566  2430               	addwf	color_detect@orange^0,w,c
  5581   003568  6E42               	movwf	??_color_detect^0,c
  5582   00356A  0EFC               	movlw	252
  5583   00356C  2031               	addwfc	(color_detect@orange+1)^0,w,c
  5584   00356E  6E43               	movwf	(??_color_detect+1)^0,c
  5585   003570  500C               	movf	color_detect@HSV^0,w,c
  5586   003572  5C42               	subwf	??_color_detect^0,w,c
  5587   003574  500D               	movf	(color_detect@HSV+1)^0,w,c
  5588   003576  5843               	subwfb	(??_color_detect+1)^0,w,c
  5589   003578  B0D8               	btfsc	status,0,c
  5590   00357A  EFC1  F01A         	goto	u4361
  5591   00357E  EFC3  F01A         	goto	u4360
  5592   003582                     u4361:
  5593   003582  EFD8  F01A         	goto	l4960
  5594   003586                     u4360:
  5595   003586  0EE8               	movlw	232
  5596   003588  2430               	addwf	color_detect@orange^0,w,c
  5597   00358A  6E42               	movwf	??_color_detect^0,c
  5598   00358C  0E03               	movlw	3
  5599   00358E  2031               	addwfc	(color_detect@orange+1)^0,w,c
  5600   003590  6E43               	movwf	(??_color_detect+1)^0,c
  5601   003592  5042               	movf	??_color_detect^0,w,c
  5602   003594  5C0C               	subwf	color_detect@HSV^0,w,c
  5603   003596  5043               	movf	(??_color_detect+1)^0,w,c
  5604   003598  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5605   00359A  B0D8               	btfsc	status,0,c
  5606   00359C  EFD2  F01A         	goto	u4371
  5607   0035A0  EFD4  F01A         	goto	u4370
  5608   0035A4                     u4371:
  5609   0035A4  EFD8  F01A         	goto	l4960
  5610   0035A8                     u4370:
  5611   0035A8  0E06               	movlw	6
  5612   0035AA  6E44               	movwf	color_detect@color^0,c
  5613   0035AC  EF26  F01B         	goto	l156
  5614   0035B0                     l4960:
  5615   0035B0  0E18               	movlw	24
  5616   0035B2  2436               	addwf	color_detect@lightblue^0,w,c
  5617   0035B4  6E42               	movwf	??_color_detect^0,c
  5618   0035B6  0EFC               	movlw	252
  5619   0035B8  2037               	addwfc	(color_detect@lightblue+1)^0,w,c
  5620   0035BA  6E43               	movwf	(??_color_detect+1)^0,c
  5621   0035BC  500C               	movf	color_detect@HSV^0,w,c
  5622   0035BE  5C42               	subwf	??_color_detect^0,w,c
  5623   0035C0  500D               	movf	(color_detect@HSV+1)^0,w,c
  5624   0035C2  5843               	subwfb	(??_color_detect+1)^0,w,c
  5625   0035C4  B0D8               	btfsc	status,0,c
  5626   0035C6  EFE7  F01A         	goto	u4381
  5627   0035CA  EFE9  F01A         	goto	u4380
  5628   0035CE                     u4381:
  5629   0035CE  EFFE  F01A         	goto	l4966
  5630   0035D2                     u4380:
  5631   0035D2  0EE8               	movlw	232
  5632   0035D4  2436               	addwf	color_detect@lightblue^0,w,c
  5633   0035D6  6E42               	movwf	??_color_detect^0,c
  5634   0035D8  0E03               	movlw	3
  5635   0035DA  2037               	addwfc	(color_detect@lightblue+1)^0,w,c
  5636   0035DC  6E43               	movwf	(??_color_detect+1)^0,c
  5637   0035DE  5042               	movf	??_color_detect^0,w,c
  5638   0035E0  5C0C               	subwf	color_detect@HSV^0,w,c
  5639   0035E2  5043               	movf	(??_color_detect+1)^0,w,c
  5640   0035E4  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5641   0035E6  B0D8               	btfsc	status,0,c
  5642   0035E8  EFF8  F01A         	goto	u4391
  5643   0035EC  EFFA  F01A         	goto	u4390
  5644   0035F0                     u4391:
  5645   0035F0  EFFE  F01A         	goto	l4966
  5646   0035F4                     u4390:
  5647   0035F4  0E07               	movlw	7
  5648   0035F6  6E44               	movwf	color_detect@color^0,c
  5649   0035F8  EF26  F01B         	goto	l156
  5650   0035FC                     l4966:
  5651   0035FC  0E18               	movlw	24
  5652   0035FE  243C               	addwf	color_detect@white^0,w,c
  5653   003600  6E42               	movwf	??_color_detect^0,c
  5654   003602  0EFC               	movlw	252
  5655   003604  203D               	addwfc	(color_detect@white+1)^0,w,c
  5656   003606  6E43               	movwf	(??_color_detect+1)^0,c
  5657   003608  500C               	movf	color_detect@HSV^0,w,c
  5658   00360A  5C42               	subwf	??_color_detect^0,w,c
  5659   00360C  500D               	movf	(color_detect@HSV+1)^0,w,c
  5660   00360E  5843               	subwfb	(??_color_detect+1)^0,w,c
  5661   003610  B0D8               	btfsc	status,0,c
  5662   003612  EF0D  F01B         	goto	u4401
  5663   003616  EF0F  F01B         	goto	u4400
  5664   00361A                     u4401:
  5665   00361A  EF24  F01B         	goto	l4972
  5666   00361E                     u4400:
  5667   00361E  0EE8               	movlw	232
  5668   003620  243C               	addwf	color_detect@white^0,w,c
  5669   003622  6E42               	movwf	??_color_detect^0,c
  5670   003624  0E03               	movlw	3
  5671   003626  203D               	addwfc	(color_detect@white+1)^0,w,c
  5672   003628  6E43               	movwf	(??_color_detect+1)^0,c
  5673   00362A  5042               	movf	??_color_detect^0,w,c
  5674   00362C  5C0C               	subwf	color_detect@HSV^0,w,c
  5675   00362E  5043               	movf	(??_color_detect+1)^0,w,c
  5676   003630  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5677   003632  B0D8               	btfsc	status,0,c
  5678   003634  EF1E  F01B         	goto	u4411
  5679   003638  EF20  F01B         	goto	u4410
  5680   00363C                     u4411:
  5681   00363C  EF24  F01B         	goto	l4972
  5682   003640                     u4410:
  5683   003640  0E08               	movlw	8
  5684   003642  6E44               	movwf	color_detect@color^0,c
  5685   003644  EF26  F01B         	goto	l156
  5686   003648                     l4972:
  5687   003648  0E09               	movlw	9
  5688   00364A  6E44               	movwf	color_detect@color^0,c
  5689   00364C                     l156:
  5690                           
  5691                           ;color.c: 168:     return color;
  5692   00364C  5044               	movf	color_detect@color^0,w,c
  5693   00364E  0012               	return		;funcret
  5694   003650                     __end_of_color_detect:
  5695                           	callstack 0
  5696                           
  5697 ;; *************** function _color_click_init *****************
  5698 ;; Defined at:
  5699 ;;		line 7 in file "color.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;		None
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;		None
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  1    wreg      void 
  5706 ;; Registers used:
  5707 ;;		wreg, status,2, status,0, cstack
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5717 ;;Total ram usage:        1 bytes
  5718 ;; Hardware stack levels used: 1
  5719 ;; Hardware stack levels required when called: 9
  5720 ;; This function calls:
  5721 ;;		_I2C_2_Master_Init
  5722 ;;		_color_clear_init_interrupts
  5723 ;;		_color_writetoaddr
  5724 ;; This function is called by:
  5725 ;;		_main
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           	psect	text12
  5730   0046F0                     __ptext12:
  5731                           	callstack 0
  5732   0046F0                     _color_click_init:
  5733                           	callstack 21
  5734   0046F0                     
  5735                           ;color.c: 10:     I2C_2_Master_Init();
  5736   0046F0  ECDB  F023         	call	_I2C_2_Master_Init	;wreg free
  5737   0046F4                     
  5738                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  5739   0046F4  0E01               	movlw	1
  5740   0046F6  6E0E               	movwf	color_writetoaddr@value^0,c
  5741   0046F8  0E00               	movlw	0
  5742   0046FA  EC77  F024         	call	_color_writetoaddr
  5743   0046FE                     
  5744                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5745   0046FE  0E3F               	movlw	63
  5746   004700  6E15               	movwf	??_color_click_init^0,c
  5747   004702  0E55               	movlw	85
  5748   004704                     u5587:
  5749   004704  2EE8               	decfsz	wreg,f,c
  5750   004706  D7FE               	bra	u5587
  5751   004708  2E15               	decfsz	??_color_click_init^0,f,c
  5752   00470A  D7FC               	bra	u5587
  5753   00470C  0000               	nop	
  5754   00470E                     
  5755                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  5756   00470E  0E03               	movlw	3
  5757   004710  6E0E               	movwf	color_writetoaddr@value^0,c
  5758   004712  0E00               	movlw	0
  5759   004714  EC77  F024         	call	_color_writetoaddr
  5760   004718                     
  5761                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  5762   004718  0ED5               	movlw	213
  5763   00471A  6E0E               	movwf	color_writetoaddr@value^0,c
  5764   00471C  0E01               	movlw	1
  5765   00471E  EC77  F024         	call	_color_writetoaddr
  5766   004722                     
  5767                           ;color.c: 23:     color_clear_init_interrupts();
  5768   004722  EC14  F022         	call	_color_clear_init_interrupts	;wreg free
  5769   004726  0012               	return		;funcret
  5770   004728                     __end_of_color_click_init:
  5771                           	callstack 0
  5772                           
  5773 ;; *************** function _color_clear_init_interrupts *****************
  5774 ;; Defined at:
  5775 ;;		line 27 in file "color.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;		None
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;  low_threshol    2   18[COMRAM] unsigned int 
  5780 ;;  high_thresho    2   16[COMRAM] unsigned int 
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  1    wreg      void 
  5783 ;; Registers used:
  5784 ;;		wreg, status,2, status,0, cstack
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5791 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5793 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5794 ;;Total ram usage:        5 bytes
  5795 ;; Hardware stack levels used: 1
  5796 ;; Hardware stack levels required when called: 8
  5797 ;; This function calls:
  5798 ;;		_I2C_2_Master_Start
  5799 ;;		_I2C_2_Master_Stop
  5800 ;;		_I2C_2_Master_Write
  5801 ;;		_color_writetoaddr
  5802 ;; This function is called by:
  5803 ;;		_color_click_init
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text13
  5808   004428                     __ptext13:
  5809                           	callstack 0
  5810   004428                     _color_clear_init_interrupts:
  5811                           	callstack 21
  5812   004428                     
  5813                           ;color.c: 29:     I2C_2_Master_Start();
  5814   004428  ECF1  F024         	call	_I2C_2_Master_Start	;wreg free
  5815                           
  5816                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  5817   00442C  0E52               	movlw	82
  5818   00442E  ECDB  F024         	call	_I2C_2_Master_Write
  5819                           
  5820                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  5821   004432  0EE6               	movlw	230
  5822   004434  ECDB  F024         	call	_I2C_2_Master_Write
  5823                           
  5824                           ;color.c: 32:     I2C_2_Master_Stop();
  5825   004438  ECEC  F024         	call	_I2C_2_Master_Stop	;wreg free
  5826   00443C                     
  5827                           ;color.c: 35:     unsigned int high_threshold = ambient + 12;
  5828   00443C  0E0C               	movlw	12
  5829   00443E  244D               	addwf	_ambient^0,w,c
  5830   004440  6E11               	movwf	color_clear_init_interrupts@high_threshold^0,c
  5831   004442  0E00               	movlw	0
  5832   004444  204E               	addwfc	(_ambient+1)^0,w,c
  5833   004446  6E12               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  5834   004448                     
  5835                           ;color.c: 36:     unsigned int low_threshold = ambient - 12;
  5836   004448  0EF4               	movlw	244
  5837   00444A  244D               	addwf	_ambient^0,w,c
  5838   00444C  6E13               	movwf	color_clear_init_interrupts@low_threshold^0,c
  5839   00444E  0EFF               	movlw	255
  5840   004450  204E               	addwfc	(_ambient+1)^0,w,c
  5841   004452  6E14               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  5842                           
  5843                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
  5844   004454  0E13               	movlw	19
  5845   004456  6E0E               	movwf	color_writetoaddr@value^0,c
  5846   004458  0E00               	movlw	0
  5847   00445A  EC77  F024         	call	_color_writetoaddr
  5848   00445E                     
  5849                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5850   00445E  0E3F               	movlw	63
  5851   004460  6E10               	movwf	??_color_clear_init_interrupts^0,c
  5852   004462  0E55               	movlw	85
  5853   004464                     u5597:
  5854   004464  2EE8               	decfsz	wreg,f,c
  5855   004466  D7FE               	bra	u5597
  5856   004468  2E10               	decfsz	??_color_clear_init_interrupts^0,f,c
  5857   00446A  D7FC               	bra	u5597
  5858   00446C  0000               	nop	
  5859   00446E                     
  5860                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
  5861   00446E  5012               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  5862   004470  6E0E               	movwf	color_writetoaddr@value^0,c
  5863   004472  0E07               	movlw	7
  5864   004474  EC77  F024         	call	_color_writetoaddr
  5865   004478                     
  5866                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  5867   004478  C011  F00E         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  5868   00447C  0E06               	movlw	6
  5869   00447E  EC77  F024         	call	_color_writetoaddr
  5870   004482                     
  5871                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
  5872   004482  5014               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  5873   004484  6E0E               	movwf	color_writetoaddr@value^0,c
  5874   004486  0E05               	movlw	5
  5875   004488  EC77  F024         	call	_color_writetoaddr
  5876   00448C                     
  5877                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  5878   00448C  C013  F00E         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  5879   004490  0E04               	movlw	4
  5880   004492  EC77  F024         	call	_color_writetoaddr
  5881   004496                     
  5882                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
  5883   004496  0E04               	movlw	4
  5884   004498  6E0E               	movwf	color_writetoaddr@value^0,c
  5885   00449A  0E0C               	movlw	12
  5886   00449C  EC77  F024         	call	_color_writetoaddr
  5887   0044A0  0012               	return		;funcret
  5888   0044A2                     __end_of_color_clear_init_interrupts:
  5889                           	callstack 0
  5890                           
  5891 ;; *************** function _color_writetoaddr *****************
  5892 ;; Defined at:
  5893 ;;		line 50 in file "color.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  address         1    wreg     unsigned char 
  5896 ;;  value           1   13[COMRAM] unsigned char 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  address         1   14[COMRAM] unsigned char 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      void 
  5901 ;; Registers used:
  5902 ;;		wreg, status,2, status,0, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5908 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5911 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5912 ;;Total ram usage:        2 bytes
  5913 ;; Hardware stack levels used: 1
  5914 ;; Hardware stack levels required when called: 7
  5915 ;; This function calls:
  5916 ;;		_I2C_2_Master_Start
  5917 ;;		_I2C_2_Master_Stop
  5918 ;;		_I2C_2_Master_Write
  5919 ;; This function is called by:
  5920 ;;		_color_click_init
  5921 ;;		_color_clear_init_interrupts
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text14
  5926   0048EE                     __ptext14:
  5927                           	callstack 0
  5928   0048EE                     _color_writetoaddr:
  5929                           	callstack 22
  5930                           
  5931                           ;incstack = 0
  5932                           ;color_writetoaddr@address stored from wreg
  5933   0048EE  6E0F               	movwf	color_writetoaddr@address^0,c
  5934   0048F0                     
  5935                           ;color.c: 51:     I2C_2_Master_Start();
  5936   0048F0  ECF1  F024         	call	_I2C_2_Master_Start	;wreg free
  5937                           
  5938                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
  5939   0048F4  0E52               	movlw	82
  5940   0048F6  ECDB  F024         	call	_I2C_2_Master_Write
  5941                           
  5942                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
  5943   0048FA  500F               	movf	color_writetoaddr@address^0,w,c
  5944   0048FC  0980               	iorlw	128
  5945   0048FE  ECDB  F024         	call	_I2C_2_Master_Write
  5946                           
  5947                           ;color.c: 54:     I2C_2_Master_Write(value);
  5948   004902  500E               	movf	color_writetoaddr@value^0,w,c
  5949   004904  ECDB  F024         	call	_I2C_2_Master_Write
  5950                           
  5951                           ;color.c: 55:     I2C_2_Master_Stop();
  5952   004908  ECEC  F024         	call	_I2C_2_Master_Stop	;wreg free
  5953   00490C  0012               	return		;funcret
  5954   00490E                     __end_of_color_writetoaddr:
  5955                           	callstack 0
  5956                           
  5957 ;; *************** function _I2C_2_Master_Init *****************
  5958 ;; Defined at:
  5959 ;;		line 4 in file "i2c.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;		None
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;		None
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5977 ;;Total ram usage:        0 bytes
  5978 ;; Hardware stack levels used: 1
  5979 ;; Hardware stack levels required when called: 5
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_color_click_init
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987                           	psect	text15
  5988   0047B6                     __ptext15:
  5989                           	callstack 0
  5990   0047B6                     _I2C_2_Master_Init:
  5991                           	callstack 24
  5992   0047B6                     
  5993                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5994   0047B6  010E               	movlb	14	; () banked
  5995   0047B8  51D9               	movf	217,w,b	;volatile
  5996   0047BA  0BF0               	andlw	-16
  5997   0047BC  0908               	iorlw	8
  5998   0047BE  6FD9               	movwf	217,b	;volatile
  5999   0047C0                     
  6000                           ; BSR set to: 14
  6001                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6002   0047C0  8BD9               	bsf	217,5,b	;volatile
  6003                           
  6004                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6005   0047C2  0E9F               	movlw	159
  6006   0047C4  6FD6               	movwf	214,b	;volatile
  6007   0047C6                     
  6008                           ; BSR set to: 14
  6009                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6010   0047C6  8A84               	bsf	132,5,c	;volatile
  6011   0047C8                     
  6012                           ; BSR set to: 14
  6013                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6014   0047C8  8C84               	bsf	132,6,c	;volatile
  6015   0047CA                     
  6016                           ; BSR set to: 14
  6017                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6018   0047CA  9BA7               	bcf	167,5,b	;volatile
  6019   0047CC                     
  6020                           ; BSR set to: 14
  6021                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6022   0047CC  9DA7               	bcf	167,6,b	;volatile
  6023                           
  6024                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6025   0047CE  0E1D               	movlw	29
  6026   0047D0  6F1D               	movwf	29,b	;volatile
  6027                           
  6028                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6029   0047D2  0E1E               	movlw	30
  6030   0047D4  6F1C               	movwf	28,b	;volatile
  6031                           
  6032                           ;i2c.c: 18:   RD5PPS=0x1C;
  6033   0047D6  0E1C               	movlw	28
  6034   0047D8  6F6F               	movwf	111,b	;volatile
  6035                           
  6036                           ;i2c.c: 19:   RD6PPS=0x1B;
  6037   0047DA  0E1B               	movlw	27
  6038   0047DC  6F70               	movwf	112,b	;volatile
  6039   0047DE                     
  6040                           ; BSR set to: 14
  6041   0047DE  0012               	return		;funcret
  6042   0047E0                     __end_of_I2C_2_Master_Init:
  6043                           	callstack 0
  6044                           
  6045 ;; *************** function _color_calibration *****************
  6046 ;; Defined at:
  6047 ;;		line 171 in file "color.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  RGBC            2    0[BANK1 ] PTR struct RGBC_val
  6050 ;;		 -> main@RGBC(8), 
  6051 ;;  HSV             2    2[BANK1 ] PTR struct HSV_val
  6052 ;;		 -> main@HSV(6), 
  6053 ;;  red             2    4[BANK1 ] PTR struct HSV_calib
  6054 ;;		 -> main@red(6), 
  6055 ;;  green           2    6[BANK1 ] PTR struct HSV_calib
  6056 ;;		 -> main@green(6), 
  6057 ;;  blue            2    8[BANK1 ] PTR struct HSV_calib
  6058 ;;		 -> main@blue(6), 
  6059 ;;  yellow          2   10[BANK1 ] PTR struct HSV_calib
  6060 ;;		 -> main@yellow(6), 
  6061 ;;  pink            2   12[BANK1 ] PTR struct HSV_calib
  6062 ;;		 -> main@pink(6), 
  6063 ;;  orange          2   14[BANK1 ] PTR struct HSV_calib
  6064 ;;		 -> main@orange(6), 
  6065 ;;  lightblue       2   16[BANK1 ] PTR struct HSV_calib
  6066 ;;		 -> main@lightblue(6), 
  6067 ;;  white           2   18[BANK1 ] PTR struct HSV_calib
  6068 ;;		 -> main@white(6), 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6080 ;;      Params:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;      Totals:         2       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;Total ram usage:       22 bytes
  6085 ;; Hardware stack levels used: 1
  6086 ;; Hardware stack levels required when called: 8
  6087 ;; This function calls:
  6088 ;;		_color_read
  6089 ;;		_rgb_2_hsv
  6090 ;;		_white_Light
  6091 ;; This function is called by:
  6092 ;;		_main
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           	psect	text16
  6097   0021B2                     __ptext16:
  6098                           	callstack 0
  6099   0021B2                     _color_calibration:
  6100                           	callstack 22
  6101   0021B2                     
  6102                           ;color.c: 171: void color_calibration(RGBC_val *RGBC, HSV_val *HSV, HSV_calib *red, HSV_
      +                          calib *green, HSV_calib *blue, HSV_calib *yellow, HSV_calib *pink, HSV_calib *orange, HS
      +                          V_calib *lightblue, HSV_calib *white);color.c: 172: {;color.c: 173:     white_Light(1);
  6103   0021B2  0E01               	movlw	1
  6104   0021B4  EC65  F024         	call	_white_Light
  6105   0021B8                     
  6106                           ;color.c: 174:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6107   0021B8  8680               	bsf	128,3,c	;volatile
  6108   0021BA  8E7C               	bsf	124,7,c	;volatile
  6109   0021BC                     l174:
  6110   0021BC  B48E               	btfsc	142,2,c	;volatile
  6111   0021BE  EFE3  F010         	goto	u4041
  6112   0021C2  EFE5  F010         	goto	u4040
  6113   0021C6                     u4041:
  6114   0021C6  EFDE  F010         	goto	l174
  6115   0021CA                     u4040:
  6116   0021CA                     
  6117                           ;color.c: 177:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6118   0021CA  9680               	bcf	128,3,c	;volatile
  6119   0021CC  9E7C               	bcf	124,7,c	;volatile
  6120   0021CE                     
  6121                           ;color.c: 178:     color_read(RGBC);
  6122   0021CE  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6123   0021D2  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6124   0021D6  EC28  F01B         	call	_color_read	;wreg free
  6125   0021DA                     
  6126                           ;color.c: 179:     rgb_2_hsv(*RGBC, HSV);
  6127   0021DA  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6128   0021DE  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6129   0021E2  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6130   0021E6  0E07               	movlw	7
  6131   0021E8                     u4051:
  6132   0021E8  CFDB FFEB          	movff	plusw2,plusw0
  6133   0021EC  06E8               	decf	wreg,f,c
  6134   0021EE  E2FC               	bc	u4051
  6135   0021F0  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6136   0021F4  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6137   0021F8  EC39  F016         	call	_rgb_2_hsv	;wreg free
  6138   0021FC                     
  6139                           ;color.c: 180:     red->H = HSV->H;
  6140   0021FC  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6141   002200  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6142   002204  C104  FFE1         	movff	color_calibration@red,fsr1l
  6143   002208  C105  FFE2         	movff	color_calibration@red+1,fsr1h
  6144   00220C  CFDE FFE6          	movff	postinc2,postinc1
  6145   002210  CFDD FFE5          	movff	postdec2,postdec1
  6146   002214                     
  6147                           ;color.c: 181:     red->S = HSV->S;
  6148   002214  0101               	movlb	1	; () banked
  6149   002216  EE20 F002          	lfsr	2,2
  6150   00221A  5102               	movf	color_calibration@HSV& (0+255),w,b
  6151   00221C  26D9               	addwf	fsr2l,f,c
  6152   00221E  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6153   002220  22DA               	addwfc	fsr2h,f,c
  6154   002222  EE10 F002          	lfsr	1,2
  6155   002226  5104               	movf	color_calibration@red& (0+255),w,b
  6156   002228  26E1               	addwf	fsr1l,f,c
  6157   00222A  5105               	movf	(color_calibration@red+1)& (0+255),w,b
  6158   00222C  22E2               	addwfc	fsr1h,f,c
  6159   00222E  CFDE FFE6          	movff	postinc2,postinc1
  6160   002232  CFDD FFE5          	movff	postdec2,postdec1
  6161   002236                     
  6162                           ; BSR set to: 1
  6163                           ;color.c: 182:     red->V = HSV->V;
  6164   002236  EE20 F004          	lfsr	2,4
  6165   00223A  5102               	movf	color_calibration@HSV& (0+255),w,b
  6166   00223C  26D9               	addwf	fsr2l,f,c
  6167   00223E  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6168   002240  22DA               	addwfc	fsr2h,f,c
  6169   002242  EE10 F004          	lfsr	1,4
  6170   002246  5104               	movf	color_calibration@red& (0+255),w,b
  6171   002248  26E1               	addwf	fsr1l,f,c
  6172   00224A  5105               	movf	(color_calibration@red+1)& (0+255),w,b
  6173   00224C  22E2               	addwfc	fsr1h,f,c
  6174   00224E  CFDE FFE6          	movff	postinc2,postinc1
  6175   002252  CFDD FFE5          	movff	postdec2,postdec1
  6176   002256                     
  6177                           ; BSR set to: 1
  6178                           ;color.c: 184:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6179   002256  0E29               	movlw	41
  6180   002258  6E3D               	movwf	(??_color_calibration+1)^0,c
  6181   00225A  0E96               	movlw	150
  6182   00225C  6E3C               	movwf	??_color_calibration^0,c
  6183   00225E  0E7F               	movlw	127
  6184   002260                     u5607:
  6185   002260  2EE8               	decfsz	wreg,f,c
  6186   002262  D7FE               	bra	u5607
  6187   002264  2E3C               	decfsz	??_color_calibration^0,f,c
  6188   002266  D7FC               	bra	u5607
  6189   002268  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6190   00226A  D7FA               	bra	u5607
  6191   00226C  0000               	nop	
  6192   00226E                     
  6193                           ;color.c: 185:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6194   00226E  8680               	bsf	128,3,c	;volatile
  6195   002270  8E7C               	bsf	124,7,c	;volatile
  6196   002272                     l177:
  6197   002272  B48E               	btfsc	142,2,c	;volatile
  6198   002274  EF3E  F011         	goto	u4061
  6199   002278  EF40  F011         	goto	u4060
  6200   00227C                     u4061:
  6201   00227C  EF39  F011         	goto	l177
  6202   002280                     u4060:
  6203   002280                     
  6204                           ;color.c: 188:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6205   002280  9680               	bcf	128,3,c	;volatile
  6206   002282  9E7C               	bcf	124,7,c	;volatile
  6207   002284                     
  6208                           ;color.c: 189:     color_read(RGBC);
  6209   002284  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6210   002288  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6211   00228C  EC28  F01B         	call	_color_read	;wreg free
  6212   002290                     
  6213                           ;color.c: 190:     rgb_2_hsv(*RGBC, HSV);
  6214   002290  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6215   002294  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6216   002298  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6217   00229C  0E07               	movlw	7
  6218   00229E                     u4071:
  6219   00229E  CFDB FFEB          	movff	plusw2,plusw0
  6220   0022A2  06E8               	decf	wreg,f,c
  6221   0022A4  E2FC               	bc	u4071
  6222   0022A6  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6223   0022AA  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6224   0022AE  EC39  F016         	call	_rgb_2_hsv	;wreg free
  6225   0022B2                     
  6226                           ;color.c: 191:     green->H = HSV->H;
  6227   0022B2  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6228   0022B6  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6229   0022BA  C106  FFE1         	movff	color_calibration@green,fsr1l
  6230   0022BE  C107  FFE2         	movff	color_calibration@green+1,fsr1h
  6231   0022C2  CFDE FFE6          	movff	postinc2,postinc1
  6232   0022C6  CFDD FFE5          	movff	postdec2,postdec1
  6233   0022CA                     
  6234                           ;color.c: 192:     green->S = HSV->S;
  6235   0022CA  0101               	movlb	1	; () banked
  6236   0022CC  EE20 F002          	lfsr	2,2
  6237   0022D0  5102               	movf	color_calibration@HSV& (0+255),w,b
  6238   0022D2  26D9               	addwf	fsr2l,f,c
  6239   0022D4  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6240   0022D6  22DA               	addwfc	fsr2h,f,c
  6241   0022D8  EE10 F002          	lfsr	1,2
  6242   0022DC  5106               	movf	color_calibration@green& (0+255),w,b
  6243   0022DE  26E1               	addwf	fsr1l,f,c
  6244   0022E0  5107               	movf	(color_calibration@green+1)& (0+255),w,b
  6245   0022E2  22E2               	addwfc	fsr1h,f,c
  6246   0022E4  CFDE FFE6          	movff	postinc2,postinc1
  6247   0022E8  CFDD FFE5          	movff	postdec2,postdec1
  6248   0022EC                     
  6249                           ; BSR set to: 1
  6250                           ;color.c: 193:     green->V = HSV->V;
  6251   0022EC  EE20 F004          	lfsr	2,4
  6252   0022F0  5102               	movf	color_calibration@HSV& (0+255),w,b
  6253   0022F2  26D9               	addwf	fsr2l,f,c
  6254   0022F4  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6255   0022F6  22DA               	addwfc	fsr2h,f,c
  6256   0022F8  EE10 F004          	lfsr	1,4
  6257   0022FC  5106               	movf	color_calibration@green& (0+255),w,b
  6258   0022FE  26E1               	addwf	fsr1l,f,c
  6259   002300  5107               	movf	(color_calibration@green+1)& (0+255),w,b
  6260   002302  22E2               	addwfc	fsr1h,f,c
  6261   002304  CFDE FFE6          	movff	postinc2,postinc1
  6262   002308  CFDD FFE5          	movff	postdec2,postdec1
  6263   00230C                     
  6264                           ; BSR set to: 1
  6265                           ;color.c: 195:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6266   00230C  0E29               	movlw	41
  6267   00230E  6E3D               	movwf	(??_color_calibration+1)^0,c
  6268   002310  0E96               	movlw	150
  6269   002312  6E3C               	movwf	??_color_calibration^0,c
  6270   002314  0E7F               	movlw	127
  6271   002316                     u5617:
  6272   002316  2EE8               	decfsz	wreg,f,c
  6273   002318  D7FE               	bra	u5617
  6274   00231A  2E3C               	decfsz	??_color_calibration^0,f,c
  6275   00231C  D7FC               	bra	u5617
  6276   00231E  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6277   002320  D7FA               	bra	u5617
  6278   002322  0000               	nop	
  6279   002324                     
  6280                           ;color.c: 196:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6281   002324  8680               	bsf	128,3,c	;volatile
  6282   002326  8E7C               	bsf	124,7,c	;volatile
  6283   002328                     l180:
  6284   002328  B48E               	btfsc	142,2,c	;volatile
  6285   00232A  EF99  F011         	goto	u4081
  6286   00232E  EF9B  F011         	goto	u4080
  6287   002332                     u4081:
  6288   002332  EF94  F011         	goto	l180
  6289   002336                     u4080:
  6290   002336                     
  6291                           ;color.c: 199:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6292   002336  9680               	bcf	128,3,c	;volatile
  6293   002338  9E7C               	bcf	124,7,c	;volatile
  6294   00233A                     
  6295                           ;color.c: 200:     color_read(RGBC);
  6296   00233A  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6297   00233E  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6298   002342  EC28  F01B         	call	_color_read	;wreg free
  6299   002346                     
  6300                           ;color.c: 201:     rgb_2_hsv(*RGBC, HSV);
  6301   002346  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6302   00234A  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6303   00234E  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6304   002352  0E07               	movlw	7
  6305   002354                     u4091:
  6306   002354  CFDB FFEB          	movff	plusw2,plusw0
  6307   002358  06E8               	decf	wreg,f,c
  6308   00235A  E2FC               	bc	u4091
  6309   00235C  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6310   002360  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6311   002364  EC39  F016         	call	_rgb_2_hsv	;wreg free
  6312   002368                     
  6313                           ;color.c: 202:     blue->H = HSV->H;
  6314   002368  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6315   00236C  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6316   002370  C108  FFE1         	movff	color_calibration@blue,fsr1l
  6317   002374  C109  FFE2         	movff	color_calibration@blue+1,fsr1h
  6318   002378  CFDE FFE6          	movff	postinc2,postinc1
  6319   00237C  CFDD FFE5          	movff	postdec2,postdec1
  6320   002380                     
  6321                           ;color.c: 203:     blue->S = HSV->S;
  6322   002380  0101               	movlb	1	; () banked
  6323   002382  EE20 F002          	lfsr	2,2
  6324   002386  5102               	movf	color_calibration@HSV& (0+255),w,b
  6325   002388  26D9               	addwf	fsr2l,f,c
  6326   00238A  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6327   00238C  22DA               	addwfc	fsr2h,f,c
  6328   00238E  EE10 F002          	lfsr	1,2
  6329   002392  5108               	movf	color_calibration@blue& (0+255),w,b
  6330   002394  26E1               	addwf	fsr1l,f,c
  6331   002396  5109               	movf	(color_calibration@blue+1)& (0+255),w,b
  6332   002398  22E2               	addwfc	fsr1h,f,c
  6333   00239A  CFDE FFE6          	movff	postinc2,postinc1
  6334   00239E  CFDD FFE5          	movff	postdec2,postdec1
  6335   0023A2                     
  6336                           ; BSR set to: 1
  6337                           ;color.c: 204:     blue->V = HSV->V;
  6338   0023A2  EE20 F004          	lfsr	2,4
  6339   0023A6  5102               	movf	color_calibration@HSV& (0+255),w,b
  6340   0023A8  26D9               	addwf	fsr2l,f,c
  6341   0023AA  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6342   0023AC  22DA               	addwfc	fsr2h,f,c
  6343   0023AE  EE10 F004          	lfsr	1,4
  6344   0023B2  5108               	movf	color_calibration@blue& (0+255),w,b
  6345   0023B4  26E1               	addwf	fsr1l,f,c
  6346   0023B6  5109               	movf	(color_calibration@blue+1)& (0+255),w,b
  6347   0023B8  22E2               	addwfc	fsr1h,f,c
  6348   0023BA  CFDE FFE6          	movff	postinc2,postinc1
  6349   0023BE  CFDD FFE5          	movff	postdec2,postdec1
  6350   0023C2                     
  6351                           ; BSR set to: 1
  6352                           ;color.c: 206:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6353   0023C2  0E29               	movlw	41
  6354   0023C4  6E3D               	movwf	(??_color_calibration+1)^0,c
  6355   0023C6  0E96               	movlw	150
  6356   0023C8  6E3C               	movwf	??_color_calibration^0,c
  6357   0023CA  0E7F               	movlw	127
  6358   0023CC                     u5627:
  6359   0023CC  2EE8               	decfsz	wreg,f,c
  6360   0023CE  D7FE               	bra	u5627
  6361   0023D0  2E3C               	decfsz	??_color_calibration^0,f,c
  6362   0023D2  D7FC               	bra	u5627
  6363   0023D4  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6364   0023D6  D7FA               	bra	u5627
  6365   0023D8  0000               	nop	
  6366   0023DA                     
  6367                           ;color.c: 207:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6368   0023DA  8680               	bsf	128,3,c	;volatile
  6369   0023DC  8E7C               	bsf	124,7,c	;volatile
  6370   0023DE                     l183:
  6371   0023DE  B48E               	btfsc	142,2,c	;volatile
  6372   0023E0  EFF4  F011         	goto	u4101
  6373   0023E4  EFF6  F011         	goto	u4100
  6374   0023E8                     u4101:
  6375   0023E8  EFEF  F011         	goto	l183
  6376   0023EC                     u4100:
  6377   0023EC                     
  6378                           ;color.c: 210:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6379   0023EC  9680               	bcf	128,3,c	;volatile
  6380   0023EE  9E7C               	bcf	124,7,c	;volatile
  6381   0023F0                     
  6382                           ;color.c: 211:     color_read(RGBC);
  6383   0023F0  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6384   0023F4  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6385   0023F8  EC28  F01B         	call	_color_read	;wreg free
  6386   0023FC                     
  6387                           ;color.c: 212:     rgb_2_hsv(*RGBC, HSV);
  6388   0023FC  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6389   002400  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6390   002404  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6391   002408  0E07               	movlw	7
  6392   00240A                     u4111:
  6393   00240A  CFDB FFEB          	movff	plusw2,plusw0
  6394   00240E  06E8               	decf	wreg,f,c
  6395   002410  E2FC               	bc	u4111
  6396   002412  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6397   002416  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6398   00241A  EC39  F016         	call	_rgb_2_hsv	;wreg free
  6399   00241E                     
  6400                           ;color.c: 213:     yellow->H = HSV->H;
  6401   00241E  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6402   002422  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6403   002426  C10A  FFE1         	movff	color_calibration@yellow,fsr1l
  6404   00242A  C10B  FFE2         	movff	color_calibration@yellow+1,fsr1h
  6405   00242E  CFDE FFE6          	movff	postinc2,postinc1
  6406   002432  CFDD FFE5          	movff	postdec2,postdec1
  6407   002436                     
  6408                           ;color.c: 214:     yellow->S = HSV->S;
  6409   002436  0101               	movlb	1	; () banked
  6410   002438  EE20 F002          	lfsr	2,2
  6411   00243C  5102               	movf	color_calibration@HSV& (0+255),w,b
  6412   00243E  26D9               	addwf	fsr2l,f,c
  6413   002440  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6414   002442  22DA               	addwfc	fsr2h,f,c
  6415   002444  EE10 F002          	lfsr	1,2
  6416   002448  510A               	movf	color_calibration@yellow& (0+255),w,b
  6417   00244A  26E1               	addwf	fsr1l,f,c
  6418   00244C  510B               	movf	(color_calibration@yellow+1)& (0+255),w,b
  6419   00244E  22E2               	addwfc	fsr1h,f,c
  6420   002450  CFDE FFE6          	movff	postinc2,postinc1
  6421   002454  CFDD FFE5          	movff	postdec2,postdec1
  6422   002458                     
  6423                           ; BSR set to: 1
  6424                           ;color.c: 215:     yellow->V = HSV->V;
  6425   002458  EE20 F004          	lfsr	2,4
  6426   00245C  5102               	movf	color_calibration@HSV& (0+255),w,b
  6427   00245E  26D9               	addwf	fsr2l,f,c
  6428   002460  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6429   002462  22DA               	addwfc	fsr2h,f,c
  6430   002464  EE10 F004          	lfsr	1,4
  6431   002468  510A               	movf	color_calibration@yellow& (0+255),w,b
  6432   00246A  26E1               	addwf	fsr1l,f,c
  6433   00246C  510B               	movf	(color_calibration@yellow+1)& (0+255),w,b
  6434   00246E  22E2               	addwfc	fsr1h,f,c
  6435   002470  CFDE FFE6          	movff	postinc2,postinc1
  6436   002474  CFDD FFE5          	movff	postdec2,postdec1
  6437   002478                     
  6438                           ; BSR set to: 1
  6439                           ;color.c: 217:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6440   002478  0E29               	movlw	41
  6441   00247A  6E3D               	movwf	(??_color_calibration+1)^0,c
  6442   00247C  0E96               	movlw	150
  6443   00247E  6E3C               	movwf	??_color_calibration^0,c
  6444   002480  0E7F               	movlw	127
  6445   002482                     u5637:
  6446   002482  2EE8               	decfsz	wreg,f,c
  6447   002484  D7FE               	bra	u5637
  6448   002486  2E3C               	decfsz	??_color_calibration^0,f,c
  6449   002488  D7FC               	bra	u5637
  6450   00248A  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6451   00248C  D7FA               	bra	u5637
  6452   00248E  0000               	nop	
  6453   002490                     
  6454                           ;color.c: 218:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6455   002490  8680               	bsf	128,3,c	;volatile
  6456   002492  8E7C               	bsf	124,7,c	;volatile
  6457   002494                     l186:
  6458   002494  B48E               	btfsc	142,2,c	;volatile
  6459   002496  EF4F  F012         	goto	u4121
  6460   00249A  EF51  F012         	goto	u4120
  6461   00249E                     u4121:
  6462   00249E  EF4A  F012         	goto	l186
  6463   0024A2                     u4120:
  6464   0024A2                     
  6465                           ;color.c: 221:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6466   0024A2  9680               	bcf	128,3,c	;volatile
  6467   0024A4  9E7C               	bcf	124,7,c	;volatile
  6468   0024A6                     
  6469                           ;color.c: 222:     color_read(RGBC);
  6470   0024A6  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6471   0024AA  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6472   0024AE  EC28  F01B         	call	_color_read	;wreg free
  6473   0024B2                     
  6474                           ;color.c: 223:     rgb_2_hsv(*RGBC, HSV);
  6475   0024B2  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6476   0024B6  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6477   0024BA  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6478   0024BE  0E07               	movlw	7
  6479   0024C0                     u4131:
  6480   0024C0  CFDB FFEB          	movff	plusw2,plusw0
  6481   0024C4  06E8               	decf	wreg,f,c
  6482   0024C6  E2FC               	bc	u4131
  6483   0024C8  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6484   0024CC  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6485   0024D0  EC39  F016         	call	_rgb_2_hsv	;wreg free
  6486   0024D4                     
  6487                           ;color.c: 224:     pink->H = HSV->H;
  6488   0024D4  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6489   0024D8  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6490   0024DC  C10C  FFE1         	movff	color_calibration@pink,fsr1l
  6491   0024E0  C10D  FFE2         	movff	color_calibration@pink+1,fsr1h
  6492   0024E4  CFDE FFE6          	movff	postinc2,postinc1
  6493   0024E8  CFDD FFE5          	movff	postdec2,postdec1
  6494   0024EC                     
  6495                           ;color.c: 225:     pink->S = HSV->S;
  6496   0024EC  0101               	movlb	1	; () banked
  6497   0024EE  EE20 F002          	lfsr	2,2
  6498   0024F2  5102               	movf	color_calibration@HSV& (0+255),w,b
  6499   0024F4  26D9               	addwf	fsr2l,f,c
  6500   0024F6  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6501   0024F8  22DA               	addwfc	fsr2h,f,c
  6502   0024FA  EE10 F002          	lfsr	1,2
  6503   0024FE  510C               	movf	color_calibration@pink& (0+255),w,b
  6504   002500  26E1               	addwf	fsr1l,f,c
  6505   002502  510D               	movf	(color_calibration@pink+1)& (0+255),w,b
  6506   002504  22E2               	addwfc	fsr1h,f,c
  6507   002506  CFDE FFE6          	movff	postinc2,postinc1
  6508   00250A  CFDD FFE5          	movff	postdec2,postdec1
  6509   00250E                     
  6510                           ; BSR set to: 1
  6511                           ;color.c: 226:     pink->V = HSV->V;
  6512   00250E  EE20 F004          	lfsr	2,4
  6513   002512  5102               	movf	color_calibration@HSV& (0+255),w,b
  6514   002514  26D9               	addwf	fsr2l,f,c
  6515   002516  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6516   002518  22DA               	addwfc	fsr2h,f,c
  6517   00251A  EE10 F004          	lfsr	1,4
  6518   00251E  510C               	movf	color_calibration@pink& (0+255),w,b
  6519   002520  26E1               	addwf	fsr1l,f,c
  6520   002522  510D               	movf	(color_calibration@pink+1)& (0+255),w,b
  6521   002524  22E2               	addwfc	fsr1h,f,c
  6522   002526  CFDE FFE6          	movff	postinc2,postinc1
  6523   00252A  CFDD FFE5          	movff	postdec2,postdec1
  6524   00252E                     
  6525                           ; BSR set to: 1
  6526                           ;color.c: 228:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6527   00252E  0E29               	movlw	41
  6528   002530  6E3D               	movwf	(??_color_calibration+1)^0,c
  6529   002532  0E96               	movlw	150
  6530   002534  6E3C               	movwf	??_color_calibration^0,c
  6531   002536  0E7F               	movlw	127
  6532   002538                     u5647:
  6533   002538  2EE8               	decfsz	wreg,f,c
  6534   00253A  D7FE               	bra	u5647
  6535   00253C  2E3C               	decfsz	??_color_calibration^0,f,c
  6536   00253E  D7FC               	bra	u5647
  6537   002540  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6538   002542  D7FA               	bra	u5647
  6539   002544  0000               	nop	
  6540   002546                     
  6541                           ;color.c: 229:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6542   002546  8680               	bsf	128,3,c	;volatile
  6543   002548  8E7C               	bsf	124,7,c	;volatile
  6544   00254A                     l189:
  6545   00254A  B48E               	btfsc	142,2,c	;volatile
  6546   00254C  EFAA  F012         	goto	u4141
  6547   002550  EFAC  F012         	goto	u4140
  6548   002554                     u4141:
  6549   002554  EFA5  F012         	goto	l189
  6550   002558                     u4140:
  6551   002558                     
  6552                           ;color.c: 232:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6553   002558  9680               	bcf	128,3,c	;volatile
  6554   00255A  9E7C               	bcf	124,7,c	;volatile
  6555   00255C                     
  6556                           ;color.c: 233:     color_read(RGBC);
  6557   00255C  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6558   002560  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6559   002564  EC28  F01B         	call	_color_read	;wreg free
  6560   002568                     
  6561                           ;color.c: 234:     rgb_2_hsv(*RGBC, HSV);
  6562   002568  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6563   00256C  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6564   002570  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6565   002574  0E07               	movlw	7
  6566   002576                     u4151:
  6567   002576  CFDB FFEB          	movff	plusw2,plusw0
  6568   00257A  06E8               	decf	wreg,f,c
  6569   00257C  E2FC               	bc	u4151
  6570   00257E  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6571   002582  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6572   002586  EC39  F016         	call	_rgb_2_hsv	;wreg free
  6573   00258A                     
  6574                           ;color.c: 235:     orange->H = HSV->H;
  6575   00258A  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6576   00258E  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6577   002592  C10E  FFE1         	movff	color_calibration@orange,fsr1l
  6578   002596  C10F  FFE2         	movff	color_calibration@orange+1,fsr1h
  6579   00259A  CFDE FFE6          	movff	postinc2,postinc1
  6580   00259E  CFDD FFE5          	movff	postdec2,postdec1
  6581   0025A2                     
  6582                           ;color.c: 236:     orange->S = HSV->S;
  6583   0025A2  0101               	movlb	1	; () banked
  6584   0025A4  EE20 F002          	lfsr	2,2
  6585   0025A8  5102               	movf	color_calibration@HSV& (0+255),w,b
  6586   0025AA  26D9               	addwf	fsr2l,f,c
  6587   0025AC  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6588   0025AE  22DA               	addwfc	fsr2h,f,c
  6589   0025B0  EE10 F002          	lfsr	1,2
  6590   0025B4  510E               	movf	color_calibration@orange& (0+255),w,b
  6591   0025B6  26E1               	addwf	fsr1l,f,c
  6592   0025B8  510F               	movf	(color_calibration@orange+1)& (0+255),w,b
  6593   0025BA  22E2               	addwfc	fsr1h,f,c
  6594   0025BC  CFDE FFE6          	movff	postinc2,postinc1
  6595   0025C0  CFDD FFE5          	movff	postdec2,postdec1
  6596   0025C4                     
  6597                           ; BSR set to: 1
  6598                           ;color.c: 237:     orange->V = HSV->V;
  6599   0025C4  EE20 F004          	lfsr	2,4
  6600   0025C8  5102               	movf	color_calibration@HSV& (0+255),w,b
  6601   0025CA  26D9               	addwf	fsr2l,f,c
  6602   0025CC  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6603   0025CE  22DA               	addwfc	fsr2h,f,c
  6604   0025D0  EE10 F004          	lfsr	1,4
  6605   0025D4  510E               	movf	color_calibration@orange& (0+255),w,b
  6606   0025D6  26E1               	addwf	fsr1l,f,c
  6607   0025D8  510F               	movf	(color_calibration@orange+1)& (0+255),w,b
  6608   0025DA  22E2               	addwfc	fsr1h,f,c
  6609   0025DC  CFDE FFE6          	movff	postinc2,postinc1
  6610   0025E0  CFDD FFE5          	movff	postdec2,postdec1
  6611   0025E4                     
  6612                           ; BSR set to: 1
  6613                           ;color.c: 239:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6614   0025E4  0E29               	movlw	41
  6615   0025E6  6E3D               	movwf	(??_color_calibration+1)^0,c
  6616   0025E8  0E96               	movlw	150
  6617   0025EA  6E3C               	movwf	??_color_calibration^0,c
  6618   0025EC  0E7F               	movlw	127
  6619   0025EE                     u5657:
  6620   0025EE  2EE8               	decfsz	wreg,f,c
  6621   0025F0  D7FE               	bra	u5657
  6622   0025F2  2E3C               	decfsz	??_color_calibration^0,f,c
  6623   0025F4  D7FC               	bra	u5657
  6624   0025F6  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6625   0025F8  D7FA               	bra	u5657
  6626   0025FA  0000               	nop	
  6627   0025FC                     
  6628                           ;color.c: 240:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6629   0025FC  8680               	bsf	128,3,c	;volatile
  6630   0025FE  8E7C               	bsf	124,7,c	;volatile
  6631   002600                     l192:
  6632   002600  B48E               	btfsc	142,2,c	;volatile
  6633   002602  EF05  F013         	goto	u4161
  6634   002606  EF07  F013         	goto	u4160
  6635   00260A                     u4161:
  6636   00260A  EF00  F013         	goto	l192
  6637   00260E                     u4160:
  6638   00260E                     
  6639                           ;color.c: 243:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6640   00260E  9680               	bcf	128,3,c	;volatile
  6641   002610  9E7C               	bcf	124,7,c	;volatile
  6642   002612                     
  6643                           ;color.c: 244:     color_read(RGBC);
  6644   002612  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6645   002616  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6646   00261A  EC28  F01B         	call	_color_read	;wreg free
  6647   00261E                     
  6648                           ;color.c: 245:     rgb_2_hsv(*RGBC, HSV);
  6649   00261E  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6650   002622  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6651   002626  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6652   00262A  0E07               	movlw	7
  6653   00262C                     u4171:
  6654   00262C  CFDB FFEB          	movff	plusw2,plusw0
  6655   002630  06E8               	decf	wreg,f,c
  6656   002632  E2FC               	bc	u4171
  6657   002634  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6658   002638  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6659   00263C  EC39  F016         	call	_rgb_2_hsv	;wreg free
  6660   002640                     
  6661                           ;color.c: 246:     lightblue->H = HSV->H;
  6662   002640  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6663   002644  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6664   002648  C110  FFE1         	movff	color_calibration@lightblue,fsr1l
  6665   00264C  C111  FFE2         	movff	color_calibration@lightblue+1,fsr1h
  6666   002650  CFDE FFE6          	movff	postinc2,postinc1
  6667   002654  CFDD FFE5          	movff	postdec2,postdec1
  6668   002658                     
  6669                           ;color.c: 247:     lightblue->S = HSV->S;
  6670   002658  0101               	movlb	1	; () banked
  6671   00265A  EE20 F002          	lfsr	2,2
  6672   00265E  5102               	movf	color_calibration@HSV& (0+255),w,b
  6673   002660  26D9               	addwf	fsr2l,f,c
  6674   002662  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6675   002664  22DA               	addwfc	fsr2h,f,c
  6676   002666  EE10 F002          	lfsr	1,2
  6677   00266A  5110               	movf	color_calibration@lightblue& (0+255),w,b
  6678   00266C  26E1               	addwf	fsr1l,f,c
  6679   00266E  5111               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  6680   002670  22E2               	addwfc	fsr1h,f,c
  6681   002672  CFDE FFE6          	movff	postinc2,postinc1
  6682   002676  CFDD FFE5          	movff	postdec2,postdec1
  6683   00267A                     
  6684                           ; BSR set to: 1
  6685                           ;color.c: 248:     lightblue->V = HSV->V;
  6686   00267A  EE20 F004          	lfsr	2,4
  6687   00267E  5102               	movf	color_calibration@HSV& (0+255),w,b
  6688   002680  26D9               	addwf	fsr2l,f,c
  6689   002682  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6690   002684  22DA               	addwfc	fsr2h,f,c
  6691   002686  EE10 F004          	lfsr	1,4
  6692   00268A  5110               	movf	color_calibration@lightblue& (0+255),w,b
  6693   00268C  26E1               	addwf	fsr1l,f,c
  6694   00268E  5111               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  6695   002690  22E2               	addwfc	fsr1h,f,c
  6696   002692  CFDE FFE6          	movff	postinc2,postinc1
  6697   002696  CFDD FFE5          	movff	postdec2,postdec1
  6698   00269A                     
  6699                           ; BSR set to: 1
  6700                           ;color.c: 250:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6701   00269A  0E29               	movlw	41
  6702   00269C  6E3D               	movwf	(??_color_calibration+1)^0,c
  6703   00269E  0E96               	movlw	150
  6704   0026A0  6E3C               	movwf	??_color_calibration^0,c
  6705   0026A2  0E7F               	movlw	127
  6706   0026A4                     u5667:
  6707   0026A4  2EE8               	decfsz	wreg,f,c
  6708   0026A6  D7FE               	bra	u5667
  6709   0026A8  2E3C               	decfsz	??_color_calibration^0,f,c
  6710   0026AA  D7FC               	bra	u5667
  6711   0026AC  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6712   0026AE  D7FA               	bra	u5667
  6713   0026B0  0000               	nop	
  6714   0026B2                     
  6715                           ;color.c: 251:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6716   0026B2  8680               	bsf	128,3,c	;volatile
  6717   0026B4  8E7C               	bsf	124,7,c	;volatile
  6718   0026B6                     l195:
  6719   0026B6  B48E               	btfsc	142,2,c	;volatile
  6720   0026B8  EF60  F013         	goto	u4181
  6721   0026BC  EF62  F013         	goto	u4180
  6722   0026C0                     u4181:
  6723   0026C0  EF5B  F013         	goto	l195
  6724   0026C4                     u4180:
  6725   0026C4                     
  6726                           ;color.c: 254:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6727   0026C4  9680               	bcf	128,3,c	;volatile
  6728   0026C6  9E7C               	bcf	124,7,c	;volatile
  6729   0026C8                     
  6730                           ;color.c: 255:     color_read(RGBC);
  6731   0026C8  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6732   0026CC  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6733   0026D0  EC28  F01B         	call	_color_read	;wreg free
  6734   0026D4                     
  6735                           ;color.c: 256:     rgb_2_hsv(*RGBC, HSV);
  6736   0026D4  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6737   0026D8  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6738   0026DC  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6739   0026E0  0E07               	movlw	7
  6740   0026E2                     u4191:
  6741   0026E2  CFDB FFEB          	movff	plusw2,plusw0
  6742   0026E6  06E8               	decf	wreg,f,c
  6743   0026E8  E2FC               	bc	u4191
  6744   0026EA  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6745   0026EE  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6746   0026F2  EC39  F016         	call	_rgb_2_hsv	;wreg free
  6747   0026F6                     
  6748                           ;color.c: 257:     white->H = HSV->H;
  6749   0026F6  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6750   0026FA  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6751   0026FE  C112  FFE1         	movff	color_calibration@white,fsr1l
  6752   002702  C113  FFE2         	movff	color_calibration@white+1,fsr1h
  6753   002706  CFDE FFE6          	movff	postinc2,postinc1
  6754   00270A  CFDD FFE5          	movff	postdec2,postdec1
  6755   00270E                     
  6756                           ;color.c: 258:     white->S = HSV->S;
  6757   00270E  0101               	movlb	1	; () banked
  6758   002710  EE20 F002          	lfsr	2,2
  6759   002714  5102               	movf	color_calibration@HSV& (0+255),w,b
  6760   002716  26D9               	addwf	fsr2l,f,c
  6761   002718  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6762   00271A  22DA               	addwfc	fsr2h,f,c
  6763   00271C  EE10 F002          	lfsr	1,2
  6764   002720  5112               	movf	color_calibration@white& (0+255),w,b
  6765   002722  26E1               	addwf	fsr1l,f,c
  6766   002724  5113               	movf	(color_calibration@white+1)& (0+255),w,b
  6767   002726  22E2               	addwfc	fsr1h,f,c
  6768   002728  CFDE FFE6          	movff	postinc2,postinc1
  6769   00272C  CFDD FFE5          	movff	postdec2,postdec1
  6770   002730                     
  6771                           ; BSR set to: 1
  6772                           ;color.c: 259:     white->V = HSV->V;
  6773   002730  EE20 F004          	lfsr	2,4
  6774   002734  5102               	movf	color_calibration@HSV& (0+255),w,b
  6775   002736  26D9               	addwf	fsr2l,f,c
  6776   002738  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6777   00273A  22DA               	addwfc	fsr2h,f,c
  6778   00273C  EE10 F004          	lfsr	1,4
  6779   002740  5112               	movf	color_calibration@white& (0+255),w,b
  6780   002742  26E1               	addwf	fsr1l,f,c
  6781   002744  5113               	movf	(color_calibration@white+1)& (0+255),w,b
  6782   002746  22E2               	addwfc	fsr1h,f,c
  6783   002748  CFDE FFE6          	movff	postinc2,postinc1
  6784   00274C  CFDD FFE5          	movff	postdec2,postdec1
  6785   002750                     
  6786                           ; BSR set to: 1
  6787                           ;color.c: 261:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6788   002750  0E29               	movlw	41
  6789   002752  6E3D               	movwf	(??_color_calibration+1)^0,c
  6790   002754  0E96               	movlw	150
  6791   002756  6E3C               	movwf	??_color_calibration^0,c
  6792   002758  0E7F               	movlw	127
  6793   00275A                     u5677:
  6794   00275A  2EE8               	decfsz	wreg,f,c
  6795   00275C  D7FE               	bra	u5677
  6796   00275E  2E3C               	decfsz	??_color_calibration^0,f,c
  6797   002760  D7FC               	bra	u5677
  6798   002762  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6799   002764  D7FA               	bra	u5677
  6800   002766  0000               	nop	
  6801   002768                     
  6802                           ;color.c: 262:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6803   002768  8680               	bsf	128,3,c	;volatile
  6804   00276A  8E7C               	bsf	124,7,c	;volatile
  6805   00276C  0012               	return		;funcret
  6806   00276E                     __end_of_color_calibration:
  6807                           	callstack 0
  6808                           
  6809 ;; *************** function _white_Light *****************
  6810 ;; Defined at:
  6811 ;;		line 59 in file "color.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  state           1    wreg     unsigned char 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  state           1   11[COMRAM] unsigned char 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  1    wreg      void 
  6818 ;; Registers used:
  6819 ;;		wreg, status,2
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6829 ;;Total ram usage:        1 bytes
  6830 ;; Hardware stack levels used: 1
  6831 ;; Hardware stack levels required when called: 5
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		_main
  6836 ;;		_color_calibration
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text17
  6841   0048CA                     __ptext17:
  6842                           	callstack 0
  6843   0048CA                     _white_Light:
  6844                           	callstack 25
  6845                           
  6846                           ;incstack = 0
  6847                           ;white_Light@state stored from wreg
  6848   0048CA  6E0C               	movwf	white_Light@state^0,c
  6849   0048CC                     
  6850                           ;color.c: 59: void white_Light(char state);color.c: 60: {;color.c: 61:     if (state){
  6851   0048CC  500C               	movf	white_Light@state^0,w,c
  6852   0048CE  B4D8               	btfsc	status,2,c
  6853   0048D0  EF6C  F024         	goto	u3841
  6854   0048D4  EF6E  F024         	goto	u3840
  6855   0048D8                     u3841:
  6856   0048D8  EF73  F024         	goto	l144
  6857   0048DC                     u3840:
  6858   0048DC                     
  6859                           ;color.c: 62:         LATGbits.LATG0 = 1;
  6860   0048DC  807F               	bsf	127,0,c	;volatile
  6861                           
  6862                           ;color.c: 63:         LATEbits.LATE7 = 1;
  6863   0048DE  8E7D               	bsf	125,7,c	;volatile
  6864                           
  6865                           ;color.c: 64:         LATAbits.LATA3 = 1;
  6866   0048E0  8679               	bsf	121,3,c	;volatile
  6867                           
  6868                           ;color.c: 65:     }
  6869   0048E2  EF76  F024         	goto	l146
  6870   0048E6                     l144:
  6871                           
  6872                           ;color.c: 67:         LATGbits.LATG0 = 0;
  6873   0048E6  907F               	bcf	127,0,c	;volatile
  6874                           
  6875                           ;color.c: 68:         LATEbits.LATE7 = 0;
  6876   0048E8  9E7D               	bcf	125,7,c	;volatile
  6877                           
  6878                           ;color.c: 69:         LATAbits.LATA3 = 0;
  6879   0048EA  9679               	bcf	121,3,c	;volatile
  6880   0048EC                     l146:
  6881   0048EC  0012               	return		;funcret
  6882   0048EE                     __end_of_white_Light:
  6883                           	callstack 0
  6884                           
  6885 ;; *************** function _rgb_2_hsv *****************
  6886 ;; Defined at:
  6887 ;;		line 276 in file "color.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;  RGBC            8   37[COMRAM] struct RGBC_val
  6890 ;;  HSV             2   45[COMRAM] PTR struct HSV_val
  6891 ;;		 -> main@HSV(6), 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;  diff            4   14[BANK0 ] unsigned long 
  6894 ;;  b               2   20[BANK0 ] unsigned int 
  6895 ;;  g               2   18[BANK0 ] unsigned int 
  6896 ;;  cmax            2   12[BANK0 ] unsigned int 
  6897 ;;  r               2   10[BANK0 ] unsigned int 
  6898 ;;  cmin            2    4[BANK0 ] unsigned int 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  1    wreg      void 
  6901 ;; Registers used:
  6902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6908 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6909 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6910 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6911 ;;      Totals:        22      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6912 ;;Total ram usage:       44 bytes
  6913 ;; Hardware stack levels used: 1
  6914 ;; Hardware stack levels required when called: 6
  6915 ;; This function calls:
  6916 ;;		___aldiv
  6917 ;;		___lldiv
  6918 ;;		___lmul
  6919 ;;		_max
  6920 ;;		_min
  6921 ;; This function is called by:
  6922 ;;		_main
  6923 ;;		_color_calibration
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text18
  6928   002C72                     __ptext18:
  6929                           	callstack 0
  6930   002C72                     _rgb_2_hsv:
  6931                           	callstack 24
  6932   002C72                     
  6933                           ;color.c: 279:     unsigned int r = (unsigned int)(RGBC.R*10000L/255);
  6934   002C72  C026  F00C         	movff	rgb_2_hsv@RGBC,___lmul@multiplier
  6935   002C76  C027  F00D         	movff	rgb_2_hsv@RGBC+1,___lmul@multiplier+1
  6936   002C7A  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6937   002C7C  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6938   002C7E  0E10               	movlw	16
  6939   002C80  6E10               	movwf	___lmul@multiplicand^0,c
  6940   002C82  0E27               	movlw	39
  6941   002C84  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6942   002C86  0E00               	movlw	0
  6943   002C88  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6944   002C8A  0E00               	movlw	0
  6945   002C8C  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6946   002C8E  ECC8  F022         	call	___lmul	;wreg free
  6947   002C92  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6948   002C96  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6949   002C9A  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6950   002C9E  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6951   002CA2  0EFF               	movlw	255
  6952   002CA4  6E1C               	movwf	___aldiv@divisor^0,c
  6953   002CA6  0E00               	movlw	0
  6954   002CA8  6E1D               	movwf	(___aldiv@divisor+1)^0,c
  6955   002CAA  0E00               	movlw	0
  6956   002CAC  6E1E               	movwf	(___aldiv@divisor+2)^0,c
  6957   002CAE  0E00               	movlw	0
  6958   002CB0  6E1F               	movwf	(___aldiv@divisor+3)^0,c
  6959   002CB2  EC9C  F01F         	call	___aldiv	;wreg free
  6960   002CB6  C018  F0E2         	movff	?___aldiv,rgb_2_hsv@r
  6961   002CBA  C019  F0E3         	movff	?___aldiv+1,rgb_2_hsv@r+1
  6962                           
  6963                           ;color.c: 280:     unsigned int g = (unsigned int)(RGBC.G*10000L/255);
  6964   002CBE  C028  F00C         	movff	rgb_2_hsv@RGBC+2,___lmul@multiplier
  6965   002CC2  C029  F00D         	movff	rgb_2_hsv@RGBC+3,___lmul@multiplier+1
  6966   002CC6  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6967   002CC8  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6968   002CCA  0E10               	movlw	16
  6969   002CCC  6E10               	movwf	___lmul@multiplicand^0,c
  6970   002CCE  0E27               	movlw	39
  6971   002CD0  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6972   002CD2  0E00               	movlw	0
  6973   002CD4  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6974   002CD6  0E00               	movlw	0
  6975   002CD8  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6976   002CDA  ECC8  F022         	call	___lmul	;wreg free
  6977   002CDE  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6978   002CE2  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6979   002CE6  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6980   002CEA  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6981   002CEE  0EFF               	movlw	255
  6982   002CF0  6E1C               	movwf	___aldiv@divisor^0,c
  6983   002CF2  0E00               	movlw	0
  6984   002CF4  6E1D               	movwf	(___aldiv@divisor+1)^0,c
  6985   002CF6  0E00               	movlw	0
  6986   002CF8  6E1E               	movwf	(___aldiv@divisor+2)^0,c
  6987   002CFA  0E00               	movlw	0
  6988   002CFC  6E1F               	movwf	(___aldiv@divisor+3)^0,c
  6989   002CFE  EC9C  F01F         	call	___aldiv	;wreg free
  6990   002D02  C018  F0EA         	movff	?___aldiv,rgb_2_hsv@g
  6991   002D06  C019  F0EB         	movff	?___aldiv+1,rgb_2_hsv@g+1
  6992                           
  6993                           ;color.c: 281:     unsigned int b = (unsigned int)(RGBC.B*10000L/255);
  6994   002D0A  C02A  F00C         	movff	rgb_2_hsv@RGBC+4,___lmul@multiplier
  6995   002D0E  C02B  F00D         	movff	rgb_2_hsv@RGBC+5,___lmul@multiplier+1
  6996   002D12  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6997   002D14  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6998   002D16  0E10               	movlw	16
  6999   002D18  6E10               	movwf	___lmul@multiplicand^0,c
  7000   002D1A  0E27               	movlw	39
  7001   002D1C  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7002   002D1E  0E00               	movlw	0
  7003   002D20  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7004   002D22  0E00               	movlw	0
  7005   002D24  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7006   002D26  ECC8  F022         	call	___lmul	;wreg free
  7007   002D2A  C00C  F018         	movff	?___lmul,___aldiv@dividend
  7008   002D2E  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  7009   002D32  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  7010   002D36  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  7011   002D3A  0EFF               	movlw	255
  7012   002D3C  6E1C               	movwf	___aldiv@divisor^0,c
  7013   002D3E  0E00               	movlw	0
  7014   002D40  6E1D               	movwf	(___aldiv@divisor+1)^0,c
  7015   002D42  0E00               	movlw	0
  7016   002D44  6E1E               	movwf	(___aldiv@divisor+2)^0,c
  7017   002D46  0E00               	movlw	0
  7018   002D48  6E1F               	movwf	(___aldiv@divisor+3)^0,c
  7019   002D4A  EC9C  F01F         	call	___aldiv	;wreg free
  7020   002D4E  C018  F0EC         	movff	?___aldiv,rgb_2_hsv@b
  7021   002D52  C019  F0ED         	movff	?___aldiv+1,rgb_2_hsv@b+1
  7022                           
  7023                           ;color.c: 284:     unsigned int cmax = max(r, max(g, b));
  7024   002D56  C0EA  F00C         	movff	rgb_2_hsv@g,max@a
  7025   002D5A  C0EB  F00D         	movff	rgb_2_hsv@g+1,max@a+1
  7026   002D5E  C0EC  F00E         	movff	rgb_2_hsv@b,max@b
  7027   002D62  C0ED  F00F         	movff	rgb_2_hsv@b+1,max@b+1
  7028   002D66  ECC5  F023         	call	_max	;wreg free
  7029   002D6A  C00C  F0DE         	movff	?_max,_rgb_2_hsv$3530
  7030   002D6E  C00D  F0DF         	movff	?_max+1,_rgb_2_hsv$3530+1
  7031                           
  7032                           ;color.c: 284:     unsigned int cmax = max(r, max(g, b));
  7033   002D72  C0E2  F00C         	movff	rgb_2_hsv@r,max@a
  7034   002D76  C0E3  F00D         	movff	rgb_2_hsv@r+1,max@a+1
  7035   002D7A  C0DE  F00E         	movff	_rgb_2_hsv$3530,max@b
  7036   002D7E  C0DF  F00F         	movff	_rgb_2_hsv$3530+1,max@b+1
  7037   002D82  ECC5  F023         	call	_max	;wreg free
  7038   002D86  C00C  F0E4         	movff	?_max,rgb_2_hsv@cmax
  7039   002D8A  C00D  F0E5         	movff	?_max+1,rgb_2_hsv@cmax+1
  7040                           
  7041                           ;color.c: 285:     unsigned int cmin = min(r, min(g, b));
  7042   002D8E  C0EA  F00C         	movff	rgb_2_hsv@g,min@a
  7043   002D92  C0EB  F00D         	movff	rgb_2_hsv@g+1,min@a+1
  7044   002D96  C0EC  F00E         	movff	rgb_2_hsv@b,min@b
  7045   002D9A  C0ED  F00F         	movff	rgb_2_hsv@b+1,min@b+1
  7046   002D9E  ECAF  F023         	call	_min	;wreg free
  7047   002DA2  C00C  F0E0         	movff	?_min,_rgb_2_hsv$3531
  7048   002DA6  C00D  F0E1         	movff	?_min+1,_rgb_2_hsv$3531+1
  7049                           
  7050                           ;color.c: 285:     unsigned int cmin = min(r, min(g, b));
  7051   002DAA  C0E2  F00C         	movff	rgb_2_hsv@r,min@a
  7052   002DAE  C0E3  F00D         	movff	rgb_2_hsv@r+1,min@a+1
  7053   002DB2  C0E0  F00E         	movff	_rgb_2_hsv$3531,min@b
  7054   002DB6  C0E1  F00F         	movff	_rgb_2_hsv$3531+1,min@b+1
  7055   002DBA  ECAF  F023         	call	_min	;wreg free
  7056   002DBE  C00C  F0DC         	movff	?_min,rgb_2_hsv@cmin
  7057   002DC2  C00D  F0DD         	movff	?_min+1,rgb_2_hsv@cmin+1
  7058   002DC6                     
  7059                           ;color.c: 286:     unsigned long diff = cmax - cmin;
  7060   002DC6  0100               	movlb	0	; () banked
  7061   002DC8  51DC               	movf	rgb_2_hsv@cmin& (0+255),w,b
  7062   002DCA  5DE4               	subwf	rgb_2_hsv@cmax& (0+255),w,b
  7063   002DCC  6E30               	movwf	??_rgb_2_hsv^0,c
  7064   002DCE  51DD               	movf	(rgb_2_hsv@cmin+1)& (0+255),w,b
  7065   002DD0  59E5               	subwfb	(rgb_2_hsv@cmax+1)& (0+255),w,b
  7066   002DD2  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  7067   002DD4  C030  F0E6         	movff	??_rgb_2_hsv,rgb_2_hsv@diff
  7068   002DD8  C031  F0E7         	movff	??_rgb_2_hsv+1,rgb_2_hsv@diff+1
  7069   002DDC  6BE8               	clrf	(rgb_2_hsv@diff+2)& (0+255),b
  7070   002DDE  6BE9               	clrf	(rgb_2_hsv@diff+3)& (0+255),b
  7071   002DE0                     
  7072                           ; BSR set to: 0
  7073                           ;color.c: 289:     if (cmax == r){
  7074   002DE0  51E2               	movf	rgb_2_hsv@r& (0+255),w,b
  7075   002DE2  19E4               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  7076   002DE4  E107               	bnz	u3771
  7077   002DE6  51E3               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  7078   002DE8  19E5               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  7079   002DEA  A4D8               	btfss	status,2,c
  7080   002DEC  EFFA  F016         	goto	u3771
  7081   002DF0  EFFC  F016         	goto	u3770
  7082   002DF4                     u3771:
  7083   002DF4  EFA3  F017         	goto	l4478
  7084   002DF8                     u3770:
  7085   002DF8                     
  7086                           ; BSR set to: 0
  7087                           ;color.c: 290:         if (g > b){HSV->H = (unsigned int)((g-b)*6000L/diff);}
  7088   002DF8  51EA               	movf	rgb_2_hsv@g& (0+255),w,b
  7089   002DFA  5DEC               	subwf	rgb_2_hsv@b& (0+255),w,b
  7090   002DFC  51EB               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  7091   002DFE  59ED               	subwfb	(rgb_2_hsv@b+1)& (0+255),w,b
  7092   002E00  B0D8               	btfsc	status,0,c
  7093   002E02  EF05  F017         	goto	u3781
  7094   002E06  EF07  F017         	goto	u3780
  7095   002E0A                     u3781:
  7096   002E0A  EF39  F017         	goto	l4472
  7097   002E0E                     u3780:
  7098   002E0E                     
  7099                           ; BSR set to: 0
  7100   002E0E  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  7101   002E10  5DEA               	subwf	rgb_2_hsv@g& (0+255),w,b
  7102   002E12  6E30               	movwf	??_rgb_2_hsv^0,c
  7103   002E14  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  7104   002E16  59EB               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  7105   002E18  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  7106   002E1A  C030  F00C         	movff	??_rgb_2_hsv,___lmul@multiplier
  7107   002E1E  C031  F00D         	movff	??_rgb_2_hsv+1,___lmul@multiplier+1
  7108   002E22  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  7109   002E24  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  7110   002E26  0E70               	movlw	112
  7111   002E28  6E10               	movwf	___lmul@multiplicand^0,c
  7112   002E2A  0E17               	movlw	23
  7113   002E2C  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7114   002E2E  0E00               	movlw	0
  7115   002E30  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7116   002E32  0E00               	movlw	0
  7117   002E34  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7118   002E36  ECC8  F022         	call	___lmul	;wreg free
  7119   002E3A  C00C  F018         	movff	?___lmul,___lldiv@dividend
  7120   002E3E  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  7121   002E42  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  7122   002E46  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  7123   002E4A  C0E6  F01C         	movff	rgb_2_hsv@diff,___lldiv@divisor
  7124   002E4E  C0E7  F01D         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  7125   002E52  C0E8  F01E         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  7126   002E56  C0E9  F01F         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  7127   002E5A  EC7A  F021         	call	___lldiv	;wreg free
  7128   002E5E  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  7129   002E62  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  7130   002E66  C018  FFDE         	movff	?___lldiv,postinc2
  7131   002E6A  C019  FFDD         	movff	?___lldiv+1,postdec2
  7132   002E6E  EF5B  F018         	goto	l215
  7133   002E72                     l4472:
  7134                           
  7135                           ; BSR set to: 0
  7136   002E72  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  7137   002E74  5DEA               	subwf	rgb_2_hsv@g& (0+255),w,b
  7138   002E76  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  7139   002E78  59EB               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  7140   002E7A  B0D8               	btfsc	status,0,c
  7141   002E7C  EF42  F017         	goto	u3791
  7142   002E80  EF44  F017         	goto	u3790
  7143   002E84                     u3791:
  7144   002E84  EF5B  F018         	goto	l215
  7145   002E88                     u3790:
  7146   002E88                     
  7147                           ; BSR set to: 0
  7148   002E88  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  7149   002E8A  6E30               	movwf	??_rgb_2_hsv^0,c
  7150   002E8C  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  7151   002E8E  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  7152   002E90  6A32               	clrf	(??_rgb_2_hsv+2)^0,c
  7153   002E92  6A33               	clrf	(??_rgb_2_hsv+3)^0,c
  7154   002E94  C0E6  F00C         	movff	rgb_2_hsv@diff,___lmul@multiplier
  7155   002E98  C0E7  F00D         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  7156   002E9C  C0E8  F00E         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  7157   002EA0  C0E9  F00F         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  7158   002EA4  0E06               	movlw	6
  7159   002EA6  6E10               	movwf	___lmul@multiplicand^0,c
  7160   002EA8  0E00               	movlw	0
  7161   002EAA  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7162   002EAC  0E00               	movlw	0
  7163   002EAE  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7164   002EB0  0E00               	movlw	0
  7165   002EB2  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7166   002EB4  ECC8  F022         	call	___lmul	;wreg free
  7167   002EB8  0100               	movlb	0	; () banked
  7168   002EBA  51EA               	movf	rgb_2_hsv@g& (0+255),w,b
  7169   002EBC  240C               	addwf	?___lmul^0,w,c
  7170   002EBE  6E34               	movwf	(??_rgb_2_hsv+4)^0,c
  7171   002EC0  51EB               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  7172   002EC2  200D               	addwfc	(?___lmul+1)^0,w,c
  7173   002EC4  6E35               	movwf	(??_rgb_2_hsv+5)^0,c
  7174   002EC6  0E00               	movlw	0
  7175   002EC8  200E               	addwfc	(?___lmul+2)^0,w,c
  7176   002ECA  6E36               	movwf	(??_rgb_2_hsv+6)^0,c
  7177   002ECC  0E00               	movlw	0
  7178   002ECE  200F               	addwfc	(?___lmul+3)^0,w,c
  7179   002ED0  6E37               	movwf	(??_rgb_2_hsv+7)^0,c
  7180   002ED2  5030               	movf	??_rgb_2_hsv^0,w,c
  7181   002ED4  5C34               	subwf	(??_rgb_2_hsv+4)^0,w,c
  7182   002ED6  6FD8               	movwf	_rgb_2_hsv$3532& (0+255),b
  7183   002ED8  5031               	movf	(??_rgb_2_hsv+1)^0,w,c
  7184   002EDA  5835               	subwfb	(??_rgb_2_hsv+5)^0,w,c
  7185   002EDC  6FD9               	movwf	(_rgb_2_hsv$3532+1)& (0+255),b
  7186   002EDE  5032               	movf	(??_rgb_2_hsv+2)^0,w,c
  7187   002EE0  5836               	subwfb	(??_rgb_2_hsv+6)^0,w,c
  7188   002EE2  6FDA               	movwf	(_rgb_2_hsv$3532+2)& (0+255),b
  7189   002EE4  5033               	movf	(??_rgb_2_hsv+3)^0,w,c
  7190   002EE6  5837               	subwfb	(??_rgb_2_hsv+7)^0,w,c
  7191   002EE8  6FDB               	movwf	(_rgb_2_hsv$3532+3)& (0+255),b
  7192   002EEA                     
  7193                           ; BSR set to: 0
  7194   002EEA  C0D8  F00C         	movff	_rgb_2_hsv$3532,___lmul@multiplier
  7195   002EEE  C0D9  F00D         	movff	_rgb_2_hsv$3532+1,___lmul@multiplier+1
  7196   002EF2  C0DA  F00E         	movff	_rgb_2_hsv$3532+2,___lmul@multiplier+2
  7197   002EF6  C0DB  F00F         	movff	_rgb_2_hsv$3532+3,___lmul@multiplier+3
  7198   002EFA  0E70               	movlw	112
  7199   002EFC  6E10               	movwf	___lmul@multiplicand^0,c
  7200   002EFE  0E17               	movlw	23
  7201   002F00  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7202   002F02  0E00               	movlw	0
  7203   002F04  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7204   002F06  0E00               	movlw	0
  7205   002F08  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7206   002F0A  ECC8  F022         	call	___lmul	;wreg free
  7207   002F0E  C00C  F018         	movff	?___lmul,___lldiv@dividend
  7208   002F12  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  7209   002F16  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  7210   002F1A  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  7211   002F1E  C0E6  F01C         	movff	rgb_2_hsv@diff,___lldiv@divisor
  7212   002F22  C0E7  F01D         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  7213   002F26  C0E8  F01E         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  7214   002F2A  C0E9  F01F         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  7215   002F2E  EC7A  F021         	call	___lldiv	;wreg free
  7216   002F32  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  7217   002F36  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  7218   002F3A  C018  FFDE         	movff	?___lldiv,postinc2
  7219   002F3E  C019  FFDD         	movff	?___lldiv+1,postdec2
  7220   002F42  EF5B  F018         	goto	l215
  7221   002F46                     l4478:
  7222                           
  7223                           ; BSR set to: 0
  7224   002F46  51EA               	movf	rgb_2_hsv@g& (0+255),w,b
  7225   002F48  19E4               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  7226   002F4A  E107               	bnz	u3801
  7227   002F4C  51EB               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  7228   002F4E  19E5               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  7229   002F50  A4D8               	btfss	status,2,c
  7230   002F52  EFAD  F017         	goto	u3801
  7231   002F56  EFAF  F017         	goto	u3800
  7232   002F5A                     u3801:
  7233   002F5A  EFFC  F017         	goto	l4482
  7234   002F5E                     u3800:
  7235   002F5E                     
  7236                           ; BSR set to: 0
  7237   002F5E  51E2               	movf	rgb_2_hsv@r& (0+255),w,b
  7238   002F60  6E30               	movwf	??_rgb_2_hsv^0,c
  7239   002F62  51E3               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  7240   002F64  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  7241   002F66  6A32               	clrf	(??_rgb_2_hsv+2)^0,c
  7242   002F68  6A33               	clrf	(??_rgb_2_hsv+3)^0,c
  7243   002F6A  90D8               	bcf	status,0,c
  7244   002F6C  35E6               	rlcf	rgb_2_hsv@diff& (0+255),w,b
  7245   002F6E  6E34               	movwf	(??_rgb_2_hsv+4)^0,c
  7246   002F70  35E7               	rlcf	(rgb_2_hsv@diff+1)& (0+255),w,b
  7247   002F72  6E35               	movwf	(??_rgb_2_hsv+5)^0,c
  7248   002F74  35E8               	rlcf	(rgb_2_hsv@diff+2)& (0+255),w,b
  7249   002F76  6E36               	movwf	(??_rgb_2_hsv+6)^0,c
  7250   002F78  35E9               	rlcf	(rgb_2_hsv@diff+3)& (0+255),w,b
  7251   002F7A  6E37               	movwf	(??_rgb_2_hsv+7)^0,c
  7252   002F7C  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  7253   002F7E  2434               	addwf	(??_rgb_2_hsv+4)^0,w,c
  7254   002F80  6E38               	movwf	(??_rgb_2_hsv+8)^0,c
  7255   002F82  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  7256   002F84  2035               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  7257   002F86  6E39               	movwf	(??_rgb_2_hsv+9)^0,c
  7258   002F88  0E00               	movlw	0
  7259   002F8A  2036               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  7260   002F8C  6E3A               	movwf	(??_rgb_2_hsv+10)^0,c
  7261   002F8E  0E00               	movlw	0
  7262   002F90  2037               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  7263   002F92  6E3B               	movwf	(??_rgb_2_hsv+11)^0,c
  7264   002F94  5030               	movf	??_rgb_2_hsv^0,w,c
  7265   002F96  5C38               	subwf	(??_rgb_2_hsv+8)^0,w,c
  7266   002F98  6E0C               	movwf	___lmul@multiplier^0,c
  7267   002F9A  5031               	movf	(??_rgb_2_hsv+1)^0,w,c
  7268   002F9C  5839               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  7269   002F9E  6E0D               	movwf	(___lmul@multiplier+1)^0,c
  7270   002FA0  5032               	movf	(??_rgb_2_hsv+2)^0,w,c
  7271   002FA2  583A               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  7272   002FA4  6E0E               	movwf	(___lmul@multiplier+2)^0,c
  7273   002FA6  5033               	movf	(??_rgb_2_hsv+3)^0,w,c
  7274   002FA8  583B               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  7275   002FAA  6E0F               	movwf	(___lmul@multiplier+3)^0,c
  7276   002FAC  0E70               	movlw	112
  7277   002FAE  6E10               	movwf	___lmul@multiplicand^0,c
  7278   002FB0  0E17               	movlw	23
  7279   002FB2  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7280   002FB4  0E00               	movlw	0
  7281   002FB6  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7282   002FB8  0E00               	movlw	0
  7283   002FBA  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7284   002FBC  ECC8  F022         	call	___lmul	;wreg free
  7285   002FC0  C00C  F018         	movff	?___lmul,___lldiv@dividend
  7286   002FC4  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  7287   002FC8  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  7288   002FCC  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  7289   002FD0  C0E6  F01C         	movff	rgb_2_hsv@diff,___lldiv@divisor
  7290   002FD4  C0E7  F01D         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  7291   002FD8  C0E8  F01E         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  7292   002FDC  C0E9  F01F         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  7293   002FE0  EC7A  F021         	call	___lldiv	;wreg free
  7294   002FE4  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  7295   002FE8  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  7296   002FEC  C018  FFDE         	movff	?___lldiv,postinc2
  7297   002FF0  C019  FFDD         	movff	?___lldiv+1,postdec2
  7298   002FF4  EF5B  F018         	goto	l215
  7299   002FF8                     l4482:
  7300                           
  7301                           ; BSR set to: 0
  7302   002FF8  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  7303   002FFA  19E4               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  7304   002FFC  E107               	bnz	u3811
  7305   002FFE  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  7306   003000  19E5               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  7307   003002  A4D8               	btfss	status,2,c
  7308   003004  EF06  F018         	goto	u3811
  7309   003008  EF08  F018         	goto	u3810
  7310   00300C                     u3811:
  7311   00300C  EF5B  F018         	goto	l215
  7312   003010                     u3810:
  7313   003010                     
  7314                           ; BSR set to: 0
  7315   003010  51EA               	movf	rgb_2_hsv@g& (0+255),w,b
  7316   003012  6E30               	movwf	??_rgb_2_hsv^0,c
  7317   003014  51EB               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  7318   003016  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  7319   003018  6A32               	clrf	(??_rgb_2_hsv+2)^0,c
  7320   00301A  6A33               	clrf	(??_rgb_2_hsv+3)^0,c
  7321   00301C  C0E6  F034         	movff	rgb_2_hsv@diff,??_rgb_2_hsv+4
  7322   003020  C0E7  F035         	movff	rgb_2_hsv@diff+1,??_rgb_2_hsv+5
  7323   003024  C0E8  F036         	movff	rgb_2_hsv@diff+2,??_rgb_2_hsv+6
  7324   003028  C0E9  F037         	movff	rgb_2_hsv@diff+3,??_rgb_2_hsv+7
  7325   00302C  0E02               	movlw	2
  7326   00302E                     u3825:
  7327   00302E  90D8               	bcf	status,0,c
  7328   003030  3634               	rlcf	(??_rgb_2_hsv+4)^0,f,c
  7329   003032  3635               	rlcf	(??_rgb_2_hsv+5)^0,f,c
  7330   003034  3636               	rlcf	(??_rgb_2_hsv+6)^0,f,c
  7331   003036  3637               	rlcf	(??_rgb_2_hsv+7)^0,f,c
  7332   003038  2EE8               	decfsz	wreg,f,c
  7333   00303A  EF17  F018         	goto	u3825
  7334   00303E  51E2               	movf	rgb_2_hsv@r& (0+255),w,b
  7335   003040  2434               	addwf	(??_rgb_2_hsv+4)^0,w,c
  7336   003042  6E38               	movwf	(??_rgb_2_hsv+8)^0,c
  7337   003044  51E3               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  7338   003046  2035               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  7339   003048  6E39               	movwf	(??_rgb_2_hsv+9)^0,c
  7340   00304A  0E00               	movlw	0
  7341   00304C  2036               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  7342   00304E  6E3A               	movwf	(??_rgb_2_hsv+10)^0,c
  7343   003050  0E00               	movlw	0
  7344   003052  2037               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  7345   003054  6E3B               	movwf	(??_rgb_2_hsv+11)^0,c
  7346   003056  5030               	movf	??_rgb_2_hsv^0,w,c
  7347   003058  5C38               	subwf	(??_rgb_2_hsv+8)^0,w,c
  7348   00305A  6E0C               	movwf	___lmul@multiplier^0,c
  7349   00305C  5031               	movf	(??_rgb_2_hsv+1)^0,w,c
  7350   00305E  5839               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  7351   003060  6E0D               	movwf	(___lmul@multiplier+1)^0,c
  7352   003062  5032               	movf	(??_rgb_2_hsv+2)^0,w,c
  7353   003064  583A               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  7354   003066  6E0E               	movwf	(___lmul@multiplier+2)^0,c
  7355   003068  5033               	movf	(??_rgb_2_hsv+3)^0,w,c
  7356   00306A  583B               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  7357   00306C  6E0F               	movwf	(___lmul@multiplier+3)^0,c
  7358   00306E  0E70               	movlw	112
  7359   003070  6E10               	movwf	___lmul@multiplicand^0,c
  7360   003072  0E17               	movlw	23
  7361   003074  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7362   003076  0E00               	movlw	0
  7363   003078  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7364   00307A  0E00               	movlw	0
  7365   00307C  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7366   00307E  ECC8  F022         	call	___lmul	;wreg free
  7367   003082  C00C  F018         	movff	?___lmul,___lldiv@dividend
  7368   003086  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  7369   00308A  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  7370   00308E  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  7371   003092  C0E6  F01C         	movff	rgb_2_hsv@diff,___lldiv@divisor
  7372   003096  C0E7  F01D         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  7373   00309A  C0E8  F01E         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  7374   00309E  C0E9  F01F         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  7375   0030A2  EC7A  F021         	call	___lldiv	;wreg free
  7376   0030A6  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  7377   0030AA  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  7378   0030AE  C018  FFDE         	movff	?___lldiv,postinc2
  7379   0030B2  C019  FFDD         	movff	?___lldiv+1,postdec2
  7380   0030B6                     l215:
  7381                           
  7382                           ;color.c: 298:     HSV->S = (unsigned int)((diff * 10000)/cmax);
  7383   0030B6  C0E6  F00C         	movff	rgb_2_hsv@diff,___lmul@multiplier
  7384   0030BA  C0E7  F00D         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  7385   0030BE  C0E8  F00E         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  7386   0030C2  C0E9  F00F         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  7387   0030C6  0E10               	movlw	16
  7388   0030C8  6E10               	movwf	___lmul@multiplicand^0,c
  7389   0030CA  0E27               	movlw	39
  7390   0030CC  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7391   0030CE  0E00               	movlw	0
  7392   0030D0  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7393   0030D2  0E00               	movlw	0
  7394   0030D4  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7395   0030D6  ECC8  F022         	call	___lmul	;wreg free
  7396   0030DA  C00C  F018         	movff	?___lmul,___lldiv@dividend
  7397   0030DE  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  7398   0030E2  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  7399   0030E6  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  7400   0030EA  C0E4  F01C         	movff	rgb_2_hsv@cmax,___lldiv@divisor
  7401   0030EE  C0E5  F01D         	movff	rgb_2_hsv@cmax+1,___lldiv@divisor+1
  7402   0030F2  6A1E               	clrf	(___lldiv@divisor+2)^0,c
  7403   0030F4  6A1F               	clrf	(___lldiv@divisor+3)^0,c
  7404   0030F6  EC7A  F021         	call	___lldiv	;wreg free
  7405   0030FA  EE20 F002          	lfsr	2,2
  7406   0030FE  502E               	movf	rgb_2_hsv@HSV^0,w,c
  7407   003100  26D9               	addwf	fsr2l,f,c
  7408   003102  502F               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  7409   003104  22DA               	addwfc	fsr2h,f,c
  7410   003106  C018  FFDE         	movff	?___lldiv,postinc2
  7411   00310A  C019  FFDD         	movff	?___lldiv+1,postdec2
  7412   00310E                     
  7413                           ;color.c: 300:     if (HSV->S == 0){HSV->H = 0;}
  7414   00310E  EE20 F002          	lfsr	2,2
  7415   003112  502E               	movf	rgb_2_hsv@HSV^0,w,c
  7416   003114  26D9               	addwf	fsr2l,f,c
  7417   003116  502F               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  7418   003118  22DA               	addwfc	fsr2h,f,c
  7419   00311A  50DE               	movf	postinc2,w,c
  7420   00311C  10DE               	iorwf	postinc2,w,c
  7421   00311E  A4D8               	btfss	status,2,c
  7422   003120  EF94  F018         	goto	u3831
  7423   003124  EF96  F018         	goto	u3830
  7424   003128                     u3831:
  7425   003128  EF9C  F018         	goto	l4490
  7426   00312C                     u3830:
  7427   00312C  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  7428   003130  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  7429   003134  6ADE               	clrf	postinc2,c
  7430   003136  6ADD               	clrf	postdec2,c
  7431   003138                     l4490:
  7432                           
  7433                           ;color.c: 303:     HSV->V = cmax;
  7434   003138  EE20 F004          	lfsr	2,4
  7435   00313C  502E               	movf	rgb_2_hsv@HSV^0,w,c
  7436   00313E  26D9               	addwf	fsr2l,f,c
  7437   003140  502F               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  7438   003142  22DA               	addwfc	fsr2h,f,c
  7439   003144  C0E4  FFDE         	movff	rgb_2_hsv@cmax,postinc2
  7440   003148  C0E5  FFDD         	movff	rgb_2_hsv@cmax+1,postdec2
  7441   00314C  0012               	return		;funcret
  7442   00314E                     __end_of_rgb_2_hsv:
  7443                           	callstack 0
  7444                           
  7445 ;; *************** function _min *****************
  7446 ;; Defined at:
  7447 ;;		line 271 in file "color.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  a               2   11[COMRAM] unsigned int 
  7450 ;;  b               2   13[COMRAM] unsigned int 
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;		None
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  2   11[COMRAM] unsigned int 
  7455 ;; Registers used:
  7456 ;;		wreg, status,2, status,0
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7465 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7466 ;;Total ram usage:        4 bytes
  7467 ;; Hardware stack levels used: 1
  7468 ;; Hardware stack levels required when called: 5
  7469 ;; This function calls:
  7470 ;;		Nothing
  7471 ;; This function is called by:
  7472 ;;		_rgb_2_hsv
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           	psect	text19
  7477   00475E                     __ptext19:
  7478                           	callstack 0
  7479   00475E                     _min:
  7480                           	callstack 24
  7481   00475E                     
  7482                           ;color.c: 272:     if (a < b){return a;}
  7483   00475E  500E               	movf	min@b^0,w,c
  7484   004760  5C0C               	subwf	min@a^0,w,c
  7485   004762  500F               	movf	(min@b+1)^0,w,c
  7486   004764  580D               	subwfb	(min@a+1)^0,w,c
  7487   004766  B0D8               	btfsc	status,0,c
  7488   004768  EFB8  F023         	goto	u3501
  7489   00476C  EFBA  F023         	goto	u3500
  7490   004770                     u3501:
  7491   004770  EFC0  F023         	goto	l206
  7492   004774                     u3500:
  7493   004774  C00C  F00C         	movff	min@a,?_min
  7494   004778  C00D  F00D         	movff	min@a+1,?_min+1
  7495   00477C  EFC4  F023         	goto	l207
  7496   004780                     l206:
  7497   004780  C00E  F00C         	movff	min@b,?_min
  7498   004784  C00F  F00D         	movff	min@b+1,?_min+1
  7499   004788                     l207:
  7500   004788  0012               	return		;funcret
  7501   00478A                     __end_of_min:
  7502                           	callstack 0
  7503                           
  7504 ;; *************** function _max *****************
  7505 ;; Defined at:
  7506 ;;		line 266 in file "color.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  a               2   11[COMRAM] unsigned int 
  7509 ;;  b               2   13[COMRAM] unsigned int 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;		None
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  2   11[COMRAM] unsigned int 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7524 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7525 ;;Total ram usage:        4 bytes
  7526 ;; Hardware stack levels used: 1
  7527 ;; Hardware stack levels required when called: 5
  7528 ;; This function calls:
  7529 ;;		Nothing
  7530 ;; This function is called by:
  7531 ;;		_rgb_2_hsv
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text20
  7536   00478A                     __ptext20:
  7537                           	callstack 0
  7538   00478A                     _max:
  7539                           	callstack 24
  7540   00478A                     
  7541                           ;color.c: 267:     if (a > b){return a;}
  7542   00478A  500C               	movf	max@a^0,w,c
  7543   00478C  5C0E               	subwf	max@b^0,w,c
  7544   00478E  500D               	movf	(max@a+1)^0,w,c
  7545   004790  580F               	subwfb	(max@b+1)^0,w,c
  7546   004792  B0D8               	btfsc	status,0,c
  7547   004794  EFCE  F023         	goto	u3491
  7548   004798  EFD0  F023         	goto	u3490
  7549   00479C                     u3491:
  7550   00479C  EFD6  F023         	goto	l201
  7551   0047A0                     u3490:
  7552   0047A0  C00C  F00C         	movff	max@a,?_max
  7553   0047A4  C00D  F00D         	movff	max@a+1,?_max+1
  7554   0047A8  EFDA  F023         	goto	l202
  7555   0047AC                     l201:
  7556   0047AC  C00E  F00C         	movff	max@b,?_max
  7557   0047B0  C00F  F00D         	movff	max@b+1,?_max+1
  7558   0047B4                     l202:
  7559   0047B4  0012               	return		;funcret
  7560   0047B6                     __end_of_max:
  7561                           	callstack 0
  7562                           
  7563 ;; *************** function ___lmul *****************
  7564 ;; Defined at:
  7565 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;  multiplier      4   11[COMRAM] unsigned long 
  7568 ;;  multiplicand    4   15[COMRAM] unsigned long 
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;  product         4   19[COMRAM] unsigned long 
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  4   11[COMRAM] unsigned long 
  7573 ;; Registers used:
  7574 ;;		wreg, status,2, status,0
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7580 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7581 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7583 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7584 ;;Total ram usage:       12 bytes
  7585 ;; Hardware stack levels used: 1
  7586 ;; Hardware stack levels required when called: 5
  7587 ;; This function calls:
  7588 ;;		Nothing
  7589 ;; This function is called by:
  7590 ;;		_rgb_2_hsv
  7591 ;;		_color_normalise
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text21
  7596   004590                     __ptext21:
  7597                           	callstack 0
  7598   004590                     ___lmul:
  7599                           	callstack 24
  7600   004590  0E00               	movlw	0
  7601   004592  6E14               	movwf	___lmul@product^0,c
  7602   004594  0E00               	movlw	0
  7603   004596  6E15               	movwf	(___lmul@product+1)^0,c
  7604   004598  0E00               	movlw	0
  7605   00459A  6E16               	movwf	(___lmul@product+2)^0,c
  7606   00459C  0E00               	movlw	0
  7607   00459E  6E17               	movwf	(___lmul@product+3)^0,c
  7608   0045A0                     l4370:
  7609   0045A0  A00C               	btfss	___lmul@multiplier^0,0,c
  7610   0045A2  EFD5  F022         	goto	u3661
  7611   0045A6  EFD7  F022         	goto	u3660
  7612   0045AA                     u3661:
  7613   0045AA  EFDF  F022         	goto	l4374
  7614   0045AE                     u3660:
  7615   0045AE  5010               	movf	___lmul@multiplicand^0,w,c
  7616   0045B0  2614               	addwf	___lmul@product^0,f,c
  7617   0045B2  5011               	movf	(___lmul@multiplicand+1)^0,w,c
  7618   0045B4  2215               	addwfc	(___lmul@product+1)^0,f,c
  7619   0045B6  5012               	movf	(___lmul@multiplicand+2)^0,w,c
  7620   0045B8  2216               	addwfc	(___lmul@product+2)^0,f,c
  7621   0045BA  5013               	movf	(___lmul@multiplicand+3)^0,w,c
  7622   0045BC  2217               	addwfc	(___lmul@product+3)^0,f,c
  7623   0045BE                     l4374:
  7624   0045BE  90D8               	bcf	status,0,c
  7625   0045C0  3610               	rlcf	___lmul@multiplicand^0,f,c
  7626   0045C2  3611               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7627   0045C4  3612               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7628   0045C6  3613               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7629   0045C8  90D8               	bcf	status,0,c
  7630   0045CA  320F               	rrcf	(___lmul@multiplier+3)^0,f,c
  7631   0045CC  320E               	rrcf	(___lmul@multiplier+2)^0,f,c
  7632   0045CE  320D               	rrcf	(___lmul@multiplier+1)^0,f,c
  7633   0045D0  320C               	rrcf	___lmul@multiplier^0,f,c
  7634   0045D2  500C               	movf	___lmul@multiplier^0,w,c
  7635   0045D4  100D               	iorwf	(___lmul@multiplier+1)^0,w,c
  7636   0045D6  100E               	iorwf	(___lmul@multiplier+2)^0,w,c
  7637   0045D8  100F               	iorwf	(___lmul@multiplier+3)^0,w,c
  7638   0045DA  A4D8               	btfss	status,2,c
  7639   0045DC  EFF2  F022         	goto	u3671
  7640   0045E0  EFF4  F022         	goto	u3670
  7641   0045E4                     u3671:
  7642   0045E4  EFD0  F022         	goto	l4370
  7643   0045E8                     u3670:
  7644   0045E8  C014  F00C         	movff	___lmul@product,?___lmul
  7645   0045EC  C015  F00D         	movff	___lmul@product+1,?___lmul+1
  7646   0045F0  C016  F00E         	movff	___lmul@product+2,?___lmul+2
  7647   0045F4  C017  F00F         	movff	___lmul@product+3,?___lmul+3
  7648   0045F8  0012               	return		;funcret
  7649   0045FA                     __end_of___lmul:
  7650                           	callstack 0
  7651                           
  7652 ;; *************** function ___lldiv *****************
  7653 ;; Defined at:
  7654 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;  dividend        4   23[COMRAM] unsigned long 
  7657 ;;  divisor         4   27[COMRAM] unsigned long 
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;  quotient        4   31[COMRAM] unsigned long 
  7660 ;;  counter         1   35[COMRAM] unsigned char 
  7661 ;; Return value:  Size  Location     Type
  7662 ;;                  4   23[COMRAM] unsigned long 
  7663 ;; Registers used:
  7664 ;;		wreg, status,2, status,0
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7670 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7671 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7673 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7674 ;;Total ram usage:       13 bytes
  7675 ;; Hardware stack levels used: 1
  7676 ;; Hardware stack levels required when called: 5
  7677 ;; This function calls:
  7678 ;;		Nothing
  7679 ;; This function is called by:
  7680 ;;		_rgb_2_hsv
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           	psect	text22
  7685   0042F4                     __ptext22:
  7686                           	callstack 0
  7687   0042F4                     ___lldiv:
  7688                           	callstack 24
  7689   0042F4  0E00               	movlw	0
  7690   0042F6  6E20               	movwf	___lldiv@quotient^0,c
  7691   0042F8  0E00               	movlw	0
  7692   0042FA  6E21               	movwf	(___lldiv@quotient+1)^0,c
  7693   0042FC  0E00               	movlw	0
  7694   0042FE  6E22               	movwf	(___lldiv@quotient+2)^0,c
  7695   004300  0E00               	movlw	0
  7696   004302  6E23               	movwf	(___lldiv@quotient+3)^0,c
  7697   004304  501C               	movf	___lldiv@divisor^0,w,c
  7698   004306  101D               	iorwf	(___lldiv@divisor+1)^0,w,c
  7699   004308  101E               	iorwf	(___lldiv@divisor+2)^0,w,c
  7700   00430A  101F               	iorwf	(___lldiv@divisor+3)^0,w,c
  7701   00430C  B4D8               	btfsc	status,2,c
  7702   00430E  EF8B  F021         	goto	u3681
  7703   004312  EF8D  F021         	goto	u3680
  7704   004316                     u3681:
  7705   004316  EFC3  F021         	goto	l740
  7706   00431A                     u3680:
  7707   00431A  0E01               	movlw	1
  7708   00431C  6E24               	movwf	___lldiv@counter^0,c
  7709   00431E  EF97  F021         	goto	l4386
  7710   004322                     l4384:
  7711   004322  90D8               	bcf	status,0,c
  7712   004324  361C               	rlcf	___lldiv@divisor^0,f,c
  7713   004326  361D               	rlcf	(___lldiv@divisor+1)^0,f,c
  7714   004328  361E               	rlcf	(___lldiv@divisor+2)^0,f,c
  7715   00432A  361F               	rlcf	(___lldiv@divisor+3)^0,f,c
  7716   00432C  2A24               	incf	___lldiv@counter^0,f,c
  7717   00432E                     l4386:
  7718   00432E  AE1F               	btfss	(___lldiv@divisor+3)^0,7,c
  7719   004330  EF9C  F021         	goto	u3691
  7720   004334  EF9E  F021         	goto	u3690
  7721   004338                     u3691:
  7722   004338  EF91  F021         	goto	l4384
  7723   00433C                     u3690:
  7724   00433C                     l4388:
  7725   00433C  90D8               	bcf	status,0,c
  7726   00433E  3620               	rlcf	___lldiv@quotient^0,f,c
  7727   004340  3621               	rlcf	(___lldiv@quotient+1)^0,f,c
  7728   004342  3622               	rlcf	(___lldiv@quotient+2)^0,f,c
  7729   004344  3623               	rlcf	(___lldiv@quotient+3)^0,f,c
  7730   004346  501C               	movf	___lldiv@divisor^0,w,c
  7731   004348  5C18               	subwf	___lldiv@dividend^0,w,c
  7732   00434A  501D               	movf	(___lldiv@divisor+1)^0,w,c
  7733   00434C  5819               	subwfb	(___lldiv@dividend+1)^0,w,c
  7734   00434E  501E               	movf	(___lldiv@divisor+2)^0,w,c
  7735   004350  581A               	subwfb	(___lldiv@dividend+2)^0,w,c
  7736   004352  501F               	movf	(___lldiv@divisor+3)^0,w,c
  7737   004354  581B               	subwfb	(___lldiv@dividend+3)^0,w,c
  7738   004356  A0D8               	btfss	status,0,c
  7739   004358  EFB0  F021         	goto	u3701
  7740   00435C  EFB2  F021         	goto	u3700
  7741   004360                     u3701:
  7742   004360  EFBB  F021         	goto	l4396
  7743   004364                     u3700:
  7744   004364  501C               	movf	___lldiv@divisor^0,w,c
  7745   004366  5E18               	subwf	___lldiv@dividend^0,f,c
  7746   004368  501D               	movf	(___lldiv@divisor+1)^0,w,c
  7747   00436A  5A19               	subwfb	(___lldiv@dividend+1)^0,f,c
  7748   00436C  501E               	movf	(___lldiv@divisor+2)^0,w,c
  7749   00436E  5A1A               	subwfb	(___lldiv@dividend+2)^0,f,c
  7750   004370  501F               	movf	(___lldiv@divisor+3)^0,w,c
  7751   004372  5A1B               	subwfb	(___lldiv@dividend+3)^0,f,c
  7752   004374  8020               	bsf	___lldiv@quotient^0,0,c
  7753   004376                     l4396:
  7754   004376  90D8               	bcf	status,0,c
  7755   004378  321F               	rrcf	(___lldiv@divisor+3)^0,f,c
  7756   00437A  321E               	rrcf	(___lldiv@divisor+2)^0,f,c
  7757   00437C  321D               	rrcf	(___lldiv@divisor+1)^0,f,c
  7758   00437E  321C               	rrcf	___lldiv@divisor^0,f,c
  7759   004380  2E24               	decfsz	___lldiv@counter^0,f,c
  7760   004382  EF9E  F021         	goto	l4388
  7761   004386                     l740:
  7762   004386  C020  F018         	movff	___lldiv@quotient,?___lldiv
  7763   00438A  C021  F019         	movff	___lldiv@quotient+1,?___lldiv+1
  7764   00438E  C022  F01A         	movff	___lldiv@quotient+2,?___lldiv+2
  7765   004392  C023  F01B         	movff	___lldiv@quotient+3,?___lldiv+3
  7766   004396  0012               	return		;funcret
  7767   004398                     __end_of___lldiv:
  7768                           	callstack 0
  7769                           
  7770 ;; *************** function ___aldiv *****************
  7771 ;; Defined at:
  7772 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;  dividend        4   23[COMRAM] long 
  7775 ;;  divisor         4   27[COMRAM] long 
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;  quotient        4   33[COMRAM] long 
  7778 ;;  sign            1   32[COMRAM] unsigned char 
  7779 ;;  counter         1   31[COMRAM] unsigned char 
  7780 ;; Return value:  Size  Location     Type
  7781 ;;                  4   23[COMRAM] long 
  7782 ;; Registers used:
  7783 ;;		wreg, status,2, status,0
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7789 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7790 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7792 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7793 ;;Total ram usage:       14 bytes
  7794 ;; Hardware stack levels used: 1
  7795 ;; Hardware stack levels required when called: 5
  7796 ;; This function calls:
  7797 ;;		Nothing
  7798 ;; This function is called by:
  7799 ;;		_rgb_2_hsv
  7800 ;;		_color_normalise
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text23
  7805   003F38                     __ptext23:
  7806                           	callstack 0
  7807   003F38                     ___aldiv:
  7808                           	callstack 24
  7809   003F38  0E00               	movlw	0
  7810   003F3A  6E21               	movwf	___aldiv@sign^0,c
  7811   003F3C  BE1F               	btfsc	(___aldiv@divisor+3)^0,7,c
  7812   003F3E  EFA5  F01F         	goto	u3710
  7813   003F42  EFA3  F01F         	goto	u3711
  7814   003F46                     u3711:
  7815   003F46  EFAF  F01F         	goto	l4408
  7816   003F4A                     u3710:
  7817   003F4A  1E1F               	comf	(___aldiv@divisor+3)^0,f,c
  7818   003F4C  1E1E               	comf	(___aldiv@divisor+2)^0,f,c
  7819   003F4E  1E1D               	comf	(___aldiv@divisor+1)^0,f,c
  7820   003F50  6C1C               	negf	___aldiv@divisor^0,c
  7821   003F52  0E00               	movlw	0
  7822   003F54  221D               	addwfc	(___aldiv@divisor+1)^0,f,c
  7823   003F56  221E               	addwfc	(___aldiv@divisor+2)^0,f,c
  7824   003F58  221F               	addwfc	(___aldiv@divisor+3)^0,f,c
  7825   003F5A  0E01               	movlw	1
  7826   003F5C  6E21               	movwf	___aldiv@sign^0,c
  7827   003F5E                     l4408:
  7828   003F5E  BE1B               	btfsc	(___aldiv@dividend+3)^0,7,c
  7829   003F60  EFB6  F01F         	goto	u3720
  7830   003F64  EFB4  F01F         	goto	u3721
  7831   003F68                     u3721:
  7832   003F68  EFC0  F01F         	goto	l4414
  7833   003F6C                     u3720:
  7834   003F6C  1E1B               	comf	(___aldiv@dividend+3)^0,f,c
  7835   003F6E  1E1A               	comf	(___aldiv@dividend+2)^0,f,c
  7836   003F70  1E19               	comf	(___aldiv@dividend+1)^0,f,c
  7837   003F72  6C18               	negf	___aldiv@dividend^0,c
  7838   003F74  0E00               	movlw	0
  7839   003F76  2219               	addwfc	(___aldiv@dividend+1)^0,f,c
  7840   003F78  221A               	addwfc	(___aldiv@dividend+2)^0,f,c
  7841   003F7A  221B               	addwfc	(___aldiv@dividend+3)^0,f,c
  7842   003F7C  0E01               	movlw	1
  7843   003F7E  1A21               	xorwf	___aldiv@sign^0,f,c
  7844   003F80                     l4414:
  7845   003F80  0E00               	movlw	0
  7846   003F82  6E22               	movwf	___aldiv@quotient^0,c
  7847   003F84  0E00               	movlw	0
  7848   003F86  6E23               	movwf	(___aldiv@quotient+1)^0,c
  7849   003F88  0E00               	movlw	0
  7850   003F8A  6E24               	movwf	(___aldiv@quotient+2)^0,c
  7851   003F8C  0E00               	movlw	0
  7852   003F8E  6E25               	movwf	(___aldiv@quotient+3)^0,c
  7853   003F90  501C               	movf	___aldiv@divisor^0,w,c
  7854   003F92  101D               	iorwf	(___aldiv@divisor+1)^0,w,c
  7855   003F94  101E               	iorwf	(___aldiv@divisor+2)^0,w,c
  7856   003F96  101F               	iorwf	(___aldiv@divisor+3)^0,w,c
  7857   003F98  B4D8               	btfsc	status,2,c
  7858   003F9A  EFD1  F01F         	goto	u3731
  7859   003F9E  EFD3  F01F         	goto	u3730
  7860   003FA2                     u3731:
  7861   003FA2  EF09  F020         	goto	l4436
  7862   003FA6                     u3730:
  7863   003FA6  0E01               	movlw	1
  7864   003FA8  6E20               	movwf	___aldiv@counter^0,c
  7865   003FAA  EFDD  F01F         	goto	l4422
  7866   003FAE                     l4420:
  7867   003FAE  90D8               	bcf	status,0,c
  7868   003FB0  361C               	rlcf	___aldiv@divisor^0,f,c
  7869   003FB2  361D               	rlcf	(___aldiv@divisor+1)^0,f,c
  7870   003FB4  361E               	rlcf	(___aldiv@divisor+2)^0,f,c
  7871   003FB6  361F               	rlcf	(___aldiv@divisor+3)^0,f,c
  7872   003FB8  2A20               	incf	___aldiv@counter^0,f,c
  7873   003FBA                     l4422:
  7874   003FBA  AE1F               	btfss	(___aldiv@divisor+3)^0,7,c
  7875   003FBC  EFE2  F01F         	goto	u3741
  7876   003FC0  EFE4  F01F         	goto	u3740
  7877   003FC4                     u3741:
  7878   003FC4  EFD7  F01F         	goto	l4420
  7879   003FC8                     u3740:
  7880   003FC8                     l4424:
  7881   003FC8  90D8               	bcf	status,0,c
  7882   003FCA  3622               	rlcf	___aldiv@quotient^0,f,c
  7883   003FCC  3623               	rlcf	(___aldiv@quotient+1)^0,f,c
  7884   003FCE  3624               	rlcf	(___aldiv@quotient+2)^0,f,c
  7885   003FD0  3625               	rlcf	(___aldiv@quotient+3)^0,f,c
  7886   003FD2  501C               	movf	___aldiv@divisor^0,w,c
  7887   003FD4  5C18               	subwf	___aldiv@dividend^0,w,c
  7888   003FD6  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7889   003FD8  5819               	subwfb	(___aldiv@dividend+1)^0,w,c
  7890   003FDA  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7891   003FDC  581A               	subwfb	(___aldiv@dividend+2)^0,w,c
  7892   003FDE  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7893   003FE0  581B               	subwfb	(___aldiv@dividend+3)^0,w,c
  7894   003FE2  A0D8               	btfss	status,0,c
  7895   003FE4  EFF6  F01F         	goto	u3751
  7896   003FE8  EFF8  F01F         	goto	u3750
  7897   003FEC                     u3751:
  7898   003FEC  EF01  F020         	goto	l4432
  7899   003FF0                     u3750:
  7900   003FF0  501C               	movf	___aldiv@divisor^0,w,c
  7901   003FF2  5E18               	subwf	___aldiv@dividend^0,f,c
  7902   003FF4  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7903   003FF6  5A19               	subwfb	(___aldiv@dividend+1)^0,f,c
  7904   003FF8  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7905   003FFA  5A1A               	subwfb	(___aldiv@dividend+2)^0,f,c
  7906   003FFC  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7907   003FFE  5A1B               	subwfb	(___aldiv@dividend+3)^0,f,c
  7908   004000  8022               	bsf	___aldiv@quotient^0,0,c
  7909   004002                     l4432:
  7910   004002  90D8               	bcf	status,0,c
  7911   004004  321F               	rrcf	(___aldiv@divisor+3)^0,f,c
  7912   004006  321E               	rrcf	(___aldiv@divisor+2)^0,f,c
  7913   004008  321D               	rrcf	(___aldiv@divisor+1)^0,f,c
  7914   00400A  321C               	rrcf	___aldiv@divisor^0,f,c
  7915   00400C  2E20               	decfsz	___aldiv@counter^0,f,c
  7916   00400E  EFE4  F01F         	goto	l4424
  7917   004012                     l4436:
  7918   004012  5021               	movf	___aldiv@sign^0,w,c
  7919   004014  B4D8               	btfsc	status,2,c
  7920   004016  EF0F  F020         	goto	u3761
  7921   00401A  EF11  F020         	goto	u3760
  7922   00401E                     u3761:
  7923   00401E  EF19  F020         	goto	l4440
  7924   004022                     u3760:
  7925   004022  1E25               	comf	(___aldiv@quotient+3)^0,f,c
  7926   004024  1E24               	comf	(___aldiv@quotient+2)^0,f,c
  7927   004026  1E23               	comf	(___aldiv@quotient+1)^0,f,c
  7928   004028  6C22               	negf	___aldiv@quotient^0,c
  7929   00402A  0E00               	movlw	0
  7930   00402C  2223               	addwfc	(___aldiv@quotient+1)^0,f,c
  7931   00402E  2224               	addwfc	(___aldiv@quotient+2)^0,f,c
  7932   004030  2225               	addwfc	(___aldiv@quotient+3)^0,f,c
  7933   004032                     l4440:
  7934   004032  C022  F018         	movff	___aldiv@quotient,?___aldiv
  7935   004036  C023  F019         	movff	___aldiv@quotient+1,?___aldiv+1
  7936   00403A  C024  F01A         	movff	___aldiv@quotient+2,?___aldiv+2
  7937   00403E  C025  F01B         	movff	___aldiv@quotient+3,?___aldiv+3
  7938   004042  0012               	return		;funcret
  7939   004044                     __end_of___aldiv:
  7940                           	callstack 0
  7941                           
  7942 ;; *************** function _color_read *****************
  7943 ;; Defined at:
  7944 ;;		line 74 in file "color.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;  RGBC            2   15[COMRAM] PTR struct RGBC_val
  7947 ;;		 -> main@RGBC(8), 
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;		None
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  1    wreg      void 
  7952 ;; Registers used:
  7953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7961 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7962 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7963 ;;Total ram usage:        9 bytes
  7964 ;; Hardware stack levels used: 1
  7965 ;; Hardware stack levels required when called: 7
  7966 ;; This function calls:
  7967 ;;		_I2C_2_Master_Read
  7968 ;;		_I2C_2_Master_RepStart
  7969 ;;		_I2C_2_Master_Start
  7970 ;;		_I2C_2_Master_Stop
  7971 ;;		_I2C_2_Master_Write
  7972 ;; This function is called by:
  7973 ;;		_main
  7974 ;;		_color_calibration
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text24
  7979   003650                     __ptext24:
  7980                           	callstack 0
  7981   003650                     _color_read:
  7982                           	callstack 23
  7983   003650                     
  7984                           ;color.c: 74: void color_read(RGBC_val *RGBC);color.c: 75: {;color.c: 76:  I2C_2_Master_
      +                          Start();
  7985   003650  ECF1  F024         	call	_I2C_2_Master_Start	;wreg free
  7986                           
  7987                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  7988   003654  0E52               	movlw	82
  7989   003656  ECDB  F024         	call	_I2C_2_Master_Write
  7990                           
  7991                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x16);
  7992   00365A  0EB6               	movlw	182
  7993   00365C  ECDB  F024         	call	_I2C_2_Master_Write
  7994                           
  7995                           ;color.c: 79:  I2C_2_Master_RepStart();
  7996   003660  ECF6  F024         	call	_I2C_2_Master_RepStart	;wreg free
  7997                           
  7998                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  7999   003664  0E53               	movlw	83
  8000   003666  ECDB  F024         	call	_I2C_2_Master_Write
  8001   00366A                     
  8002                           ;color.c: 81:  RGBC->R=I2C_2_Master_Read(1);
  8003   00366A  0E01               	movlw	1
  8004   00366C  EC57  F023         	call	_I2C_2_Master_Read
  8005   003670  6E12               	movwf	??_color_read^0,c
  8006   003672  6A13               	clrf	(??_color_read+1)^0,c
  8007   003674  C010  FFD9         	movff	color_read@RGBC,fsr2l
  8008   003678  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  8009   00367C  C012  FFDE         	movff	??_color_read,postinc2
  8010   003680  C013  FFDD         	movff	??_color_read+1,postdec2
  8011   003684                     
  8012                           ;color.c: 82:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  8013   003684  C010  FFD9         	movff	color_read@RGBC,fsr2l
  8014   003688  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  8015   00368C  CFDE F012          	movff	postinc2,??_color_read
  8016   003690  CFDD F013          	movff	postdec2,??_color_read+1
  8017   003694  0E00               	movlw	0
  8018   003696  EC57  F023         	call	_I2C_2_Master_Read
  8019   00369A  6E14               	movwf	(??_color_read+2)^0,c
  8020   00369C  5014               	movf	(??_color_read+2)^0,w,c
  8021   00369E  6E16               	movwf	(??_color_read+4)^0,c
  8022   0036A0  6A15               	clrf	(??_color_read+3)^0,c
  8023   0036A2  5012               	movf	??_color_read^0,w,c
  8024   0036A4  1015               	iorwf	(??_color_read+3)^0,w,c
  8025   0036A6  6E17               	movwf	(??_color_read+5)^0,c
  8026   0036A8  5013               	movf	(??_color_read+1)^0,w,c
  8027   0036AA  1016               	iorwf	(??_color_read+4)^0,w,c
  8028   0036AC  6E18               	movwf	(??_color_read+6)^0,c
  8029   0036AE  C010  FFD9         	movff	color_read@RGBC,fsr2l
  8030   0036B2  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  8031   0036B6  C017  FFDE         	movff	??_color_read+5,postinc2
  8032   0036BA  C018  FFDD         	movff	??_color_read+6,postdec2
  8033                           
  8034                           ;color.c: 83:  I2C_2_Master_Stop();
  8035   0036BE  ECEC  F024         	call	_I2C_2_Master_Stop	;wreg free
  8036                           
  8037                           ;color.c: 85:     I2C_2_Master_Start();
  8038   0036C2  ECF1  F024         	call	_I2C_2_Master_Start	;wreg free
  8039                           
  8040                           ;color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  8041   0036C6  0E52               	movlw	82
  8042   0036C8  ECDB  F024         	call	_I2C_2_Master_Write
  8043                           
  8044                           ;color.c: 87:  I2C_2_Master_Write(0xA0 | 0x18);
  8045   0036CC  0EB8               	movlw	184
  8046   0036CE  ECDB  F024         	call	_I2C_2_Master_Write
  8047                           
  8048                           ;color.c: 88:  I2C_2_Master_RepStart();
  8049   0036D2  ECF6  F024         	call	_I2C_2_Master_RepStart	;wreg free
  8050                           
  8051                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  8052   0036D6  0E53               	movlw	83
  8053   0036D8  ECDB  F024         	call	_I2C_2_Master_Write
  8054   0036DC                     
  8055                           ;color.c: 90:  RGBC->G=I2C_2_Master_Read(1);
  8056   0036DC  0E01               	movlw	1
  8057   0036DE  EC57  F023         	call	_I2C_2_Master_Read
  8058   0036E2  6E12               	movwf	??_color_read^0,c
  8059   0036E4  6A13               	clrf	(??_color_read+1)^0,c
  8060   0036E6  EE20 F002          	lfsr	2,2
  8061   0036EA  5010               	movf	color_read@RGBC^0,w,c
  8062   0036EC  26D9               	addwf	fsr2l,f,c
  8063   0036EE  5011               	movf	(color_read@RGBC+1)^0,w,c
  8064   0036F0  22DA               	addwfc	fsr2h,f,c
  8065   0036F2  C012  FFDE         	movff	??_color_read,postinc2
  8066   0036F6  C013  FFDD         	movff	??_color_read+1,postdec2
  8067   0036FA                     
  8068                           ;color.c: 91:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  8069   0036FA  EE20 F002          	lfsr	2,2
  8070   0036FE  5010               	movf	color_read@RGBC^0,w,c
  8071   003700  26D9               	addwf	fsr2l,f,c
  8072   003702  5011               	movf	(color_read@RGBC+1)^0,w,c
  8073   003704  22DA               	addwfc	fsr2h,f,c
  8074   003706  CFDE F012          	movff	postinc2,??_color_read
  8075   00370A  CFDD F013          	movff	postdec2,??_color_read+1
  8076   00370E  0E00               	movlw	0
  8077   003710  EC57  F023         	call	_I2C_2_Master_Read
  8078   003714  6E14               	movwf	(??_color_read+2)^0,c
  8079   003716  5014               	movf	(??_color_read+2)^0,w,c
  8080   003718  6E16               	movwf	(??_color_read+4)^0,c
  8081   00371A  6A15               	clrf	(??_color_read+3)^0,c
  8082   00371C  5012               	movf	??_color_read^0,w,c
  8083   00371E  1015               	iorwf	(??_color_read+3)^0,w,c
  8084   003720  6E17               	movwf	(??_color_read+5)^0,c
  8085   003722  5013               	movf	(??_color_read+1)^0,w,c
  8086   003724  1016               	iorwf	(??_color_read+4)^0,w,c
  8087   003726  6E18               	movwf	(??_color_read+6)^0,c
  8088   003728  EE20 F002          	lfsr	2,2
  8089   00372C  5010               	movf	color_read@RGBC^0,w,c
  8090   00372E  26D9               	addwf	fsr2l,f,c
  8091   003730  5011               	movf	(color_read@RGBC+1)^0,w,c
  8092   003732  22DA               	addwfc	fsr2h,f,c
  8093   003734  C017  FFDE         	movff	??_color_read+5,postinc2
  8094   003738  C018  FFDD         	movff	??_color_read+6,postdec2
  8095                           
  8096                           ;color.c: 92:  I2C_2_Master_Stop();
  8097   00373C  ECEC  F024         	call	_I2C_2_Master_Stop	;wreg free
  8098                           
  8099                           ;color.c: 94:     I2C_2_Master_Start();
  8100   003740  ECF1  F024         	call	_I2C_2_Master_Start	;wreg free
  8101                           
  8102                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  8103   003744  0E52               	movlw	82
  8104   003746  ECDB  F024         	call	_I2C_2_Master_Write
  8105                           
  8106                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  8107   00374A  0EBA               	movlw	186
  8108   00374C  ECDB  F024         	call	_I2C_2_Master_Write
  8109                           
  8110                           ;color.c: 97:  I2C_2_Master_RepStart();
  8111   003750  ECF6  F024         	call	_I2C_2_Master_RepStart	;wreg free
  8112                           
  8113                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  8114   003754  0E53               	movlw	83
  8115   003756  ECDB  F024         	call	_I2C_2_Master_Write
  8116   00375A                     
  8117                           ;color.c: 99:  RGBC->B=I2C_2_Master_Read(1);
  8118   00375A  0E01               	movlw	1
  8119   00375C  EC57  F023         	call	_I2C_2_Master_Read
  8120   003760  6E12               	movwf	??_color_read^0,c
  8121   003762  6A13               	clrf	(??_color_read+1)^0,c
  8122   003764  EE20 F004          	lfsr	2,4
  8123   003768  5010               	movf	color_read@RGBC^0,w,c
  8124   00376A  26D9               	addwf	fsr2l,f,c
  8125   00376C  5011               	movf	(color_read@RGBC+1)^0,w,c
  8126   00376E  22DA               	addwfc	fsr2h,f,c
  8127   003770  C012  FFDE         	movff	??_color_read,postinc2
  8128   003774  C013  FFDD         	movff	??_color_read+1,postdec2
  8129   003778                     
  8130                           ;color.c: 100:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  8131   003778  EE20 F004          	lfsr	2,4
  8132   00377C  5010               	movf	color_read@RGBC^0,w,c
  8133   00377E  26D9               	addwf	fsr2l,f,c
  8134   003780  5011               	movf	(color_read@RGBC+1)^0,w,c
  8135   003782  22DA               	addwfc	fsr2h,f,c
  8136   003784  CFDE F012          	movff	postinc2,??_color_read
  8137   003788  CFDD F013          	movff	postdec2,??_color_read+1
  8138   00378C  0E00               	movlw	0
  8139   00378E  EC57  F023         	call	_I2C_2_Master_Read
  8140   003792  6E14               	movwf	(??_color_read+2)^0,c
  8141   003794  5014               	movf	(??_color_read+2)^0,w,c
  8142   003796  6E16               	movwf	(??_color_read+4)^0,c
  8143   003798  6A15               	clrf	(??_color_read+3)^0,c
  8144   00379A  5012               	movf	??_color_read^0,w,c
  8145   00379C  1015               	iorwf	(??_color_read+3)^0,w,c
  8146   00379E  6E17               	movwf	(??_color_read+5)^0,c
  8147   0037A0  5013               	movf	(??_color_read+1)^0,w,c
  8148   0037A2  1016               	iorwf	(??_color_read+4)^0,w,c
  8149   0037A4  6E18               	movwf	(??_color_read+6)^0,c
  8150   0037A6  EE20 F004          	lfsr	2,4
  8151   0037AA  5010               	movf	color_read@RGBC^0,w,c
  8152   0037AC  26D9               	addwf	fsr2l,f,c
  8153   0037AE  5011               	movf	(color_read@RGBC+1)^0,w,c
  8154   0037B0  22DA               	addwfc	fsr2h,f,c
  8155   0037B2  C017  FFDE         	movff	??_color_read+5,postinc2
  8156   0037B6  C018  FFDD         	movff	??_color_read+6,postdec2
  8157                           
  8158                           ;color.c: 101:  I2C_2_Master_Stop();
  8159   0037BA  ECEC  F024         	call	_I2C_2_Master_Stop	;wreg free
  8160                           
  8161                           ;color.c: 103:     I2C_2_Master_Start();
  8162   0037BE  ECF1  F024         	call	_I2C_2_Master_Start	;wreg free
  8163                           
  8164                           ;color.c: 104:  I2C_2_Master_Write(0x52 | 0x00);
  8165   0037C2  0E52               	movlw	82
  8166   0037C4  ECDB  F024         	call	_I2C_2_Master_Write
  8167                           
  8168                           ;color.c: 105:  I2C_2_Master_Write(0xA0 | 0x14);
  8169   0037C8  0EB4               	movlw	180
  8170   0037CA  ECDB  F024         	call	_I2C_2_Master_Write
  8171                           
  8172                           ;color.c: 106:  I2C_2_Master_RepStart();
  8173   0037CE  ECF6  F024         	call	_I2C_2_Master_RepStart	;wreg free
  8174                           
  8175                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x01);
  8176   0037D2  0E53               	movlw	83
  8177   0037D4  ECDB  F024         	call	_I2C_2_Master_Write
  8178   0037D8                     
  8179                           ;color.c: 108:  RGBC->C=I2C_2_Master_Read(1);
  8180   0037D8  0E01               	movlw	1
  8181   0037DA  EC57  F023         	call	_I2C_2_Master_Read
  8182   0037DE  6E12               	movwf	??_color_read^0,c
  8183   0037E0  6A13               	clrf	(??_color_read+1)^0,c
  8184   0037E2  EE20 F006          	lfsr	2,6
  8185   0037E6  5010               	movf	color_read@RGBC^0,w,c
  8186   0037E8  26D9               	addwf	fsr2l,f,c
  8187   0037EA  5011               	movf	(color_read@RGBC+1)^0,w,c
  8188   0037EC  22DA               	addwfc	fsr2h,f,c
  8189   0037EE  C012  FFDE         	movff	??_color_read,postinc2
  8190   0037F2  C013  FFDD         	movff	??_color_read+1,postdec2
  8191   0037F6                     
  8192                           ;color.c: 109:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  8193   0037F6  EE20 F006          	lfsr	2,6
  8194   0037FA  5010               	movf	color_read@RGBC^0,w,c
  8195   0037FC  26D9               	addwf	fsr2l,f,c
  8196   0037FE  5011               	movf	(color_read@RGBC+1)^0,w,c
  8197   003800  22DA               	addwfc	fsr2h,f,c
  8198   003802  CFDE F012          	movff	postinc2,??_color_read
  8199   003806  CFDD F013          	movff	postdec2,??_color_read+1
  8200   00380A  0E00               	movlw	0
  8201   00380C  EC57  F023         	call	_I2C_2_Master_Read
  8202   003810  6E14               	movwf	(??_color_read+2)^0,c
  8203   003812  5014               	movf	(??_color_read+2)^0,w,c
  8204   003814  6E16               	movwf	(??_color_read+4)^0,c
  8205   003816  6A15               	clrf	(??_color_read+3)^0,c
  8206   003818  5012               	movf	??_color_read^0,w,c
  8207   00381A  1015               	iorwf	(??_color_read+3)^0,w,c
  8208   00381C  6E17               	movwf	(??_color_read+5)^0,c
  8209   00381E  5013               	movf	(??_color_read+1)^0,w,c
  8210   003820  1016               	iorwf	(??_color_read+4)^0,w,c
  8211   003822  6E18               	movwf	(??_color_read+6)^0,c
  8212   003824  EE20 F006          	lfsr	2,6
  8213   003828  5010               	movf	color_read@RGBC^0,w,c
  8214   00382A  26D9               	addwf	fsr2l,f,c
  8215   00382C  5011               	movf	(color_read@RGBC+1)^0,w,c
  8216   00382E  22DA               	addwfc	fsr2h,f,c
  8217   003830  C017  FFDE         	movff	??_color_read+5,postinc2
  8218   003834  C018  FFDD         	movff	??_color_read+6,postdec2
  8219                           
  8220                           ;color.c: 110:  I2C_2_Master_Stop();
  8221   003838  ECEC  F024         	call	_I2C_2_Master_Stop	;wreg free
  8222   00383C  0012               	return		;funcret
  8223   00383E                     __end_of_color_read:
  8224                           	callstack 0
  8225                           
  8226 ;; *************** function _I2C_2_Master_Write *****************
  8227 ;; Defined at:
  8228 ;;		line 45 in file "i2c.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  data_byte       1    wreg     unsigned char 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;  data_byte       1   12[COMRAM] unsigned char 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8246 ;;Total ram usage:        1 bytes
  8247 ;; Hardware stack levels used: 1
  8248 ;; Hardware stack levels required when called: 6
  8249 ;; This function calls:
  8250 ;;		_I2C_2_Master_Idle
  8251 ;; This function is called by:
  8252 ;;		_color_clear_init_interrupts
  8253 ;;		_color_writetoaddr
  8254 ;;		_color_read
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           	psect	text25
  8259   0049B6                     __ptext25:
  8260                           	callstack 0
  8261   0049B6                     _I2C_2_Master_Write:
  8262                           	callstack 23
  8263                           
  8264                           ;incstack = 0
  8265                           ;I2C_2_Master_Write@data_byte stored from wreg
  8266   0049B6  6E0D               	movwf	I2C_2_Master_Write@data_byte^0,c
  8267   0049B8                     
  8268                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8269   0049B8  EC04  F024         	call	_I2C_2_Master_Idle	;wreg free
  8270   0049BC                     
  8271                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8272   0049BC  C00D  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8273   0049C0  0012               	return		;funcret
  8274   0049C2                     __end_of_I2C_2_Master_Write:
  8275                           	callstack 0
  8276                           
  8277 ;; *************** function _I2C_2_Master_Stop *****************
  8278 ;; Defined at:
  8279 ;;		line 39 in file "i2c.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;		None
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;		None
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		wreg, status,2, status,0, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8297 ;;Total ram usage:        0 bytes
  8298 ;; Hardware stack levels used: 1
  8299 ;; Hardware stack levels required when called: 6
  8300 ;; This function calls:
  8301 ;;		_I2C_2_Master_Idle
  8302 ;; This function is called by:
  8303 ;;		_color_clear_init_interrupts
  8304 ;;		_color_writetoaddr
  8305 ;;		_color_read
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text26
  8310   0049D8                     __ptext26:
  8311                           	callstack 0
  8312   0049D8                     _I2C_2_Master_Stop:
  8313                           	callstack 23
  8314   0049D8                     
  8315                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8316   0049D8  EC04  F024         	call	_I2C_2_Master_Idle	;wreg free
  8317   0049DC                     
  8318                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8319   0049DC  010E               	movlb	14	; () banked
  8320   0049DE  85DA               	bsf	218,2,b	;volatile
  8321   0049E0                     
  8322                           ; BSR set to: 14
  8323   0049E0  0012               	return		;funcret
  8324   0049E2                     __end_of_I2C_2_Master_Stop:
  8325                           	callstack 0
  8326                           
  8327 ;; *************** function _I2C_2_Master_Start *****************
  8328 ;; Defined at:
  8329 ;;		line 27 in file "i2c.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;		None
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;		None
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      void 
  8336 ;; Registers used:
  8337 ;;		wreg, status,2, status,0, cstack
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8347 ;;Total ram usage:        0 bytes
  8348 ;; Hardware stack levels used: 1
  8349 ;; Hardware stack levels required when called: 6
  8350 ;; This function calls:
  8351 ;;		_I2C_2_Master_Idle
  8352 ;; This function is called by:
  8353 ;;		_color_clear_init_interrupts
  8354 ;;		_color_writetoaddr
  8355 ;;		_color_read
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           	psect	text27
  8360   0049E2                     __ptext27:
  8361                           	callstack 0
  8362   0049E2                     _I2C_2_Master_Start:
  8363                           	callstack 23
  8364   0049E2                     
  8365                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8366   0049E2  EC04  F024         	call	_I2C_2_Master_Idle	;wreg free
  8367   0049E6                     
  8368                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8369   0049E6  010E               	movlb	14	; () banked
  8370   0049E8  81DA               	bsf	218,0,b	;volatile
  8371   0049EA                     
  8372                           ; BSR set to: 14
  8373   0049EA  0012               	return		;funcret
  8374   0049EC                     __end_of_I2C_2_Master_Start:
  8375                           	callstack 0
  8376                           
  8377 ;; *************** function _I2C_2_Master_RepStart *****************
  8378 ;; Defined at:
  8379 ;;		line 33 in file "i2c.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;		None
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;		None
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1    wreg      void 
  8386 ;; Registers used:
  8387 ;;		wreg, status,2, status,0, cstack
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8397 ;;Total ram usage:        0 bytes
  8398 ;; Hardware stack levels used: 1
  8399 ;; Hardware stack levels required when called: 6
  8400 ;; This function calls:
  8401 ;;		_I2C_2_Master_Idle
  8402 ;; This function is called by:
  8403 ;;		_color_read
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text28
  8408   0049EC                     __ptext28:
  8409                           	callstack 0
  8410   0049EC                     _I2C_2_Master_RepStart:
  8411                           	callstack 23
  8412   0049EC                     
  8413                           ;i2c.c: 35:   I2C_2_Master_Idle();
  8414   0049EC  EC04  F024         	call	_I2C_2_Master_Idle	;wreg free
  8415   0049F0                     
  8416                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  8417   0049F0  010E               	movlb	14	; () banked
  8418   0049F2  83DA               	bsf	218,1,b	;volatile
  8419   0049F4                     
  8420                           ; BSR set to: 14
  8421   0049F4  0012               	return		;funcret
  8422   0049F6                     __end_of_I2C_2_Master_RepStart:
  8423                           	callstack 0
  8424                           
  8425 ;; *************** function _I2C_2_Master_Read *****************
  8426 ;; Defined at:
  8427 ;;		line 51 in file "i2c.c"
  8428 ;; Parameters:    Size  Location     Type
  8429 ;;  ack             1    wreg     unsigned char 
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;  ack             1   13[COMRAM] unsigned char 
  8432 ;;  tmp             1   14[COMRAM] unsigned char 
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  1    wreg      unsigned char 
  8435 ;; Registers used:
  8436 ;;		wreg, status,2, status,0, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8445 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8446 ;;Total ram usage:        3 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; Hardware stack levels required when called: 6
  8449 ;; This function calls:
  8450 ;;		_I2C_2_Master_Idle
  8451 ;; This function is called by:
  8452 ;;		_color_read
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text29
  8457   0046AE                     __ptext29:
  8458                           	callstack 0
  8459   0046AE                     _I2C_2_Master_Read:
  8460                           	callstack 23
  8461                           
  8462                           ; BSR set to: 14
  8463                           ;incstack = 0
  8464                           ;I2C_2_Master_Read@ack stored from wreg
  8465   0046AE  6E0E               	movwf	I2C_2_Master_Read@ack^0,c
  8466   0046B0                     
  8467                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8468   0046B0  EC04  F024         	call	_I2C_2_Master_Idle	;wreg free
  8469   0046B4                     
  8470                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8471   0046B4  010E               	movlb	14	; () banked
  8472   0046B6  87DA               	bsf	218,3,b	;volatile
  8473                           
  8474                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8475   0046B8  EC04  F024         	call	_I2C_2_Master_Idle	;wreg free
  8476   0046BC                     
  8477                           ;i2c.c: 57:   tmp = SSP2BUF;
  8478   0046BC  CED5 F00F          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8479                           
  8480                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8481   0046C0  EC04  F024         	call	_I2C_2_Master_Idle	;wreg free
  8482   0046C4                     
  8483                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8484   0046C4  500E               	movf	I2C_2_Master_Read@ack^0,w,c
  8485   0046C6  B4D8               	btfsc	status,2,c
  8486   0046C8  EF68  F023         	goto	u3471
  8487   0046CC  EF6C  F023         	goto	u3470
  8488   0046D0                     u3471:
  8489   0046D0  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  8490   0046D2  2A0D               	incf	??_I2C_2_Master_Read^0,f,c
  8491   0046D4  EF6D  F023         	goto	u3488
  8492   0046D8                     u3470:
  8493   0046D8  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  8494   0046DA                     u3488:
  8495   0046DA  3A0D               	swapf	??_I2C_2_Master_Read^0,f,c
  8496   0046DC  460D               	rlncf	??_I2C_2_Master_Read^0,f,c
  8497   0046DE  010E               	movlb	14	; () banked
  8498   0046E0  51DA               	movf	218,w,b	;volatile
  8499   0046E2  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  8500   0046E4  0BDF               	andlw	-33
  8501   0046E6  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  8502   0046E8  6FDA               	movwf	218,b	;volatile
  8503   0046EA                     
  8504                           ; BSR set to: 14
  8505                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8506   0046EA  89DA               	bsf	218,4,b	;volatile
  8507   0046EC                     
  8508                           ; BSR set to: 14
  8509                           ;i2c.c: 61:   return tmp;
  8510   0046EC  500F               	movf	I2C_2_Master_Read@tmp^0,w,c
  8511   0046EE                     
  8512                           ; BSR set to: 14
  8513   0046EE  0012               	return		;funcret
  8514   0046F0                     __end_of_I2C_2_Master_Read:
  8515                           	callstack 0
  8516                           
  8517 ;; *************** function _I2C_2_Master_Idle *****************
  8518 ;; Defined at:
  8519 ;;		line 22 in file "i2c.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;		None
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;		None
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  1    wreg      void 
  8526 ;; Registers used:
  8527 ;;		wreg, status,2, status,0
  8528 ;; Tracked objects:
  8529 ;;		On entry : 0/0
  8530 ;;		On exit  : 0/0
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8537 ;;Total ram usage:        1 bytes
  8538 ;; Hardware stack levels used: 1
  8539 ;; Hardware stack levels required when called: 5
  8540 ;; This function calls:
  8541 ;;		Nothing
  8542 ;; This function is called by:
  8543 ;;		_I2C_2_Master_Start
  8544 ;;		_I2C_2_Master_RepStart
  8545 ;;		_I2C_2_Master_Stop
  8546 ;;		_I2C_2_Master_Write
  8547 ;;		_I2C_2_Master_Read
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           	psect	text30
  8552   004808                     __ptext30:
  8553                           	callstack 0
  8554   004808                     _I2C_2_Master_Idle:
  8555                           	callstack 23
  8556   004808                     l250:
  8557   004808  010E               	movlb	14	; () banked
  8558   00480A  B5D8               	btfsc	216,2,b	;volatile
  8559   00480C  EF0A  F024         	goto	u3361
  8560   004810  EF0C  F024         	goto	u3360
  8561   004814                     u3361:
  8562   004814  EF04  F024         	goto	l250
  8563   004818                     u3360:
  8564   004818                     
  8565                           ; BSR set to: 14
  8566   004818  CEDA F00C          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8567   00481C  0E1F               	movlw	31
  8568   00481E  160C               	andwf	??_I2C_2_Master_Idle^0,f,c
  8569   004820  A4D8               	btfss	status,2,c
  8570   004822  EF15  F024         	goto	u3371
  8571   004826  EF17  F024         	goto	u3370
  8572   00482A                     u3371:
  8573   00482A  EF04  F024         	goto	l250
  8574   00482E                     u3370:
  8575   00482E                     
  8576                           ; BSR set to: 14
  8577   00482E  0012               	return		;funcret
  8578   004830                     __end_of_I2C_2_Master_Idle:
  8579                           	callstack 0
  8580                           
  8581 ;; *************** function _calibration *****************
  8582 ;; Defined at:
  8583 ;;		line 482 in file "dc_motor.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  8586 ;;		 -> main@motorL(10), 
  8587 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  8588 ;;		 -> main@motorR(10), 
  8589 ;;  turnSpeed       1   48[COMRAM] unsigned char 
  8590 ;;  turnDuration    2   49[COMRAM] PTR unsigned char 
  8591 ;;		 -> main@turnDuration(1), 
  8592 ;;  turnRamp        1   51[COMRAM] unsigned char 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;		None
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  1    wreg      void 
  8597 ;; Registers used:
  8598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8604 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8607 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8608 ;;Total ram usage:       10 bytes
  8609 ;; Hardware stack levels used: 1
  8610 ;; Hardware stack levels required when called: 8
  8611 ;; This function calls:
  8612 ;;		_turnLeft
  8613 ;;		_turnRight
  8614 ;; This function is called by:
  8615 ;;		_main
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           	psect	text31
  8620   00314E                     __ptext31:
  8621                           	callstack 0
  8622   00314E                     _calibration:
  8623                           	callstack 22
  8624   00314E                     
  8625                           ;dc_motor.c: 482: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 483: {;dc_motor.c: 485:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8626   00314E  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8627   003152  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8628   003156  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8629   00315A  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8630   00315E  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8631   003162  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8632   003166  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8633   00316A  50DF               	movf	indf2,w,c
  8634   00316C  6E24               	movwf	turnLeft@turnDuration^0,c
  8635   00316E  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8636   003172  ECFC  F01D         	call	_turnLeft	;wreg free
  8637   003176                     
  8638                           ;dc_motor.c: 486:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8639   003176  0E05               	movlw	5
  8640   003178  6E36               	movwf	(??_calibration+1)^0,c
  8641   00317A  0E0F               	movlw	15
  8642   00317C  6E35               	movwf	??_calibration^0,c
  8643   00317E  0EF1               	movlw	241
  8644   003180                     u5687:
  8645   003180  2EE8               	decfsz	wreg,f,c
  8646   003182  D7FE               	bra	u5687
  8647   003184  2E35               	decfsz	??_calibration^0,f,c
  8648   003186  D7FC               	bra	u5687
  8649   003188  2E36               	decfsz	(??_calibration+1)^0,f,c
  8650   00318A  D7FA               	bra	u5687
  8651   00318C  0000               	nop	
  8652   00318E                     
  8653                           ;dc_motor.c: 487:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8654   00318E  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8655   003192  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8656   003196  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8657   00319A  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8658   00319E  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8659   0031A2  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8660   0031A6  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8661   0031AA  50DF               	movf	indf2,w,c
  8662   0031AC  6E24               	movwf	turnLeft@turnDuration^0,c
  8663   0031AE  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8664   0031B2  ECFC  F01D         	call	_turnLeft	;wreg free
  8665                           
  8666                           ;dc_motor.c: 488:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8667   0031B6  0E05               	movlw	5
  8668   0031B8  6E36               	movwf	(??_calibration+1)^0,c
  8669   0031BA  0E0F               	movlw	15
  8670   0031BC  6E35               	movwf	??_calibration^0,c
  8671   0031BE  0EF1               	movlw	241
  8672   0031C0                     u5697:
  8673   0031C0  2EE8               	decfsz	wreg,f,c
  8674   0031C2  D7FE               	bra	u5697
  8675   0031C4  2E35               	decfsz	??_calibration^0,f,c
  8676   0031C6  D7FC               	bra	u5697
  8677   0031C8  2E36               	decfsz	(??_calibration+1)^0,f,c
  8678   0031CA  D7FA               	bra	u5697
  8679   0031CC  0000               	nop	
  8680   0031CE                     
  8681                           ;dc_motor.c: 489:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8682   0031CE  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8683   0031D2  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8684   0031D6  C02F  F021         	movff	calibration@mR,turnRight@mR
  8685   0031DA  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8686   0031DE  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8687   0031E2  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8688   0031E6  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8689   0031EA  50DF               	movf	indf2,w,c
  8690   0031EC  6E24               	movwf	turnRight@turnDuration^0,c
  8691   0031EE  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8692   0031F2  EC12  F01D         	call	_turnRight	;wreg free
  8693   0031F6                     
  8694                           ;dc_motor.c: 490:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8695   0031F6  0E05               	movlw	5
  8696   0031F8  6E36               	movwf	(??_calibration+1)^0,c
  8697   0031FA  0E0F               	movlw	15
  8698   0031FC  6E35               	movwf	??_calibration^0,c
  8699   0031FE  0EF1               	movlw	241
  8700   003200                     u5707:
  8701   003200  2EE8               	decfsz	wreg,f,c
  8702   003202  D7FE               	bra	u5707
  8703   003204  2E35               	decfsz	??_calibration^0,f,c
  8704   003206  D7FC               	bra	u5707
  8705   003208  2E36               	decfsz	(??_calibration+1)^0,f,c
  8706   00320A  D7FA               	bra	u5707
  8707   00320C  0000               	nop	
  8708                           
  8709                           ;dc_motor.c: 491:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8710   00320E  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8711   003212  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8712   003216  C02F  F021         	movff	calibration@mR,turnRight@mR
  8713   00321A  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8714   00321E  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8715   003222  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8716   003226  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8717   00322A  50DF               	movf	indf2,w,c
  8718   00322C  6E24               	movwf	turnRight@turnDuration^0,c
  8719   00322E  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8720   003232  EC12  F01D         	call	_turnRight	;wreg free
  8721   003236                     l682:
  8722   003236  A48E               	btfss	142,2,c	;volatile
  8723   003238  EF20  F019         	goto	u4201
  8724   00323C  EF22  F019         	goto	u4200
  8725   003240                     u4201:
  8726   003240  EF29  F019         	goto	l686
  8727   003244                     u4200:
  8728   003244  B68E               	btfsc	142,3,c	;volatile
  8729   003246  EF27  F019         	goto	u4211
  8730   00324A  EF29  F019         	goto	u4210
  8731   00324E                     u4211:
  8732   00324E  EF1B  F019         	goto	l682
  8733   003252                     u4210:
  8734   003252                     l686:
  8735                           
  8736                           ;dc_motor.c: 496:         if (!PORTFbits.RF2 && *turnDuration>0) {
  8737   003252  B48E               	btfsc	142,2,c	;volatile
  8738   003254  EF2E  F019         	goto	u4221
  8739   003258  EF30  F019         	goto	u4220
  8740   00325C                     u4221:
  8741   00325C  EF44  F019         	goto	l687
  8742   003260                     u4220:
  8743   003260  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8744   003264  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8745   003268  50DF               	movf	indf2,w,c
  8746   00326A  B4D8               	btfsc	status,2,c
  8747   00326C  EF3A  F019         	goto	u4231
  8748   003270  EF3C  F019         	goto	u4230
  8749   003274                     u4231:
  8750   003274  EF44  F019         	goto	l687
  8751   003278                     u4230:
  8752   003278                     
  8753                           ;dc_motor.c: 497:             (*turnDuration)--;
  8754   003278  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8755   00327C  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8756   003280  06DF               	decf	indf2,f,c
  8757   003282                     
  8758                           ;dc_motor.c: 498:             LATDbits.LATD7 = 1;
  8759   003282  8E7C               	bsf	124,7,c	;volatile
  8760                           
  8761                           ;dc_motor.c: 499:         }
  8762   003284  EF51  F019         	goto	l4902
  8763   003288                     l687:
  8764   003288  B68E               	btfsc	142,3,c	;volatile
  8765   00328A  EF49  F019         	goto	u4241
  8766   00328E  EF4B  F019         	goto	u4240
  8767   003292                     u4241:
  8768   003292  EF51  F019         	goto	l4902
  8769   003296                     u4240:
  8770   003296                     
  8771                           ;dc_motor.c: 502:             (*turnDuration)++;
  8772   003296  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8773   00329A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8774   00329E  2ADF               	incf	indf2,f,c
  8775   0032A0                     
  8776                           ;dc_motor.c: 503:             LATHbits.LATH3 = 1;
  8777   0032A0  8680               	bsf	128,3,c	;volatile
  8778   0032A2                     l4902:
  8779                           
  8780                           ;dc_motor.c: 506:         _delay((unsigned long)((500)*(64000000/4000.0)));
  8781   0032A2  0E29               	movlw	41
  8782   0032A4  6E36               	movwf	(??_calibration+1)^0,c
  8783   0032A6  0E96               	movlw	150
  8784   0032A8  6E35               	movwf	??_calibration^0,c
  8785   0032AA  0E7F               	movlw	127
  8786   0032AC                     u5717:
  8787   0032AC  2EE8               	decfsz	wreg,f,c
  8788   0032AE  D7FE               	bra	u5717
  8789   0032B0  2E35               	decfsz	??_calibration^0,f,c
  8790   0032B2  D7FC               	bra	u5717
  8791   0032B4  2E36               	decfsz	(??_calibration+1)^0,f,c
  8792   0032B6  D7FA               	bra	u5717
  8793   0032B8  0000               	nop	
  8794   0032BA                     
  8795                           ;dc_motor.c: 508:         if (!PORTFbits.RF3) {
  8796   0032BA  B68E               	btfsc	142,3,c	;volatile
  8797   0032BC  EF62  F019         	goto	u4251
  8798   0032C0  EF64  F019         	goto	u4250
  8799   0032C4                     u4251:
  8800   0032C4  EF6B  F019         	goto	l690
  8801   0032C8                     u4250:
  8802   0032C8                     
  8803                           ;dc_motor.c: 509:             (*turnDuration)--;
  8804   0032C8  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8805   0032CC  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8806   0032D0  06DF               	decf	indf2,f,c
  8807                           
  8808                           ;dc_motor.c: 510:             break;
  8809   0032D2  EFE3  F019         	goto	l691
  8810   0032D6                     l690:
  8811                           
  8812                           ;dc_motor.c: 513:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8813   0032D6  9680               	bcf	128,3,c	;volatile
  8814   0032D8  9E7C               	bcf	124,7,c	;volatile
  8815   0032DA                     
  8816                           ;dc_motor.c: 516:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8817   0032DA  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8818   0032DE  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8819   0032E2  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8820   0032E6  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8821   0032EA  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8822   0032EE  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8823   0032F2  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8824   0032F6  50DF               	movf	indf2,w,c
  8825   0032F8  6E24               	movwf	turnLeft@turnDuration^0,c
  8826   0032FA  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8827   0032FE  ECFC  F01D         	call	_turnLeft	;wreg free
  8828   003302                     
  8829                           ;dc_motor.c: 517:         _delay((unsigned long)((50)*(64000000/4000.0)));
  8830   003302  0E05               	movlw	5
  8831   003304  6E36               	movwf	(??_calibration+1)^0,c
  8832   003306  0E0F               	movlw	15
  8833   003308  6E35               	movwf	??_calibration^0,c
  8834   00330A  0EF1               	movlw	241
  8835   00330C                     u5727:
  8836   00330C  2EE8               	decfsz	wreg,f,c
  8837   00330E  D7FE               	bra	u5727
  8838   003310  2E35               	decfsz	??_calibration^0,f,c
  8839   003312  D7FC               	bra	u5727
  8840   003314  2E36               	decfsz	(??_calibration+1)^0,f,c
  8841   003316  D7FA               	bra	u5727
  8842   003318  0000               	nop	
  8843   00331A                     
  8844                           ;dc_motor.c: 518:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8845   00331A  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8846   00331E  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8847   003322  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8848   003326  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8849   00332A  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8850   00332E  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8851   003332  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8852   003336  50DF               	movf	indf2,w,c
  8853   003338  6E24               	movwf	turnLeft@turnDuration^0,c
  8854   00333A  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8855   00333E  ECFC  F01D         	call	_turnLeft	;wreg free
  8856                           
  8857                           ;dc_motor.c: 519:         _delay((unsigned long)((50)*(64000000/4000.0)));
  8858   003342  0E05               	movlw	5
  8859   003344  6E36               	movwf	(??_calibration+1)^0,c
  8860   003346  0E0F               	movlw	15
  8861   003348  6E35               	movwf	??_calibration^0,c
  8862   00334A  0EF1               	movlw	241
  8863   00334C                     u5737:
  8864   00334C  2EE8               	decfsz	wreg,f,c
  8865   00334E  D7FE               	bra	u5737
  8866   003350  2E35               	decfsz	??_calibration^0,f,c
  8867   003352  D7FC               	bra	u5737
  8868   003354  2E36               	decfsz	(??_calibration+1)^0,f,c
  8869   003356  D7FA               	bra	u5737
  8870   003358  0000               	nop	
  8871   00335A                     
  8872                           ;dc_motor.c: 520:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8873   00335A  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8874   00335E  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8875   003362  C02F  F021         	movff	calibration@mR,turnRight@mR
  8876   003366  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8877   00336A  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8878   00336E  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8879   003372  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8880   003376  50DF               	movf	indf2,w,c
  8881   003378  6E24               	movwf	turnRight@turnDuration^0,c
  8882   00337A  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8883   00337E  EC12  F01D         	call	_turnRight	;wreg free
  8884   003382                     
  8885                           ;dc_motor.c: 521:         _delay((unsigned long)((50)*(64000000/4000.0)));
  8886   003382  0E05               	movlw	5
  8887   003384  6E36               	movwf	(??_calibration+1)^0,c
  8888   003386  0E0F               	movlw	15
  8889   003388  6E35               	movwf	??_calibration^0,c
  8890   00338A  0EF1               	movlw	241
  8891   00338C                     u5747:
  8892   00338C  2EE8               	decfsz	wreg,f,c
  8893   00338E  D7FE               	bra	u5747
  8894   003390  2E35               	decfsz	??_calibration^0,f,c
  8895   003392  D7FC               	bra	u5747
  8896   003394  2E36               	decfsz	(??_calibration+1)^0,f,c
  8897   003396  D7FA               	bra	u5747
  8898   003398  0000               	nop	
  8899                           
  8900                           ;dc_motor.c: 522:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8901   00339A  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8902   00339E  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8903   0033A2  C02F  F021         	movff	calibration@mR,turnRight@mR
  8904   0033A6  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8905   0033AA  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8906   0033AE  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8907   0033B2  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8908   0033B6  50DF               	movf	indf2,w,c
  8909   0033B8  6E24               	movwf	turnRight@turnDuration^0,c
  8910   0033BA  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8911   0033BE  EC12  F01D         	call	_turnRight	;wreg free
  8912   0033C2  EF1B  F019         	goto	l682
  8913   0033C6                     l691:
  8914                           
  8915                           ;dc_motor.c: 527:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8916   0033C6  8680               	bsf	128,3,c	;volatile
  8917   0033C8  8E7C               	bsf	124,7,c	;volatile
  8918   0033CA                     
  8919                           ;dc_motor.c: 528:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8920   0033CA  0E09               	movlw	9
  8921   0033CC  6E36               	movwf	(??_calibration+1)^0,c
  8922   0033CE  0E1E               	movlw	30
  8923   0033D0  6E35               	movwf	??_calibration^0,c
  8924   0033D2  0EE4               	movlw	228
  8925   0033D4                     u5757:
  8926   0033D4  2EE8               	decfsz	wreg,f,c
  8927   0033D6  D7FE               	bra	u5757
  8928   0033D8  2E35               	decfsz	??_calibration^0,f,c
  8929   0033DA  D7FC               	bra	u5757
  8930   0033DC  2E36               	decfsz	(??_calibration+1)^0,f,c
  8931   0033DE  D7FA               	bra	u5757
  8932   0033E0  D000               	nop2	
  8933   0033E2                     
  8934                           ;dc_motor.c: 529:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8935   0033E2  9680               	bcf	128,3,c	;volatile
  8936   0033E4  9E7C               	bcf	124,7,c	;volatile
  8937   0033E6  0012               	return		;funcret
  8938   0033E8                     __end_of_calibration:
  8939                           	callstack 0
  8940                           
  8941 ;; *************** function _turnRight *****************
  8942 ;; Defined at:
  8943 ;;		line 400 in file "dc_motor.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8946 ;;		 -> main@motorL(10), 
  8947 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8948 ;;		 -> main@motorR(10), 
  8949 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  8950 ;;  turnDuration    1   35[COMRAM] unsigned char 
  8951 ;;  turnRamp        1   36[COMRAM] unsigned char 
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;  cur_power       2   42[COMRAM] int 
  8954 ;;  i               2   40[COMRAM] int 
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  1    wreg      void 
  8957 ;; Registers used:
  8958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8964 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8965 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8966 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8967 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8968 ;;Total ram usage:       14 bytes
  8969 ;; Hardware stack levels used: 1
  8970 ;; Hardware stack levels required when called: 7
  8971 ;; This function calls:
  8972 ;;		_setMotorPWM
  8973 ;; This function is called by:
  8974 ;;		_move
  8975 ;;		_returnHome
  8976 ;;		_lostReturnHome
  8977 ;;		_calibration
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text32
  8982   003A24                     __ptext32:
  8983                           	callstack 0
  8984   003A24                     _turnRight:
  8985                           	callstack 22
  8986   003A24                     
  8987                           ;dc_motor.c: 400: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 401: {;dc_motor.c: 402:     mL->dir
      +                          ection = 1;
  8988   003A24  EE20 F001          	lfsr	2,1
  8989   003A28  501F               	movf	turnRight@mL^0,w,c
  8990   003A2A  26D9               	addwf	fsr2l,f,c
  8991   003A2C  5020               	movf	(turnRight@mL+1)^0,w,c
  8992   003A2E  22DA               	addwfc	fsr2h,f,c
  8993   003A30  0E01               	movlw	1
  8994   003A32  6EDF               	movwf	indf2,c
  8995                           
  8996                           ;dc_motor.c: 403:     mR->direction = 0;
  8997   003A34  EE20 F001          	lfsr	2,1
  8998   003A38  5021               	movf	turnRight@mR^0,w,c
  8999   003A3A  26D9               	addwf	fsr2l,f,c
  9000   003A3C  5022               	movf	(turnRight@mR+1)^0,w,c
  9001   003A3E  22DA               	addwfc	fsr2h,f,c
  9002   003A40  6ADF               	clrf	indf2,c
  9003   003A42                     
  9004                           ;dc_motor.c: 404:     int i;;dc_motor.c: 405:     int cur_power;;dc_motor.c: 406:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  9005   003A42  0E00               	movlw	0
  9006   003A44  6E2C               	movwf	(turnRight@cur_power+1)^0,c
  9007   003A46  0E01               	movlw	1
  9008   003A48  6E2B               	movwf	turnRight@cur_power^0,c
  9009   003A4A  EF70  F01D         	goto	l4246
  9010   003A4E                     l4232:
  9011                           
  9012                           ;dc_motor.c: 407:         mL->power = cur_power+mL->compensation;
  9013   003A4E  EE20 F009          	lfsr	2,9
  9014   003A52  501F               	movf	turnRight@mL^0,w,c
  9015   003A54  26D9               	addwf	fsr2l,f,c
  9016   003A56  5020               	movf	(turnRight@mL+1)^0,w,c
  9017   003A58  22DA               	addwfc	fsr2h,f,c
  9018   003A5A  50DF               	movf	indf2,w,c
  9019   003A5C  242B               	addwf	turnRight@cur_power^0,w,c
  9020   003A5E  C01F  FFD9         	movff	turnRight@mL,fsr2l
  9021   003A62  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  9022   003A66  6EDF               	movwf	indf2,c
  9023                           
  9024                           ;dc_motor.c: 408:         mR->power = cur_power+mR->compensation;
  9025   003A68  EE20 F009          	lfsr	2,9
  9026   003A6C  5021               	movf	turnRight@mR^0,w,c
  9027   003A6E  26D9               	addwf	fsr2l,f,c
  9028   003A70  5022               	movf	(turnRight@mR+1)^0,w,c
  9029   003A72  22DA               	addwfc	fsr2h,f,c
  9030   003A74  50DF               	movf	indf2,w,c
  9031   003A76  242B               	addwf	turnRight@cur_power^0,w,c
  9032   003A78  C021  FFD9         	movff	turnRight@mR,fsr2l
  9033   003A7C  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  9034   003A80  6EDF               	movwf	indf2,c
  9035   003A82                     
  9036                           ;dc_motor.c: 409:         setMotorPWM(mL);
  9037   003A82  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  9038   003A86  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  9039   003A8A  ECE6  F01E         	call	_setMotorPWM	;wreg free
  9040   003A8E                     
  9041                           ;dc_motor.c: 410:         setMotorPWM(mR);
  9042   003A8E  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  9043   003A92  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  9044   003A96  ECE6  F01E         	call	_setMotorPWM	;wreg free
  9045   003A9A                     
  9046                           ;dc_motor.c: 411:         for (i=0;i<turnRamp;i++) {
  9047   003A9A  0E00               	movlw	0
  9048   003A9C  6E2A               	movwf	(turnRight@i+1)^0,c
  9049   003A9E  0E00               	movlw	0
  9050   003AA0  6E29               	movwf	turnRight@i^0,c
  9051   003AA2  EF5C  F01D         	goto	l640
  9052   003AA6                     l4240:
  9053                           
  9054                           ;dc_motor.c: 412:             _delay((unsigned long)((10)*(64000000/4000.0)));
  9055   003AA6  0ED0               	movlw	208
  9056   003AA8  6E26               	movwf	??_turnRight^0,c
  9057   003AAA  0ECA               	movlw	202
  9058   003AAC                     u5767:
  9059   003AAC  2EE8               	decfsz	wreg,f,c
  9060   003AAE  D7FE               	bra	u5767
  9061   003AB0  2E26               	decfsz	??_turnRight^0,f,c
  9062   003AB2  D7FC               	bra	u5767
  9063   003AB4                     
  9064                           ;dc_motor.c: 413:         }
  9065   003AB4  4A29               	infsnz	turnRight@i^0,f,c
  9066   003AB6  2A2A               	incf	(turnRight@i+1)^0,f,c
  9067   003AB8                     l640:
  9068   003AB8  5025               	movf	turnRight@turnRamp^0,w,c
  9069   003ABA  6E26               	movwf	??_turnRight^0,c
  9070   003ABC  6A27               	clrf	(??_turnRight+1)^0,c
  9071   003ABE  5026               	movf	??_turnRight^0,w,c
  9072   003AC0  5C29               	subwf	turnRight@i^0,w,c
  9073   003AC2  502A               	movf	(turnRight@i+1)^0,w,c
  9074   003AC4  0A80               	xorlw	128
  9075   003AC6  6E28               	movwf	(??_turnRight+2)^0,c
  9076   003AC8  5027               	movf	(??_turnRight+1)^0,w,c
  9077   003ACA  0A80               	xorlw	128
  9078   003ACC  5828               	subwfb	(??_turnRight+2)^0,w,c
  9079   003ACE  A0D8               	btfss	status,0,c
  9080   003AD0  EF6C  F01D         	goto	u3511
  9081   003AD4  EF6E  F01D         	goto	u3510
  9082   003AD8                     u3511:
  9083   003AD8  EF53  F01D         	goto	l4240
  9084   003ADC                     u3510:
  9085   003ADC                     
  9086                           ;dc_motor.c: 414:     }
  9087   003ADC  4A2B               	infsnz	turnRight@cur_power^0,f,c
  9088   003ADE  2A2C               	incf	(turnRight@cur_power+1)^0,f,c
  9089   003AE0                     l4246:
  9090   003AE0  5023               	movf	turnRight@turnSpeed^0,w,c
  9091   003AE2  6E26               	movwf	??_turnRight^0,c
  9092   003AE4  6A27               	clrf	(??_turnRight+1)^0,c
  9093   003AE6  502B               	movf	turnRight@cur_power^0,w,c
  9094   003AE8  5C26               	subwf	??_turnRight^0,w,c
  9095   003AEA  5027               	movf	(??_turnRight+1)^0,w,c
  9096   003AEC  0A80               	xorlw	128
  9097   003AEE  6E28               	movwf	(??_turnRight+2)^0,c
  9098   003AF0  502C               	movf	(turnRight@cur_power+1)^0,w,c
  9099   003AF2  0A80               	xorlw	128
  9100   003AF4  5828               	subwfb	(??_turnRight+2)^0,w,c
  9101   003AF6  B0D8               	btfsc	status,0,c
  9102   003AF8  EF80  F01D         	goto	u3521
  9103   003AFC  EF82  F01D         	goto	u3520
  9104   003B00                     u3521:
  9105   003B00  EF27  F01D         	goto	l4232
  9106   003B04                     u3520:
  9107   003B04                     
  9108                           ;dc_motor.c: 416:     for (i=0;i<turnDuration;i++) {
  9109   003B04  0E00               	movlw	0
  9110   003B06  6E2A               	movwf	(turnRight@i+1)^0,c
  9111   003B08  0E00               	movlw	0
  9112   003B0A  6E29               	movwf	turnRight@i^0,c
  9113   003B0C  EF91  F01D         	goto	l644
  9114   003B10                     l4250:
  9115                           
  9116                           ;dc_motor.c: 417:             _delay((unsigned long)((10)*(64000000/4000.0)));
  9117   003B10  0ED0               	movlw	208
  9118   003B12  6E26               	movwf	??_turnRight^0,c
  9119   003B14  0ECA               	movlw	202
  9120   003B16                     u5777:
  9121   003B16  2EE8               	decfsz	wreg,f,c
  9122   003B18  D7FE               	bra	u5777
  9123   003B1A  2E26               	decfsz	??_turnRight^0,f,c
  9124   003B1C  D7FC               	bra	u5777
  9125   003B1E                     
  9126                           ;dc_motor.c: 418:         }
  9127   003B1E  4A29               	infsnz	turnRight@i^0,f,c
  9128   003B20  2A2A               	incf	(turnRight@i+1)^0,f,c
  9129   003B22                     l644:
  9130   003B22  5024               	movf	turnRight@turnDuration^0,w,c
  9131   003B24  6E26               	movwf	??_turnRight^0,c
  9132   003B26  6A27               	clrf	(??_turnRight+1)^0,c
  9133   003B28  5026               	movf	??_turnRight^0,w,c
  9134   003B2A  5C29               	subwf	turnRight@i^0,w,c
  9135   003B2C  502A               	movf	(turnRight@i+1)^0,w,c
  9136   003B2E  0A80               	xorlw	128
  9137   003B30  6E28               	movwf	(??_turnRight+2)^0,c
  9138   003B32  5027               	movf	(??_turnRight+1)^0,w,c
  9139   003B34  0A80               	xorlw	128
  9140   003B36  5828               	subwfb	(??_turnRight+2)^0,w,c
  9141   003B38  A0D8               	btfss	status,0,c
  9142   003B3A  EFA1  F01D         	goto	u3531
  9143   003B3E  EFA3  F01D         	goto	u3530
  9144   003B42                     u3531:
  9145   003B42  EF88  F01D         	goto	l4250
  9146   003B46                     u3530:
  9147   003B46                     
  9148                           ;dc_motor.c: 420:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  9149   003B46  C023  F02B         	movff	turnRight@turnSpeed,turnRight@cur_power
  9150   003B4A  6A2C               	clrf	(turnRight@cur_power+1)^0,c
  9151   003B4C                     l4254:
  9152   003B4C  BE2C               	btfsc	(turnRight@cur_power+1)^0,7,c
  9153   003B4E  EFAD  F01D         	goto	u3540
  9154   003B52  EFAB  F01D         	goto	u3541
  9155   003B56                     u3541:
  9156   003B56  EFAF  F01D         	goto	l4258
  9157   003B5A                     u3540:
  9158   003B5A  EFFB  F01D         	goto	l652
  9159   003B5E                     l4258:
  9160                           
  9161                           ;dc_motor.c: 421:         mL->power = cur_power+mL->compensation;
  9162   003B5E  EE20 F009          	lfsr	2,9
  9163   003B62  501F               	movf	turnRight@mL^0,w,c
  9164   003B64  26D9               	addwf	fsr2l,f,c
  9165   003B66  5020               	movf	(turnRight@mL+1)^0,w,c
  9166   003B68  22DA               	addwfc	fsr2h,f,c
  9167   003B6A  50DF               	movf	indf2,w,c
  9168   003B6C  242B               	addwf	turnRight@cur_power^0,w,c
  9169   003B6E  C01F  FFD9         	movff	turnRight@mL,fsr2l
  9170   003B72  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  9171   003B76  6EDF               	movwf	indf2,c
  9172                           
  9173                           ;dc_motor.c: 422:         mR->power = cur_power+mR->compensation;
  9174   003B78  EE20 F009          	lfsr	2,9
  9175   003B7C  5021               	movf	turnRight@mR^0,w,c
  9176   003B7E  26D9               	addwf	fsr2l,f,c
  9177   003B80  5022               	movf	(turnRight@mR+1)^0,w,c
  9178   003B82  22DA               	addwfc	fsr2h,f,c
  9179   003B84  50DF               	movf	indf2,w,c
  9180   003B86  242B               	addwf	turnRight@cur_power^0,w,c
  9181   003B88  C021  FFD9         	movff	turnRight@mR,fsr2l
  9182   003B8C  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  9183   003B90  6EDF               	movwf	indf2,c
  9184   003B92                     
  9185                           ;dc_motor.c: 423:         setMotorPWM(mL);
  9186   003B92  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  9187   003B96  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  9188   003B9A  ECE6  F01E         	call	_setMotorPWM	;wreg free
  9189   003B9E                     
  9190                           ;dc_motor.c: 424:         setMotorPWM(mR);
  9191   003B9E  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  9192   003BA2  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  9193   003BA6  ECE6  F01E         	call	_setMotorPWM	;wreg free
  9194   003BAA                     
  9195                           ;dc_motor.c: 425:         for (i=0;i<turnRamp;i++) {
  9196   003BAA  0E00               	movlw	0
  9197   003BAC  6E2A               	movwf	(turnRight@i+1)^0,c
  9198   003BAE  0E00               	movlw	0
  9199   003BB0  6E29               	movwf	turnRight@i^0,c
  9200   003BB2  EFE4  F01D         	goto	l649
  9201   003BB6                     l4266:
  9202                           
  9203                           ;dc_motor.c: 426:             _delay((unsigned long)((10)*(64000000/4000.0)));
  9204   003BB6  0ED0               	movlw	208
  9205   003BB8  6E26               	movwf	??_turnRight^0,c
  9206   003BBA  0ECA               	movlw	202
  9207   003BBC                     u5787:
  9208   003BBC  2EE8               	decfsz	wreg,f,c
  9209   003BBE  D7FE               	bra	u5787
  9210   003BC0  2E26               	decfsz	??_turnRight^0,f,c
  9211   003BC2  D7FC               	bra	u5787
  9212   003BC4                     
  9213                           ;dc_motor.c: 427:         }
  9214   003BC4  4A29               	infsnz	turnRight@i^0,f,c
  9215   003BC6  2A2A               	incf	(turnRight@i+1)^0,f,c
  9216   003BC8                     l649:
  9217   003BC8  5025               	movf	turnRight@turnRamp^0,w,c
  9218   003BCA  6E26               	movwf	??_turnRight^0,c
  9219   003BCC  6A27               	clrf	(??_turnRight+1)^0,c
  9220   003BCE  5026               	movf	??_turnRight^0,w,c
  9221   003BD0  5C29               	subwf	turnRight@i^0,w,c
  9222   003BD2  502A               	movf	(turnRight@i+1)^0,w,c
  9223   003BD4  0A80               	xorlw	128
  9224   003BD6  6E28               	movwf	(??_turnRight+2)^0,c
  9225   003BD8  5027               	movf	(??_turnRight+1)^0,w,c
  9226   003BDA  0A80               	xorlw	128
  9227   003BDC  5828               	subwfb	(??_turnRight+2)^0,w,c
  9228   003BDE  A0D8               	btfss	status,0,c
  9229   003BE0  EFF4  F01D         	goto	u3551
  9230   003BE4  EFF6  F01D         	goto	u3550
  9231   003BE8                     u3551:
  9232   003BE8  EFDB  F01D         	goto	l4266
  9233   003BEC                     u3550:
  9234   003BEC                     
  9235                           ;dc_motor.c: 428:     }
  9236   003BEC  062B               	decf	turnRight@cur_power^0,f,c
  9237   003BEE  A0D8               	btfss	status,0,c
  9238   003BF0  062C               	decf	(turnRight@cur_power+1)^0,f,c
  9239   003BF2  EFA6  F01D         	goto	l4254
  9240   003BF6                     l652:
  9241   003BF6  0012               	return		;funcret
  9242   003BF8                     __end_of_turnRight:
  9243                           	callstack 0
  9244                           
  9245 ;; *************** function _turnLeft *****************
  9246 ;; Defined at:
  9247 ;;		line 368 in file "dc_motor.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  9250 ;;		 -> main@motorL(10), 
  9251 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  9252 ;;		 -> main@motorR(10), 
  9253 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  9254 ;;  turnDuration    1   35[COMRAM] unsigned char 
  9255 ;;  turnRamp        1   36[COMRAM] unsigned char 
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;  cur_power       2   42[COMRAM] int 
  9258 ;;  i               2   40[COMRAM] int 
  9259 ;; Return value:  Size  Location     Type
  9260 ;;                  1    wreg      void 
  9261 ;; Registers used:
  9262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9263 ;; Tracked objects:
  9264 ;;		On entry : 0/0
  9265 ;;		On exit  : 0/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9268 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9269 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9270 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9271 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9272 ;;Total ram usage:       14 bytes
  9273 ;; Hardware stack levels used: 1
  9274 ;; Hardware stack levels required when called: 7
  9275 ;; This function calls:
  9276 ;;		_setMotorPWM
  9277 ;; This function is called by:
  9278 ;;		_move
  9279 ;;		_returnHome
  9280 ;;		_lostReturnHome
  9281 ;;		_calibration
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285                           	psect	text33
  9286   003BF8                     __ptext33:
  9287                           	callstack 0
  9288   003BF8                     _turnLeft:
  9289                           	callstack 22
  9290   003BF8                     
  9291                           ;dc_motor.c: 368: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 369: {;dc_motor.c: 370:     mL->dire
      +                          ction = 0;
  9292   003BF8  EE20 F001          	lfsr	2,1
  9293   003BFC  501F               	movf	turnLeft@mL^0,w,c
  9294   003BFE  26D9               	addwf	fsr2l,f,c
  9295   003C00  5020               	movf	(turnLeft@mL+1)^0,w,c
  9296   003C02  22DA               	addwfc	fsr2h,f,c
  9297   003C04  6ADF               	clrf	indf2,c
  9298                           
  9299                           ;dc_motor.c: 371:     mR->direction = 1;
  9300   003C06  EE20 F001          	lfsr	2,1
  9301   003C0A  5021               	movf	turnLeft@mR^0,w,c
  9302   003C0C  26D9               	addwf	fsr2l,f,c
  9303   003C0E  5022               	movf	(turnLeft@mR+1)^0,w,c
  9304   003C10  22DA               	addwfc	fsr2h,f,c
  9305   003C12  0E01               	movlw	1
  9306   003C14  6EDF               	movwf	indf2,c
  9307   003C16                     
  9308                           ;dc_motor.c: 372:     int i;;dc_motor.c: 373:     int cur_power;;dc_motor.c: 374:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  9309   003C16  0E00               	movlw	0
  9310   003C18  6E2C               	movwf	(turnLeft@cur_power+1)^0,c
  9311   003C1A  0E01               	movlw	1
  9312   003C1C  6E2B               	movwf	turnLeft@cur_power^0,c
  9313   003C1E  EF5A  F01E         	goto	l4292
  9314   003C22                     l4278:
  9315                           
  9316                           ;dc_motor.c: 375:         mL->power = cur_power+mL->compensation;
  9317   003C22  EE20 F009          	lfsr	2,9
  9318   003C26  501F               	movf	turnLeft@mL^0,w,c
  9319   003C28  26D9               	addwf	fsr2l,f,c
  9320   003C2A  5020               	movf	(turnLeft@mL+1)^0,w,c
  9321   003C2C  22DA               	addwfc	fsr2h,f,c
  9322   003C2E  50DF               	movf	indf2,w,c
  9323   003C30  242B               	addwf	turnLeft@cur_power^0,w,c
  9324   003C32  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  9325   003C36  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  9326   003C3A  6EDF               	movwf	indf2,c
  9327                           
  9328                           ;dc_motor.c: 376:         mR->power = cur_power+mR->compensation;
  9329   003C3C  EE20 F009          	lfsr	2,9
  9330   003C40  5021               	movf	turnLeft@mR^0,w,c
  9331   003C42  26D9               	addwf	fsr2l,f,c
  9332   003C44  5022               	movf	(turnLeft@mR+1)^0,w,c
  9333   003C46  22DA               	addwfc	fsr2h,f,c
  9334   003C48  50DF               	movf	indf2,w,c
  9335   003C4A  242B               	addwf	turnLeft@cur_power^0,w,c
  9336   003C4C  C021  FFD9         	movff	turnLeft@mR,fsr2l
  9337   003C50  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  9338   003C54  6EDF               	movwf	indf2,c
  9339   003C56                     
  9340                           ;dc_motor.c: 377:         setMotorPWM(mL);
  9341   003C56  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  9342   003C5A  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9343   003C5E  ECE6  F01E         	call	_setMotorPWM	;wreg free
  9344   003C62                     
  9345                           ;dc_motor.c: 378:         setMotorPWM(mR);
  9346   003C62  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  9347   003C66  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9348   003C6A  ECE6  F01E         	call	_setMotorPWM	;wreg free
  9349   003C6E                     
  9350                           ;dc_motor.c: 379:         for (i=0;i<turnRamp;i++) {
  9351   003C6E  0E00               	movlw	0
  9352   003C70  6E2A               	movwf	(turnLeft@i+1)^0,c
  9353   003C72  0E00               	movlw	0
  9354   003C74  6E29               	movwf	turnLeft@i^0,c
  9355   003C76  EF46  F01E         	goto	l623
  9356   003C7A                     l4286:
  9357                           
  9358                           ;dc_motor.c: 380:             _delay((unsigned long)((10)*(64000000/4000.0)));
  9359   003C7A  0ED0               	movlw	208
  9360   003C7C  6E26               	movwf	??_turnLeft^0,c
  9361   003C7E  0ECA               	movlw	202
  9362   003C80                     u5797:
  9363   003C80  2EE8               	decfsz	wreg,f,c
  9364   003C82  D7FE               	bra	u5797
  9365   003C84  2E26               	decfsz	??_turnLeft^0,f,c
  9366   003C86  D7FC               	bra	u5797
  9367   003C88                     
  9368                           ;dc_motor.c: 381:         }
  9369   003C88  4A29               	infsnz	turnLeft@i^0,f,c
  9370   003C8A  2A2A               	incf	(turnLeft@i+1)^0,f,c
  9371   003C8C                     l623:
  9372   003C8C  5025               	movf	turnLeft@turnRamp^0,w,c
  9373   003C8E  6E26               	movwf	??_turnLeft^0,c
  9374   003C90  6A27               	clrf	(??_turnLeft+1)^0,c
  9375   003C92  5026               	movf	??_turnLeft^0,w,c
  9376   003C94  5C29               	subwf	turnLeft@i^0,w,c
  9377   003C96  502A               	movf	(turnLeft@i+1)^0,w,c
  9378   003C98  0A80               	xorlw	128
  9379   003C9A  6E28               	movwf	(??_turnLeft+2)^0,c
  9380   003C9C  5027               	movf	(??_turnLeft+1)^0,w,c
  9381   003C9E  0A80               	xorlw	128
  9382   003CA0  5828               	subwfb	(??_turnLeft+2)^0,w,c
  9383   003CA2  A0D8               	btfss	status,0,c
  9384   003CA4  EF56  F01E         	goto	u3561
  9385   003CA8  EF58  F01E         	goto	u3560
  9386   003CAC                     u3561:
  9387   003CAC  EF3D  F01E         	goto	l4286
  9388   003CB0                     u3560:
  9389   003CB0                     
  9390                           ;dc_motor.c: 382:     }
  9391   003CB0  4A2B               	infsnz	turnLeft@cur_power^0,f,c
  9392   003CB2  2A2C               	incf	(turnLeft@cur_power+1)^0,f,c
  9393   003CB4                     l4292:
  9394   003CB4  5023               	movf	turnLeft@turnSpeed^0,w,c
  9395   003CB6  6E26               	movwf	??_turnLeft^0,c
  9396   003CB8  6A27               	clrf	(??_turnLeft+1)^0,c
  9397   003CBA  502B               	movf	turnLeft@cur_power^0,w,c
  9398   003CBC  5C26               	subwf	??_turnLeft^0,w,c
  9399   003CBE  5027               	movf	(??_turnLeft+1)^0,w,c
  9400   003CC0  0A80               	xorlw	128
  9401   003CC2  6E28               	movwf	(??_turnLeft+2)^0,c
  9402   003CC4  502C               	movf	(turnLeft@cur_power+1)^0,w,c
  9403   003CC6  0A80               	xorlw	128
  9404   003CC8  5828               	subwfb	(??_turnLeft+2)^0,w,c
  9405   003CCA  B0D8               	btfsc	status,0,c
  9406   003CCC  EF6A  F01E         	goto	u3571
  9407   003CD0  EF6C  F01E         	goto	u3570
  9408   003CD4                     u3571:
  9409   003CD4  EF11  F01E         	goto	l4278
  9410   003CD8                     u3570:
  9411   003CD8                     
  9412                           ;dc_motor.c: 384:     for (i=0;i<turnDuration;i++) {
  9413   003CD8  0E00               	movlw	0
  9414   003CDA  6E2A               	movwf	(turnLeft@i+1)^0,c
  9415   003CDC  0E00               	movlw	0
  9416   003CDE  6E29               	movwf	turnLeft@i^0,c
  9417   003CE0  EF7B  F01E         	goto	l627
  9418   003CE4                     l4296:
  9419                           
  9420                           ;dc_motor.c: 385:             _delay((unsigned long)((10)*(64000000/4000.0)));
  9421   003CE4  0ED0               	movlw	208
  9422   003CE6  6E26               	movwf	??_turnLeft^0,c
  9423   003CE8  0ECA               	movlw	202
  9424   003CEA                     u5807:
  9425   003CEA  2EE8               	decfsz	wreg,f,c
  9426   003CEC  D7FE               	bra	u5807
  9427   003CEE  2E26               	decfsz	??_turnLeft^0,f,c
  9428   003CF0  D7FC               	bra	u5807
  9429   003CF2                     
  9430                           ;dc_motor.c: 386:         }
  9431   003CF2  4A29               	infsnz	turnLeft@i^0,f,c
  9432   003CF4  2A2A               	incf	(turnLeft@i+1)^0,f,c
  9433   003CF6                     l627:
  9434   003CF6  5024               	movf	turnLeft@turnDuration^0,w,c
  9435   003CF8  6E26               	movwf	??_turnLeft^0,c
  9436   003CFA  6A27               	clrf	(??_turnLeft+1)^0,c
  9437   003CFC  5026               	movf	??_turnLeft^0,w,c
  9438   003CFE  5C29               	subwf	turnLeft@i^0,w,c
  9439   003D00  502A               	movf	(turnLeft@i+1)^0,w,c
  9440   003D02  0A80               	xorlw	128
  9441   003D04  6E28               	movwf	(??_turnLeft+2)^0,c
  9442   003D06  5027               	movf	(??_turnLeft+1)^0,w,c
  9443   003D08  0A80               	xorlw	128
  9444   003D0A  5828               	subwfb	(??_turnLeft+2)^0,w,c
  9445   003D0C  A0D8               	btfss	status,0,c
  9446   003D0E  EF8B  F01E         	goto	u3581
  9447   003D12  EF8D  F01E         	goto	u3580
  9448   003D16                     u3581:
  9449   003D16  EF72  F01E         	goto	l4296
  9450   003D1A                     u3580:
  9451   003D1A                     
  9452                           ;dc_motor.c: 388:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  9453   003D1A  C023  F02B         	movff	turnLeft@turnSpeed,turnLeft@cur_power
  9454   003D1E  6A2C               	clrf	(turnLeft@cur_power+1)^0,c
  9455   003D20                     l4300:
  9456   003D20  BE2C               	btfsc	(turnLeft@cur_power+1)^0,7,c
  9457   003D22  EF97  F01E         	goto	u3590
  9458   003D26  EF95  F01E         	goto	u3591
  9459   003D2A                     u3591:
  9460   003D2A  EF99  F01E         	goto	l4304
  9461   003D2E                     u3590:
  9462   003D2E  EFE5  F01E         	goto	l635
  9463   003D32                     l4304:
  9464                           
  9465                           ;dc_motor.c: 389:         mL->power = cur_power+mL->compensation;
  9466   003D32  EE20 F009          	lfsr	2,9
  9467   003D36  501F               	movf	turnLeft@mL^0,w,c
  9468   003D38  26D9               	addwf	fsr2l,f,c
  9469   003D3A  5020               	movf	(turnLeft@mL+1)^0,w,c
  9470   003D3C  22DA               	addwfc	fsr2h,f,c
  9471   003D3E  50DF               	movf	indf2,w,c
  9472   003D40  242B               	addwf	turnLeft@cur_power^0,w,c
  9473   003D42  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  9474   003D46  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  9475   003D4A  6EDF               	movwf	indf2,c
  9476                           
  9477                           ;dc_motor.c: 390:         mR->power = cur_power+mR->compensation;
  9478   003D4C  EE20 F009          	lfsr	2,9
  9479   003D50  5021               	movf	turnLeft@mR^0,w,c
  9480   003D52  26D9               	addwf	fsr2l,f,c
  9481   003D54  5022               	movf	(turnLeft@mR+1)^0,w,c
  9482   003D56  22DA               	addwfc	fsr2h,f,c
  9483   003D58  50DF               	movf	indf2,w,c
  9484   003D5A  242B               	addwf	turnLeft@cur_power^0,w,c
  9485   003D5C  C021  FFD9         	movff	turnLeft@mR,fsr2l
  9486   003D60  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  9487   003D64  6EDF               	movwf	indf2,c
  9488   003D66                     
  9489                           ;dc_motor.c: 391:         setMotorPWM(mL);
  9490   003D66  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  9491   003D6A  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9492   003D6E  ECE6  F01E         	call	_setMotorPWM	;wreg free
  9493   003D72                     
  9494                           ;dc_motor.c: 392:         setMotorPWM(mR);
  9495   003D72  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  9496   003D76  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9497   003D7A  ECE6  F01E         	call	_setMotorPWM	;wreg free
  9498   003D7E                     
  9499                           ;dc_motor.c: 393:         for (i=0;i<turnRamp;i++) {
  9500   003D7E  0E00               	movlw	0
  9501   003D80  6E2A               	movwf	(turnLeft@i+1)^0,c
  9502   003D82  0E00               	movlw	0
  9503   003D84  6E29               	movwf	turnLeft@i^0,c
  9504   003D86  EFCE  F01E         	goto	l632
  9505   003D8A                     l4312:
  9506                           
  9507                           ;dc_motor.c: 394:             _delay((unsigned long)((10)*(64000000/4000.0)));
  9508   003D8A  0ED0               	movlw	208
  9509   003D8C  6E26               	movwf	??_turnLeft^0,c
  9510   003D8E  0ECA               	movlw	202
  9511   003D90                     u5817:
  9512   003D90  2EE8               	decfsz	wreg,f,c
  9513   003D92  D7FE               	bra	u5817
  9514   003D94  2E26               	decfsz	??_turnLeft^0,f,c
  9515   003D96  D7FC               	bra	u5817
  9516   003D98                     
  9517                           ;dc_motor.c: 395:         }
  9518   003D98  4A29               	infsnz	turnLeft@i^0,f,c
  9519   003D9A  2A2A               	incf	(turnLeft@i+1)^0,f,c
  9520   003D9C                     l632:
  9521   003D9C  5025               	movf	turnLeft@turnRamp^0,w,c
  9522   003D9E  6E26               	movwf	??_turnLeft^0,c
  9523   003DA0  6A27               	clrf	(??_turnLeft+1)^0,c
  9524   003DA2  5026               	movf	??_turnLeft^0,w,c
  9525   003DA4  5C29               	subwf	turnLeft@i^0,w,c
  9526   003DA6  502A               	movf	(turnLeft@i+1)^0,w,c
  9527   003DA8  0A80               	xorlw	128
  9528   003DAA  6E28               	movwf	(??_turnLeft+2)^0,c
  9529   003DAC  5027               	movf	(??_turnLeft+1)^0,w,c
  9530   003DAE  0A80               	xorlw	128
  9531   003DB0  5828               	subwfb	(??_turnLeft+2)^0,w,c
  9532   003DB2  A0D8               	btfss	status,0,c
  9533   003DB4  EFDE  F01E         	goto	u3601
  9534   003DB8  EFE0  F01E         	goto	u3600
  9535   003DBC                     u3601:
  9536   003DBC  EFC5  F01E         	goto	l4312
  9537   003DC0                     u3600:
  9538   003DC0                     
  9539                           ;dc_motor.c: 396:     }
  9540   003DC0  062B               	decf	turnLeft@cur_power^0,f,c
  9541   003DC2  A0D8               	btfss	status,0,c
  9542   003DC4  062C               	decf	(turnLeft@cur_power+1)^0,f,c
  9543   003DC6  EF90  F01E         	goto	l4300
  9544   003DCA                     l635:
  9545   003DCA  0012               	return		;funcret
  9546   003DCC                     __end_of_turnLeft:
  9547                           	callstack 0
  9548                           
  9549 ;; *************** function _setMotorPWM *****************
  9550 ;; Defined at:
  9551 ;;		line 68 in file "dc_motor.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;  m               2   24[COMRAM] PTR struct DC_motor
  9554 ;;		 -> main@motorR(10), main@motorL(10), 
  9555 ;; Auto vars:     Size  Location     Type
  9556 ;;  negDuty         1   29[COMRAM] unsigned char 
  9557 ;;  posDuty         1   28[COMRAM] unsigned char 
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  1    wreg      void 
  9560 ;; Registers used:
  9561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9568 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9570 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9571 ;;Total ram usage:        6 bytes
  9572 ;; Hardware stack levels used: 1
  9573 ;; Hardware stack levels required when called: 6
  9574 ;; This function calls:
  9575 ;;		___lwdiv
  9576 ;;		___wmul
  9577 ;; This function is called by:
  9578 ;;		_stop
  9579 ;;		_turnLeft
  9580 ;;		_turnRight
  9581 ;;		_fullSpeedAhead
  9582 ;;		_reverseOneSquare
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           	psect	text34
  9587   003DCC                     __ptext34:
  9588                           	callstack 0
  9589   003DCC                     _setMotorPWM:
  9590                           	callstack 23
  9591   003DCC                     
  9592                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  9593   003DCC  EE20 F002          	lfsr	2,2
  9594   003DD0  5019               	movf	setMotorPWM@m^0,w,c
  9595   003DD2  26D9               	addwf	fsr2l,f,c
  9596   003DD4  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9597   003DD6  22DA               	addwfc	fsr2h,f,c
  9598   003DD8  50DF               	movf	indf2,w,c
  9599   003DDA  B4D8               	btfsc	status,2,c
  9600   003DDC  EFF2  F01E         	goto	u3411
  9601   003DE0  EFF4  F01E         	goto	u3410
  9602   003DE4                     u3411:
  9603   003DE4  EF28  F01F         	goto	l4132
  9604   003DE8                     u3410:
  9605   003DE8                     
  9606                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  9607   003DE8  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  9608   003DEC  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9609   003DF0  50DF               	movf	indf2,w,c
  9610   003DF2  6E1B               	movwf	??_setMotorPWM^0,c
  9611   003DF4  501B               	movf	??_setMotorPWM^0,w,c
  9612   003DF6  6E0C               	movwf	___wmul@multiplier^0,c
  9613   003DF8  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  9614   003DFA  EE20 F003          	lfsr	2,3
  9615   003DFE  5019               	movf	setMotorPWM@m^0,w,c
  9616   003E00  26D9               	addwf	fsr2l,f,c
  9617   003E02  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9618   003E04  22DA               	addwfc	fsr2h,f,c
  9619   003E06  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  9620   003E0A  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  9621   003E0E  EC2C  F024         	call	___wmul	;wreg free
  9622   003E12  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  9623   003E16  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  9624   003E1A  0E00               	movlw	0
  9625   003E1C  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  9626   003E1E  0E64               	movlw	100
  9627   003E20  6E14               	movwf	___lwdiv@divisor^0,c
  9628   003E22  EC8E  F022         	call	___lwdiv	;wreg free
  9629   003E26  EE20 F003          	lfsr	2,3
  9630   003E2A  5019               	movf	setMotorPWM@m^0,w,c
  9631   003E2C  26D9               	addwf	fsr2l,f,c
  9632   003E2E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9633   003E30  22DA               	addwfc	fsr2h,f,c
  9634   003E32  50DF               	movf	indf2,w,c
  9635   003E34  6E1C               	movwf	(??_setMotorPWM+1)^0,c
  9636   003E36  5012               	movf	?___lwdiv^0,w,c
  9637   003E38  5C1C               	subwf	(??_setMotorPWM+1)^0,w,c
  9638   003E3A  6E1D               	movwf	setMotorPWM@posDuty^0,c
  9639   003E3C                     
  9640                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  9641   003E3C  EE20 F003          	lfsr	2,3
  9642   003E40  5019               	movf	setMotorPWM@m^0,w,c
  9643   003E42  26D9               	addwf	fsr2l,f,c
  9644   003E44  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9645   003E46  22DA               	addwfc	fsr2h,f,c
  9646   003E48  50DF               	movf	indf2,w,c
  9647   003E4A  6E1E               	movwf	setMotorPWM@negDuty^0,c
  9648                           
  9649                           ;dc_motor.c: 75:     }
  9650   003E4C  EF4B  F01F         	goto	l4136
  9651   003E50                     l4132:
  9652                           
  9653                           ;dc_motor.c: 77:         posDuty=0;
  9654   003E50  0E00               	movlw	0
  9655   003E52  6E1D               	movwf	setMotorPWM@posDuty^0,c
  9656   003E54                     
  9657                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9658   003E54  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  9659   003E58  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9660   003E5C  50DF               	movf	indf2,w,c
  9661   003E5E  6E1B               	movwf	??_setMotorPWM^0,c
  9662   003E60  501B               	movf	??_setMotorPWM^0,w,c
  9663   003E62  6E0C               	movwf	___wmul@multiplier^0,c
  9664   003E64  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  9665   003E66  EE20 F003          	lfsr	2,3
  9666   003E6A  5019               	movf	setMotorPWM@m^0,w,c
  9667   003E6C  26D9               	addwf	fsr2l,f,c
  9668   003E6E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9669   003E70  22DA               	addwfc	fsr2h,f,c
  9670   003E72  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  9671   003E76  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  9672   003E7A  EC2C  F024         	call	___wmul	;wreg free
  9673   003E7E  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  9674   003E82  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  9675   003E86  0E00               	movlw	0
  9676   003E88  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  9677   003E8A  0E64               	movlw	100
  9678   003E8C  6E14               	movwf	___lwdiv@divisor^0,c
  9679   003E8E  EC8E  F022         	call	___lwdiv	;wreg free
  9680   003E92  5012               	movf	?___lwdiv^0,w,c
  9681   003E94  6E1E               	movwf	setMotorPWM@negDuty^0,c
  9682   003E96                     l4136:
  9683                           
  9684                           ;dc_motor.c: 81:     if (m->direction) {
  9685   003E96  EE20 F001          	lfsr	2,1
  9686   003E9A  5019               	movf	setMotorPWM@m^0,w,c
  9687   003E9C  26D9               	addwf	fsr2l,f,c
  9688   003E9E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9689   003EA0  22DA               	addwfc	fsr2h,f,c
  9690   003EA2  50DF               	movf	indf2,w,c
  9691   003EA4  B4D8               	btfsc	status,2,c
  9692   003EA6  EF57  F01F         	goto	u3421
  9693   003EAA  EF59  F01F         	goto	u3420
  9694   003EAE                     u3421:
  9695   003EAE  EF7B  F01F         	goto	l4140
  9696   003EB2                     u3420:
  9697   003EB2                     
  9698                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  9699   003EB2  EE20 F005          	lfsr	2,5
  9700   003EB6  5019               	movf	setMotorPWM@m^0,w,c
  9701   003EB8  26D9               	addwf	fsr2l,f,c
  9702   003EBA  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9703   003EBC  22DA               	addwfc	fsr2h,f,c
  9704   003EBE  CFDE F01B          	movff	postinc2,??_setMotorPWM
  9705   003EC2  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  9706   003EC6  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9707   003ECA  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9708   003ECE  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  9709                           
  9710                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  9711   003ED2  EE20 F007          	lfsr	2,7
  9712   003ED6  5019               	movf	setMotorPWM@m^0,w,c
  9713   003ED8  26D9               	addwf	fsr2l,f,c
  9714   003EDA  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9715   003EDC  22DA               	addwfc	fsr2h,f,c
  9716   003EDE  CFDE F01B          	movff	postinc2,??_setMotorPWM
  9717   003EE2  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  9718   003EE6  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9719   003EEA  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9720   003EEE  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  9721                           
  9722                           ;dc_motor.c: 84:     } else {
  9723   003EF2  EF9B  F01F         	goto	l541
  9724   003EF6                     l4140:
  9725                           
  9726                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  9727   003EF6  EE20 F005          	lfsr	2,5
  9728   003EFA  5019               	movf	setMotorPWM@m^0,w,c
  9729   003EFC  26D9               	addwf	fsr2l,f,c
  9730   003EFE  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9731   003F00  22DA               	addwfc	fsr2h,f,c
  9732   003F02  CFDE F01B          	movff	postinc2,??_setMotorPWM
  9733   003F06  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  9734   003F0A  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9735   003F0E  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9736   003F12  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  9737                           
  9738                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  9739   003F16  EE20 F007          	lfsr	2,7
  9740   003F1A  5019               	movf	setMotorPWM@m^0,w,c
  9741   003F1C  26D9               	addwf	fsr2l,f,c
  9742   003F1E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9743   003F20  22DA               	addwfc	fsr2h,f,c
  9744   003F22  CFDE F01B          	movff	postinc2,??_setMotorPWM
  9745   003F26  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  9746   003F2A  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9747   003F2E  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9748   003F32  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  9749   003F36                     l541:
  9750   003F36  0012               	return		;funcret
  9751   003F38                     __end_of_setMotorPWM:
  9752                           	callstack 0
  9753                           
  9754 ;; *************** function ___wmul *****************
  9755 ;; Defined at:
  9756 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;  multiplier      2   11[COMRAM] unsigned int 
  9759 ;;  multiplicand    2   13[COMRAM] unsigned int 
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;  product         2   15[COMRAM] unsigned int 
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  2   11[COMRAM] unsigned int 
  9764 ;; Registers used:
  9765 ;;		wreg, status,2, status,0, prodl, prodh
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9771 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9772 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9774 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9775 ;;Total ram usage:        6 bytes
  9776 ;; Hardware stack levels used: 1
  9777 ;; Hardware stack levels required when called: 5
  9778 ;; This function calls:
  9779 ;;		Nothing
  9780 ;; This function is called by:
  9781 ;;		_setMotorPWM
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text35
  9786   004858                     __ptext35:
  9787                           	callstack 0
  9788   004858                     ___wmul:
  9789                           	callstack 23
  9790   004858  500C               	movf	___wmul@multiplier^0,w,c
  9791   00485A  020E               	mulwf	___wmul@multiplicand^0,c
  9792   00485C  CFF3 F010          	movff	prodl,___wmul@product
  9793   004860  CFF4 F011          	movff	prodh,___wmul@product+1
  9794   004864  500C               	movf	___wmul@multiplier^0,w,c
  9795   004866  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  9796   004868  50F3               	movf	243,w,c
  9797   00486A  2611               	addwf	(___wmul@product+1)^0,f,c
  9798   00486C  500D               	movf	(___wmul@multiplier+1)^0,w,c
  9799   00486E  020E               	mulwf	___wmul@multiplicand^0,c
  9800   004870  50F3               	movf	243,w,c
  9801   004872  2611               	addwf	(___wmul@product+1)^0,f,c
  9802   004874  C010  F00C         	movff	___wmul@product,?___wmul
  9803   004878  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  9804   00487C  0012               	return		;funcret
  9805   00487E                     __end_of___wmul:
  9806                           	callstack 0
  9807                           
  9808 ;; *************** function ___lwdiv *****************
  9809 ;; Defined at:
  9810 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;  dividend        2   17[COMRAM] unsigned int 
  9813 ;;  divisor         2   19[COMRAM] unsigned int 
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;  quotient        2   22[COMRAM] unsigned int 
  9816 ;;  counter         1   21[COMRAM] unsigned char 
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  2   17[COMRAM] unsigned int 
  9819 ;; Registers used:
  9820 ;;		wreg, status,2, status,0
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9830 ;;Total ram usage:        7 bytes
  9831 ;; Hardware stack levels used: 1
  9832 ;; Hardware stack levels required when called: 5
  9833 ;; This function calls:
  9834 ;;		Nothing
  9835 ;; This function is called by:
  9836 ;;		_setMotorPWM
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text36
  9841   00451C                     __ptext36:
  9842                           	callstack 0
  9843   00451C                     ___lwdiv:
  9844                           	callstack 23
  9845   00451C  0E00               	movlw	0
  9846   00451E  6E18               	movwf	(___lwdiv@quotient+1)^0,c
  9847   004520  0E00               	movlw	0
  9848   004522  6E17               	movwf	___lwdiv@quotient^0,c
  9849   004524  5014               	movf	___lwdiv@divisor^0,w,c
  9850   004526  1015               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9851   004528  B4D8               	btfsc	status,2,c
  9852   00452A  EF99  F022         	goto	u3381
  9853   00452E  EF9B  F022         	goto	u3380
  9854   004532                     u3381:
  9855   004532  EFC3  F022         	goto	l1204
  9856   004536                     u3380:
  9857   004536  0E01               	movlw	1
  9858   004538  6E16               	movwf	___lwdiv@counter^0,c
  9859   00453A  EFA3  F022         	goto	l4100
  9860   00453E                     l4098:
  9861   00453E  90D8               	bcf	status,0,c
  9862   004540  3614               	rlcf	___lwdiv@divisor^0,f,c
  9863   004542  3615               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9864   004544  2A16               	incf	___lwdiv@counter^0,f,c
  9865   004546                     l4100:
  9866   004546  AE15               	btfss	(___lwdiv@divisor+1)^0,7,c
  9867   004548  EFA8  F022         	goto	u3391
  9868   00454C  EFAA  F022         	goto	u3390
  9869   004550                     u3391:
  9870   004550  EF9F  F022         	goto	l4098
  9871   004554                     u3390:
  9872   004554                     l4102:
  9873   004554  90D8               	bcf	status,0,c
  9874   004556  3617               	rlcf	___lwdiv@quotient^0,f,c
  9875   004558  3618               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9876   00455A  5014               	movf	___lwdiv@divisor^0,w,c
  9877   00455C  5C12               	subwf	___lwdiv@dividend^0,w,c
  9878   00455E  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  9879   004560  5813               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9880   004562  A0D8               	btfss	status,0,c
  9881   004564  EFB6  F022         	goto	u3401
  9882   004568  EFB8  F022         	goto	u3400
  9883   00456C                     u3401:
  9884   00456C  EFBD  F022         	goto	l4110
  9885   004570                     u3400:
  9886   004570  5014               	movf	___lwdiv@divisor^0,w,c
  9887   004572  5E12               	subwf	___lwdiv@dividend^0,f,c
  9888   004574  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  9889   004576  5A13               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9890   004578  8017               	bsf	___lwdiv@quotient^0,0,c
  9891   00457A                     l4110:
  9892   00457A  90D8               	bcf	status,0,c
  9893   00457C  3215               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9894   00457E  3214               	rrcf	___lwdiv@divisor^0,f,c
  9895   004580  2E16               	decfsz	___lwdiv@counter^0,f,c
  9896   004582  EFAA  F022         	goto	l4102
  9897   004586                     l1204:
  9898   004586  C017  F012         	movff	___lwdiv@quotient,?___lwdiv
  9899   00458A  C018  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9900   00458E  0012               	return		;funcret
  9901   004590                     __end_of___lwdiv:
  9902                           	callstack 0
  9903                           
  9904 ;; *************** function _batteryLevel *****************
  9905 ;; Defined at:
  9906 ;;		line 6 in file "battery.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;		None
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;  batteryQuart    1   20[COMRAM] unsigned char 
  9911 ;;  batteryVolta    1   19[COMRAM] unsigned char 
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  1    wreg      void 
  9914 ;; Registers used:
  9915 ;;		wreg, status,2, status,0, cstack
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9922 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9924 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9925 ;;Total ram usage:        2 bytes
  9926 ;; Hardware stack levels used: 1
  9927 ;; Hardware stack levels required when called: 6
  9928 ;; This function calls:
  9929 ;;		_ADC_getval
  9930 ;;		_ADC_init
  9931 ;;		___awdiv
  9932 ;; This function is called by:
  9933 ;;		_main
  9934 ;; This function uses a non-reentrant model
  9935 ;;
  9936                           
  9937                           	psect	text37
  9938   004660                     __ptext37:
  9939                           	callstack 0
  9940   004660                     _batteryLevel:
  9941                           	callstack 24
  9942   004660                     
  9943                           ;battery.c: 7:     ADC_init();
  9944   004660  ECB6  F024         	call	_ADC_init	;wreg free
  9945                           
  9946                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
  9947   004664  ECC3  F024         	call	_ADC_getval	;wreg free
  9948   004668  6E14               	movwf	batteryLevel@batteryVoltage^0,c
  9949   00466A                     
  9950                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
  9951   00466A  C014  F00C         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
  9952   00466E  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  9953   004670  0E00               	movlw	0
  9954   004672  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  9955   004674  0E18               	movlw	24
  9956   004676  6E0E               	movwf	___awdiv@divisor^0,c
  9957   004678  EC18  F021         	call	___awdiv	;wreg free
  9958   00467C  500C               	movf	?___awdiv^0,w,c
  9959   00467E  6E15               	movwf	batteryLevel@batteryQuarter^0,c
  9960   004680                     
  9961                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
  9962   004680  A215               	btfss	batteryLevel@batteryQuarter^0,1,c
  9963   004682  EF45  F023         	goto	u4021
  9964   004686  EF47  F023         	goto	u4020
  9965   00468A                     u4021:
  9966   00468A  EF4A  F023         	goto	l455
  9967   00468E                     u4020:
  9968   00468E  8E7C               	bsf	124,7,c	;volatile
  9969   004690  EF4B  F023         	goto	l456
  9970   004694                     l455:
  9971   004694  9E7C               	bcf	124,7,c	;volatile
  9972   004696                     l456:
  9973                           
  9974                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
  9975   004696  A015               	btfss	batteryLevel@batteryQuarter^0,0,c
  9976   004698  EF50  F023         	goto	u4031
  9977   00469C  EF52  F023         	goto	u4030
  9978   0046A0                     u4031:
  9979   0046A0  EF55  F023         	goto	l457
  9980   0046A4                     u4030:
  9981   0046A4  8680               	bsf	128,3,c	;volatile
  9982   0046A6  EF56  F023         	goto	l459
  9983   0046AA                     l457:
  9984   0046AA  9680               	bcf	128,3,c	;volatile
  9985   0046AC                     l459:
  9986   0046AC  0012               	return		;funcret
  9987   0046AE                     __end_of_batteryLevel:
  9988                           	callstack 0
  9989                           
  9990 ;; *************** function ___awdiv *****************
  9991 ;; Defined at:
  9992 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;  dividend        2   11[COMRAM] int 
  9995 ;;  divisor         2   13[COMRAM] int 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  quotient        2   17[COMRAM] int 
  9998 ;;  sign            1   16[COMRAM] unsigned char 
  9999 ;;  counter         1   15[COMRAM] unsigned char 
 10000 ;; Return value:  Size  Location     Type
 10001 ;;                  2   11[COMRAM] int 
 10002 ;; Registers used:
 10003 ;;		wreg, status,2, status,0
 10004 ;; Tracked objects:
 10005 ;;		On entry : 0/0
 10006 ;;		On exit  : 0/0
 10007 ;;		Unchanged: 0/0
 10008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10010 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10012 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10013 ;;Total ram usage:        8 bytes
 10014 ;; Hardware stack levels used: 1
 10015 ;; Hardware stack levels required when called: 5
 10016 ;; This function calls:
 10017 ;;		Nothing
 10018 ;; This function is called by:
 10019 ;;		_batteryLevel
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023                           	psect	text38
 10024   004230                     __ptext38:
 10025                           	callstack 0
 10026   004230                     ___awdiv:
 10027                           	callstack 24
 10028   004230  0E00               	movlw	0
 10029   004232  6E11               	movwf	___awdiv@sign^0,c
 10030   004234  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
 10031   004236  EF21  F021         	goto	u3960
 10032   00423A  EF1F  F021         	goto	u3961
 10033   00423E                     u3961:
 10034   00423E  EF27  F021         	goto	l4660
 10035   004242                     u3960:
 10036   004242  6C0E               	negf	___awdiv@divisor^0,c
 10037   004244  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
 10038   004246  B0D8               	btfsc	status,0,c
 10039   004248  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
 10040   00424A  0E01               	movlw	1
 10041   00424C  6E11               	movwf	___awdiv@sign^0,c
 10042   00424E                     l4660:
 10043   00424E  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
 10044   004250  EF2E  F021         	goto	u3970
 10045   004254  EF2C  F021         	goto	u3971
 10046   004258                     u3971:
 10047   004258  EF34  F021         	goto	l4666
 10048   00425C                     u3970:
 10049   00425C  6C0C               	negf	___awdiv@dividend^0,c
 10050   00425E  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
 10051   004260  B0D8               	btfsc	status,0,c
 10052   004262  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
 10053   004264  0E01               	movlw	1
 10054   004266  1A11               	xorwf	___awdiv@sign^0,f,c
 10055   004268                     l4666:
 10056   004268  0E00               	movlw	0
 10057   00426A  6E13               	movwf	(___awdiv@quotient+1)^0,c
 10058   00426C  0E00               	movlw	0
 10059   00426E  6E12               	movwf	___awdiv@quotient^0,c
 10060   004270  500E               	movf	___awdiv@divisor^0,w,c
 10061   004272  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
 10062   004274  B4D8               	btfsc	status,2,c
 10063   004276  EF3F  F021         	goto	u3981
 10064   00427A  EF41  F021         	goto	u3980
 10065   00427E                     u3981:
 10066   00427E  EF69  F021         	goto	l4688
 10067   004282                     u3980:
 10068   004282  0E01               	movlw	1
 10069   004284  6E10               	movwf	___awdiv@counter^0,c
 10070   004286  EF49  F021         	goto	l4674
 10071   00428A                     l4672:
 10072   00428A  90D8               	bcf	status,0,c
 10073   00428C  360E               	rlcf	___awdiv@divisor^0,f,c
 10074   00428E  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
 10075   004290  2A10               	incf	___awdiv@counter^0,f,c
 10076   004292                     l4674:
 10077   004292  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
 10078   004294  EF4E  F021         	goto	u3991
 10079   004298  EF50  F021         	goto	u3990
 10080   00429C                     u3991:
 10081   00429C  EF45  F021         	goto	l4672
 10082   0042A0                     u3990:
 10083   0042A0                     l4676:
 10084   0042A0  90D8               	bcf	status,0,c
 10085   0042A2  3612               	rlcf	___awdiv@quotient^0,f,c
 10086   0042A4  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
 10087   0042A6  500E               	movf	___awdiv@divisor^0,w,c
 10088   0042A8  5C0C               	subwf	___awdiv@dividend^0,w,c
 10089   0042AA  500F               	movf	(___awdiv@divisor+1)^0,w,c
 10090   0042AC  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
 10091   0042AE  A0D8               	btfss	status,0,c
 10092   0042B0  EF5C  F021         	goto	u4001
 10093   0042B4  EF5E  F021         	goto	u4000
 10094   0042B8                     u4001:
 10095   0042B8  EF63  F021         	goto	l4684
 10096   0042BC                     u4000:
 10097   0042BC  500E               	movf	___awdiv@divisor^0,w,c
 10098   0042BE  5E0C               	subwf	___awdiv@dividend^0,f,c
 10099   0042C0  500F               	movf	(___awdiv@divisor+1)^0,w,c
 10100   0042C2  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
 10101   0042C4  8012               	bsf	___awdiv@quotient^0,0,c
 10102   0042C6                     l4684:
 10103   0042C6  90D8               	bcf	status,0,c
 10104   0042C8  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
 10105   0042CA  320E               	rrcf	___awdiv@divisor^0,f,c
 10106   0042CC  2E10               	decfsz	___awdiv@counter^0,f,c
 10107   0042CE  EF50  F021         	goto	l4676
 10108   0042D2                     l4688:
 10109   0042D2  5011               	movf	___awdiv@sign^0,w,c
 10110   0042D4  B4D8               	btfsc	status,2,c
 10111   0042D6  EF6F  F021         	goto	u4011
 10112   0042DA  EF71  F021         	goto	u4010
 10113   0042DE                     u4011:
 10114   0042DE  EF75  F021         	goto	l4692
 10115   0042E2                     u4010:
 10116   0042E2  6C12               	negf	___awdiv@quotient^0,c
 10117   0042E4  1E13               	comf	(___awdiv@quotient+1)^0,f,c
 10118   0042E6  B0D8               	btfsc	status,0,c
 10119   0042E8  2A13               	incf	(___awdiv@quotient+1)^0,f,c
 10120   0042EA                     l4692:
 10121   0042EA  C012  F00C         	movff	___awdiv@quotient,?___awdiv
 10122   0042EE  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
 10123   0042F2  0012               	return		;funcret
 10124   0042F4                     __end_of___awdiv:
 10125                           	callstack 0
 10126                           
 10127 ;; *************** function _ADC_init *****************
 10128 ;; Defined at:
 10129 ;;		line 9 in file "ADC.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;		None
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;		None
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1    wreg      void 
 10136 ;; Registers used:
 10137 ;;		wreg, status,2
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10147 ;;Total ram usage:        0 bytes
 10148 ;; Hardware stack levels used: 1
 10149 ;; Hardware stack levels required when called: 5
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_batteryLevel
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           	psect	text39
 10158   00496C                     __ptext39:
 10159                           	callstack 0
 10160   00496C                     _ADC_init:
 10161                           	callstack 24
 10162   00496C                     
 10163                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 10164   00496C  8C86               	bsf	134,6,c	;volatile
 10165                           
 10166                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 10167   00496E  010E               	movlb	14	; () banked
 10168   004970  8DB4               	bsf	180,6,b	;volatile
 10169                           
 10170                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 10171   004972  010F               	movlb	15	; () banked
 10172   004974  9958               	bcf	88,4,b	;volatile
 10173   004976                     
 10174                           ; BSR set to: 15
 10175                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 10176   004976  0EFC               	movlw	-4
 10177   004978  1758               	andwf	88,f,b	;volatile
 10178                           
 10179                           ;ADC.c: 17:     ADPCH=0b101110;
 10180   00497A  0E2E               	movlw	46
 10181   00497C  6F5F               	movwf	95,b	;volatile
 10182   00497E                     
 10183                           ; BSR set to: 15
 10184                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 10185   00497E  9460               	bcf	96,2,c	;volatile
 10186   004980                     
 10187                           ; BSR set to: 15
 10188                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 10189   004980  8860               	bsf	96,4,c	;volatile
 10190   004982                     
 10191                           ; BSR set to: 15
 10192                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 10193   004982  8E60               	bsf	96,7,c	;volatile
 10194   004984                     
 10195                           ; BSR set to: 15
 10196   004984  0012               	return		;funcret
 10197   004986                     __end_of_ADC_init:
 10198                           	callstack 0
 10199                           
 10200 ;; *************** function _ADC_getval *****************
 10201 ;; Defined at:
 10202 ;;		line 23 in file "ADC.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;		None
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;  tmpval          1   11[COMRAM] unsigned char 
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  1    wreg      unsigned char 
 10209 ;; Registers used:
 10210 ;;		wreg, status,2
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10220 ;;Total ram usage:        1 bytes
 10221 ;; Hardware stack levels used: 1
 10222 ;; Hardware stack levels required when called: 5
 10223 ;; This function calls:
 10224 ;;		Nothing
 10225 ;; This function is called by:
 10226 ;;		_batteryLevel
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           	psect	text40
 10231   004986                     __ptext40:
 10232                           	callstack 0
 10233   004986                     _ADC_getval:
 10234                           	callstack 24
 10235   004986                     
 10236                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
 10237   004986  8060               	bsf	96,0,c	;volatile
 10238   004988                     l441:
 10239   004988  B060               	btfsc	96,0,c	;volatile
 10240   00498A  EFC9  F024         	goto	u3851
 10241   00498E  EFCB  F024         	goto	u3850
 10242   004992                     u3851:
 10243   004992  EFC4  F024         	goto	l441
 10244   004996                     u3850:
 10245   004996                     
 10246                           ;ADC.c: 31:     tmpval = ADRESH;
 10247   004996  CF64 F00C          	movff	3940,ADC_getval@tmpval	;volatile
 10248   00499A                     
 10249                           ;ADC.c: 35:     return tmpval;
 10250   00499A  500C               	movf	ADC_getval@tmpval^0,w,c
 10251   00499C  0012               	return		;funcret
 10252   00499E                     __end_of_ADC_getval:
 10253                           	callstack 0
 10254                           
 10255 ;; *************** function _Timer0_init *****************
 10256 ;; Defined at:
 10257 ;;		line 7 in file "timers.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;		None
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;		None
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  1    wreg      void 
 10264 ;; Registers used:
 10265 ;;		wreg, status,2
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10275 ;;Total ram usage:        0 bytes
 10276 ;; Hardware stack levels used: 1
 10277 ;; Hardware stack levels required when called: 5
 10278 ;; This function calls:
 10279 ;;		Nothing
 10280 ;; This function is called by:
 10281 ;;		_main
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285                           	psect	text41
 10286   00490E                     __ptext41:
 10287                           	callstack 0
 10288   00490E                     _Timer0_init:
 10289                           	callstack 25
 10290   00490E                     
 10291                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 10292   00490E  50D6               	movf	214,w,c	;volatile
 10293   004910  0B1F               	andlw	-225
 10294   004912  0940               	iorlw	64
 10295   004914  6ED6               	movwf	214,c	;volatile
 10296   004916                     
 10297                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 10298   004916  88D6               	bsf	214,4,c	;volatile
 10299                           
 10300                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
 10301   004918  50D6               	movf	214,w,c	;volatile
 10302   00491A  0BF0               	andlw	-16
 10303   00491C  090B               	iorlw	11
 10304   00491E  6ED6               	movwf	214,c	;volatile
 10305   004920                     
 10306                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 10307   004920  88D5               	bsf	213,4,c	;volatile
 10308                           
 10309                           ;timers.c: 15:     TMR0H=0;
 10310   004922  0E00               	movlw	0
 10311   004924  6ED4               	movwf	212,c	;volatile
 10312                           
 10313                           ;timers.c: 16:     TMR0L=0;
 10314   004926  0E00               	movlw	0
 10315   004928  6ED3               	movwf	211,c	;volatile
 10316   00492A                     
 10317                           ;timers.c: 17:     T0CON0bits.T0EN=1;
 10318   00492A  8ED5               	bsf	213,7,c	;volatile
 10319   00492C  0012               	return		;funcret
 10320   00492E                     __end_of_Timer0_init:
 10321                           	callstack 0
 10322                           
 10323 ;; *************** function _Buggy_init *****************
 10324 ;; Defined at:
 10325 ;;		line 7 in file "buggysetup.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;		None
 10328 ;; Auto vars:     Size  Location     Type
 10329 ;;		None
 10330 ;; Return value:  Size  Location     Type
 10331 ;;                  1    wreg      void 
 10332 ;; Registers used:
 10333 ;;		None
 10334 ;; Tracked objects:
 10335 ;;		On entry : 0/0
 10336 ;;		On exit  : 0/0
 10337 ;;		Unchanged: 0/0
 10338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10343 ;;Total ram usage:        0 bytes
 10344 ;; Hardware stack levels used: 1
 10345 ;; Hardware stack levels required when called: 5
 10346 ;; This function calls:
 10347 ;;		Nothing
 10348 ;; This function is called by:
 10349 ;;		_main
 10350 ;; This function uses a non-reentrant model
 10351 ;;
 10352                           
 10353                           	psect	text42
 10354   004728                     __ptext42:
 10355                           	callstack 0
 10356   004728                     _Buggy_init:
 10357                           	callstack 25
 10358   004728                     
 10359                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
 10360   004728  9E7C               	bcf	124,7,c	;volatile
 10361                           
 10362                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
 10363   00472A  9E84               	bcf	132,7,c	;volatile
 10364                           
 10365                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
 10366   00472C  9680               	bcf	128,3,c	;volatile
 10367                           
 10368                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
 10369   00472E  9688               	bcf	136,3,c	;volatile
 10370                           
 10371                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
 10372   004730  8486               	bsf	134,2,c	;volatile
 10373                           
 10374                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
 10375   004732  010E               	movlb	14	; () banked
 10376   004734  95B4               	bcf	180,2,b	;volatile
 10377                           
 10378                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
 10379   004736  8686               	bsf	134,3,c	;volatile
 10380                           
 10381                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
 10382   004738  97B4               	bcf	180,3,b	;volatile
 10383                           
 10384                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
 10385   00473A  9280               	bcf	128,1,c	;volatile
 10386                           
 10387                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
 10388   00473C  9288               	bcf	136,1,c	;volatile
 10389                           
 10390                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
 10391   00473E  987C               	bcf	124,4,c	;volatile
 10392                           
 10393                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
 10394   004740  9884               	bcf	132,4,c	;volatile
 10395                           
 10396                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
 10397   004742  967C               	bcf	124,3,c	;volatile
 10398                           
 10399                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
 10400   004744  9684               	bcf	132,3,c	;volatile
 10401                           
 10402                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
 10403   004746  97A7               	bcf	167,3,b	;volatile
 10404                           
 10405                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
 10406   004748  9080               	bcf	128,0,c	;volatile
 10407                           
 10408                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
 10409   00474A  9088               	bcf	136,0,c	;volatile
 10410                           
 10411                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
 10412   00474C  907E               	bcf	126,0,c	;volatile
 10413                           
 10414                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
 10415   00474E  9086               	bcf	134,0,c	;volatile
 10416                           
 10417                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
 10418   004750  907F               	bcf	127,0,c	;volatile
 10419                           
 10420                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
 10421   004752  9087               	bcf	135,0,c	;volatile
 10422                           
 10423                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
 10424   004754  9E7D               	bcf	125,7,c	;volatile
 10425                           
 10426                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
 10427   004756  9E85               	bcf	133,7,c	;volatile
 10428                           
 10429                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
 10430   004758  9679               	bcf	121,3,c	;volatile
 10431                           
 10432                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
 10433   00475A  9681               	bcf	129,3,c	;volatile
 10434   00475C                     
 10435                           ; BSR set to: 14
 10436   00475C  0012               	return		;funcret
 10437   00475E                     __end_of_Buggy_init:
 10438                           	callstack 0
 10439                           
 10440 ;; *************** function _HighISR *****************
 10441 ;; Defined at:
 10442 ;;		line 33 in file "interrupts.c"
 10443 ;; Parameters:    Size  Location     Type
 10444 ;;		None
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;		None
 10447 ;; Return value:  Size  Location     Type
 10448 ;;                  1    wreg      void 
 10449 ;; Registers used:
 10450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10451 ;; Tracked objects:
 10452 ;;		On entry : 0/0
 10453 ;;		On exit  : 0/0
 10454 ;;		Unchanged: 0/0
 10455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10458 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10459 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10460 ;;Total ram usage:        2 bytes
 10461 ;; Hardware stack levels used: 1
 10462 ;; Hardware stack levels required when called: 4
 10463 ;; This function calls:
 10464 ;;		_getCharFromTxBuf
 10465 ;;		_isDataInTxBuf
 10466 ;;		_putCharToRxBuf
 10467 ;;		i2_color_clear_init_interrupts
 10468 ;; This function is called by:
 10469 ;;		Interrupt level 2
 10470 ;; This function uses a non-reentrant model
 10471 ;;
 10472                           
 10473                           	psect	intcode
 10474   000008                     __pintcode:
 10475                           	callstack 0
 10476   000008                     _HighISR:
 10477                           	callstack 21
 10478                           
 10479                           ; BSR set to: 14
 10480                           ;incstack = 0
 10481   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10482   00000A  CFD9 F00A          	movff	fsr2l,??_HighISR
 10483   00000E  CFDA F00B          	movff	fsr2h,??_HighISR+1
 10484   000012                     
 10485                           ;interrupts.c: 37:     if(PIR0bits.INT0IF){
 10486   000012  010E               	movlb	14	; () banked
 10487   000014  A133               	btfss	51,0,b	;volatile
 10488   000016  EF0F  F000         	goto	i2u329_41
 10489   00001A  EF11  F000         	goto	i2u329_40
 10490   00001E                     i2u329_41:
 10491   00001E  EF17  F000         	goto	i2l4046
 10492   000022                     i2u329_40:
 10493   000022                     
 10494                           ; BSR set to: 14
 10495                           ;interrupts.c: 38:         wall = 1;
 10496   000022  0E01               	movlw	1
 10497   000024  6E48               	movwf	_wall^0,c
 10498   000026                     
 10499                           ; BSR set to: 14
 10500                           ;interrupts.c: 39:         color_clear_init_interrupts();
 10501   000026  EC51  F022         	call	i2_color_clear_init_interrupts	;wreg free
 10502   00002A                     
 10503                           ;interrupts.c: 40:         PIR0bits.INT0IF = 0;
 10504   00002A  010E               	movlb	14	; () banked
 10505   00002C  9133               	bcf	51,0,b	;volatile
 10506   00002E                     i2l4046:
 10507                           
 10508                           ; BSR set to: 14
 10509                           ;interrupts.c: 47:     if(TMR0IF){
 10510   00002E  AB33               	btfss	51,5,b	;volatile
 10511   000030  EF1C  F000         	goto	i2u330_41
 10512   000034  EF1E  F000         	goto	i2u330_40
 10513   000038                     i2u330_41:
 10514   000038  EF21  F000         	goto	i2l4052
 10515   00003C                     i2u330_40:
 10516   00003C                     
 10517                           ; BSR set to: 14
 10518                           ;interrupts.c: 48:         lost = 1;
 10519   00003C  0E01               	movlw	1
 10520   00003E  6E47               	movwf	_lost^0,c
 10521   000040                     
 10522                           ; BSR set to: 14
 10523                           ;interrupts.c: 49:         TMR0IF=0;
 10524   000040  9B33               	bcf	51,5,b	;volatile
 10525   000042                     i2l4052:
 10526                           
 10527                           ; BSR set to: 14
 10528                           ;interrupts.c: 56:     if(PIR4bits.RC4IF){
 10529   000042  A737               	btfss	55,3,b	;volatile
 10530   000044  EF26  F000         	goto	i2u331_41
 10531   000048  EF28  F000         	goto	i2u331_40
 10532   00004C                     i2u331_41:
 10533   00004C  EF2B  F000         	goto	i2l4056
 10534   000050                     i2u331_40:
 10535   000050                     
 10536                           ; BSR set to: 14
 10537                           ;interrupts.c: 58:         putCharToRxBuf(RC4REG);
 10538   000050  51E3               	movf	227,w,b	;volatile
 10539   000052  EC3F  F024         	call	_putCharToRxBuf
 10540   000056                     i2l4056:
 10541                           
 10542                           ;interrupts.c: 62:     if(PIR4bits.TX4IF){
 10543   000056  010E               	movlb	14	; () banked
 10544   000058  A537               	btfss	55,2,b	;volatile
 10545   00005A  EF31  F000         	goto	i2u332_41
 10546   00005E  EF33  F000         	goto	i2u332_40
 10547   000062                     i2u332_41:
 10548   000062  EF43  F000         	goto	i2l360
 10549   000066                     i2u332_40:
 10550   000066                     
 10551                           ; BSR set to: 14
 10552                           ;interrupts.c: 64:         TX4REG = getCharFromTxBuf();
 10553   000066  EC52  F024         	call	_getCharFromTxBuf	;wreg free
 10554   00006A  010E               	movlb	14	; () banked
 10555   00006C  6FE4               	movwf	228,b	;volatile
 10556   00006E                     
 10557                           ; BSR set to: 14
 10558                           ;interrupts.c: 65:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
 10559   00006E  ECCF  F024         	call	_isDataInTxBuf	;wreg free
 10560   000072  0900               	iorlw	0
 10561   000074  A4D8               	btfss	status,2,c
 10562   000076  EF3F  F000         	goto	i2u333_41
 10563   00007A  EF41  F000         	goto	i2u333_40
 10564   00007E                     i2u333_41:
 10565   00007E  EF43  F000         	goto	i2l360
 10566   000082                     i2u333_40:
 10567   000082  010E               	movlb	14	; () banked
 10568   000084  952D               	bcf	45,2,b	;volatile
 10569   000086                     i2l360:
 10570   000086  C00B  FFDA         	movff	??_HighISR+1,fsr2h
 10571   00008A  C00A  FFD9         	movff	??_HighISR,fsr2l
 10572   00008E  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10573   000090  0011               	retfie		f
 10574   000092                     __end_of_HighISR:
 10575                           	callstack 0
 10576                           
 10577 ;; *************** function i2_color_clear_init_interrupts *****************
 10578 ;; Defined at:
 10579 ;;		line 27 in file "color.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;		None
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;  low_threshol    2    7[COMRAM] unsigned int 
 10584 ;;  high_thresho    2    5[COMRAM] unsigned int 
 10585 ;; Return value:  Size  Location     Type
 10586 ;;                  1    wreg      void 
 10587 ;; Registers used:
 10588 ;;		wreg, status,2, status,0, cstack
 10589 ;; Tracked objects:
 10590 ;;		On entry : 0/0
 10591 ;;		On exit  : 0/0
 10592 ;;		Unchanged: 0/0
 10593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10595 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10596 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10597 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10598 ;;Total ram usage:        5 bytes
 10599 ;; Hardware stack levels used: 1
 10600 ;; Hardware stack levels required when called: 3
 10601 ;; This function calls:
 10602 ;;		i2_I2C_2_Master_Start
 10603 ;;		i2_I2C_2_Master_Stop
 10604 ;;		i2_I2C_2_Master_Write
 10605 ;;		i2_color_writetoaddr
 10606 ;; This function is called by:
 10607 ;;		_HighISR
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text44
 10612   0044A2                     __ptext44:
 10613                           	callstack 0
 10614   0044A2                     i2_color_clear_init_interrupts:
 10615                           	callstack 21
 10616   0044A2                     
 10617                           ;color.c: 29:     I2C_2_Master_Start();
 10618   0044A2  EC00  F025         	call	i2_I2C_2_Master_Start	;wreg free
 10619                           
 10620                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
 10621   0044A6  0E52               	movlw	82
 10622   0044A8  ECE1  F024         	call	i2_I2C_2_Master_Write
 10623                           
 10624                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
 10625   0044AC  0EE6               	movlw	230
 10626   0044AE  ECE1  F024         	call	i2_I2C_2_Master_Write
 10627                           
 10628                           ;color.c: 32:     I2C_2_Master_Stop();
 10629   0044B2  ECFB  F024         	call	i2_I2C_2_Master_Stop	;wreg free
 10630   0044B6                     
 10631                           ;color.c: 35:     unsigned int high_threshold = ambient + 12;
 10632   0044B6  0E0C               	movlw	12
 10633   0044B8  244D               	addwf	_ambient^0,w,c
 10634   0044BA  6E06               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
 10635   0044BC  0E00               	movlw	0
 10636   0044BE  204E               	addwfc	(_ambient+1)^0,w,c
 10637   0044C0  6E07               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
 10638   0044C2                     
 10639                           ;color.c: 36:     unsigned int low_threshold = ambient - 12;
 10640   0044C2  0EF4               	movlw	244
 10641   0044C4  244D               	addwf	_ambient^0,w,c
 10642   0044C6  6E08               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
 10643   0044C8  0EFF               	movlw	255
 10644   0044CA  204E               	addwfc	(_ambient+1)^0,w,c
 10645   0044CC  6E09               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
 10646                           
 10647                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
 10648   0044CE  0E13               	movlw	19
 10649   0044D0  6E03               	movwf	i2color_writetoaddr@value^0,c
 10650   0044D2  0E00               	movlw	0
 10651   0044D4  EC97  F024         	call	i2_color_writetoaddr
 10652   0044D8                     
 10653                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10654   0044D8  0E3F               	movlw	63
 10655   0044DA  6E05               	movwf	??i2_color_clear_init_interrupts^0,c
 10656   0044DC  0E55               	movlw	85
 10657   0044DE                     i2u582_47:
 10658   0044DE  2EE8               	decfsz	wreg,f,c
 10659   0044E0  D7FE               	bra	i2u582_47
 10660   0044E2  2E05               	decfsz	??i2_color_clear_init_interrupts^0,f,c
 10661   0044E4  D7FC               	bra	i2u582_47
 10662   0044E6  0000               	nop	
 10663   0044E8                     
 10664                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
 10665   0044E8  5007               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
 10666   0044EA  6E03               	movwf	i2color_writetoaddr@value^0,c
 10667   0044EC  0E07               	movlw	7
 10668   0044EE  EC97  F024         	call	i2_color_writetoaddr
 10669   0044F2                     
 10670                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
 10671   0044F2  C006  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
 10672   0044F6  0E06               	movlw	6
 10673   0044F8  EC97  F024         	call	i2_color_writetoaddr
 10674   0044FC                     
 10675                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
 10676   0044FC  5009               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
 10677   0044FE  6E03               	movwf	i2color_writetoaddr@value^0,c
 10678   004500  0E05               	movlw	5
 10679   004502  EC97  F024         	call	i2_color_writetoaddr
 10680   004506                     
 10681                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
 10682   004506  C008  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
 10683   00450A  0E04               	movlw	4
 10684   00450C  EC97  F024         	call	i2_color_writetoaddr
 10685   004510                     
 10686                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
 10687   004510  0E04               	movlw	4
 10688   004512  6E03               	movwf	i2color_writetoaddr@value^0,c
 10689   004514  0E0C               	movlw	12
 10690   004516  EC97  F024         	call	i2_color_writetoaddr
 10691   00451A  0012               	return		;funcret
 10692   00451C                     __end_ofi2_color_clear_init_interrupts:
 10693                           	callstack 0
 10694                           
 10695 ;; *************** function i2_color_writetoaddr *****************
 10696 ;; Defined at:
 10697 ;;		line 50 in file "color.c"
 10698 ;; Parameters:    Size  Location     Type
 10699 ;;  address         1    wreg     unsigned char 
 10700 ;;  value           1    2[COMRAM] unsigned char 
 10701 ;; Auto vars:     Size  Location     Type
 10702 ;;  address         1    3[COMRAM] unsigned char 
 10703 ;; Return value:  Size  Location     Type
 10704 ;;                  1    wreg      void 
 10705 ;; Registers used:
 10706 ;;		wreg, status,2, status,0, cstack
 10707 ;; Tracked objects:
 10708 ;;		On entry : 0/0
 10709 ;;		On exit  : 0/0
 10710 ;;		Unchanged: 0/0
 10711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10712 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10716 ;;Total ram usage:        2 bytes
 10717 ;; Hardware stack levels used: 1
 10718 ;; Hardware stack levels required when called: 2
 10719 ;; This function calls:
 10720 ;;		i2_I2C_2_Master_Start
 10721 ;;		i2_I2C_2_Master_Stop
 10722 ;;		i2_I2C_2_Master_Write
 10723 ;; This function is called by:
 10724 ;;		i2_color_clear_init_interrupts
 10725 ;; This function uses a non-reentrant model
 10726 ;;
 10727                           
 10728                           	psect	text45
 10729   00492E                     __ptext45:
 10730                           	callstack 0
 10731   00492E                     i2_color_writetoaddr:
 10732                           	callstack 21
 10733                           
 10734                           ;incstack = 0
 10735                           ;i2color_writetoaddr@address stored from wreg
 10736   00492E  6E04               	movwf	i2color_writetoaddr@address^0,c
 10737   004930                     
 10738                           ;color.c: 51:     I2C_2_Master_Start();
 10739   004930  EC00  F025         	call	i2_I2C_2_Master_Start	;wreg free
 10740                           
 10741                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
 10742   004934  0E52               	movlw	82
 10743   004936  ECE1  F024         	call	i2_I2C_2_Master_Write
 10744                           
 10745                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
 10746   00493A  5004               	movf	i2color_writetoaddr@address^0,w,c
 10747   00493C  0980               	iorlw	128
 10748   00493E  ECE1  F024         	call	i2_I2C_2_Master_Write
 10749                           
 10750                           ;color.c: 54:     I2C_2_Master_Write(value);
 10751   004942  5003               	movf	i2color_writetoaddr@value^0,w,c
 10752   004944  ECE1  F024         	call	i2_I2C_2_Master_Write
 10753                           
 10754                           ;color.c: 55:     I2C_2_Master_Stop();
 10755   004948  ECFB  F024         	call	i2_I2C_2_Master_Stop	;wreg free
 10756   00494C  0012               	return		;funcret
 10757   00494E                     __end_ofi2_color_writetoaddr:
 10758                           	callstack 0
 10759                           
 10760 ;; *************** function i2_I2C_2_Master_Write *****************
 10761 ;; Defined at:
 10762 ;;		line 45 in file "i2c.c"
 10763 ;; Parameters:    Size  Location     Type
 10764 ;;  data_byte       1    wreg     unsigned char 
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;  data_byte       1    1[COMRAM] unsigned char 
 10767 ;; Return value:  Size  Location     Type
 10768 ;;                  1    wreg      void 
 10769 ;; Registers used:
 10770 ;;		wreg, status,2, status,0, cstack
 10771 ;; Tracked objects:
 10772 ;;		On entry : 0/0
 10773 ;;		On exit  : 0/0
 10774 ;;		Unchanged: 0/0
 10775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10780 ;;Total ram usage:        1 bytes
 10781 ;; Hardware stack levels used: 1
 10782 ;; Hardware stack levels required when called: 1
 10783 ;; This function calls:
 10784 ;;		i2_I2C_2_Master_Idle
 10785 ;; This function is called by:
 10786 ;;		i2_color_clear_init_interrupts
 10787 ;;		i2_color_writetoaddr
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text46
 10792   0049C2                     __ptext46:
 10793                           	callstack 0
 10794   0049C2                     i2_I2C_2_Master_Write:
 10795                           	callstack 21
 10796                           
 10797                           ;incstack = 0
 10798                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 10799   0049C2  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 10800   0049C4                     
 10801                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10802   0049C4  EC18  F024         	call	i2_I2C_2_Master_Idle	;wreg free
 10803   0049C8                     
 10804                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10805   0049C8  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 10806   0049CC  0012               	return		;funcret
 10807   0049CE                     __end_ofi2_I2C_2_Master_Write:
 10808                           	callstack 0
 10809                           
 10810 ;; *************** function i2_I2C_2_Master_Stop *****************
 10811 ;; Defined at:
 10812 ;;		line 39 in file "i2c.c"
 10813 ;; Parameters:    Size  Location     Type
 10814 ;;		None
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;		None
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  1    wreg      void 
 10819 ;; Registers used:
 10820 ;;		wreg, status,2, status,0, cstack
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10830 ;;Total ram usage:        0 bytes
 10831 ;; Hardware stack levels used: 1
 10832 ;; Hardware stack levels required when called: 1
 10833 ;; This function calls:
 10834 ;;		i2_I2C_2_Master_Idle
 10835 ;; This function is called by:
 10836 ;;		i2_color_clear_init_interrupts
 10837 ;;		i2_color_writetoaddr
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           	psect	text47
 10842   0049F6                     __ptext47:
 10843                           	callstack 0
 10844   0049F6                     i2_I2C_2_Master_Stop:
 10845                           	callstack 21
 10846   0049F6                     
 10847                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10848   0049F6  EC18  F024         	call	i2_I2C_2_Master_Idle	;wreg free
 10849   0049FA                     
 10850                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10851   0049FA  010E               	movlb	14	; () banked
 10852   0049FC  85DA               	bsf	218,2,b	;volatile
 10853   0049FE                     
 10854                           ; BSR set to: 14
 10855   0049FE  0012               	return		;funcret
 10856   004A00                     __end_ofi2_I2C_2_Master_Stop:
 10857                           	callstack 0
 10858                           
 10859 ;; *************** function i2_I2C_2_Master_Start *****************
 10860 ;; Defined at:
 10861 ;;		line 27 in file "i2c.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;		None
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;		None
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      void 
 10868 ;; Registers used:
 10869 ;;		wreg, status,2, status,0, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10879 ;;Total ram usage:        0 bytes
 10880 ;; Hardware stack levels used: 1
 10881 ;; Hardware stack levels required when called: 1
 10882 ;; This function calls:
 10883 ;;		i2_I2C_2_Master_Idle
 10884 ;; This function is called by:
 10885 ;;		i2_color_clear_init_interrupts
 10886 ;;		i2_color_writetoaddr
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890                           	psect	text48
 10891   004A00                     __ptext48:
 10892                           	callstack 0
 10893   004A00                     i2_I2C_2_Master_Start:
 10894                           	callstack 21
 10895   004A00                     
 10896                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10897   004A00  EC18  F024         	call	i2_I2C_2_Master_Idle	;wreg free
 10898   004A04                     
 10899                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10900   004A04  010E               	movlb	14	; () banked
 10901   004A06  81DA               	bsf	218,0,b	;volatile
 10902   004A08                     
 10903                           ; BSR set to: 14
 10904   004A08  0012               	return		;funcret
 10905   004A0A                     __end_ofi2_I2C_2_Master_Start:
 10906                           	callstack 0
 10907                           
 10908 ;; *************** function i2_I2C_2_Master_Idle *****************
 10909 ;; Defined at:
 10910 ;;		line 22 in file "i2c.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;		None
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;		None
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  1    wreg      void 
 10917 ;; Registers used:
 10918 ;;		wreg, status,2, status,0
 10919 ;; Tracked objects:
 10920 ;;		On entry : 0/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10928 ;;Total ram usage:        1 bytes
 10929 ;; Hardware stack levels used: 1
 10930 ;; This function calls:
 10931 ;;		Nothing
 10932 ;; This function is called by:
 10933 ;;		i2_I2C_2_Master_Start
 10934 ;;		i2_I2C_2_Master_Stop
 10935 ;;		i2_I2C_2_Master_Write
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939                           	psect	text49
 10940   004830                     __ptext49:
 10941                           	callstack 0
 10942   004830                     i2_I2C_2_Master_Idle:
 10943                           	callstack 21
 10944   004830                     i2l250:
 10945   004830  010E               	movlb	14	; () banked
 10946   004832  B5D8               	btfsc	216,2,b	;volatile
 10947   004834  EF1E  F024         	goto	i2u177_41
 10948   004838  EF20  F024         	goto	i2u177_40
 10949   00483C                     i2u177_41:
 10950   00483C  EF18  F024         	goto	i2l250
 10951   004840                     i2u177_40:
 10952   004840                     
 10953                           ; BSR set to: 14
 10954   004840  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 10955   004844  0E1F               	movlw	31
 10956   004846  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 10957   004848  A4D8               	btfss	status,2,c
 10958   00484A  EF29  F024         	goto	i2u178_41
 10959   00484E  EF2B  F024         	goto	i2u178_40
 10960   004852                     i2u178_41:
 10961   004852  EF18  F024         	goto	i2l250
 10962   004856                     i2u178_40:
 10963   004856                     
 10964                           ; BSR set to: 14
 10965   004856  0012               	return		;funcret
 10966   004858                     __end_ofi2_I2C_2_Master_Idle:
 10967                           	callstack 0
 10968                           
 10969 ;; *************** function _putCharToRxBuf *****************
 10970 ;; Defined at:
 10971 ;;		line 33 in file "serial.c"
 10972 ;; Parameters:    Size  Location     Type
 10973 ;;  byte            1    wreg     unsigned char 
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;  byte            1    0[COMRAM] unsigned char 
 10976 ;; Return value:  Size  Location     Type
 10977 ;;                  1    wreg      void 
 10978 ;; Registers used:
 10979 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10980 ;; Tracked objects:
 10981 ;;		On entry : 0/0
 10982 ;;		On exit  : 0/0
 10983 ;;		Unchanged: 0/0
 10984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10989 ;;Total ram usage:        1 bytes
 10990 ;; Hardware stack levels used: 1
 10991 ;; This function calls:
 10992 ;;		Nothing
 10993 ;; This function is called by:
 10994 ;;		_HighISR
 10995 ;; This function uses a non-reentrant model
 10996 ;;
 10997                           
 10998                           	psect	text50
 10999   00487E                     __ptext50:
 11000                           	callstack 0
 11001   00487E                     _putCharToRxBuf:
 11002                           	callstack 24
 11003                           
 11004                           ; BSR set to: 14
 11005                           ;incstack = 0
 11006                           ;putCharToRxBuf@byte stored from wreg
 11007   00487E  6E01               	movwf	putCharToRxBuf@byte^0,c
 11008   004880                     
 11009                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
 11010   004880  0E13               	movlw	19
 11011   004882  644C               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
 11012   004884  EF46  F024         	goto	i2u296_41
 11013   004888  EF48  F024         	goto	i2u296_40
 11014   00488C                     i2u296_41:
 11015   00488C  EF4A  F024         	goto	i2l3858
 11016   004890                     i2u296_40:
 11017   004890  0E00               	movlw	0
 11018   004892  6E4C               	movwf	_RxBufWriteCnt^0,c	;volatile
 11019   004894                     i2l3858:
 11020                           
 11021                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
 11022   004894  504C               	movf	_RxBufWriteCnt^0,w,c
 11023   004896  0FC4               	addlw	low _EUSART4RXbuf
 11024   004898  6ED9               	movwf	fsr2l,c
 11025   00489A  6ADA               	clrf	fsr2h,c
 11026   00489C  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
 11027   0048A0  2A4C               	incf	_RxBufWriteCnt^0,f,c	;volatile
 11028   0048A2  0012               	return		;funcret
 11029   0048A4                     __end_of_putCharToRxBuf:
 11030                           	callstack 0
 11031                           
 11032 ;; *************** function _isDataInTxBuf *****************
 11033 ;; Defined at:
 11034 ;;		line 61 in file "serial.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;		None
 11037 ;; Auto vars:     Size  Location     Type
 11038 ;;		None
 11039 ;; Return value:  Size  Location     Type
 11040 ;;                  1    wreg      unsigned char 
 11041 ;; Registers used:
 11042 ;;		wreg, status,2, status,0
 11043 ;; Tracked objects:
 11044 ;;		On entry : 0/0
 11045 ;;		On exit  : 0/0
 11046 ;;		Unchanged: 0/0
 11047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11052 ;;Total ram usage:        0 bytes
 11053 ;; Hardware stack levels used: 1
 11054 ;; This function calls:
 11055 ;;		Nothing
 11056 ;; This function is called by:
 11057 ;;		_HighISR
 11058 ;;		_sendTxBuf
 11059 ;; This function uses a non-reentrant model
 11060 ;;
 11061                           
 11062                           	psect	text51
 11063   00499E                     __ptext51:
 11064                           	callstack 0
 11065   00499E                     _isDataInTxBuf:
 11066                           	callstack 24
 11067   00499E                     
 11068                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
 11069   00499E  5049               	movf	_TxBufReadCnt^0,w,c	;volatile
 11070   0049A0  184A               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
 11071   0049A2  A4D8               	btfss	status,2,c
 11072   0049A4  EFD6  F024         	goto	i2u129_41
 11073   0049A8  EFD9  F024         	goto	i2u129_40
 11074   0049AC                     i2u129_41:
 11075   0049AC  0E01               	movlw	1
 11076   0049AE  EFDA  F024         	goto	i2u130_40
 11077   0049B2                     i2u129_40:
 11078   0049B2  0E00               	movlw	0
 11079   0049B4                     i2u130_40:
 11080   0049B4  0012               	return		;funcret
 11081   0049B6                     __end_of_isDataInTxBuf:
 11082                           	callstack 0
 11083                           
 11084 ;; *************** function _getCharFromTxBuf *****************
 11085 ;; Defined at:
 11086 ;;		line 47 in file "serial.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;		None
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;		None
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1    wreg      unsigned char 
 11093 ;; Registers used:
 11094 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11102 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11104 ;;Total ram usage:        1 bytes
 11105 ;; Hardware stack levels used: 1
 11106 ;; This function calls:
 11107 ;;		Nothing
 11108 ;; This function is called by:
 11109 ;;		_HighISR
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           	psect	text52
 11114   0048A4                     __ptext52:
 11115                           	callstack 0
 11116   0048A4                     _getCharFromTxBuf:
 11117                           	callstack 24
 11118   0048A4                     
 11119                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
 11120   0048A4  0E3B               	movlw	59
 11121   0048A6  6449               	cpfsgt	_TxBufReadCnt^0,c	;volatile
 11122   0048A8  EF58  F024         	goto	i2u297_41
 11123   0048AC  EF5A  F024         	goto	i2u297_40
 11124   0048B0                     i2u297_41:
 11125   0048B0  EF5C  F024         	goto	i2l3866
 11126   0048B4                     i2u297_40:
 11127   0048B4  0E00               	movlw	0
 11128   0048B6  6E49               	movwf	_TxBufReadCnt^0,c	;volatile
 11129   0048B8                     i2l3866:
 11130                           
 11131                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
 11132   0048B8  2A49               	incf	_TxBufReadCnt^0,f,c	;volatile
 11133   0048BA  0449               	decf	_TxBufReadCnt^0,w,c	;volatile
 11134   0048BC  6E01               	movwf	??_getCharFromTxBuf^0,c
 11135   0048BE  5001               	movf	??_getCharFromTxBuf^0,w,c
 11136   0048C0  0F60               	addlw	low _EUSART4TXbuf
 11137   0048C2  6ED9               	movwf	fsr2l,c
 11138   0048C4  6ADA               	clrf	fsr2h,c
 11139   0048C6  50DF               	movf	indf2,w,c
 11140   0048C8  0012               	return		;funcret
 11141   0048CA                     __end_of_getCharFromTxBuf:
 11142                           	callstack 0
 11143                           
 11144                           	psect	smallconst
 11145   000E00                     __psmallconst:
 11146                           	callstack 0
 11147   000E00  00                 	db	0
 11148   000E01  00                 	db	0	; dummy byte at the end
 11149   000000                     
 11150                           	psect	rparam
 11151   000000                     
 11152                           	psect	temp
 11153   00004F                     btemp:
 11154                           	callstack 0
 11155   00004F                     	ds	1
 11156   000000                     int$flags	set	btemp
 11157   000000                     wtemp8	set	btemp+1
 11158   000000                     ttemp5	set	btemp+1
 11159   000000                     ttemp6	set	btemp+4
 11160   000000                     ttemp7	set	btemp+8
 11161                           
 11162                           	psect	config
 11163                           
 11164                           ;Config register CONFIG1L @ 0x300000
 11165                           ;	External Oscillator mode Selection bits
 11166                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11167                           ;	Power-up default value for COSC bits
 11168                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11169   300000                     	org	3145728
 11170   300000  AA                 	db	170
 11171                           
 11172                           ;Config register CONFIG1H @ 0x300001
 11173                           ;	unspecified, using default values
 11174                           ;	Clock Out Enable bit
 11175                           ;	CLKOUTEN = 0x1, unprogrammed default
 11176                           ;	Clock Switch Enable bit
 11177                           ;	CSWEN = 0x1, unprogrammed default
 11178                           ;	Fail-Safe Clock Monitor Enable bit
 11179                           ;	FCMEN = 0x1, unprogrammed default
 11180   300001                     	org	3145729
 11181   300001  FF                 	db	255
 11182                           
 11183                           ;Config register CONFIG3L @ 0x300004
 11184                           ;	WDT Period Select bits
 11185                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11186                           ;	WDT operating mode
 11187                           ;	WDTE = OFF, WDT Disabled
 11188   300004                     	org	3145732
 11189   300004  9F                 	db	159
 11190                           
 11191                           ;Config register CONFIG3H @ 0x300005
 11192                           ;	unspecified, using default values
 11193                           ;	WDT Window Select bits
 11194                           ;	WDTCWS = 0x7, unprogrammed default
 11195                           ;	WDT input clock selector
 11196                           ;	WDTCCS = 0x7, unprogrammed default
 11197   300005                     	org	3145733
 11198   300005  FF                 	db	255
 11199                           tosu	equ	0xFFF
 11200                           tosh	equ	0xFFE
 11201                           tosl	equ	0xFFD
 11202                           stkptr	equ	0xFFC
 11203                           pclatu	equ	0xFFB
 11204                           pclath	equ	0xFFA
 11205                           pcl	equ	0xFF9
 11206                           tblptru	equ	0xFF8
 11207                           tblptrh	equ	0xFF7
 11208                           tblptrl	equ	0xFF6
 11209                           tablat	equ	0xFF5
 11210                           prodh	equ	0xFF4
 11211                           prodl	equ	0xFF3
 11212                           indf0	equ	0xFEF
 11213                           postinc0	equ	0xFEE
 11214                           postdec0	equ	0xFED
 11215                           preinc0	equ	0xFEC
 11216                           plusw0	equ	0xFEB
 11217                           fsr0h	equ	0xFEA
 11218                           fsr0l	equ	0xFE9
 11219                           wreg	equ	0xFE8
 11220                           indf1	equ	0xFE7
 11221                           postinc1	equ	0xFE6
 11222                           postdec1	equ	0xFE5
 11223                           preinc1	equ	0xFE4
 11224                           plusw1	equ	0xFE3
 11225                           fsr1h	equ	0xFE2
 11226                           fsr1l	equ	0xFE1
 11227                           bsr	equ	0xFE0
 11228                           indf2	equ	0xFDF
 11229                           postinc2	equ	0xFDE
 11230                           postdec2	equ	0xFDD
 11231                           preinc2	equ	0xFDC
 11232                           plusw2	equ	0xFDB
 11233                           fsr2h	equ	0xFDA
 11234                           fsr2l	equ	0xFD9
 11235                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      78
    BANK0           160     22     146
    BANK1           256     20      20
    BANK2           256      0     122
    BANK3           256    256     256
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK3[1]), 

    color_calibration@blue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@blue(BANK3[6]), 

    color_calibration@green	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@green(BANK3[6]), 

    color_calibration@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK3[6]), 

    color_calibration@lightblue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@lightblue(BANK3[6]), 

    color_calibration@orange	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@orange(BANK3[6]), 

    color_calibration@pink	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@pink(BANK3[6]), 

    color_calibration@red	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@red(BANK3[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK3[8]), 

    color_calibration@white	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@white(BANK3[6]), 

    color_calibration@yellow	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@yellow(BANK3[6]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK3[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK3[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK3[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK3[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK3[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK3[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK3[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    rgb_2_hsv@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK3[6]), 

    S33DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S33DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), main@motorR(BANK3[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_detect
    _move->_returnHome
    _returnHome->_reverseOneSquare
    _returnHome->_turnLeft
    _returnHome->_turnRight
    _lostReturnHome->_reverseOneSquare
    _lostReturnHome->_turnLeft
    _lostReturnHome->_turnRight
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_rgb_2_hsv
    _rgb_2_hsv->___aldiv
    ___lldiv->___lmul
    ___aldiv->___lmul
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_rgb_2_hsv
    _color_calibration->_rgb_2_hsv

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_color_calibration

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               268   268      0  277567
                                             68 COMRAM     2     2      0
                                              0 BANK3    256   256      0
                         _Buggy_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
                   _color_click_init
                       _color_detect
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                          _rgb_2_hsv
                               _stop
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _move                                                18     2     16  124769
                                             64 COMRAM     2     2      0
                                              0 BANK0     16     0     16
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          20     5     15   65372
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      20     5     15   64320
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    5091
                                             30 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    14     7      7    6592
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2     102
                                             11 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    7667
                                             30 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        57     3     54    2673
                                             11 COMRAM    57     3     54
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    1967
                                             20 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0    1064
                                             15 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     903
                                             13 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20   14164
                                             59 COMRAM     2     2      0
                                              0 BANK1     20     0     20
                         _color_read
                          _rgb_2_hsv
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      31
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rgb_2_hsv                                           44    34     10    9453
                                             37 COMRAM    22    12     10
                                              0 BANK0     22    22      0
                            ___aldiv
                            ___lldiv
                             ___lmul
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (2) _min                                                  4     0      4     484
                                             11 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _max                                                  4     0      4     484
                                             11 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2436
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1141
                                             23 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1525
                                             23 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2    1548
                                             15 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      31
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      65
                                             12 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   40974
                                             44 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   15080
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   24080
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2901
                                             24 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     472
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     481
                                             17 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     758
                                             19 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      34
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0     356
                                              9 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (7) i2_color_clear_init_interrupts                        5     5      0     334
                                              4 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _rgb_2_hsv
       ___aldiv
         ___lmul (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _max
       _min
     _white_Light
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_writetoaddr
   _color_detect
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _turnLeft
     _turnRight
   _resetTimer
   _rgb_2_hsv
   _stop
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100    100     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      7A       9       47.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      14       7        7.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      92       5       91.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4E       1       83.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26E      66        0.0%
DATA                 0      0     26E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 02:08:37 2024

                                _white_Light 48CA                                           l87 2832  
                                         l89 2840                                           l98 2C6E  
                               ___awdiv@sign 0011                          ___wmul@multiplicand 000E  
                           main@turnDuration 03DD                                          l201 47AC  
                                        l202 47B4                                          l220 314C  
                                        l141 490C                                          l206 4780  
                                        l207 4788                                          l215 30B6  
                                        l135 4726                                          l144 48E6  
                                        l250 4808                                          l146 48EC  
                                        l138 44A0                                          l171 364E  
                                        l180 2328                                          l156 364C  
                                        l253 482E                                          l149 383C  
                                        l262 49E0                                          l182 2336  
                                        l174 21BC                                          l191 2558  
                                        l183 23DE                                          l247 47DE  
                                        l256 49EA                                          l192 2600  
                                        l176 21CA                                          l600 1AE0  
                                        l441 4988                                          l265 49C0  
                                        l185 23EC                                          l177 2272  
                                        l194 260E                                          l186 2494  
                                        l610 1B5A                                          l443 4996  
                                        l259 49F4                                          l195 26B6  
                                        l179 2280                                          l444 499C  
                                        l268 46EE                                          l188 24A2  
                                        l541 3F36                                          l197 26C4  
                                        l189 254A                                          l438 4984  
                                        l198 276C                                          l534 4426  
                                        l710 4806                                          l455 4694  
                                        l623 3C8C                                          l391 496A  
                                        l615 4108                                          l704 492C  
                                        l456 4696                                          l632 3D9C  
                                        l640 3AB8                                          l560 21B0  
                                        l457 46AA                                          l713 487C  
                                        l618 414A                                          l299 475C  
                                        l459 46AC                                          l635 3DCA  
                                        l627 3CF6                                          l707 49D6  
                                        l652 3BF6                                          l644 3B22  
                                        l740 4386                                          l724 45E8  
                                        l629 3D1A                                          l725 45F8  
                                        l661 422E                                          l646 3B46  
                                        l670 393A                                          l575 1442  
                                        l672 395E                                          l649 3BC8  
                                        l657 41E2                                          l585 14BC  
                                        l569 1442                                          l690 32D6  
                                        l682 3236                                          l666 38D0  
                                        l594 1AE0                                          l691 33C6  
                                        l747 4396                                          l675 39E0  
                                        l693 33E6                                          l686 3252  
                                        l678 3A22                                          l687 3288  
                                        l944 42F2                                          l792 4042  
                                        _max 478A                                          _min 475E  
                            color_detect@HSV 000C                                ?_color_detect 000C  
                                        prod 0FF3                          i2_color_writetoaddr 492E  
                                        wreg 0FE8                              color_detect@red 0012  
  color_clear_init_interrupts@high_threshold 0011  i2color_clear_init_interrupts@high_threshold 0006  
                                       l1211 458E                                         l1204 4586  
                                       l4100 4546                                         l4110 457A  
                                       l4102 4554                                         l4112 4580  
                                       l4104 455A                                         l4200 49F0  
                                       l4120 49BC                                         l5000 1CD2  
                                       l4106 4570                                         l4130 3E3C  
                                       l4210 46EA                                         l4202 46B0  
                                       l4114 49E2                                         l4122 49D8  
                                       l5010 1D92                                         l5002 1CEA  
                                       l4108 4578                                         l4140 3EF6  
                                       l4132 3E50                                         l4300 3D20  
                                       l4212 46EC                                         l4204 46B4  
                                       l4116 49E6                                         l4124 49DC  
                                       l5100 1684                                         l5020 1E34  
                                       l5004 1D22                                         l5012 1DB2  
                                       l4134 3E54                                         l4126 3DCC  
                                       l4310 3D7E                                         l4230 3A42  
                                       l4206 46BC                                         l4118 49B8  
                                       l4222 475E                                         l4150 41B8  
                                       l4142 414C                                         l5110 1734  
                                       l5102 16A2                                         l5030 1ED6  
                                       l5022 1E54                                         l5014 1DC4  
                                       l5006 1D42                                         l4136 3E96  
                                       l4128 3DE8                                         l4312 3D8A  
                                       l4304 3D32                                         l4240 3AA6  
                                       l4232 3A4E                                         l4208 46C4  
                                       l4400 3F38                                         l4216 478A  
                                       l4224 4774                                         l4152 41C4  
                                       l4160 420A                                         l4144 416C  
                                       l4320 383E                                         l5120 17FC  
                                       l5112 1754                                         l5104 16C2  
                                       l5040 1F98                                         l5032 1F0E  
                                       l5016 1DE4                                         l5024 1E8C  
                                       l5008 1D7A                                         l5200 27CA  
                                       l4138 3EB2                                         l4314 3D98  
                                       l4306 3D66                                         l4250 3B10  
                                       l4242 3AB4                                         l4234 3A82  
                                       l4082 4808                                         l4410 3F6C  
                                       l4402 3F3C                                         l4218 47A0  
                                       l4154 41D0                                         l4146 4178  
                                       l4162 49CE                                         l4330 38B2  
                                       l4322 385A                                         l5130 18A6  
                                       l5114 176C                                         l5122 1818  
                                       l5106 16DA                                         l5050 2052  
                                       l5042 1FB0                                         l5034 1F2E  
                                       l5026 1E9E                                         l5018 1DFC  
                                       l5210 27EA                                         l5202 27CE  
                                       l4092 451C                                         l4316 3DC0  
                                       l4308 3D72                                         l4260 3B92  
                                       l4252 3B1E                                         l4244 3ADC  
                                       l4236 3A8E                                         l4228 3A24  
                                       l4084 4818                                         l4420 3FAE  
                                       l4412 3F7C                                         l4404 3F4A  
                                       l4500 47C6                                         l4156 41DE  
                                       l4148 41AC                                         l4164 47E0  
                                       l4340 391C                                         l4332 38BE  
                                       l4324 3866                                         l4180 40D2  
                                       l4172 4044                                         l5140 1920  
                                       l5124 1836                                         l5116 17A4  
                                       l5108 1716                                         l5052 2072  
                                       l5060 211A                                         l5044 1FE8  
                                       l5028 1EBE                                         l5036 1F66  
                                       l5300 2BE0                                         l5220 2802  
                                       l5212 27EE                                         l5204 27D2  
                                       l4094 4524                                         l4086 4858  
                                       l4270 3BEC                                         l4262 3B9E  
                                       l4254 3B4C                                         l4238 3A9A  
                                       l4246 3AE0                                         l4430 4000  
                                       l4422 3FBA                                         l4414 3F80  
                                       l4406 3F5A                                         l4502 47C8  
                                       l4510 443C                                         l4158 4206  
                                       l4166 47EC                                         l4350 3976  
                                       l4342 3928                                         l4334 38CC  
                                       l4326 389A                                         l4190 412C  
                                       l4182 40DE                                         l4174 408C  
                                       l5150 19BA                                         l5142 1958  
                                       l5126 1856                                         l5134 18CA  
                                       l5118 17C4                                         l5070 14F6  
                                       l5062 212C                                         l5054 208A  
                                       l5046 2008                                         l5038 1F78  
                                       l5310 2C5C                                         l5302 2BE4  
                                       l5230 281E                                         l5222 280A  
                                       l5214 27F2                                         l5206 27DA  
                                       l4096 4536                                         l4088 4874  
                                       l4280 3C56                                         l4264 3BAA  
                                       l4248 3B04                                         l4440 4032  
                                       l4432 4002                                         l4424 3FC8  
                                       l4416 3F90                                         l4408 3F5E  
                                       l4504 47CA                                         l4520 4482  
                                       l4512 4448                                         l4168 47FE  
                                       l4360 39DC                                         l4352 39AA  
                                       l4344 3936                                         l4336 38F4  
                                       l4328 38A6                                         l4184 40EA  
                                       l5160 1A4C                                         l5152 19D2  
                                       l5136 18E8                                         l5128 186E  
                                       l5080 15BA                                         l5072 152E  
                                       l4600 11B8                                         l5064 2170  
                                       l5056 20C2                                         l5048 2040  
                                       l5304 2C3C                                         l5240 2848  
                                       l5232 2822                                         l5224 2812  
                                       l5216 27F6                                         l5208 27E2  
                                       l4530 497E                                         l4098 453E  
                                       l4290 3CB0                                         l4282 3C62  
                                       l4274 3BF8                                         l4266 3BB6  
                                       l4258 3B5E                                         l4450 36DC  
                                       l4434 400C                                         l4426 3FD2  
                                       l4418 3FA6                                         l4370 45A0  
                                       l4506 47CC                                         l4522 448C  
                                       l4514 445E                                         l4362 3A04  
                                       l4354 39B6                                         l4346 3964  
                                       l4338 38F8                                         l4186 40F6  
                                       l4194 4136                                         l4178 409E  
                                       l5170 1AFC                                         l5162 1A6C  
                                       l5154 1A0A                                         l5138 1908  
                                       l5146 197C                                         l5090 15F2  
                                       l5082 15BE                                         l5074 154E  
                                       l5066 14BE                                         l4610 124A  
                                       l4602 11D0                                         l5058 20E2  
                                       l5306 2C40                                         l5250 2904  
                                       l5242 2860                                         l5234 2826  
                                       l5226 2816                                         l5218 27FA  
                                       l4532 4980                                         l4284 3C6E  
                                       l4292 3CB4                                         l4276 3C16  
                                       l4268 3BC4                                         l4460 37F6  
                                       l4452 36FA                                         l4444 3650  
                                       l4428 3FF0                                         l4436 4012  
                                       l4380 4304                                         l4372 45AE  
                                       l4196 48F0                                         l4524 4496  
                                       l4516 446E                                         l4508 4428  
                                       l4700 46F4                                         l4356 39C2  
                                       l4188 4104                                         l5172 1B00  
                                       l5164 1A84                                         l5148 199A  
                                       l5092 15F4                                         l5084 15C2  
                                       l5076 1586                                         l5068 14DE  
                                       l4612 126A                                         l4620 12DE  
                                       l4604 1208                                         l5308 2C48  
                                       l5260 29E0                                         l5252 29AE  
                                       l5244 28B6                                         l5236 282A  
                                       l5228 281A                                         l5180 277A  
                                       l4710 490E                                         l4534 4982  
                                       l4526 496C                                         l4294 3CD8  
                                       l4286 3C7A                                         l4278 3C22  
                                       l4198 49EC                                         l4454 375A  
                                       l4446 366A                                         l4438 4022  
                                       l4390 4346                                         l4382 431A  
                                       l4374 45BE                                         l4470 2E0E  
                                       l4462 2C72                                         l4518 4478  
                                       l4702 46FE                                         l4358 39CE  
                                       l4366 3A0E                                         l5174 1B32  
                                       l5166 1ABC                                         l5158 1A2E  
                                       l5094 1610                                         l5086 15D2  
                                       l5078 159E                                         l4622 12FC  
                                       l4614 1282                                         l4550 0E92  
                                       l4542 0E02                                         l5270 2A20  
                                       l5262 29F8                                         l5254 29B4  
                                       l5246 28DA                                         l5238 282E  
                                       l5190 27AC                                         l5182 277A  
                                       l4712 4916                                         l4536 4986  
                                       l4528 4976                                         l4296 3CE4  
                                       l4288 3C88                                         l4456 3778  
                                       l4448 3684                                         l4392 4364  
                                       l4384 4322                                         l4376 45C8  
                                       l4368 4590                                         l4480 2F5E  
                                       l4472 2E72                                         l4464 2DC6  
                                       l4800 2368                                         l4704 470E  
                                       l4720 4958                                         l5096 1630  
                                       l5176 1B4A                                         l5088 15EA  
                                       l4640 141E                                         l4624 131C  
                                       l4632 1390                                         l4616 12BA  
                                       l4608 122C                                         l4560 0F34  
                                       l4552 0ECA                                         l4544 0E22  
                                       l5280 2AA0                                         l5272 2A30  
                                       l5264 2A14                                         l5256 29CC  
                                       l5248 28E6                                         l5192 27B0  
                                       l5184 2792                                         l4714 4920  
                                       l4538 499A                                         l4298 3CF2  
                                       l4458 37D8                                         l4394 4374  
                                       l4386 432E                                         l4378 42F4  
                                       l4490 3138                                         l4482 2FF8  
                                       l4474 2E88                                         l4466 2DE0  
                                       l4810 23F0                                         l4802 2380  
                                       l4706 4718                                         l4730 4398  
                                       l4722 495A                                         l5098 1648  
                                       l4634 13AE                                         l4626 1334  
                                       l4570 0F92                                         l4650 14AC  
                                       l4562 0F4C                                         l4554 0EE2  
                                       l4546 0E3A                                         l5290 2BB4  
                                       l5282 2B4A                                         l5274 2A40  
                                       l5266 2A18                                         l5258 29D8  
                                       l5194 27B4                                         l5186 2798  
                                       l5178 276E                                         l4716 492A  
                                       l4660 424E                                         l4652 4230  
                                       l4900 32A0                                         l4396 4376  
                                       l4388 433C                                         l4484 3010  
                                       l4476 2EEA                                         l4468 2DF8  
                                       l4492 48CC                                         l4820 2478  
                                       l4812 23FC                                         l4804 23A2  
                                       l4708 4722                                         l4740 4400  
                                       l4732 43A8                                         l4724 4964  
                                       l4644 145E                                         l4636 13CE  
                                       l4628 136C                                         l4580 103C  
                                       l4572 0FAA                                         l4564 0F54  
                                       l4556 0EFE                                         l4548 0E72  
                                       l5292 2BB8                                         l5284 2B5A  
                                       l5276 2A76                                         l5268 2A1C  
                                       l5196 27B8                                         l5188 27A8  
                                       l4670 4282                                         l4662 425C  
                                       l4654 4234                                         l4910 3302  
                                       l4902 32A2                                         l4398 4380  
                                       l4486 310E                                         l4478 2F46  
                                       l4494 48DC                                         l4830 24EC  
                                       l4822 2490                                         l4814 241E  
                                       l4806 23C2                                         l4750 441A  
                                       l4742 4402                                         l4734 43CE  
                                       l4726 4966                                         l4718 494E  
                                       l4646 1462                                         l4638 13E6  
                                       l4590 1106                                         l4582 1078  
                                       l4574 0FE6                                         l4566 0F56  
                                       l4558 0F02                                         l5294 2BBC  
                                       l5286 2BA0                                         l5278 2A82  
                                       l5198 27C4                                         ?_max 000C  
                                       l4680 42BC                                         l4672 428A  
                                       l4664 4264                                         l4656 4242  
                                       l4760 468E                                         l4920 33E2  
                                       l4912 331A                                         l4904 32BA  
                                       l4488 312C                                         l4840 2568  
                                       l4832 250E                                         l4824 24A6  
                                       l4816 2436                                         l4808 23DA  
                                       l4496 47B6                                         l4752 4424  
                                       l4744 440C                                         l4736 43D2  
                                       l4728 4968                                         l4648 1494  
                                       l4592 1126                                         l4584 1096  
                                       l4576 1004                                         l4568 0F72  
                                       l5296 2BCC                                         l5288 2BAC  
                                       l4690 42E2                                         l4682 42C4  
                                       l4674 4292                                         l4666 4268  
                                       l4658 424A                                         l4762 46A4  
                                       l4754 4660                                         l4914 335A  
                                       l4906 32C8                                         l4850 25FC  
                                       l4842 258A                                         l4834 252E  
                                       l4826 24B2                                         l4818 2458  
                                       l4770 21DA                                         l4498 47C0  
                                       l4930 3434                                         l4922 33E8  
                                       l4746 440E                                         l4738 43F6  
                                       l4594 115E                                         l4586 10B6  
                                       l4578 1024                                         l5298 2BD0  
                                main@curMove 03DA                                         l4692 42EA  
                                       l4684 42C6                                         l4676 42A0  
                                       l4668 4270                                         l4756 466A  
                                       l4916 3382                                         l4908 32DA  
                                       l4860 267A                                         l4852 2612  
                                       l4844 25A2                                         l4836 2546  
                                       l4828 24D4                                         l4780 226E  
                                       l4772 21FC                                         l4764 21B2  
                                       l4940 34C4                                         l4932 3456  
                                       l4924 33E8                                         l4748 4418  
                                       l4588 10CE                                         l4596 117A  
                                       ?_min 000C                                         l4686 42CC  
                                       l4678 42A6                                         l4758 4680  
                                       l4918 33CA                                         l4870 26F6  
                                       l4862 269A                                         l4854 261E  
                                       l4846 25C4                                         l4838 255C  
                                       l4790 22EC                                         l4782 2284  
                                       l4774 2214                                         l4766 21B8  
                                       l4950 353A                                         l4942 34CC  
                                       l4934 3478                                         l4926 340A  
                                       l4598 1198                                         l4696 4728  
                                       l4688 42D2                                         l4880 314E  
                                       l4872 270E                                         l4864 26B2  
                                       l4856 2640                                         l4848 25E4  
                                       l4792 230C                                         l4784 2290  
                                       l4776 2236                                         l4768 21CE  
                                       l4960 35B0                                         l4952 355C  
                                       l4944 34EE                                         l4936 3480  
                                       l4928 342C                                         l4890 3244  
                                       l4882 3176                                         l4874 2730  
                                       l4866 26C8                                         l4858 2658  
                                       l4794 2324                                         l4786 22B2  
                                       l4778 2256                                         l4698 46F0  
                                       l4970 3640                                         l4962 35D2  
                                       l4954 3564                                         l4946 3510  
                                       l4938 34A2                                         l4892 3260  
                                       l4884 318E                                         l4876 2750  
                                       l4868 26D4                                         l4796 233A  
                                       l4788 22CA                                         l4972 3648  
                                       l4964 35F4                                         l4956 3586  
                                       l4948 3518                                         l4980 1B8E  
                                       l4894 3278                                         l4886 31CE  
                                       l4878 2768                                         l4798 2346  
                                       l4966 35FC                                         l4958 35A8  
                                       l4990 1C30                                         l4982 1BA6  
                                       l4896 3282                                         l4888 31F6  
                                       l4968 361E                                         l4992 1C48  
                                       l4984 1BDE                                         l4976 1B5C  
                                       l4898 3296                                         l4994 1C80  
                                       l4978 1B6E                                         l4986 1BFE  
                                       l4988 1C10                                         l4996 1CA0  
                                       l4998 1CB2                                         u4000 42BC  
                    color_calibration@orange 010E                                 _BAUD4CONbits 0EE9  
                                       u4001 42B8                                         u4010 42E2  
                                       u4011 42DE                                         u4020 468E  
                                       u4100 23EC                                         u4021 468A  
                                       u4101 23E8                                         u4030 46A4  
                                       u4031 46A0                                         u4111 240A  
                                       u3400 4570                                         u4200 3244  
                                       u4120 24A2                                         u4040 21CA  
                                       u3401 456C                                         u4201 3240  
                                       u4121 249E                                         u4041 21C6  
                                       u3410 3DE8                                         u4210 3252  
                                       _T2PR 0FBC                                         u3411 3DE4  
                                       u4211 324E                                         u4131 24C0  
                                       u4051 21E8                                         u3420 3EB2  
                                       u4220 3260                                         u3500 4774  
                                       u4140 2558                                         u4060 2280  
                                       u4300 34A2                                         u3421 3EAE  
                                       u4221 325C                                         u3501 4770  
                                       u4141 2554                                         u4061 227C  
                                       u4301 349E                                         u3510 3ADC  
                                       u4230 3278                                         u4310 34C4  
                                       u3430 4206                                         u3511 3AD8  
                                       u4231 3274                                         u4151 2576  
                                       u4071 229E                                         u4311 34C0  
                                       u3431 4202                                         u5007 1D84  
                                       u3600 3DC0                                         u3520 3B04  
                                       u4240 3296                                         u3360 4818  
                                       u4160 260E                                         u4080 2336  
                                       u4400 361E                                         u4320 34EE  
                                       u3440 422E                                         u3601 3DBC  
                                       u3521 3B00                                         u4241 3292  
                                       u3361 4814                                         u4161 260A  
                                       u4081 2332                                         u4401 361A  
                                       u4321 34EA                                         u3441 422A  
                                       u5017 1DEE                                         u3530 3B46  
                                       u4250 32C8                                         u3370 482E  
                                       u4410 3640                                         u4330 3510  
                                       u3610 38F4                                         u3450 409A  
                                       u3531 3B42                                         u4251 32C4  
                                       u3371 482A                                         u4171 262C  
                                       u4091 2354                                         u4411 363C  
                                       u4331 350C                                         u3611 38F0  
                                       u3451 4096                                         u5107 207C  
                                       u5027 1E26                                         u3380 4536  
                                       u3540 3B5A                                         u3700 4364  
                                       u4180 26C4                                         u4340 353A  
                                       u4260 340A                                         u3620 391C  
                                       u3460 412C                                         u4500 15D2  
                                       u4420 1B6E                                         u3381 4532  
                                       u3541 3B56                                         u3701 4360  
                                       u4181 26C0                                         u4341 3536  
                                       u4261 3406                                         u3621 3918  
                                       u3461 4128                                         u4501 15CE  
                                       u5117 20B4                                         u5037 1E5E  
                                       u4421 1B6A                                         u3390 4554  
                                       u3550 3BEC                                         u3470 46D8  
                                       u3710 3F4A                                         u4350 355C  
                                       u4270 342C                                         u3630 395E  
                                       u4510 1610                                         u4430 1C10  
                                       u3391 4550                                         u3551 3BE8  
                                       u3471 46D0                                         u3711 3F46  
                                       u4191 26E2                                         u4351 3558  
                                       u4271 3428                                         u3631 395A  
                                       u4511 160C                                         u5207 1066  
                                       u5127 20EC                                         u5047 1EC8  
                                       u4431 1C0C                                         u3560 3CB0  
                                       u3720 3F6C                                         u3800 2F5E  
                                       u4360 3586                                         u4280 3456  
                                       u3640 3972                                         u4520 16A2  
                                       u4440 1CB2                                         u3561 3CAC  
                                       u3721 3F68                                         u3801 2F5A  
                                       u4361 3582                                         u4281 3452  
                                       u3641 396E                                         u4521 169E  
                                       u5217 10C0                                         u5137 0E2C  
                                       u5057 1F00                                         u4441 1CAE  
                                       u4601 2774                                         u3570 3CD8  
                                       u3730 3FA6                                         u3490 47A0  
                                       u3810 3010                                         u4370 35A8  
                                       u4290 3478                                         u3650 3A04  
                                       u4530 1734                                         u4450 1DC4  
                                       u3571 3CD4                                         u3731 3FA2  
                                       u3491 479C                                         u3811 300C  
                                       u4371 35A4                                         u4291 3474  
                                       u3651 3A00                                         u4531 1730  
                                       u5307 135E                                         u5227 10F8  
                                       u5147 0E64                                         u5067 1F38  
                                       u4451 1DC0                                         u4611 2780  
                                       u3580 3D1A                                         u3740 3FC8  
                                       u3660 45AE                                         u4380 35D2  
                                       u4540 1836                                         u3900 1198  
                                       u4460 1E9E                                         u3581 3D16  
                                       u3741 3FC4                                         u3661 45AA  
                                       u4381 35CE                                         u4541 1832  
                                       u5317 13D8                                         u3901 1194  
                                       u5237 1130                                         u5157 0E9C  
                                       u5077 1FA2                                         u4461 1E9A  
                                       u4701 2968                                         u4621 278C  
                                       u3590 3D2E                                         u3750 3FF0  
                                       u3670 45E8                                         u3830 312C  
                                       u4390 35F4                                         u4550 18E8  
                                       u3910 124A                                         u4470 1F78  
                                       u4630 2840                                         u3591 3D2A  
                                       u3751 3FEC                                         u3671 45E4  
                                       u3831 3128                                         u4391 35F0  
                                       u4551 18E4                                         u5407 1704  
                                       u5327 1410                                         u3911 1246  
                                       u5247 1168                                         u5167 0ED4  
                                       u5087 1FDA                                         u4471 1F74  
                                       u4711 297A                                         u4631 283C  
                                       u3488 46DA                                         u3760 4022  
                                       u3680 431A                                         u3840 48DC  
                                       u4560 199A                                         u3920 12FC  
                                       u4480 2052                                         u3761 401E  
                                       u3681 4316                                         u3825 302E  
                                       u3841 48D8                                         u4561 1996  
                                       u5417 175E                                         u5337 14E8  
                                       u3921 12F8                                         u5257 11C2  
                                       u5177 0F9C                                         u4481 204E  
                                       u5097 2012                                         u4801 2AE0  
                                       u4721 298C                                         u4641 28F0  
                                       u3850 4996                                         u3690 433C  
                                       u3770 2DF8                                         u4570 1A4C  
                                       u3930 13AE                                         u4490 212C  
                                       u3851 4992                                         u3691 4338  
                                       u3771 2DF4                                         u4571 1A48  
                                       u5507 19FC                                         u5427 1796  
                                       u5347 1520                                         u3931 13AA  
                                       u5267 11FA                                         u5187 0FD4  
                                       u4491 2128                                         u4811 2AF2  
                                       u4731 299E                                         u4651 290E  
                                       u3780 2E0E                                         u4580 1B32  
                                       u3940 1494                                         u3860 0F34  
                                       u4740 2A30                                         u3781 2E0A  
                                       u4581 1B2E                                         u5517 1A76  
                                       u5437 17CE                                         u5357 1558  
                                       u3941 1490                                         u5277 1274  
                                       u5197 102E                                         u3861 0F30  
                                       u4821 2B04                                         u4741 2A2C  
                                       u4661 2920                                         u3790 2E88  
                                       u4590 1B5A                                         u3950 14BC  
                                       u3870 0F72                                         u3791 2E84  
                                       u5607 2260                                         u4591 1B56  
                                       u5527 1AAE                                         u5447 1806  
                                       u5367 1590                                         u3951 14B8  
                                       u5287 12AC                                         u3871 0F6E  
                                       u4831 2B16                                         u4671 2932  
                                       u3960 4242                                         u3880 1004  
                                       u3961 423E                                         u5617 2316  
                                       u5537 40FC                                         u5457 1860  
                                       u5377 163A                                         u5297 1326  
                                       u3881 1000                                         u4841 2B28  
                                       u4761 2A8C                                         u4681 2944  
                                       u3970 425C                                         u3890 1096  
                                       u3971 4258                                         u5707 3200  
                                       u5627 23CC                                         u5547 38C4  
                                       u5467 1898                                         u5387 1672  
                                       u3891 1092                                         u4851 2B3A  
                                       u4771 2AAA                                         u4755 2A3C  
                                       u4691 2956                                         u4907 2852  
                                       u3980 4282                                         u3981 427E  
                                       u5717 32AC                                         u5637 2482  
                                       u5557 392E                                         u5477 1912  
                                       u5397 16CC                                         u4781 2ABC  
                                       u4757 2A40                                         u4917 29BE  
                                       u3990 42A0                                         u4870 2BE0  
                                       u3991 429C                                         u5807 3CEA  
                                       u5727 330C                                         u5647 2538  
                                       u5567 39D4                                         u5487 194A  
                                       u4871 2BDC                                         u4791 2ACE  
                                       u4927 29EA                                         u4880 2C5C  
                                       u5817 3D90                                         u5737 334C  
                                       u5657 25EE                                         u5577 41D6  
                                       u5497 19C4                                         u4937 1B98  
                                       u4881 2C58                                         u4865 2BC8  
                                       u4890 2C6E                                         u5747 338C  
                                       u5667 26A4                                         u5587 4704  
                                       u4947 1BD0                                         u4891 2C6A  
                                       u4867 2BCC                                         u5757 33D4  
                                       u5677 275A                                         u5597 4464  
                                       u4957 1C3A                                         u5767 3AAC  
                                       u5687 3180                                         u4967 1C72  
                                       u5777 3B16                                         u5697 31C0  
                                       u4977 1CDC                                         u5787 3BBC  
                                       u4987 1D14                                         u5797 3C80  
                                       u4997 1D4C                      color_calibration@yellow 010A  
                lostReturnHome@straightSpeed 0036                                         _main 276E  
                                       _move 1B5C                                         _lost 0047  
                                       _wall 0048                                         fsr1h 0FE2  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                                       max@a 000C                                         max@b 000E  
                                       btemp 004F                                         _stop 4044  
                                       min@a 000C                                         min@b 000E  
                                       prodh 0FF4                                         prodl 0FF3  
                                       start 0092                             color_detect@blue 001E  
                        main@reverseDuration 03A6                             __end_of_ADC_init 4986  
                       ?i2_color_writetoaddr 0003                             color_detect@pink 002A  
                            __end_of_HighISR 0092                        lostReturnHome@curMove 0035  
                               ___param_bank 0000                         __end_of_batteryLevel 46AE  
                                      ??_max 0010                                        ??_min 0010  
                            __end_of___aldiv 4044                                        ?_main 0001  
                                      _ADPCH 0F5F                              __end_of___awdiv 42F4  
                                      ?_move 00D8                              __end_of___lldiv 4398  
                                      ?_stop 001F                              ___awdiv@divisor 000E  
                            __end_of___lwdiv 4590                                        i2l141 494C  
                                      i2l250 4830                                        i2l138 451A  
                                      i2l413 49B4                                        i2l253 4856  
                                      i2l406 48C8                                        i2l262 49FE  
                                      i2l256 4A08                                        i2l360 0086  
                                      i2l265 49CC                                        i2l399 48A2  
                            ___awdiv@counter 0010                               ??_color_detect 0042  
                                      _TMR0H 0FD4                                        _TMR0L 0FD3  
                        ___lmul@multiplicand 0010                   __end_of_I2C_2_Master_Start 49EC  
                 __end_of_I2C_2_Master_Write 49C2                                   _Buggy_init 4728  
                 color_calibration@lightblue 0110                       returnHome@straightRamp 0038  
                     returnHome@straightTime 0033                                        tablat 0FF5  
                                      plusw0 0FEB                                        plusw2 0FDB  
                                      ttemp5 0050                                        ttemp6 0053  
                                      ttemp7 0057                                        stop@i 0027  
                                      status 0FD8                                        wtemp8 0050  
                          color_detect@color 0044                            color_detect@green 0018  
                          color_detect@white 003C                        ??i2_color_writetoaddr 0004  
                               main@turnRamp 03A9                        _I2C_2_Master_RepStart 49EC  
                         putCharToRxBuf@byte 0001                              __initialization 45FA  
                  get16bitTMR0val@timer_high 0012                                 __end_of_main 2C72  
                               __end_of_move 21B2                                 __end_of_stop 414C  
                        move@reverseDuration 00E3                              _get16bitTMR0val 47E0  
                                     ??_main 0045                                       ??_move 0041  
                                     ??_stop 0024                                __activetblptr 0000  
                              calibration@mL 002D                                calibration@mR 002F  
                     returnHome@turnDuration 003A                                 ?_setMotorPWM 0019  
                                     _ADRESH 0F64                                       _CCPR1H 0FAA  
                                     _CCPR2H 0FA6                                       _CCPR3H 0F25  
                                     _CCPR4H 0F21                             ___awdiv@dividend 000C  
                     lostReturnHome@turnRamp 003B                                       _RC0PPS 0E62  
                                     _RC4REG 0EE3                                       _RE2PPS 0E74  
                                     _RC7PPS 0E69                                       _RD5PPS 0E6F  
                                     _RE4PPS 0E76                                       _RD6PPS 0E70  
                                     i2l3110 49F6                                       i2l3112 49FA  
                                     i2l3106 4A00                                       i2l3114 49C4  
                                     i2l3108 4A04                                       i2l3116 49C8  
                                     i2l4040 0022                                       i2l4050 0040  
                                     i2l4042 0026                                       i2l2516 499E  
                                     i2l4060 006E                                       i2l4052 0042  
                                     i2l4044 002A                                       i2l4062 0082  
                                     i2l4054 0050                                       i2l4046 002E  
                                     i2l4038 0012                                       i2l2800 4830  
                                     i2l4056 0056                                       i2l4048 003C  
                                     i2l2802 4840                                       i2l3370 4930  
                                     i2l4058 0066                                       _RG6PPS 0E88  
                                     i2l3860 48A0                                       i2l3862 48A4  
                                     i2l3854 4880                                       i2l3864 48B4  
                                     i2l3856 4890                                       i2l3880 44B6  
                                     i2l3866 48B8                                       i2l3858 4894  
                                     i2l3890 44FC                                       i2l3882 44C2  
                                     i2l3892 4506                                       i2l3884 44D8  
                                     i2l3894 4510                                       i2l3886 44E8  
                                     i2l3878 44A2                                       i2l3888 44F2  
                                  ??_HighISR 000A                     __end_of_color_click_init 4728  
                                     _TMR0IE 714D                                       _TMR0IF 719D  
                                     _RX4PPS 0E15                                       _TX4REG 0EE4  
                              main@lightblue 03CE                                 ??_ADC_getval 000C  
                              ??_Timer0_init 000C                          calibration@turnRamp 0034  
                    calibration@turnDuration 0032                                 _CCPTMRS0bits 0FAD  
                           _getCharFromTxBuf 48A4                                       ___lmul 4590  
                                  ??___aldiv 0020                                       ___wmul 4858  
                                  ??___awdiv 0010                                    ??___lldiv 0020  
                                  ??___lwdiv 0016                                       clear_0 4638  
                                     clear_1 4644                             ___awdiv@quotient 0012  
                                     isa$std 0001                      returnHome@straightSpeed 0036  
                               __pdataCOMRAM 004D                                       move@mL 00D8  
                                     move@mR 00DA                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                                    ?_ADC_init 0001  
                                     stop@mL 001F                                       stop@mR 0021  
                                ?_Buggy_init 0001                            ??_initDCmotorsPWM 000E  
                         __end_of_ADC_getval 499E                   i2color_writetoaddr@address 0004  
                           __end_of_turnLeft 3DCC                           color_detect@orange 0030  
                 lostReturnHome@moveSequence 0031                        __end_of_isDataInTxBuf 49B6  
                                 __accesstop 0060                      __end_of__initialization 4656  
                         color_detect@yellow 0024                              fullSpeedAhead@i 0028  
                              main@turnSpeed 03A8                       ?_I2C_2_Master_RepStart 0001  
                              ___rparam_used 0001                         __end_of_color_detect 3650  
              lostReturnHome@reverseDuration 0037                               __pcstackCOMRAM 0001  
                    __end_of_get16bitTMR0val 4808                                 ?_white_Light 0001  
                               __pidataBANK0 4A0A                     get16bitTMR0val@timer_low 0010  
                   get16bitTMR0val@timer_val 0014                 ?_color_clear_init_interrupts 0001  
                           _reverseOneSquare 383E                          __end_of_Timer0_init 492E  
                                 ??_ADC_init 000C                                 rgb_2_hsv@HSV 002E  
                               _batteryLevel 4660                                   __pbssBANK0 0060  
                                 __pbssBANK2 0200                               _rgb_2_hsv$3530 00DE  
                             _rgb_2_hsv$3531 00E0                               _rgb_2_hsv$3532 00D8  
                          _color_writetoaddr 48EE                                 _T2CLKCONbits 0FBF  
                             _lostReturnHome 14BE                           ?_color_writetoaddr 000E  
                                    ?___lmul 000C                                      ?___wmul 000C  
                             ___lmul@product 0014                ??_color_clear_init_interrupts 0010  
                                move@curMove 00E1                      lostReturnHome@turnSpeed 0039  
                        ??_color_writetoaddr 000F                                      _SP4BRGH 0EE6  
                                    _SP4BRGL 0EE5                   fullSpeedAhead@straightRamp 0024  
                      turnRight@turnDuration 0024                                      _SSP2ADD 0ED6  
                                    _SSP2BUF 0ED5                                   _color_read 3650  
                     color_writetoaddr@value 000E                                      _HighISR 0008  
                  __end_of_color_writetoaddr 490E                       __end_of_lostReturnHome 1B5C  
                                  _ADREFbits 0F58                           _I2C_2_Master_Start 49E2  
                                 _initUSART4 494E                          i2_I2C_2_Master_Idle 4830  
                         _I2C_2_Master_Write 49B6                                      __Hparam 0000  
                        i2_I2C_2_Master_Stop 49F6                                      __Lparam 0000  
                                _Timer0_init 490E                         calibration@turnSpeed 0031  
                           ?_get16bitTMR0val 000C                                      ___aldiv 3F38  
                                    ___awdiv 4230                              lostReturnHome@i 0040  
                                    ___lldiv 42F4                                ??_calibration 0035  
                        ?_I2C_2_Master_Start 0001                                      ___lwdiv 451C  
                        ?_I2C_2_Master_Write 0001                                 __psmallconst 0E00  
                                    _ambient 004D                                      __pcinit 45FA  
                                    __ramtop 0E00                                    ?_turnLeft 001F  
                          __end_of_rgb_2_hsv 314E                                      __ptext0 276E  
                                    __ptext1 1B5C                                      __ptext2 0E02  
                                    __ptext3 14BE                                      __ptext4 4044  
                                    __ptext5 383E                                      __ptext6 49CE  
                                    __ptext7 47E0                                      __ptext8 414C  
                                    __ptext9 494E                         ?i2_I2C_2_Master_Idle 0001  
                                  _T2CONbits 0FBD                         ?i2_I2C_2_Master_Stop 0001  
                           ___aldiv@dividend 0018                                    _T2HLTbits 0FBE  
                              _RxBufWriteCnt 004C                                      main@HSV 03DE  
                   __end_of_getCharFromTxBuf 48CA                                      main@buf 0300  
                                    main@red 03AA                         ??_I2C_2_Master_Start 000D  
                       ??_I2C_2_Master_Write 000D                         end_of_initialization 4656  
            ??i2_color_clear_init_interrupts 0005                  __end_ofi2_color_writetoaddr 494E  
                           ADC_getval@tmpval 000C                            reverseOneSquare@i 0029  
                          ?_color_click_init 0001                              ?_lostReturnHome 002D  
                            ___lldiv@divisor 001C                                   _resetTimer 49CE  
                         ??_color_click_init 0015                              ___lldiv@counter 0024  
                           ___aldiv@quotient 0022                   batteryLevel@batteryQuarter 0015  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc1 0FE6  
                                    postinc2 0FDE                   batteryLevel@batteryVoltage 0014  
                                 main@F14640 009C                                   main@F14644 0252  
                                 main@F14646 0200                                   main@F14649 00EE  
                                 _returnHome 0E02                              _initDCmotorsPWM 4398  
                                 ??_turnLeft 0026                                    _PORTFbits 0F8E  
                         setMotorPWM@negDuty 001E                        ??i2_I2C_2_Master_Idle 0001  
                              move@turnSpeed 00E5                            __end_of_turnRight 3BF8  
                      ??i2_I2C_2_Master_Stop 0002                          __end_of_calibration 33E8  
                               _color_detect 33E8                                  returnHome@i 0040  
                                  _TRISAbits 0F81                           setMotorPWM@posDuty 001D  
                                  _TRISBbits 0F82                                    _TRISCbits 0F83  
                                  _TRISDbits 0F84                                    _TRISEbits 0F85  
                                  _TRISFbits 0F86                                    _TRISGbits 0F87  
                                  _TRISHbits 0F88                             white_Light@state 000C  
                               ??_Buggy_init 000C                             fullSpeedAhead@mL 001F  
                           fullSpeedAhead@mR 0021                                  ?_color_read 0010  
                   color_writetoaddr@address 000F                      ??_I2C_2_Master_RepStart 000D  
                   __end_of_reverseOneSquare 3A24                                stop@cur_power 0029  
                                _CCP1CONbits 0FAB                       color_calibration@green 0106  
                               _EUSART4RXbuf 00C4                          returnHome@turnSpeed 0039  
                               _EUSART4TXbuf 0060                                  _CCP2CONbits 0FA7  
                     color_calibration@white 0112                                  _CCP3CONbits 0F26  
                 lostReturnHome@straightRamp 0038                   lostReturnHome@straightTime 0033  
                                ?_initUSART4 0001                                   main@orange 03C8  
                                _CCP4CONbits 0F22                                   main@motorL 03F6  
                                 main@motorR 03EC                                   main@yellow 03BC  
                             color_read@RGBC 0010                               _fullSpeedAhead 414C  
                             __end_of___lmul 45FA                         turnLeft@turnDuration 0024  
                             __end_of___wmul 487E                           __end_of_Buggy_init 475E  
                              __pidataCOMRAM 4A0E                          start_initialization 45FA  
                                __end_of_max 47B6                                  __end_of_min 478A  
                              _TxBufWriteCnt 004A                   lostReturnHome@turnDuration 003A  
                                 rgb_2_hsv@b 00EC                                   rgb_2_hsv@g 00EA  
                                 rgb_2_hsv@r 00E2                             move@moveSequence 00DD  
      __end_ofi2_color_clear_init_interrupts 451C                i2_color_clear_init_interrupts 44A2  
                                ?_resetTimer 0001                      __end_of_initDCmotorsPWM 4428  
                     __end_of_fullSpeedAhead 4230                           turnRight@cur_power 002B  
                                   ??___lmul 0014                                rgb_2_hsv@RGBC 0026  
                                   ??___wmul 0010                               _putCharToRxBuf 487E  
                                __pdataBANK0 00EE                                rgb_2_hsv@diff 00E6  
              i2I2C_2_Master_Write@data_byte 0002                                  _calibration 314E  
                              rgb_2_hsv@cmax 00E4                                rgb_2_hsv@cmin 00DC  
                                ?_returnHome 002D                 reverseOneSquare@straightRamp 0025  
               __end_ofi2_I2C_2_Master_Start 4A0A                 __end_ofi2_I2C_2_Master_Write 49CE  
                          turnLeft@cur_power 002B                                  __pbssCOMRAM 0047  
                              __pcstackBANK0 00D8                                __pcstackBANK1 0100  
                              __pcstackBANK3 0300                                     ?_HighISR 0001  
                           stop@straightRamp 0023                             ___lwdiv@dividend 0012  
                               ?_Timer0_init 0001                       __end_of_putCharToRxBuf 48A4  
                            ?_fullSpeedAhead 001F                                    __pintcode 0008  
                                   ?___aldiv 0018                           turnRight@turnSpeed 0023  
                                   ?___awdiv 000C                                     ?___lldiv 0018  
                                   ?___lwdiv 0012                         I2C_2_Master_Read@ack 000E  
                       I2C_2_Master_Read@tmp 000F                                  __smallconst 0E00  
                           main@moveSequence 037E                            _I2C_2_Master_Idle 4808  
                          _I2C_2_Master_Init 47B6                            _I2C_2_Master_Read 46AE  
                          turnLeft@turnSpeed 0023                            _I2C_2_Master_Stop 49D8  
                                  _rgb_2_hsv 2C72                                 _RxBufReadCnt 004B  
                                   _ADC_init 496C                           ?_I2C_2_Master_Idle 0001  
                         ?_I2C_2_Master_Init 0001                           ?_I2C_2_Master_Read 0001  
                              ??_setMotorPWM 001B                           ?_I2C_2_Master_Stop 0001  
                           ___lwdiv@quotient 0017                     initDCmotorsPWM@PWMperiod 000C  
                          ?_getCharFromTxBuf 0001                             ??_lostReturnHome 003C  
                         ??_getCharFromTxBuf 0001                            move@straightSpeed 00E2  
                            ___aldiv@divisor 001C                          ??_I2C_2_Master_Idle 000C  
                            ___aldiv@counter 0020                          ??_I2C_2_Master_Init 000C  
                        ??_I2C_2_Master_Read 000D                               ___wmul@product 0010  
                                   _LATAbits 0F79                          ??_I2C_2_Master_Stop 000D  
                                   _LATCbits 0F7B                                _isDataInTxBuf 499E  
                                   _LATDbits 0F7C                                     _LATEbits 0F7D  
                                   _LATFbits 0F7E                                     _LATGbits 0F7F  
                                   _LATHbits 0F80                                     _IPR0bits 0E1F  
                                   _PIE0bits 0E29                                     _PIE4bits 0E2D  
                                   i2u130_40 49B4                                  turnRight@mL 001F  
                                turnRight@mR 0021                                     i2u129_40 49B2  
                                   i2u129_41 49AC                                     i2u330_40 003C  
                                   i2u330_41 0038                                     i2u331_40 0050  
                                   i2u331_41 004C                                     i2u332_40 0066  
                                   i2u332_41 0062                                     i2u333_40 0082  
                                   i2u333_41 007E                                     _PIR0bits 0E33  
                                   i2u177_40 4840                                     i2u329_40 0022  
                                   i2u177_41 483C                                     i2u329_41 001E  
                                   i2u178_40 4856                                     i2u178_41 4852  
                                   _PIR4bits 0E37                                     i2u296_40 4890  
                                   i2u296_41 488C                                     i2u297_40 48B4  
                                   i2u297_41 48B0                                     i2u582_47 44DE  
                            ?_putCharToRxBuf 0001                             ?_initDCmotorsPWM 000C  
                fullSpeedAhead@straightSpeed 0023          __end_of_color_clear_init_interrupts 44A2  
             ?i2_color_clear_init_interrupts 0001                  _color_clear_init_interrupts 4428  
                                   _SSP2CON2 0EDA                                     _SSP2STAT 0ED8  
                               move@turnRamp 00E7                                   _ADCON0bits 0F60  
                  __end_of_I2C_2_Master_Idle 4830                        color_calibration@RGBC 0100  
                  __end_of_I2C_2_Master_Init 47E0                    __end_of_I2C_2_Master_Read 46F0  
                          ___wmul@multiplier 000C                    __end_of_I2C_2_Master_Stop 49E2  
   color_clear_init_interrupts@low_threshold 0013   i2color_clear_init_interrupts@low_threshold 0008  
                               setMotorPWM@m 0019                  I2C_2_Master_Write@data_byte 000D  
                      color_calibration@blue 0108                           returnHome@turnRamp 003B  
                                  main@color 03DB                        color_calibration@pink 010C  
                                  main@green 03B0                                    main@white 03D4  
                                 ?_rgb_2_hsv 0026                                 _TxBufReadCnt 0049  
                   i2color_writetoaddr@value 0003                                    _turnRight 3A24  
                  returnHome@reverseDuration 0037                                 ??_color_read 0012  
                          ___lmul@multiplier 000C                                    copy_data0 460E  
                             ?_isDataInTxBuf 0001                __end_of_I2C_2_Master_RepStart 49F6  
                          ?_reverseOneSquare 001F                          __end_of_setMotorPWM 3F38  
                               ??_initUSART4 000C                         i2_I2C_2_Master_Start 4A00  
            reverseOneSquare@reverseDuration 0024                         i2_I2C_2_Master_Write 49C2  
                         ??_reverseOneSquare 0026                                     __Hrparam 0000  
                                 _ADC_getval 4986                             main@testSequence 037A  
                                   __Lrparam 0000                                ??_white_Light 000C  
                __end_ofi2_I2C_2_Master_Idle 4858                  __end_ofi2_I2C_2_Master_Stop 4A00  
                           lostReturnHome@mL 002D                             lostReturnHome@mR 002F  
                         __end_of_color_read 383E                                   _ANSELBbits 0E9A  
                                 _ANSELDbits 0EA7                                   _ANSELFbits 0EB4  
                                 _T0CON0bits 0FD5                                   _T0CON1bits 0FD6  
                          _color_calibration 21B2                reverseOneSquare@straightSpeed 0023  
                            ___lwdiv@divisor 0014                       returnHome@moveSequence 0031  
                         __end_of_initUSART4 496C                              ___lwdiv@counter 0016  
                          turnRight@turnRamp 0025                                   ?_turnRight 001F  
                                   __ptext10 4398                                     __ptext11 33E8  
                                   __ptext20 478A                                     __ptext12 46F0  
                                   __ptext21 4590                                     __ptext13 4428  
                                   __ptext30 4808                                     __ptext22 42F4  
                                   __ptext14 48EE                                     __ptext31 314E  
                                   __ptext23 3F38                                     __ptext15 47B6  
                                   __ptext40 4986                                     __ptext32 3A24  
                                   __ptext24 3650                                     __ptext16 21B2  
                                   __ptext41 490E                                     __ptext33 3BF8  
                                   __ptext25 49B6                                     __ptext17 48CA  
                                   __ptext50 487E                                     __ptext42 4728  
                                   __ptext34 3DCC                                     __ptext26 49D8  
                                   __ptext18 2C72                                     __ptext51 499E  
                                   __ptext35 4858                                     __ptext27 49E2  
                                   __ptext19 475E                                     __ptext52 48A4  
                                   __ptext44 44A2                                     __ptext36 451C  
                                   __ptext28 49EC                                     __ptext45 492E  
                                   __ptext37 4660                                     __ptext29 46AE  
                                   __ptext46 49C2                                     __ptext38 4230  
                                   __ptext47 49F6                                     __ptext39 496C  
                                   __ptext48 4A00                                     __ptext49 4830  
                                  move@color 00DC                           ?_color_calibration 0100  
                              ?_batteryLevel 0001                                 _SSP2CON1bits 0ED9  
                               _SSP2CON2bits 0EDA                             turnLeft@turnRamp 0025  
                                 turnLeft@mL 001F                                   turnLeft@mR 0021  
                        ??_color_calibration 003C                        ?i2_I2C_2_Master_Start 0001  
                           move@straightRamp 00E4                        ?i2_I2C_2_Master_Write 0001  
                           move@straightTime 00DF                            returnHome@curMove 0035  
                               ??_resetTimer 000C                                   turnRight@i 0029  
                                   isa$xinst 0000                                   _RC4STAbits 0EE7  
                                   main@RGBC 03E4                                     int$flags 004F  
                       color_calibration@HSV 0102                                 ?_calibration 002D  
                                   main@blue 03B6                         color_calibration@red 0104  
                               ??_returnHome 003C                                     main@pink 03C2  
                                   _turnLeft 3BF8                      fullSpeedAhead@cur_power 002A  
                        __end_of_white_Light 48EE                    __end_of_color_calibration 276E  
                                 _INTCONbits 0FF2                    reverseOneSquare@cur_power 002B  
                                ??_rgb_2_hsv 0030                           reverseOneSquare@mL 001F  
                         reverseOneSquare@mR 0021                           __end_of_resetTimer 49D8  
                           move@turnDuration 00E6                               ??_batteryLevel 0014  
                                _setMotorPWM 3DCC                            ??_get16bitTMR0val 000E  
                            ??_isDataInTxBuf 0001                                     intlevel2 0000  
                           ___lldiv@dividend 0018                             ??_fullSpeedAhead 0025  
                         __end_of_returnHome 14BE                                    turnLeft@i 0029  
                                ?_ADC_getval 0001                            main@straightSpeed 03A7  
                           _color_click_init 46F0                        color_detect@lightblue 0036  
                                 _SSP2DATPPS 0E1D                             ___lldiv@quotient 0020  
                                 _SSP2CLKPPS 0E1C                                 ___aldiv@sign 0021  
                                ??_turnRight 0026                             main@straightRamp 03DC  
                           main@straightTime 0328                                   _TX4STAbits 0EE8  
                     ??i2_I2C_2_Master_Start 0002                       ??i2_I2C_2_Master_Write 0002  
                           ??_putCharToRxBuf 0001                                 returnHome@mL 002D  
                               returnHome@mR 002F  
