

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 01:48:58 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 21/07/2023 GMT
    77                           ; 
    78                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F67K40 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataCOMRAM
   112   00493E                     __pidataCOMRAM:
   113                           	callstack 0
   114                           
   115                           ;initializer for _ambient
   116   00493E  01F4               	dw	500
   117                           
   118                           	psect	idataBANK0
   119   00493A                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for main@F14649
   123   00493A  04                 	db	4
   124   00493B  03                 	db	3
   125   00493C  09                 	db	9
   126   00493D  08                 	db	8
   127   000000                     _TRISCbits	set	3971
   128   000000                     _RC4STAbits	set	3815
   129   000000                     _SP4BRGH	set	3814
   130   000000                     _SP4BRGL	set	3813
   131   000000                     _TX4STAbits	set	3816
   132   000000                     _BAUD4CONbits	set	3817
   133   000000                     _TX4REG	set	3812
   134   000000                     _TRISBbits	set	3970
   135   000000                     _TRISAbits	set	3969
   136   000000                     _TRISEbits	set	3973
   137   000000                     _TRISGbits	set	3975
   138   000000                     _LATFbits	set	3966
   139   000000                     _TRISFbits	set	3974
   140   000000                     _TRISHbits	set	3976
   141   000000                     _TRISDbits	set	3972
   142   000000                     _LATEbits	set	3965
   143   000000                     _LATGbits	set	3967
   144   000000                     _LATHbits	set	3968
   145   000000                     _SSP2CON2bits	set	3802
   146   000000                     _TMR0IF	set	29085
   147   000000                     _TMR0IE	set	29005
   148   000000                     _RX4PPS	set	3605
   149   000000                     _SSP2CLKPPS	set	3612
   150   000000                     _SSP2DATPPS	set	3613
   151   000000                     _PIE0bits	set	3625
   152   000000                     _CCPR4H	set	3873
   153   000000                     _CCPR3H	set	3877
   154   000000                     _CCPR2H	set	4006
   155   000000                     _CCPR1H	set	4010
   156   000000                     _CCP1CONbits	set	4011
   157   000000                     _CCPTMRS0bits	set	4013
   158   000000                     _T2PR	set	4028
   159   000000                     _T2CONbits	set	4029
   160   000000                     _INTCONbits	set	4082
   161   000000                     _CCP2CONbits	set	4007
   162   000000                     _CCP3CONbits	set	3878
   163   000000                     _ADREFbits	set	3928
   164   000000                     _LATAbits	set	3961
   165   000000                     _LATDbits	set	3964
   166   000000                     _PORTFbits	set	3982
   167   000000                     _CCP4CONbits	set	3874
   168   000000                     _PIE4bits	set	3629
   169   000000                     _RD5PPS	set	3695
   170   000000                     _ANSELDbits	set	3751
   171   000000                     _SSP2ADD	set	3798
   172   000000                     _SSP2CON1bits	set	3801
   173   000000                     _LATCbits	set	3963
   174   000000                     _RC4REG	set	3811
   175   000000                     _SSP2CON2	set	3802
   176   000000                     _SSP2STAT	set	3800
   177   000000                     _ANSELFbits	set	3764
   178   000000                     _SSP2BUF	set	3797
   179   000000                     _IPR0bits	set	3615
   180   000000                     _RE2PPS	set	3700
   181   000000                     _ANSELBbits	set	3738
   182   000000                     _RD6PPS	set	3696
   183   000000                     _PIR0bits	set	3635
   184   000000                     _PIR4bits	set	3639
   185   000000                     _RC0PPS	set	3682
   186   000000                     _RC7PPS	set	3689
   187   000000                     _ADPCH	set	3935
   188   000000                     _ADRESH	set	3940
   189   000000                     _ADCON0bits	set	3936
   190   000000                     _RE4PPS	set	3702
   191   000000                     _RG6PPS	set	3720
   192   000000                     _TMR0L	set	4051
   193   000000                     _TMR0H	set	4052
   194   000000                     _T0CON0bits	set	4053
   195   000000                     _T0CON1bits	set	4054
   196   000000                     _T2CLKCONbits	set	4031
   197   000000                     _T2HLTbits	set	4030
   198                           
   199                           ; #config settings
   200                           
   201                           	psect	cinit
   202   00452A                     __pcinit:
   203                           	callstack 0
   204   00452A                     start_initialization:
   205                           	callstack 0
   206   00452A                     __initialization:
   207                           	callstack 0
   208                           
   209                           ; Initialize objects allocated to BANK0 (4 bytes)
   210                           ; load TBLPTR registers with __pidataBANK0
   211   00452A  0E3A               	movlw	low __pidataBANK0
   212   00452C  6EF6               	movwf	tblptrl,c
   213   00452E  0E49               	movlw	high __pidataBANK0
   214   004530  6EF7               	movwf	tblptrh,c
   215   004532  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   216   004534  6EF8               	movwf	tblptru,c
   217   004536  EE00  F0EE         	lfsr	0,__pdataBANK0
   218   00453A  EE10 F004          	lfsr	1,4
   219   00453E                     copy_data0:
   220   00453E  0009               	tblrd		*+
   221   004540  CFF5 FFEE          	movff	tablat,postinc0
   222   004544  50E5               	movf	postdec1,w,c
   223   004546  50E1               	movf	fsr1l,w,c
   224   004548  E1FA               	bnz	copy_data0
   225                           
   226                           ; Initialize objects allocated to COMRAM (2 bytes)
   227                           ; load TBLPTR registers with __pidataCOMRAM
   228   00454A  0E3E               	movlw	low __pidataCOMRAM
   229   00454C  6EF6               	movwf	tblptrl,c
   230   00454E  0E49               	movlw	high __pidataCOMRAM
   231   004550  6EF7               	movwf	tblptrh,c
   232   004552  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   233   004554  6EF8               	movwf	tblptru,c
   234   004556  0009               	tblrd		*+	;fetch initializer
   235   004558  CFF5 F04D          	movff	tablat,__pdataCOMRAM
   236   00455C  0009               	tblrd		*+	;fetch initializer
   237   00455E  CFF5 F04E          	movff	tablat,__pdataCOMRAM+1
   238                           
   239                           ; Clear objects allocated to BANK2 (122 bytes)
   240   004562  EE02  F000         	lfsr	0,__pbssBANK2
   241   004566  0E7A               	movlw	122
   242   004568                     clear_0:
   243   004568  6AEE               	clrf	postinc0,c
   244   00456A  06E8               	decf	wreg,f,c
   245   00456C  E1FD               	bnz	clear_0
   246                           
   247                           ; Clear objects allocated to BANK0 (120 bytes)
   248   00456E  EE00  F060         	lfsr	0,__pbssBANK0
   249   004572  0E78               	movlw	120
   250   004574                     clear_1:
   251   004574  6AEE               	clrf	postinc0,c
   252   004576  06E8               	decf	wreg,f,c
   253   004578  E1FD               	bnz	clear_1
   254                           
   255                           ; Clear objects allocated to COMRAM (6 bytes)
   256   00457A  6A4C               	clrf	(__pbssCOMRAM+5)& (0+255),c
   257   00457C  6A4B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   258   00457E  6A4A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   259   004580  6A49               	clrf	(__pbssCOMRAM+2)& (0+255),c
   260   004582  6A48               	clrf	(__pbssCOMRAM+1)& (0+255),c
   261   004584  6A47               	clrf	__pbssCOMRAM& (0+255),c
   262   004586                     end_of_initialization:
   263                           	callstack 0
   264   004586                     __end_of__initialization:
   265                           	callstack 0
   266   004586  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   267   004588  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   268   00458A  0100               	movlb	0
   269   00458C  EF25  F016         	goto	_main	;jump to C main() function
   270                           
   271                           	psect	bssCOMRAM
   272   000047                     __pbssCOMRAM:
   273                           	callstack 0
   274   000047                     _lost:
   275                           	callstack 0
   276   000047                     	ds	1
   277   000048                     _wall:
   278                           	callstack 0
   279   000048                     	ds	1
   280   000049                     _TxBufReadCnt:
   281                           	callstack 0
   282   000049                     	ds	1
   283   00004A                     _TxBufWriteCnt:
   284                           	callstack 0
   285   00004A                     	ds	1
   286   00004B                     _RxBufReadCnt:
   287                           	callstack 0
   288   00004B                     	ds	1
   289   00004C                     _RxBufWriteCnt:
   290                           	callstack 0
   291   00004C                     	ds	1
   292                           
   293                           	psect	dataCOMRAM
   294   00004D                     __pdataCOMRAM:
   295                           	callstack 0
   296   00004D                     _ambient:
   297                           	callstack 0
   298   00004D                     	ds	2
   299                           
   300                           	psect	bssBANK0
   301   000060                     __pbssBANK0:
   302                           	callstack 0
   303   000060                     _EUSART4TXbuf:
   304                           	callstack 0
   305   000060                     	ds	60
   306   00009C                     	ds	40
   307   0000C4                     _EUSART4RXbuf:
   308                           	callstack 0
   309   0000C4                     	ds	20
   310                           
   311                           	psect	dataBANK0
   312   0000EE                     __pdataBANK0:
   313                           	callstack 0
   314   0000EE                     main@F14649:
   315                           	callstack 0
   316   0000EE                     	ds	4
   317                           
   318                           	psect	bssBANK2
   319   000200                     __pbssBANK2:
   320                           	callstack 0
   321   000200                     	ds	82
   322   000252                     	ds	40
   323                           
   324                           	psect	cstackBANK3
   325   000300                     __pcstackBANK3:
   326                           	callstack 0
   327   000300                     main@buf:
   328                           	callstack 0
   329                           
   330                           ; 40 bytes @ 0x0
   331   000300                     	ds	40
   332   000328                     main@straightTime:
   333                           	callstack 0
   334                           
   335                           ; 82 bytes @ 0x28
   336   000328                     	ds	82
   337   00037A                     main@testSequence:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x7A
   341   00037A                     	ds	4
   342   00037E                     main@moveSequence:
   343                           	callstack 0
   344                           
   345                           ; 40 bytes @ 0x7E
   346   00037E                     	ds	40
   347   0003A6                     main@reverseDuration:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0xA6
   351   0003A6                     	ds	1
   352   0003A7                     main@straightSpeed:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0xA7
   356   0003A7                     	ds	1
   357   0003A8                     main@turnSpeed:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0xA8
   361   0003A8                     	ds	1
   362   0003A9                     main@turnRamp:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0xA9
   366   0003A9                     	ds	1
   367   0003AA                     main@red:
   368                           	callstack 0
   369                           
   370                           ; 6 bytes @ 0xAA
   371   0003AA                     	ds	6
   372   0003B0                     main@green:
   373                           	callstack 0
   374                           
   375                           ; 6 bytes @ 0xB0
   376   0003B0                     	ds	6
   377   0003B6                     main@blue:
   378                           	callstack 0
   379                           
   380                           ; 6 bytes @ 0xB6
   381   0003B6                     	ds	6
   382   0003BC                     main@yellow:
   383                           	callstack 0
   384                           
   385                           ; 6 bytes @ 0xBC
   386   0003BC                     	ds	6
   387   0003C2                     main@pink:
   388                           	callstack 0
   389                           
   390                           ; 6 bytes @ 0xC2
   391   0003C2                     	ds	6
   392   0003C8                     main@orange:
   393                           	callstack 0
   394                           
   395                           ; 6 bytes @ 0xC8
   396   0003C8                     	ds	6
   397   0003CE                     main@lightblue:
   398                           	callstack 0
   399                           
   400                           ; 6 bytes @ 0xCE
   401   0003CE                     	ds	6
   402   0003D4                     main@white:
   403                           	callstack 0
   404                           
   405                           ; 6 bytes @ 0xD4
   406   0003D4                     	ds	6
   407   0003DA                     main@color:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0xDA
   411   0003DA                     	ds	1
   412   0003DB                     main@curMove:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0xDB
   416   0003DB                     	ds	1
   417   0003DC                     main@straightRamp:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0xDC
   421   0003DC                     	ds	1
   422   0003DD                     main@turnDuration:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0xDD
   426   0003DD                     	ds	1
   427   0003DE                     main@HSV:
   428                           	callstack 0
   429                           
   430                           ; 6 bytes @ 0xDE
   431   0003DE                     	ds	6
   432   0003E4                     main@RGBC:
   433                           	callstack 0
   434                           
   435                           ; 8 bytes @ 0xE4
   436   0003E4                     	ds	8
   437   0003EC                     main@motorR:
   438                           	callstack 0
   439                           
   440                           ; 10 bytes @ 0xEC
   441   0003EC                     	ds	10
   442   0003F6                     main@motorL:
   443                           	callstack 0
   444                           
   445                           ; 10 bytes @ 0xF6
   446   0003F6                     	ds	10
   447                           
   448                           	psect	cstackBANK1
   449   000100                     __pcstackBANK1:
   450                           	callstack 0
   451   000100                     color_calibration@RGBC:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x0
   455   000100                     	ds	2
   456   000102                     color_calibration@HSV:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x2
   460   000102                     	ds	2
   461   000104                     color_calibration@red:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x4
   465   000104                     	ds	2
   466   000106                     color_calibration@green:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x6
   470   000106                     	ds	2
   471   000108                     color_calibration@blue:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x8
   475   000108                     	ds	2
   476   00010A                     color_calibration@yellow:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xA
   480   00010A                     	ds	2
   481   00010C                     color_calibration@pink:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0xC
   485   00010C                     	ds	2
   486   00010E                     color_calibration@orange:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0xE
   490   00010E                     	ds	2
   491   000110                     color_calibration@lightblue:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x10
   495   000110                     	ds	2
   496   000112                     color_calibration@white:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x12
   500   000112                     	ds	2
   501                           
   502                           	psect	cstackBANK0
   503   0000D8                     __pcstackBANK0:
   504                           	callstack 0
   505   0000D8                     move@mL:
   506                           	callstack 0
   507   0000D8                     _rgb_2_hsv$3532:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x0
   511   0000D8                     	ds	2
   512   0000DA                     move@mR:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x2
   516   0000DA                     	ds	2
   517   0000DC                     move@color:
   518                           	callstack 0
   519   0000DC                     rgb_2_hsv@cmin:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x4
   523   0000DC                     	ds	1
   524   0000DD                     move@moveSequence:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x5
   528   0000DD                     	ds	1
   529   0000DE                     _rgb_2_hsv$3530:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x6
   533   0000DE                     	ds	1
   534   0000DF                     move@straightTime:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x7
   538   0000DF                     	ds	1
   539   0000E0                     _rgb_2_hsv$3531:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x8
   543   0000E0                     	ds	1
   544   0000E1                     move@curMove:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x9
   548   0000E1                     	ds	1
   549   0000E2                     move@straightSpeed:
   550                           	callstack 0
   551   0000E2                     rgb_2_hsv@r:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xA
   555   0000E2                     	ds	1
   556   0000E3                     move@reverseDuration:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0xB
   560   0000E3                     	ds	1
   561   0000E4                     move@straightRamp:
   562                           	callstack 0
   563   0000E4                     rgb_2_hsv@cmax:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0xC
   567   0000E4                     	ds	1
   568   0000E5                     move@turnSpeed:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0xD
   572   0000E5                     	ds	1
   573   0000E6                     move@turnDuration:
   574                           	callstack 0
   575   0000E6                     rgb_2_hsv@diff:
   576                           	callstack 0
   577                           
   578                           ; 4 bytes @ 0xE
   579   0000E6                     	ds	1
   580   0000E7                     move@turnRamp:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0xF
   584   0000E7                     	ds	3
   585   0000EA                     rgb_2_hsv@g:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x12
   589   0000EA                     	ds	2
   590   0000EC                     rgb_2_hsv@b:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x14
   594   0000EC                     	ds	2
   595                           
   596                           	psect	cstackCOMRAM
   597   000001                     __pcstackCOMRAM:
   598                           	callstack 0
   599   000001                     ??_getCharFromTxBuf:
   600   000001                     ??i2_I2C_2_Master_Idle:
   601   000001                     putCharToRxBuf@byte:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x0
   605   000001                     	ds	1
   606   000002                     i2I2C_2_Master_Write@data_byte:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x1
   610   000002                     	ds	1
   611   000003                     i2color_writetoaddr@value:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x2
   615   000003                     	ds	1
   616   000004                     i2color_writetoaddr@address:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x3
   620   000004                     	ds	1
   621   000005                     ??i2_color_clear_init_interrupts:
   622                           
   623                           ; 1 bytes @ 0x4
   624   000005                     	ds	1
   625   000006                     i2color_clear_init_interrupts@high_threshold:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x5
   629   000006                     	ds	2
   630   000008                     i2color_clear_init_interrupts@low_threshold:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x7
   634   000008                     	ds	2
   635   00000A                     ??_HighISR:
   636                           
   637                           ; 1 bytes @ 0x9
   638   00000A                     	ds	2
   639   00000C                     ??_I2C_2_Master_Idle:
   640   00000C                     ?_get16bitTMR0val:
   641                           	callstack 0
   642   00000C                     ?_max:
   643                           	callstack 0
   644   00000C                     ?_min:
   645                           	callstack 0
   646   00000C                     ?___wmul:
   647                           	callstack 0
   648   00000C                     ?___awdiv:
   649                           	callstack 0
   650   00000C                     ?___lmul:
   651                           	callstack 0
   652   00000C                     white_Light@state:
   653                           	callstack 0
   654   00000C                     ADC_getval@tmpval:
   655                           	callstack 0
   656   00000C                     max@a:
   657                           	callstack 0
   658   00000C                     min@a:
   659                           	callstack 0
   660   00000C                     initDCmotorsPWM@PWMperiod:
   661                           	callstack 0
   662   00000C                     ___wmul@multiplier:
   663                           	callstack 0
   664   00000C                     ___awdiv@dividend:
   665                           	callstack 0
   666   00000C                     ___lmul@multiplier:
   667                           	callstack 0
   668   00000C                     color_detect@HSV:
   669                           	callstack 0
   670                           
   671                           ; 6 bytes @ 0xB
   672   00000C                     	ds	1
   673   00000D                     ??_I2C_2_Master_Read:
   674   00000D                     I2C_2_Master_Write@data_byte:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0xC
   678   00000D                     	ds	1
   679   00000E                     ??_get16bitTMR0val:
   680   00000E                     color_writetoaddr@value:
   681                           	callstack 0
   682   00000E                     I2C_2_Master_Read@ack:
   683                           	callstack 0
   684   00000E                     max@b:
   685                           	callstack 0
   686   00000E                     min@b:
   687                           	callstack 0
   688   00000E                     ___wmul@multiplicand:
   689                           	callstack 0
   690   00000E                     ___awdiv@divisor:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0xD
   694   00000E                     	ds	1
   695   00000F                     color_writetoaddr@address:
   696                           	callstack 0
   697   00000F                     I2C_2_Master_Read@tmp:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0xE
   701   00000F                     	ds	1
   702   000010                     ??_color_clear_init_interrupts:
   703   000010                     ___awdiv@counter:
   704                           	callstack 0
   705   000010                     color_read@RGBC:
   706                           	callstack 0
   707   000010                     get16bitTMR0val@timer_low:
   708                           	callstack 0
   709   000010                     ___wmul@product:
   710                           	callstack 0
   711   000010                     ___lmul@multiplicand:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0xF
   715   000010                     	ds	1
   716   000011                     ___awdiv@sign:
   717                           	callstack 0
   718   000011                     color_clear_init_interrupts@high_threshold:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x10
   722   000011                     	ds	1
   723   000012                     ??_color_read:
   724   000012                     ?___lwdiv:
   725                           	callstack 0
   726   000012                     get16bitTMR0val@timer_high:
   727                           	callstack 0
   728   000012                     ___awdiv@quotient:
   729                           	callstack 0
   730   000012                     ___lwdiv@dividend:
   731                           	callstack 0
   732   000012                     color_detect@red:
   733                           	callstack 0
   734                           
   735                           ; 6 bytes @ 0x11
   736   000012                     	ds	1
   737   000013                     color_clear_init_interrupts@low_threshold:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x12
   741   000013                     	ds	1
   742   000014                     batteryLevel@batteryVoltage:
   743                           	callstack 0
   744   000014                     get16bitTMR0val@timer_val:
   745                           	callstack 0
   746   000014                     ___lwdiv@divisor:
   747                           	callstack 0
   748   000014                     ___lmul@product:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x13
   752   000014                     	ds	1
   753   000015                     ??_color_click_init:
   754   000015                     batteryLevel@batteryQuarter:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x14
   758   000015                     	ds	1
   759   000016                     ___lwdiv@counter:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x15
   763   000016                     	ds	1
   764   000017                     ___lwdiv@quotient:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x16
   768   000017                     	ds	1
   769   000018                     ?___lldiv:
   770                           	callstack 0
   771   000018                     ?___aldiv:
   772                           	callstack 0
   773   000018                     ___lldiv@dividend:
   774                           	callstack 0
   775   000018                     ___aldiv@dividend:
   776                           	callstack 0
   777   000018                     color_detect@green:
   778                           	callstack 0
   779                           
   780                           ; 6 bytes @ 0x17
   781   000018                     	ds	1
   782   000019                     setMotorPWM@m:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x18
   786   000019                     	ds	2
   787   00001B                     ??_setMotorPWM:
   788                           
   789                           ; 1 bytes @ 0x1A
   790   00001B                     	ds	1
   791   00001C                     ___lldiv@divisor:
   792                           	callstack 0
   793   00001C                     ___aldiv@divisor:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x1B
   797   00001C                     	ds	1
   798   00001D                     setMotorPWM@posDuty:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x1C
   802   00001D                     	ds	1
   803   00001E                     setMotorPWM@negDuty:
   804                           	callstack 0
   805   00001E                     color_detect@blue:
   806                           	callstack 0
   807                           
   808                           ; 6 bytes @ 0x1D
   809   00001E                     	ds	1
   810   00001F                     stop@mL:
   811                           	callstack 0
   812   00001F                     turnLeft@mL:
   813                           	callstack 0
   814   00001F                     turnRight@mL:
   815                           	callstack 0
   816   00001F                     fullSpeedAhead@mL:
   817                           	callstack 0
   818   00001F                     reverseOneSquare@mL:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x1E
   822   00001F                     	ds	1
   823   000020                     ___aldiv@counter:
   824                           	callstack 0
   825   000020                     ___lldiv@quotient:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x1F
   829   000020                     	ds	1
   830   000021                     ___aldiv@sign:
   831                           	callstack 0
   832   000021                     stop@mR:
   833                           	callstack 0
   834   000021                     turnLeft@mR:
   835                           	callstack 0
   836   000021                     turnRight@mR:
   837                           	callstack 0
   838   000021                     fullSpeedAhead@mR:
   839                           	callstack 0
   840   000021                     reverseOneSquare@mR:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x20
   844   000021                     	ds	1
   845   000022                     ___aldiv@quotient:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x21
   849   000022                     	ds	1
   850   000023                     stop@straightRamp:
   851                           	callstack 0
   852   000023                     turnLeft@turnSpeed:
   853                           	callstack 0
   854   000023                     turnRight@turnSpeed:
   855                           	callstack 0
   856   000023                     fullSpeedAhead@straightSpeed:
   857                           	callstack 0
   858   000023                     reverseOneSquare@straightSpeed:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x22
   862   000023                     	ds	1
   863   000024                     ??_stop:
   864   000024                     turnLeft@turnDuration:
   865                           	callstack 0
   866   000024                     turnRight@turnDuration:
   867                           	callstack 0
   868   000024                     fullSpeedAhead@straightRamp:
   869                           	callstack 0
   870   000024                     reverseOneSquare@reverseDuration:
   871                           	callstack 0
   872   000024                     ___lldiv@counter:
   873                           	callstack 0
   874   000024                     color_detect@yellow:
   875                           	callstack 0
   876                           
   877                           ; 6 bytes @ 0x23
   878   000024                     	ds	1
   879   000025                     ??_fullSpeedAhead:
   880   000025                     turnLeft@turnRamp:
   881                           	callstack 0
   882   000025                     turnRight@turnRamp:
   883                           	callstack 0
   884   000025                     reverseOneSquare@straightRamp:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x24
   888   000025                     	ds	1
   889   000026                     ??_turnRight:
   890   000026                     ??_turnLeft:
   891   000026                     ??_reverseOneSquare:
   892   000026                     rgb_2_hsv@RGBC:
   893                           	callstack 0
   894                           
   895                           ; 8 bytes @ 0x25
   896   000026                     	ds	1
   897   000027                     stop@i:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x26
   901   000027                     	ds	1
   902   000028                     fullSpeedAhead@i:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x27
   906   000028                     	ds	1
   907   000029                     stop@cur_power:
   908                           	callstack 0
   909   000029                     turnLeft@i:
   910                           	callstack 0
   911   000029                     turnRight@i:
   912                           	callstack 0
   913   000029                     reverseOneSquare@i:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x28
   917   000029                     	ds	1
   918   00002A                     fullSpeedAhead@cur_power:
   919                           	callstack 0
   920   00002A                     color_detect@pink:
   921                           	callstack 0
   922                           
   923                           ; 6 bytes @ 0x29
   924   00002A                     	ds	1
   925   00002B                     turnLeft@cur_power:
   926                           	callstack 0
   927   00002B                     turnRight@cur_power:
   928                           	callstack 0
   929   00002B                     reverseOneSquare@cur_power:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x2A
   933   00002B                     	ds	2
   934   00002D                     returnHome@mL:
   935                           	callstack 0
   936   00002D                     lostReturnHome@mL:
   937                           	callstack 0
   938   00002D                     calibration@mL:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x2C
   942   00002D                     	ds	1
   943   00002E                     rgb_2_hsv@HSV:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x2D
   947   00002E                     	ds	1
   948   00002F                     returnHome@mR:
   949                           	callstack 0
   950   00002F                     lostReturnHome@mR:
   951                           	callstack 0
   952   00002F                     calibration@mR:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x2E
   956   00002F                     	ds	1
   957   000030                     ??_rgb_2_hsv:
   958   000030                     color_detect@orange:
   959                           	callstack 0
   960                           
   961                           ; 6 bytes @ 0x2F
   962   000030                     	ds	1
   963   000031                     calibration@turnSpeed:
   964                           	callstack 0
   965   000031                     returnHome@moveSequence:
   966                           	callstack 0
   967   000031                     lostReturnHome@moveSequence:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x30
   971   000031                     	ds	1
   972   000032                     calibration@turnDuration:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x31
   976   000032                     	ds	1
   977   000033                     returnHome@straightTime:
   978                           	callstack 0
   979   000033                     lostReturnHome@straightTime:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x32
   983   000033                     	ds	1
   984   000034                     calibration@turnRamp:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0x33
   988   000034                     	ds	1
   989   000035                     ??_calibration:
   990   000035                     returnHome@curMove:
   991                           	callstack 0
   992   000035                     lostReturnHome@curMove:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x34
   996   000035                     	ds	1
   997   000036                     returnHome@straightSpeed:
   998                           	callstack 0
   999   000036                     lostReturnHome@straightSpeed:
  1000                           	callstack 0
  1001   000036                     color_detect@lightblue:
  1002                           	callstack 0
  1003                           
  1004                           ; 6 bytes @ 0x35
  1005   000036                     	ds	1
  1006   000037                     returnHome@reverseDuration:
  1007                           	callstack 0
  1008   000037                     lostReturnHome@reverseDuration:
  1009                           	callstack 0
  1010                           
  1011                           ; 1 bytes @ 0x36
  1012   000037                     	ds	1
  1013   000038                     returnHome@straightRamp:
  1014                           	callstack 0
  1015   000038                     lostReturnHome@straightRamp:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x37
  1019   000038                     	ds	1
  1020   000039                     returnHome@turnSpeed:
  1021                           	callstack 0
  1022   000039                     lostReturnHome@turnSpeed:
  1023                           	callstack 0
  1024                           
  1025                           ; 1 bytes @ 0x38
  1026   000039                     	ds	1
  1027   00003A                     returnHome@turnDuration:
  1028                           	callstack 0
  1029   00003A                     lostReturnHome@turnDuration:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x39
  1033   00003A                     	ds	1
  1034   00003B                     returnHome@turnRamp:
  1035                           	callstack 0
  1036   00003B                     lostReturnHome@turnRamp:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x3A
  1040   00003B                     	ds	1
  1041   00003C                     ??_color_calibration:
  1042   00003C                     ??_lostReturnHome:
  1043   00003C                     ??_returnHome:
  1044   00003C                     color_detect@white:
  1045                           	callstack 0
  1046                           
  1047                           ; 6 bytes @ 0x3B
  1048   00003C                     	ds	4
  1049   000040                     returnHome@i:
  1050                           	callstack 0
  1051   000040                     lostReturnHome@i:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x3F
  1055   000040                     	ds	1
  1056   000041                     ??_move:
  1057                           
  1058                           ; 1 bytes @ 0x40
  1059   000041                     	ds	1
  1060   000042                     ??_color_detect:
  1061                           
  1062                           ; 1 bytes @ 0x41
  1063   000042                     	ds	2
  1064   000044                     color_detect@color:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x43
  1068   000044                     	ds	1
  1069   000045                     ??_main:
  1070                           
  1071                           ; 1 bytes @ 0x44
  1072   000045                     	ds	2
  1073                           
  1074 ;;
  1075 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1076 ;;
  1077 ;; *************** function _main *****************
  1078 ;; Defined at:
  1079 ;;		line 28 in file "main.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  straightTime   82   40[BANK3 ] unsigned int [41]
  1084 ;;  moveSequence   40  126[BANK3 ] unsigned char [40]
  1085 ;;  buf            40    0[BANK3 ] unsigned char [40]
  1086 ;;  motorL         10  246[BANK3 ] struct DC_motor
  1087 ;;  motorR         10  236[BANK3 ] struct DC_motor
  1088 ;;  RGBC            8  228[BANK3 ] struct RGBC_val
  1089 ;;  RGBC_n          8    0        struct RGBC_val
  1090 ;;  HSV             6  222[BANK3 ] struct HSV_val
  1091 ;;  white           6  212[BANK3 ] struct HSV_calib
  1092 ;;  lightblue       6  206[BANK3 ] struct HSV_calib
  1093 ;;  orange          6  200[BANK3 ] struct HSV_calib
  1094 ;;  pink            6  194[BANK3 ] struct HSV_calib
  1095 ;;  yellow          6  188[BANK3 ] struct HSV_calib
  1096 ;;  blue            6  182[BANK3 ] struct HSV_calib
  1097 ;;  green           6  176[BANK3 ] struct HSV_calib
  1098 ;;  red             6  170[BANK3 ] struct HSV_calib
  1099 ;;  testSequence    4  122[BANK3 ] unsigned char [4]
  1100 ;;  PWMcycle        2    0        unsigned int 
  1101 ;;  turnDuration    1  221[BANK3 ] unsigned char 
  1102 ;;  straightRamp    1  220[BANK3 ] unsigned char 
  1103 ;;  curMove         1  219[BANK3 ] unsigned char 
  1104 ;;  color           1  218[BANK3 ] unsigned char 
  1105 ;;  turnRamp        1  169[BANK3 ] unsigned char 
  1106 ;;  turnSpeed       1  168[BANK3 ] unsigned char 
  1107 ;;  straightSpee    1  167[BANK3 ] unsigned char 
  1108 ;;  reverseDurat    1  166[BANK3 ] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1119 ;;      Locals:         0       0       0       0     256       0       0       0       0       0       0       0       
      +0       0       0
  1120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1121 ;;      Totals:         2       0       0       0     256       0       0       0       0       0       0       0       
      +0       0       0
  1122 ;;Total ram usage:      258 bytes
  1123 ;; Hardware stack levels required when called: 10
  1124 ;; This function calls:
  1125 ;;		_Buggy_init
  1126 ;;		_Timer0_init
  1127 ;;		_batteryLevel
  1128 ;;		_calibration
  1129 ;;		_color_calibration
  1130 ;;		_color_click_init
  1131 ;;		_color_detect
  1132 ;;		_color_read
  1133 ;;		_fullSpeedAhead
  1134 ;;		_get16bitTMR0val
  1135 ;;		_initDCmotorsPWM
  1136 ;;		_initUSART4
  1137 ;;		_lostReturnHome
  1138 ;;		_move
  1139 ;;		_resetTimer
  1140 ;;		_rgb_2_hsv
  1141 ;;		_stop
  1142 ;;		_white_Light
  1143 ;; This function is called by:
  1144 ;;		Startup code after reset
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text0
  1149   002C4A                     __ptext0:
  1150                           	callstack 0
  1151   002C4A                     _main:
  1152                           	callstack 21
  1153   002C4A                     
  1154                           ;main.c: 30:     char buf[40] = {0};
  1155   002C4A  EE23  F000         	lfsr	2,main@buf
  1156   002C4E  0E27               	movlw	39
  1157   002C50                     u4401:
  1158   002C50  6ADE               	clrf	postinc2,c
  1159   002C52  06E8               	decf	wreg,f,c
  1160   002C54  E2FD               	bc	u4401
  1161   002C56                     
  1162                           ;main.c: 32:     unsigned char color = 0;
  1163   002C56  0E00               	movlw	0
  1164   002C58  0103               	movlb	3	; () banked
  1165   002C5A  6FDA               	movwf	main@color& (0+255),b
  1166                           
  1167                           ;main.c: 33:     unsigned char moveSequence[40] = {0};
  1168   002C5C  EE23  F07E         	lfsr	2,main@moveSequence
  1169   002C60  0E27               	movlw	39
  1170   002C62                     u4411:
  1171   002C62  6ADE               	clrf	postinc2,c
  1172   002C64  06E8               	decf	wreg,f,c
  1173   002C66  E2FD               	bc	u4411
  1174                           
  1175                           ;main.c: 34:     unsigned int straightTime[41] = {0};
  1176   002C68  EE23  F028         	lfsr	2,main@straightTime
  1177   002C6C  0E51               	movlw	81
  1178   002C6E                     u4421:
  1179   002C6E  6ADE               	clrf	postinc2,c
  1180   002C70  06E8               	decf	wreg,f,c
  1181   002C72  E2FD               	bc	u4421
  1182   002C74                     
  1183                           ; BSR set to: 3
  1184                           ;main.c: 35:     char curMove = 0;
  1185   002C74  0E00               	movlw	0
  1186   002C76  6FDB               	movwf	main@curMove& (0+255),b
  1187   002C78                     
  1188                           ; BSR set to: 3
  1189                           ;main.c: 37:     unsigned char testSequence[4] = {4,3,9,8};
  1190   002C78  C0EE  F37A         	movff	main@F14649,main@testSequence
  1191   002C7C  C0EF  F37B         	movff	main@F14649+1,main@testSequence+1
  1192   002C80  C0F0  F37C         	movff	main@F14649+2,main@testSequence+2
  1193   002C84  C0F1  F37D         	movff	main@F14649+3,main@testSequence+3
  1194   002C88                     
  1195                           ; BSR set to: 3
  1196                           ;main.c: 40:     struct RGBC_val RGBC, RGBC_n;;main.c: 41:     struct HSV_val HSV;;main.
      +                          c: 42:     struct DC_motor motorL, motorR;;main.c: 45:     Buggy_init();
  1197   002C88  EC2C  F023         	call	_Buggy_init	;wreg free
  1198   002C8C                     
  1199                           ;main.c: 46:     color_click_init();
  1200   002C8C  EC10  F023         	call	_color_click_init	;wreg free
  1201   002C90                     
  1202                           ;main.c: 47:     Timer0_init();
  1203   002C90  EC1F  F024         	call	_Timer0_init	;wreg free
  1204   002C94                     
  1205                           ;main.c: 49:     initUSART4();
  1206   002C94  EC3F  F024         	call	_initUSART4	;wreg free
  1207   002C98                     
  1208                           ;main.c: 50:     initDCmotorsPWM(PWMcycle);
  1209   002C98  0E00               	movlw	0
  1210   002C9A  6E0D               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1211   002C9C  0EC7               	movlw	199
  1212   002C9E  6E0C               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1213   002CA0  EC64  F021         	call	_initDCmotorsPWM	;wreg free
  1214   002CA4                     
  1215                           ;main.c: 52:     motorL.power=0;
  1216   002CA4  0E00               	movlw	0
  1217   002CA6  0103               	movlb	3	; () banked
  1218   002CA8  6FF6               	movwf	main@motorL& (0+255),b
  1219   002CAA                     
  1220                           ; BSR set to: 3
  1221                           ;main.c: 53:     motorL.direction=1;
  1222   002CAA  0E01               	movlw	1
  1223   002CAC  6FF7               	movwf	(main@motorL+1)& (0+255),b
  1224   002CAE                     
  1225                           ; BSR set to: 3
  1226                           ;main.c: 54:     motorL.brakemode=1;
  1227   002CAE  0E01               	movlw	1
  1228   002CB0  6FF8               	movwf	(main@motorL+2)& (0+255),b
  1229   002CB2                     
  1230                           ; BSR set to: 3
  1231                           ;main.c: 55:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1232   002CB2  0EAA               	movlw	170
  1233   002CB4  6FFB               	movwf	(main@motorL+5)& (0+255),b
  1234   002CB6  0E0F               	movlw	15
  1235   002CB8  6FFC               	movwf	(main@motorL+6)& (0+255),b
  1236   002CBA                     
  1237                           ; BSR set to: 3
  1238                           ;main.c: 56:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1239   002CBA  0EA6               	movlw	166
  1240   002CBC  6FFD               	movwf	(main@motorL+7)& (0+255),b
  1241   002CBE  0E0F               	movlw	15
  1242   002CC0  6FFE               	movwf	(main@motorL+8)& (0+255),b
  1243   002CC2                     
  1244                           ; BSR set to: 3
  1245                           ;main.c: 57:     motorL.PWMperiod=PWMcycle;
  1246   002CC2  0E00               	movlw	0
  1247   002CC4  6FFA               	movwf	(main@motorL+4)& (0+255),b
  1248   002CC6  0EC7               	movlw	199
  1249   002CC8  6FF9               	movwf	(main@motorL+3)& (0+255),b
  1250   002CCA                     
  1251                           ; BSR set to: 3
  1252                           ;main.c: 58:     motorL.compensation=3;
  1253   002CCA  0E03               	movlw	3
  1254   002CCC  6FFF               	movwf	(main@motorL+9)& (0+255),b
  1255   002CCE                     
  1256                           ; BSR set to: 3
  1257                           ;main.c: 60:     motorR.power=0;
  1258   002CCE  0E00               	movlw	0
  1259   002CD0  6FEC               	movwf	main@motorR& (0+255),b
  1260   002CD2                     
  1261                           ; BSR set to: 3
  1262                           ;main.c: 61:     motorR.direction=1;
  1263   002CD2  0E01               	movlw	1
  1264   002CD4  6FED               	movwf	(main@motorR+1)& (0+255),b
  1265   002CD6                     
  1266                           ; BSR set to: 3
  1267                           ;main.c: 62:     motorR.brakemode=1;
  1268   002CD6  0E01               	movlw	1
  1269   002CD8  6FEE               	movwf	(main@motorR+2)& (0+255),b
  1270   002CDA                     
  1271                           ; BSR set to: 3
  1272                           ;main.c: 63:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1273   002CDA  0E25               	movlw	37
  1274   002CDC  6FF1               	movwf	(main@motorR+5)& (0+255),b
  1275   002CDE  0E0F               	movlw	15
  1276   002CE0  6FF2               	movwf	(main@motorR+6)& (0+255),b
  1277   002CE2                     
  1278                           ; BSR set to: 3
  1279                           ;main.c: 64:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1280   002CE2  0E21               	movlw	33
  1281   002CE4  6FF3               	movwf	(main@motorR+7)& (0+255),b
  1282   002CE6  0E0F               	movlw	15
  1283   002CE8  6FF4               	movwf	(main@motorR+8)& (0+255),b
  1284   002CEA                     
  1285                           ; BSR set to: 3
  1286                           ;main.c: 65:     motorR.PWMperiod=PWMcycle;
  1287   002CEA  0E00               	movlw	0
  1288   002CEC  6FF0               	movwf	(main@motorR+4)& (0+255),b
  1289   002CEE  0EC7               	movlw	199
  1290   002CF0  6FEF               	movwf	(main@motorR+3)& (0+255),b
  1291   002CF2                     
  1292                           ; BSR set to: 3
  1293                           ;main.c: 66:     motorR.compensation=0;
  1294   002CF2  0E00               	movlw	0
  1295   002CF4  6FF5               	movwf	(main@motorR+9)& (0+255),b
  1296   002CF6                     
  1297                           ; BSR set to: 3
  1298                           ;main.c: 69:     char straightSpeed=25;
  1299   002CF6  0E19               	movlw	25
  1300   002CF8  6FA7               	movwf	main@straightSpeed& (0+255),b
  1301   002CFA                     
  1302                           ; BSR set to: 3
  1303                           ;main.c: 70:     unsigned char straightRamp=1;
  1304   002CFA  0E01               	movlw	1
  1305   002CFC  6FDC               	movwf	main@straightRamp& (0+255),b
  1306   002CFE                     
  1307                           ; BSR set to: 3
  1308                           ;main.c: 72:     unsigned char reverseDuration=10;
  1309   002CFE  0E0A               	movlw	10
  1310   002D00  6FA6               	movwf	main@reverseDuration& (0+255),b
  1311   002D02                     
  1312                           ; BSR set to: 3
  1313                           ;main.c: 74:     char turnSpeed=20;
  1314   002D02  0E14               	movlw	20
  1315   002D04  6FA8               	movwf	main@turnSpeed& (0+255),b
  1316   002D06                     
  1317                           ; BSR set to: 3
  1318                           ;main.c: 75:     unsigned char turnDuration=5;
  1319   002D06  0E05               	movlw	5
  1320   002D08  6FDD               	movwf	main@turnDuration& (0+255),b
  1321   002D0A                     
  1322                           ; BSR set to: 3
  1323                           ;main.c: 76:     unsigned char turnRamp=2;
  1324   002D0A  0E02               	movlw	2
  1325   002D0C  6FA9               	movwf	main@turnRamp& (0+255),b
  1326   002D0E                     
  1327                           ; BSR set to: 3
  1328                           ;main.c: 79:     batteryLevel();
  1329   002D0E  ECC8  F022         	call	_batteryLevel	;wreg free
  1330   002D12                     l87:
  1331   002D12  B48E               	btfsc	142,2,c	;volatile
  1332   002D14  EF8E  F016         	goto	u4431
  1333   002D18  EF90  F016         	goto	u4430
  1334   002D1C                     u4431:
  1335   002D1C  EF89  F016         	goto	l87
  1336   002D20                     u4430:
  1337   002D20                     
  1338                           ;main.c: 92:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1339   002D20  9680               	bcf	128,3,c	;volatile
  1340   002D22  9E7C               	bcf	124,7,c	;volatile
  1341                           
  1342                           ;main.c: 95:     LATHbits.LATH1=LATDbits.LATD3=1;
  1343   002D24  867C               	bsf	124,3,c	;volatile
  1344   002D26  8280               	bsf	128,1,c	;volatile
  1345   002D28                     
  1346                           ;main.c: 96:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1347   002D28  0E29               	movlw	41
  1348   002D2A  6E46               	movwf	(??_main+1)^0,c
  1349   002D2C  0E96               	movlw	150
  1350   002D2E  6E45               	movwf	??_main^0,c
  1351   002D30  0E7F               	movlw	127
  1352   002D32                     u4607:
  1353   002D32  2EE8               	decfsz	wreg,f,c
  1354   002D34  D7FE               	bra	u4607
  1355   002D36  2E45               	decfsz	??_main^0,f,c
  1356   002D38  D7FC               	bra	u4607
  1357   002D3A  2E46               	decfsz	(??_main+1)^0,f,c
  1358   002D3C  D7FA               	bra	u4607
  1359   002D3E  0000               	nop	
  1360   002D40                     
  1361                           ;main.c: 99:     struct HSV_calib red, green, blue, yellow, pink, orange, lightblue, whi
      +                          te;;main.c: 100:     color_calibration(&RGBC, &HSV, &red, &green, &blue, &yellow, &pink,
      +                           &orange, &lightblue, &white);
  1362   002D40  0EE4               	movlw	low main@RGBC
  1363   002D42  0101               	movlb	1	; () banked
  1364   002D44  6F00               	movwf	color_calibration@RGBC& (0+255),b
  1365   002D46  0E03               	movlw	high main@RGBC
  1366   002D48  6F01               	movwf	(color_calibration@RGBC+1)& (0+255),b
  1367   002D4A  0EDE               	movlw	low main@HSV
  1368   002D4C  6F02               	movwf	color_calibration@HSV& (0+255),b
  1369   002D4E  0E03               	movlw	high main@HSV
  1370   002D50  6F03               	movwf	(color_calibration@HSV+1)& (0+255),b
  1371   002D52  0EAA               	movlw	low main@red
  1372   002D54  6F04               	movwf	color_calibration@red& (0+255),b
  1373   002D56  0E03               	movlw	high main@red
  1374   002D58  6F05               	movwf	(color_calibration@red+1)& (0+255),b
  1375   002D5A  0EB0               	movlw	low main@green
  1376   002D5C  6F06               	movwf	color_calibration@green& (0+255),b
  1377   002D5E  0E03               	movlw	high main@green
  1378   002D60  6F07               	movwf	(color_calibration@green+1)& (0+255),b
  1379   002D62  0EB6               	movlw	low main@blue
  1380   002D64  6F08               	movwf	color_calibration@blue& (0+255),b
  1381   002D66  0E03               	movlw	high main@blue
  1382   002D68  6F09               	movwf	(color_calibration@blue+1)& (0+255),b
  1383   002D6A  0EBC               	movlw	low main@yellow
  1384   002D6C  6F0A               	movwf	color_calibration@yellow& (0+255),b
  1385   002D6E  0E03               	movlw	high main@yellow
  1386   002D70  6F0B               	movwf	(color_calibration@yellow+1)& (0+255),b
  1387   002D72  0EC2               	movlw	low main@pink
  1388   002D74  6F0C               	movwf	color_calibration@pink& (0+255),b
  1389   002D76  0E03               	movlw	high main@pink
  1390   002D78  6F0D               	movwf	(color_calibration@pink+1)& (0+255),b
  1391   002D7A  0EC8               	movlw	low main@orange
  1392   002D7C  6F0E               	movwf	color_calibration@orange& (0+255),b
  1393   002D7E  0E03               	movlw	high main@orange
  1394   002D80  6F0F               	movwf	(color_calibration@orange+1)& (0+255),b
  1395   002D82  0ECE               	movlw	low main@lightblue
  1396   002D84  6F10               	movwf	color_calibration@lightblue& (0+255),b
  1397   002D86  0E03               	movlw	high main@lightblue
  1398   002D88  6F11               	movwf	(color_calibration@lightblue+1)& (0+255),b
  1399   002D8A  0ED4               	movlw	low main@white
  1400   002D8C  6F12               	movwf	color_calibration@white& (0+255),b
  1401   002D8E  0E03               	movlw	high main@white
  1402   002D90  6F13               	movwf	(color_calibration@white+1)& (0+255),b
  1403   002D92  ECD9  F010         	call	_color_calibration	;wreg free
  1404   002D96                     
  1405                           ;main.c: 103:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1406   002D96  0EF6               	movlw	low main@motorL
  1407   002D98  6E2D               	movwf	calibration@mL^0,c
  1408   002D9A  0E03               	movlw	high main@motorL
  1409   002D9C  6E2E               	movwf	(calibration@mL+1)^0,c
  1410   002D9E  0EEC               	movlw	low main@motorR
  1411   002DA0  6E2F               	movwf	calibration@mR^0,c
  1412   002DA2  0E03               	movlw	high main@motorR
  1413   002DA4  6E30               	movwf	(calibration@mR+1)^0,c
  1414   002DA6  0E14               	movlw	20
  1415   002DA8  6E31               	movwf	calibration@turnSpeed^0,c
  1416   002DAA  0EDD               	movlw	low main@turnDuration
  1417   002DAC  6E32               	movwf	calibration@turnDuration^0,c
  1418   002DAE  0E03               	movlw	high main@turnDuration
  1419   002DB0  6E33               	movwf	(calibration@turnDuration+1)^0,c
  1420   002DB2  0E02               	movlw	2
  1421   002DB4  6E34               	movwf	calibration@turnRamp^0,c
  1422   002DB6  EC3F  F018         	call	_calibration	;wreg free
  1423   002DBA                     
  1424                           ;main.c: 106:     white_Light(1);
  1425   002DBA  0E01               	movlw	1
  1426   002DBC  ECFD  F023         	call	_white_Light
  1427   002DC0                     
  1428                           ;main.c: 107:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1429   002DC0  0E52               	movlw	82
  1430   002DC2  6E46               	movwf	(??_main+1)^0,c
  1431   002DC4  0E2B               	movlw	43
  1432   002DC6  6E45               	movwf	??_main^0,c
  1433   002DC8  0E00               	movlw	0
  1434   002DCA                     u4617:
  1435   002DCA  2EE8               	decfsz	wreg,f,c
  1436   002DCC  D7FE               	bra	u4617
  1437   002DCE  2E45               	decfsz	??_main^0,f,c
  1438   002DD0  D7FC               	bra	u4617
  1439   002DD2  2E46               	decfsz	(??_main+1)^0,f,c
  1440   002DD4  D7FA               	bra	u4617
  1441   002DD6  D000               	nop2	
  1442   002DD8                     
  1443                           ;main.c: 110:     color_read(&RGBC);
  1444   002DD8  0EE4               	movlw	low main@RGBC
  1445   002DDA  6E10               	movwf	color_read@RGBC^0,c
  1446   002DDC  0E03               	movlw	high main@RGBC
  1447   002DDE  6E11               	movwf	(color_read@RGBC+1)^0,c
  1448   002DE0  ECC0  F01A         	call	_color_read	;wreg free
  1449   002DE4                     
  1450                           ;main.c: 111:     ambient=RGBC.C;
  1451   002DE4  C3EA  F04D         	movff	main@RGBC+6,_ambient
  1452   002DE8  C3EB  F04E         	movff	main@RGBC+7,_ambient+1
  1453   002DEC                     
  1454                           ;main.c: 112:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1455   002DEC  0E29               	movlw	41
  1456   002DEE  6E46               	movwf	(??_main+1)^0,c
  1457   002DF0  0E96               	movlw	150
  1458   002DF2  6E45               	movwf	??_main^0,c
  1459   002DF4  0E7F               	movlw	127
  1460   002DF6                     u4627:
  1461   002DF6  2EE8               	decfsz	wreg,f,c
  1462   002DF8  D7FE               	bra	u4627
  1463   002DFA  2E45               	decfsz	??_main^0,f,c
  1464   002DFC  D7FC               	bra	u4627
  1465   002DFE  2E46               	decfsz	(??_main+1)^0,f,c
  1466   002E00  D7FA               	bra	u4627
  1467   002E02  0000               	nop	
  1468   002E04                     
  1469                           ;main.c: 114:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1470   002E04  0EF6               	movlw	low main@motorL
  1471   002E06  6E1F               	movwf	fullSpeedAhead@mL^0,c
  1472   002E08  0E03               	movlw	high main@motorL
  1473   002E0A  6E20               	movwf	(fullSpeedAhead@mL+1)^0,c
  1474   002E0C  0EEC               	movlw	low main@motorR
  1475   002E0E  6E21               	movwf	fullSpeedAhead@mR^0,c
  1476   002E10  0E03               	movlw	high main@motorR
  1477   002E12  6E22               	movwf	(fullSpeedAhead@mR+1)^0,c
  1478   002E14  0E19               	movlw	25
  1479   002E16  6E23               	movwf	fullSpeedAhead@straightSpeed^0,c
  1480   002E18  0E01               	movlw	1
  1481   002E1A  6E24               	movwf	fullSpeedAhead@straightRamp^0,c
  1482   002E1C  EC3E  F020         	call	_fullSpeedAhead	;wreg free
  1483   002E20                     
  1484                           ;main.c: 115:     resetTimer();
  1485   002E20  EC7F  F024         	call	_resetTimer	;wreg free
  1486   002E24                     
  1487                           ;main.c: 117:     wall=0;
  1488   002E24  0E00               	movlw	0
  1489   002E26  6E48               	movwf	_wall^0,c
  1490   002E28                     
  1491                           ;main.c: 118:     lost=0;
  1492   002E28  0E00               	movlw	0
  1493   002E2A  6E47               	movwf	_lost^0,c
  1494   002E2C                     l5252:
  1495                           
  1496                           ;main.c: 121:         if (wall == 1) {
  1497   002E2C  0448               	decf	_wall^0,w,c
  1498   002E2E  A4D8               	btfss	status,2,c
  1499   002E30  EF1C  F017         	goto	u4441
  1500   002E34  EF1E  F017         	goto	u4440
  1501   002E38                     u4441:
  1502   002E38  EFEE  F017         	goto	l5280
  1503   002E3C                     u4440:
  1504   002E3C                     
  1505                           ;main.c: 122:             PIE0bits.INT0IE=TMR0IE=0;
  1506   002E3C  010E               	movlb	14	; () banked
  1507   002E3E  9B29               	bcf	41,5,b	;volatile
  1508   002E40  AB29               	btfss	41,5,b	;volatile
  1509   002E42  D002               	bra	u4455
  1510   002E44  8129               	bsf	41,0,b	;volatile
  1511   002E46  D002               	bra	u4457
  1512   002E48                     u4455:
  1513   002E48  010E               	movlb	14	; () banked
  1514   002E4A  9129               	bcf	41,0,b	;volatile
  1515   002E4C                     u4457:
  1516   002E4C                     
  1517                           ; BSR set to: 14
  1518                           ;main.c: 123:             straightTime[curMove] = get16bitTMR0val();
  1519   002E4C  EC88  F023         	call	_get16bitTMR0val	;wreg free
  1520   002E50  0103               	movlb	3	; () banked
  1521   002E52  51DB               	movf	main@curMove& (0+255),w,b
  1522   002E54  0D02               	mullw	2
  1523   002E56  0E28               	movlw	low main@straightTime
  1524   002E58  24F3               	addwf	243,w,c
  1525   002E5A  6ED9               	movwf	fsr2l,c
  1526   002E5C  0E03               	movlw	high main@straightTime
  1527   002E5E  20F4               	addwfc	prodh,w,c
  1528   002E60  6EDA               	movwf	fsr2h,c
  1529   002E62  C00C  FFDE         	movff	?_get16bitTMR0val,postinc2
  1530   002E66  C00D  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1531                           
  1532                           ;main.c: 126:             stop(&motorL, &motorR, straightRamp);
  1533   002E6A  0EF6               	movlw	low main@motorL
  1534   002E6C  6E1F               	movwf	stop@mL^0,c
  1535   002E6E  0E03               	movlw	high main@motorL
  1536   002E70  6E20               	movwf	(stop@mL+1)^0,c
  1537   002E72  0EEC               	movlw	low main@motorR
  1538   002E74  6E21               	movwf	stop@mR^0,c
  1539   002E76  0E03               	movlw	high main@motorR
  1540   002E78  6E22               	movwf	(stop@mR+1)^0,c
  1541   002E7A  C3DC  F023         	movff	main@straightRamp,stop@straightRamp
  1542   002E7E  ECBA  F01F         	call	_stop	;wreg free
  1543   002E82                     
  1544                           ;main.c: 127:             color_read(&RGBC);
  1545   002E82  0EE4               	movlw	low main@RGBC
  1546   002E84  6E10               	movwf	color_read@RGBC^0,c
  1547   002E86  0E03               	movlw	high main@RGBC
  1548   002E88  6E11               	movwf	(color_read@RGBC+1)^0,c
  1549   002E8A  ECC0  F01A         	call	_color_read	;wreg free
  1550   002E8E                     
  1551                           ;main.c: 129:             rgb_2_hsv(RGBC, &HSV);
  1552   002E8E  EE23  F0E4         	lfsr	2,main@RGBC
  1553   002E92  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  1554   002E96  0E07               	movlw	7
  1555   002E98                     u4461:
  1556   002E98  CFDB FFEB          	movff	plusw2,plusw0
  1557   002E9C  06E8               	decf	wreg,f,c
  1558   002E9E  E2FC               	bc	u4461
  1559   002EA0  0EDE               	movlw	low main@HSV
  1560   002EA2  6E2E               	movwf	rgb_2_hsv@HSV^0,c
  1561   002EA4  0E03               	movlw	high main@HSV
  1562   002EA6  6E2F               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1563   002EA8  ECB7  F013         	call	_rgb_2_hsv	;wreg free
  1564   002EAC                     
  1565                           ;main.c: 130:             color = color_detect(HSV, red, green, blue, yellow, pink, oran
      +                          ge, lightblue, white);
  1566   002EAC  EE23  F0DE         	lfsr	2,main@HSV
  1567   002EB0  EE00  F00C         	lfsr	0,color_detect@HSV
  1568   002EB4  0E05               	movlw	5
  1569   002EB6                     u4471:
  1570   002EB6  CFDB FFEB          	movff	plusw2,plusw0
  1571   002EBA  06E8               	decf	wreg,f,c
  1572   002EBC  E2FC               	bc	u4471
  1573   002EBE  EE23  F0AA         	lfsr	2,main@red
  1574   002EC2  EE00  F012         	lfsr	0,color_detect@red
  1575   002EC6  0E05               	movlw	5
  1576   002EC8                     u4481:
  1577   002EC8  CFDB FFEB          	movff	plusw2,plusw0
  1578   002ECC  06E8               	decf	wreg,f,c
  1579   002ECE  E2FC               	bc	u4481
  1580   002ED0  EE23  F0B0         	lfsr	2,main@green
  1581   002ED4  EE00  F018         	lfsr	0,color_detect@green
  1582   002ED8  0E05               	movlw	5
  1583   002EDA                     u4491:
  1584   002EDA  CFDB FFEB          	movff	plusw2,plusw0
  1585   002EDE  06E8               	decf	wreg,f,c
  1586   002EE0  E2FC               	bc	u4491
  1587   002EE2  EE23  F0B6         	lfsr	2,main@blue
  1588   002EE6  EE00  F01E         	lfsr	0,color_detect@blue
  1589   002EEA  0E05               	movlw	5
  1590   002EEC                     u4501:
  1591   002EEC  CFDB FFEB          	movff	plusw2,plusw0
  1592   002EF0  06E8               	decf	wreg,f,c
  1593   002EF2  E2FC               	bc	u4501
  1594   002EF4  EE23  F0BC         	lfsr	2,main@yellow
  1595   002EF8  EE00  F024         	lfsr	0,color_detect@yellow
  1596   002EFC  0E05               	movlw	5
  1597   002EFE                     u4511:
  1598   002EFE  CFDB FFEB          	movff	plusw2,plusw0
  1599   002F02  06E8               	decf	wreg,f,c
  1600   002F04  E2FC               	bc	u4511
  1601   002F06  EE23  F0C2         	lfsr	2,main@pink
  1602   002F0A  EE00  F02A         	lfsr	0,color_detect@pink
  1603   002F0E  0E05               	movlw	5
  1604   002F10                     u4521:
  1605   002F10  CFDB FFEB          	movff	plusw2,plusw0
  1606   002F14  06E8               	decf	wreg,f,c
  1607   002F16  E2FC               	bc	u4521
  1608   002F18  EE23  F0C8         	lfsr	2,main@orange
  1609   002F1C  EE00  F030         	lfsr	0,color_detect@orange
  1610   002F20  0E05               	movlw	5
  1611   002F22                     u4531:
  1612   002F22  CFDB FFEB          	movff	plusw2,plusw0
  1613   002F26  06E8               	decf	wreg,f,c
  1614   002F28  E2FC               	bc	u4531
  1615   002F2A  EE23  F0CE         	lfsr	2,main@lightblue
  1616   002F2E  EE00  F036         	lfsr	0,color_detect@lightblue
  1617   002F32  0E05               	movlw	5
  1618   002F34                     u4541:
  1619   002F34  CFDB FFEB          	movff	plusw2,plusw0
  1620   002F38  06E8               	decf	wreg,f,c
  1621   002F3A  E2FC               	bc	u4541
  1622   002F3C  EE23  F0D4         	lfsr	2,main@white
  1623   002F40  EE00  F03C         	lfsr	0,color_detect@white
  1624   002F44  0E05               	movlw	5
  1625   002F46                     u4551:
  1626   002F46  CFDB FFEB          	movff	plusw2,plusw0
  1627   002F4A  06E8               	decf	wreg,f,c
  1628   002F4C  E2FC               	bc	u4551
  1629   002F4E  EC8C  F019         	call	_color_detect	;wreg free
  1630   002F52  0103               	movlb	3	; () banked
  1631   002F54  6FDA               	movwf	main@color& (0+255),b
  1632   002F56                     
  1633                           ; BSR set to: 3
  1634                           ;main.c: 132:             moveSequence[curMove] = color;
  1635   002F56  0E7E               	movlw	low main@moveSequence
  1636   002F58  25DB               	addwf	main@curMove& (0+255),w,b
  1637   002F5A  6ED9               	movwf	fsr2l,c
  1638   002F5C  6ADA               	clrf	fsr2h,c
  1639   002F5E  0E03               	movlw	high main@moveSequence
  1640   002F60  22DA               	addwfc	fsr2h,f,c
  1641   002F62  C3DA  FFDF         	movff	main@color,indf2
  1642   002F66                     
  1643                           ; BSR set to: 3
  1644                           ;main.c: 135:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1645   002F66  0EF6               	movlw	low main@motorL
  1646   002F68  0100               	movlb	0	; () banked
  1647   002F6A  6FD8               	movwf	move@mL& (0+255),b
  1648   002F6C  0E03               	movlw	high main@motorL
  1649   002F6E  6FD9               	movwf	(move@mL+1)& (0+255),b
  1650   002F70  0EEC               	movlw	low main@motorR
  1651   002F72  6FDA               	movwf	move@mR& (0+255),b
  1652   002F74  0E03               	movlw	high main@motorR
  1653   002F76  6FDB               	movwf	(move@mR+1)& (0+255),b
  1654   002F78  C3DA  F0DC         	movff	main@color,move@color
  1655   002F7C  0E7E               	movlw	low main@moveSequence
  1656   002F7E  6FDD               	movwf	move@moveSequence& (0+255),b
  1657   002F80  0E03               	movlw	high main@moveSequence
  1658   002F82  6FDE               	movwf	(move@moveSequence+1)& (0+255),b
  1659   002F84  0E28               	movlw	low main@straightTime
  1660   002F86  6FDF               	movwf	move@straightTime& (0+255),b
  1661   002F88  0E03               	movlw	high main@straightTime
  1662   002F8A  6FE0               	movwf	(move@straightTime+1)& (0+255),b
  1663   002F8C  C3DB  F0E1         	movff	main@curMove,move@curMove
  1664   002F90  C3A7  F0E2         	movff	main@straightSpeed,move@straightSpeed
  1665   002F94  C3A6  F0E3         	movff	main@reverseDuration,move@reverseDuration
  1666   002F98  C3DC  F0E4         	movff	main@straightRamp,move@straightRamp
  1667   002F9C  C3A8  F0E5         	movff	main@turnSpeed,move@turnSpeed
  1668   002FA0  C3DD  F0E6         	movff	main@turnDuration,move@turnDuration
  1669   002FA4  C3A9  F0E7         	movff	main@turnRamp,move@turnRamp
  1670   002FA8  ECAE  F00D         	call	_move	;wreg free
  1671   002FAC                     
  1672                           ;main.c: 138:             color_read(&RGBC);
  1673   002FAC  0EE4               	movlw	low main@RGBC
  1674   002FAE  6E10               	movwf	color_read@RGBC^0,c
  1675   002FB0  0E03               	movlw	high main@RGBC
  1676   002FB2  6E11               	movwf	(color_read@RGBC+1)^0,c
  1677   002FB4  ECC0  F01A         	call	_color_read	;wreg free
  1678   002FB8                     
  1679                           ;main.c: 139:             ambient=RGBC.C;
  1680   002FB8  C3EA  F04D         	movff	main@RGBC+6,_ambient
  1681   002FBC  C3EB  F04E         	movff	main@RGBC+7,_ambient+1
  1682   002FC0                     
  1683                           ;main.c: 141:             curMove++;
  1684   002FC0  0103               	movlb	3	; () banked
  1685   002FC2  2BDB               	incf	main@curMove& (0+255),f,b
  1686   002FC4                     
  1687                           ; BSR set to: 3
  1688                           ;main.c: 142:             resetTimer();
  1689   002FC4  EC7F  F024         	call	_resetTimer	;wreg free
  1690   002FC8                     
  1691                           ;main.c: 143:             PIE0bits.INT0IE=TMR0IE=1;
  1692   002FC8  010E               	movlb	14	; () banked
  1693   002FCA  8B29               	bsf	41,5,b	;volatile
  1694   002FCC  AB29               	btfss	41,5,b	;volatile
  1695   002FCE  D002               	bra	u4565
  1696   002FD0  8129               	bsf	41,0,b	;volatile
  1697   002FD2  D002               	bra	u4567
  1698   002FD4                     u4565:
  1699   002FD4  010E               	movlb	14	; () banked
  1700   002FD6  9129               	bcf	41,0,b	;volatile
  1701   002FD8                     u4567:
  1702   002FD8                     
  1703                           ; BSR set to: 14
  1704                           ;main.c: 144:             wall = 0;
  1705   002FD8  0E00               	movlw	0
  1706   002FDA  6E48               	movwf	_wall^0,c
  1707   002FDC                     l5280:
  1708                           
  1709                           ;main.c: 148:         if (lost == 1) {
  1710   002FDC  0447               	decf	_lost^0,w,c
  1711   002FDE  A4D8               	btfss	status,2,c
  1712   002FE0  EFF4  F017         	goto	u4571
  1713   002FE4  EFF6  F017         	goto	u4570
  1714   002FE8                     u4571:
  1715   002FE8  EF2A  F018         	goto	l5290
  1716   002FEC                     u4570:
  1717   002FEC                     
  1718                           ;main.c: 149:             PIE0bits.INT0IE=0;
  1719   002FEC  010E               	movlb	14	; () banked
  1720   002FEE  9129               	bcf	41,0,b	;volatile
  1721   002FF0                     
  1722                           ; BSR set to: 14
  1723                           ;main.c: 150:             stop(&motorL, &motorR, straightRamp);
  1724   002FF0  0EF6               	movlw	low main@motorL
  1725   002FF2  6E1F               	movwf	stop@mL^0,c
  1726   002FF4  0E03               	movlw	high main@motorL
  1727   002FF6  6E20               	movwf	(stop@mL+1)^0,c
  1728   002FF8  0EEC               	movlw	low main@motorR
  1729   002FFA  6E21               	movwf	stop@mR^0,c
  1730   002FFC  0E03               	movlw	high main@motorR
  1731   002FFE  6E22               	movwf	(stop@mR+1)^0,c
  1732   003000  C3DC  F023         	movff	main@straightRamp,stop@straightRamp
  1733   003004  ECBA  F01F         	call	_stop	;wreg free
  1734                           
  1735                           ;main.c: 151:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1736   003008  0EF6               	movlw	low main@motorL
  1737   00300A  6E2D               	movwf	lostReturnHome@mL^0,c
  1738   00300C  0E03               	movlw	high main@motorL
  1739   00300E  6E2E               	movwf	(lostReturnHome@mL+1)^0,c
  1740   003010  0EEC               	movlw	low main@motorR
  1741   003012  6E2F               	movwf	lostReturnHome@mR^0,c
  1742   003014  0E03               	movlw	high main@motorR
  1743   003016  6E30               	movwf	(lostReturnHome@mR+1)^0,c
  1744   003018  0E7E               	movlw	low main@moveSequence
  1745   00301A  6E31               	movwf	lostReturnHome@moveSequence^0,c
  1746   00301C  0E03               	movlw	high main@moveSequence
  1747   00301E  6E32               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1748   003020  0E28               	movlw	low main@straightTime
  1749   003022  6E33               	movwf	lostReturnHome@straightTime^0,c
  1750   003024  0E03               	movlw	high main@straightTime
  1751   003026  6E34               	movwf	(lostReturnHome@straightTime+1)^0,c
  1752   003028  C3DB  F035         	movff	main@curMove,lostReturnHome@curMove
  1753   00302C  C3A7  F036         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1754   003030  C3A6  F037         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1755   003034  C3DC  F038         	movff	main@straightRamp,lostReturnHome@straightRamp
  1756   003038  C3A8  F039         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1757   00303C  C3DD  F03A         	movff	main@turnDuration,lostReturnHome@turnDuration
  1758   003040  C3A9  F03B         	movff	main@turnRamp,lostReturnHome@turnRamp
  1759   003044  EC5F  F00A         	call	_lostReturnHome	;wreg free
  1760   003048                     
  1761                           ;main.c: 152:             PIE0bits.INT0IE=1;
  1762   003048  010E               	movlb	14	; () banked
  1763   00304A  8129               	bsf	41,0,b	;volatile
  1764   00304C                     
  1765                           ; BSR set to: 14
  1766                           ;main.c: 153:             lost = 0;
  1767   00304C  0E00               	movlw	0
  1768   00304E  6E47               	movwf	_lost^0,c
  1769                           
  1770                           ;main.c: 154:             break;
  1771   003050  EF3D  F018         	goto	l98
  1772   003054                     l5290:
  1773                           
  1774                           ;main.c: 157:         if (color == 8 || color == 9) {break;}
  1775   003054  0E08               	movlw	8
  1776   003056  0103               	movlb	3	; () banked
  1777   003058  19DA               	xorwf	main@color& (0+255),w,b
  1778   00305A  B4D8               	btfsc	status,2,c
  1779   00305C  EF32  F018         	goto	u4581
  1780   003060  EF34  F018         	goto	u4580
  1781   003064                     u4581:
  1782   003064  EF3D  F018         	goto	l98
  1783   003068                     u4580:
  1784   003068                     
  1785                           ; BSR set to: 3
  1786   003068  0E09               	movlw	9
  1787   00306A  19DA               	xorwf	main@color& (0+255),w,b
  1788   00306C  A4D8               	btfss	status,2,c
  1789   00306E  EF3B  F018         	goto	u4591
  1790   003072  EF3D  F018         	goto	u4590
  1791   003076                     u4591:
  1792   003076  EF16  F017         	goto	l5252
  1793   00307A                     u4590:
  1794   00307A                     l98:
  1795   00307A  EF49  F000         	goto	start
  1796   00307E                     __end_of_main:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _move *****************
  1800 ;; Defined at:
  1801 ;;		line 91 in file "dc_motor.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  1804 ;;		 -> main@motorL(10), 
  1805 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  1806 ;;		 -> main@motorR(10), 
  1807 ;;  color           1    4[BANK0 ] unsigned char 
  1808 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  1809 ;;		 -> main@moveSequence(40), 
  1810 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  1811 ;;		 -> main@straightTime(82), 
  1812 ;;  curMove         1    9[BANK0 ] unsigned char 
  1813 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  1814 ;;  reverseDurat    1   11[BANK0 ] unsigned char 
  1815 ;;  straightRamp    1   12[BANK0 ] unsigned char 
  1816 ;;  turnSpeed       1   13[BANK0 ] unsigned char 
  1817 ;;  turnDuration    1   14[BANK0 ] unsigned char 
  1818 ;;  turnRamp        1   15[BANK0 ] unsigned char 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1830 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1833 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1834 ;;Total ram usage:       18 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 9
  1837 ;; This function calls:
  1838 ;;		_fullSpeedAhead
  1839 ;;		_returnHome
  1840 ;;		_reverseOneSquare
  1841 ;;		_turnLeft
  1842 ;;		_turnRight
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text1
  1849   001B5C                     __ptext1:
  1850                           	callstack 0
  1851   001B5C                     _move:
  1852                           	callstack 21
  1853   001B5C                     
  1854                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reve
      +                          rseDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, uns
      +                          igned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  1855   001B5C  0100               	movlb	0	; () banked
  1856   001B5E  05DC               	decf	move@color& (0+255),w,b
  1857   001B60  A4D8               	btfss	status,2,c
  1858   001B62  EFB5  F00D         	goto	u4221
  1859   001B66  EFB7  F00D         	goto	u4220
  1860   001B6A                     u4221:
  1861   001B6A  EFFF  F00D         	goto	l4974
  1862   001B6E                     u4220:
  1863   001B6E                     
  1864                           ; BSR set to: 0
  1865                           ;dc_motor.c: 94:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1866   001B6E  C0D8  F01F         	movff	move@mL,turnRight@mL
  1867   001B72  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  1868   001B76  C0DA  F021         	movff	move@mR,turnRight@mR
  1869   001B7A  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  1870   001B7E  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1871   001B82  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  1872   001B86  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  1873   001B8A  ECAA  F01C         	call	_turnRight	;wreg free
  1874   001B8E                     
  1875                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1876   001B8E  0E05               	movlw	5
  1877   001B90  6E42               	movwf	(??_move+1)^0,c
  1878   001B92  0E0F               	movlw	15
  1879   001B94  6E41               	movwf	??_move^0,c
  1880   001B96  0EF1               	movlw	241
  1881   001B98                     u4637:
  1882   001B98  2EE8               	decfsz	wreg,f,c
  1883   001B9A  D7FE               	bra	u4637
  1884   001B9C  2E41               	decfsz	??_move^0,f,c
  1885   001B9E  D7FC               	bra	u4637
  1886   001BA0  2E42               	decfsz	(??_move+1)^0,f,c
  1887   001BA2  D7FA               	bra	u4637
  1888   001BA4  0000               	nop	
  1889   001BA6                     
  1890                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1891   001BA6  C0D8  F01F         	movff	move@mL,turnRight@mL
  1892   001BAA  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  1893   001BAE  C0DA  F021         	movff	move@mR,turnRight@mR
  1894   001BB2  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  1895   001BB6  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1896   001BBA  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  1897   001BBE  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  1898   001BC2  ECAA  F01C         	call	_turnRight	;wreg free
  1899                           
  1900                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1901   001BC6  0E05               	movlw	5
  1902   001BC8  6E42               	movwf	(??_move+1)^0,c
  1903   001BCA  0E0F               	movlw	15
  1904   001BCC  6E41               	movwf	??_move^0,c
  1905   001BCE  0EF1               	movlw	241
  1906   001BD0                     u4647:
  1907   001BD0  2EE8               	decfsz	wreg,f,c
  1908   001BD2  D7FE               	bra	u4647
  1909   001BD4  2E41               	decfsz	??_move^0,f,c
  1910   001BD6  D7FC               	bra	u4647
  1911   001BD8  2E42               	decfsz	(??_move+1)^0,f,c
  1912   001BDA  D7FA               	bra	u4647
  1913   001BDC  0000               	nop	
  1914   001BDE                     
  1915                           ;dc_motor.c: 98:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1916   001BDE  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  1917   001BE2  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1918   001BE6  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  1919   001BEA  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1920   001BEE  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1921   001BF2  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1922   001BF6  EC3E  F020         	call	_fullSpeedAhead	;wreg free
  1923                           
  1924                           ;dc_motor.c: 99:     }
  1925   001BFA  EFD8  F010         	goto	l560
  1926   001BFE                     l4974:
  1927                           
  1928                           ; BSR set to: 0
  1929   001BFE  0E02               	movlw	2
  1930   001C00  19DC               	xorwf	move@color& (0+255),w,b
  1931   001C02  A4D8               	btfss	status,2,c
  1932   001C04  EF06  F00E         	goto	u4231
  1933   001C08  EF08  F00E         	goto	u4230
  1934   001C0C                     u4231:
  1935   001C0C  EF50  F00E         	goto	l4984
  1936   001C10                     u4230:
  1937   001C10                     
  1938                           ; BSR set to: 0
  1939                           ;dc_motor.c: 102:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1940   001C10  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1941   001C14  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1942   001C18  C0DA  F021         	movff	move@mR,turnLeft@mR
  1943   001C1C  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1944   001C20  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1945   001C24  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1946   001C28  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1947   001C2C  EC94  F01D         	call	_turnLeft	;wreg free
  1948   001C30                     
  1949                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1950   001C30  0E05               	movlw	5
  1951   001C32  6E42               	movwf	(??_move+1)^0,c
  1952   001C34  0E0F               	movlw	15
  1953   001C36  6E41               	movwf	??_move^0,c
  1954   001C38  0EF1               	movlw	241
  1955   001C3A                     u4657:
  1956   001C3A  2EE8               	decfsz	wreg,f,c
  1957   001C3C  D7FE               	bra	u4657
  1958   001C3E  2E41               	decfsz	??_move^0,f,c
  1959   001C40  D7FC               	bra	u4657
  1960   001C42  2E42               	decfsz	(??_move+1)^0,f,c
  1961   001C44  D7FA               	bra	u4657
  1962   001C46  0000               	nop	
  1963   001C48                     
  1964                           ;dc_motor.c: 104:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1965   001C48  C0D8  F01F         	movff	move@mL,turnLeft@mL
  1966   001C4C  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  1967   001C50  C0DA  F021         	movff	move@mR,turnLeft@mR
  1968   001C54  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  1969   001C58  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1970   001C5C  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1971   001C60  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1972   001C64  EC94  F01D         	call	_turnLeft	;wreg free
  1973                           
  1974                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1975   001C68  0E05               	movlw	5
  1976   001C6A  6E42               	movwf	(??_move+1)^0,c
  1977   001C6C  0E0F               	movlw	15
  1978   001C6E  6E41               	movwf	??_move^0,c
  1979   001C70  0EF1               	movlw	241
  1980   001C72                     u4667:
  1981   001C72  2EE8               	decfsz	wreg,f,c
  1982   001C74  D7FE               	bra	u4667
  1983   001C76  2E41               	decfsz	??_move^0,f,c
  1984   001C78  D7FC               	bra	u4667
  1985   001C7A  2E42               	decfsz	(??_move+1)^0,f,c
  1986   001C7C  D7FA               	bra	u4667
  1987   001C7E  0000               	nop	
  1988   001C80                     
  1989                           ;dc_motor.c: 106:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1990   001C80  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  1991   001C84  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1992   001C88  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  1993   001C8C  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1994   001C90  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1995   001C94  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1996   001C98  EC3E  F020         	call	_fullSpeedAhead	;wreg free
  1997                           
  1998                           ;dc_motor.c: 107:     }
  1999   001C9C  EFD8  F010         	goto	l560
  2000   001CA0                     l4984:
  2001                           
  2002                           ; BSR set to: 0
  2003   001CA0  0E03               	movlw	3
  2004   001CA2  19DC               	xorwf	move@color& (0+255),w,b
  2005   001CA4  A4D8               	btfss	status,2,c
  2006   001CA6  EF57  F00E         	goto	u4241
  2007   001CAA  EF59  F00E         	goto	u4240
  2008   001CAE                     u4241:
  2009   001CAE  EFD9  F00E         	goto	l5000
  2010   001CB2                     u4240:
  2011   001CB2                     
  2012                           ; BSR set to: 0
  2013                           ;dc_motor.c: 110:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2014   001CB2  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2015   001CB6  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2016   001CBA  C0DA  F021         	movff	move@mR,turnLeft@mR
  2017   001CBE  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2018   001CC2  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2019   001CC6  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2020   001CCA  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2021   001CCE  EC94  F01D         	call	_turnLeft	;wreg free
  2022   001CD2                     
  2023                           ;dc_motor.c: 111:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2024   001CD2  0E05               	movlw	5
  2025   001CD4  6E42               	movwf	(??_move+1)^0,c
  2026   001CD6  0E0F               	movlw	15
  2027   001CD8  6E41               	movwf	??_move^0,c
  2028   001CDA  0EF1               	movlw	241
  2029   001CDC                     u4677:
  2030   001CDC  2EE8               	decfsz	wreg,f,c
  2031   001CDE  D7FE               	bra	u4677
  2032   001CE0  2E41               	decfsz	??_move^0,f,c
  2033   001CE2  D7FC               	bra	u4677
  2034   001CE4  2E42               	decfsz	(??_move+1)^0,f,c
  2035   001CE6  D7FA               	bra	u4677
  2036   001CE8  0000               	nop	
  2037   001CEA                     
  2038                           ;dc_motor.c: 112:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2039   001CEA  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2040   001CEE  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2041   001CF2  C0DA  F021         	movff	move@mR,turnLeft@mR
  2042   001CF6  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2043   001CFA  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2044   001CFE  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2045   001D02  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2046   001D06  EC94  F01D         	call	_turnLeft	;wreg free
  2047                           
  2048                           ;dc_motor.c: 113:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2049   001D0A  0E05               	movlw	5
  2050   001D0C  6E42               	movwf	(??_move+1)^0,c
  2051   001D0E  0E0F               	movlw	15
  2052   001D10  6E41               	movwf	??_move^0,c
  2053   001D12  0EF1               	movlw	241
  2054   001D14                     u4687:
  2055   001D14  2EE8               	decfsz	wreg,f,c
  2056   001D16  D7FE               	bra	u4687
  2057   001D18  2E41               	decfsz	??_move^0,f,c
  2058   001D1A  D7FC               	bra	u4687
  2059   001D1C  2E42               	decfsz	(??_move+1)^0,f,c
  2060   001D1E  D7FA               	bra	u4687
  2061   001D20  0000               	nop	
  2062   001D22                     
  2063                           ;dc_motor.c: 114:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2064   001D22  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2065   001D26  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2066   001D2A  C0DA  F021         	movff	move@mR,turnLeft@mR
  2067   001D2E  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2068   001D32  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2069   001D36  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2070   001D3A  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2071   001D3E  EC94  F01D         	call	_turnLeft	;wreg free
  2072   001D42                     
  2073                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2074   001D42  0E05               	movlw	5
  2075   001D44  6E42               	movwf	(??_move+1)^0,c
  2076   001D46  0E0F               	movlw	15
  2077   001D48  6E41               	movwf	??_move^0,c
  2078   001D4A  0EF1               	movlw	241
  2079   001D4C                     u4697:
  2080   001D4C  2EE8               	decfsz	wreg,f,c
  2081   001D4E  D7FE               	bra	u4697
  2082   001D50  2E41               	decfsz	??_move^0,f,c
  2083   001D52  D7FC               	bra	u4697
  2084   001D54  2E42               	decfsz	(??_move+1)^0,f,c
  2085   001D56  D7FA               	bra	u4697
  2086   001D58  0000               	nop	
  2087                           
  2088                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2089   001D5A  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2090   001D5E  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2091   001D62  C0DA  F021         	movff	move@mR,turnLeft@mR
  2092   001D66  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2093   001D6A  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2094   001D6E  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2095   001D72  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2096   001D76  EC94  F01D         	call	_turnLeft	;wreg free
  2097   001D7A                     
  2098                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2099   001D7A  0E05               	movlw	5
  2100   001D7C  6E42               	movwf	(??_move+1)^0,c
  2101   001D7E  0E0F               	movlw	15
  2102   001D80  6E41               	movwf	??_move^0,c
  2103   001D82  0EF1               	movlw	241
  2104   001D84                     u4707:
  2105   001D84  2EE8               	decfsz	wreg,f,c
  2106   001D86  D7FE               	bra	u4707
  2107   001D88  2E41               	decfsz	??_move^0,f,c
  2108   001D8A  D7FC               	bra	u4707
  2109   001D8C  2E42               	decfsz	(??_move+1)^0,f,c
  2110   001D8E  D7FA               	bra	u4707
  2111   001D90  0000               	nop	
  2112   001D92                     
  2113                           ;dc_motor.c: 118:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2114   001D92  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2115   001D96  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2116   001D9A  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2117   001D9E  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2118   001DA2  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2119   001DA6  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2120   001DAA  EC3E  F020         	call	_fullSpeedAhead	;wreg free
  2121                           
  2122                           ;dc_motor.c: 119:     }
  2123   001DAE  EFD8  F010         	goto	l560
  2124   001DB2                     l5000:
  2125                           
  2126                           ; BSR set to: 0
  2127   001DB2  0E04               	movlw	4
  2128   001DB4  19DC               	xorwf	move@color& (0+255),w,b
  2129   001DB6  A4D8               	btfss	status,2,c
  2130   001DB8  EFE0  F00E         	goto	u4251
  2131   001DBC  EFE2  F00E         	goto	u4250
  2132   001DC0                     u4251:
  2133   001DC0  EF46  F00F         	goto	l5012
  2134   001DC4                     u4250:
  2135   001DC4                     
  2136                           ; BSR set to: 0
  2137                           ;dc_motor.c: 122:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2138   001DC4  C0D8  F01F         	movff	move@mL,reverseOneSquare@mL
  2139   001DC8  C0D9  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2140   001DCC  C0DA  F021         	movff	move@mR,reverseOneSquare@mR
  2141   001DD0  C0DB  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2142   001DD4  C0E2  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2143   001DD8  C0E3  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2144   001DDC  C0E4  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2145   001DE0  ECB7  F01B         	call	_reverseOneSquare	;wreg free
  2146   001DE4                     
  2147                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2148   001DE4  0E05               	movlw	5
  2149   001DE6  6E42               	movwf	(??_move+1)^0,c
  2150   001DE8  0E0F               	movlw	15
  2151   001DEA  6E41               	movwf	??_move^0,c
  2152   001DEC  0EF1               	movlw	241
  2153   001DEE                     u4717:
  2154   001DEE  2EE8               	decfsz	wreg,f,c
  2155   001DF0  D7FE               	bra	u4717
  2156   001DF2  2E41               	decfsz	??_move^0,f,c
  2157   001DF4  D7FC               	bra	u4717
  2158   001DF6  2E42               	decfsz	(??_move+1)^0,f,c
  2159   001DF8  D7FA               	bra	u4717
  2160   001DFA  0000               	nop	
  2161   001DFC                     
  2162                           ;dc_motor.c: 124:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2163   001DFC  C0D8  F01F         	movff	move@mL,turnRight@mL
  2164   001E00  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2165   001E04  C0DA  F021         	movff	move@mR,turnRight@mR
  2166   001E08  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2167   001E0C  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2168   001E10  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2169   001E14  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2170   001E18  ECAA  F01C         	call	_turnRight	;wreg free
  2171                           
  2172                           ;dc_motor.c: 125:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2173   001E1C  0E05               	movlw	5
  2174   001E1E  6E42               	movwf	(??_move+1)^0,c
  2175   001E20  0E0F               	movlw	15
  2176   001E22  6E41               	movwf	??_move^0,c
  2177   001E24  0EF1               	movlw	241
  2178   001E26                     u4727:
  2179   001E26  2EE8               	decfsz	wreg,f,c
  2180   001E28  D7FE               	bra	u4727
  2181   001E2A  2E41               	decfsz	??_move^0,f,c
  2182   001E2C  D7FC               	bra	u4727
  2183   001E2E  2E42               	decfsz	(??_move+1)^0,f,c
  2184   001E30  D7FA               	bra	u4727
  2185   001E32  0000               	nop	
  2186   001E34                     
  2187                           ;dc_motor.c: 126:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2188   001E34  C0D8  F01F         	movff	move@mL,turnRight@mL
  2189   001E38  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2190   001E3C  C0DA  F021         	movff	move@mR,turnRight@mR
  2191   001E40  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2192   001E44  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2193   001E48  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2194   001E4C  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2195   001E50  ECAA  F01C         	call	_turnRight	;wreg free
  2196   001E54                     
  2197                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2198   001E54  0E05               	movlw	5
  2199   001E56  6E42               	movwf	(??_move+1)^0,c
  2200   001E58  0E0F               	movlw	15
  2201   001E5A  6E41               	movwf	??_move^0,c
  2202   001E5C  0EF1               	movlw	241
  2203   001E5E                     u4737:
  2204   001E5E  2EE8               	decfsz	wreg,f,c
  2205   001E60  D7FE               	bra	u4737
  2206   001E62  2E41               	decfsz	??_move^0,f,c
  2207   001E64  D7FC               	bra	u4737
  2208   001E66  2E42               	decfsz	(??_move+1)^0,f,c
  2209   001E68  D7FA               	bra	u4737
  2210   001E6A  0000               	nop	
  2211                           
  2212                           ;dc_motor.c: 128:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2213   001E6C  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2214   001E70  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2215   001E74  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2216   001E78  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2217   001E7C  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2218   001E80  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2219   001E84  EC3E  F020         	call	_fullSpeedAhead	;wreg free
  2220                           
  2221                           ;dc_motor.c: 129:     }
  2222   001E88  EFD8  F010         	goto	l560
  2223   001E8C                     l5012:
  2224                           
  2225                           ; BSR set to: 0
  2226   001E8C  0E05               	movlw	5
  2227   001E8E  19DC               	xorwf	move@color& (0+255),w,b
  2228   001E90  A4D8               	btfss	status,2,c
  2229   001E92  EF4D  F00F         	goto	u4261
  2230   001E96  EF4F  F00F         	goto	u4260
  2231   001E9A                     u4261:
  2232   001E9A  EFB3  F00F         	goto	l5024
  2233   001E9E                     u4260:
  2234   001E9E                     
  2235                           ; BSR set to: 0
  2236                           ;dc_motor.c: 132:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2237   001E9E  C0D8  F01F         	movff	move@mL,reverseOneSquare@mL
  2238   001EA2  C0D9  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2239   001EA6  C0DA  F021         	movff	move@mR,reverseOneSquare@mR
  2240   001EAA  C0DB  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2241   001EAE  C0E2  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2242   001EB2  C0E3  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2243   001EB6  C0E4  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2244   001EBA  ECB7  F01B         	call	_reverseOneSquare	;wreg free
  2245   001EBE                     
  2246                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2247   001EBE  0E05               	movlw	5
  2248   001EC0  6E42               	movwf	(??_move+1)^0,c
  2249   001EC2  0E0F               	movlw	15
  2250   001EC4  6E41               	movwf	??_move^0,c
  2251   001EC6  0EF1               	movlw	241
  2252   001EC8                     u4747:
  2253   001EC8  2EE8               	decfsz	wreg,f,c
  2254   001ECA  D7FE               	bra	u4747
  2255   001ECC  2E41               	decfsz	??_move^0,f,c
  2256   001ECE  D7FC               	bra	u4747
  2257   001ED0  2E42               	decfsz	(??_move+1)^0,f,c
  2258   001ED2  D7FA               	bra	u4747
  2259   001ED4  0000               	nop	
  2260   001ED6                     
  2261                           ;dc_motor.c: 134:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2262   001ED6  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2263   001EDA  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2264   001EDE  C0DA  F021         	movff	move@mR,turnLeft@mR
  2265   001EE2  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2266   001EE6  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2267   001EEA  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2268   001EEE  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2269   001EF2  EC94  F01D         	call	_turnLeft	;wreg free
  2270                           
  2271                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2272   001EF6  0E05               	movlw	5
  2273   001EF8  6E42               	movwf	(??_move+1)^0,c
  2274   001EFA  0E0F               	movlw	15
  2275   001EFC  6E41               	movwf	??_move^0,c
  2276   001EFE  0EF1               	movlw	241
  2277   001F00                     u4757:
  2278   001F00  2EE8               	decfsz	wreg,f,c
  2279   001F02  D7FE               	bra	u4757
  2280   001F04  2E41               	decfsz	??_move^0,f,c
  2281   001F06  D7FC               	bra	u4757
  2282   001F08  2E42               	decfsz	(??_move+1)^0,f,c
  2283   001F0A  D7FA               	bra	u4757
  2284   001F0C  0000               	nop	
  2285   001F0E                     
  2286                           ;dc_motor.c: 136:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2287   001F0E  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2288   001F12  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2289   001F16  C0DA  F021         	movff	move@mR,turnLeft@mR
  2290   001F1A  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2291   001F1E  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2292   001F22  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2293   001F26  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2294   001F2A  EC94  F01D         	call	_turnLeft	;wreg free
  2295   001F2E                     
  2296                           ;dc_motor.c: 137:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2297   001F2E  0E05               	movlw	5
  2298   001F30  6E42               	movwf	(??_move+1)^0,c
  2299   001F32  0E0F               	movlw	15
  2300   001F34  6E41               	movwf	??_move^0,c
  2301   001F36  0EF1               	movlw	241
  2302   001F38                     u4767:
  2303   001F38  2EE8               	decfsz	wreg,f,c
  2304   001F3A  D7FE               	bra	u4767
  2305   001F3C  2E41               	decfsz	??_move^0,f,c
  2306   001F3E  D7FC               	bra	u4767
  2307   001F40  2E42               	decfsz	(??_move+1)^0,f,c
  2308   001F42  D7FA               	bra	u4767
  2309   001F44  0000               	nop	
  2310                           
  2311                           ;dc_motor.c: 138:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2312   001F46  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2313   001F4A  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2314   001F4E  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2315   001F52  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2316   001F56  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2317   001F5A  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2318   001F5E  EC3E  F020         	call	_fullSpeedAhead	;wreg free
  2319                           
  2320                           ;dc_motor.c: 139:     }
  2321   001F62  EFD8  F010         	goto	l560
  2322   001F66                     l5024:
  2323                           
  2324                           ; BSR set to: 0
  2325   001F66  0E06               	movlw	6
  2326   001F68  19DC               	xorwf	move@color& (0+255),w,b
  2327   001F6A  A4D8               	btfss	status,2,c
  2328   001F6C  EFBA  F00F         	goto	u4271
  2329   001F70  EFBC  F00F         	goto	u4270
  2330   001F74                     u4271:
  2331   001F74  EF20  F010         	goto	l5036
  2332   001F78                     u4270:
  2333   001F78                     
  2334                           ; BSR set to: 0
  2335                           ;dc_motor.c: 142:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2336   001F78  C0D8  F01F         	movff	move@mL,turnRight@mL
  2337   001F7C  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2338   001F80  C0DA  F021         	movff	move@mR,turnRight@mR
  2339   001F84  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2340   001F88  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2341   001F8C  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2342   001F90  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2343   001F94  ECAA  F01C         	call	_turnRight	;wreg free
  2344   001F98                     
  2345                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2346   001F98  0E05               	movlw	5
  2347   001F9A  6E42               	movwf	(??_move+1)^0,c
  2348   001F9C  0E0F               	movlw	15
  2349   001F9E  6E41               	movwf	??_move^0,c
  2350   001FA0  0EF1               	movlw	241
  2351   001FA2                     u4777:
  2352   001FA2  2EE8               	decfsz	wreg,f,c
  2353   001FA4  D7FE               	bra	u4777
  2354   001FA6  2E41               	decfsz	??_move^0,f,c
  2355   001FA8  D7FC               	bra	u4777
  2356   001FAA  2E42               	decfsz	(??_move+1)^0,f,c
  2357   001FAC  D7FA               	bra	u4777
  2358   001FAE  0000               	nop	
  2359   001FB0                     
  2360                           ;dc_motor.c: 144:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2361   001FB0  C0D8  F01F         	movff	move@mL,turnRight@mL
  2362   001FB4  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2363   001FB8  C0DA  F021         	movff	move@mR,turnRight@mR
  2364   001FBC  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2365   001FC0  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2366   001FC4  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2367   001FC8  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2368   001FCC  ECAA  F01C         	call	_turnRight	;wreg free
  2369                           
  2370                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2371   001FD0  0E05               	movlw	5
  2372   001FD2  6E42               	movwf	(??_move+1)^0,c
  2373   001FD4  0E0F               	movlw	15
  2374   001FD6  6E41               	movwf	??_move^0,c
  2375   001FD8  0EF1               	movlw	241
  2376   001FDA                     u4787:
  2377   001FDA  2EE8               	decfsz	wreg,f,c
  2378   001FDC  D7FE               	bra	u4787
  2379   001FDE  2E41               	decfsz	??_move^0,f,c
  2380   001FE0  D7FC               	bra	u4787
  2381   001FE2  2E42               	decfsz	(??_move+1)^0,f,c
  2382   001FE4  D7FA               	bra	u4787
  2383   001FE6  0000               	nop	
  2384   001FE8                     
  2385                           ;dc_motor.c: 146:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2386   001FE8  C0D8  F01F         	movff	move@mL,turnRight@mL
  2387   001FEC  C0D9  F020         	movff	move@mL+1,turnRight@mL+1
  2388   001FF0  C0DA  F021         	movff	move@mR,turnRight@mR
  2389   001FF4  C0DB  F022         	movff	move@mR+1,turnRight@mR+1
  2390   001FF8  C0E5  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2391   001FFC  C0E6  F024         	movff	move@turnDuration,turnRight@turnDuration
  2392   002000  C0E7  F025         	movff	move@turnRamp,turnRight@turnRamp
  2393   002004  ECAA  F01C         	call	_turnRight	;wreg free
  2394   002008                     
  2395                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2396   002008  0E05               	movlw	5
  2397   00200A  6E42               	movwf	(??_move+1)^0,c
  2398   00200C  0E0F               	movlw	15
  2399   00200E  6E41               	movwf	??_move^0,c
  2400   002010  0EF1               	movlw	241
  2401   002012                     u4797:
  2402   002012  2EE8               	decfsz	wreg,f,c
  2403   002014  D7FE               	bra	u4797
  2404   002016  2E41               	decfsz	??_move^0,f,c
  2405   002018  D7FC               	bra	u4797
  2406   00201A  2E42               	decfsz	(??_move+1)^0,f,c
  2407   00201C  D7FA               	bra	u4797
  2408   00201E  0000               	nop	
  2409                           
  2410                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2411   002020  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2412   002024  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2413   002028  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2414   00202C  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2415   002030  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2416   002034  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2417   002038  EC3E  F020         	call	_fullSpeedAhead	;wreg free
  2418                           
  2419                           ;dc_motor.c: 149:     }
  2420   00203C  EFD8  F010         	goto	l560
  2421   002040                     l5036:
  2422                           
  2423                           ; BSR set to: 0
  2424   002040  0E07               	movlw	7
  2425   002042  19DC               	xorwf	move@color& (0+255),w,b
  2426   002044  A4D8               	btfss	status,2,c
  2427   002046  EF27  F010         	goto	u4281
  2428   00204A  EF29  F010         	goto	u4280
  2429   00204E                     u4281:
  2430   00204E  EF8D  F010         	goto	l5048
  2431   002052                     u4280:
  2432   002052                     
  2433                           ; BSR set to: 0
  2434                           ;dc_motor.c: 152:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2435   002052  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2436   002056  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2437   00205A  C0DA  F021         	movff	move@mR,turnLeft@mR
  2438   00205E  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2439   002062  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2440   002066  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2441   00206A  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2442   00206E  EC94  F01D         	call	_turnLeft	;wreg free
  2443   002072                     
  2444                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2445   002072  0E05               	movlw	5
  2446   002074  6E42               	movwf	(??_move+1)^0,c
  2447   002076  0E0F               	movlw	15
  2448   002078  6E41               	movwf	??_move^0,c
  2449   00207A  0EF1               	movlw	241
  2450   00207C                     u4807:
  2451   00207C  2EE8               	decfsz	wreg,f,c
  2452   00207E  D7FE               	bra	u4807
  2453   002080  2E41               	decfsz	??_move^0,f,c
  2454   002082  D7FC               	bra	u4807
  2455   002084  2E42               	decfsz	(??_move+1)^0,f,c
  2456   002086  D7FA               	bra	u4807
  2457   002088  0000               	nop	
  2458   00208A                     
  2459                           ;dc_motor.c: 154:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2460   00208A  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2461   00208E  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2462   002092  C0DA  F021         	movff	move@mR,turnLeft@mR
  2463   002096  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2464   00209A  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2465   00209E  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2466   0020A2  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2467   0020A6  EC94  F01D         	call	_turnLeft	;wreg free
  2468                           
  2469                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2470   0020AA  0E05               	movlw	5
  2471   0020AC  6E42               	movwf	(??_move+1)^0,c
  2472   0020AE  0E0F               	movlw	15
  2473   0020B0  6E41               	movwf	??_move^0,c
  2474   0020B2  0EF1               	movlw	241
  2475   0020B4                     u4817:
  2476   0020B4  2EE8               	decfsz	wreg,f,c
  2477   0020B6  D7FE               	bra	u4817
  2478   0020B8  2E41               	decfsz	??_move^0,f,c
  2479   0020BA  D7FC               	bra	u4817
  2480   0020BC  2E42               	decfsz	(??_move+1)^0,f,c
  2481   0020BE  D7FA               	bra	u4817
  2482   0020C0  0000               	nop	
  2483   0020C2                     
  2484                           ;dc_motor.c: 156:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2485   0020C2  C0D8  F01F         	movff	move@mL,turnLeft@mL
  2486   0020C6  C0D9  F020         	movff	move@mL+1,turnLeft@mL+1
  2487   0020CA  C0DA  F021         	movff	move@mR,turnLeft@mR
  2488   0020CE  C0DB  F022         	movff	move@mR+1,turnLeft@mR+1
  2489   0020D2  C0E5  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2490   0020D6  C0E6  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2491   0020DA  C0E7  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2492   0020DE  EC94  F01D         	call	_turnLeft	;wreg free
  2493   0020E2                     
  2494                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2495   0020E2  0E05               	movlw	5
  2496   0020E4  6E42               	movwf	(??_move+1)^0,c
  2497   0020E6  0E0F               	movlw	15
  2498   0020E8  6E41               	movwf	??_move^0,c
  2499   0020EA  0EF1               	movlw	241
  2500   0020EC                     u4827:
  2501   0020EC  2EE8               	decfsz	wreg,f,c
  2502   0020EE  D7FE               	bra	u4827
  2503   0020F0  2E41               	decfsz	??_move^0,f,c
  2504   0020F2  D7FC               	bra	u4827
  2505   0020F4  2E42               	decfsz	(??_move+1)^0,f,c
  2506   0020F6  D7FA               	bra	u4827
  2507   0020F8  0000               	nop	
  2508                           
  2509                           ;dc_motor.c: 158:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2510   0020FA  C0D8  F01F         	movff	move@mL,fullSpeedAhead@mL
  2511   0020FE  C0D9  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2512   002102  C0DA  F021         	movff	move@mR,fullSpeedAhead@mR
  2513   002106  C0DB  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2514   00210A  C0E2  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2515   00210E  C0E4  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2516   002112  EC3E  F020         	call	_fullSpeedAhead	;wreg free
  2517                           
  2518                           ;dc_motor.c: 159:     }
  2519   002116  EFD8  F010         	goto	l560
  2520   00211A                     l5048:
  2521                           
  2522                           ; BSR set to: 0
  2523   00211A  0E08               	movlw	8
  2524   00211C  19DC               	xorwf	move@color& (0+255),w,b
  2525   00211E  A4D8               	btfss	status,2,c
  2526   002120  EF94  F010         	goto	u4291
  2527   002124  EF96  F010         	goto	u4290
  2528   002128                     u4291:
  2529   002128  EFB8  F010         	goto	l5052
  2530   00212C                     u4290:
  2531   00212C                     
  2532                           ; BSR set to: 0
  2533                           ;dc_motor.c: 162:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2534   00212C  C0D8  F02D         	movff	move@mL,returnHome@mL
  2535   002130  C0D9  F02E         	movff	move@mL+1,returnHome@mL+1
  2536   002134  C0DA  F02F         	movff	move@mR,returnHome@mR
  2537   002138  C0DB  F030         	movff	move@mR+1,returnHome@mR+1
  2538   00213C  C0DD  F031         	movff	move@moveSequence,returnHome@moveSequence
  2539   002140  C0DE  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2540   002144  C0DF  F033         	movff	move@straightTime,returnHome@straightTime
  2541   002148  C0E0  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2542   00214C  C0E1  F035         	movff	move@curMove,returnHome@curMove
  2543   002150  C0E2  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2544   002154  C0E3  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2545   002158  C0E4  F038         	movff	move@straightRamp,returnHome@straightRamp
  2546   00215C  C0E5  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2547   002160  C0E6  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2548   002164  C0E7  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2549   002168  EC01  F007         	call	_returnHome	;wreg free
  2550                           
  2551                           ;dc_motor.c: 163:     }
  2552   00216C  EFD8  F010         	goto	l560
  2553   002170                     l5052:
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;dc_motor.c: 166:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2557   002170  C0D8  F02D         	movff	move@mL,returnHome@mL
  2558   002174  C0D9  F02E         	movff	move@mL+1,returnHome@mL+1
  2559   002178  C0DA  F02F         	movff	move@mR,returnHome@mR
  2560   00217C  C0DB  F030         	movff	move@mR+1,returnHome@mR+1
  2561   002180  C0DD  F031         	movff	move@moveSequence,returnHome@moveSequence
  2562   002184  C0DE  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2563   002188  C0DF  F033         	movff	move@straightTime,returnHome@straightTime
  2564   00218C  C0E0  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2565   002190  C0E1  F035         	movff	move@curMove,returnHome@curMove
  2566   002194  C0E2  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2567   002198  C0E3  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2568   00219C  C0E4  F038         	movff	move@straightRamp,returnHome@straightRamp
  2569   0021A0  C0E5  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2570   0021A4  C0E6  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2571   0021A8  C0E7  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2572   0021AC  EC01  F007         	call	_returnHome	;wreg free
  2573   0021B0                     l560:
  2574   0021B0  0012               	return		;funcret
  2575   0021B2                     __end_of_move:
  2576                           	callstack 0
  2577                           
  2578 ;; *************** function _returnHome *****************
  2579 ;; Defined at:
  2580 ;;		line 171 in file "dc_motor.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2583 ;;		 -> main@motorL(10), 
  2584 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2585 ;;		 -> main@motorR(10), 
  2586 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  2587 ;;		 -> main@moveSequence(40), 
  2588 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  2589 ;;		 -> main@straightTime(82), 
  2590 ;;  curMove         1   52[COMRAM] unsigned char 
  2591 ;;  straightSpee    1   53[COMRAM] unsigned char 
  2592 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  2593 ;;  straightRamp    1   55[COMRAM] unsigned char 
  2594 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  2595 ;;  turnDuration    1   57[COMRAM] unsigned char 
  2596 ;;  turnRamp        1   58[COMRAM] unsigned char 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  i               1   63[COMRAM] unsigned char 
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2608 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2610 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2611 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2612 ;;Total ram usage:       20 bytes
  2613 ;; Hardware stack levels used: 1
  2614 ;; Hardware stack levels required when called: 8
  2615 ;; This function calls:
  2616 ;;		_fullSpeedAhead
  2617 ;;		_get16bitTMR0val
  2618 ;;		_resetTimer
  2619 ;;		_reverseOneSquare
  2620 ;;		_stop
  2621 ;;		_turnLeft
  2622 ;;		_turnRight
  2623 ;; This function is called by:
  2624 ;;		_move
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text2
  2629   000E02                     __ptext2:
  2630                           	callstack 0
  2631   000E02                     _returnHome:
  2632                           	callstack 21
  2633   000E02                     
  2634                           ;dc_motor.c: 171: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reverseDu
      +                          ration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned
      +                           char turnRamp);dc_motor.c: 172: {;dc_motor.c: 173:     turnLeft(mL, mR, turnSpeed, turn
      +                          Duration, turnRamp);
  2635   000E02  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2636   000E06  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2637   000E0A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2638   000E0E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2639   000E12  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2640   000E16  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2641   000E1A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2642   000E1E  EC94  F01D         	call	_turnLeft	;wreg free
  2643   000E22                     
  2644                           ;dc_motor.c: 174:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2645   000E22  0E05               	movlw	5
  2646   000E24  6E3D               	movwf	(??_returnHome+1)^0,c
  2647   000E26  0E0F               	movlw	15
  2648   000E28  6E3C               	movwf	??_returnHome^0,c
  2649   000E2A  0EF1               	movlw	241
  2650   000E2C                     u4837:
  2651   000E2C  2EE8               	decfsz	wreg,f,c
  2652   000E2E  D7FE               	bra	u4837
  2653   000E30  2E3C               	decfsz	??_returnHome^0,f,c
  2654   000E32  D7FC               	bra	u4837
  2655   000E34  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2656   000E36  D7FA               	bra	u4837
  2657   000E38  0000               	nop	
  2658   000E3A                     
  2659                           ;dc_motor.c: 175:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2660   000E3A  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2661   000E3E  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2662   000E42  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2663   000E46  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2664   000E4A  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2665   000E4E  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2666   000E52  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2667   000E56  EC94  F01D         	call	_turnLeft	;wreg free
  2668                           
  2669                           ;dc_motor.c: 176:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2670   000E5A  0E05               	movlw	5
  2671   000E5C  6E3D               	movwf	(??_returnHome+1)^0,c
  2672   000E5E  0E0F               	movlw	15
  2673   000E60  6E3C               	movwf	??_returnHome^0,c
  2674   000E62  0EF1               	movlw	241
  2675   000E64                     u4847:
  2676   000E64  2EE8               	decfsz	wreg,f,c
  2677   000E66  D7FE               	bra	u4847
  2678   000E68  2E3C               	decfsz	??_returnHome^0,f,c
  2679   000E6A  D7FC               	bra	u4847
  2680   000E6C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2681   000E6E  D7FA               	bra	u4847
  2682   000E70  0000               	nop	
  2683   000E72                     
  2684                           ;dc_motor.c: 177:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2685   000E72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2686   000E76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2687   000E7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2688   000E7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2689   000E82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2690   000E86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2691   000E8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2692   000E8E  EC94  F01D         	call	_turnLeft	;wreg free
  2693   000E92                     
  2694                           ;dc_motor.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2695   000E92  0E05               	movlw	5
  2696   000E94  6E3D               	movwf	(??_returnHome+1)^0,c
  2697   000E96  0E0F               	movlw	15
  2698   000E98  6E3C               	movwf	??_returnHome^0,c
  2699   000E9A  0EF1               	movlw	241
  2700   000E9C                     u4857:
  2701   000E9C  2EE8               	decfsz	wreg,f,c
  2702   000E9E  D7FE               	bra	u4857
  2703   000EA0  2E3C               	decfsz	??_returnHome^0,f,c
  2704   000EA2  D7FC               	bra	u4857
  2705   000EA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2706   000EA6  D7FA               	bra	u4857
  2707   000EA8  0000               	nop	
  2708                           
  2709                           ;dc_motor.c: 179:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2710   000EAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2711   000EAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2712   000EB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2713   000EB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2714   000EBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2715   000EBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2716   000EC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2717   000EC6  EC94  F01D         	call	_turnLeft	;wreg free
  2718   000ECA                     
  2719                           ;dc_motor.c: 180:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2720   000ECA  0E05               	movlw	5
  2721   000ECC  6E3D               	movwf	(??_returnHome+1)^0,c
  2722   000ECE  0E0F               	movlw	15
  2723   000ED0  6E3C               	movwf	??_returnHome^0,c
  2724   000ED2  0EF1               	movlw	241
  2725   000ED4                     u4867:
  2726   000ED4  2EE8               	decfsz	wreg,f,c
  2727   000ED6  D7FE               	bra	u4867
  2728   000ED8  2E3C               	decfsz	??_returnHome^0,f,c
  2729   000EDA  D7FC               	bra	u4867
  2730   000EDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2731   000EDE  D7FA               	bra	u4867
  2732   000EE0  0000               	nop	
  2733   000EE2                     
  2734                           ;dc_motor.c: 181:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2735   000EE2  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  2736   000EE6  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  2737   000EEA  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  2738   000EEE  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  2739   000EF2  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  2740   000EF6  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  2741   000EFA  EC3E  F020         	call	_fullSpeedAhead	;wreg free
  2742   000EFE                     
  2743                           ;dc_motor.c: 182:     resetTimer();
  2744   000EFE  EC7F  F024         	call	_resetTimer	;wreg free
  2745   000F02                     l4546:
  2746   000F02  5035               	movf	returnHome@curMove^0,w,c
  2747   000F04  0D02               	mullw	2
  2748   000F06  CFF3 F03C          	movff	prodl,??_returnHome
  2749   000F0A  CFF4 F03D          	movff	prodh,??_returnHome+1
  2750   000F0E  503C               	movf	??_returnHome^0,w,c
  2751   000F10  2433               	addwf	returnHome@straightTime^0,w,c
  2752   000F12  6ED9               	movwf	fsr2l,c
  2753   000F14  503D               	movf	(??_returnHome+1)^0,w,c
  2754   000F16  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  2755   000F18  6EDA               	movwf	fsr2h,c
  2756   000F1A  EC88  F023         	call	_get16bitTMR0val	;wreg free
  2757   000F1E  50DE               	movf	postinc2,w,c
  2758   000F20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  2759   000F22  50DE               	movf	postinc2,w,c
  2760   000F24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  2761   000F26  A0D8               	btfss	status,0,c
  2762   000F28  EF98  F007         	goto	u3661
  2763   000F2C  EF9A  F007         	goto	u3660
  2764   000F30                     u3661:
  2765   000F30  EF81  F007         	goto	l4546
  2766   000F34                     u3660:
  2767   000F34                     
  2768                           ;dc_motor.c: 184:     stop(mL, mR, straightRamp);
  2769   000F34  C02D  F01F         	movff	returnHome@mL,stop@mL
  2770   000F38  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  2771   000F3C  C02F  F021         	movff	returnHome@mR,stop@mR
  2772   000F40  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  2773   000F44  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  2774   000F48  ECBA  F01F         	call	_stop	;wreg free
  2775   000F4C                     
  2776                           ;dc_motor.c: 186:     char i=curMove;
  2777   000F4C  C035  F040         	movff	returnHome@curMove,returnHome@i
  2778                           
  2779                           ;dc_motor.c: 187:     while (i>0) {
  2780   000F50  EF56  F00A         	goto	l4638
  2781   000F54                     l4552:
  2782                           
  2783                           ;dc_motor.c: 188:         i--;
  2784   000F54  0640               	decf	returnHome@i^0,f,c
  2785   000F56                     
  2786                           ;dc_motor.c: 190:         if (moveSequence[i] == 1) {
  2787   000F56  5040               	movf	returnHome@i^0,w,c
  2788   000F58  2431               	addwf	returnHome@moveSequence^0,w,c
  2789   000F5A  6ED9               	movwf	fsr2l,c
  2790   000F5C  0E00               	movlw	0
  2791   000F5E  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2792   000F60  6EDA               	movwf	fsr2h,c
  2793   000F62  04DE               	decf	postinc2,w,c
  2794   000F64  A4D8               	btfss	status,2,c
  2795   000F66  EFB7  F007         	goto	u3671
  2796   000F6A  EFB9  F007         	goto	u3670
  2797   000F6E                     u3671:
  2798   000F6E  EFF3  F007         	goto	l4562
  2799   000F72                     u3670:
  2800   000F72                     
  2801                           ;dc_motor.c: 191:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2802   000F72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2803   000F76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2804   000F7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2805   000F7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2806   000F82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2807   000F86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2808   000F8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2809   000F8E  EC94  F01D         	call	_turnLeft	;wreg free
  2810   000F92                     
  2811                           ;dc_motor.c: 192:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2812   000F92  0E05               	movlw	5
  2813   000F94  6E3D               	movwf	(??_returnHome+1)^0,c
  2814   000F96  0E0F               	movlw	15
  2815   000F98  6E3C               	movwf	??_returnHome^0,c
  2816   000F9A  0EF1               	movlw	241
  2817   000F9C                     u4877:
  2818   000F9C  2EE8               	decfsz	wreg,f,c
  2819   000F9E  D7FE               	bra	u4877
  2820   000FA0  2E3C               	decfsz	??_returnHome^0,f,c
  2821   000FA2  D7FC               	bra	u4877
  2822   000FA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2823   000FA6  D7FA               	bra	u4877
  2824   000FA8  0000               	nop	
  2825   000FAA                     
  2826                           ;dc_motor.c: 193:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2827   000FAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2828   000FAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2829   000FB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2830   000FB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2831   000FBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2832   000FBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2833   000FC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2834   000FC6  EC94  F01D         	call	_turnLeft	;wreg free
  2835                           
  2836                           ;dc_motor.c: 194:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2837   000FCA  0E05               	movlw	5
  2838   000FCC  6E3D               	movwf	(??_returnHome+1)^0,c
  2839   000FCE  0E0F               	movlw	15
  2840   000FD0  6E3C               	movwf	??_returnHome^0,c
  2841   000FD2  0EF1               	movlw	241
  2842   000FD4                     u4887:
  2843   000FD4  2EE8               	decfsz	wreg,f,c
  2844   000FD6  D7FE               	bra	u4887
  2845   000FD8  2E3C               	decfsz	??_returnHome^0,f,c
  2846   000FDA  D7FC               	bra	u4887
  2847   000FDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2848   000FDE  D7FA               	bra	u4887
  2849   000FE0  0000               	nop	
  2850                           
  2851                           ;dc_motor.c: 195:         }
  2852   000FE2  EF21  F00A         	goto	l569
  2853   000FE6                     l4562:
  2854   000FE6  5040               	movf	returnHome@i^0,w,c
  2855   000FE8  2431               	addwf	returnHome@moveSequence^0,w,c
  2856   000FEA  6ED9               	movwf	fsr2l,c
  2857   000FEC  0E00               	movlw	0
  2858   000FEE  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2859   000FF0  6EDA               	movwf	fsr2h,c
  2860   000FF2  0E02               	movlw	2
  2861   000FF4  18DE               	xorwf	postinc2,w,c
  2862   000FF6  A4D8               	btfss	status,2,c
  2863   000FF8  EF00  F008         	goto	u3681
  2864   000FFC  EF02  F008         	goto	u3680
  2865   001000                     u3681:
  2866   001000  EF3C  F008         	goto	l4570
  2867   001004                     u3680:
  2868   001004                     
  2869                           ;dc_motor.c: 198:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2870   001004  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2871   001008  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2872   00100C  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2873   001010  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2874   001014  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2875   001018  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2876   00101C  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2877   001020  ECAA  F01C         	call	_turnRight	;wreg free
  2878   001024                     
  2879                           ;dc_motor.c: 199:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2880   001024  0E05               	movlw	5
  2881   001026  6E3D               	movwf	(??_returnHome+1)^0,c
  2882   001028  0E0F               	movlw	15
  2883   00102A  6E3C               	movwf	??_returnHome^0,c
  2884   00102C  0EF1               	movlw	241
  2885   00102E                     u4897:
  2886   00102E  2EE8               	decfsz	wreg,f,c
  2887   001030  D7FE               	bra	u4897
  2888   001032  2E3C               	decfsz	??_returnHome^0,f,c
  2889   001034  D7FC               	bra	u4897
  2890   001036  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2891   001038  D7FA               	bra	u4897
  2892   00103A  0000               	nop	
  2893   00103C                     
  2894                           ;dc_motor.c: 200:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2895   00103C  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2896   001040  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2897   001044  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2898   001048  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2899   00104C  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2900   001050  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2901   001054  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2902   001058  ECAA  F01C         	call	_turnRight	;wreg free
  2903                           
  2904                           ;dc_motor.c: 201:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2905   00105C  0E05               	movlw	5
  2906   00105E  6E3D               	movwf	(??_returnHome+1)^0,c
  2907   001060  0E0F               	movlw	15
  2908   001062  6E3C               	movwf	??_returnHome^0,c
  2909   001064  0EF1               	movlw	241
  2910   001066                     u4907:
  2911   001066  2EE8               	decfsz	wreg,f,c
  2912   001068  D7FE               	bra	u4907
  2913   00106A  2E3C               	decfsz	??_returnHome^0,f,c
  2914   00106C  D7FC               	bra	u4907
  2915   00106E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2916   001070  D7FA               	bra	u4907
  2917   001072  0000               	nop	
  2918                           
  2919                           ;dc_motor.c: 202:         }
  2920   001074  EF21  F00A         	goto	l569
  2921   001078                     l4570:
  2922   001078  5040               	movf	returnHome@i^0,w,c
  2923   00107A  2431               	addwf	returnHome@moveSequence^0,w,c
  2924   00107C  6ED9               	movwf	fsr2l,c
  2925   00107E  0E00               	movlw	0
  2926   001080  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2927   001082  6EDA               	movwf	fsr2h,c
  2928   001084  0E03               	movlw	3
  2929   001086  18DE               	xorwf	postinc2,w,c
  2930   001088  A4D8               	btfss	status,2,c
  2931   00108A  EF49  F008         	goto	u3691
  2932   00108E  EF4B  F008         	goto	u3690
  2933   001092                     u3691:
  2934   001092  EFBD  F008         	goto	l4584
  2935   001096                     u3690:
  2936   001096                     
  2937                           ;dc_motor.c: 205:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2938   001096  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2939   00109A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2940   00109E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2941   0010A2  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2942   0010A6  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2943   0010AA  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2944   0010AE  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2945   0010B2  EC94  F01D         	call	_turnLeft	;wreg free
  2946   0010B6                     
  2947                           ;dc_motor.c: 206:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2948   0010B6  0E05               	movlw	5
  2949   0010B8  6E3D               	movwf	(??_returnHome+1)^0,c
  2950   0010BA  0E0F               	movlw	15
  2951   0010BC  6E3C               	movwf	??_returnHome^0,c
  2952   0010BE  0EF1               	movlw	241
  2953   0010C0                     u4917:
  2954   0010C0  2EE8               	decfsz	wreg,f,c
  2955   0010C2  D7FE               	bra	u4917
  2956   0010C4  2E3C               	decfsz	??_returnHome^0,f,c
  2957   0010C6  D7FC               	bra	u4917
  2958   0010C8  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2959   0010CA  D7FA               	bra	u4917
  2960   0010CC  0000               	nop	
  2961   0010CE                     
  2962                           ;dc_motor.c: 207:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2963   0010CE  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2964   0010D2  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2965   0010D6  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2966   0010DA  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2967   0010DE  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2968   0010E2  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2969   0010E6  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2970   0010EA  EC94  F01D         	call	_turnLeft	;wreg free
  2971                           
  2972                           ;dc_motor.c: 208:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2973   0010EE  0E05               	movlw	5
  2974   0010F0  6E3D               	movwf	(??_returnHome+1)^0,c
  2975   0010F2  0E0F               	movlw	15
  2976   0010F4  6E3C               	movwf	??_returnHome^0,c
  2977   0010F6  0EF1               	movlw	241
  2978   0010F8                     u4927:
  2979   0010F8  2EE8               	decfsz	wreg,f,c
  2980   0010FA  D7FE               	bra	u4927
  2981   0010FC  2E3C               	decfsz	??_returnHome^0,f,c
  2982   0010FE  D7FC               	bra	u4927
  2983   001100  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2984   001102  D7FA               	bra	u4927
  2985   001104  0000               	nop	
  2986   001106                     
  2987                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2988   001106  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2989   00110A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2990   00110E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2991   001112  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2992   001116  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2993   00111A  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2994   00111E  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2995   001122  EC94  F01D         	call	_turnLeft	;wreg free
  2996   001126                     
  2997                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2998   001126  0E05               	movlw	5
  2999   001128  6E3D               	movwf	(??_returnHome+1)^0,c
  3000   00112A  0E0F               	movlw	15
  3001   00112C  6E3C               	movwf	??_returnHome^0,c
  3002   00112E  0EF1               	movlw	241
  3003   001130                     u4937:
  3004   001130  2EE8               	decfsz	wreg,f,c
  3005   001132  D7FE               	bra	u4937
  3006   001134  2E3C               	decfsz	??_returnHome^0,f,c
  3007   001136  D7FC               	bra	u4937
  3008   001138  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3009   00113A  D7FA               	bra	u4937
  3010   00113C  0000               	nop	
  3011                           
  3012                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3013   00113E  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3014   001142  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3015   001146  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3016   00114A  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3017   00114E  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3018   001152  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3019   001156  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3020   00115A  EC94  F01D         	call	_turnLeft	;wreg free
  3021   00115E                     l4582:
  3022                           
  3023                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3024   00115E  0E05               	movlw	5
  3025   001160  6E3D               	movwf	(??_returnHome+1)^0,c
  3026   001162  0E0F               	movlw	15
  3027   001164  6E3C               	movwf	??_returnHome^0,c
  3028   001166  0EF1               	movlw	241
  3029   001168                     u4947:
  3030   001168  2EE8               	decfsz	wreg,f,c
  3031   00116A  D7FE               	bra	u4947
  3032   00116C  2E3C               	decfsz	??_returnHome^0,f,c
  3033   00116E  D7FC               	bra	u4947
  3034   001170  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3035   001172  D7FA               	bra	u4947
  3036   001174  0000               	nop	
  3037                           
  3038                           ;dc_motor.c: 213:         }
  3039   001176  EF21  F00A         	goto	l569
  3040   00117A                     l4584:
  3041   00117A  5040               	movf	returnHome@i^0,w,c
  3042   00117C  2431               	addwf	returnHome@moveSequence^0,w,c
  3043   00117E  6ED9               	movwf	fsr2l,c
  3044   001180  0E00               	movlw	0
  3045   001182  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3046   001184  6EDA               	movwf	fsr2h,c
  3047   001186  0E04               	movlw	4
  3048   001188  18DE               	xorwf	postinc2,w,c
  3049   00118A  A4D8               	btfss	status,2,c
  3050   00118C  EFCA  F008         	goto	u3701
  3051   001190  EFCC  F008         	goto	u3700
  3052   001194                     u3701:
  3053   001194  EF16  F009         	goto	l4596
  3054   001198                     u3700:
  3055   001198                     
  3056                           ;dc_motor.c: 216:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3057   001198  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3058   00119C  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3059   0011A0  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3060   0011A4  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3061   0011A8  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3062   0011AC  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3063   0011B0  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3064   0011B4  EC94  F01D         	call	_turnLeft	;wreg free
  3065   0011B8                     
  3066                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3067   0011B8  0E05               	movlw	5
  3068   0011BA  6E3D               	movwf	(??_returnHome+1)^0,c
  3069   0011BC  0E0F               	movlw	15
  3070   0011BE  6E3C               	movwf	??_returnHome^0,c
  3071   0011C0  0EF1               	movlw	241
  3072   0011C2                     u4957:
  3073   0011C2  2EE8               	decfsz	wreg,f,c
  3074   0011C4  D7FE               	bra	u4957
  3075   0011C6  2E3C               	decfsz	??_returnHome^0,f,c
  3076   0011C8  D7FC               	bra	u4957
  3077   0011CA  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3078   0011CC  D7FA               	bra	u4957
  3079   0011CE  0000               	nop	
  3080   0011D0                     
  3081                           ;dc_motor.c: 218:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3082   0011D0  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3083   0011D4  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3084   0011D8  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3085   0011DC  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3086   0011E0  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3087   0011E4  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3088   0011E8  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3089   0011EC  EC94  F01D         	call	_turnLeft	;wreg free
  3090                           
  3091                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3092   0011F0  0E05               	movlw	5
  3093   0011F2  6E3D               	movwf	(??_returnHome+1)^0,c
  3094   0011F4  0E0F               	movlw	15
  3095   0011F6  6E3C               	movwf	??_returnHome^0,c
  3096   0011F8  0EF1               	movlw	241
  3097   0011FA                     u4967:
  3098   0011FA  2EE8               	decfsz	wreg,f,c
  3099   0011FC  D7FE               	bra	u4967
  3100   0011FE  2E3C               	decfsz	??_returnHome^0,f,c
  3101   001200  D7FC               	bra	u4967
  3102   001202  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3103   001204  D7FA               	bra	u4967
  3104   001206  0000               	nop	
  3105   001208                     
  3106                           ;dc_motor.c: 220:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3107   001208  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  3108   00120C  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  3109   001210  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  3110   001214  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  3111   001218  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  3112   00121C  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  3113   001220  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  3114   001224  ECB7  F01B         	call	_reverseOneSquare	;wreg free
  3115   001228  EFAF  F008         	goto	l4582
  3116   00122C                     l4596:
  3117   00122C  5040               	movf	returnHome@i^0,w,c
  3118   00122E  2431               	addwf	returnHome@moveSequence^0,w,c
  3119   001230  6ED9               	movwf	fsr2l,c
  3120   001232  0E00               	movlw	0
  3121   001234  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3122   001236  6EDA               	movwf	fsr2h,c
  3123   001238  0E05               	movlw	5
  3124   00123A  18DE               	xorwf	postinc2,w,c
  3125   00123C  A4D8               	btfss	status,2,c
  3126   00123E  EF23  F009         	goto	u3711
  3127   001242  EF25  F009         	goto	u3710
  3128   001246                     u3711:
  3129   001246  EF6F  F009         	goto	l4608
  3130   00124A                     u3710:
  3131   00124A                     
  3132                           ;dc_motor.c: 225:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3133   00124A  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3134   00124E  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3135   001252  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3136   001256  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3137   00125A  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3138   00125E  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3139   001262  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3140   001266  ECAA  F01C         	call	_turnRight	;wreg free
  3141   00126A                     
  3142                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3143   00126A  0E05               	movlw	5
  3144   00126C  6E3D               	movwf	(??_returnHome+1)^0,c
  3145   00126E  0E0F               	movlw	15
  3146   001270  6E3C               	movwf	??_returnHome^0,c
  3147   001272  0EF1               	movlw	241
  3148   001274                     u4977:
  3149   001274  2EE8               	decfsz	wreg,f,c
  3150   001276  D7FE               	bra	u4977
  3151   001278  2E3C               	decfsz	??_returnHome^0,f,c
  3152   00127A  D7FC               	bra	u4977
  3153   00127C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3154   00127E  D7FA               	bra	u4977
  3155   001280  0000               	nop	
  3156   001282                     
  3157                           ;dc_motor.c: 227:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3158   001282  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3159   001286  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3160   00128A  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3161   00128E  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3162   001292  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3163   001296  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3164   00129A  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3165   00129E  ECAA  F01C         	call	_turnRight	;wreg free
  3166                           
  3167                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3168   0012A2  0E05               	movlw	5
  3169   0012A4  6E3D               	movwf	(??_returnHome+1)^0,c
  3170   0012A6  0E0F               	movlw	15
  3171   0012A8  6E3C               	movwf	??_returnHome^0,c
  3172   0012AA  0EF1               	movlw	241
  3173   0012AC                     u4987:
  3174   0012AC  2EE8               	decfsz	wreg,f,c
  3175   0012AE  D7FE               	bra	u4987
  3176   0012B0  2E3C               	decfsz	??_returnHome^0,f,c
  3177   0012B2  D7FC               	bra	u4987
  3178   0012B4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3179   0012B6  D7FA               	bra	u4987
  3180   0012B8  0000               	nop	
  3181   0012BA                     
  3182                           ;dc_motor.c: 229:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3183   0012BA  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  3184   0012BE  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  3185   0012C2  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  3186   0012C6  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  3187   0012CA  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  3188   0012CE  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  3189   0012D2  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  3190   0012D6  ECB7  F01B         	call	_reverseOneSquare	;wreg free
  3191   0012DA  EFAF  F008         	goto	l4582
  3192   0012DE                     l4608:
  3193   0012DE  5040               	movf	returnHome@i^0,w,c
  3194   0012E0  2431               	addwf	returnHome@moveSequence^0,w,c
  3195   0012E2  6ED9               	movwf	fsr2l,c
  3196   0012E4  0E00               	movlw	0
  3197   0012E6  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3198   0012E8  6EDA               	movwf	fsr2h,c
  3199   0012EA  0E06               	movlw	6
  3200   0012EC  18DE               	xorwf	postinc2,w,c
  3201   0012EE  A4D8               	btfss	status,2,c
  3202   0012F0  EF7C  F009         	goto	u3721
  3203   0012F4  EF7E  F009         	goto	u3720
  3204   0012F8                     u3721:
  3205   0012F8  EFC8  F009         	goto	l4620
  3206   0012FC                     u3720:
  3207   0012FC                     
  3208                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3209   0012FC  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3210   001300  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3211   001304  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3212   001308  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3213   00130C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3214   001310  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3215   001314  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3216   001318  EC94  F01D         	call	_turnLeft	;wreg free
  3217   00131C                     
  3218                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3219   00131C  0E05               	movlw	5
  3220   00131E  6E3D               	movwf	(??_returnHome+1)^0,c
  3221   001320  0E0F               	movlw	15
  3222   001322  6E3C               	movwf	??_returnHome^0,c
  3223   001324  0EF1               	movlw	241
  3224   001326                     u4997:
  3225   001326  2EE8               	decfsz	wreg,f,c
  3226   001328  D7FE               	bra	u4997
  3227   00132A  2E3C               	decfsz	??_returnHome^0,f,c
  3228   00132C  D7FC               	bra	u4997
  3229   00132E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3230   001330  D7FA               	bra	u4997
  3231   001332  0000               	nop	
  3232   001334                     
  3233                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3234   001334  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3235   001338  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3236   00133C  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3237   001340  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3238   001344  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3239   001348  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3240   00134C  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3241   001350  EC94  F01D         	call	_turnLeft	;wreg free
  3242                           
  3243                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3244   001354  0E05               	movlw	5
  3245   001356  6E3D               	movwf	(??_returnHome+1)^0,c
  3246   001358  0E0F               	movlw	15
  3247   00135A  6E3C               	movwf	??_returnHome^0,c
  3248   00135C  0EF1               	movlw	241
  3249   00135E                     u5007:
  3250   00135E  2EE8               	decfsz	wreg,f,c
  3251   001360  D7FE               	bra	u5007
  3252   001362  2E3C               	decfsz	??_returnHome^0,f,c
  3253   001364  D7FC               	bra	u5007
  3254   001366  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3255   001368  D7FA               	bra	u5007
  3256   00136A  0000               	nop	
  3257   00136C                     
  3258                           ;dc_motor.c: 238:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3259   00136C  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3260   001370  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3261   001374  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3262   001378  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3263   00137C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3264   001380  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3265   001384  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3266   001388  EC94  F01D         	call	_turnLeft	;wreg free
  3267   00138C  EFAF  F008         	goto	l4582
  3268   001390                     l4620:
  3269   001390  5040               	movf	returnHome@i^0,w,c
  3270   001392  2431               	addwf	returnHome@moveSequence^0,w,c
  3271   001394  6ED9               	movwf	fsr2l,c
  3272   001396  0E00               	movlw	0
  3273   001398  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3274   00139A  6EDA               	movwf	fsr2h,c
  3275   00139C  0E07               	movlw	7
  3276   00139E  18DE               	xorwf	postinc2,w,c
  3277   0013A0  A4D8               	btfss	status,2,c
  3278   0013A2  EFD5  F009         	goto	u3731
  3279   0013A6  EFD7  F009         	goto	u3730
  3280   0013AA                     u3731:
  3281   0013AA  EF21  F00A         	goto	l575
  3282   0013AE                     u3730:
  3283   0013AE                     
  3284                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3285   0013AE  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3286   0013B2  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3287   0013B6  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3288   0013BA  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3289   0013BE  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3290   0013C2  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3291   0013C6  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3292   0013CA  ECAA  F01C         	call	_turnRight	;wreg free
  3293   0013CE                     
  3294                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3295   0013CE  0E05               	movlw	5
  3296   0013D0  6E3D               	movwf	(??_returnHome+1)^0,c
  3297   0013D2  0E0F               	movlw	15
  3298   0013D4  6E3C               	movwf	??_returnHome^0,c
  3299   0013D6  0EF1               	movlw	241
  3300   0013D8                     u5017:
  3301   0013D8  2EE8               	decfsz	wreg,f,c
  3302   0013DA  D7FE               	bra	u5017
  3303   0013DC  2E3C               	decfsz	??_returnHome^0,f,c
  3304   0013DE  D7FC               	bra	u5017
  3305   0013E0  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3306   0013E2  D7FA               	bra	u5017
  3307   0013E4  0000               	nop	
  3308   0013E6                     
  3309                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3310   0013E6  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3311   0013EA  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3312   0013EE  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3313   0013F2  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3314   0013F6  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3315   0013FA  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3316   0013FE  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3317   001402  ECAA  F01C         	call	_turnRight	;wreg free
  3318                           
  3319                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3320   001406  0E05               	movlw	5
  3321   001408  6E3D               	movwf	(??_returnHome+1)^0,c
  3322   00140A  0E0F               	movlw	15
  3323   00140C  6E3C               	movwf	??_returnHome^0,c
  3324   00140E  0EF1               	movlw	241
  3325   001410                     u5027:
  3326   001410  2EE8               	decfsz	wreg,f,c
  3327   001412  D7FE               	bra	u5027
  3328   001414  2E3C               	decfsz	??_returnHome^0,f,c
  3329   001416  D7FC               	bra	u5027
  3330   001418  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3331   00141A  D7FA               	bra	u5027
  3332   00141C  0000               	nop	
  3333   00141E                     
  3334                           ;dc_motor.c: 247:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3335   00141E  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3336   001422  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3337   001426  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3338   00142A  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3339   00142E  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3340   001432  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3341   001436  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3342   00143A  ECAA  F01C         	call	_turnRight	;wreg free
  3343   00143E  EFAF  F008         	goto	l4582
  3344   001442                     l575:
  3345   001442                     l569:
  3346                           
  3347                           ;dc_motor.c: 251:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3348   001442  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  3349   001446  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  3350   00144A  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  3351   00144E  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  3352   001452  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3353   001456  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  3354   00145A  EC3E  F020         	call	_fullSpeedAhead	;wreg free
  3355   00145E                     
  3356                           ;dc_motor.c: 252:         resetTimer();
  3357   00145E  EC7F  F024         	call	_resetTimer	;wreg free
  3358   001462                     l4634:
  3359   001462  5040               	movf	returnHome@i^0,w,c
  3360   001464  0D02               	mullw	2
  3361   001466  CFF3 F03C          	movff	prodl,??_returnHome
  3362   00146A  CFF4 F03D          	movff	prodh,??_returnHome+1
  3363   00146E  503C               	movf	??_returnHome^0,w,c
  3364   001470  2433               	addwf	returnHome@straightTime^0,w,c
  3365   001472  6ED9               	movwf	fsr2l,c
  3366   001474  503D               	movf	(??_returnHome+1)^0,w,c
  3367   001476  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  3368   001478  6EDA               	movwf	fsr2h,c
  3369   00147A  EC88  F023         	call	_get16bitTMR0val	;wreg free
  3370   00147E  50DE               	movf	postinc2,w,c
  3371   001480  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  3372   001482  50DE               	movf	postinc2,w,c
  3373   001484  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  3374   001486  A0D8               	btfss	status,0,c
  3375   001488  EF48  F00A         	goto	u3741
  3376   00148C  EF4A  F00A         	goto	u3740
  3377   001490                     u3741:
  3378   001490  EF31  F00A         	goto	l4634
  3379   001494                     u3740:
  3380   001494                     
  3381                           ;dc_motor.c: 254:         stop(mL, mR, straightRamp);
  3382   001494  C02D  F01F         	movff	returnHome@mL,stop@mL
  3383   001498  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  3384   00149C  C02F  F021         	movff	returnHome@mR,stop@mR
  3385   0014A0  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  3386   0014A4  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  3387   0014A8  ECBA  F01F         	call	_stop	;wreg free
  3388   0014AC                     l4638:
  3389                           
  3390                           ;dc_motor.c: 187:     while (i>0) {
  3391   0014AC  5040               	movf	returnHome@i^0,w,c
  3392   0014AE  A4D8               	btfss	status,2,c
  3393   0014B0  EF5C  F00A         	goto	u3751
  3394   0014B4  EF5E  F00A         	goto	u3750
  3395   0014B8                     u3751:
  3396   0014B8  EFAA  F007         	goto	l4552
  3397   0014BC                     u3750:
  3398   0014BC  0012               	return		;funcret
  3399   0014BE                     __end_of_returnHome:
  3400                           	callstack 0
  3401                           
  3402 ;; *************** function _lostReturnHome *****************
  3403 ;; Defined at:
  3404 ;;		line 259 in file "dc_motor.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  3407 ;;		 -> main@motorL(10), 
  3408 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  3409 ;;		 -> main@motorR(10), 
  3410 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  3411 ;;		 -> main@moveSequence(40), 
  3412 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  3413 ;;		 -> main@straightTime(82), 
  3414 ;;  curMove         1   52[COMRAM] unsigned char 
  3415 ;;  straightSpee    1   53[COMRAM] unsigned char 
  3416 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  3417 ;;  straightRamp    1   55[COMRAM] unsigned char 
  3418 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  3419 ;;  turnDuration    1   57[COMRAM] unsigned char 
  3420 ;;  turnRamp        1   58[COMRAM] unsigned char 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  i               1   63[COMRAM] unsigned char 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3432 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3434 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3435 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3436 ;;Total ram usage:       20 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 8
  3439 ;; This function calls:
  3440 ;;		_fullSpeedAhead
  3441 ;;		_get16bitTMR0val
  3442 ;;		_resetTimer
  3443 ;;		_reverseOneSquare
  3444 ;;		_stop
  3445 ;;		_turnLeft
  3446 ;;		_turnRight
  3447 ;; This function is called by:
  3448 ;;		_main
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text3
  3453   0014BE                     __ptext3:
  3454                           	callstack 0
  3455   0014BE                     _lostReturnHome:
  3456                           	callstack 22
  3457   0014BE                     
  3458                           ;dc_motor.c: 259: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 260: {;dc_motor.c: 261:     turnLeft(mL, mR, turnSpeed, 
      +                          turnDuration, turnRamp);
  3459   0014BE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3460   0014C2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3461   0014C6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3462   0014CA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3463   0014CE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3464   0014D2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3465   0014D6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3466   0014DA  EC94  F01D         	call	_turnLeft	;wreg free
  3467   0014DE                     
  3468                           ;dc_motor.c: 262:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3469   0014DE  0E05               	movlw	5
  3470   0014E0  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3471   0014E2  0E0F               	movlw	15
  3472   0014E4  6E3C               	movwf	??_lostReturnHome^0,c
  3473   0014E6  0EF1               	movlw	241
  3474   0014E8                     u5037:
  3475   0014E8  2EE8               	decfsz	wreg,f,c
  3476   0014EA  D7FE               	bra	u5037
  3477   0014EC  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3478   0014EE  D7FC               	bra	u5037
  3479   0014F0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3480   0014F2  D7FA               	bra	u5037
  3481   0014F4  0000               	nop	
  3482   0014F6                     
  3483                           ;dc_motor.c: 263:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3484   0014F6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3485   0014FA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3486   0014FE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3487   001502  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3488   001506  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3489   00150A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3490   00150E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3491   001512  EC94  F01D         	call	_turnLeft	;wreg free
  3492                           
  3493                           ;dc_motor.c: 264:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3494   001516  0E05               	movlw	5
  3495   001518  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3496   00151A  0E0F               	movlw	15
  3497   00151C  6E3C               	movwf	??_lostReturnHome^0,c
  3498   00151E  0EF1               	movlw	241
  3499   001520                     u5047:
  3500   001520  2EE8               	decfsz	wreg,f,c
  3501   001522  D7FE               	bra	u5047
  3502   001524  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3503   001526  D7FC               	bra	u5047
  3504   001528  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3505   00152A  D7FA               	bra	u5047
  3506   00152C  0000               	nop	
  3507   00152E                     
  3508                           ;dc_motor.c: 265:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3509   00152E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3510   001532  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3511   001536  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3512   00153A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3513   00153E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3514   001542  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3515   001546  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3516   00154A  EC94  F01D         	call	_turnLeft	;wreg free
  3517   00154E                     
  3518                           ;dc_motor.c: 266:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3519   00154E  0E05               	movlw	5
  3520   001550  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3521   001552  0E0F               	movlw	15
  3522   001554  6E3C               	movwf	??_lostReturnHome^0,c
  3523   001556  0EF1               	movlw	241
  3524   001558                     u5057:
  3525   001558  2EE8               	decfsz	wreg,f,c
  3526   00155A  D7FE               	bra	u5057
  3527   00155C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3528   00155E  D7FC               	bra	u5057
  3529   001560  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3530   001562  D7FA               	bra	u5057
  3531   001564  0000               	nop	
  3532                           
  3533                           ;dc_motor.c: 267:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3534   001566  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3535   00156A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3536   00156E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3537   001572  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3538   001576  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3539   00157A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3540   00157E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3541   001582  EC94  F01D         	call	_turnLeft	;wreg free
  3542   001586                     
  3543                           ;dc_motor.c: 268:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3544   001586  0E05               	movlw	5
  3545   001588  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3546   00158A  0E0F               	movlw	15
  3547   00158C  6E3C               	movwf	??_lostReturnHome^0,c
  3548   00158E  0EF1               	movlw	241
  3549   001590                     u5067:
  3550   001590  2EE8               	decfsz	wreg,f,c
  3551   001592  D7FE               	bra	u5067
  3552   001594  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3553   001596  D7FC               	bra	u5067
  3554   001598  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3555   00159A  D7FA               	bra	u5067
  3556   00159C  0000               	nop	
  3557   00159E                     
  3558                           ;dc_motor.c: 269:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3559   00159E  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  3560   0015A2  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  3561   0015A6  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  3562   0015AA  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  3563   0015AE  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3564   0015B2  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  3565   0015B6  EC3E  F020         	call	_fullSpeedAhead	;wreg free
  3566   0015BA                     
  3567                           ;dc_motor.c: 270:     resetTimer();
  3568   0015BA  EC7F  F024         	call	_resetTimer	;wreg free
  3569   0015BE                     
  3570                           ;dc_motor.c: 271:     lost = 0;
  3571   0015BE  0E00               	movlw	0
  3572   0015C0  6E47               	movwf	_lost^0,c
  3573   0015C2                     l5072:
  3574   0015C2  5047               	movf	_lost^0,w,c
  3575   0015C4  B4D8               	btfsc	status,2,c
  3576   0015C6  EFE7  F00A         	goto	u4301
  3577   0015CA  EFE9  F00A         	goto	u4300
  3578   0015CE                     u4301:
  3579   0015CE  EFE1  F00A         	goto	l5072
  3580   0015D2                     u4300:
  3581   0015D2                     
  3582                           ;dc_motor.c: 273:     stop(mL, mR, straightRamp);
  3583   0015D2  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  3584   0015D6  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  3585   0015DA  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  3586   0015DE  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  3587   0015E2  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  3588   0015E6  ECBA  F01F         	call	_stop	;wreg free
  3589   0015EA                     
  3590                           ;dc_motor.c: 275:     char i=curMove;
  3591   0015EA  C035  F040         	movff	lostReturnHome@curMove,lostReturnHome@i
  3592                           
  3593                           ;dc_motor.c: 276:     while (i>0) {
  3594   0015EE  EFA5  F00D         	goto	l5164
  3595   0015F2                     l5078:
  3596                           
  3597                           ;dc_motor.c: 277:         i--;
  3598   0015F2  0640               	decf	lostReturnHome@i^0,f,c
  3599   0015F4                     
  3600                           ;dc_motor.c: 279:         if (moveSequence[i] == 1) {
  3601   0015F4  5040               	movf	lostReturnHome@i^0,w,c
  3602   0015F6  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3603   0015F8  6ED9               	movwf	fsr2l,c
  3604   0015FA  0E00               	movlw	0
  3605   0015FC  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3606   0015FE  6EDA               	movwf	fsr2h,c
  3607   001600  04DE               	decf	postinc2,w,c
  3608   001602  A4D8               	btfss	status,2,c
  3609   001604  EF06  F00B         	goto	u4311
  3610   001608  EF08  F00B         	goto	u4310
  3611   00160C                     u4311:
  3612   00160C  EF42  F00B         	goto	l5088
  3613   001610                     u4310:
  3614   001610                     
  3615                           ;dc_motor.c: 280:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3616   001610  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3617   001614  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3618   001618  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3619   00161C  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3620   001620  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3621   001624  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3622   001628  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3623   00162C  EC94  F01D         	call	_turnLeft	;wreg free
  3624   001630                     
  3625                           ;dc_motor.c: 281:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3626   001630  0E05               	movlw	5
  3627   001632  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3628   001634  0E0F               	movlw	15
  3629   001636  6E3C               	movwf	??_lostReturnHome^0,c
  3630   001638  0EF1               	movlw	241
  3631   00163A                     u5077:
  3632   00163A  2EE8               	decfsz	wreg,f,c
  3633   00163C  D7FE               	bra	u5077
  3634   00163E  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3635   001640  D7FC               	bra	u5077
  3636   001642  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3637   001644  D7FA               	bra	u5077
  3638   001646  0000               	nop	
  3639   001648                     
  3640                           ;dc_motor.c: 282:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3641   001648  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3642   00164C  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3643   001650  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3644   001654  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3645   001658  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3646   00165C  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3647   001660  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3648   001664  EC94  F01D         	call	_turnLeft	;wreg free
  3649                           
  3650                           ;dc_motor.c: 283:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3651   001668  0E05               	movlw	5
  3652   00166A  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3653   00166C  0E0F               	movlw	15
  3654   00166E  6E3C               	movwf	??_lostReturnHome^0,c
  3655   001670  0EF1               	movlw	241
  3656   001672                     u5087:
  3657   001672  2EE8               	decfsz	wreg,f,c
  3658   001674  D7FE               	bra	u5087
  3659   001676  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3660   001678  D7FC               	bra	u5087
  3661   00167A  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3662   00167C  D7FA               	bra	u5087
  3663   00167E  0000               	nop	
  3664                           
  3665                           ;dc_motor.c: 284:         }
  3666   001680  EF70  F00D         	goto	l594
  3667   001684                     l5088:
  3668   001684  5040               	movf	lostReturnHome@i^0,w,c
  3669   001686  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3670   001688  6ED9               	movwf	fsr2l,c
  3671   00168A  0E00               	movlw	0
  3672   00168C  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3673   00168E  6EDA               	movwf	fsr2h,c
  3674   001690  0E02               	movlw	2
  3675   001692  18DE               	xorwf	postinc2,w,c
  3676   001694  A4D8               	btfss	status,2,c
  3677   001696  EF4F  F00B         	goto	u4321
  3678   00169A  EF51  F00B         	goto	u4320
  3679   00169E                     u4321:
  3680   00169E  EF8B  F00B         	goto	l5096
  3681   0016A2                     u4320:
  3682   0016A2                     
  3683                           ;dc_motor.c: 287:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3684   0016A2  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3685   0016A6  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3686   0016AA  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3687   0016AE  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3688   0016B2  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3689   0016B6  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3690   0016BA  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3691   0016BE  ECAA  F01C         	call	_turnRight	;wreg free
  3692   0016C2                     
  3693                           ;dc_motor.c: 288:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3694   0016C2  0E05               	movlw	5
  3695   0016C4  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3696   0016C6  0E0F               	movlw	15
  3697   0016C8  6E3C               	movwf	??_lostReturnHome^0,c
  3698   0016CA  0EF1               	movlw	241
  3699   0016CC                     u5097:
  3700   0016CC  2EE8               	decfsz	wreg,f,c
  3701   0016CE  D7FE               	bra	u5097
  3702   0016D0  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3703   0016D2  D7FC               	bra	u5097
  3704   0016D4  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3705   0016D6  D7FA               	bra	u5097
  3706   0016D8  0000               	nop	
  3707   0016DA                     
  3708                           ;dc_motor.c: 289:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3709   0016DA  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3710   0016DE  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3711   0016E2  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3712   0016E6  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3713   0016EA  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3714   0016EE  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3715   0016F2  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3716   0016F6  ECAA  F01C         	call	_turnRight	;wreg free
  3717                           
  3718                           ;dc_motor.c: 290:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3719   0016FA  0E05               	movlw	5
  3720   0016FC  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3721   0016FE  0E0F               	movlw	15
  3722   001700  6E3C               	movwf	??_lostReturnHome^0,c
  3723   001702  0EF1               	movlw	241
  3724   001704                     u5107:
  3725   001704  2EE8               	decfsz	wreg,f,c
  3726   001706  D7FE               	bra	u5107
  3727   001708  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3728   00170A  D7FC               	bra	u5107
  3729   00170C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3730   00170E  D7FA               	bra	u5107
  3731   001710  0000               	nop	
  3732                           
  3733                           ;dc_motor.c: 291:         }
  3734   001712  EF70  F00D         	goto	l594
  3735   001716                     l5096:
  3736   001716  5040               	movf	lostReturnHome@i^0,w,c
  3737   001718  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3738   00171A  6ED9               	movwf	fsr2l,c
  3739   00171C  0E00               	movlw	0
  3740   00171E  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3741   001720  6EDA               	movwf	fsr2h,c
  3742   001722  0E03               	movlw	3
  3743   001724  18DE               	xorwf	postinc2,w,c
  3744   001726  A4D8               	btfss	status,2,c
  3745   001728  EF98  F00B         	goto	u4331
  3746   00172C  EF9A  F00B         	goto	u4330
  3747   001730                     u4331:
  3748   001730  EF0C  F00C         	goto	l5110
  3749   001734                     u4330:
  3750   001734                     
  3751                           ;dc_motor.c: 294:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3752   001734  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3753   001738  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3754   00173C  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3755   001740  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3756   001744  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3757   001748  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3758   00174C  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3759   001750  EC94  F01D         	call	_turnLeft	;wreg free
  3760   001754                     
  3761                           ;dc_motor.c: 295:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3762   001754  0E05               	movlw	5
  3763   001756  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3764   001758  0E0F               	movlw	15
  3765   00175A  6E3C               	movwf	??_lostReturnHome^0,c
  3766   00175C  0EF1               	movlw	241
  3767   00175E                     u5117:
  3768   00175E  2EE8               	decfsz	wreg,f,c
  3769   001760  D7FE               	bra	u5117
  3770   001762  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3771   001764  D7FC               	bra	u5117
  3772   001766  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3773   001768  D7FA               	bra	u5117
  3774   00176A  0000               	nop	
  3775   00176C                     
  3776                           ;dc_motor.c: 296:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3777   00176C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3778   001770  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3779   001774  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3780   001778  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3781   00177C  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3782   001780  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3783   001784  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3784   001788  EC94  F01D         	call	_turnLeft	;wreg free
  3785                           
  3786                           ;dc_motor.c: 297:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3787   00178C  0E05               	movlw	5
  3788   00178E  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3789   001790  0E0F               	movlw	15
  3790   001792  6E3C               	movwf	??_lostReturnHome^0,c
  3791   001794  0EF1               	movlw	241
  3792   001796                     u5127:
  3793   001796  2EE8               	decfsz	wreg,f,c
  3794   001798  D7FE               	bra	u5127
  3795   00179A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3796   00179C  D7FC               	bra	u5127
  3797   00179E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3798   0017A0  D7FA               	bra	u5127
  3799   0017A2  0000               	nop	
  3800   0017A4                     
  3801                           ;dc_motor.c: 298:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3802   0017A4  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3803   0017A8  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3804   0017AC  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3805   0017B0  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3806   0017B4  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3807   0017B8  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3808   0017BC  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3809   0017C0  EC94  F01D         	call	_turnLeft	;wreg free
  3810   0017C4                     
  3811                           ;dc_motor.c: 299:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3812   0017C4  0E05               	movlw	5
  3813   0017C6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3814   0017C8  0E0F               	movlw	15
  3815   0017CA  6E3C               	movwf	??_lostReturnHome^0,c
  3816   0017CC  0EF1               	movlw	241
  3817   0017CE                     u5137:
  3818   0017CE  2EE8               	decfsz	wreg,f,c
  3819   0017D0  D7FE               	bra	u5137
  3820   0017D2  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3821   0017D4  D7FC               	bra	u5137
  3822   0017D6  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3823   0017D8  D7FA               	bra	u5137
  3824   0017DA  0000               	nop	
  3825                           
  3826                           ;dc_motor.c: 300:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3827   0017DC  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3828   0017E0  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3829   0017E4  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3830   0017E8  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3831   0017EC  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3832   0017F0  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3833   0017F4  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3834   0017F8  EC94  F01D         	call	_turnLeft	;wreg free
  3835   0017FC                     l5108:
  3836                           
  3837                           ;dc_motor.c: 301:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3838   0017FC  0E05               	movlw	5
  3839   0017FE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3840   001800  0E0F               	movlw	15
  3841   001802  6E3C               	movwf	??_lostReturnHome^0,c
  3842   001804  0EF1               	movlw	241
  3843   001806                     u5147:
  3844   001806  2EE8               	decfsz	wreg,f,c
  3845   001808  D7FE               	bra	u5147
  3846   00180A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3847   00180C  D7FC               	bra	u5147
  3848   00180E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3849   001810  D7FA               	bra	u5147
  3850   001812  0000               	nop	
  3851                           
  3852                           ;dc_motor.c: 302:         }
  3853   001814  EF70  F00D         	goto	l594
  3854   001818                     l5110:
  3855   001818  5040               	movf	lostReturnHome@i^0,w,c
  3856   00181A  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3857   00181C  6ED9               	movwf	fsr2l,c
  3858   00181E  0E00               	movlw	0
  3859   001820  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3860   001822  6EDA               	movwf	fsr2h,c
  3861   001824  0E04               	movlw	4
  3862   001826  18DE               	xorwf	postinc2,w,c
  3863   001828  A4D8               	btfss	status,2,c
  3864   00182A  EF19  F00C         	goto	u4341
  3865   00182E  EF1B  F00C         	goto	u4340
  3866   001832                     u4341:
  3867   001832  EF65  F00C         	goto	l5122
  3868   001836                     u4340:
  3869   001836                     
  3870                           ;dc_motor.c: 305:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3871   001836  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3872   00183A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3873   00183E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3874   001842  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3875   001846  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3876   00184A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3877   00184E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3878   001852  EC94  F01D         	call	_turnLeft	;wreg free
  3879   001856                     
  3880                           ;dc_motor.c: 306:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3881   001856  0E05               	movlw	5
  3882   001858  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3883   00185A  0E0F               	movlw	15
  3884   00185C  6E3C               	movwf	??_lostReturnHome^0,c
  3885   00185E  0EF1               	movlw	241
  3886   001860                     u5157:
  3887   001860  2EE8               	decfsz	wreg,f,c
  3888   001862  D7FE               	bra	u5157
  3889   001864  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3890   001866  D7FC               	bra	u5157
  3891   001868  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3892   00186A  D7FA               	bra	u5157
  3893   00186C  0000               	nop	
  3894   00186E                     
  3895                           ;dc_motor.c: 307:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3896   00186E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3897   001872  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3898   001876  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3899   00187A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3900   00187E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3901   001882  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3902   001886  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3903   00188A  EC94  F01D         	call	_turnLeft	;wreg free
  3904                           
  3905                           ;dc_motor.c: 308:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3906   00188E  0E05               	movlw	5
  3907   001890  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3908   001892  0E0F               	movlw	15
  3909   001894  6E3C               	movwf	??_lostReturnHome^0,c
  3910   001896  0EF1               	movlw	241
  3911   001898                     u5167:
  3912   001898  2EE8               	decfsz	wreg,f,c
  3913   00189A  D7FE               	bra	u5167
  3914   00189C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3915   00189E  D7FC               	bra	u5167
  3916   0018A0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3917   0018A2  D7FA               	bra	u5167
  3918   0018A4  0000               	nop	
  3919   0018A6                     
  3920                           ;dc_motor.c: 309:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3921   0018A6  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3922   0018AA  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3923   0018AE  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3924   0018B2  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3925   0018B6  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3926   0018BA  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3927   0018BE  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3928   0018C2  ECB7  F01B         	call	_reverseOneSquare	;wreg free
  3929   0018C6  EFFE  F00B         	goto	l5108
  3930   0018CA                     l5122:
  3931   0018CA  5040               	movf	lostReturnHome@i^0,w,c
  3932   0018CC  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3933   0018CE  6ED9               	movwf	fsr2l,c
  3934   0018D0  0E00               	movlw	0
  3935   0018D2  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3936   0018D4  6EDA               	movwf	fsr2h,c
  3937   0018D6  0E05               	movlw	5
  3938   0018D8  18DE               	xorwf	postinc2,w,c
  3939   0018DA  A4D8               	btfss	status,2,c
  3940   0018DC  EF72  F00C         	goto	u4351
  3941   0018E0  EF74  F00C         	goto	u4350
  3942   0018E4                     u4351:
  3943   0018E4  EFBE  F00C         	goto	l5134
  3944   0018E8                     u4350:
  3945   0018E8                     
  3946                           ;dc_motor.c: 314:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3947   0018E8  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3948   0018EC  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3949   0018F0  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3950   0018F4  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3951   0018F8  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3952   0018FC  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3953   001900  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3954   001904  ECAA  F01C         	call	_turnRight	;wreg free
  3955   001908                     
  3956                           ;dc_motor.c: 315:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3957   001908  0E05               	movlw	5
  3958   00190A  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3959   00190C  0E0F               	movlw	15
  3960   00190E  6E3C               	movwf	??_lostReturnHome^0,c
  3961   001910  0EF1               	movlw	241
  3962   001912                     u5177:
  3963   001912  2EE8               	decfsz	wreg,f,c
  3964   001914  D7FE               	bra	u5177
  3965   001916  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3966   001918  D7FC               	bra	u5177
  3967   00191A  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3968   00191C  D7FA               	bra	u5177
  3969   00191E  0000               	nop	
  3970   001920                     
  3971                           ;dc_motor.c: 316:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3972   001920  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3973   001924  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3974   001928  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3975   00192C  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3976   001930  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3977   001934  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3978   001938  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3979   00193C  ECAA  F01C         	call	_turnRight	;wreg free
  3980                           
  3981                           ;dc_motor.c: 317:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3982   001940  0E05               	movlw	5
  3983   001942  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3984   001944  0E0F               	movlw	15
  3985   001946  6E3C               	movwf	??_lostReturnHome^0,c
  3986   001948  0EF1               	movlw	241
  3987   00194A                     u5187:
  3988   00194A  2EE8               	decfsz	wreg,f,c
  3989   00194C  D7FE               	bra	u5187
  3990   00194E  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3991   001950  D7FC               	bra	u5187
  3992   001952  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3993   001954  D7FA               	bra	u5187
  3994   001956  0000               	nop	
  3995   001958                     
  3996                           ;dc_motor.c: 318:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3997   001958  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3998   00195C  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3999   001960  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  4000   001964  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  4001   001968  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  4002   00196C  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  4003   001970  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  4004   001974  ECB7  F01B         	call	_reverseOneSquare	;wreg free
  4005   001978  EFFE  F00B         	goto	l5108
  4006   00197C                     l5134:
  4007   00197C  5040               	movf	lostReturnHome@i^0,w,c
  4008   00197E  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4009   001980  6ED9               	movwf	fsr2l,c
  4010   001982  0E00               	movlw	0
  4011   001984  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4012   001986  6EDA               	movwf	fsr2h,c
  4013   001988  0E06               	movlw	6
  4014   00198A  18DE               	xorwf	postinc2,w,c
  4015   00198C  A4D8               	btfss	status,2,c
  4016   00198E  EFCB  F00C         	goto	u4361
  4017   001992  EFCD  F00C         	goto	u4360
  4018   001996                     u4361:
  4019   001996  EF17  F00D         	goto	l5146
  4020   00199A                     u4360:
  4021   00199A                     
  4022                           ;dc_motor.c: 323:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4023   00199A  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4024   00199E  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4025   0019A2  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4026   0019A6  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4027   0019AA  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4028   0019AE  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4029   0019B2  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4030   0019B6  EC94  F01D         	call	_turnLeft	;wreg free
  4031   0019BA                     
  4032                           ;dc_motor.c: 324:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4033   0019BA  0E05               	movlw	5
  4034   0019BC  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4035   0019BE  0E0F               	movlw	15
  4036   0019C0  6E3C               	movwf	??_lostReturnHome^0,c
  4037   0019C2  0EF1               	movlw	241
  4038   0019C4                     u5197:
  4039   0019C4  2EE8               	decfsz	wreg,f,c
  4040   0019C6  D7FE               	bra	u5197
  4041   0019C8  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4042   0019CA  D7FC               	bra	u5197
  4043   0019CC  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4044   0019CE  D7FA               	bra	u5197
  4045   0019D0  0000               	nop	
  4046   0019D2                     
  4047                           ;dc_motor.c: 325:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4048   0019D2  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4049   0019D6  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4050   0019DA  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4051   0019DE  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4052   0019E2  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4053   0019E6  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4054   0019EA  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4055   0019EE  EC94  F01D         	call	_turnLeft	;wreg free
  4056                           
  4057                           ;dc_motor.c: 326:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4058   0019F2  0E05               	movlw	5
  4059   0019F4  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4060   0019F6  0E0F               	movlw	15
  4061   0019F8  6E3C               	movwf	??_lostReturnHome^0,c
  4062   0019FA  0EF1               	movlw	241
  4063   0019FC                     u5207:
  4064   0019FC  2EE8               	decfsz	wreg,f,c
  4065   0019FE  D7FE               	bra	u5207
  4066   001A00  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4067   001A02  D7FC               	bra	u5207
  4068   001A04  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4069   001A06  D7FA               	bra	u5207
  4070   001A08  0000               	nop	
  4071   001A0A                     
  4072                           ;dc_motor.c: 327:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4073   001A0A  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  4074   001A0E  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4075   001A12  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  4076   001A16  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4077   001A1A  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4078   001A1E  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4079   001A22  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4080   001A26  EC94  F01D         	call	_turnLeft	;wreg free
  4081   001A2A  EFFE  F00B         	goto	l5108
  4082   001A2E                     l5146:
  4083   001A2E  5040               	movf	lostReturnHome@i^0,w,c
  4084   001A30  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  4085   001A32  6ED9               	movwf	fsr2l,c
  4086   001A34  0E00               	movlw	0
  4087   001A36  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4088   001A38  6EDA               	movwf	fsr2h,c
  4089   001A3A  0E07               	movlw	7
  4090   001A3C  18DE               	xorwf	postinc2,w,c
  4091   001A3E  A4D8               	btfss	status,2,c
  4092   001A40  EF24  F00D         	goto	u4371
  4093   001A44  EF26  F00D         	goto	u4370
  4094   001A48                     u4371:
  4095   001A48  EF70  F00D         	goto	l600
  4096   001A4C                     u4370:
  4097   001A4C                     
  4098                           ;dc_motor.c: 332:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4099   001A4C  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4100   001A50  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4101   001A54  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4102   001A58  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4103   001A5C  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4104   001A60  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4105   001A64  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4106   001A68  ECAA  F01C         	call	_turnRight	;wreg free
  4107   001A6C                     
  4108                           ;dc_motor.c: 333:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4109   001A6C  0E05               	movlw	5
  4110   001A6E  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4111   001A70  0E0F               	movlw	15
  4112   001A72  6E3C               	movwf	??_lostReturnHome^0,c
  4113   001A74  0EF1               	movlw	241
  4114   001A76                     u5217:
  4115   001A76  2EE8               	decfsz	wreg,f,c
  4116   001A78  D7FE               	bra	u5217
  4117   001A7A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4118   001A7C  D7FC               	bra	u5217
  4119   001A7E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4120   001A80  D7FA               	bra	u5217
  4121   001A82  0000               	nop	
  4122   001A84                     
  4123                           ;dc_motor.c: 334:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4124   001A84  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4125   001A88  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4126   001A8C  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4127   001A90  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4128   001A94  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4129   001A98  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4130   001A9C  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4131   001AA0  ECAA  F01C         	call	_turnRight	;wreg free
  4132                           
  4133                           ;dc_motor.c: 335:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4134   001AA4  0E05               	movlw	5
  4135   001AA6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  4136   001AA8  0E0F               	movlw	15
  4137   001AAA  6E3C               	movwf	??_lostReturnHome^0,c
  4138   001AAC  0EF1               	movlw	241
  4139   001AAE                     u5227:
  4140   001AAE  2EE8               	decfsz	wreg,f,c
  4141   001AB0  D7FE               	bra	u5227
  4142   001AB2  2E3C               	decfsz	??_lostReturnHome^0,f,c
  4143   001AB4  D7FC               	bra	u5227
  4144   001AB6  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  4145   001AB8  D7FA               	bra	u5227
  4146   001ABA  0000               	nop	
  4147   001ABC                     
  4148                           ;dc_motor.c: 336:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4149   001ABC  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  4150   001AC0  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  4151   001AC4  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  4152   001AC8  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4153   001ACC  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4154   001AD0  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4155   001AD4  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4156   001AD8  ECAA  F01C         	call	_turnRight	;wreg free
  4157   001ADC  EFFE  F00B         	goto	l5108
  4158   001AE0                     l600:
  4159   001AE0                     l594:
  4160                           
  4161                           ;dc_motor.c: 340:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4162   001AE0  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4163   001AE4  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4164   001AE8  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4165   001AEC  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4166   001AF0  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4167   001AF4  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4168   001AF8  EC3E  F020         	call	_fullSpeedAhead	;wreg free
  4169   001AFC                     
  4170                           ;dc_motor.c: 341:         resetTimer();
  4171   001AFC  EC7F  F024         	call	_resetTimer	;wreg free
  4172   001B00                     l5160:
  4173   001B00  5040               	movf	lostReturnHome@i^0,w,c
  4174   001B02  0D02               	mullw	2
  4175   001B04  CFF3 F03C          	movff	prodl,??_lostReturnHome
  4176   001B08  CFF4 F03D          	movff	prodh,??_lostReturnHome+1
  4177   001B0C  503C               	movf	??_lostReturnHome^0,w,c
  4178   001B0E  2433               	addwf	lostReturnHome@straightTime^0,w,c
  4179   001B10  6ED9               	movwf	fsr2l,c
  4180   001B12  503D               	movf	(??_lostReturnHome+1)^0,w,c
  4181   001B14  2034               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  4182   001B16  6EDA               	movwf	fsr2h,c
  4183   001B18  EC88  F023         	call	_get16bitTMR0val	;wreg free
  4184   001B1C  50DE               	movf	postinc2,w,c
  4185   001B1E  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  4186   001B20  50DE               	movf	postinc2,w,c
  4187   001B22  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4188   001B24  A0D8               	btfss	status,0,c
  4189   001B26  EF97  F00D         	goto	u4381
  4190   001B2A  EF99  F00D         	goto	u4380
  4191   001B2E                     u4381:
  4192   001B2E  EF80  F00D         	goto	l5160
  4193   001B32                     u4380:
  4194   001B32                     
  4195                           ;dc_motor.c: 343:         stop(mL, mR, straightRamp);
  4196   001B32  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  4197   001B36  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  4198   001B3A  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  4199   001B3E  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  4200   001B42  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4201   001B46  ECBA  F01F         	call	_stop	;wreg free
  4202   001B4A                     l5164:
  4203                           
  4204                           ;dc_motor.c: 276:     while (i>0) {
  4205   001B4A  5040               	movf	lostReturnHome@i^0,w,c
  4206   001B4C  A4D8               	btfss	status,2,c
  4207   001B4E  EFAB  F00D         	goto	u4391
  4208   001B52  EFAD  F00D         	goto	u4390
  4209   001B56                     u4391:
  4210   001B56  EFF9  F00A         	goto	l5078
  4211   001B5A                     u4390:
  4212   001B5A  0012               	return		;funcret
  4213   001B5C                     __end_of_lostReturnHome:
  4214                           	callstack 0
  4215                           
  4216 ;; *************** function _stop *****************
  4217 ;; Defined at:
  4218 ;;		line 348 in file "dc_motor.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4221 ;;		 -> main@motorL(10), 
  4222 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4223 ;;		 -> main@motorR(10), 
  4224 ;;  straightRamp    1   34[COMRAM] unsigned char 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  cur_power       2   40[COMRAM] int 
  4227 ;;  i               2   38[COMRAM] int 
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4237 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4238 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4239 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;Total ram usage:       12 bytes
  4242 ;; Hardware stack levels used: 1
  4243 ;; Hardware stack levels required when called: 7
  4244 ;; This function calls:
  4245 ;;		_setMotorPWM
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;;		_returnHome
  4249 ;;		_lostReturnHome
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text4
  4254   003F74                     __ptext4:
  4255                           	callstack 0
  4256   003F74                     _stop:
  4257                           	callstack 23
  4258   003F74                     
  4259                           ;dc_motor.c: 348: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 349: {;dc_motor.c: 350:     mL->direction = 1;
  4260   003F74  EE20 F001          	lfsr	2,1
  4261   003F78  501F               	movf	stop@mL^0,w,c
  4262   003F7A  26D9               	addwf	fsr2l,f,c
  4263   003F7C  5020               	movf	(stop@mL+1)^0,w,c
  4264   003F7E  22DA               	addwfc	fsr2h,f,c
  4265   003F80  0E01               	movlw	1
  4266   003F82  6EDF               	movwf	indf2,c
  4267                           
  4268                           ;dc_motor.c: 351:     mR->direction = 1;
  4269   003F84  EE20 F001          	lfsr	2,1
  4270   003F88  5021               	movf	stop@mR^0,w,c
  4271   003F8A  26D9               	addwf	fsr2l,f,c
  4272   003F8C  5022               	movf	(stop@mR+1)^0,w,c
  4273   003F8E  22DA               	addwfc	fsr2h,f,c
  4274   003F90  0E01               	movlw	1
  4275   003F92  6EDF               	movwf	indf2,c
  4276                           
  4277                           ;dc_motor.c: 352:     int i;;dc_motor.c: 353:     int cur_power;;dc_motor.c: 354:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  4278   003F94  C01F  FFD9         	movff	stop@mL,fsr2l
  4279   003F98  C020  FFDA         	movff	stop@mL+1,fsr2h
  4280   003F9C  50DF               	movf	indf2,w,c
  4281   003F9E  6E24               	movwf	??_stop^0,c
  4282   003FA0  EE20 F009          	lfsr	2,9
  4283   003FA4  501F               	movf	stop@mL^0,w,c
  4284   003FA6  26D9               	addwf	fsr2l,f,c
  4285   003FA8  5020               	movf	(stop@mL+1)^0,w,c
  4286   003FAA  22DA               	addwfc	fsr2h,f,c
  4287   003FAC  50DF               	movf	indf2,w,c
  4288   003FAE  6E25               	movwf	(??_stop+1)^0,c
  4289   003FB0  5025               	movf	(??_stop+1)^0,w,c
  4290   003FB2  5C24               	subwf	??_stop^0,w,c
  4291   003FB4  6E29               	movwf	stop@cur_power^0,c
  4292   003FB6  6A2A               	clrf	(stop@cur_power+1)^0,c
  4293   003FB8  A0D8               	btfss	status,0,c
  4294   003FBA  062A               	decf	(stop@cur_power+1)^0,f,c
  4295   003FBC                     l4162:
  4296   003FBC  BE2A               	btfsc	(stop@cur_power+1)^0,7,c
  4297   003FBE  EFE5  F01F         	goto	u3250
  4298   003FC2  EFE3  F01F         	goto	u3251
  4299   003FC6                     u3251:
  4300   003FC6  EFE7  F01F         	goto	l4166
  4301   003FCA                     u3250:
  4302   003FCA  EF33  F020         	goto	l4182
  4303   003FCE                     l4166:
  4304                           
  4305                           ;dc_motor.c: 355:         mL->power = cur_power+mL->compensation;
  4306   003FCE  EE20 F009          	lfsr	2,9
  4307   003FD2  501F               	movf	stop@mL^0,w,c
  4308   003FD4  26D9               	addwf	fsr2l,f,c
  4309   003FD6  5020               	movf	(stop@mL+1)^0,w,c
  4310   003FD8  22DA               	addwfc	fsr2h,f,c
  4311   003FDA  50DF               	movf	indf2,w,c
  4312   003FDC  2429               	addwf	stop@cur_power^0,w,c
  4313   003FDE  C01F  FFD9         	movff	stop@mL,fsr2l
  4314   003FE2  C020  FFDA         	movff	stop@mL+1,fsr2h
  4315   003FE6  6EDF               	movwf	indf2,c
  4316                           
  4317                           ;dc_motor.c: 356:         mR->power = cur_power+mR->compensation;
  4318   003FE8  EE20 F009          	lfsr	2,9
  4319   003FEC  5021               	movf	stop@mR^0,w,c
  4320   003FEE  26D9               	addwf	fsr2l,f,c
  4321   003FF0  5022               	movf	(stop@mR+1)^0,w,c
  4322   003FF2  22DA               	addwfc	fsr2h,f,c
  4323   003FF4  50DF               	movf	indf2,w,c
  4324   003FF6  2429               	addwf	stop@cur_power^0,w,c
  4325   003FF8  C021  FFD9         	movff	stop@mR,fsr2l
  4326   003FFC  C022  FFDA         	movff	stop@mR+1,fsr2h
  4327   004000  6EDF               	movwf	indf2,c
  4328   004002                     
  4329                           ;dc_motor.c: 357:         setMotorPWM(mL);
  4330   004002  C01F  F019         	movff	stop@mL,setMotorPWM@m
  4331   004006  C020  F01A         	movff	stop@mL+1,setMotorPWM@m+1
  4332   00400A  EC7E  F01E         	call	_setMotorPWM	;wreg free
  4333   00400E                     
  4334                           ;dc_motor.c: 358:         setMotorPWM(mR);
  4335   00400E  C021  F019         	movff	stop@mR,setMotorPWM@m
  4336   004012  C022  F01A         	movff	stop@mR+1,setMotorPWM@m+1
  4337   004016  EC7E  F01E         	call	_setMotorPWM	;wreg free
  4338   00401A                     
  4339                           ;dc_motor.c: 359:         for (i=0;i<straightRamp;i++) {
  4340   00401A  0E00               	movlw	0
  4341   00401C  6E28               	movwf	(stop@i+1)^0,c
  4342   00401E  0E00               	movlw	0
  4343   004020  6E27               	movwf	stop@i^0,c
  4344   004022  EF1C  F020         	goto	l615
  4345   004026                     l4174:
  4346                           
  4347                           ;dc_motor.c: 360:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4348   004026  0ED0               	movlw	208
  4349   004028  6E24               	movwf	??_stop^0,c
  4350   00402A  0ECA               	movlw	202
  4351   00402C                     u5237:
  4352   00402C  2EE8               	decfsz	wreg,f,c
  4353   00402E  D7FE               	bra	u5237
  4354   004030  2E24               	decfsz	??_stop^0,f,c
  4355   004032  D7FC               	bra	u5237
  4356   004034                     
  4357                           ;dc_motor.c: 361:         }
  4358   004034  4A27               	infsnz	stop@i^0,f,c
  4359   004036  2A28               	incf	(stop@i+1)^0,f,c
  4360   004038                     l615:
  4361   004038  5023               	movf	stop@straightRamp^0,w,c
  4362   00403A  6E24               	movwf	??_stop^0,c
  4363   00403C  6A25               	clrf	(??_stop+1)^0,c
  4364   00403E  5024               	movf	??_stop^0,w,c
  4365   004040  5C27               	subwf	stop@i^0,w,c
  4366   004042  5028               	movf	(stop@i+1)^0,w,c
  4367   004044  0A80               	xorlw	128
  4368   004046  6E26               	movwf	(??_stop+2)^0,c
  4369   004048  5025               	movf	(??_stop+1)^0,w,c
  4370   00404A  0A80               	xorlw	128
  4371   00404C  5826               	subwfb	(??_stop+2)^0,w,c
  4372   00404E  A0D8               	btfss	status,0,c
  4373   004050  EF2C  F020         	goto	u3261
  4374   004054  EF2E  F020         	goto	u3260
  4375   004058                     u3261:
  4376   004058  EF13  F020         	goto	l4174
  4377   00405C                     u3260:
  4378   00405C                     
  4379                           ;dc_motor.c: 362:     }
  4380   00405C  0629               	decf	stop@cur_power^0,f,c
  4381   00405E  A0D8               	btfss	status,0,c
  4382   004060  062A               	decf	(stop@cur_power+1)^0,f,c
  4383   004062  EFDE  F01F         	goto	l4162
  4384   004066                     l4182:
  4385                           
  4386                           ;dc_motor.c: 363:     mL->power = 0;
  4387   004066  C01F  FFD9         	movff	stop@mL,fsr2l
  4388   00406A  C020  FFDA         	movff	stop@mL+1,fsr2h
  4389   00406E  6ADF               	clrf	indf2,c
  4390                           
  4391                           ;dc_motor.c: 364:     mR->power = 0;
  4392   004070  C021  FFD9         	movff	stop@mR,fsr2l
  4393   004074  C022  FFDA         	movff	stop@mR+1,fsr2h
  4394   004078  6ADF               	clrf	indf2,c
  4395   00407A  0012               	return		;funcret
  4396   00407C                     __end_of_stop:
  4397                           	callstack 0
  4398                           
  4399 ;; *************** function _reverseOneSquare *****************
  4400 ;; Defined at:
  4401 ;;		line 449 in file "dc_motor.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4404 ;;		 -> main@motorL(10), 
  4405 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4406 ;;		 -> main@motorR(10), 
  4407 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4408 ;;  reverseDurat    1   35[COMRAM] unsigned char 
  4409 ;;  straightRamp    1   36[COMRAM] unsigned char 
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;  cur_power       2   42[COMRAM] int 
  4412 ;;  i               2   40[COMRAM] int 
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4422 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4424 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;Total ram usage:       14 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; Hardware stack levels required when called: 7
  4429 ;; This function calls:
  4430 ;;		_setMotorPWM
  4431 ;; This function is called by:
  4432 ;;		_move
  4433 ;;		_returnHome
  4434 ;;		_lostReturnHome
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text5
  4439   00376E                     __ptext5:
  4440                           	callstack 0
  4441   00376E                     _reverseOneSquare:
  4442                           	callstack 22
  4443   00376E                     
  4444                           ;dc_motor.c: 449: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned char reverseDuration, unsigned char straightRamp);dc_motor.c: 450: {;dc_motor.c
      +                          : 451:     mL->direction = 0;
  4445   00376E  EE20 F001          	lfsr	2,1
  4446   003772  501F               	movf	reverseOneSquare@mL^0,w,c
  4447   003774  26D9               	addwf	fsr2l,f,c
  4448   003776  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4449   003778  22DA               	addwfc	fsr2h,f,c
  4450   00377A  6ADF               	clrf	indf2,c
  4451                           
  4452                           ;dc_motor.c: 452:     mR->direction = 0;
  4453   00377C  EE20 F001          	lfsr	2,1
  4454   003780  5021               	movf	reverseOneSquare@mR^0,w,c
  4455   003782  26D9               	addwf	fsr2l,f,c
  4456   003784  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4457   003786  22DA               	addwfc	fsr2h,f,c
  4458   003788  6ADF               	clrf	indf2,c
  4459   00378A                     
  4460                           ;dc_motor.c: 453:     int i;;dc_motor.c: 454:     int cur_power;;dc_motor.c: 455:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4461   00378A  0E00               	movlw	0
  4462   00378C  6E2C               	movwf	(reverseOneSquare@cur_power+1)^0,c
  4463   00378E  0E01               	movlw	1
  4464   003790  6E2B               	movwf	reverseOneSquare@cur_power^0,c
  4465   003792  EF14  F01C         	goto	l4326
  4466   003796                     l4312:
  4467                           
  4468                           ;dc_motor.c: 456:         mL->power = cur_power+mL->compensation;
  4469   003796  EE20 F009          	lfsr	2,9
  4470   00379A  501F               	movf	reverseOneSquare@mL^0,w,c
  4471   00379C  26D9               	addwf	fsr2l,f,c
  4472   00379E  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4473   0037A0  22DA               	addwfc	fsr2h,f,c
  4474   0037A2  50DF               	movf	indf2,w,c
  4475   0037A4  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4476   0037A6  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4477   0037AA  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4478   0037AE  6EDF               	movwf	indf2,c
  4479                           
  4480                           ;dc_motor.c: 457:         mR->power = cur_power+mR->compensation;
  4481   0037B0  EE20 F009          	lfsr	2,9
  4482   0037B4  5021               	movf	reverseOneSquare@mR^0,w,c
  4483   0037B6  26D9               	addwf	fsr2l,f,c
  4484   0037B8  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4485   0037BA  22DA               	addwfc	fsr2h,f,c
  4486   0037BC  50DF               	movf	indf2,w,c
  4487   0037BE  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4488   0037C0  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4489   0037C4  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4490   0037C8  6EDF               	movwf	indf2,c
  4491   0037CA                     
  4492                           ;dc_motor.c: 458:         setMotorPWM(mL);
  4493   0037CA  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4494   0037CE  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4495   0037D2  EC7E  F01E         	call	_setMotorPWM	;wreg free
  4496   0037D6                     
  4497                           ;dc_motor.c: 459:         setMotorPWM(mR);
  4498   0037D6  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4499   0037DA  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4500   0037DE  EC7E  F01E         	call	_setMotorPWM	;wreg free
  4501   0037E2                     
  4502                           ;dc_motor.c: 460:         for (i=0;i<straightRamp;i++) {
  4503   0037E2  0E00               	movlw	0
  4504   0037E4  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4505   0037E6  0E00               	movlw	0
  4506   0037E8  6E29               	movwf	reverseOneSquare@i^0,c
  4507   0037EA  EF00  F01C         	goto	l666
  4508   0037EE                     l4320:
  4509                           
  4510                           ;dc_motor.c: 461:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4511   0037EE  0ED0               	movlw	208
  4512   0037F0  6E26               	movwf	??_reverseOneSquare^0,c
  4513   0037F2  0ECA               	movlw	202
  4514   0037F4                     u5247:
  4515   0037F4  2EE8               	decfsz	wreg,f,c
  4516   0037F6  D7FE               	bra	u5247
  4517   0037F8  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4518   0037FA  D7FC               	bra	u5247
  4519   0037FC                     
  4520                           ;dc_motor.c: 462:         }
  4521   0037FC  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4522   0037FE  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4523   003800                     l666:
  4524   003800  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4525   003802  6E26               	movwf	??_reverseOneSquare^0,c
  4526   003804  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4527   003806  5026               	movf	??_reverseOneSquare^0,w,c
  4528   003808  5C29               	subwf	reverseOneSquare@i^0,w,c
  4529   00380A  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4530   00380C  0A80               	xorlw	128
  4531   00380E  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4532   003810  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4533   003812  0A80               	xorlw	128
  4534   003814  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4535   003816  A0D8               	btfss	status,0,c
  4536   003818  EF10  F01C         	goto	u3411
  4537   00381C  EF12  F01C         	goto	u3410
  4538   003820                     u3411:
  4539   003820  EFF7  F01B         	goto	l4320
  4540   003824                     u3410:
  4541   003824                     
  4542                           ;dc_motor.c: 463:     }
  4543   003824  4A2B               	infsnz	reverseOneSquare@cur_power^0,f,c
  4544   003826  2A2C               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  4545   003828                     l4326:
  4546   003828  5023               	movf	reverseOneSquare@straightSpeed^0,w,c
  4547   00382A  6E26               	movwf	??_reverseOneSquare^0,c
  4548   00382C  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4549   00382E  502B               	movf	reverseOneSquare@cur_power^0,w,c
  4550   003830  5C26               	subwf	??_reverseOneSquare^0,w,c
  4551   003832  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4552   003834  0A80               	xorlw	128
  4553   003836  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4554   003838  502C               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  4555   00383A  0A80               	xorlw	128
  4556   00383C  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4557   00383E  B0D8               	btfsc	status,0,c
  4558   003840  EF24  F01C         	goto	u3421
  4559   003844  EF26  F01C         	goto	u3420
  4560   003848                     u3421:
  4561   003848  EFCB  F01B         	goto	l4312
  4562   00384C                     u3420:
  4563   00384C                     
  4564                           ;dc_motor.c: 465:     for (i=0;i<reverseDuration;i++) {
  4565   00384C  0E00               	movlw	0
  4566   00384E  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4567   003850  0E00               	movlw	0
  4568   003852  6E29               	movwf	reverseOneSquare@i^0,c
  4569   003854  EF35  F01C         	goto	l670
  4570   003858                     l4330:
  4571                           
  4572                           ;dc_motor.c: 466:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4573   003858  0ED0               	movlw	208
  4574   00385A  6E26               	movwf	??_reverseOneSquare^0,c
  4575   00385C  0ECA               	movlw	202
  4576   00385E                     u5257:
  4577   00385E  2EE8               	decfsz	wreg,f,c
  4578   003860  D7FE               	bra	u5257
  4579   003862  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4580   003864  D7FC               	bra	u5257
  4581   003866                     
  4582                           ;dc_motor.c: 467:         }
  4583   003866  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4584   003868  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4585   00386A                     l670:
  4586   00386A  5024               	movf	reverseOneSquare@reverseDuration^0,w,c
  4587   00386C  6E26               	movwf	??_reverseOneSquare^0,c
  4588   00386E  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4589   003870  5026               	movf	??_reverseOneSquare^0,w,c
  4590   003872  5C29               	subwf	reverseOneSquare@i^0,w,c
  4591   003874  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4592   003876  0A80               	xorlw	128
  4593   003878  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4594   00387A  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4595   00387C  0A80               	xorlw	128
  4596   00387E  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4597   003880  A0D8               	btfss	status,0,c
  4598   003882  EF45  F01C         	goto	u3431
  4599   003886  EF47  F01C         	goto	u3430
  4600   00388A                     u3431:
  4601   00388A  EF2C  F01C         	goto	l4330
  4602   00388E                     u3430:
  4603   00388E                     
  4604                           ;dc_motor.c: 469:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  4605   00388E  C023  F02B         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  4606   003892  6A2C               	clrf	(reverseOneSquare@cur_power+1)^0,c
  4607   003894                     l4334:
  4608   003894  BE2C               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  4609   003896  EF51  F01C         	goto	u3440
  4610   00389A  EF4F  F01C         	goto	u3441
  4611   00389E                     u3441:
  4612   00389E  EF53  F01C         	goto	l4338
  4613   0038A2                     u3440:
  4614   0038A2  EF9F  F01C         	goto	l4354
  4615   0038A6                     l4338:
  4616                           
  4617                           ;dc_motor.c: 470:         mL->power = cur_power+mL->compensation;
  4618   0038A6  EE20 F009          	lfsr	2,9
  4619   0038AA  501F               	movf	reverseOneSquare@mL^0,w,c
  4620   0038AC  26D9               	addwf	fsr2l,f,c
  4621   0038AE  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4622   0038B0  22DA               	addwfc	fsr2h,f,c
  4623   0038B2  50DF               	movf	indf2,w,c
  4624   0038B4  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4625   0038B6  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4626   0038BA  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4627   0038BE  6EDF               	movwf	indf2,c
  4628                           
  4629                           ;dc_motor.c: 471:         mR->power = cur_power+mR->compensation;
  4630   0038C0  EE20 F009          	lfsr	2,9
  4631   0038C4  5021               	movf	reverseOneSquare@mR^0,w,c
  4632   0038C6  26D9               	addwf	fsr2l,f,c
  4633   0038C8  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4634   0038CA  22DA               	addwfc	fsr2h,f,c
  4635   0038CC  50DF               	movf	indf2,w,c
  4636   0038CE  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4637   0038D0  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4638   0038D4  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4639   0038D8  6EDF               	movwf	indf2,c
  4640   0038DA                     
  4641                           ;dc_motor.c: 472:         setMotorPWM(mL);
  4642   0038DA  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4643   0038DE  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4644   0038E2  EC7E  F01E         	call	_setMotorPWM	;wreg free
  4645   0038E6                     
  4646                           ;dc_motor.c: 473:         setMotorPWM(mR);
  4647   0038E6  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4648   0038EA  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4649   0038EE  EC7E  F01E         	call	_setMotorPWM	;wreg free
  4650   0038F2                     
  4651                           ;dc_motor.c: 474:         for (i=0;i<straightRamp;i++) {
  4652   0038F2  0E00               	movlw	0
  4653   0038F4  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4654   0038F6  0E00               	movlw	0
  4655   0038F8  6E29               	movwf	reverseOneSquare@i^0,c
  4656   0038FA  EF88  F01C         	goto	l675
  4657   0038FE                     l4346:
  4658                           
  4659                           ;dc_motor.c: 475:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4660   0038FE  0ED0               	movlw	208
  4661   003900  6E26               	movwf	??_reverseOneSquare^0,c
  4662   003902  0ECA               	movlw	202
  4663   003904                     u5267:
  4664   003904  2EE8               	decfsz	wreg,f,c
  4665   003906  D7FE               	bra	u5267
  4666   003908  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4667   00390A  D7FC               	bra	u5267
  4668   00390C                     
  4669                           ;dc_motor.c: 476:         }
  4670   00390C  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4671   00390E  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4672   003910                     l675:
  4673   003910  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4674   003912  6E26               	movwf	??_reverseOneSquare^0,c
  4675   003914  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4676   003916  5026               	movf	??_reverseOneSquare^0,w,c
  4677   003918  5C29               	subwf	reverseOneSquare@i^0,w,c
  4678   00391A  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4679   00391C  0A80               	xorlw	128
  4680   00391E  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4681   003920  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4682   003922  0A80               	xorlw	128
  4683   003924  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4684   003926  A0D8               	btfss	status,0,c
  4685   003928  EF98  F01C         	goto	u3451
  4686   00392C  EF9A  F01C         	goto	u3450
  4687   003930                     u3451:
  4688   003930  EF7F  F01C         	goto	l4346
  4689   003934                     u3450:
  4690   003934                     
  4691                           ;dc_motor.c: 477:     }
  4692   003934  062B               	decf	reverseOneSquare@cur_power^0,f,c
  4693   003936  A0D8               	btfss	status,0,c
  4694   003938  062C               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  4695   00393A  EF4A  F01C         	goto	l4334
  4696   00393E                     l4354:
  4697                           
  4698                           ;dc_motor.c: 478:     mL->power = 0;
  4699   00393E  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4700   003942  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4701   003946  6ADF               	clrf	indf2,c
  4702                           
  4703                           ;dc_motor.c: 479:     mR->power = 0;
  4704   003948  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4705   00394C  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4706   003950  6ADF               	clrf	indf2,c
  4707   003952  0012               	return		;funcret
  4708   003954                     __end_of_reverseOneSquare:
  4709                           	callstack 0
  4710                           
  4711 ;; *************** function _resetTimer *****************
  4712 ;; Defined at:
  4713 ;;		line 23 in file "timers.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg, status,2
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4731 ;;Total ram usage:        0 bytes
  4732 ;; Hardware stack levels used: 1
  4733 ;; Hardware stack levels required when called: 5
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_main
  4738 ;;		_returnHome
  4739 ;;		_lostReturnHome
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text6
  4744   0048FE                     __ptext6:
  4745                           	callstack 0
  4746   0048FE                     _resetTimer:
  4747                           	callstack 25
  4748   0048FE                     
  4749                           ;timers.c: 25:     TMR0H=0;
  4750   0048FE  0E00               	movlw	0
  4751   004900  6ED4               	movwf	212,c	;volatile
  4752                           
  4753                           ;timers.c: 26:     TMR0L=0;
  4754   004902  0E00               	movlw	0
  4755   004904  6ED3               	movwf	211,c	;volatile
  4756   004906  0012               	return		;funcret
  4757   004908                     __end_of_resetTimer:
  4758                           	callstack 0
  4759                           
  4760 ;; *************** function _get16bitTMR0val *****************
  4761 ;; Defined at:
  4762 ;;		line 33 in file "timers.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  timer_val       2   19[COMRAM] unsigned int 
  4767 ;;  timer_high      2   17[COMRAM] unsigned int 
  4768 ;;  timer_low       2   15[COMRAM] unsigned int 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  2   11[COMRAM] unsigned int 
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4779 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4781 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4782 ;;Total ram usage:       10 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; Hardware stack levels required when called: 5
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_main
  4789 ;;		_returnHome
  4790 ;;		_lostReturnHome
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text7
  4795   004710                     __ptext7:
  4796                           	callstack 0
  4797   004710                     _get16bitTMR0val:
  4798                           	callstack 23
  4799   004710                     
  4800                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  4801   004710  CFD3 F010          	movff	4051,get16bitTMR0val@timer_low	;volatile
  4802   004714  6A11               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  4803                           
  4804                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  4805   004716  CFD4 F012          	movff	4052,get16bitTMR0val@timer_high	;volatile
  4806   00471A  6A13               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  4807   00471C                     
  4808                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  4809   00471C  5012               	movf	get16bitTMR0val@timer_high^0,w,c
  4810   00471E  6E0F               	movwf	(??_get16bitTMR0val+1)^0,c
  4811   004720  6A0E               	clrf	??_get16bitTMR0val^0,c
  4812   004722  5010               	movf	get16bitTMR0val@timer_low^0,w,c
  4813   004724  100E               	iorwf	??_get16bitTMR0val^0,w,c
  4814   004726  6E14               	movwf	get16bitTMR0val@timer_val^0,c
  4815   004728  5011               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  4816   00472A  100F               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  4817   00472C  6E15               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  4818   00472E                     
  4819                           ;timers.c: 39:     return timer_val;
  4820   00472E  C014  F00C         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  4821   004732  C015  F00D         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  4822   004736  0012               	return		;funcret
  4823   004738                     __end_of_get16bitTMR0val:
  4824                           	callstack 0
  4825                           
  4826 ;; *************** function _fullSpeedAhead *****************
  4827 ;; Defined at:
  4828 ;;		line 432 in file "dc_motor.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4831 ;;		 -> main@motorL(10), 
  4832 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4833 ;;		 -> main@motorR(10), 
  4834 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4835 ;;  straightRamp    1   35[COMRAM] unsigned char 
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;  cur_power       2   41[COMRAM] int 
  4838 ;;  i               2   39[COMRAM] int 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      void 
  4841 ;; Registers used:
  4842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4848 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4849 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4850 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4851 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;Total ram usage:       13 bytes
  4853 ;; Hardware stack levels used: 1
  4854 ;; Hardware stack levels required when called: 7
  4855 ;; This function calls:
  4856 ;;		_setMotorPWM
  4857 ;; This function is called by:
  4858 ;;		_main
  4859 ;;		_move
  4860 ;;		_returnHome
  4861 ;;		_lostReturnHome
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text8
  4866   00407C                     __ptext8:
  4867                           	callstack 0
  4868   00407C                     _fullSpeedAhead:
  4869                           	callstack 21
  4870   00407C                     
  4871                           ;dc_motor.c: 432: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 433: {;dc_motor.c: 434:     mL->direction = 1;
  4872   00407C  EE20 F001          	lfsr	2,1
  4873   004080  501F               	movf	fullSpeedAhead@mL^0,w,c
  4874   004082  26D9               	addwf	fsr2l,f,c
  4875   004084  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4876   004086  22DA               	addwfc	fsr2h,f,c
  4877   004088  0E01               	movlw	1
  4878   00408A  6EDF               	movwf	indf2,c
  4879                           
  4880                           ;dc_motor.c: 435:     mR->direction = 1;
  4881   00408C  EE20 F001          	lfsr	2,1
  4882   004090  5021               	movf	fullSpeedAhead@mR^0,w,c
  4883   004092  26D9               	addwf	fsr2l,f,c
  4884   004094  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4885   004096  22DA               	addwfc	fsr2h,f,c
  4886   004098  0E01               	movlw	1
  4887   00409A  6EDF               	movwf	indf2,c
  4888   00409C                     
  4889                           ;dc_motor.c: 436:     int i;;dc_motor.c: 437:     int cur_power;;dc_motor.c: 438:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4890   00409C  0E00               	movlw	0
  4891   00409E  6E2B               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  4892   0040A0  0E01               	movlw	1
  4893   0040A2  6E2A               	movwf	fullSpeedAhead@cur_power^0,c
  4894   0040A4  EF9D  F020         	goto	l4148
  4895   0040A8                     l4134:
  4896                           
  4897                           ;dc_motor.c: 439:         mL->power = cur_power+mL->compensation;
  4898   0040A8  EE20 F009          	lfsr	2,9
  4899   0040AC  501F               	movf	fullSpeedAhead@mL^0,w,c
  4900   0040AE  26D9               	addwf	fsr2l,f,c
  4901   0040B0  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4902   0040B2  22DA               	addwfc	fsr2h,f,c
  4903   0040B4  50DF               	movf	indf2,w,c
  4904   0040B6  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4905   0040B8  C01F  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4906   0040BC  C020  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4907   0040C0  6EDF               	movwf	indf2,c
  4908                           
  4909                           ;dc_motor.c: 440:         mR->power = cur_power+mR->compensation;
  4910   0040C2  EE20 F009          	lfsr	2,9
  4911   0040C6  5021               	movf	fullSpeedAhead@mR^0,w,c
  4912   0040C8  26D9               	addwf	fsr2l,f,c
  4913   0040CA  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4914   0040CC  22DA               	addwfc	fsr2h,f,c
  4915   0040CE  50DF               	movf	indf2,w,c
  4916   0040D0  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4917   0040D2  C021  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4918   0040D6  C022  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4919   0040DA  6EDF               	movwf	indf2,c
  4920   0040DC                     
  4921                           ;dc_motor.c: 441:         setMotorPWM(mL);
  4922   0040DC  C01F  F019         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4923   0040E0  C020  F01A         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4924   0040E4  EC7E  F01E         	call	_setMotorPWM	;wreg free
  4925   0040E8                     
  4926                           ;dc_motor.c: 442:         setMotorPWM(mR);
  4927   0040E8  C021  F019         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4928   0040EC  C022  F01A         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4929   0040F0  EC7E  F01E         	call	_setMotorPWM	;wreg free
  4930   0040F4                     
  4931                           ;dc_motor.c: 443:         for (i=0;i<straightRamp;i++) {
  4932   0040F4  0E00               	movlw	0
  4933   0040F6  6E29               	movwf	(fullSpeedAhead@i+1)^0,c
  4934   0040F8  0E00               	movlw	0
  4935   0040FA  6E28               	movwf	fullSpeedAhead@i^0,c
  4936   0040FC  EF89  F020         	goto	l657
  4937   004100                     l4142:
  4938                           
  4939                           ;dc_motor.c: 444:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4940   004100  0ED0               	movlw	208
  4941   004102  6E25               	movwf	??_fullSpeedAhead^0,c
  4942   004104  0ECA               	movlw	202
  4943   004106                     u5277:
  4944   004106  2EE8               	decfsz	wreg,f,c
  4945   004108  D7FE               	bra	u5277
  4946   00410A  2E25               	decfsz	??_fullSpeedAhead^0,f,c
  4947   00410C  D7FC               	bra	u5277
  4948   00410E                     
  4949                           ;dc_motor.c: 445:         }
  4950   00410E  4A28               	infsnz	fullSpeedAhead@i^0,f,c
  4951   004110  2A29               	incf	(fullSpeedAhead@i+1)^0,f,c
  4952   004112                     l657:
  4953   004112  5024               	movf	fullSpeedAhead@straightRamp^0,w,c
  4954   004114  6E25               	movwf	??_fullSpeedAhead^0,c
  4955   004116  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  4956   004118  5025               	movf	??_fullSpeedAhead^0,w,c
  4957   00411A  5C28               	subwf	fullSpeedAhead@i^0,w,c
  4958   00411C  5029               	movf	(fullSpeedAhead@i+1)^0,w,c
  4959   00411E  0A80               	xorlw	128
  4960   004120  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  4961   004122  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  4962   004124  0A80               	xorlw	128
  4963   004126  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  4964   004128  A0D8               	btfss	status,0,c
  4965   00412A  EF99  F020         	goto	u3231
  4966   00412E  EF9B  F020         	goto	u3230
  4967   004132                     u3231:
  4968   004132  EF80  F020         	goto	l4142
  4969   004136                     u3230:
  4970   004136                     
  4971                           ;dc_motor.c: 446:     }
  4972   004136  4A2A               	infsnz	fullSpeedAhead@cur_power^0,f,c
  4973   004138  2A2B               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  4974   00413A                     l4148:
  4975   00413A  5023               	movf	fullSpeedAhead@straightSpeed^0,w,c
  4976   00413C  6E25               	movwf	??_fullSpeedAhead^0,c
  4977   00413E  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  4978   004140  502A               	movf	fullSpeedAhead@cur_power^0,w,c
  4979   004142  5C25               	subwf	??_fullSpeedAhead^0,w,c
  4980   004144  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  4981   004146  0A80               	xorlw	128
  4982   004148  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  4983   00414A  502B               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  4984   00414C  0A80               	xorlw	128
  4985   00414E  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  4986   004150  B0D8               	btfsc	status,0,c
  4987   004152  EFAD  F020         	goto	u3241
  4988   004156  EFAF  F020         	goto	u3240
  4989   00415A                     u3241:
  4990   00415A  EF54  F020         	goto	l4134
  4991   00415E                     u3240:
  4992   00415E  0012               	return		;funcret
  4993   004160                     __end_of_fullSpeedAhead:
  4994                           	callstack 0
  4995                           
  4996 ;; *************** function _initUSART4 *****************
  4997 ;; Defined at:
  4998 ;;		line 4 in file "serial.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5016 ;;Total ram usage:        0 bytes
  5017 ;; Hardware stack levels used: 1
  5018 ;; Hardware stack levels required when called: 5
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_main
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text9
  5027   00487E                     __ptext9:
  5028                           	callstack 0
  5029   00487E                     _initUSART4:
  5030                           	callstack 25
  5031   00487E                     
  5032                           ;serial.c: 7:     RC0PPS = 0x12;
  5033   00487E  0E12               	movlw	18
  5034   004880  010E               	movlb	14	; () banked
  5035   004882  6F62               	movwf	98,b	;volatile
  5036                           
  5037                           ;serial.c: 8:     RX4PPS = 0x11;
  5038   004884  0E11               	movlw	17
  5039   004886  6F15               	movwf	21,b	;volatile
  5040   004888                     
  5041                           ; BSR set to: 14
  5042                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  5043   004888  97E9               	bcf	233,3,b	;volatile
  5044   00488A                     
  5045                           ; BSR set to: 14
  5046                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  5047   00488A  95E8               	bcf	232,2,b	;volatile
  5048                           
  5049                           ;serial.c: 13:     SP4BRGL = 51;
  5050   00488C  0E33               	movlw	51
  5051   00488E  6FE5               	movwf	229,b	;volatile
  5052                           
  5053                           ;serial.c: 14:     SP4BRGH = 0;
  5054   004890  0E00               	movlw	0
  5055   004892  6FE6               	movwf	230,b	;volatile
  5056   004894                     
  5057                           ; BSR set to: 14
  5058                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  5059   004894  89E7               	bsf	231,4,b	;volatile
  5060   004896                     
  5061                           ; BSR set to: 14
  5062                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  5063   004896  8BE8               	bsf	232,5,b	;volatile
  5064   004898                     
  5065                           ; BSR set to: 14
  5066                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  5067   004898  8FE7               	bsf	231,7,b	;volatile
  5068   00489A                     
  5069                           ; BSR set to: 14
  5070   00489A  0012               	return		;funcret
  5071   00489C                     __end_of_initUSART4:
  5072                           	callstack 0
  5073                           
  5074 ;; *************** function _initDCmotorsPWM *****************
  5075 ;; Defined at:
  5076 ;;		line 8 in file "dc_motor.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  PWMperiod       2   11[COMRAM] unsigned int 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      void 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5093 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5094 ;;Total ram usage:        2 bytes
  5095 ;; Hardware stack levels used: 1
  5096 ;; Hardware stack levels required when called: 5
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_main
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text10
  5105   0042C8                     __ptext10:
  5106                           	callstack 0
  5107   0042C8                     _initDCmotorsPWM:
  5108                           	callstack 25
  5109   0042C8                     
  5110                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  5111   0042C8  947D               	bcf	125,2,c	;volatile
  5112                           
  5113                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  5114   0042CA  9485               	bcf	133,2,c	;volatile
  5115                           
  5116                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  5117   0042CC  987D               	bcf	125,4,c	;volatile
  5118                           
  5119                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  5120   0042CE  9885               	bcf	133,4,c	;volatile
  5121                           
  5122                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  5123   0042D0  9E7B               	bcf	123,7,c	;volatile
  5124                           
  5125                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  5126   0042D2  9E83               	bcf	131,7,c	;volatile
  5127                           
  5128                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  5129   0042D4  9C7F               	bcf	127,6,c	;volatile
  5130                           
  5131                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  5132   0042D6  9C87               	bcf	135,6,c	;volatile
  5133   0042D8                     
  5134                           ;dc_motor.c: 21:     RE2PPS=0x05;
  5135   0042D8  0E05               	movlw	5
  5136   0042DA  010E               	movlb	14	; () banked
  5137   0042DC  6F74               	movwf	116,b	;volatile
  5138                           
  5139                           ;dc_motor.c: 22:     RE4PPS=0x06;
  5140   0042DE  0E06               	movlw	6
  5141   0042E0  6F76               	movwf	118,b	;volatile
  5142                           
  5143                           ;dc_motor.c: 23:     RC7PPS=0x07;
  5144   0042E2  0E07               	movlw	7
  5145   0042E4  6F69               	movwf	105,b	;volatile
  5146                           
  5147                           ;dc_motor.c: 24:     RG6PPS=0x08;
  5148   0042E6  0E08               	movlw	8
  5149   0042E8  6F88               	movwf	136,b	;volatile
  5150                           
  5151                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  5152   0042EA  50BD               	movf	189,w,c	;volatile
  5153   0042EC  0B8F               	andlw	-113
  5154   0042EE  0930               	iorlw	48
  5155   0042F0  6EBD               	movwf	189,c	;volatile
  5156                           
  5157                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  5158   0042F2  0EE0               	movlw	-32
  5159   0042F4  16BE               	andwf	190,f,c	;volatile
  5160                           
  5161                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  5162   0042F6  50BF               	movf	191,w,c	;volatile
  5163   0042F8  0BF0               	andlw	-16
  5164   0042FA  0901               	iorlw	1
  5165   0042FC  6EBF               	movwf	191,c	;volatile
  5166   0042FE                     
  5167                           ; BSR set to: 14
  5168                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  5169   0042FE  C00C  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  5170   004302                     
  5171                           ; BSR set to: 14
  5172                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  5173   004302  8EBD               	bsf	189,7,c	;volatile
  5174                           
  5175                           ;dc_motor.c: 38:     CCPR1H=0;
  5176   004304  0E00               	movlw	0
  5177   004306  6EAA               	movwf	170,c	;volatile
  5178                           
  5179                           ;dc_motor.c: 39:     CCPR2H=0;
  5180   004308  0E00               	movlw	0
  5181   00430A  6EA6               	movwf	166,c	;volatile
  5182                           
  5183                           ;dc_motor.c: 40:     CCPR3H=0;
  5184   00430C  0E00               	movlw	0
  5185   00430E  010F               	movlb	15	; () banked
  5186   004310  6F25               	movwf	37,b	;volatile
  5187                           
  5188                           ;dc_motor.c: 41:     CCPR4H=0;
  5189   004312  0E00               	movlw	0
  5190   004314  6F21               	movwf	33,b	;volatile
  5191                           
  5192                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  5193   004316  0EFC               	movlw	-4
  5194   004318  16AD               	andwf	173,f,c	;volatile
  5195                           
  5196                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  5197   00431A  0EF3               	movlw	-13
  5198   00431C  16AD               	andwf	173,f,c	;volatile
  5199                           
  5200                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  5201   00431E  0ECF               	movlw	-49
  5202   004320  16AD               	andwf	173,f,c	;volatile
  5203                           
  5204                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  5205   004322  0E3F               	movlw	-193
  5206   004324  16AD               	andwf	173,f,c	;volatile
  5207   004326                     
  5208                           ; BSR set to: 15
  5209                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  5210   004326  88AB               	bsf	171,4,c	;volatile
  5211                           
  5212                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  5213   004328  50AB               	movf	171,w,c	;volatile
  5214   00432A  0BF0               	andlw	-16
  5215   00432C  090C               	iorlw	12
  5216   00432E  6EAB               	movwf	171,c	;volatile
  5217   004330                     
  5218                           ; BSR set to: 15
  5219                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  5220   004330  8EAB               	bsf	171,7,c	;volatile
  5221   004332                     
  5222                           ; BSR set to: 15
  5223                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  5224   004332  88A7               	bsf	167,4,c	;volatile
  5225                           
  5226                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  5227   004334  50A7               	movf	167,w,c	;volatile
  5228   004336  0BF0               	andlw	-16
  5229   004338  090C               	iorlw	12
  5230   00433A  6EA7               	movwf	167,c	;volatile
  5231   00433C                     
  5232                           ; BSR set to: 15
  5233                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  5234   00433C  8EA7               	bsf	167,7,c	;volatile
  5235   00433E                     
  5236                           ; BSR set to: 15
  5237                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  5238   00433E  8926               	bsf	38,4,b	;volatile
  5239                           
  5240                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  5241   004340  5126               	movf	38,w,b	;volatile
  5242   004342  0BF0               	andlw	-16
  5243   004344  090C               	iorlw	12
  5244   004346  6F26               	movwf	38,b	;volatile
  5245   004348                     
  5246                           ; BSR set to: 15
  5247                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  5248   004348  8F26               	bsf	38,7,b	;volatile
  5249   00434A                     
  5250                           ; BSR set to: 15
  5251                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  5252   00434A  8922               	bsf	34,4,b	;volatile
  5253                           
  5254                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  5255   00434C  5122               	movf	34,w,b	;volatile
  5256   00434E  0BF0               	andlw	-16
  5257   004350  090C               	iorlw	12
  5258   004352  6F22               	movwf	34,b	;volatile
  5259   004354                     
  5260                           ; BSR set to: 15
  5261                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  5262   004354  8F22               	bsf	34,7,b	;volatile
  5263   004356                     
  5264                           ; BSR set to: 15
  5265   004356  0012               	return		;funcret
  5266   004358                     __end_of_initDCmotorsPWM:
  5267                           	callstack 0
  5268                           
  5269 ;; *************** function _color_detect *****************
  5270 ;; Defined at:
  5271 ;;		line 138 in file "color.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  HSV             6   11[COMRAM] struct HSV_val
  5274 ;;  red             6   17[COMRAM] struct HSV_calib
  5275 ;;  green           6   23[COMRAM] struct HSV_calib
  5276 ;;  blue            6   29[COMRAM] struct HSV_calib
  5277 ;;  yellow          6   35[COMRAM] struct HSV_calib
  5278 ;;  pink            6   41[COMRAM] struct HSV_calib
  5279 ;;  orange          6   47[COMRAM] struct HSV_calib
  5280 ;;  lightblue       6   53[COMRAM] struct HSV_calib
  5281 ;;  white           6   59[COMRAM] struct HSV_calib
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;  color           1   67[COMRAM] unsigned char 
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      unsigned char 
  5286 ;; Registers used:
  5287 ;;		wreg, status,2, status,0
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5293 ;;      Params:        54       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5296 ;;      Totals:        57       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5297 ;;Total ram usage:       57 bytes
  5298 ;; Hardware stack levels used: 1
  5299 ;; Hardware stack levels required when called: 5
  5300 ;; This function calls:
  5301 ;;		Nothing
  5302 ;; This function is called by:
  5303 ;;		_main
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           	psect	text11
  5308   003318                     __ptext11:
  5309                           	callstack 0
  5310   003318                     _color_detect:
  5311                           	callstack 25
  5312   003318                     
  5313                           ;color.c: 143:     if ((red.H)-1000 < HSV.H && HSV.H < (red.H)+1000) {color = 1;}
  5314   003318  0E18               	movlw	24
  5315   00331A  2412               	addwf	color_detect@red^0,w,c
  5316   00331C  6E42               	movwf	??_color_detect^0,c
  5317   00331E  0EFC               	movlw	252
  5318   003320  2013               	addwfc	(color_detect@red+1)^0,w,c
  5319   003322  6E43               	movwf	(??_color_detect+1)^0,c
  5320   003324  500C               	movf	color_detect@HSV^0,w,c
  5321   003326  5C42               	subwf	??_color_detect^0,w,c
  5322   003328  500D               	movf	(color_detect@HSV+1)^0,w,c
  5323   00332A  5843               	subwfb	(??_color_detect+1)^0,w,c
  5324   00332C  B0D8               	btfsc	status,0,c
  5325   00332E  EF9B  F019         	goto	u4061
  5326   003332  EF9D  F019         	goto	u4060
  5327   003336                     u4061:
  5328   003336  EFB2  F019         	goto	l4918
  5329   00333A                     u4060:
  5330   00333A  0EE8               	movlw	232
  5331   00333C  2412               	addwf	color_detect@red^0,w,c
  5332   00333E  6E42               	movwf	??_color_detect^0,c
  5333   003340  0E03               	movlw	3
  5334   003342  2013               	addwfc	(color_detect@red+1)^0,w,c
  5335   003344  6E43               	movwf	(??_color_detect+1)^0,c
  5336   003346  5042               	movf	??_color_detect^0,w,c
  5337   003348  5C0C               	subwf	color_detect@HSV^0,w,c
  5338   00334A  5043               	movf	(??_color_detect+1)^0,w,c
  5339   00334C  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5340   00334E  B0D8               	btfsc	status,0,c
  5341   003350  EFAC  F019         	goto	u4071
  5342   003354  EFAE  F019         	goto	u4070
  5343   003358                     u4071:
  5344   003358  EFB2  F019         	goto	l4918
  5345   00335C                     u4070:
  5346   00335C  0E01               	movlw	1
  5347   00335E  6E44               	movwf	color_detect@color^0,c
  5348   003360  EFBE  F01A         	goto	l156
  5349   003364                     l4918:
  5350   003364  0E18               	movlw	24
  5351   003366  2418               	addwf	color_detect@green^0,w,c
  5352   003368  6E42               	movwf	??_color_detect^0,c
  5353   00336A  0EFC               	movlw	252
  5354   00336C  2019               	addwfc	(color_detect@green+1)^0,w,c
  5355   00336E  6E43               	movwf	(??_color_detect+1)^0,c
  5356   003370  500C               	movf	color_detect@HSV^0,w,c
  5357   003372  5C42               	subwf	??_color_detect^0,w,c
  5358   003374  500D               	movf	(color_detect@HSV+1)^0,w,c
  5359   003376  5843               	subwfb	(??_color_detect+1)^0,w,c
  5360   003378  B0D8               	btfsc	status,0,c
  5361   00337A  EFC1  F019         	goto	u4081
  5362   00337E  EFC3  F019         	goto	u4080
  5363   003382                     u4081:
  5364   003382  EFD8  F019         	goto	l4924
  5365   003386                     u4080:
  5366   003386  0EE8               	movlw	232
  5367   003388  2418               	addwf	color_detect@green^0,w,c
  5368   00338A  6E42               	movwf	??_color_detect^0,c
  5369   00338C  0E03               	movlw	3
  5370   00338E  2019               	addwfc	(color_detect@green+1)^0,w,c
  5371   003390  6E43               	movwf	(??_color_detect+1)^0,c
  5372   003392  5042               	movf	??_color_detect^0,w,c
  5373   003394  5C0C               	subwf	color_detect@HSV^0,w,c
  5374   003396  5043               	movf	(??_color_detect+1)^0,w,c
  5375   003398  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5376   00339A  B0D8               	btfsc	status,0,c
  5377   00339C  EFD2  F019         	goto	u4091
  5378   0033A0  EFD4  F019         	goto	u4090
  5379   0033A4                     u4091:
  5380   0033A4  EFD8  F019         	goto	l4924
  5381   0033A8                     u4090:
  5382   0033A8  0E02               	movlw	2
  5383   0033AA  6E44               	movwf	color_detect@color^0,c
  5384   0033AC  EFBE  F01A         	goto	l156
  5385   0033B0                     l4924:
  5386   0033B0  0E18               	movlw	24
  5387   0033B2  241E               	addwf	color_detect@blue^0,w,c
  5388   0033B4  6E42               	movwf	??_color_detect^0,c
  5389   0033B6  0EFC               	movlw	252
  5390   0033B8  201F               	addwfc	(color_detect@blue+1)^0,w,c
  5391   0033BA  6E43               	movwf	(??_color_detect+1)^0,c
  5392   0033BC  500C               	movf	color_detect@HSV^0,w,c
  5393   0033BE  5C42               	subwf	??_color_detect^0,w,c
  5394   0033C0  500D               	movf	(color_detect@HSV+1)^0,w,c
  5395   0033C2  5843               	subwfb	(??_color_detect+1)^0,w,c
  5396   0033C4  B0D8               	btfsc	status,0,c
  5397   0033C6  EFE7  F019         	goto	u4101
  5398   0033CA  EFE9  F019         	goto	u4100
  5399   0033CE                     u4101:
  5400   0033CE  EFFE  F019         	goto	l4930
  5401   0033D2                     u4100:
  5402   0033D2  0EE8               	movlw	232
  5403   0033D4  241E               	addwf	color_detect@blue^0,w,c
  5404   0033D6  6E42               	movwf	??_color_detect^0,c
  5405   0033D8  0E03               	movlw	3
  5406   0033DA  201F               	addwfc	(color_detect@blue+1)^0,w,c
  5407   0033DC  6E43               	movwf	(??_color_detect+1)^0,c
  5408   0033DE  5042               	movf	??_color_detect^0,w,c
  5409   0033E0  5C0C               	subwf	color_detect@HSV^0,w,c
  5410   0033E2  5043               	movf	(??_color_detect+1)^0,w,c
  5411   0033E4  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5412   0033E6  B0D8               	btfsc	status,0,c
  5413   0033E8  EFF8  F019         	goto	u4111
  5414   0033EC  EFFA  F019         	goto	u4110
  5415   0033F0                     u4111:
  5416   0033F0  EFFE  F019         	goto	l4930
  5417   0033F4                     u4110:
  5418   0033F4  0E03               	movlw	3
  5419   0033F6  6E44               	movwf	color_detect@color^0,c
  5420   0033F8  EFBE  F01A         	goto	l156
  5421   0033FC                     l4930:
  5422   0033FC  0E18               	movlw	24
  5423   0033FE  2424               	addwf	color_detect@yellow^0,w,c
  5424   003400  6E42               	movwf	??_color_detect^0,c
  5425   003402  0EFC               	movlw	252
  5426   003404  2025               	addwfc	(color_detect@yellow+1)^0,w,c
  5427   003406  6E43               	movwf	(??_color_detect+1)^0,c
  5428   003408  500C               	movf	color_detect@HSV^0,w,c
  5429   00340A  5C42               	subwf	??_color_detect^0,w,c
  5430   00340C  500D               	movf	(color_detect@HSV+1)^0,w,c
  5431   00340E  5843               	subwfb	(??_color_detect+1)^0,w,c
  5432   003410  B0D8               	btfsc	status,0,c
  5433   003412  EF0D  F01A         	goto	u4121
  5434   003416  EF0F  F01A         	goto	u4120
  5435   00341A                     u4121:
  5436   00341A  EF24  F01A         	goto	l4936
  5437   00341E                     u4120:
  5438   00341E  0EE8               	movlw	232
  5439   003420  2424               	addwf	color_detect@yellow^0,w,c
  5440   003422  6E42               	movwf	??_color_detect^0,c
  5441   003424  0E03               	movlw	3
  5442   003426  2025               	addwfc	(color_detect@yellow+1)^0,w,c
  5443   003428  6E43               	movwf	(??_color_detect+1)^0,c
  5444   00342A  5042               	movf	??_color_detect^0,w,c
  5445   00342C  5C0C               	subwf	color_detect@HSV^0,w,c
  5446   00342E  5043               	movf	(??_color_detect+1)^0,w,c
  5447   003430  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5448   003432  B0D8               	btfsc	status,0,c
  5449   003434  EF1E  F01A         	goto	u4131
  5450   003438  EF20  F01A         	goto	u4130
  5451   00343C                     u4131:
  5452   00343C  EF24  F01A         	goto	l4936
  5453   003440                     u4130:
  5454   003440  0E04               	movlw	4
  5455   003442  6E44               	movwf	color_detect@color^0,c
  5456   003444  EFBE  F01A         	goto	l156
  5457   003448                     l4936:
  5458   003448  0E18               	movlw	24
  5459   00344A  242A               	addwf	color_detect@pink^0,w,c
  5460   00344C  6E42               	movwf	??_color_detect^0,c
  5461   00344E  0EFC               	movlw	252
  5462   003450  202B               	addwfc	(color_detect@pink+1)^0,w,c
  5463   003452  6E43               	movwf	(??_color_detect+1)^0,c
  5464   003454  500C               	movf	color_detect@HSV^0,w,c
  5465   003456  5C42               	subwf	??_color_detect^0,w,c
  5466   003458  500D               	movf	(color_detect@HSV+1)^0,w,c
  5467   00345A  5843               	subwfb	(??_color_detect+1)^0,w,c
  5468   00345C  B0D8               	btfsc	status,0,c
  5469   00345E  EF33  F01A         	goto	u4141
  5470   003462  EF35  F01A         	goto	u4140
  5471   003466                     u4141:
  5472   003466  EF4A  F01A         	goto	l4942
  5473   00346A                     u4140:
  5474   00346A  0EE8               	movlw	232
  5475   00346C  242A               	addwf	color_detect@pink^0,w,c
  5476   00346E  6E42               	movwf	??_color_detect^0,c
  5477   003470  0E03               	movlw	3
  5478   003472  202B               	addwfc	(color_detect@pink+1)^0,w,c
  5479   003474  6E43               	movwf	(??_color_detect+1)^0,c
  5480   003476  5042               	movf	??_color_detect^0,w,c
  5481   003478  5C0C               	subwf	color_detect@HSV^0,w,c
  5482   00347A  5043               	movf	(??_color_detect+1)^0,w,c
  5483   00347C  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5484   00347E  B0D8               	btfsc	status,0,c
  5485   003480  EF44  F01A         	goto	u4151
  5486   003484  EF46  F01A         	goto	u4150
  5487   003488                     u4151:
  5488   003488  EF4A  F01A         	goto	l4942
  5489   00348C                     u4150:
  5490   00348C  0E05               	movlw	5
  5491   00348E  6E44               	movwf	color_detect@color^0,c
  5492   003490  EFBE  F01A         	goto	l156
  5493   003494                     l4942:
  5494   003494  0E18               	movlw	24
  5495   003496  2430               	addwf	color_detect@orange^0,w,c
  5496   003498  6E42               	movwf	??_color_detect^0,c
  5497   00349A  0EFC               	movlw	252
  5498   00349C  2031               	addwfc	(color_detect@orange+1)^0,w,c
  5499   00349E  6E43               	movwf	(??_color_detect+1)^0,c
  5500   0034A0  500C               	movf	color_detect@HSV^0,w,c
  5501   0034A2  5C42               	subwf	??_color_detect^0,w,c
  5502   0034A4  500D               	movf	(color_detect@HSV+1)^0,w,c
  5503   0034A6  5843               	subwfb	(??_color_detect+1)^0,w,c
  5504   0034A8  B0D8               	btfsc	status,0,c
  5505   0034AA  EF59  F01A         	goto	u4161
  5506   0034AE  EF5B  F01A         	goto	u4160
  5507   0034B2                     u4161:
  5508   0034B2  EF70  F01A         	goto	l4948
  5509   0034B6                     u4160:
  5510   0034B6  0EE8               	movlw	232
  5511   0034B8  2430               	addwf	color_detect@orange^0,w,c
  5512   0034BA  6E42               	movwf	??_color_detect^0,c
  5513   0034BC  0E03               	movlw	3
  5514   0034BE  2031               	addwfc	(color_detect@orange+1)^0,w,c
  5515   0034C0  6E43               	movwf	(??_color_detect+1)^0,c
  5516   0034C2  5042               	movf	??_color_detect^0,w,c
  5517   0034C4  5C0C               	subwf	color_detect@HSV^0,w,c
  5518   0034C6  5043               	movf	(??_color_detect+1)^0,w,c
  5519   0034C8  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5520   0034CA  B0D8               	btfsc	status,0,c
  5521   0034CC  EF6A  F01A         	goto	u4171
  5522   0034D0  EF6C  F01A         	goto	u4170
  5523   0034D4                     u4171:
  5524   0034D4  EF70  F01A         	goto	l4948
  5525   0034D8                     u4170:
  5526   0034D8  0E06               	movlw	6
  5527   0034DA  6E44               	movwf	color_detect@color^0,c
  5528   0034DC  EFBE  F01A         	goto	l156
  5529   0034E0                     l4948:
  5530   0034E0  0E18               	movlw	24
  5531   0034E2  2436               	addwf	color_detect@lightblue^0,w,c
  5532   0034E4  6E42               	movwf	??_color_detect^0,c
  5533   0034E6  0EFC               	movlw	252
  5534   0034E8  2037               	addwfc	(color_detect@lightblue+1)^0,w,c
  5535   0034EA  6E43               	movwf	(??_color_detect+1)^0,c
  5536   0034EC  500C               	movf	color_detect@HSV^0,w,c
  5537   0034EE  5C42               	subwf	??_color_detect^0,w,c
  5538   0034F0  500D               	movf	(color_detect@HSV+1)^0,w,c
  5539   0034F2  5843               	subwfb	(??_color_detect+1)^0,w,c
  5540   0034F4  B0D8               	btfsc	status,0,c
  5541   0034F6  EF7F  F01A         	goto	u4181
  5542   0034FA  EF81  F01A         	goto	u4180
  5543   0034FE                     u4181:
  5544   0034FE  EF96  F01A         	goto	l4954
  5545   003502                     u4180:
  5546   003502  0EE8               	movlw	232
  5547   003504  2436               	addwf	color_detect@lightblue^0,w,c
  5548   003506  6E42               	movwf	??_color_detect^0,c
  5549   003508  0E03               	movlw	3
  5550   00350A  2037               	addwfc	(color_detect@lightblue+1)^0,w,c
  5551   00350C  6E43               	movwf	(??_color_detect+1)^0,c
  5552   00350E  5042               	movf	??_color_detect^0,w,c
  5553   003510  5C0C               	subwf	color_detect@HSV^0,w,c
  5554   003512  5043               	movf	(??_color_detect+1)^0,w,c
  5555   003514  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5556   003516  B0D8               	btfsc	status,0,c
  5557   003518  EF90  F01A         	goto	u4191
  5558   00351C  EF92  F01A         	goto	u4190
  5559   003520                     u4191:
  5560   003520  EF96  F01A         	goto	l4954
  5561   003524                     u4190:
  5562   003524  0E07               	movlw	7
  5563   003526  6E44               	movwf	color_detect@color^0,c
  5564   003528  EFBE  F01A         	goto	l156
  5565   00352C                     l4954:
  5566   00352C  0E18               	movlw	24
  5567   00352E  243C               	addwf	color_detect@white^0,w,c
  5568   003530  6E42               	movwf	??_color_detect^0,c
  5569   003532  0EFC               	movlw	252
  5570   003534  203D               	addwfc	(color_detect@white+1)^0,w,c
  5571   003536  6E43               	movwf	(??_color_detect+1)^0,c
  5572   003538  500C               	movf	color_detect@HSV^0,w,c
  5573   00353A  5C42               	subwf	??_color_detect^0,w,c
  5574   00353C  500D               	movf	(color_detect@HSV+1)^0,w,c
  5575   00353E  5843               	subwfb	(??_color_detect+1)^0,w,c
  5576   003540  B0D8               	btfsc	status,0,c
  5577   003542  EFA5  F01A         	goto	u4201
  5578   003546  EFA7  F01A         	goto	u4200
  5579   00354A                     u4201:
  5580   00354A  EFBC  F01A         	goto	l4960
  5581   00354E                     u4200:
  5582   00354E  0EE8               	movlw	232
  5583   003550  243C               	addwf	color_detect@white^0,w,c
  5584   003552  6E42               	movwf	??_color_detect^0,c
  5585   003554  0E03               	movlw	3
  5586   003556  203D               	addwfc	(color_detect@white+1)^0,w,c
  5587   003558  6E43               	movwf	(??_color_detect+1)^0,c
  5588   00355A  5042               	movf	??_color_detect^0,w,c
  5589   00355C  5C0C               	subwf	color_detect@HSV^0,w,c
  5590   00355E  5043               	movf	(??_color_detect+1)^0,w,c
  5591   003560  580D               	subwfb	(color_detect@HSV+1)^0,w,c
  5592   003562  B0D8               	btfsc	status,0,c
  5593   003564  EFB6  F01A         	goto	u4211
  5594   003568  EFB8  F01A         	goto	u4210
  5595   00356C                     u4211:
  5596   00356C  EFBC  F01A         	goto	l4960
  5597   003570                     u4210:
  5598   003570  0E08               	movlw	8
  5599   003572  6E44               	movwf	color_detect@color^0,c
  5600   003574  EFBE  F01A         	goto	l156
  5601   003578                     l4960:
  5602   003578  0E09               	movlw	9
  5603   00357A  6E44               	movwf	color_detect@color^0,c
  5604   00357C                     l156:
  5605                           
  5606                           ;color.c: 168:     return color;
  5607   00357C  5044               	movf	color_detect@color^0,w,c
  5608   00357E  0012               	return		;funcret
  5609   003580                     __end_of_color_detect:
  5610                           	callstack 0
  5611                           
  5612 ;; *************** function _color_click_init *****************
  5613 ;; Defined at:
  5614 ;;		line 7 in file "color.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;		None
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;		None
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      void 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5631 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;Total ram usage:        1 bytes
  5633 ;; Hardware stack levels used: 1
  5634 ;; Hardware stack levels required when called: 9
  5635 ;; This function calls:
  5636 ;;		_I2C_2_Master_Init
  5637 ;;		_color_clear_init_interrupts
  5638 ;;		_color_writetoaddr
  5639 ;; This function is called by:
  5640 ;;		_main
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text12
  5645   004620                     __ptext12:
  5646                           	callstack 0
  5647   004620                     _color_click_init:
  5648                           	callstack 21
  5649   004620                     
  5650                           ;color.c: 10:     I2C_2_Master_Init();
  5651   004620  EC73  F023         	call	_I2C_2_Master_Init	;wreg free
  5652   004624                     
  5653                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  5654   004624  0E01               	movlw	1
  5655   004626  6E0E               	movwf	color_writetoaddr@value^0,c
  5656   004628  0E00               	movlw	0
  5657   00462A  EC0F  F024         	call	_color_writetoaddr
  5658   00462E                     
  5659                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5660   00462E  0E3F               	movlw	63
  5661   004630  6E15               	movwf	??_color_click_init^0,c
  5662   004632  0E55               	movlw	85
  5663   004634                     u5287:
  5664   004634  2EE8               	decfsz	wreg,f,c
  5665   004636  D7FE               	bra	u5287
  5666   004638  2E15               	decfsz	??_color_click_init^0,f,c
  5667   00463A  D7FC               	bra	u5287
  5668   00463C  0000               	nop	
  5669   00463E                     
  5670                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  5671   00463E  0E03               	movlw	3
  5672   004640  6E0E               	movwf	color_writetoaddr@value^0,c
  5673   004642  0E00               	movlw	0
  5674   004644  EC0F  F024         	call	_color_writetoaddr
  5675   004648                     
  5676                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  5677   004648  0ED5               	movlw	213
  5678   00464A  6E0E               	movwf	color_writetoaddr@value^0,c
  5679   00464C  0E01               	movlw	1
  5680   00464E  EC0F  F024         	call	_color_writetoaddr
  5681   004652                     
  5682                           ;color.c: 23:     color_clear_init_interrupts();
  5683   004652  ECAC  F021         	call	_color_clear_init_interrupts	;wreg free
  5684   004656  0012               	return		;funcret
  5685   004658                     __end_of_color_click_init:
  5686                           	callstack 0
  5687                           
  5688 ;; *************** function _color_clear_init_interrupts *****************
  5689 ;; Defined at:
  5690 ;;		line 27 in file "color.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;		None
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  low_threshol    2   18[COMRAM] unsigned int 
  5695 ;;  high_thresho    2   16[COMRAM] unsigned int 
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  1    wreg      void 
  5698 ;; Registers used:
  5699 ;;		wreg, status,2, status,0, cstack
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5706 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5708 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5709 ;;Total ram usage:        5 bytes
  5710 ;; Hardware stack levels used: 1
  5711 ;; Hardware stack levels required when called: 8
  5712 ;; This function calls:
  5713 ;;		_I2C_2_Master_Start
  5714 ;;		_I2C_2_Master_Stop
  5715 ;;		_I2C_2_Master_Write
  5716 ;;		_color_writetoaddr
  5717 ;; This function is called by:
  5718 ;;		_color_click_init
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text13
  5723   004358                     __ptext13:
  5724                           	callstack 0
  5725   004358                     _color_clear_init_interrupts:
  5726                           	callstack 21
  5727   004358                     
  5728                           ;color.c: 29:     I2C_2_Master_Start();
  5729   004358  EC89  F024         	call	_I2C_2_Master_Start	;wreg free
  5730                           
  5731                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  5732   00435C  0E52               	movlw	82
  5733   00435E  EC73  F024         	call	_I2C_2_Master_Write
  5734                           
  5735                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  5736   004362  0EE6               	movlw	230
  5737   004364  EC73  F024         	call	_I2C_2_Master_Write
  5738                           
  5739                           ;color.c: 32:     I2C_2_Master_Stop();
  5740   004368  EC84  F024         	call	_I2C_2_Master_Stop	;wreg free
  5741   00436C                     
  5742                           ;color.c: 35:     unsigned int high_threshold = ambient + 12;
  5743   00436C  0E0C               	movlw	12
  5744   00436E  244D               	addwf	_ambient^0,w,c
  5745   004370  6E11               	movwf	color_clear_init_interrupts@high_threshold^0,c
  5746   004372  0E00               	movlw	0
  5747   004374  204E               	addwfc	(_ambient+1)^0,w,c
  5748   004376  6E12               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  5749   004378                     
  5750                           ;color.c: 36:     unsigned int low_threshold = ambient - 12;
  5751   004378  0EF4               	movlw	244
  5752   00437A  244D               	addwf	_ambient^0,w,c
  5753   00437C  6E13               	movwf	color_clear_init_interrupts@low_threshold^0,c
  5754   00437E  0EFF               	movlw	255
  5755   004380  204E               	addwfc	(_ambient+1)^0,w,c
  5756   004382  6E14               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  5757                           
  5758                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
  5759   004384  0E13               	movlw	19
  5760   004386  6E0E               	movwf	color_writetoaddr@value^0,c
  5761   004388  0E00               	movlw	0
  5762   00438A  EC0F  F024         	call	_color_writetoaddr
  5763   00438E                     
  5764                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5765   00438E  0E3F               	movlw	63
  5766   004390  6E10               	movwf	??_color_clear_init_interrupts^0,c
  5767   004392  0E55               	movlw	85
  5768   004394                     u5297:
  5769   004394  2EE8               	decfsz	wreg,f,c
  5770   004396  D7FE               	bra	u5297
  5771   004398  2E10               	decfsz	??_color_clear_init_interrupts^0,f,c
  5772   00439A  D7FC               	bra	u5297
  5773   00439C  0000               	nop	
  5774   00439E                     
  5775                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
  5776   00439E  5012               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  5777   0043A0  6E0E               	movwf	color_writetoaddr@value^0,c
  5778   0043A2  0E07               	movlw	7
  5779   0043A4  EC0F  F024         	call	_color_writetoaddr
  5780   0043A8                     
  5781                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  5782   0043A8  C011  F00E         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  5783   0043AC  0E06               	movlw	6
  5784   0043AE  EC0F  F024         	call	_color_writetoaddr
  5785   0043B2                     
  5786                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
  5787   0043B2  5014               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  5788   0043B4  6E0E               	movwf	color_writetoaddr@value^0,c
  5789   0043B6  0E05               	movlw	5
  5790   0043B8  EC0F  F024         	call	_color_writetoaddr
  5791   0043BC                     
  5792                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  5793   0043BC  C013  F00E         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  5794   0043C0  0E04               	movlw	4
  5795   0043C2  EC0F  F024         	call	_color_writetoaddr
  5796   0043C6                     
  5797                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
  5798   0043C6  0E04               	movlw	4
  5799   0043C8  6E0E               	movwf	color_writetoaddr@value^0,c
  5800   0043CA  0E0C               	movlw	12
  5801   0043CC  EC0F  F024         	call	_color_writetoaddr
  5802   0043D0  0012               	return		;funcret
  5803   0043D2                     __end_of_color_clear_init_interrupts:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function _color_writetoaddr *****************
  5807 ;; Defined at:
  5808 ;;		line 50 in file "color.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  address         1    wreg     unsigned char 
  5811 ;;  value           1   13[COMRAM] unsigned char 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  address         1   14[COMRAM] unsigned char 
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  1    wreg      void 
  5816 ;; Registers used:
  5817 ;;		wreg, status,2, status,0, cstack
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5823 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5826 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5827 ;;Total ram usage:        2 bytes
  5828 ;; Hardware stack levels used: 1
  5829 ;; Hardware stack levels required when called: 7
  5830 ;; This function calls:
  5831 ;;		_I2C_2_Master_Start
  5832 ;;		_I2C_2_Master_Stop
  5833 ;;		_I2C_2_Master_Write
  5834 ;; This function is called by:
  5835 ;;		_color_click_init
  5836 ;;		_color_clear_init_interrupts
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text14
  5841   00481E                     __ptext14:
  5842                           	callstack 0
  5843   00481E                     _color_writetoaddr:
  5844                           	callstack 22
  5845                           
  5846                           ;incstack = 0
  5847                           ;color_writetoaddr@address stored from wreg
  5848   00481E  6E0F               	movwf	color_writetoaddr@address^0,c
  5849   004820                     
  5850                           ;color.c: 51:     I2C_2_Master_Start();
  5851   004820  EC89  F024         	call	_I2C_2_Master_Start	;wreg free
  5852                           
  5853                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
  5854   004824  0E52               	movlw	82
  5855   004826  EC73  F024         	call	_I2C_2_Master_Write
  5856                           
  5857                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
  5858   00482A  500F               	movf	color_writetoaddr@address^0,w,c
  5859   00482C  0980               	iorlw	128
  5860   00482E  EC73  F024         	call	_I2C_2_Master_Write
  5861                           
  5862                           ;color.c: 54:     I2C_2_Master_Write(value);
  5863   004832  500E               	movf	color_writetoaddr@value^0,w,c
  5864   004834  EC73  F024         	call	_I2C_2_Master_Write
  5865                           
  5866                           ;color.c: 55:     I2C_2_Master_Stop();
  5867   004838  EC84  F024         	call	_I2C_2_Master_Stop	;wreg free
  5868   00483C  0012               	return		;funcret
  5869   00483E                     __end_of_color_writetoaddr:
  5870                           	callstack 0
  5871                           
  5872 ;; *************** function _I2C_2_Master_Init *****************
  5873 ;; Defined at:
  5874 ;;		line 4 in file "i2c.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      void 
  5881 ;; Registers used:
  5882 ;;		wreg, status,2
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5892 ;;Total ram usage:        0 bytes
  5893 ;; Hardware stack levels used: 1
  5894 ;; Hardware stack levels required when called: 5
  5895 ;; This function calls:
  5896 ;;		Nothing
  5897 ;; This function is called by:
  5898 ;;		_color_click_init
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text15
  5903   0046E6                     __ptext15:
  5904                           	callstack 0
  5905   0046E6                     _I2C_2_Master_Init:
  5906                           	callstack 24
  5907   0046E6                     
  5908                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5909   0046E6  010E               	movlb	14	; () banked
  5910   0046E8  51D9               	movf	217,w,b	;volatile
  5911   0046EA  0BF0               	andlw	-16
  5912   0046EC  0908               	iorlw	8
  5913   0046EE  6FD9               	movwf	217,b	;volatile
  5914   0046F0                     
  5915                           ; BSR set to: 14
  5916                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5917   0046F0  8BD9               	bsf	217,5,b	;volatile
  5918                           
  5919                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5920   0046F2  0E9F               	movlw	159
  5921   0046F4  6FD6               	movwf	214,b	;volatile
  5922   0046F6                     
  5923                           ; BSR set to: 14
  5924                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5925   0046F6  8A84               	bsf	132,5,c	;volatile
  5926   0046F8                     
  5927                           ; BSR set to: 14
  5928                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5929   0046F8  8C84               	bsf	132,6,c	;volatile
  5930   0046FA                     
  5931                           ; BSR set to: 14
  5932                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5933   0046FA  9BA7               	bcf	167,5,b	;volatile
  5934   0046FC                     
  5935                           ; BSR set to: 14
  5936                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5937   0046FC  9DA7               	bcf	167,6,b	;volatile
  5938                           
  5939                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5940   0046FE  0E1D               	movlw	29
  5941   004700  6F1D               	movwf	29,b	;volatile
  5942                           
  5943                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5944   004702  0E1E               	movlw	30
  5945   004704  6F1C               	movwf	28,b	;volatile
  5946                           
  5947                           ;i2c.c: 18:   RD5PPS=0x1C;
  5948   004706  0E1C               	movlw	28
  5949   004708  6F6F               	movwf	111,b	;volatile
  5950                           
  5951                           ;i2c.c: 19:   RD6PPS=0x1B;
  5952   00470A  0E1B               	movlw	27
  5953   00470C  6F70               	movwf	112,b	;volatile
  5954   00470E                     
  5955                           ; BSR set to: 14
  5956   00470E  0012               	return		;funcret
  5957   004710                     __end_of_I2C_2_Master_Init:
  5958                           	callstack 0
  5959                           
  5960 ;; *************** function _color_calibration *****************
  5961 ;; Defined at:
  5962 ;;		line 171 in file "color.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  RGBC            2    0[BANK1 ] PTR struct RGBC_val
  5965 ;;		 -> main@RGBC(8), 
  5966 ;;  HSV             2    2[BANK1 ] PTR struct HSV_val
  5967 ;;		 -> main@HSV(6), 
  5968 ;;  red             2    4[BANK1 ] PTR struct HSV_calib
  5969 ;;		 -> main@red(6), 
  5970 ;;  green           2    6[BANK1 ] PTR struct HSV_calib
  5971 ;;		 -> main@green(6), 
  5972 ;;  blue            2    8[BANK1 ] PTR struct HSV_calib
  5973 ;;		 -> main@blue(6), 
  5974 ;;  yellow          2   10[BANK1 ] PTR struct HSV_calib
  5975 ;;		 -> main@yellow(6), 
  5976 ;;  pink            2   12[BANK1 ] PTR struct HSV_calib
  5977 ;;		 -> main@pink(6), 
  5978 ;;  orange          2   14[BANK1 ] PTR struct HSV_calib
  5979 ;;		 -> main@orange(6), 
  5980 ;;  lightblue       2   16[BANK1 ] PTR struct HSV_calib
  5981 ;;		 -> main@lightblue(6), 
  5982 ;;  white           2   18[BANK1 ] PTR struct HSV_calib
  5983 ;;		 -> main@white(6), 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5995 ;;      Params:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5997 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5998 ;;      Totals:         2       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5999 ;;Total ram usage:       22 bytes
  6000 ;; Hardware stack levels used: 1
  6001 ;; Hardware stack levels required when called: 8
  6002 ;; This function calls:
  6003 ;;		_color_read
  6004 ;;		_rgb_2_hsv
  6005 ;;		_white_Light
  6006 ;; This function is called by:
  6007 ;;		_main
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           	psect	text16
  6012   0021B2                     __ptext16:
  6013                           	callstack 0
  6014   0021B2                     _color_calibration:
  6015                           	callstack 22
  6016   0021B2                     
  6017                           ;color.c: 171: void color_calibration(RGBC_val *RGBC, HSV_val *HSV, HSV_calib *red, HSV_
      +                          calib *green, HSV_calib *blue, HSV_calib *yellow, HSV_calib *pink, HSV_calib *orange, HS
      +                          V_calib *lightblue, HSV_calib *white);color.c: 172: {;color.c: 173:     white_Light(1);
  6018   0021B2  0E01               	movlw	1
  6019   0021B4  ECFD  F023         	call	_white_Light
  6020   0021B8                     
  6021                           ;color.c: 174:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6022   0021B8  8680               	bsf	128,3,c	;volatile
  6023   0021BA  8E7C               	bsf	124,7,c	;volatile
  6024   0021BC                     l174:
  6025   0021BC  B48E               	btfsc	142,2,c	;volatile
  6026   0021BE  EFE3  F010         	goto	u3841
  6027   0021C2  EFE5  F010         	goto	u3840
  6028   0021C6                     u3841:
  6029   0021C6  EFDE  F010         	goto	l174
  6030   0021CA                     u3840:
  6031   0021CA                     
  6032                           ;color.c: 177:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6033   0021CA  9680               	bcf	128,3,c	;volatile
  6034   0021CC  9E7C               	bcf	124,7,c	;volatile
  6035   0021CE                     
  6036                           ;color.c: 178:     color_read(RGBC);
  6037   0021CE  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6038   0021D2  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6039   0021D6  ECC0  F01A         	call	_color_read	;wreg free
  6040   0021DA                     
  6041                           ;color.c: 179:     rgb_2_hsv(*RGBC, HSV);
  6042   0021DA  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6043   0021DE  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6044   0021E2  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6045   0021E6  0E07               	movlw	7
  6046   0021E8                     u3851:
  6047   0021E8  CFDB FFEB          	movff	plusw2,plusw0
  6048   0021EC  06E8               	decf	wreg,f,c
  6049   0021EE  E2FC               	bc	u3851
  6050   0021F0  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6051   0021F4  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6052   0021F8  ECB7  F013         	call	_rgb_2_hsv	;wreg free
  6053   0021FC                     
  6054                           ;color.c: 180:     red->H = HSV->H;
  6055   0021FC  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6056   002200  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6057   002204  C104  FFE1         	movff	color_calibration@red,fsr1l
  6058   002208  C105  FFE2         	movff	color_calibration@red+1,fsr1h
  6059   00220C  CFDE FFE6          	movff	postinc2,postinc1
  6060   002210  CFDD FFE5          	movff	postdec2,postdec1
  6061   002214                     
  6062                           ;color.c: 181:     red->S = HSV->S;
  6063   002214  0101               	movlb	1	; () banked
  6064   002216  EE20 F002          	lfsr	2,2
  6065   00221A  5102               	movf	color_calibration@HSV& (0+255),w,b
  6066   00221C  26D9               	addwf	fsr2l,f,c
  6067   00221E  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6068   002220  22DA               	addwfc	fsr2h,f,c
  6069   002222  EE10 F002          	lfsr	1,2
  6070   002226  5104               	movf	color_calibration@red& (0+255),w,b
  6071   002228  26E1               	addwf	fsr1l,f,c
  6072   00222A  5105               	movf	(color_calibration@red+1)& (0+255),w,b
  6073   00222C  22E2               	addwfc	fsr1h,f,c
  6074   00222E  CFDE FFE6          	movff	postinc2,postinc1
  6075   002232  CFDD FFE5          	movff	postdec2,postdec1
  6076   002236                     
  6077                           ; BSR set to: 1
  6078                           ;color.c: 182:     red->V = HSV->V;
  6079   002236  EE20 F004          	lfsr	2,4
  6080   00223A  5102               	movf	color_calibration@HSV& (0+255),w,b
  6081   00223C  26D9               	addwf	fsr2l,f,c
  6082   00223E  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6083   002240  22DA               	addwfc	fsr2h,f,c
  6084   002242  EE10 F004          	lfsr	1,4
  6085   002246  5104               	movf	color_calibration@red& (0+255),w,b
  6086   002248  26E1               	addwf	fsr1l,f,c
  6087   00224A  5105               	movf	(color_calibration@red+1)& (0+255),w,b
  6088   00224C  22E2               	addwfc	fsr1h,f,c
  6089   00224E  CFDE FFE6          	movff	postinc2,postinc1
  6090   002252  CFDD FFE5          	movff	postdec2,postdec1
  6091   002256                     
  6092                           ; BSR set to: 1
  6093                           ;color.c: 184:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6094   002256  0E29               	movlw	41
  6095   002258  6E3D               	movwf	(??_color_calibration+1)^0,c
  6096   00225A  0E96               	movlw	150
  6097   00225C  6E3C               	movwf	??_color_calibration^0,c
  6098   00225E  0E7F               	movlw	127
  6099   002260                     u5307:
  6100   002260  2EE8               	decfsz	wreg,f,c
  6101   002262  D7FE               	bra	u5307
  6102   002264  2E3C               	decfsz	??_color_calibration^0,f,c
  6103   002266  D7FC               	bra	u5307
  6104   002268  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6105   00226A  D7FA               	bra	u5307
  6106   00226C  0000               	nop	
  6107   00226E                     
  6108                           ;color.c: 185:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6109   00226E  8680               	bsf	128,3,c	;volatile
  6110   002270  8E7C               	bsf	124,7,c	;volatile
  6111   002272                     l177:
  6112   002272  B48E               	btfsc	142,2,c	;volatile
  6113   002274  EF3E  F011         	goto	u3861
  6114   002278  EF40  F011         	goto	u3860
  6115   00227C                     u3861:
  6116   00227C  EF39  F011         	goto	l177
  6117   002280                     u3860:
  6118   002280                     
  6119                           ;color.c: 188:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6120   002280  9680               	bcf	128,3,c	;volatile
  6121   002282  9E7C               	bcf	124,7,c	;volatile
  6122   002284                     
  6123                           ;color.c: 189:     color_read(RGBC);
  6124   002284  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6125   002288  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6126   00228C  ECC0  F01A         	call	_color_read	;wreg free
  6127   002290                     
  6128                           ;color.c: 190:     rgb_2_hsv(*RGBC, HSV);
  6129   002290  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6130   002294  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6131   002298  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6132   00229C  0E07               	movlw	7
  6133   00229E                     u3871:
  6134   00229E  CFDB FFEB          	movff	plusw2,plusw0
  6135   0022A2  06E8               	decf	wreg,f,c
  6136   0022A4  E2FC               	bc	u3871
  6137   0022A6  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6138   0022AA  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6139   0022AE  ECB7  F013         	call	_rgb_2_hsv	;wreg free
  6140   0022B2                     
  6141                           ;color.c: 191:     green->H = HSV->H;
  6142   0022B2  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6143   0022B6  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6144   0022BA  C106  FFE1         	movff	color_calibration@green,fsr1l
  6145   0022BE  C107  FFE2         	movff	color_calibration@green+1,fsr1h
  6146   0022C2  CFDE FFE6          	movff	postinc2,postinc1
  6147   0022C6  CFDD FFE5          	movff	postdec2,postdec1
  6148   0022CA                     
  6149                           ;color.c: 192:     green->S = HSV->S;
  6150   0022CA  0101               	movlb	1	; () banked
  6151   0022CC  EE20 F002          	lfsr	2,2
  6152   0022D0  5102               	movf	color_calibration@HSV& (0+255),w,b
  6153   0022D2  26D9               	addwf	fsr2l,f,c
  6154   0022D4  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6155   0022D6  22DA               	addwfc	fsr2h,f,c
  6156   0022D8  EE10 F002          	lfsr	1,2
  6157   0022DC  5106               	movf	color_calibration@green& (0+255),w,b
  6158   0022DE  26E1               	addwf	fsr1l,f,c
  6159   0022E0  5107               	movf	(color_calibration@green+1)& (0+255),w,b
  6160   0022E2  22E2               	addwfc	fsr1h,f,c
  6161   0022E4  CFDE FFE6          	movff	postinc2,postinc1
  6162   0022E8  CFDD FFE5          	movff	postdec2,postdec1
  6163   0022EC                     
  6164                           ; BSR set to: 1
  6165                           ;color.c: 193:     green->V = HSV->V;
  6166   0022EC  EE20 F004          	lfsr	2,4
  6167   0022F0  5102               	movf	color_calibration@HSV& (0+255),w,b
  6168   0022F2  26D9               	addwf	fsr2l,f,c
  6169   0022F4  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6170   0022F6  22DA               	addwfc	fsr2h,f,c
  6171   0022F8  EE10 F004          	lfsr	1,4
  6172   0022FC  5106               	movf	color_calibration@green& (0+255),w,b
  6173   0022FE  26E1               	addwf	fsr1l,f,c
  6174   002300  5107               	movf	(color_calibration@green+1)& (0+255),w,b
  6175   002302  22E2               	addwfc	fsr1h,f,c
  6176   002304  CFDE FFE6          	movff	postinc2,postinc1
  6177   002308  CFDD FFE5          	movff	postdec2,postdec1
  6178   00230C                     
  6179                           ; BSR set to: 1
  6180                           ;color.c: 195:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6181   00230C  0E29               	movlw	41
  6182   00230E  6E3D               	movwf	(??_color_calibration+1)^0,c
  6183   002310  0E96               	movlw	150
  6184   002312  6E3C               	movwf	??_color_calibration^0,c
  6185   002314  0E7F               	movlw	127
  6186   002316                     u5317:
  6187   002316  2EE8               	decfsz	wreg,f,c
  6188   002318  D7FE               	bra	u5317
  6189   00231A  2E3C               	decfsz	??_color_calibration^0,f,c
  6190   00231C  D7FC               	bra	u5317
  6191   00231E  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6192   002320  D7FA               	bra	u5317
  6193   002322  0000               	nop	
  6194   002324                     
  6195                           ;color.c: 196:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6196   002324  8680               	bsf	128,3,c	;volatile
  6197   002326  8E7C               	bsf	124,7,c	;volatile
  6198   002328                     l180:
  6199   002328  B48E               	btfsc	142,2,c	;volatile
  6200   00232A  EF99  F011         	goto	u3881
  6201   00232E  EF9B  F011         	goto	u3880
  6202   002332                     u3881:
  6203   002332  EF94  F011         	goto	l180
  6204   002336                     u3880:
  6205   002336                     
  6206                           ;color.c: 199:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6207   002336  9680               	bcf	128,3,c	;volatile
  6208   002338  9E7C               	bcf	124,7,c	;volatile
  6209   00233A                     
  6210                           ;color.c: 200:     color_read(RGBC);
  6211   00233A  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6212   00233E  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6213   002342  ECC0  F01A         	call	_color_read	;wreg free
  6214   002346                     
  6215                           ;color.c: 201:     rgb_2_hsv(*RGBC, HSV);
  6216   002346  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6217   00234A  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6218   00234E  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6219   002352  0E07               	movlw	7
  6220   002354                     u3891:
  6221   002354  CFDB FFEB          	movff	plusw2,plusw0
  6222   002358  06E8               	decf	wreg,f,c
  6223   00235A  E2FC               	bc	u3891
  6224   00235C  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6225   002360  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6226   002364  ECB7  F013         	call	_rgb_2_hsv	;wreg free
  6227   002368                     
  6228                           ;color.c: 202:     blue->H = HSV->H;
  6229   002368  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6230   00236C  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6231   002370  C108  FFE1         	movff	color_calibration@blue,fsr1l
  6232   002374  C109  FFE2         	movff	color_calibration@blue+1,fsr1h
  6233   002378  CFDE FFE6          	movff	postinc2,postinc1
  6234   00237C  CFDD FFE5          	movff	postdec2,postdec1
  6235   002380                     
  6236                           ;color.c: 203:     blue->S = HSV->S;
  6237   002380  0101               	movlb	1	; () banked
  6238   002382  EE20 F002          	lfsr	2,2
  6239   002386  5102               	movf	color_calibration@HSV& (0+255),w,b
  6240   002388  26D9               	addwf	fsr2l,f,c
  6241   00238A  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6242   00238C  22DA               	addwfc	fsr2h,f,c
  6243   00238E  EE10 F002          	lfsr	1,2
  6244   002392  5108               	movf	color_calibration@blue& (0+255),w,b
  6245   002394  26E1               	addwf	fsr1l,f,c
  6246   002396  5109               	movf	(color_calibration@blue+1)& (0+255),w,b
  6247   002398  22E2               	addwfc	fsr1h,f,c
  6248   00239A  CFDE FFE6          	movff	postinc2,postinc1
  6249   00239E  CFDD FFE5          	movff	postdec2,postdec1
  6250   0023A2                     
  6251                           ; BSR set to: 1
  6252                           ;color.c: 204:     blue->V = HSV->V;
  6253   0023A2  EE20 F004          	lfsr	2,4
  6254   0023A6  5102               	movf	color_calibration@HSV& (0+255),w,b
  6255   0023A8  26D9               	addwf	fsr2l,f,c
  6256   0023AA  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6257   0023AC  22DA               	addwfc	fsr2h,f,c
  6258   0023AE  EE10 F004          	lfsr	1,4
  6259   0023B2  5108               	movf	color_calibration@blue& (0+255),w,b
  6260   0023B4  26E1               	addwf	fsr1l,f,c
  6261   0023B6  5109               	movf	(color_calibration@blue+1)& (0+255),w,b
  6262   0023B8  22E2               	addwfc	fsr1h,f,c
  6263   0023BA  CFDE FFE6          	movff	postinc2,postinc1
  6264   0023BE  CFDD FFE5          	movff	postdec2,postdec1
  6265   0023C2                     
  6266                           ; BSR set to: 1
  6267                           ;color.c: 206:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6268   0023C2  0E29               	movlw	41
  6269   0023C4  6E3D               	movwf	(??_color_calibration+1)^0,c
  6270   0023C6  0E96               	movlw	150
  6271   0023C8  6E3C               	movwf	??_color_calibration^0,c
  6272   0023CA  0E7F               	movlw	127
  6273   0023CC                     u5327:
  6274   0023CC  2EE8               	decfsz	wreg,f,c
  6275   0023CE  D7FE               	bra	u5327
  6276   0023D0  2E3C               	decfsz	??_color_calibration^0,f,c
  6277   0023D2  D7FC               	bra	u5327
  6278   0023D4  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6279   0023D6  D7FA               	bra	u5327
  6280   0023D8  0000               	nop	
  6281   0023DA                     
  6282                           ;color.c: 207:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6283   0023DA  8680               	bsf	128,3,c	;volatile
  6284   0023DC  8E7C               	bsf	124,7,c	;volatile
  6285   0023DE                     l183:
  6286   0023DE  B48E               	btfsc	142,2,c	;volatile
  6287   0023E0  EFF4  F011         	goto	u3901
  6288   0023E4  EFF6  F011         	goto	u3900
  6289   0023E8                     u3901:
  6290   0023E8  EFEF  F011         	goto	l183
  6291   0023EC                     u3900:
  6292   0023EC                     
  6293                           ;color.c: 210:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6294   0023EC  9680               	bcf	128,3,c	;volatile
  6295   0023EE  9E7C               	bcf	124,7,c	;volatile
  6296   0023F0                     
  6297                           ;color.c: 211:     color_read(RGBC);
  6298   0023F0  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6299   0023F4  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6300   0023F8  ECC0  F01A         	call	_color_read	;wreg free
  6301   0023FC                     
  6302                           ;color.c: 212:     rgb_2_hsv(*RGBC, HSV);
  6303   0023FC  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6304   002400  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6305   002404  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6306   002408  0E07               	movlw	7
  6307   00240A                     u3911:
  6308   00240A  CFDB FFEB          	movff	plusw2,plusw0
  6309   00240E  06E8               	decf	wreg,f,c
  6310   002410  E2FC               	bc	u3911
  6311   002412  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6312   002416  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6313   00241A  ECB7  F013         	call	_rgb_2_hsv	;wreg free
  6314   00241E                     
  6315                           ;color.c: 213:     yellow->H = HSV->H;
  6316   00241E  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6317   002422  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6318   002426  C10A  FFE1         	movff	color_calibration@yellow,fsr1l
  6319   00242A  C10B  FFE2         	movff	color_calibration@yellow+1,fsr1h
  6320   00242E  CFDE FFE6          	movff	postinc2,postinc1
  6321   002432  CFDD FFE5          	movff	postdec2,postdec1
  6322   002436                     
  6323                           ;color.c: 214:     yellow->S = HSV->S;
  6324   002436  0101               	movlb	1	; () banked
  6325   002438  EE20 F002          	lfsr	2,2
  6326   00243C  5102               	movf	color_calibration@HSV& (0+255),w,b
  6327   00243E  26D9               	addwf	fsr2l,f,c
  6328   002440  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6329   002442  22DA               	addwfc	fsr2h,f,c
  6330   002444  EE10 F002          	lfsr	1,2
  6331   002448  510A               	movf	color_calibration@yellow& (0+255),w,b
  6332   00244A  26E1               	addwf	fsr1l,f,c
  6333   00244C  510B               	movf	(color_calibration@yellow+1)& (0+255),w,b
  6334   00244E  22E2               	addwfc	fsr1h,f,c
  6335   002450  CFDE FFE6          	movff	postinc2,postinc1
  6336   002454  CFDD FFE5          	movff	postdec2,postdec1
  6337   002458                     
  6338                           ; BSR set to: 1
  6339                           ;color.c: 215:     yellow->V = HSV->V;
  6340   002458  EE20 F004          	lfsr	2,4
  6341   00245C  5102               	movf	color_calibration@HSV& (0+255),w,b
  6342   00245E  26D9               	addwf	fsr2l,f,c
  6343   002460  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6344   002462  22DA               	addwfc	fsr2h,f,c
  6345   002464  EE10 F004          	lfsr	1,4
  6346   002468  510A               	movf	color_calibration@yellow& (0+255),w,b
  6347   00246A  26E1               	addwf	fsr1l,f,c
  6348   00246C  510B               	movf	(color_calibration@yellow+1)& (0+255),w,b
  6349   00246E  22E2               	addwfc	fsr1h,f,c
  6350   002470  CFDE FFE6          	movff	postinc2,postinc1
  6351   002474  CFDD FFE5          	movff	postdec2,postdec1
  6352   002478                     
  6353                           ; BSR set to: 1
  6354                           ;color.c: 217:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6355   002478  0E29               	movlw	41
  6356   00247A  6E3D               	movwf	(??_color_calibration+1)^0,c
  6357   00247C  0E96               	movlw	150
  6358   00247E  6E3C               	movwf	??_color_calibration^0,c
  6359   002480  0E7F               	movlw	127
  6360   002482                     u5337:
  6361   002482  2EE8               	decfsz	wreg,f,c
  6362   002484  D7FE               	bra	u5337
  6363   002486  2E3C               	decfsz	??_color_calibration^0,f,c
  6364   002488  D7FC               	bra	u5337
  6365   00248A  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6366   00248C  D7FA               	bra	u5337
  6367   00248E  0000               	nop	
  6368   002490                     
  6369                           ;color.c: 218:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6370   002490  8680               	bsf	128,3,c	;volatile
  6371   002492  8E7C               	bsf	124,7,c	;volatile
  6372   002494                     l186:
  6373   002494  B48E               	btfsc	142,2,c	;volatile
  6374   002496  EF4F  F012         	goto	u3921
  6375   00249A  EF51  F012         	goto	u3920
  6376   00249E                     u3921:
  6377   00249E  EF4A  F012         	goto	l186
  6378   0024A2                     u3920:
  6379   0024A2                     
  6380                           ;color.c: 221:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6381   0024A2  9680               	bcf	128,3,c	;volatile
  6382   0024A4  9E7C               	bcf	124,7,c	;volatile
  6383   0024A6                     
  6384                           ;color.c: 222:     color_read(RGBC);
  6385   0024A6  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6386   0024AA  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6387   0024AE  ECC0  F01A         	call	_color_read	;wreg free
  6388   0024B2                     
  6389                           ;color.c: 223:     rgb_2_hsv(*RGBC, HSV);
  6390   0024B2  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6391   0024B6  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6392   0024BA  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6393   0024BE  0E07               	movlw	7
  6394   0024C0                     u3931:
  6395   0024C0  CFDB FFEB          	movff	plusw2,plusw0
  6396   0024C4  06E8               	decf	wreg,f,c
  6397   0024C6  E2FC               	bc	u3931
  6398   0024C8  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6399   0024CC  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6400   0024D0  ECB7  F013         	call	_rgb_2_hsv	;wreg free
  6401   0024D4                     
  6402                           ;color.c: 224:     pink->H = HSV->H;
  6403   0024D4  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6404   0024D8  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6405   0024DC  C10C  FFE1         	movff	color_calibration@pink,fsr1l
  6406   0024E0  C10D  FFE2         	movff	color_calibration@pink+1,fsr1h
  6407   0024E4  CFDE FFE6          	movff	postinc2,postinc1
  6408   0024E8  CFDD FFE5          	movff	postdec2,postdec1
  6409   0024EC                     
  6410                           ;color.c: 225:     pink->S = HSV->S;
  6411   0024EC  0101               	movlb	1	; () banked
  6412   0024EE  EE20 F002          	lfsr	2,2
  6413   0024F2  5102               	movf	color_calibration@HSV& (0+255),w,b
  6414   0024F4  26D9               	addwf	fsr2l,f,c
  6415   0024F6  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6416   0024F8  22DA               	addwfc	fsr2h,f,c
  6417   0024FA  EE10 F002          	lfsr	1,2
  6418   0024FE  510C               	movf	color_calibration@pink& (0+255),w,b
  6419   002500  26E1               	addwf	fsr1l,f,c
  6420   002502  510D               	movf	(color_calibration@pink+1)& (0+255),w,b
  6421   002504  22E2               	addwfc	fsr1h,f,c
  6422   002506  CFDE FFE6          	movff	postinc2,postinc1
  6423   00250A  CFDD FFE5          	movff	postdec2,postdec1
  6424   00250E                     
  6425                           ; BSR set to: 1
  6426                           ;color.c: 226:     pink->V = HSV->V;
  6427   00250E  EE20 F004          	lfsr	2,4
  6428   002512  5102               	movf	color_calibration@HSV& (0+255),w,b
  6429   002514  26D9               	addwf	fsr2l,f,c
  6430   002516  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6431   002518  22DA               	addwfc	fsr2h,f,c
  6432   00251A  EE10 F004          	lfsr	1,4
  6433   00251E  510C               	movf	color_calibration@pink& (0+255),w,b
  6434   002520  26E1               	addwf	fsr1l,f,c
  6435   002522  510D               	movf	(color_calibration@pink+1)& (0+255),w,b
  6436   002524  22E2               	addwfc	fsr1h,f,c
  6437   002526  CFDE FFE6          	movff	postinc2,postinc1
  6438   00252A  CFDD FFE5          	movff	postdec2,postdec1
  6439   00252E                     
  6440                           ; BSR set to: 1
  6441                           ;color.c: 228:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6442   00252E  0E29               	movlw	41
  6443   002530  6E3D               	movwf	(??_color_calibration+1)^0,c
  6444   002532  0E96               	movlw	150
  6445   002534  6E3C               	movwf	??_color_calibration^0,c
  6446   002536  0E7F               	movlw	127
  6447   002538                     u5347:
  6448   002538  2EE8               	decfsz	wreg,f,c
  6449   00253A  D7FE               	bra	u5347
  6450   00253C  2E3C               	decfsz	??_color_calibration^0,f,c
  6451   00253E  D7FC               	bra	u5347
  6452   002540  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6453   002542  D7FA               	bra	u5347
  6454   002544  0000               	nop	
  6455   002546                     
  6456                           ;color.c: 229:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6457   002546  8680               	bsf	128,3,c	;volatile
  6458   002548  8E7C               	bsf	124,7,c	;volatile
  6459   00254A                     l189:
  6460   00254A  B48E               	btfsc	142,2,c	;volatile
  6461   00254C  EFAA  F012         	goto	u3941
  6462   002550  EFAC  F012         	goto	u3940
  6463   002554                     u3941:
  6464   002554  EFA5  F012         	goto	l189
  6465   002558                     u3940:
  6466   002558                     
  6467                           ;color.c: 232:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6468   002558  9680               	bcf	128,3,c	;volatile
  6469   00255A  9E7C               	bcf	124,7,c	;volatile
  6470   00255C                     
  6471                           ;color.c: 233:     color_read(RGBC);
  6472   00255C  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6473   002560  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6474   002564  ECC0  F01A         	call	_color_read	;wreg free
  6475   002568                     
  6476                           ;color.c: 234:     rgb_2_hsv(*RGBC, HSV);
  6477   002568  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6478   00256C  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6479   002570  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6480   002574  0E07               	movlw	7
  6481   002576                     u3951:
  6482   002576  CFDB FFEB          	movff	plusw2,plusw0
  6483   00257A  06E8               	decf	wreg,f,c
  6484   00257C  E2FC               	bc	u3951
  6485   00257E  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6486   002582  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6487   002586  ECB7  F013         	call	_rgb_2_hsv	;wreg free
  6488   00258A                     
  6489                           ;color.c: 235:     orange->H = HSV->H;
  6490   00258A  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6491   00258E  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6492   002592  C10E  FFE1         	movff	color_calibration@orange,fsr1l
  6493   002596  C10F  FFE2         	movff	color_calibration@orange+1,fsr1h
  6494   00259A  CFDE FFE6          	movff	postinc2,postinc1
  6495   00259E  CFDD FFE5          	movff	postdec2,postdec1
  6496   0025A2                     
  6497                           ;color.c: 236:     orange->S = HSV->S;
  6498   0025A2  0101               	movlb	1	; () banked
  6499   0025A4  EE20 F002          	lfsr	2,2
  6500   0025A8  5102               	movf	color_calibration@HSV& (0+255),w,b
  6501   0025AA  26D9               	addwf	fsr2l,f,c
  6502   0025AC  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6503   0025AE  22DA               	addwfc	fsr2h,f,c
  6504   0025B0  EE10 F002          	lfsr	1,2
  6505   0025B4  510E               	movf	color_calibration@orange& (0+255),w,b
  6506   0025B6  26E1               	addwf	fsr1l,f,c
  6507   0025B8  510F               	movf	(color_calibration@orange+1)& (0+255),w,b
  6508   0025BA  22E2               	addwfc	fsr1h,f,c
  6509   0025BC  CFDE FFE6          	movff	postinc2,postinc1
  6510   0025C0  CFDD FFE5          	movff	postdec2,postdec1
  6511   0025C4                     
  6512                           ; BSR set to: 1
  6513                           ;color.c: 237:     orange->V = HSV->V;
  6514   0025C4  EE20 F004          	lfsr	2,4
  6515   0025C8  5102               	movf	color_calibration@HSV& (0+255),w,b
  6516   0025CA  26D9               	addwf	fsr2l,f,c
  6517   0025CC  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6518   0025CE  22DA               	addwfc	fsr2h,f,c
  6519   0025D0  EE10 F004          	lfsr	1,4
  6520   0025D4  510E               	movf	color_calibration@orange& (0+255),w,b
  6521   0025D6  26E1               	addwf	fsr1l,f,c
  6522   0025D8  510F               	movf	(color_calibration@orange+1)& (0+255),w,b
  6523   0025DA  22E2               	addwfc	fsr1h,f,c
  6524   0025DC  CFDE FFE6          	movff	postinc2,postinc1
  6525   0025E0  CFDD FFE5          	movff	postdec2,postdec1
  6526   0025E4                     
  6527                           ; BSR set to: 1
  6528                           ;color.c: 239:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6529   0025E4  0E29               	movlw	41
  6530   0025E6  6E3D               	movwf	(??_color_calibration+1)^0,c
  6531   0025E8  0E96               	movlw	150
  6532   0025EA  6E3C               	movwf	??_color_calibration^0,c
  6533   0025EC  0E7F               	movlw	127
  6534   0025EE                     u5357:
  6535   0025EE  2EE8               	decfsz	wreg,f,c
  6536   0025F0  D7FE               	bra	u5357
  6537   0025F2  2E3C               	decfsz	??_color_calibration^0,f,c
  6538   0025F4  D7FC               	bra	u5357
  6539   0025F6  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6540   0025F8  D7FA               	bra	u5357
  6541   0025FA  0000               	nop	
  6542   0025FC                     
  6543                           ;color.c: 240:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6544   0025FC  8680               	bsf	128,3,c	;volatile
  6545   0025FE  8E7C               	bsf	124,7,c	;volatile
  6546   002600                     l192:
  6547   002600  B48E               	btfsc	142,2,c	;volatile
  6548   002602  EF05  F013         	goto	u3961
  6549   002606  EF07  F013         	goto	u3960
  6550   00260A                     u3961:
  6551   00260A  EF00  F013         	goto	l192
  6552   00260E                     u3960:
  6553   00260E                     
  6554                           ;color.c: 243:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6555   00260E  9680               	bcf	128,3,c	;volatile
  6556   002610  9E7C               	bcf	124,7,c	;volatile
  6557   002612                     
  6558                           ;color.c: 244:     color_read(RGBC);
  6559   002612  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6560   002616  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6561   00261A  ECC0  F01A         	call	_color_read	;wreg free
  6562   00261E                     
  6563                           ;color.c: 245:     rgb_2_hsv(*RGBC, HSV);
  6564   00261E  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6565   002622  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6566   002626  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6567   00262A  0E07               	movlw	7
  6568   00262C                     u3971:
  6569   00262C  CFDB FFEB          	movff	plusw2,plusw0
  6570   002630  06E8               	decf	wreg,f,c
  6571   002632  E2FC               	bc	u3971
  6572   002634  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6573   002638  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6574   00263C  ECB7  F013         	call	_rgb_2_hsv	;wreg free
  6575   002640                     
  6576                           ;color.c: 246:     lightblue->H = HSV->H;
  6577   002640  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6578   002644  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6579   002648  C110  FFE1         	movff	color_calibration@lightblue,fsr1l
  6580   00264C  C111  FFE2         	movff	color_calibration@lightblue+1,fsr1h
  6581   002650  CFDE FFE6          	movff	postinc2,postinc1
  6582   002654  CFDD FFE5          	movff	postdec2,postdec1
  6583   002658                     
  6584                           ;color.c: 247:     lightblue->S = HSV->S;
  6585   002658  0101               	movlb	1	; () banked
  6586   00265A  EE20 F002          	lfsr	2,2
  6587   00265E  5102               	movf	color_calibration@HSV& (0+255),w,b
  6588   002660  26D9               	addwf	fsr2l,f,c
  6589   002662  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6590   002664  22DA               	addwfc	fsr2h,f,c
  6591   002666  EE10 F002          	lfsr	1,2
  6592   00266A  5110               	movf	color_calibration@lightblue& (0+255),w,b
  6593   00266C  26E1               	addwf	fsr1l,f,c
  6594   00266E  5111               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  6595   002670  22E2               	addwfc	fsr1h,f,c
  6596   002672  CFDE FFE6          	movff	postinc2,postinc1
  6597   002676  CFDD FFE5          	movff	postdec2,postdec1
  6598   00267A                     
  6599                           ; BSR set to: 1
  6600                           ;color.c: 248:     lightblue->V = HSV->V;
  6601   00267A  EE20 F004          	lfsr	2,4
  6602   00267E  5102               	movf	color_calibration@HSV& (0+255),w,b
  6603   002680  26D9               	addwf	fsr2l,f,c
  6604   002682  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6605   002684  22DA               	addwfc	fsr2h,f,c
  6606   002686  EE10 F004          	lfsr	1,4
  6607   00268A  5110               	movf	color_calibration@lightblue& (0+255),w,b
  6608   00268C  26E1               	addwf	fsr1l,f,c
  6609   00268E  5111               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  6610   002690  22E2               	addwfc	fsr1h,f,c
  6611   002692  CFDE FFE6          	movff	postinc2,postinc1
  6612   002696  CFDD FFE5          	movff	postdec2,postdec1
  6613   00269A                     
  6614                           ; BSR set to: 1
  6615                           ;color.c: 250:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6616   00269A  0E29               	movlw	41
  6617   00269C  6E3D               	movwf	(??_color_calibration+1)^0,c
  6618   00269E  0E96               	movlw	150
  6619   0026A0  6E3C               	movwf	??_color_calibration^0,c
  6620   0026A2  0E7F               	movlw	127
  6621   0026A4                     u5367:
  6622   0026A4  2EE8               	decfsz	wreg,f,c
  6623   0026A6  D7FE               	bra	u5367
  6624   0026A8  2E3C               	decfsz	??_color_calibration^0,f,c
  6625   0026AA  D7FC               	bra	u5367
  6626   0026AC  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6627   0026AE  D7FA               	bra	u5367
  6628   0026B0  0000               	nop	
  6629   0026B2                     
  6630                           ;color.c: 251:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6631   0026B2  8680               	bsf	128,3,c	;volatile
  6632   0026B4  8E7C               	bsf	124,7,c	;volatile
  6633   0026B6                     l195:
  6634   0026B6  B48E               	btfsc	142,2,c	;volatile
  6635   0026B8  EF60  F013         	goto	u3981
  6636   0026BC  EF62  F013         	goto	u3980
  6637   0026C0                     u3981:
  6638   0026C0  EF5B  F013         	goto	l195
  6639   0026C4                     u3980:
  6640   0026C4                     
  6641                           ;color.c: 254:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6642   0026C4  9680               	bcf	128,3,c	;volatile
  6643   0026C6  9E7C               	bcf	124,7,c	;volatile
  6644   0026C8                     
  6645                           ;color.c: 255:     color_read(RGBC);
  6646   0026C8  C100  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6647   0026CC  C101  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6648   0026D0  ECC0  F01A         	call	_color_read	;wreg free
  6649   0026D4                     
  6650                           ;color.c: 256:     rgb_2_hsv(*RGBC, HSV);
  6651   0026D4  C100  FFD9         	movff	color_calibration@RGBC,fsr2l
  6652   0026D8  C101  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6653   0026DC  EE00  F026         	lfsr	0,rgb_2_hsv@RGBC
  6654   0026E0  0E07               	movlw	7
  6655   0026E2                     u3991:
  6656   0026E2  CFDB FFEB          	movff	plusw2,plusw0
  6657   0026E6  06E8               	decf	wreg,f,c
  6658   0026E8  E2FC               	bc	u3991
  6659   0026EA  C102  F02E         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  6660   0026EE  C103  F02F         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  6661   0026F2  ECB7  F013         	call	_rgb_2_hsv	;wreg free
  6662   0026F6                     
  6663                           ;color.c: 257:     white->H = HSV->H;
  6664   0026F6  C102  FFD9         	movff	color_calibration@HSV,fsr2l
  6665   0026FA  C103  FFDA         	movff	color_calibration@HSV+1,fsr2h
  6666   0026FE  C112  FFE1         	movff	color_calibration@white,fsr1l
  6667   002702  C113  FFE2         	movff	color_calibration@white+1,fsr1h
  6668   002706  CFDE FFE6          	movff	postinc2,postinc1
  6669   00270A  CFDD FFE5          	movff	postdec2,postdec1
  6670   00270E                     
  6671                           ;color.c: 258:     white->S = HSV->S;
  6672   00270E  0101               	movlb	1	; () banked
  6673   002710  EE20 F002          	lfsr	2,2
  6674   002714  5102               	movf	color_calibration@HSV& (0+255),w,b
  6675   002716  26D9               	addwf	fsr2l,f,c
  6676   002718  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6677   00271A  22DA               	addwfc	fsr2h,f,c
  6678   00271C  EE10 F002          	lfsr	1,2
  6679   002720  5112               	movf	color_calibration@white& (0+255),w,b
  6680   002722  26E1               	addwf	fsr1l,f,c
  6681   002724  5113               	movf	(color_calibration@white+1)& (0+255),w,b
  6682   002726  22E2               	addwfc	fsr1h,f,c
  6683   002728  CFDE FFE6          	movff	postinc2,postinc1
  6684   00272C  CFDD FFE5          	movff	postdec2,postdec1
  6685   002730                     
  6686                           ; BSR set to: 1
  6687                           ;color.c: 259:     white->V = HSV->V;
  6688   002730  EE20 F004          	lfsr	2,4
  6689   002734  5102               	movf	color_calibration@HSV& (0+255),w,b
  6690   002736  26D9               	addwf	fsr2l,f,c
  6691   002738  5103               	movf	(color_calibration@HSV+1)& (0+255),w,b
  6692   00273A  22DA               	addwfc	fsr2h,f,c
  6693   00273C  EE10 F004          	lfsr	1,4
  6694   002740  5112               	movf	color_calibration@white& (0+255),w,b
  6695   002742  26E1               	addwf	fsr1l,f,c
  6696   002744  5113               	movf	(color_calibration@white+1)& (0+255),w,b
  6697   002746  22E2               	addwfc	fsr1h,f,c
  6698   002748  CFDE FFE6          	movff	postinc2,postinc1
  6699   00274C  CFDD FFE5          	movff	postdec2,postdec1
  6700   002750                     
  6701                           ; BSR set to: 1
  6702                           ;color.c: 261:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6703   002750  0E29               	movlw	41
  6704   002752  6E3D               	movwf	(??_color_calibration+1)^0,c
  6705   002754  0E96               	movlw	150
  6706   002756  6E3C               	movwf	??_color_calibration^0,c
  6707   002758  0E7F               	movlw	127
  6708   00275A                     u5377:
  6709   00275A  2EE8               	decfsz	wreg,f,c
  6710   00275C  D7FE               	bra	u5377
  6711   00275E  2E3C               	decfsz	??_color_calibration^0,f,c
  6712   002760  D7FC               	bra	u5377
  6713   002762  2E3D               	decfsz	(??_color_calibration+1)^0,f,c
  6714   002764  D7FA               	bra	u5377
  6715   002766  0000               	nop	
  6716   002768                     
  6717                           ;color.c: 262:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6718   002768  8680               	bsf	128,3,c	;volatile
  6719   00276A  8E7C               	bsf	124,7,c	;volatile
  6720   00276C  0012               	return		;funcret
  6721   00276E                     __end_of_color_calibration:
  6722                           	callstack 0
  6723                           
  6724 ;; *************** function _white_Light *****************
  6725 ;; Defined at:
  6726 ;;		line 59 in file "color.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  state           1    wreg     unsigned char 
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;  state           1   11[COMRAM] unsigned char 
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  1    wreg      void 
  6733 ;; Registers used:
  6734 ;;		wreg, status,2
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6744 ;;Total ram usage:        1 bytes
  6745 ;; Hardware stack levels used: 1
  6746 ;; Hardware stack levels required when called: 5
  6747 ;; This function calls:
  6748 ;;		Nothing
  6749 ;; This function is called by:
  6750 ;;		_main
  6751 ;;		_color_calibration
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text17
  6756   0047FA                     __ptext17:
  6757                           	callstack 0
  6758   0047FA                     _white_Light:
  6759                           	callstack 25
  6760                           
  6761                           ;incstack = 0
  6762                           ;white_Light@state stored from wreg
  6763   0047FA  6E0C               	movwf	white_Light@state^0,c
  6764   0047FC                     
  6765                           ;color.c: 59: void white_Light(char state);color.c: 60: {;color.c: 61:     if (state){
  6766   0047FC  500C               	movf	white_Light@state^0,w,c
  6767   0047FE  B4D8               	btfsc	status,2,c
  6768   004800  EF04  F024         	goto	u3571
  6769   004804  EF06  F024         	goto	u3570
  6770   004808                     u3571:
  6771   004808  EF0B  F024         	goto	l144
  6772   00480C                     u3570:
  6773   00480C                     
  6774                           ;color.c: 62:         LATGbits.LATG0 = 1;
  6775   00480C  807F               	bsf	127,0,c	;volatile
  6776                           
  6777                           ;color.c: 63:         LATEbits.LATE7 = 1;
  6778   00480E  8E7D               	bsf	125,7,c	;volatile
  6779                           
  6780                           ;color.c: 64:         LATAbits.LATA3 = 1;
  6781   004810  8679               	bsf	121,3,c	;volatile
  6782                           
  6783                           ;color.c: 65:     }
  6784   004812  EF0E  F024         	goto	l146
  6785   004816                     l144:
  6786                           
  6787                           ;color.c: 67:         LATGbits.LATG0 = 0;
  6788   004816  907F               	bcf	127,0,c	;volatile
  6789                           
  6790                           ;color.c: 68:         LATEbits.LATE7 = 0;
  6791   004818  9E7D               	bcf	125,7,c	;volatile
  6792                           
  6793                           ;color.c: 69:         LATAbits.LATA3 = 0;
  6794   00481A  9679               	bcf	121,3,c	;volatile
  6795   00481C                     l146:
  6796   00481C  0012               	return		;funcret
  6797   00481E                     __end_of_white_Light:
  6798                           	callstack 0
  6799                           
  6800 ;; *************** function _rgb_2_hsv *****************
  6801 ;; Defined at:
  6802 ;;		line 276 in file "color.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  RGBC            8   37[COMRAM] struct RGBC_val
  6805 ;;  HSV             2   45[COMRAM] PTR struct HSV_val
  6806 ;;		 -> main@HSV(6), 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  diff            4   14[BANK0 ] unsigned long 
  6809 ;;  b               2   20[BANK0 ] unsigned int 
  6810 ;;  g               2   18[BANK0 ] unsigned int 
  6811 ;;  cmax            2   12[BANK0 ] unsigned int 
  6812 ;;  r               2   10[BANK0 ] unsigned int 
  6813 ;;  cmin            2    4[BANK0 ] unsigned int 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  1    wreg      void 
  6816 ;; Registers used:
  6817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6823 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6824 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6825 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6826 ;;      Totals:        22      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6827 ;;Total ram usage:       44 bytes
  6828 ;; Hardware stack levels used: 1
  6829 ;; Hardware stack levels required when called: 6
  6830 ;; This function calls:
  6831 ;;		___aldiv
  6832 ;;		___lldiv
  6833 ;;		___lmul
  6834 ;;		_max
  6835 ;;		_min
  6836 ;; This function is called by:
  6837 ;;		_main
  6838 ;;		_color_calibration
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text18
  6843   00276E                     __ptext18:
  6844                           	callstack 0
  6845   00276E                     _rgb_2_hsv:
  6846                           	callstack 24
  6847   00276E                     
  6848                           ;color.c: 279:     unsigned int r = (unsigned int)(RGBC.R*10000L/255);
  6849   00276E  C026  F00C         	movff	rgb_2_hsv@RGBC,___lmul@multiplier
  6850   002772  C027  F00D         	movff	rgb_2_hsv@RGBC+1,___lmul@multiplier+1
  6851   002776  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6852   002778  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6853   00277A  0E10               	movlw	16
  6854   00277C  6E10               	movwf	___lmul@multiplicand^0,c
  6855   00277E  0E27               	movlw	39
  6856   002780  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6857   002782  0E00               	movlw	0
  6858   002784  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6859   002786  0E00               	movlw	0
  6860   002788  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6861   00278A  EC60  F022         	call	___lmul	;wreg free
  6862   00278E  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6863   002792  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6864   002796  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6865   00279A  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6866   00279E  0EFF               	movlw	255
  6867   0027A0  6E1C               	movwf	___aldiv@divisor^0,c
  6868   0027A2  0E00               	movlw	0
  6869   0027A4  6E1D               	movwf	(___aldiv@divisor+1)^0,c
  6870   0027A6  0E00               	movlw	0
  6871   0027A8  6E1E               	movwf	(___aldiv@divisor+2)^0,c
  6872   0027AA  0E00               	movlw	0
  6873   0027AC  6E1F               	movwf	(___aldiv@divisor+3)^0,c
  6874   0027AE  EC34  F01F         	call	___aldiv	;wreg free
  6875   0027B2  C018  F0E2         	movff	?___aldiv,rgb_2_hsv@r
  6876   0027B6  C019  F0E3         	movff	?___aldiv+1,rgb_2_hsv@r+1
  6877                           
  6878                           ;color.c: 280:     unsigned int g = (unsigned int)(RGBC.G*10000L/255);
  6879   0027BA  C028  F00C         	movff	rgb_2_hsv@RGBC+2,___lmul@multiplier
  6880   0027BE  C029  F00D         	movff	rgb_2_hsv@RGBC+3,___lmul@multiplier+1
  6881   0027C2  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6882   0027C4  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6883   0027C6  0E10               	movlw	16
  6884   0027C8  6E10               	movwf	___lmul@multiplicand^0,c
  6885   0027CA  0E27               	movlw	39
  6886   0027CC  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6887   0027CE  0E00               	movlw	0
  6888   0027D0  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6889   0027D2  0E00               	movlw	0
  6890   0027D4  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6891   0027D6  EC60  F022         	call	___lmul	;wreg free
  6892   0027DA  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6893   0027DE  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6894   0027E2  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6895   0027E6  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6896   0027EA  0EFF               	movlw	255
  6897   0027EC  6E1C               	movwf	___aldiv@divisor^0,c
  6898   0027EE  0E00               	movlw	0
  6899   0027F0  6E1D               	movwf	(___aldiv@divisor+1)^0,c
  6900   0027F2  0E00               	movlw	0
  6901   0027F4  6E1E               	movwf	(___aldiv@divisor+2)^0,c
  6902   0027F6  0E00               	movlw	0
  6903   0027F8  6E1F               	movwf	(___aldiv@divisor+3)^0,c
  6904   0027FA  EC34  F01F         	call	___aldiv	;wreg free
  6905   0027FE  C018  F0EA         	movff	?___aldiv,rgb_2_hsv@g
  6906   002802  C019  F0EB         	movff	?___aldiv+1,rgb_2_hsv@g+1
  6907                           
  6908                           ;color.c: 281:     unsigned int b = (unsigned int)(RGBC.B*10000L/255);
  6909   002806  C02A  F00C         	movff	rgb_2_hsv@RGBC+4,___lmul@multiplier
  6910   00280A  C02B  F00D         	movff	rgb_2_hsv@RGBC+5,___lmul@multiplier+1
  6911   00280E  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6912   002810  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6913   002812  0E10               	movlw	16
  6914   002814  6E10               	movwf	___lmul@multiplicand^0,c
  6915   002816  0E27               	movlw	39
  6916   002818  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6917   00281A  0E00               	movlw	0
  6918   00281C  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6919   00281E  0E00               	movlw	0
  6920   002820  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6921   002822  EC60  F022         	call	___lmul	;wreg free
  6922   002826  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6923   00282A  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6924   00282E  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6925   002832  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6926   002836  0EFF               	movlw	255
  6927   002838  6E1C               	movwf	___aldiv@divisor^0,c
  6928   00283A  0E00               	movlw	0
  6929   00283C  6E1D               	movwf	(___aldiv@divisor+1)^0,c
  6930   00283E  0E00               	movlw	0
  6931   002840  6E1E               	movwf	(___aldiv@divisor+2)^0,c
  6932   002842  0E00               	movlw	0
  6933   002844  6E1F               	movwf	(___aldiv@divisor+3)^0,c
  6934   002846  EC34  F01F         	call	___aldiv	;wreg free
  6935   00284A  C018  F0EC         	movff	?___aldiv,rgb_2_hsv@b
  6936   00284E  C019  F0ED         	movff	?___aldiv+1,rgb_2_hsv@b+1
  6937                           
  6938                           ;color.c: 284:     unsigned int cmax = max(r, max(g, b));
  6939   002852  C0EA  F00C         	movff	rgb_2_hsv@g,max@a
  6940   002856  C0EB  F00D         	movff	rgb_2_hsv@g+1,max@a+1
  6941   00285A  C0EC  F00E         	movff	rgb_2_hsv@b,max@b
  6942   00285E  C0ED  F00F         	movff	rgb_2_hsv@b+1,max@b+1
  6943   002862  EC5D  F023         	call	_max	;wreg free
  6944   002866  C00C  F0DE         	movff	?_max,_rgb_2_hsv$3530
  6945   00286A  C00D  F0DF         	movff	?_max+1,_rgb_2_hsv$3530+1
  6946                           
  6947                           ;color.c: 284:     unsigned int cmax = max(r, max(g, b));
  6948   00286E  C0E2  F00C         	movff	rgb_2_hsv@r,max@a
  6949   002872  C0E3  F00D         	movff	rgb_2_hsv@r+1,max@a+1
  6950   002876  C0DE  F00E         	movff	_rgb_2_hsv$3530,max@b
  6951   00287A  C0DF  F00F         	movff	_rgb_2_hsv$3530+1,max@b+1
  6952   00287E  EC5D  F023         	call	_max	;wreg free
  6953   002882  C00C  F0E4         	movff	?_max,rgb_2_hsv@cmax
  6954   002886  C00D  F0E5         	movff	?_max+1,rgb_2_hsv@cmax+1
  6955                           
  6956                           ;color.c: 285:     unsigned int cmin = min(r, min(g, b));
  6957   00288A  C0EA  F00C         	movff	rgb_2_hsv@g,min@a
  6958   00288E  C0EB  F00D         	movff	rgb_2_hsv@g+1,min@a+1
  6959   002892  C0EC  F00E         	movff	rgb_2_hsv@b,min@b
  6960   002896  C0ED  F00F         	movff	rgb_2_hsv@b+1,min@b+1
  6961   00289A  EC47  F023         	call	_min	;wreg free
  6962   00289E  C00C  F0E0         	movff	?_min,_rgb_2_hsv$3531
  6963   0028A2  C00D  F0E1         	movff	?_min+1,_rgb_2_hsv$3531+1
  6964                           
  6965                           ;color.c: 285:     unsigned int cmin = min(r, min(g, b));
  6966   0028A6  C0E2  F00C         	movff	rgb_2_hsv@r,min@a
  6967   0028AA  C0E3  F00D         	movff	rgb_2_hsv@r+1,min@a+1
  6968   0028AE  C0E0  F00E         	movff	_rgb_2_hsv$3531,min@b
  6969   0028B2  C0E1  F00F         	movff	_rgb_2_hsv$3531+1,min@b+1
  6970   0028B6  EC47  F023         	call	_min	;wreg free
  6971   0028BA  C00C  F0DC         	movff	?_min,rgb_2_hsv@cmin
  6972   0028BE  C00D  F0DD         	movff	?_min+1,rgb_2_hsv@cmin+1
  6973   0028C2                     
  6974                           ;color.c: 286:     unsigned long diff = cmax - cmin;
  6975   0028C2  0100               	movlb	0	; () banked
  6976   0028C4  51DC               	movf	rgb_2_hsv@cmin& (0+255),w,b
  6977   0028C6  5DE4               	subwf	rgb_2_hsv@cmax& (0+255),w,b
  6978   0028C8  6E30               	movwf	??_rgb_2_hsv^0,c
  6979   0028CA  51DD               	movf	(rgb_2_hsv@cmin+1)& (0+255),w,b
  6980   0028CC  59E5               	subwfb	(rgb_2_hsv@cmax+1)& (0+255),w,b
  6981   0028CE  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  6982   0028D0  C030  F0E6         	movff	??_rgb_2_hsv,rgb_2_hsv@diff
  6983   0028D4  C031  F0E7         	movff	??_rgb_2_hsv+1,rgb_2_hsv@diff+1
  6984   0028D8  6BE8               	clrf	(rgb_2_hsv@diff+2)& (0+255),b
  6985   0028DA  6BE9               	clrf	(rgb_2_hsv@diff+3)& (0+255),b
  6986   0028DC                     
  6987                           ; BSR set to: 0
  6988                           ;color.c: 289:     if (cmax == r){
  6989   0028DC  51E2               	movf	rgb_2_hsv@r& (0+255),w,b
  6990   0028DE  19E4               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  6991   0028E0  E107               	bnz	u3581
  6992   0028E2  51E3               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  6993   0028E4  19E5               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  6994   0028E6  A4D8               	btfss	status,2,c
  6995   0028E8  EF78  F014         	goto	u3581
  6996   0028EC  EF7A  F014         	goto	u3580
  6997   0028F0                     u3581:
  6998   0028F0  EF21  F015         	goto	l4470
  6999   0028F4                     u3580:
  7000   0028F4                     
  7001                           ; BSR set to: 0
  7002                           ;color.c: 290:         if (g > b){HSV->H = (unsigned int)((g-b)*6000L/diff);}
  7003   0028F4  51EA               	movf	rgb_2_hsv@g& (0+255),w,b
  7004   0028F6  5DEC               	subwf	rgb_2_hsv@b& (0+255),w,b
  7005   0028F8  51EB               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  7006   0028FA  59ED               	subwfb	(rgb_2_hsv@b+1)& (0+255),w,b
  7007   0028FC  B0D8               	btfsc	status,0,c
  7008   0028FE  EF83  F014         	goto	u3591
  7009   002902  EF85  F014         	goto	u3590
  7010   002906                     u3591:
  7011   002906  EFB7  F014         	goto	l4464
  7012   00290A                     u3590:
  7013   00290A                     
  7014                           ; BSR set to: 0
  7015   00290A  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  7016   00290C  5DEA               	subwf	rgb_2_hsv@g& (0+255),w,b
  7017   00290E  6E30               	movwf	??_rgb_2_hsv^0,c
  7018   002910  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  7019   002912  59EB               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  7020   002914  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  7021   002916  C030  F00C         	movff	??_rgb_2_hsv,___lmul@multiplier
  7022   00291A  C031  F00D         	movff	??_rgb_2_hsv+1,___lmul@multiplier+1
  7023   00291E  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  7024   002920  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  7025   002922  0E70               	movlw	112
  7026   002924  6E10               	movwf	___lmul@multiplicand^0,c
  7027   002926  0E17               	movlw	23
  7028   002928  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7029   00292A  0E00               	movlw	0
  7030   00292C  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7031   00292E  0E00               	movlw	0
  7032   002930  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7033   002932  EC60  F022         	call	___lmul	;wreg free
  7034   002936  C00C  F018         	movff	?___lmul,___lldiv@dividend
  7035   00293A  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  7036   00293E  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  7037   002942  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  7038   002946  C0E6  F01C         	movff	rgb_2_hsv@diff,___lldiv@divisor
  7039   00294A  C0E7  F01D         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  7040   00294E  C0E8  F01E         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  7041   002952  C0E9  F01F         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  7042   002956  EC12  F021         	call	___lldiv	;wreg free
  7043   00295A  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  7044   00295E  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  7045   002962  C018  FFDE         	movff	?___lldiv,postinc2
  7046   002966  C019  FFDD         	movff	?___lldiv+1,postdec2
  7047   00296A  EFD9  F015         	goto	l215
  7048   00296E                     l4464:
  7049                           
  7050                           ; BSR set to: 0
  7051   00296E  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  7052   002970  5DEA               	subwf	rgb_2_hsv@g& (0+255),w,b
  7053   002972  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  7054   002974  59EB               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  7055   002976  B0D8               	btfsc	status,0,c
  7056   002978  EFC0  F014         	goto	u3601
  7057   00297C  EFC2  F014         	goto	u3600
  7058   002980                     u3601:
  7059   002980  EFD9  F015         	goto	l215
  7060   002984                     u3600:
  7061   002984                     
  7062                           ; BSR set to: 0
  7063   002984  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  7064   002986  6E30               	movwf	??_rgb_2_hsv^0,c
  7065   002988  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  7066   00298A  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  7067   00298C  6A32               	clrf	(??_rgb_2_hsv+2)^0,c
  7068   00298E  6A33               	clrf	(??_rgb_2_hsv+3)^0,c
  7069   002990  C0E6  F00C         	movff	rgb_2_hsv@diff,___lmul@multiplier
  7070   002994  C0E7  F00D         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  7071   002998  C0E8  F00E         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  7072   00299C  C0E9  F00F         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  7073   0029A0  0E06               	movlw	6
  7074   0029A2  6E10               	movwf	___lmul@multiplicand^0,c
  7075   0029A4  0E00               	movlw	0
  7076   0029A6  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7077   0029A8  0E00               	movlw	0
  7078   0029AA  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7079   0029AC  0E00               	movlw	0
  7080   0029AE  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7081   0029B0  EC60  F022         	call	___lmul	;wreg free
  7082   0029B4  0100               	movlb	0	; () banked
  7083   0029B6  51EA               	movf	rgb_2_hsv@g& (0+255),w,b
  7084   0029B8  240C               	addwf	?___lmul^0,w,c
  7085   0029BA  6E34               	movwf	(??_rgb_2_hsv+4)^0,c
  7086   0029BC  51EB               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  7087   0029BE  200D               	addwfc	(?___lmul+1)^0,w,c
  7088   0029C0  6E35               	movwf	(??_rgb_2_hsv+5)^0,c
  7089   0029C2  0E00               	movlw	0
  7090   0029C4  200E               	addwfc	(?___lmul+2)^0,w,c
  7091   0029C6  6E36               	movwf	(??_rgb_2_hsv+6)^0,c
  7092   0029C8  0E00               	movlw	0
  7093   0029CA  200F               	addwfc	(?___lmul+3)^0,w,c
  7094   0029CC  6E37               	movwf	(??_rgb_2_hsv+7)^0,c
  7095   0029CE  5030               	movf	??_rgb_2_hsv^0,w,c
  7096   0029D0  5C34               	subwf	(??_rgb_2_hsv+4)^0,w,c
  7097   0029D2  6FD8               	movwf	_rgb_2_hsv$3532& (0+255),b
  7098   0029D4  5031               	movf	(??_rgb_2_hsv+1)^0,w,c
  7099   0029D6  5835               	subwfb	(??_rgb_2_hsv+5)^0,w,c
  7100   0029D8  6FD9               	movwf	(_rgb_2_hsv$3532+1)& (0+255),b
  7101   0029DA  5032               	movf	(??_rgb_2_hsv+2)^0,w,c
  7102   0029DC  5836               	subwfb	(??_rgb_2_hsv+6)^0,w,c
  7103   0029DE  6FDA               	movwf	(_rgb_2_hsv$3532+2)& (0+255),b
  7104   0029E0  5033               	movf	(??_rgb_2_hsv+3)^0,w,c
  7105   0029E2  5837               	subwfb	(??_rgb_2_hsv+7)^0,w,c
  7106   0029E4  6FDB               	movwf	(_rgb_2_hsv$3532+3)& (0+255),b
  7107   0029E6                     
  7108                           ; BSR set to: 0
  7109   0029E6  C0D8  F00C         	movff	_rgb_2_hsv$3532,___lmul@multiplier
  7110   0029EA  C0D9  F00D         	movff	_rgb_2_hsv$3532+1,___lmul@multiplier+1
  7111   0029EE  C0DA  F00E         	movff	_rgb_2_hsv$3532+2,___lmul@multiplier+2
  7112   0029F2  C0DB  F00F         	movff	_rgb_2_hsv$3532+3,___lmul@multiplier+3
  7113   0029F6  0E70               	movlw	112
  7114   0029F8  6E10               	movwf	___lmul@multiplicand^0,c
  7115   0029FA  0E17               	movlw	23
  7116   0029FC  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7117   0029FE  0E00               	movlw	0
  7118   002A00  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7119   002A02  0E00               	movlw	0
  7120   002A04  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7121   002A06  EC60  F022         	call	___lmul	;wreg free
  7122   002A0A  C00C  F018         	movff	?___lmul,___lldiv@dividend
  7123   002A0E  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  7124   002A12  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  7125   002A16  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  7126   002A1A  C0E6  F01C         	movff	rgb_2_hsv@diff,___lldiv@divisor
  7127   002A1E  C0E7  F01D         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  7128   002A22  C0E8  F01E         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  7129   002A26  C0E9  F01F         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  7130   002A2A  EC12  F021         	call	___lldiv	;wreg free
  7131   002A2E  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  7132   002A32  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  7133   002A36  C018  FFDE         	movff	?___lldiv,postinc2
  7134   002A3A  C019  FFDD         	movff	?___lldiv+1,postdec2
  7135   002A3E  EFD9  F015         	goto	l215
  7136   002A42                     l4470:
  7137                           
  7138                           ; BSR set to: 0
  7139   002A42  51EA               	movf	rgb_2_hsv@g& (0+255),w,b
  7140   002A44  19E4               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  7141   002A46  E107               	bnz	u3611
  7142   002A48  51EB               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  7143   002A4A  19E5               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  7144   002A4C  A4D8               	btfss	status,2,c
  7145   002A4E  EF2B  F015         	goto	u3611
  7146   002A52  EF2D  F015         	goto	u3610
  7147   002A56                     u3611:
  7148   002A56  EF7A  F015         	goto	l4474
  7149   002A5A                     u3610:
  7150   002A5A                     
  7151                           ; BSR set to: 0
  7152   002A5A  51E2               	movf	rgb_2_hsv@r& (0+255),w,b
  7153   002A5C  6E30               	movwf	??_rgb_2_hsv^0,c
  7154   002A5E  51E3               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  7155   002A60  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  7156   002A62  6A32               	clrf	(??_rgb_2_hsv+2)^0,c
  7157   002A64  6A33               	clrf	(??_rgb_2_hsv+3)^0,c
  7158   002A66  90D8               	bcf	status,0,c
  7159   002A68  35E6               	rlcf	rgb_2_hsv@diff& (0+255),w,b
  7160   002A6A  6E34               	movwf	(??_rgb_2_hsv+4)^0,c
  7161   002A6C  35E7               	rlcf	(rgb_2_hsv@diff+1)& (0+255),w,b
  7162   002A6E  6E35               	movwf	(??_rgb_2_hsv+5)^0,c
  7163   002A70  35E8               	rlcf	(rgb_2_hsv@diff+2)& (0+255),w,b
  7164   002A72  6E36               	movwf	(??_rgb_2_hsv+6)^0,c
  7165   002A74  35E9               	rlcf	(rgb_2_hsv@diff+3)& (0+255),w,b
  7166   002A76  6E37               	movwf	(??_rgb_2_hsv+7)^0,c
  7167   002A78  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  7168   002A7A  2434               	addwf	(??_rgb_2_hsv+4)^0,w,c
  7169   002A7C  6E38               	movwf	(??_rgb_2_hsv+8)^0,c
  7170   002A7E  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  7171   002A80  2035               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  7172   002A82  6E39               	movwf	(??_rgb_2_hsv+9)^0,c
  7173   002A84  0E00               	movlw	0
  7174   002A86  2036               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  7175   002A88  6E3A               	movwf	(??_rgb_2_hsv+10)^0,c
  7176   002A8A  0E00               	movlw	0
  7177   002A8C  2037               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  7178   002A8E  6E3B               	movwf	(??_rgb_2_hsv+11)^0,c
  7179   002A90  5030               	movf	??_rgb_2_hsv^0,w,c
  7180   002A92  5C38               	subwf	(??_rgb_2_hsv+8)^0,w,c
  7181   002A94  6E0C               	movwf	___lmul@multiplier^0,c
  7182   002A96  5031               	movf	(??_rgb_2_hsv+1)^0,w,c
  7183   002A98  5839               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  7184   002A9A  6E0D               	movwf	(___lmul@multiplier+1)^0,c
  7185   002A9C  5032               	movf	(??_rgb_2_hsv+2)^0,w,c
  7186   002A9E  583A               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  7187   002AA0  6E0E               	movwf	(___lmul@multiplier+2)^0,c
  7188   002AA2  5033               	movf	(??_rgb_2_hsv+3)^0,w,c
  7189   002AA4  583B               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  7190   002AA6  6E0F               	movwf	(___lmul@multiplier+3)^0,c
  7191   002AA8  0E70               	movlw	112
  7192   002AAA  6E10               	movwf	___lmul@multiplicand^0,c
  7193   002AAC  0E17               	movlw	23
  7194   002AAE  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7195   002AB0  0E00               	movlw	0
  7196   002AB2  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7197   002AB4  0E00               	movlw	0
  7198   002AB6  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7199   002AB8  EC60  F022         	call	___lmul	;wreg free
  7200   002ABC  C00C  F018         	movff	?___lmul,___lldiv@dividend
  7201   002AC0  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  7202   002AC4  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  7203   002AC8  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  7204   002ACC  C0E6  F01C         	movff	rgb_2_hsv@diff,___lldiv@divisor
  7205   002AD0  C0E7  F01D         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  7206   002AD4  C0E8  F01E         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  7207   002AD8  C0E9  F01F         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  7208   002ADC  EC12  F021         	call	___lldiv	;wreg free
  7209   002AE0  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  7210   002AE4  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  7211   002AE8  C018  FFDE         	movff	?___lldiv,postinc2
  7212   002AEC  C019  FFDD         	movff	?___lldiv+1,postdec2
  7213   002AF0  EFD9  F015         	goto	l215
  7214   002AF4                     l4474:
  7215                           
  7216                           ; BSR set to: 0
  7217   002AF4  51EC               	movf	rgb_2_hsv@b& (0+255),w,b
  7218   002AF6  19E4               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  7219   002AF8  E107               	bnz	u3621
  7220   002AFA  51ED               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  7221   002AFC  19E5               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  7222   002AFE  A4D8               	btfss	status,2,c
  7223   002B00  EF84  F015         	goto	u3621
  7224   002B04  EF86  F015         	goto	u3620
  7225   002B08                     u3621:
  7226   002B08  EFD9  F015         	goto	l215
  7227   002B0C                     u3620:
  7228   002B0C                     
  7229                           ; BSR set to: 0
  7230   002B0C  51EA               	movf	rgb_2_hsv@g& (0+255),w,b
  7231   002B0E  6E30               	movwf	??_rgb_2_hsv^0,c
  7232   002B10  51EB               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  7233   002B12  6E31               	movwf	(??_rgb_2_hsv+1)^0,c
  7234   002B14  6A32               	clrf	(??_rgb_2_hsv+2)^0,c
  7235   002B16  6A33               	clrf	(??_rgb_2_hsv+3)^0,c
  7236   002B18  C0E6  F034         	movff	rgb_2_hsv@diff,??_rgb_2_hsv+4
  7237   002B1C  C0E7  F035         	movff	rgb_2_hsv@diff+1,??_rgb_2_hsv+5
  7238   002B20  C0E8  F036         	movff	rgb_2_hsv@diff+2,??_rgb_2_hsv+6
  7239   002B24  C0E9  F037         	movff	rgb_2_hsv@diff+3,??_rgb_2_hsv+7
  7240   002B28  0E02               	movlw	2
  7241   002B2A                     u3635:
  7242   002B2A  90D8               	bcf	status,0,c
  7243   002B2C  3634               	rlcf	(??_rgb_2_hsv+4)^0,f,c
  7244   002B2E  3635               	rlcf	(??_rgb_2_hsv+5)^0,f,c
  7245   002B30  3636               	rlcf	(??_rgb_2_hsv+6)^0,f,c
  7246   002B32  3637               	rlcf	(??_rgb_2_hsv+7)^0,f,c
  7247   002B34  2EE8               	decfsz	wreg,f,c
  7248   002B36  EF95  F015         	goto	u3635
  7249   002B3A  51E2               	movf	rgb_2_hsv@r& (0+255),w,b
  7250   002B3C  2434               	addwf	(??_rgb_2_hsv+4)^0,w,c
  7251   002B3E  6E38               	movwf	(??_rgb_2_hsv+8)^0,c
  7252   002B40  51E3               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  7253   002B42  2035               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  7254   002B44  6E39               	movwf	(??_rgb_2_hsv+9)^0,c
  7255   002B46  0E00               	movlw	0
  7256   002B48  2036               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  7257   002B4A  6E3A               	movwf	(??_rgb_2_hsv+10)^0,c
  7258   002B4C  0E00               	movlw	0
  7259   002B4E  2037               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  7260   002B50  6E3B               	movwf	(??_rgb_2_hsv+11)^0,c
  7261   002B52  5030               	movf	??_rgb_2_hsv^0,w,c
  7262   002B54  5C38               	subwf	(??_rgb_2_hsv+8)^0,w,c
  7263   002B56  6E0C               	movwf	___lmul@multiplier^0,c
  7264   002B58  5031               	movf	(??_rgb_2_hsv+1)^0,w,c
  7265   002B5A  5839               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  7266   002B5C  6E0D               	movwf	(___lmul@multiplier+1)^0,c
  7267   002B5E  5032               	movf	(??_rgb_2_hsv+2)^0,w,c
  7268   002B60  583A               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  7269   002B62  6E0E               	movwf	(___lmul@multiplier+2)^0,c
  7270   002B64  5033               	movf	(??_rgb_2_hsv+3)^0,w,c
  7271   002B66  583B               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  7272   002B68  6E0F               	movwf	(___lmul@multiplier+3)^0,c
  7273   002B6A  0E70               	movlw	112
  7274   002B6C  6E10               	movwf	___lmul@multiplicand^0,c
  7275   002B6E  0E17               	movlw	23
  7276   002B70  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7277   002B72  0E00               	movlw	0
  7278   002B74  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7279   002B76  0E00               	movlw	0
  7280   002B78  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7281   002B7A  EC60  F022         	call	___lmul	;wreg free
  7282   002B7E  C00C  F018         	movff	?___lmul,___lldiv@dividend
  7283   002B82  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  7284   002B86  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  7285   002B8A  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  7286   002B8E  C0E6  F01C         	movff	rgb_2_hsv@diff,___lldiv@divisor
  7287   002B92  C0E7  F01D         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  7288   002B96  C0E8  F01E         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  7289   002B9A  C0E9  F01F         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  7290   002B9E  EC12  F021         	call	___lldiv	;wreg free
  7291   002BA2  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  7292   002BA6  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  7293   002BAA  C018  FFDE         	movff	?___lldiv,postinc2
  7294   002BAE  C019  FFDD         	movff	?___lldiv+1,postdec2
  7295   002BB2                     l215:
  7296                           
  7297                           ;color.c: 298:     HSV->S = (unsigned int)((diff * 10000)/cmax);
  7298   002BB2  C0E6  F00C         	movff	rgb_2_hsv@diff,___lmul@multiplier
  7299   002BB6  C0E7  F00D         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  7300   002BBA  C0E8  F00E         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  7301   002BBE  C0E9  F00F         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  7302   002BC2  0E10               	movlw	16
  7303   002BC4  6E10               	movwf	___lmul@multiplicand^0,c
  7304   002BC6  0E27               	movlw	39
  7305   002BC8  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7306   002BCA  0E00               	movlw	0
  7307   002BCC  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7308   002BCE  0E00               	movlw	0
  7309   002BD0  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7310   002BD2  EC60  F022         	call	___lmul	;wreg free
  7311   002BD6  C00C  F018         	movff	?___lmul,___lldiv@dividend
  7312   002BDA  C00D  F019         	movff	?___lmul+1,___lldiv@dividend+1
  7313   002BDE  C00E  F01A         	movff	?___lmul+2,___lldiv@dividend+2
  7314   002BE2  C00F  F01B         	movff	?___lmul+3,___lldiv@dividend+3
  7315   002BE6  C0E4  F01C         	movff	rgb_2_hsv@cmax,___lldiv@divisor
  7316   002BEA  C0E5  F01D         	movff	rgb_2_hsv@cmax+1,___lldiv@divisor+1
  7317   002BEE  6A1E               	clrf	(___lldiv@divisor+2)^0,c
  7318   002BF0  6A1F               	clrf	(___lldiv@divisor+3)^0,c
  7319   002BF2  EC12  F021         	call	___lldiv	;wreg free
  7320   002BF6  EE20 F002          	lfsr	2,2
  7321   002BFA  502E               	movf	rgb_2_hsv@HSV^0,w,c
  7322   002BFC  26D9               	addwf	fsr2l,f,c
  7323   002BFE  502F               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  7324   002C00  22DA               	addwfc	fsr2h,f,c
  7325   002C02  C018  FFDE         	movff	?___lldiv,postinc2
  7326   002C06  C019  FFDD         	movff	?___lldiv+1,postdec2
  7327   002C0A                     
  7328                           ;color.c: 300:     if (HSV->S == 0){HSV->H = 0;}
  7329   002C0A  EE20 F002          	lfsr	2,2
  7330   002C0E  502E               	movf	rgb_2_hsv@HSV^0,w,c
  7331   002C10  26D9               	addwf	fsr2l,f,c
  7332   002C12  502F               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  7333   002C14  22DA               	addwfc	fsr2h,f,c
  7334   002C16  50DE               	movf	postinc2,w,c
  7335   002C18  10DE               	iorwf	postinc2,w,c
  7336   002C1A  A4D8               	btfss	status,2,c
  7337   002C1C  EF12  F016         	goto	u3641
  7338   002C20  EF14  F016         	goto	u3640
  7339   002C24                     u3641:
  7340   002C24  EF1A  F016         	goto	l4482
  7341   002C28                     u3640:
  7342   002C28  C02E  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  7343   002C2C  C02F  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  7344   002C30  6ADE               	clrf	postinc2,c
  7345   002C32  6ADD               	clrf	postdec2,c
  7346   002C34                     l4482:
  7347                           
  7348                           ;color.c: 303:     HSV->V = cmax;
  7349   002C34  EE20 F004          	lfsr	2,4
  7350   002C38  502E               	movf	rgb_2_hsv@HSV^0,w,c
  7351   002C3A  26D9               	addwf	fsr2l,f,c
  7352   002C3C  502F               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  7353   002C3E  22DA               	addwfc	fsr2h,f,c
  7354   002C40  C0E4  FFDE         	movff	rgb_2_hsv@cmax,postinc2
  7355   002C44  C0E5  FFDD         	movff	rgb_2_hsv@cmax+1,postdec2
  7356   002C48  0012               	return		;funcret
  7357   002C4A                     __end_of_rgb_2_hsv:
  7358                           	callstack 0
  7359                           
  7360 ;; *************** function _min *****************
  7361 ;; Defined at:
  7362 ;;		line 271 in file "color.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  a               2   11[COMRAM] unsigned int 
  7365 ;;  b               2   13[COMRAM] unsigned int 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;		None
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  2   11[COMRAM] unsigned int 
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, status,0
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7381 ;;Total ram usage:        4 bytes
  7382 ;; Hardware stack levels used: 1
  7383 ;; Hardware stack levels required when called: 5
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_rgb_2_hsv
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text19
  7392   00468E                     __ptext19:
  7393                           	callstack 0
  7394   00468E                     _min:
  7395                           	callstack 24
  7396   00468E                     
  7397                           ;color.c: 272:     if (a < b){return a;}
  7398   00468E  500E               	movf	min@b^0,w,c
  7399   004690  5C0C               	subwf	min@a^0,w,c
  7400   004692  500F               	movf	(min@b+1)^0,w,c
  7401   004694  580D               	subwfb	(min@a+1)^0,w,c
  7402   004696  B0D8               	btfsc	status,0,c
  7403   004698  EF50  F023         	goto	u3301
  7404   00469C  EF52  F023         	goto	u3300
  7405   0046A0                     u3301:
  7406   0046A0  EF58  F023         	goto	l206
  7407   0046A4                     u3300:
  7408   0046A4  C00C  F00C         	movff	min@a,?_min
  7409   0046A8  C00D  F00D         	movff	min@a+1,?_min+1
  7410   0046AC  EF5C  F023         	goto	l207
  7411   0046B0                     l206:
  7412   0046B0  C00E  F00C         	movff	min@b,?_min
  7413   0046B4  C00F  F00D         	movff	min@b+1,?_min+1
  7414   0046B8                     l207:
  7415   0046B8  0012               	return		;funcret
  7416   0046BA                     __end_of_min:
  7417                           	callstack 0
  7418                           
  7419 ;; *************** function _max *****************
  7420 ;; Defined at:
  7421 ;;		line 266 in file "color.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  a               2   11[COMRAM] unsigned int 
  7424 ;;  b               2   13[COMRAM] unsigned int 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;		None
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  2   11[COMRAM] unsigned int 
  7429 ;; Registers used:
  7430 ;;		wreg, status,2, status,0
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7436 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7439 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7440 ;;Total ram usage:        4 bytes
  7441 ;; Hardware stack levels used: 1
  7442 ;; Hardware stack levels required when called: 5
  7443 ;; This function calls:
  7444 ;;		Nothing
  7445 ;; This function is called by:
  7446 ;;		_rgb_2_hsv
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           	psect	text20
  7451   0046BA                     __ptext20:
  7452                           	callstack 0
  7453   0046BA                     _max:
  7454                           	callstack 24
  7455   0046BA                     
  7456                           ;color.c: 267:     if (a > b){return a;}
  7457   0046BA  500C               	movf	max@a^0,w,c
  7458   0046BC  5C0E               	subwf	max@b^0,w,c
  7459   0046BE  500D               	movf	(max@a+1)^0,w,c
  7460   0046C0  580F               	subwfb	(max@b+1)^0,w,c
  7461   0046C2  B0D8               	btfsc	status,0,c
  7462   0046C4  EF66  F023         	goto	u3291
  7463   0046C8  EF68  F023         	goto	u3290
  7464   0046CC                     u3291:
  7465   0046CC  EF6E  F023         	goto	l201
  7466   0046D0                     u3290:
  7467   0046D0  C00C  F00C         	movff	max@a,?_max
  7468   0046D4  C00D  F00D         	movff	max@a+1,?_max+1
  7469   0046D8  EF72  F023         	goto	l202
  7470   0046DC                     l201:
  7471   0046DC  C00E  F00C         	movff	max@b,?_max
  7472   0046E0  C00F  F00D         	movff	max@b+1,?_max+1
  7473   0046E4                     l202:
  7474   0046E4  0012               	return		;funcret
  7475   0046E6                     __end_of_max:
  7476                           	callstack 0
  7477                           
  7478 ;; *************** function ___lmul *****************
  7479 ;; Defined at:
  7480 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;  multiplier      4   11[COMRAM] unsigned long 
  7483 ;;  multiplicand    4   15[COMRAM] unsigned long 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;  product         4   19[COMRAM] unsigned long 
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  4   11[COMRAM] unsigned long 
  7488 ;; Registers used:
  7489 ;;		wreg, status,2, status,0
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7495 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7496 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7498 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7499 ;;Total ram usage:       12 bytes
  7500 ;; Hardware stack levels used: 1
  7501 ;; Hardware stack levels required when called: 5
  7502 ;; This function calls:
  7503 ;;		Nothing
  7504 ;; This function is called by:
  7505 ;;		_rgb_2_hsv
  7506 ;;		_color_normalise
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text21
  7511   0044C0                     __ptext21:
  7512                           	callstack 0
  7513   0044C0                     ___lmul:
  7514                           	callstack 24
  7515   0044C0  0E00               	movlw	0
  7516   0044C2  6E14               	movwf	___lmul@product^0,c
  7517   0044C4  0E00               	movlw	0
  7518   0044C6  6E15               	movwf	(___lmul@product+1)^0,c
  7519   0044C8  0E00               	movlw	0
  7520   0044CA  6E16               	movwf	(___lmul@product+2)^0,c
  7521   0044CC  0E00               	movlw	0
  7522   0044CE  6E17               	movwf	(___lmul@product+3)^0,c
  7523   0044D0                     l4358:
  7524   0044D0  A00C               	btfss	___lmul@multiplier^0,0,c
  7525   0044D2  EF6D  F022         	goto	u3461
  7526   0044D6  EF6F  F022         	goto	u3460
  7527   0044DA                     u3461:
  7528   0044DA  EF77  F022         	goto	l4362
  7529   0044DE                     u3460:
  7530   0044DE  5010               	movf	___lmul@multiplicand^0,w,c
  7531   0044E0  2614               	addwf	___lmul@product^0,f,c
  7532   0044E2  5011               	movf	(___lmul@multiplicand+1)^0,w,c
  7533   0044E4  2215               	addwfc	(___lmul@product+1)^0,f,c
  7534   0044E6  5012               	movf	(___lmul@multiplicand+2)^0,w,c
  7535   0044E8  2216               	addwfc	(___lmul@product+2)^0,f,c
  7536   0044EA  5013               	movf	(___lmul@multiplicand+3)^0,w,c
  7537   0044EC  2217               	addwfc	(___lmul@product+3)^0,f,c
  7538   0044EE                     l4362:
  7539   0044EE  90D8               	bcf	status,0,c
  7540   0044F0  3610               	rlcf	___lmul@multiplicand^0,f,c
  7541   0044F2  3611               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7542   0044F4  3612               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7543   0044F6  3613               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7544   0044F8  90D8               	bcf	status,0,c
  7545   0044FA  320F               	rrcf	(___lmul@multiplier+3)^0,f,c
  7546   0044FC  320E               	rrcf	(___lmul@multiplier+2)^0,f,c
  7547   0044FE  320D               	rrcf	(___lmul@multiplier+1)^0,f,c
  7548   004500  320C               	rrcf	___lmul@multiplier^0,f,c
  7549   004502  500C               	movf	___lmul@multiplier^0,w,c
  7550   004504  100D               	iorwf	(___lmul@multiplier+1)^0,w,c
  7551   004506  100E               	iorwf	(___lmul@multiplier+2)^0,w,c
  7552   004508  100F               	iorwf	(___lmul@multiplier+3)^0,w,c
  7553   00450A  A4D8               	btfss	status,2,c
  7554   00450C  EF8A  F022         	goto	u3471
  7555   004510  EF8C  F022         	goto	u3470
  7556   004514                     u3471:
  7557   004514  EF68  F022         	goto	l4358
  7558   004518                     u3470:
  7559   004518  C014  F00C         	movff	___lmul@product,?___lmul
  7560   00451C  C015  F00D         	movff	___lmul@product+1,?___lmul+1
  7561   004520  C016  F00E         	movff	___lmul@product+2,?___lmul+2
  7562   004524  C017  F00F         	movff	___lmul@product+3,?___lmul+3
  7563   004528  0012               	return		;funcret
  7564   00452A                     __end_of___lmul:
  7565                           	callstack 0
  7566                           
  7567 ;; *************** function ___lldiv *****************
  7568 ;; Defined at:
  7569 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  dividend        4   23[COMRAM] unsigned long 
  7572 ;;  divisor         4   27[COMRAM] unsigned long 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;  quotient        4   31[COMRAM] unsigned long 
  7575 ;;  counter         1   35[COMRAM] unsigned char 
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  4   23[COMRAM] unsigned long 
  7578 ;; Registers used:
  7579 ;;		wreg, status,2, status,0
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7585 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7586 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7588 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7589 ;;Total ram usage:       13 bytes
  7590 ;; Hardware stack levels used: 1
  7591 ;; Hardware stack levels required when called: 5
  7592 ;; This function calls:
  7593 ;;		Nothing
  7594 ;; This function is called by:
  7595 ;;		_rgb_2_hsv
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           	psect	text22
  7600   004224                     __ptext22:
  7601                           	callstack 0
  7602   004224                     ___lldiv:
  7603                           	callstack 24
  7604   004224  0E00               	movlw	0
  7605   004226  6E20               	movwf	___lldiv@quotient^0,c
  7606   004228  0E00               	movlw	0
  7607   00422A  6E21               	movwf	(___lldiv@quotient+1)^0,c
  7608   00422C  0E00               	movlw	0
  7609   00422E  6E22               	movwf	(___lldiv@quotient+2)^0,c
  7610   004230  0E00               	movlw	0
  7611   004232  6E23               	movwf	(___lldiv@quotient+3)^0,c
  7612   004234  501C               	movf	___lldiv@divisor^0,w,c
  7613   004236  101D               	iorwf	(___lldiv@divisor+1)^0,w,c
  7614   004238  101E               	iorwf	(___lldiv@divisor+2)^0,w,c
  7615   00423A  101F               	iorwf	(___lldiv@divisor+3)^0,w,c
  7616   00423C  B4D8               	btfsc	status,2,c
  7617   00423E  EF23  F021         	goto	u3481
  7618   004242  EF25  F021         	goto	u3480
  7619   004246                     u3481:
  7620   004246  EF5B  F021         	goto	l740
  7621   00424A                     u3480:
  7622   00424A  0E01               	movlw	1
  7623   00424C  6E24               	movwf	___lldiv@counter^0,c
  7624   00424E  EF2F  F021         	goto	l4374
  7625   004252                     l4372:
  7626   004252  90D8               	bcf	status,0,c
  7627   004254  361C               	rlcf	___lldiv@divisor^0,f,c
  7628   004256  361D               	rlcf	(___lldiv@divisor+1)^0,f,c
  7629   004258  361E               	rlcf	(___lldiv@divisor+2)^0,f,c
  7630   00425A  361F               	rlcf	(___lldiv@divisor+3)^0,f,c
  7631   00425C  2A24               	incf	___lldiv@counter^0,f,c
  7632   00425E                     l4374:
  7633   00425E  AE1F               	btfss	(___lldiv@divisor+3)^0,7,c
  7634   004260  EF34  F021         	goto	u3491
  7635   004264  EF36  F021         	goto	u3490
  7636   004268                     u3491:
  7637   004268  EF29  F021         	goto	l4372
  7638   00426C                     u3490:
  7639   00426C                     l4376:
  7640   00426C  90D8               	bcf	status,0,c
  7641   00426E  3620               	rlcf	___lldiv@quotient^0,f,c
  7642   004270  3621               	rlcf	(___lldiv@quotient+1)^0,f,c
  7643   004272  3622               	rlcf	(___lldiv@quotient+2)^0,f,c
  7644   004274  3623               	rlcf	(___lldiv@quotient+3)^0,f,c
  7645   004276  501C               	movf	___lldiv@divisor^0,w,c
  7646   004278  5C18               	subwf	___lldiv@dividend^0,w,c
  7647   00427A  501D               	movf	(___lldiv@divisor+1)^0,w,c
  7648   00427C  5819               	subwfb	(___lldiv@dividend+1)^0,w,c
  7649   00427E  501E               	movf	(___lldiv@divisor+2)^0,w,c
  7650   004280  581A               	subwfb	(___lldiv@dividend+2)^0,w,c
  7651   004282  501F               	movf	(___lldiv@divisor+3)^0,w,c
  7652   004284  581B               	subwfb	(___lldiv@dividend+3)^0,w,c
  7653   004286  A0D8               	btfss	status,0,c
  7654   004288  EF48  F021         	goto	u3501
  7655   00428C  EF4A  F021         	goto	u3500
  7656   004290                     u3501:
  7657   004290  EF53  F021         	goto	l4384
  7658   004294                     u3500:
  7659   004294  501C               	movf	___lldiv@divisor^0,w,c
  7660   004296  5E18               	subwf	___lldiv@dividend^0,f,c
  7661   004298  501D               	movf	(___lldiv@divisor+1)^0,w,c
  7662   00429A  5A19               	subwfb	(___lldiv@dividend+1)^0,f,c
  7663   00429C  501E               	movf	(___lldiv@divisor+2)^0,w,c
  7664   00429E  5A1A               	subwfb	(___lldiv@dividend+2)^0,f,c
  7665   0042A0  501F               	movf	(___lldiv@divisor+3)^0,w,c
  7666   0042A2  5A1B               	subwfb	(___lldiv@dividend+3)^0,f,c
  7667   0042A4  8020               	bsf	___lldiv@quotient^0,0,c
  7668   0042A6                     l4384:
  7669   0042A6  90D8               	bcf	status,0,c
  7670   0042A8  321F               	rrcf	(___lldiv@divisor+3)^0,f,c
  7671   0042AA  321E               	rrcf	(___lldiv@divisor+2)^0,f,c
  7672   0042AC  321D               	rrcf	(___lldiv@divisor+1)^0,f,c
  7673   0042AE  321C               	rrcf	___lldiv@divisor^0,f,c
  7674   0042B0  2E24               	decfsz	___lldiv@counter^0,f,c
  7675   0042B2  EF36  F021         	goto	l4376
  7676   0042B6                     l740:
  7677   0042B6  C020  F018         	movff	___lldiv@quotient,?___lldiv
  7678   0042BA  C021  F019         	movff	___lldiv@quotient+1,?___lldiv+1
  7679   0042BE  C022  F01A         	movff	___lldiv@quotient+2,?___lldiv+2
  7680   0042C2  C023  F01B         	movff	___lldiv@quotient+3,?___lldiv+3
  7681   0042C6  0012               	return		;funcret
  7682   0042C8                     __end_of___lldiv:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function ___aldiv *****************
  7686 ;; Defined at:
  7687 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  dividend        4   23[COMRAM] long 
  7690 ;;  divisor         4   27[COMRAM] long 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  quotient        4   33[COMRAM] long 
  7693 ;;  sign            1   32[COMRAM] unsigned char 
  7694 ;;  counter         1   31[COMRAM] unsigned char 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  4   23[COMRAM] long 
  7697 ;; Registers used:
  7698 ;;		wreg, status,2, status,0
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7704 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7705 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7707 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7708 ;;Total ram usage:       14 bytes
  7709 ;; Hardware stack levels used: 1
  7710 ;; Hardware stack levels required when called: 5
  7711 ;; This function calls:
  7712 ;;		Nothing
  7713 ;; This function is called by:
  7714 ;;		_rgb_2_hsv
  7715 ;;		_color_normalise
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text23
  7720   003E68                     __ptext23:
  7721                           	callstack 0
  7722   003E68                     ___aldiv:
  7723                           	callstack 24
  7724   003E68  0E00               	movlw	0
  7725   003E6A  6E21               	movwf	___aldiv@sign^0,c
  7726   003E6C  BE1F               	btfsc	(___aldiv@divisor+3)^0,7,c
  7727   003E6E  EF3D  F01F         	goto	u3510
  7728   003E72  EF3B  F01F         	goto	u3511
  7729   003E76                     u3511:
  7730   003E76  EF47  F01F         	goto	l4396
  7731   003E7A                     u3510:
  7732   003E7A  1E1F               	comf	(___aldiv@divisor+3)^0,f,c
  7733   003E7C  1E1E               	comf	(___aldiv@divisor+2)^0,f,c
  7734   003E7E  1E1D               	comf	(___aldiv@divisor+1)^0,f,c
  7735   003E80  6C1C               	negf	___aldiv@divisor^0,c
  7736   003E82  0E00               	movlw	0
  7737   003E84  221D               	addwfc	(___aldiv@divisor+1)^0,f,c
  7738   003E86  221E               	addwfc	(___aldiv@divisor+2)^0,f,c
  7739   003E88  221F               	addwfc	(___aldiv@divisor+3)^0,f,c
  7740   003E8A  0E01               	movlw	1
  7741   003E8C  6E21               	movwf	___aldiv@sign^0,c
  7742   003E8E                     l4396:
  7743   003E8E  BE1B               	btfsc	(___aldiv@dividend+3)^0,7,c
  7744   003E90  EF4E  F01F         	goto	u3520
  7745   003E94  EF4C  F01F         	goto	u3521
  7746   003E98                     u3521:
  7747   003E98  EF58  F01F         	goto	l4402
  7748   003E9C                     u3520:
  7749   003E9C  1E1B               	comf	(___aldiv@dividend+3)^0,f,c
  7750   003E9E  1E1A               	comf	(___aldiv@dividend+2)^0,f,c
  7751   003EA0  1E19               	comf	(___aldiv@dividend+1)^0,f,c
  7752   003EA2  6C18               	negf	___aldiv@dividend^0,c
  7753   003EA4  0E00               	movlw	0
  7754   003EA6  2219               	addwfc	(___aldiv@dividend+1)^0,f,c
  7755   003EA8  221A               	addwfc	(___aldiv@dividend+2)^0,f,c
  7756   003EAA  221B               	addwfc	(___aldiv@dividend+3)^0,f,c
  7757   003EAC  0E01               	movlw	1
  7758   003EAE  1A21               	xorwf	___aldiv@sign^0,f,c
  7759   003EB0                     l4402:
  7760   003EB0  0E00               	movlw	0
  7761   003EB2  6E22               	movwf	___aldiv@quotient^0,c
  7762   003EB4  0E00               	movlw	0
  7763   003EB6  6E23               	movwf	(___aldiv@quotient+1)^0,c
  7764   003EB8  0E00               	movlw	0
  7765   003EBA  6E24               	movwf	(___aldiv@quotient+2)^0,c
  7766   003EBC  0E00               	movlw	0
  7767   003EBE  6E25               	movwf	(___aldiv@quotient+3)^0,c
  7768   003EC0  501C               	movf	___aldiv@divisor^0,w,c
  7769   003EC2  101D               	iorwf	(___aldiv@divisor+1)^0,w,c
  7770   003EC4  101E               	iorwf	(___aldiv@divisor+2)^0,w,c
  7771   003EC6  101F               	iorwf	(___aldiv@divisor+3)^0,w,c
  7772   003EC8  B4D8               	btfsc	status,2,c
  7773   003ECA  EF69  F01F         	goto	u3531
  7774   003ECE  EF6B  F01F         	goto	u3530
  7775   003ED2                     u3531:
  7776   003ED2  EFA1  F01F         	goto	l4424
  7777   003ED6                     u3530:
  7778   003ED6  0E01               	movlw	1
  7779   003ED8  6E20               	movwf	___aldiv@counter^0,c
  7780   003EDA  EF75  F01F         	goto	l4410
  7781   003EDE                     l4408:
  7782   003EDE  90D8               	bcf	status,0,c
  7783   003EE0  361C               	rlcf	___aldiv@divisor^0,f,c
  7784   003EE2  361D               	rlcf	(___aldiv@divisor+1)^0,f,c
  7785   003EE4  361E               	rlcf	(___aldiv@divisor+2)^0,f,c
  7786   003EE6  361F               	rlcf	(___aldiv@divisor+3)^0,f,c
  7787   003EE8  2A20               	incf	___aldiv@counter^0,f,c
  7788   003EEA                     l4410:
  7789   003EEA  AE1F               	btfss	(___aldiv@divisor+3)^0,7,c
  7790   003EEC  EF7A  F01F         	goto	u3541
  7791   003EF0  EF7C  F01F         	goto	u3540
  7792   003EF4                     u3541:
  7793   003EF4  EF6F  F01F         	goto	l4408
  7794   003EF8                     u3540:
  7795   003EF8                     l4412:
  7796   003EF8  90D8               	bcf	status,0,c
  7797   003EFA  3622               	rlcf	___aldiv@quotient^0,f,c
  7798   003EFC  3623               	rlcf	(___aldiv@quotient+1)^0,f,c
  7799   003EFE  3624               	rlcf	(___aldiv@quotient+2)^0,f,c
  7800   003F00  3625               	rlcf	(___aldiv@quotient+3)^0,f,c
  7801   003F02  501C               	movf	___aldiv@divisor^0,w,c
  7802   003F04  5C18               	subwf	___aldiv@dividend^0,w,c
  7803   003F06  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7804   003F08  5819               	subwfb	(___aldiv@dividend+1)^0,w,c
  7805   003F0A  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7806   003F0C  581A               	subwfb	(___aldiv@dividend+2)^0,w,c
  7807   003F0E  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7808   003F10  581B               	subwfb	(___aldiv@dividend+3)^0,w,c
  7809   003F12  A0D8               	btfss	status,0,c
  7810   003F14  EF8E  F01F         	goto	u3551
  7811   003F18  EF90  F01F         	goto	u3550
  7812   003F1C                     u3551:
  7813   003F1C  EF99  F01F         	goto	l4420
  7814   003F20                     u3550:
  7815   003F20  501C               	movf	___aldiv@divisor^0,w,c
  7816   003F22  5E18               	subwf	___aldiv@dividend^0,f,c
  7817   003F24  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7818   003F26  5A19               	subwfb	(___aldiv@dividend+1)^0,f,c
  7819   003F28  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7820   003F2A  5A1A               	subwfb	(___aldiv@dividend+2)^0,f,c
  7821   003F2C  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7822   003F2E  5A1B               	subwfb	(___aldiv@dividend+3)^0,f,c
  7823   003F30  8022               	bsf	___aldiv@quotient^0,0,c
  7824   003F32                     l4420:
  7825   003F32  90D8               	bcf	status,0,c
  7826   003F34  321F               	rrcf	(___aldiv@divisor+3)^0,f,c
  7827   003F36  321E               	rrcf	(___aldiv@divisor+2)^0,f,c
  7828   003F38  321D               	rrcf	(___aldiv@divisor+1)^0,f,c
  7829   003F3A  321C               	rrcf	___aldiv@divisor^0,f,c
  7830   003F3C  2E20               	decfsz	___aldiv@counter^0,f,c
  7831   003F3E  EF7C  F01F         	goto	l4412
  7832   003F42                     l4424:
  7833   003F42  5021               	movf	___aldiv@sign^0,w,c
  7834   003F44  B4D8               	btfsc	status,2,c
  7835   003F46  EFA7  F01F         	goto	u3561
  7836   003F4A  EFA9  F01F         	goto	u3560
  7837   003F4E                     u3561:
  7838   003F4E  EFB1  F01F         	goto	l4428
  7839   003F52                     u3560:
  7840   003F52  1E25               	comf	(___aldiv@quotient+3)^0,f,c
  7841   003F54  1E24               	comf	(___aldiv@quotient+2)^0,f,c
  7842   003F56  1E23               	comf	(___aldiv@quotient+1)^0,f,c
  7843   003F58  6C22               	negf	___aldiv@quotient^0,c
  7844   003F5A  0E00               	movlw	0
  7845   003F5C  2223               	addwfc	(___aldiv@quotient+1)^0,f,c
  7846   003F5E  2224               	addwfc	(___aldiv@quotient+2)^0,f,c
  7847   003F60  2225               	addwfc	(___aldiv@quotient+3)^0,f,c
  7848   003F62                     l4428:
  7849   003F62  C022  F018         	movff	___aldiv@quotient,?___aldiv
  7850   003F66  C023  F019         	movff	___aldiv@quotient+1,?___aldiv+1
  7851   003F6A  C024  F01A         	movff	___aldiv@quotient+2,?___aldiv+2
  7852   003F6E  C025  F01B         	movff	___aldiv@quotient+3,?___aldiv+3
  7853   003F72  0012               	return		;funcret
  7854   003F74                     __end_of___aldiv:
  7855                           	callstack 0
  7856                           
  7857 ;; *************** function _color_read *****************
  7858 ;; Defined at:
  7859 ;;		line 74 in file "color.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  RGBC            2   15[COMRAM] PTR struct RGBC_val
  7862 ;;		 -> main@RGBC(8), 
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;		None
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  1    wreg      void 
  7867 ;; Registers used:
  7868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7876 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7877 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7878 ;;Total ram usage:        9 bytes
  7879 ;; Hardware stack levels used: 1
  7880 ;; Hardware stack levels required when called: 7
  7881 ;; This function calls:
  7882 ;;		_I2C_2_Master_Read
  7883 ;;		_I2C_2_Master_RepStart
  7884 ;;		_I2C_2_Master_Start
  7885 ;;		_I2C_2_Master_Stop
  7886 ;;		_I2C_2_Master_Write
  7887 ;; This function is called by:
  7888 ;;		_main
  7889 ;;		_color_calibration
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           	psect	text24
  7894   003580                     __ptext24:
  7895                           	callstack 0
  7896   003580                     _color_read:
  7897                           	callstack 23
  7898   003580                     
  7899                           ;color.c: 74: void color_read(RGBC_val *RGBC);color.c: 75: {;color.c: 76:  I2C_2_Master_
      +                          Start();
  7900   003580  EC89  F024         	call	_I2C_2_Master_Start	;wreg free
  7901                           
  7902                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  7903   003584  0E52               	movlw	82
  7904   003586  EC73  F024         	call	_I2C_2_Master_Write
  7905                           
  7906                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x16);
  7907   00358A  0EB6               	movlw	182
  7908   00358C  EC73  F024         	call	_I2C_2_Master_Write
  7909                           
  7910                           ;color.c: 79:  I2C_2_Master_RepStart();
  7911   003590  EC8E  F024         	call	_I2C_2_Master_RepStart	;wreg free
  7912                           
  7913                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  7914   003594  0E53               	movlw	83
  7915   003596  EC73  F024         	call	_I2C_2_Master_Write
  7916   00359A                     
  7917                           ;color.c: 81:  RGBC->R=I2C_2_Master_Read(1);
  7918   00359A  0E01               	movlw	1
  7919   00359C  ECEF  F022         	call	_I2C_2_Master_Read
  7920   0035A0  6E12               	movwf	??_color_read^0,c
  7921   0035A2  6A13               	clrf	(??_color_read+1)^0,c
  7922   0035A4  C010  FFD9         	movff	color_read@RGBC,fsr2l
  7923   0035A8  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  7924   0035AC  C012  FFDE         	movff	??_color_read,postinc2
  7925   0035B0  C013  FFDD         	movff	??_color_read+1,postdec2
  7926   0035B4                     
  7927                           ;color.c: 82:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  7928   0035B4  C010  FFD9         	movff	color_read@RGBC,fsr2l
  7929   0035B8  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  7930   0035BC  CFDE F012          	movff	postinc2,??_color_read
  7931   0035C0  CFDD F013          	movff	postdec2,??_color_read+1
  7932   0035C4  0E00               	movlw	0
  7933   0035C6  ECEF  F022         	call	_I2C_2_Master_Read
  7934   0035CA  6E14               	movwf	(??_color_read+2)^0,c
  7935   0035CC  5014               	movf	(??_color_read+2)^0,w,c
  7936   0035CE  6E16               	movwf	(??_color_read+4)^0,c
  7937   0035D0  6A15               	clrf	(??_color_read+3)^0,c
  7938   0035D2  5012               	movf	??_color_read^0,w,c
  7939   0035D4  1015               	iorwf	(??_color_read+3)^0,w,c
  7940   0035D6  6E17               	movwf	(??_color_read+5)^0,c
  7941   0035D8  5013               	movf	(??_color_read+1)^0,w,c
  7942   0035DA  1016               	iorwf	(??_color_read+4)^0,w,c
  7943   0035DC  6E18               	movwf	(??_color_read+6)^0,c
  7944   0035DE  C010  FFD9         	movff	color_read@RGBC,fsr2l
  7945   0035E2  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  7946   0035E6  C017  FFDE         	movff	??_color_read+5,postinc2
  7947   0035EA  C018  FFDD         	movff	??_color_read+6,postdec2
  7948                           
  7949                           ;color.c: 83:  I2C_2_Master_Stop();
  7950   0035EE  EC84  F024         	call	_I2C_2_Master_Stop	;wreg free
  7951                           
  7952                           ;color.c: 85:     I2C_2_Master_Start();
  7953   0035F2  EC89  F024         	call	_I2C_2_Master_Start	;wreg free
  7954                           
  7955                           ;color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  7956   0035F6  0E52               	movlw	82
  7957   0035F8  EC73  F024         	call	_I2C_2_Master_Write
  7958                           
  7959                           ;color.c: 87:  I2C_2_Master_Write(0xA0 | 0x18);
  7960   0035FC  0EB8               	movlw	184
  7961   0035FE  EC73  F024         	call	_I2C_2_Master_Write
  7962                           
  7963                           ;color.c: 88:  I2C_2_Master_RepStart();
  7964   003602  EC8E  F024         	call	_I2C_2_Master_RepStart	;wreg free
  7965                           
  7966                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  7967   003606  0E53               	movlw	83
  7968   003608  EC73  F024         	call	_I2C_2_Master_Write
  7969   00360C                     
  7970                           ;color.c: 90:  RGBC->G=I2C_2_Master_Read(1);
  7971   00360C  0E01               	movlw	1
  7972   00360E  ECEF  F022         	call	_I2C_2_Master_Read
  7973   003612  6E12               	movwf	??_color_read^0,c
  7974   003614  6A13               	clrf	(??_color_read+1)^0,c
  7975   003616  EE20 F002          	lfsr	2,2
  7976   00361A  5010               	movf	color_read@RGBC^0,w,c
  7977   00361C  26D9               	addwf	fsr2l,f,c
  7978   00361E  5011               	movf	(color_read@RGBC+1)^0,w,c
  7979   003620  22DA               	addwfc	fsr2h,f,c
  7980   003622  C012  FFDE         	movff	??_color_read,postinc2
  7981   003626  C013  FFDD         	movff	??_color_read+1,postdec2
  7982   00362A                     
  7983                           ;color.c: 91:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  7984   00362A  EE20 F002          	lfsr	2,2
  7985   00362E  5010               	movf	color_read@RGBC^0,w,c
  7986   003630  26D9               	addwf	fsr2l,f,c
  7987   003632  5011               	movf	(color_read@RGBC+1)^0,w,c
  7988   003634  22DA               	addwfc	fsr2h,f,c
  7989   003636  CFDE F012          	movff	postinc2,??_color_read
  7990   00363A  CFDD F013          	movff	postdec2,??_color_read+1
  7991   00363E  0E00               	movlw	0
  7992   003640  ECEF  F022         	call	_I2C_2_Master_Read
  7993   003644  6E14               	movwf	(??_color_read+2)^0,c
  7994   003646  5014               	movf	(??_color_read+2)^0,w,c
  7995   003648  6E16               	movwf	(??_color_read+4)^0,c
  7996   00364A  6A15               	clrf	(??_color_read+3)^0,c
  7997   00364C  5012               	movf	??_color_read^0,w,c
  7998   00364E  1015               	iorwf	(??_color_read+3)^0,w,c
  7999   003650  6E17               	movwf	(??_color_read+5)^0,c
  8000   003652  5013               	movf	(??_color_read+1)^0,w,c
  8001   003654  1016               	iorwf	(??_color_read+4)^0,w,c
  8002   003656  6E18               	movwf	(??_color_read+6)^0,c
  8003   003658  EE20 F002          	lfsr	2,2
  8004   00365C  5010               	movf	color_read@RGBC^0,w,c
  8005   00365E  26D9               	addwf	fsr2l,f,c
  8006   003660  5011               	movf	(color_read@RGBC+1)^0,w,c
  8007   003662  22DA               	addwfc	fsr2h,f,c
  8008   003664  C017  FFDE         	movff	??_color_read+5,postinc2
  8009   003668  C018  FFDD         	movff	??_color_read+6,postdec2
  8010                           
  8011                           ;color.c: 92:  I2C_2_Master_Stop();
  8012   00366C  EC84  F024         	call	_I2C_2_Master_Stop	;wreg free
  8013                           
  8014                           ;color.c: 94:     I2C_2_Master_Start();
  8015   003670  EC89  F024         	call	_I2C_2_Master_Start	;wreg free
  8016                           
  8017                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  8018   003674  0E52               	movlw	82
  8019   003676  EC73  F024         	call	_I2C_2_Master_Write
  8020                           
  8021                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  8022   00367A  0EBA               	movlw	186
  8023   00367C  EC73  F024         	call	_I2C_2_Master_Write
  8024                           
  8025                           ;color.c: 97:  I2C_2_Master_RepStart();
  8026   003680  EC8E  F024         	call	_I2C_2_Master_RepStart	;wreg free
  8027                           
  8028                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  8029   003684  0E53               	movlw	83
  8030   003686  EC73  F024         	call	_I2C_2_Master_Write
  8031   00368A                     
  8032                           ;color.c: 99:  RGBC->B=I2C_2_Master_Read(1);
  8033   00368A  0E01               	movlw	1
  8034   00368C  ECEF  F022         	call	_I2C_2_Master_Read
  8035   003690  6E12               	movwf	??_color_read^0,c
  8036   003692  6A13               	clrf	(??_color_read+1)^0,c
  8037   003694  EE20 F004          	lfsr	2,4
  8038   003698  5010               	movf	color_read@RGBC^0,w,c
  8039   00369A  26D9               	addwf	fsr2l,f,c
  8040   00369C  5011               	movf	(color_read@RGBC+1)^0,w,c
  8041   00369E  22DA               	addwfc	fsr2h,f,c
  8042   0036A0  C012  FFDE         	movff	??_color_read,postinc2
  8043   0036A4  C013  FFDD         	movff	??_color_read+1,postdec2
  8044   0036A8                     
  8045                           ;color.c: 100:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  8046   0036A8  EE20 F004          	lfsr	2,4
  8047   0036AC  5010               	movf	color_read@RGBC^0,w,c
  8048   0036AE  26D9               	addwf	fsr2l,f,c
  8049   0036B0  5011               	movf	(color_read@RGBC+1)^0,w,c
  8050   0036B2  22DA               	addwfc	fsr2h,f,c
  8051   0036B4  CFDE F012          	movff	postinc2,??_color_read
  8052   0036B8  CFDD F013          	movff	postdec2,??_color_read+1
  8053   0036BC  0E00               	movlw	0
  8054   0036BE  ECEF  F022         	call	_I2C_2_Master_Read
  8055   0036C2  6E14               	movwf	(??_color_read+2)^0,c
  8056   0036C4  5014               	movf	(??_color_read+2)^0,w,c
  8057   0036C6  6E16               	movwf	(??_color_read+4)^0,c
  8058   0036C8  6A15               	clrf	(??_color_read+3)^0,c
  8059   0036CA  5012               	movf	??_color_read^0,w,c
  8060   0036CC  1015               	iorwf	(??_color_read+3)^0,w,c
  8061   0036CE  6E17               	movwf	(??_color_read+5)^0,c
  8062   0036D0  5013               	movf	(??_color_read+1)^0,w,c
  8063   0036D2  1016               	iorwf	(??_color_read+4)^0,w,c
  8064   0036D4  6E18               	movwf	(??_color_read+6)^0,c
  8065   0036D6  EE20 F004          	lfsr	2,4
  8066   0036DA  5010               	movf	color_read@RGBC^0,w,c
  8067   0036DC  26D9               	addwf	fsr2l,f,c
  8068   0036DE  5011               	movf	(color_read@RGBC+1)^0,w,c
  8069   0036E0  22DA               	addwfc	fsr2h,f,c
  8070   0036E2  C017  FFDE         	movff	??_color_read+5,postinc2
  8071   0036E6  C018  FFDD         	movff	??_color_read+6,postdec2
  8072                           
  8073                           ;color.c: 101:  I2C_2_Master_Stop();
  8074   0036EA  EC84  F024         	call	_I2C_2_Master_Stop	;wreg free
  8075                           
  8076                           ;color.c: 103:     I2C_2_Master_Start();
  8077   0036EE  EC89  F024         	call	_I2C_2_Master_Start	;wreg free
  8078                           
  8079                           ;color.c: 104:  I2C_2_Master_Write(0x52 | 0x00);
  8080   0036F2  0E52               	movlw	82
  8081   0036F4  EC73  F024         	call	_I2C_2_Master_Write
  8082                           
  8083                           ;color.c: 105:  I2C_2_Master_Write(0xA0 | 0x14);
  8084   0036F8  0EB4               	movlw	180
  8085   0036FA  EC73  F024         	call	_I2C_2_Master_Write
  8086                           
  8087                           ;color.c: 106:  I2C_2_Master_RepStart();
  8088   0036FE  EC8E  F024         	call	_I2C_2_Master_RepStart	;wreg free
  8089                           
  8090                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x01);
  8091   003702  0E53               	movlw	83
  8092   003704  EC73  F024         	call	_I2C_2_Master_Write
  8093   003708                     
  8094                           ;color.c: 108:  RGBC->C=I2C_2_Master_Read(1);
  8095   003708  0E01               	movlw	1
  8096   00370A  ECEF  F022         	call	_I2C_2_Master_Read
  8097   00370E  6E12               	movwf	??_color_read^0,c
  8098   003710  6A13               	clrf	(??_color_read+1)^0,c
  8099   003712  EE20 F006          	lfsr	2,6
  8100   003716  5010               	movf	color_read@RGBC^0,w,c
  8101   003718  26D9               	addwf	fsr2l,f,c
  8102   00371A  5011               	movf	(color_read@RGBC+1)^0,w,c
  8103   00371C  22DA               	addwfc	fsr2h,f,c
  8104   00371E  C012  FFDE         	movff	??_color_read,postinc2
  8105   003722  C013  FFDD         	movff	??_color_read+1,postdec2
  8106   003726                     
  8107                           ;color.c: 109:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  8108   003726  EE20 F006          	lfsr	2,6
  8109   00372A  5010               	movf	color_read@RGBC^0,w,c
  8110   00372C  26D9               	addwf	fsr2l,f,c
  8111   00372E  5011               	movf	(color_read@RGBC+1)^0,w,c
  8112   003730  22DA               	addwfc	fsr2h,f,c
  8113   003732  CFDE F012          	movff	postinc2,??_color_read
  8114   003736  CFDD F013          	movff	postdec2,??_color_read+1
  8115   00373A  0E00               	movlw	0
  8116   00373C  ECEF  F022         	call	_I2C_2_Master_Read
  8117   003740  6E14               	movwf	(??_color_read+2)^0,c
  8118   003742  5014               	movf	(??_color_read+2)^0,w,c
  8119   003744  6E16               	movwf	(??_color_read+4)^0,c
  8120   003746  6A15               	clrf	(??_color_read+3)^0,c
  8121   003748  5012               	movf	??_color_read^0,w,c
  8122   00374A  1015               	iorwf	(??_color_read+3)^0,w,c
  8123   00374C  6E17               	movwf	(??_color_read+5)^0,c
  8124   00374E  5013               	movf	(??_color_read+1)^0,w,c
  8125   003750  1016               	iorwf	(??_color_read+4)^0,w,c
  8126   003752  6E18               	movwf	(??_color_read+6)^0,c
  8127   003754  EE20 F006          	lfsr	2,6
  8128   003758  5010               	movf	color_read@RGBC^0,w,c
  8129   00375A  26D9               	addwf	fsr2l,f,c
  8130   00375C  5011               	movf	(color_read@RGBC+1)^0,w,c
  8131   00375E  22DA               	addwfc	fsr2h,f,c
  8132   003760  C017  FFDE         	movff	??_color_read+5,postinc2
  8133   003764  C018  FFDD         	movff	??_color_read+6,postdec2
  8134                           
  8135                           ;color.c: 110:  I2C_2_Master_Stop();
  8136   003768  EC84  F024         	call	_I2C_2_Master_Stop	;wreg free
  8137   00376C  0012               	return		;funcret
  8138   00376E                     __end_of_color_read:
  8139                           	callstack 0
  8140                           
  8141 ;; *************** function _I2C_2_Master_Write *****************
  8142 ;; Defined at:
  8143 ;;		line 45 in file "i2c.c"
  8144 ;; Parameters:    Size  Location     Type
  8145 ;;  data_byte       1    wreg     unsigned char 
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;  data_byte       1   12[COMRAM] unsigned char 
  8148 ;; Return value:  Size  Location     Type
  8149 ;;                  1    wreg      void 
  8150 ;; Registers used:
  8151 ;;		wreg, status,2, status,0, cstack
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8160 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8161 ;;Total ram usage:        1 bytes
  8162 ;; Hardware stack levels used: 1
  8163 ;; Hardware stack levels required when called: 6
  8164 ;; This function calls:
  8165 ;;		_I2C_2_Master_Idle
  8166 ;; This function is called by:
  8167 ;;		_color_clear_init_interrupts
  8168 ;;		_color_writetoaddr
  8169 ;;		_color_read
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text25
  8174   0048E6                     __ptext25:
  8175                           	callstack 0
  8176   0048E6                     _I2C_2_Master_Write:
  8177                           	callstack 23
  8178                           
  8179                           ;incstack = 0
  8180                           ;I2C_2_Master_Write@data_byte stored from wreg
  8181   0048E6  6E0D               	movwf	I2C_2_Master_Write@data_byte^0,c
  8182   0048E8                     
  8183                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8184   0048E8  EC9C  F023         	call	_I2C_2_Master_Idle	;wreg free
  8185   0048EC                     
  8186                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8187   0048EC  C00D  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8188   0048F0  0012               	return		;funcret
  8189   0048F2                     __end_of_I2C_2_Master_Write:
  8190                           	callstack 0
  8191                           
  8192 ;; *************** function _I2C_2_Master_Stop *****************
  8193 ;; Defined at:
  8194 ;;		line 39 in file "i2c.c"
  8195 ;; Parameters:    Size  Location     Type
  8196 ;;		None
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;		None
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  1    wreg      void 
  8201 ;; Registers used:
  8202 ;;		wreg, status,2, status,0, cstack
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8212 ;;Total ram usage:        0 bytes
  8213 ;; Hardware stack levels used: 1
  8214 ;; Hardware stack levels required when called: 6
  8215 ;; This function calls:
  8216 ;;		_I2C_2_Master_Idle
  8217 ;; This function is called by:
  8218 ;;		_color_clear_init_interrupts
  8219 ;;		_color_writetoaddr
  8220 ;;		_color_read
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text26
  8225   004908                     __ptext26:
  8226                           	callstack 0
  8227   004908                     _I2C_2_Master_Stop:
  8228                           	callstack 23
  8229   004908                     
  8230                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8231   004908  EC9C  F023         	call	_I2C_2_Master_Idle	;wreg free
  8232   00490C                     
  8233                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8234   00490C  010E               	movlb	14	; () banked
  8235   00490E  85DA               	bsf	218,2,b	;volatile
  8236   004910                     
  8237                           ; BSR set to: 14
  8238   004910  0012               	return		;funcret
  8239   004912                     __end_of_I2C_2_Master_Stop:
  8240                           	callstack 0
  8241                           
  8242 ;; *************** function _I2C_2_Master_Start *****************
  8243 ;; Defined at:
  8244 ;;		line 27 in file "i2c.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;		None
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;		None
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      void 
  8251 ;; Registers used:
  8252 ;;		wreg, status,2, status,0, cstack
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;Total ram usage:        0 bytes
  8263 ;; Hardware stack levels used: 1
  8264 ;; Hardware stack levels required when called: 6
  8265 ;; This function calls:
  8266 ;;		_I2C_2_Master_Idle
  8267 ;; This function is called by:
  8268 ;;		_color_clear_init_interrupts
  8269 ;;		_color_writetoaddr
  8270 ;;		_color_read
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text27
  8275   004912                     __ptext27:
  8276                           	callstack 0
  8277   004912                     _I2C_2_Master_Start:
  8278                           	callstack 23
  8279   004912                     
  8280                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8281   004912  EC9C  F023         	call	_I2C_2_Master_Idle	;wreg free
  8282   004916                     
  8283                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8284   004916  010E               	movlb	14	; () banked
  8285   004918  81DA               	bsf	218,0,b	;volatile
  8286   00491A                     
  8287                           ; BSR set to: 14
  8288   00491A  0012               	return		;funcret
  8289   00491C                     __end_of_I2C_2_Master_Start:
  8290                           	callstack 0
  8291                           
  8292 ;; *************** function _I2C_2_Master_RepStart *****************
  8293 ;; Defined at:
  8294 ;;		line 33 in file "i2c.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;		None
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1    wreg      void 
  8301 ;; Registers used:
  8302 ;;		wreg, status,2, status,0, cstack
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8312 ;;Total ram usage:        0 bytes
  8313 ;; Hardware stack levels used: 1
  8314 ;; Hardware stack levels required when called: 6
  8315 ;; This function calls:
  8316 ;;		_I2C_2_Master_Idle
  8317 ;; This function is called by:
  8318 ;;		_color_read
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           	psect	text28
  8323   00491C                     __ptext28:
  8324                           	callstack 0
  8325   00491C                     _I2C_2_Master_RepStart:
  8326                           	callstack 23
  8327   00491C                     
  8328                           ;i2c.c: 35:   I2C_2_Master_Idle();
  8329   00491C  EC9C  F023         	call	_I2C_2_Master_Idle	;wreg free
  8330   004920                     
  8331                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  8332   004920  010E               	movlb	14	; () banked
  8333   004922  83DA               	bsf	218,1,b	;volatile
  8334   004924                     
  8335                           ; BSR set to: 14
  8336   004924  0012               	return		;funcret
  8337   004926                     __end_of_I2C_2_Master_RepStart:
  8338                           	callstack 0
  8339                           
  8340 ;; *************** function _I2C_2_Master_Read *****************
  8341 ;; Defined at:
  8342 ;;		line 51 in file "i2c.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;  ack             1    wreg     unsigned char 
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;  ack             1   13[COMRAM] unsigned char 
  8347 ;;  tmp             1   14[COMRAM] unsigned char 
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1    wreg      unsigned char 
  8350 ;; Registers used:
  8351 ;;		wreg, status,2, status,0, cstack
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8359 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8360 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8361 ;;Total ram usage:        3 bytes
  8362 ;; Hardware stack levels used: 1
  8363 ;; Hardware stack levels required when called: 6
  8364 ;; This function calls:
  8365 ;;		_I2C_2_Master_Idle
  8366 ;; This function is called by:
  8367 ;;		_color_read
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           	psect	text29
  8372   0045DE                     __ptext29:
  8373                           	callstack 0
  8374   0045DE                     _I2C_2_Master_Read:
  8375                           	callstack 23
  8376                           
  8377                           ; BSR set to: 14
  8378                           ;incstack = 0
  8379                           ;I2C_2_Master_Read@ack stored from wreg
  8380   0045DE  6E0E               	movwf	I2C_2_Master_Read@ack^0,c
  8381   0045E0                     
  8382                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8383   0045E0  EC9C  F023         	call	_I2C_2_Master_Idle	;wreg free
  8384   0045E4                     
  8385                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8386   0045E4  010E               	movlb	14	; () banked
  8387   0045E6  87DA               	bsf	218,3,b	;volatile
  8388                           
  8389                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8390   0045E8  EC9C  F023         	call	_I2C_2_Master_Idle	;wreg free
  8391   0045EC                     
  8392                           ;i2c.c: 57:   tmp = SSP2BUF;
  8393   0045EC  CED5 F00F          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8394                           
  8395                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8396   0045F0  EC9C  F023         	call	_I2C_2_Master_Idle	;wreg free
  8397   0045F4                     
  8398                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8399   0045F4  500E               	movf	I2C_2_Master_Read@ack^0,w,c
  8400   0045F6  B4D8               	btfsc	status,2,c
  8401   0045F8  EF00  F023         	goto	u3271
  8402   0045FC  EF04  F023         	goto	u3270
  8403   004600                     u3271:
  8404   004600  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  8405   004602  2A0D               	incf	??_I2C_2_Master_Read^0,f,c
  8406   004604  EF05  F023         	goto	u3288
  8407   004608                     u3270:
  8408   004608  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  8409   00460A                     u3288:
  8410   00460A  3A0D               	swapf	??_I2C_2_Master_Read^0,f,c
  8411   00460C  460D               	rlncf	??_I2C_2_Master_Read^0,f,c
  8412   00460E  010E               	movlb	14	; () banked
  8413   004610  51DA               	movf	218,w,b	;volatile
  8414   004612  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  8415   004614  0BDF               	andlw	-33
  8416   004616  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  8417   004618  6FDA               	movwf	218,b	;volatile
  8418   00461A                     
  8419                           ; BSR set to: 14
  8420                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8421   00461A  89DA               	bsf	218,4,b	;volatile
  8422   00461C                     
  8423                           ; BSR set to: 14
  8424                           ;i2c.c: 61:   return tmp;
  8425   00461C  500F               	movf	I2C_2_Master_Read@tmp^0,w,c
  8426   00461E                     
  8427                           ; BSR set to: 14
  8428   00461E  0012               	return		;funcret
  8429   004620                     __end_of_I2C_2_Master_Read:
  8430                           	callstack 0
  8431                           
  8432 ;; *************** function _I2C_2_Master_Idle *****************
  8433 ;; Defined at:
  8434 ;;		line 22 in file "i2c.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;		None
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;		None
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  1    wreg      void 
  8441 ;; Registers used:
  8442 ;;		wreg, status,2, status,0
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8450 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8451 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8452 ;;Total ram usage:        1 bytes
  8453 ;; Hardware stack levels used: 1
  8454 ;; Hardware stack levels required when called: 5
  8455 ;; This function calls:
  8456 ;;		Nothing
  8457 ;; This function is called by:
  8458 ;;		_I2C_2_Master_Start
  8459 ;;		_I2C_2_Master_RepStart
  8460 ;;		_I2C_2_Master_Stop
  8461 ;;		_I2C_2_Master_Write
  8462 ;;		_I2C_2_Master_Read
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           	psect	text30
  8467   004738                     __ptext30:
  8468                           	callstack 0
  8469   004738                     _I2C_2_Master_Idle:
  8470                           	callstack 23
  8471   004738                     l250:
  8472   004738  010E               	movlb	14	; () banked
  8473   00473A  B5D8               	btfsc	216,2,b	;volatile
  8474   00473C  EFA2  F023         	goto	u3161
  8475   004740  EFA4  F023         	goto	u3160
  8476   004744                     u3161:
  8477   004744  EF9C  F023         	goto	l250
  8478   004748                     u3160:
  8479   004748                     
  8480                           ; BSR set to: 14
  8481   004748  CEDA F00C          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8482   00474C  0E1F               	movlw	31
  8483   00474E  160C               	andwf	??_I2C_2_Master_Idle^0,f,c
  8484   004750  A4D8               	btfss	status,2,c
  8485   004752  EFAD  F023         	goto	u3171
  8486   004756  EFAF  F023         	goto	u3170
  8487   00475A                     u3171:
  8488   00475A  EF9C  F023         	goto	l250
  8489   00475E                     u3170:
  8490   00475E                     
  8491                           ; BSR set to: 14
  8492   00475E  0012               	return		;funcret
  8493   004760                     __end_of_I2C_2_Master_Idle:
  8494                           	callstack 0
  8495                           
  8496 ;; *************** function _calibration *****************
  8497 ;; Defined at:
  8498 ;;		line 482 in file "dc_motor.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  8501 ;;		 -> main@motorL(10), 
  8502 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  8503 ;;		 -> main@motorR(10), 
  8504 ;;  turnSpeed       1   48[COMRAM] unsigned char 
  8505 ;;  turnDuration    2   49[COMRAM] PTR unsigned char 
  8506 ;;		 -> main@turnDuration(1), 
  8507 ;;  turnRamp        1   51[COMRAM] unsigned char 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8519 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8522 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8523 ;;Total ram usage:       10 bytes
  8524 ;; Hardware stack levels used: 1
  8525 ;; Hardware stack levels required when called: 8
  8526 ;; This function calls:
  8527 ;;		_turnLeft
  8528 ;;		_turnRight
  8529 ;; This function is called by:
  8530 ;;		_main
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text31
  8535   00307E                     __ptext31:
  8536                           	callstack 0
  8537   00307E                     _calibration:
  8538                           	callstack 22
  8539   00307E                     
  8540                           ;dc_motor.c: 482: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 483: {;dc_motor.c: 485:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8541   00307E  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8542   003082  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8543   003086  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8544   00308A  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8545   00308E  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8546   003092  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8547   003096  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8548   00309A  50DF               	movf	indf2,w,c
  8549   00309C  6E24               	movwf	turnLeft@turnDuration^0,c
  8550   00309E  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8551   0030A2  EC94  F01D         	call	_turnLeft	;wreg free
  8552   0030A6                     
  8553                           ;dc_motor.c: 486:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8554   0030A6  0E05               	movlw	5
  8555   0030A8  6E36               	movwf	(??_calibration+1)^0,c
  8556   0030AA  0E0F               	movlw	15
  8557   0030AC  6E35               	movwf	??_calibration^0,c
  8558   0030AE  0EF1               	movlw	241
  8559   0030B0                     u5387:
  8560   0030B0  2EE8               	decfsz	wreg,f,c
  8561   0030B2  D7FE               	bra	u5387
  8562   0030B4  2E35               	decfsz	??_calibration^0,f,c
  8563   0030B6  D7FC               	bra	u5387
  8564   0030B8  2E36               	decfsz	(??_calibration+1)^0,f,c
  8565   0030BA  D7FA               	bra	u5387
  8566   0030BC  0000               	nop	
  8567   0030BE                     
  8568                           ;dc_motor.c: 487:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8569   0030BE  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8570   0030C2  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8571   0030C6  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8572   0030CA  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8573   0030CE  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8574   0030D2  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8575   0030D6  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8576   0030DA  50DF               	movf	indf2,w,c
  8577   0030DC  6E24               	movwf	turnLeft@turnDuration^0,c
  8578   0030DE  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8579   0030E2  EC94  F01D         	call	_turnLeft	;wreg free
  8580                           
  8581                           ;dc_motor.c: 488:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8582   0030E6  0E05               	movlw	5
  8583   0030E8  6E36               	movwf	(??_calibration+1)^0,c
  8584   0030EA  0E0F               	movlw	15
  8585   0030EC  6E35               	movwf	??_calibration^0,c
  8586   0030EE  0EF1               	movlw	241
  8587   0030F0                     u5397:
  8588   0030F0  2EE8               	decfsz	wreg,f,c
  8589   0030F2  D7FE               	bra	u5397
  8590   0030F4  2E35               	decfsz	??_calibration^0,f,c
  8591   0030F6  D7FC               	bra	u5397
  8592   0030F8  2E36               	decfsz	(??_calibration+1)^0,f,c
  8593   0030FA  D7FA               	bra	u5397
  8594   0030FC  0000               	nop	
  8595   0030FE                     
  8596                           ;dc_motor.c: 489:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8597   0030FE  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8598   003102  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8599   003106  C02F  F021         	movff	calibration@mR,turnRight@mR
  8600   00310A  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8601   00310E  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8602   003112  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8603   003116  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8604   00311A  50DF               	movf	indf2,w,c
  8605   00311C  6E24               	movwf	turnRight@turnDuration^0,c
  8606   00311E  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8607   003122  ECAA  F01C         	call	_turnRight	;wreg free
  8608   003126                     
  8609                           ;dc_motor.c: 490:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8610   003126  0E05               	movlw	5
  8611   003128  6E36               	movwf	(??_calibration+1)^0,c
  8612   00312A  0E0F               	movlw	15
  8613   00312C  6E35               	movwf	??_calibration^0,c
  8614   00312E  0EF1               	movlw	241
  8615   003130                     u5407:
  8616   003130  2EE8               	decfsz	wreg,f,c
  8617   003132  D7FE               	bra	u5407
  8618   003134  2E35               	decfsz	??_calibration^0,f,c
  8619   003136  D7FC               	bra	u5407
  8620   003138  2E36               	decfsz	(??_calibration+1)^0,f,c
  8621   00313A  D7FA               	bra	u5407
  8622   00313C  0000               	nop	
  8623                           
  8624                           ;dc_motor.c: 491:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8625   00313E  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8626   003142  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8627   003146  C02F  F021         	movff	calibration@mR,turnRight@mR
  8628   00314A  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8629   00314E  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8630   003152  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8631   003156  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8632   00315A  50DF               	movf	indf2,w,c
  8633   00315C  6E24               	movwf	turnRight@turnDuration^0,c
  8634   00315E  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8635   003162  ECAA  F01C         	call	_turnRight	;wreg free
  8636   003166                     l682:
  8637   003166  A48E               	btfss	142,2,c	;volatile
  8638   003168  EFB8  F018         	goto	u4001
  8639   00316C  EFBA  F018         	goto	u4000
  8640   003170                     u4001:
  8641   003170  EFC1  F018         	goto	l686
  8642   003174                     u4000:
  8643   003174  B68E               	btfsc	142,3,c	;volatile
  8644   003176  EFBF  F018         	goto	u4011
  8645   00317A  EFC1  F018         	goto	u4010
  8646   00317E                     u4011:
  8647   00317E  EFB3  F018         	goto	l682
  8648   003182                     u4010:
  8649   003182                     l686:
  8650                           
  8651                           ;dc_motor.c: 496:         if (!PORTFbits.RF2 && *turnDuration>0) {
  8652   003182  B48E               	btfsc	142,2,c	;volatile
  8653   003184  EFC6  F018         	goto	u4021
  8654   003188  EFC8  F018         	goto	u4020
  8655   00318C                     u4021:
  8656   00318C  EFDC  F018         	goto	l687
  8657   003190                     u4020:
  8658   003190  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8659   003194  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8660   003198  50DF               	movf	indf2,w,c
  8661   00319A  B4D8               	btfsc	status,2,c
  8662   00319C  EFD2  F018         	goto	u4031
  8663   0031A0  EFD4  F018         	goto	u4030
  8664   0031A4                     u4031:
  8665   0031A4  EFDC  F018         	goto	l687
  8666   0031A8                     u4030:
  8667   0031A8                     
  8668                           ;dc_motor.c: 497:             (*turnDuration)--;
  8669   0031A8  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8670   0031AC  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8671   0031B0  06DF               	decf	indf2,f,c
  8672   0031B2                     
  8673                           ;dc_motor.c: 498:             LATDbits.LATD7 = 1;
  8674   0031B2  8E7C               	bsf	124,7,c	;volatile
  8675                           
  8676                           ;dc_motor.c: 499:         }
  8677   0031B4  EFE9  F018         	goto	l4890
  8678   0031B8                     l687:
  8679   0031B8  B68E               	btfsc	142,3,c	;volatile
  8680   0031BA  EFE1  F018         	goto	u4041
  8681   0031BE  EFE3  F018         	goto	u4040
  8682   0031C2                     u4041:
  8683   0031C2  EFE9  F018         	goto	l4890
  8684   0031C6                     u4040:
  8685   0031C6                     
  8686                           ;dc_motor.c: 502:             (*turnDuration)++;
  8687   0031C6  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8688   0031CA  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8689   0031CE  2ADF               	incf	indf2,f,c
  8690   0031D0                     
  8691                           ;dc_motor.c: 503:             LATHbits.LATH3 = 1;
  8692   0031D0  8680               	bsf	128,3,c	;volatile
  8693   0031D2                     l4890:
  8694                           
  8695                           ;dc_motor.c: 506:         _delay((unsigned long)((500)*(64000000/4000.0)));
  8696   0031D2  0E29               	movlw	41
  8697   0031D4  6E36               	movwf	(??_calibration+1)^0,c
  8698   0031D6  0E96               	movlw	150
  8699   0031D8  6E35               	movwf	??_calibration^0,c
  8700   0031DA  0E7F               	movlw	127
  8701   0031DC                     u5417:
  8702   0031DC  2EE8               	decfsz	wreg,f,c
  8703   0031DE  D7FE               	bra	u5417
  8704   0031E0  2E35               	decfsz	??_calibration^0,f,c
  8705   0031E2  D7FC               	bra	u5417
  8706   0031E4  2E36               	decfsz	(??_calibration+1)^0,f,c
  8707   0031E6  D7FA               	bra	u5417
  8708   0031E8  0000               	nop	
  8709   0031EA                     
  8710                           ;dc_motor.c: 508:         if (!PORTFbits.RF3) {
  8711   0031EA  B68E               	btfsc	142,3,c	;volatile
  8712   0031EC  EFFA  F018         	goto	u4051
  8713   0031F0  EFFC  F018         	goto	u4050
  8714   0031F4                     u4051:
  8715   0031F4  EF03  F019         	goto	l690
  8716   0031F8                     u4050:
  8717   0031F8                     
  8718                           ;dc_motor.c: 509:             (*turnDuration)--;
  8719   0031F8  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8720   0031FC  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8721   003200  06DF               	decf	indf2,f,c
  8722                           
  8723                           ;dc_motor.c: 510:             break;
  8724   003202  EF7B  F019         	goto	l691
  8725   003206                     l690:
  8726                           
  8727                           ;dc_motor.c: 513:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8728   003206  9680               	bcf	128,3,c	;volatile
  8729   003208  9E7C               	bcf	124,7,c	;volatile
  8730   00320A                     
  8731                           ;dc_motor.c: 516:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8732   00320A  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8733   00320E  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8734   003212  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8735   003216  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8736   00321A  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8737   00321E  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8738   003222  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8739   003226  50DF               	movf	indf2,w,c
  8740   003228  6E24               	movwf	turnLeft@turnDuration^0,c
  8741   00322A  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8742   00322E  EC94  F01D         	call	_turnLeft	;wreg free
  8743   003232                     
  8744                           ;dc_motor.c: 517:         _delay((unsigned long)((50)*(64000000/4000.0)));
  8745   003232  0E05               	movlw	5
  8746   003234  6E36               	movwf	(??_calibration+1)^0,c
  8747   003236  0E0F               	movlw	15
  8748   003238  6E35               	movwf	??_calibration^0,c
  8749   00323A  0EF1               	movlw	241
  8750   00323C                     u5427:
  8751   00323C  2EE8               	decfsz	wreg,f,c
  8752   00323E  D7FE               	bra	u5427
  8753   003240  2E35               	decfsz	??_calibration^0,f,c
  8754   003242  D7FC               	bra	u5427
  8755   003244  2E36               	decfsz	(??_calibration+1)^0,f,c
  8756   003246  D7FA               	bra	u5427
  8757   003248  0000               	nop	
  8758   00324A                     
  8759                           ;dc_motor.c: 518:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8760   00324A  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  8761   00324E  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  8762   003252  C02F  F021         	movff	calibration@mR,turnLeft@mR
  8763   003256  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  8764   00325A  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  8765   00325E  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8766   003262  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8767   003266  50DF               	movf	indf2,w,c
  8768   003268  6E24               	movwf	turnLeft@turnDuration^0,c
  8769   00326A  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  8770   00326E  EC94  F01D         	call	_turnLeft	;wreg free
  8771                           
  8772                           ;dc_motor.c: 519:         _delay((unsigned long)((50)*(64000000/4000.0)));
  8773   003272  0E05               	movlw	5
  8774   003274  6E36               	movwf	(??_calibration+1)^0,c
  8775   003276  0E0F               	movlw	15
  8776   003278  6E35               	movwf	??_calibration^0,c
  8777   00327A  0EF1               	movlw	241
  8778   00327C                     u5437:
  8779   00327C  2EE8               	decfsz	wreg,f,c
  8780   00327E  D7FE               	bra	u5437
  8781   003280  2E35               	decfsz	??_calibration^0,f,c
  8782   003282  D7FC               	bra	u5437
  8783   003284  2E36               	decfsz	(??_calibration+1)^0,f,c
  8784   003286  D7FA               	bra	u5437
  8785   003288  0000               	nop	
  8786   00328A                     
  8787                           ;dc_motor.c: 520:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8788   00328A  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8789   00328E  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8790   003292  C02F  F021         	movff	calibration@mR,turnRight@mR
  8791   003296  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8792   00329A  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8793   00329E  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8794   0032A2  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8795   0032A6  50DF               	movf	indf2,w,c
  8796   0032A8  6E24               	movwf	turnRight@turnDuration^0,c
  8797   0032AA  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8798   0032AE  ECAA  F01C         	call	_turnRight	;wreg free
  8799   0032B2                     
  8800                           ;dc_motor.c: 521:         _delay((unsigned long)((50)*(64000000/4000.0)));
  8801   0032B2  0E05               	movlw	5
  8802   0032B4  6E36               	movwf	(??_calibration+1)^0,c
  8803   0032B6  0E0F               	movlw	15
  8804   0032B8  6E35               	movwf	??_calibration^0,c
  8805   0032BA  0EF1               	movlw	241
  8806   0032BC                     u5447:
  8807   0032BC  2EE8               	decfsz	wreg,f,c
  8808   0032BE  D7FE               	bra	u5447
  8809   0032C0  2E35               	decfsz	??_calibration^0,f,c
  8810   0032C2  D7FC               	bra	u5447
  8811   0032C4  2E36               	decfsz	(??_calibration+1)^0,f,c
  8812   0032C6  D7FA               	bra	u5447
  8813   0032C8  0000               	nop	
  8814                           
  8815                           ;dc_motor.c: 522:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  8816   0032CA  C02D  F01F         	movff	calibration@mL,turnRight@mL
  8817   0032CE  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  8818   0032D2  C02F  F021         	movff	calibration@mR,turnRight@mR
  8819   0032D6  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  8820   0032DA  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  8821   0032DE  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  8822   0032E2  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  8823   0032E6  50DF               	movf	indf2,w,c
  8824   0032E8  6E24               	movwf	turnRight@turnDuration^0,c
  8825   0032EA  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  8826   0032EE  ECAA  F01C         	call	_turnRight	;wreg free
  8827   0032F2  EFB3  F018         	goto	l682
  8828   0032F6                     l691:
  8829                           
  8830                           ;dc_motor.c: 527:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8831   0032F6  8680               	bsf	128,3,c	;volatile
  8832   0032F8  8E7C               	bsf	124,7,c	;volatile
  8833   0032FA                     
  8834                           ;dc_motor.c: 528:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8835   0032FA  0E09               	movlw	9
  8836   0032FC  6E36               	movwf	(??_calibration+1)^0,c
  8837   0032FE  0E1E               	movlw	30
  8838   003300  6E35               	movwf	??_calibration^0,c
  8839   003302  0EE4               	movlw	228
  8840   003304                     u5457:
  8841   003304  2EE8               	decfsz	wreg,f,c
  8842   003306  D7FE               	bra	u5457
  8843   003308  2E35               	decfsz	??_calibration^0,f,c
  8844   00330A  D7FC               	bra	u5457
  8845   00330C  2E36               	decfsz	(??_calibration+1)^0,f,c
  8846   00330E  D7FA               	bra	u5457
  8847   003310  D000               	nop2	
  8848   003312                     
  8849                           ;dc_motor.c: 529:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8850   003312  9680               	bcf	128,3,c	;volatile
  8851   003314  9E7C               	bcf	124,7,c	;volatile
  8852   003316  0012               	return		;funcret
  8853   003318                     __end_of_calibration:
  8854                           	callstack 0
  8855                           
  8856 ;; *************** function _turnRight *****************
  8857 ;; Defined at:
  8858 ;;		line 400 in file "dc_motor.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8861 ;;		 -> main@motorL(10), 
  8862 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8863 ;;		 -> main@motorR(10), 
  8864 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  8865 ;;  turnDuration    1   35[COMRAM] unsigned char 
  8866 ;;  turnRamp        1   36[COMRAM] unsigned char 
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;  cur_power       2   42[COMRAM] int 
  8869 ;;  i               2   40[COMRAM] int 
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  1    wreg      void 
  8872 ;; Registers used:
  8873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8879 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8880 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8881 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8882 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8883 ;;Total ram usage:       14 bytes
  8884 ;; Hardware stack levels used: 1
  8885 ;; Hardware stack levels required when called: 7
  8886 ;; This function calls:
  8887 ;;		_setMotorPWM
  8888 ;; This function is called by:
  8889 ;;		_move
  8890 ;;		_returnHome
  8891 ;;		_lostReturnHome
  8892 ;;		_calibration
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           	psect	text32
  8897   003954                     __ptext32:
  8898                           	callstack 0
  8899   003954                     _turnRight:
  8900                           	callstack 22
  8901   003954                     
  8902                           ;dc_motor.c: 400: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 401: {;dc_motor.c: 402:     mL->dir
      +                          ection = 1;
  8903   003954  EE20 F001          	lfsr	2,1
  8904   003958  501F               	movf	turnRight@mL^0,w,c
  8905   00395A  26D9               	addwf	fsr2l,f,c
  8906   00395C  5020               	movf	(turnRight@mL+1)^0,w,c
  8907   00395E  22DA               	addwfc	fsr2h,f,c
  8908   003960  0E01               	movlw	1
  8909   003962  6EDF               	movwf	indf2,c
  8910                           
  8911                           ;dc_motor.c: 403:     mR->direction = 0;
  8912   003964  EE20 F001          	lfsr	2,1
  8913   003968  5021               	movf	turnRight@mR^0,w,c
  8914   00396A  26D9               	addwf	fsr2l,f,c
  8915   00396C  5022               	movf	(turnRight@mR+1)^0,w,c
  8916   00396E  22DA               	addwfc	fsr2h,f,c
  8917   003970  6ADF               	clrf	indf2,c
  8918   003972                     
  8919                           ;dc_motor.c: 404:     int i;;dc_motor.c: 405:     int cur_power;;dc_motor.c: 406:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  8920   003972  0E00               	movlw	0
  8921   003974  6E2C               	movwf	(turnRight@cur_power+1)^0,c
  8922   003976  0E01               	movlw	1
  8923   003978  6E2B               	movwf	turnRight@cur_power^0,c
  8924   00397A  EF08  F01D         	goto	l4234
  8925   00397E                     l4220:
  8926                           
  8927                           ;dc_motor.c: 407:         mL->power = cur_power+mL->compensation;
  8928   00397E  EE20 F009          	lfsr	2,9
  8929   003982  501F               	movf	turnRight@mL^0,w,c
  8930   003984  26D9               	addwf	fsr2l,f,c
  8931   003986  5020               	movf	(turnRight@mL+1)^0,w,c
  8932   003988  22DA               	addwfc	fsr2h,f,c
  8933   00398A  50DF               	movf	indf2,w,c
  8934   00398C  242B               	addwf	turnRight@cur_power^0,w,c
  8935   00398E  C01F  FFD9         	movff	turnRight@mL,fsr2l
  8936   003992  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  8937   003996  6EDF               	movwf	indf2,c
  8938                           
  8939                           ;dc_motor.c: 408:         mR->power = cur_power+mR->compensation;
  8940   003998  EE20 F009          	lfsr	2,9
  8941   00399C  5021               	movf	turnRight@mR^0,w,c
  8942   00399E  26D9               	addwf	fsr2l,f,c
  8943   0039A0  5022               	movf	(turnRight@mR+1)^0,w,c
  8944   0039A2  22DA               	addwfc	fsr2h,f,c
  8945   0039A4  50DF               	movf	indf2,w,c
  8946   0039A6  242B               	addwf	turnRight@cur_power^0,w,c
  8947   0039A8  C021  FFD9         	movff	turnRight@mR,fsr2l
  8948   0039AC  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  8949   0039B0  6EDF               	movwf	indf2,c
  8950   0039B2                     
  8951                           ;dc_motor.c: 409:         setMotorPWM(mL);
  8952   0039B2  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  8953   0039B6  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  8954   0039BA  EC7E  F01E         	call	_setMotorPWM	;wreg free
  8955   0039BE                     
  8956                           ;dc_motor.c: 410:         setMotorPWM(mR);
  8957   0039BE  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  8958   0039C2  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  8959   0039C6  EC7E  F01E         	call	_setMotorPWM	;wreg free
  8960   0039CA                     
  8961                           ;dc_motor.c: 411:         for (i=0;i<turnRamp;i++) {
  8962   0039CA  0E00               	movlw	0
  8963   0039CC  6E2A               	movwf	(turnRight@i+1)^0,c
  8964   0039CE  0E00               	movlw	0
  8965   0039D0  6E29               	movwf	turnRight@i^0,c
  8966   0039D2  EFF4  F01C         	goto	l640
  8967   0039D6                     l4228:
  8968                           
  8969                           ;dc_motor.c: 412:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8970   0039D6  0ED0               	movlw	208
  8971   0039D8  6E26               	movwf	??_turnRight^0,c
  8972   0039DA  0ECA               	movlw	202
  8973   0039DC                     u5467:
  8974   0039DC  2EE8               	decfsz	wreg,f,c
  8975   0039DE  D7FE               	bra	u5467
  8976   0039E0  2E26               	decfsz	??_turnRight^0,f,c
  8977   0039E2  D7FC               	bra	u5467
  8978   0039E4                     
  8979                           ;dc_motor.c: 413:         }
  8980   0039E4  4A29               	infsnz	turnRight@i^0,f,c
  8981   0039E6  2A2A               	incf	(turnRight@i+1)^0,f,c
  8982   0039E8                     l640:
  8983   0039E8  5025               	movf	turnRight@turnRamp^0,w,c
  8984   0039EA  6E26               	movwf	??_turnRight^0,c
  8985   0039EC  6A27               	clrf	(??_turnRight+1)^0,c
  8986   0039EE  5026               	movf	??_turnRight^0,w,c
  8987   0039F0  5C29               	subwf	turnRight@i^0,w,c
  8988   0039F2  502A               	movf	(turnRight@i+1)^0,w,c
  8989   0039F4  0A80               	xorlw	128
  8990   0039F6  6E28               	movwf	(??_turnRight+2)^0,c
  8991   0039F8  5027               	movf	(??_turnRight+1)^0,w,c
  8992   0039FA  0A80               	xorlw	128
  8993   0039FC  5828               	subwfb	(??_turnRight+2)^0,w,c
  8994   0039FE  A0D8               	btfss	status,0,c
  8995   003A00  EF04  F01D         	goto	u3311
  8996   003A04  EF06  F01D         	goto	u3310
  8997   003A08                     u3311:
  8998   003A08  EFEB  F01C         	goto	l4228
  8999   003A0C                     u3310:
  9000   003A0C                     
  9001                           ;dc_motor.c: 414:     }
  9002   003A0C  4A2B               	infsnz	turnRight@cur_power^0,f,c
  9003   003A0E  2A2C               	incf	(turnRight@cur_power+1)^0,f,c
  9004   003A10                     l4234:
  9005   003A10  5023               	movf	turnRight@turnSpeed^0,w,c
  9006   003A12  6E26               	movwf	??_turnRight^0,c
  9007   003A14  6A27               	clrf	(??_turnRight+1)^0,c
  9008   003A16  502B               	movf	turnRight@cur_power^0,w,c
  9009   003A18  5C26               	subwf	??_turnRight^0,w,c
  9010   003A1A  5027               	movf	(??_turnRight+1)^0,w,c
  9011   003A1C  0A80               	xorlw	128
  9012   003A1E  6E28               	movwf	(??_turnRight+2)^0,c
  9013   003A20  502C               	movf	(turnRight@cur_power+1)^0,w,c
  9014   003A22  0A80               	xorlw	128
  9015   003A24  5828               	subwfb	(??_turnRight+2)^0,w,c
  9016   003A26  B0D8               	btfsc	status,0,c
  9017   003A28  EF18  F01D         	goto	u3321
  9018   003A2C  EF1A  F01D         	goto	u3320
  9019   003A30                     u3321:
  9020   003A30  EFBF  F01C         	goto	l4220
  9021   003A34                     u3320:
  9022   003A34                     
  9023                           ;dc_motor.c: 416:     for (i=0;i<turnDuration;i++) {
  9024   003A34  0E00               	movlw	0
  9025   003A36  6E2A               	movwf	(turnRight@i+1)^0,c
  9026   003A38  0E00               	movlw	0
  9027   003A3A  6E29               	movwf	turnRight@i^0,c
  9028   003A3C  EF29  F01D         	goto	l644
  9029   003A40                     l4238:
  9030                           
  9031                           ;dc_motor.c: 417:             _delay((unsigned long)((10)*(64000000/4000.0)));
  9032   003A40  0ED0               	movlw	208
  9033   003A42  6E26               	movwf	??_turnRight^0,c
  9034   003A44  0ECA               	movlw	202
  9035   003A46                     u5477:
  9036   003A46  2EE8               	decfsz	wreg,f,c
  9037   003A48  D7FE               	bra	u5477
  9038   003A4A  2E26               	decfsz	??_turnRight^0,f,c
  9039   003A4C  D7FC               	bra	u5477
  9040   003A4E                     
  9041                           ;dc_motor.c: 418:         }
  9042   003A4E  4A29               	infsnz	turnRight@i^0,f,c
  9043   003A50  2A2A               	incf	(turnRight@i+1)^0,f,c
  9044   003A52                     l644:
  9045   003A52  5024               	movf	turnRight@turnDuration^0,w,c
  9046   003A54  6E26               	movwf	??_turnRight^0,c
  9047   003A56  6A27               	clrf	(??_turnRight+1)^0,c
  9048   003A58  5026               	movf	??_turnRight^0,w,c
  9049   003A5A  5C29               	subwf	turnRight@i^0,w,c
  9050   003A5C  502A               	movf	(turnRight@i+1)^0,w,c
  9051   003A5E  0A80               	xorlw	128
  9052   003A60  6E28               	movwf	(??_turnRight+2)^0,c
  9053   003A62  5027               	movf	(??_turnRight+1)^0,w,c
  9054   003A64  0A80               	xorlw	128
  9055   003A66  5828               	subwfb	(??_turnRight+2)^0,w,c
  9056   003A68  A0D8               	btfss	status,0,c
  9057   003A6A  EF39  F01D         	goto	u3331
  9058   003A6E  EF3B  F01D         	goto	u3330
  9059   003A72                     u3331:
  9060   003A72  EF20  F01D         	goto	l4238
  9061   003A76                     u3330:
  9062   003A76                     
  9063                           ;dc_motor.c: 420:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  9064   003A76  C023  F02B         	movff	turnRight@turnSpeed,turnRight@cur_power
  9065   003A7A  6A2C               	clrf	(turnRight@cur_power+1)^0,c
  9066   003A7C                     l4242:
  9067   003A7C  BE2C               	btfsc	(turnRight@cur_power+1)^0,7,c
  9068   003A7E  EF45  F01D         	goto	u3340
  9069   003A82  EF43  F01D         	goto	u3341
  9070   003A86                     u3341:
  9071   003A86  EF47  F01D         	goto	l4246
  9072   003A8A                     u3340:
  9073   003A8A  EF93  F01D         	goto	l652
  9074   003A8E                     l4246:
  9075                           
  9076                           ;dc_motor.c: 421:         mL->power = cur_power+mL->compensation;
  9077   003A8E  EE20 F009          	lfsr	2,9
  9078   003A92  501F               	movf	turnRight@mL^0,w,c
  9079   003A94  26D9               	addwf	fsr2l,f,c
  9080   003A96  5020               	movf	(turnRight@mL+1)^0,w,c
  9081   003A98  22DA               	addwfc	fsr2h,f,c
  9082   003A9A  50DF               	movf	indf2,w,c
  9083   003A9C  242B               	addwf	turnRight@cur_power^0,w,c
  9084   003A9E  C01F  FFD9         	movff	turnRight@mL,fsr2l
  9085   003AA2  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  9086   003AA6  6EDF               	movwf	indf2,c
  9087                           
  9088                           ;dc_motor.c: 422:         mR->power = cur_power+mR->compensation;
  9089   003AA8  EE20 F009          	lfsr	2,9
  9090   003AAC  5021               	movf	turnRight@mR^0,w,c
  9091   003AAE  26D9               	addwf	fsr2l,f,c
  9092   003AB0  5022               	movf	(turnRight@mR+1)^0,w,c
  9093   003AB2  22DA               	addwfc	fsr2h,f,c
  9094   003AB4  50DF               	movf	indf2,w,c
  9095   003AB6  242B               	addwf	turnRight@cur_power^0,w,c
  9096   003AB8  C021  FFD9         	movff	turnRight@mR,fsr2l
  9097   003ABC  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  9098   003AC0  6EDF               	movwf	indf2,c
  9099   003AC2                     
  9100                           ;dc_motor.c: 423:         setMotorPWM(mL);
  9101   003AC2  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  9102   003AC6  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  9103   003ACA  EC7E  F01E         	call	_setMotorPWM	;wreg free
  9104   003ACE                     
  9105                           ;dc_motor.c: 424:         setMotorPWM(mR);
  9106   003ACE  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  9107   003AD2  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  9108   003AD6  EC7E  F01E         	call	_setMotorPWM	;wreg free
  9109   003ADA                     
  9110                           ;dc_motor.c: 425:         for (i=0;i<turnRamp;i++) {
  9111   003ADA  0E00               	movlw	0
  9112   003ADC  6E2A               	movwf	(turnRight@i+1)^0,c
  9113   003ADE  0E00               	movlw	0
  9114   003AE0  6E29               	movwf	turnRight@i^0,c
  9115   003AE2  EF7C  F01D         	goto	l649
  9116   003AE6                     l4254:
  9117                           
  9118                           ;dc_motor.c: 426:             _delay((unsigned long)((10)*(64000000/4000.0)));
  9119   003AE6  0ED0               	movlw	208
  9120   003AE8  6E26               	movwf	??_turnRight^0,c
  9121   003AEA  0ECA               	movlw	202
  9122   003AEC                     u5487:
  9123   003AEC  2EE8               	decfsz	wreg,f,c
  9124   003AEE  D7FE               	bra	u5487
  9125   003AF0  2E26               	decfsz	??_turnRight^0,f,c
  9126   003AF2  D7FC               	bra	u5487
  9127   003AF4                     
  9128                           ;dc_motor.c: 427:         }
  9129   003AF4  4A29               	infsnz	turnRight@i^0,f,c
  9130   003AF6  2A2A               	incf	(turnRight@i+1)^0,f,c
  9131   003AF8                     l649:
  9132   003AF8  5025               	movf	turnRight@turnRamp^0,w,c
  9133   003AFA  6E26               	movwf	??_turnRight^0,c
  9134   003AFC  6A27               	clrf	(??_turnRight+1)^0,c
  9135   003AFE  5026               	movf	??_turnRight^0,w,c
  9136   003B00  5C29               	subwf	turnRight@i^0,w,c
  9137   003B02  502A               	movf	(turnRight@i+1)^0,w,c
  9138   003B04  0A80               	xorlw	128
  9139   003B06  6E28               	movwf	(??_turnRight+2)^0,c
  9140   003B08  5027               	movf	(??_turnRight+1)^0,w,c
  9141   003B0A  0A80               	xorlw	128
  9142   003B0C  5828               	subwfb	(??_turnRight+2)^0,w,c
  9143   003B0E  A0D8               	btfss	status,0,c
  9144   003B10  EF8C  F01D         	goto	u3351
  9145   003B14  EF8E  F01D         	goto	u3350
  9146   003B18                     u3351:
  9147   003B18  EF73  F01D         	goto	l4254
  9148   003B1C                     u3350:
  9149   003B1C                     
  9150                           ;dc_motor.c: 428:     }
  9151   003B1C  062B               	decf	turnRight@cur_power^0,f,c
  9152   003B1E  A0D8               	btfss	status,0,c
  9153   003B20  062C               	decf	(turnRight@cur_power+1)^0,f,c
  9154   003B22  EF3E  F01D         	goto	l4242
  9155   003B26                     l652:
  9156   003B26  0012               	return		;funcret
  9157   003B28                     __end_of_turnRight:
  9158                           	callstack 0
  9159                           
  9160 ;; *************** function _turnLeft *****************
  9161 ;; Defined at:
  9162 ;;		line 368 in file "dc_motor.c"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  9165 ;;		 -> main@motorL(10), 
  9166 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  9167 ;;		 -> main@motorR(10), 
  9168 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  9169 ;;  turnDuration    1   35[COMRAM] unsigned char 
  9170 ;;  turnRamp        1   36[COMRAM] unsigned char 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  cur_power       2   42[COMRAM] int 
  9173 ;;  i               2   40[COMRAM] int 
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  1    wreg      void 
  9176 ;; Registers used:
  9177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9183 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9184 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9185 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9186 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9187 ;;Total ram usage:       14 bytes
  9188 ;; Hardware stack levels used: 1
  9189 ;; Hardware stack levels required when called: 7
  9190 ;; This function calls:
  9191 ;;		_setMotorPWM
  9192 ;; This function is called by:
  9193 ;;		_move
  9194 ;;		_returnHome
  9195 ;;		_lostReturnHome
  9196 ;;		_calibration
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           	psect	text33
  9201   003B28                     __ptext33:
  9202                           	callstack 0
  9203   003B28                     _turnLeft:
  9204                           	callstack 22
  9205   003B28                     
  9206                           ;dc_motor.c: 368: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 369: {;dc_motor.c: 370:     mL->dire
      +                          ction = 0;
  9207   003B28  EE20 F001          	lfsr	2,1
  9208   003B2C  501F               	movf	turnLeft@mL^0,w,c
  9209   003B2E  26D9               	addwf	fsr2l,f,c
  9210   003B30  5020               	movf	(turnLeft@mL+1)^0,w,c
  9211   003B32  22DA               	addwfc	fsr2h,f,c
  9212   003B34  6ADF               	clrf	indf2,c
  9213                           
  9214                           ;dc_motor.c: 371:     mR->direction = 1;
  9215   003B36  EE20 F001          	lfsr	2,1
  9216   003B3A  5021               	movf	turnLeft@mR^0,w,c
  9217   003B3C  26D9               	addwf	fsr2l,f,c
  9218   003B3E  5022               	movf	(turnLeft@mR+1)^0,w,c
  9219   003B40  22DA               	addwfc	fsr2h,f,c
  9220   003B42  0E01               	movlw	1
  9221   003B44  6EDF               	movwf	indf2,c
  9222   003B46                     
  9223                           ;dc_motor.c: 372:     int i;;dc_motor.c: 373:     int cur_power;;dc_motor.c: 374:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  9224   003B46  0E00               	movlw	0
  9225   003B48  6E2C               	movwf	(turnLeft@cur_power+1)^0,c
  9226   003B4A  0E01               	movlw	1
  9227   003B4C  6E2B               	movwf	turnLeft@cur_power^0,c
  9228   003B4E  EFF2  F01D         	goto	l4280
  9229   003B52                     l4266:
  9230                           
  9231                           ;dc_motor.c: 375:         mL->power = cur_power+mL->compensation;
  9232   003B52  EE20 F009          	lfsr	2,9
  9233   003B56  501F               	movf	turnLeft@mL^0,w,c
  9234   003B58  26D9               	addwf	fsr2l,f,c
  9235   003B5A  5020               	movf	(turnLeft@mL+1)^0,w,c
  9236   003B5C  22DA               	addwfc	fsr2h,f,c
  9237   003B5E  50DF               	movf	indf2,w,c
  9238   003B60  242B               	addwf	turnLeft@cur_power^0,w,c
  9239   003B62  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  9240   003B66  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  9241   003B6A  6EDF               	movwf	indf2,c
  9242                           
  9243                           ;dc_motor.c: 376:         mR->power = cur_power+mR->compensation;
  9244   003B6C  EE20 F009          	lfsr	2,9
  9245   003B70  5021               	movf	turnLeft@mR^0,w,c
  9246   003B72  26D9               	addwf	fsr2l,f,c
  9247   003B74  5022               	movf	(turnLeft@mR+1)^0,w,c
  9248   003B76  22DA               	addwfc	fsr2h,f,c
  9249   003B78  50DF               	movf	indf2,w,c
  9250   003B7A  242B               	addwf	turnLeft@cur_power^0,w,c
  9251   003B7C  C021  FFD9         	movff	turnLeft@mR,fsr2l
  9252   003B80  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  9253   003B84  6EDF               	movwf	indf2,c
  9254   003B86                     
  9255                           ;dc_motor.c: 377:         setMotorPWM(mL);
  9256   003B86  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  9257   003B8A  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9258   003B8E  EC7E  F01E         	call	_setMotorPWM	;wreg free
  9259   003B92                     
  9260                           ;dc_motor.c: 378:         setMotorPWM(mR);
  9261   003B92  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  9262   003B96  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9263   003B9A  EC7E  F01E         	call	_setMotorPWM	;wreg free
  9264   003B9E                     
  9265                           ;dc_motor.c: 379:         for (i=0;i<turnRamp;i++) {
  9266   003B9E  0E00               	movlw	0
  9267   003BA0  6E2A               	movwf	(turnLeft@i+1)^0,c
  9268   003BA2  0E00               	movlw	0
  9269   003BA4  6E29               	movwf	turnLeft@i^0,c
  9270   003BA6  EFDE  F01D         	goto	l623
  9271   003BAA                     l4274:
  9272                           
  9273                           ;dc_motor.c: 380:             _delay((unsigned long)((10)*(64000000/4000.0)));
  9274   003BAA  0ED0               	movlw	208
  9275   003BAC  6E26               	movwf	??_turnLeft^0,c
  9276   003BAE  0ECA               	movlw	202
  9277   003BB0                     u5497:
  9278   003BB0  2EE8               	decfsz	wreg,f,c
  9279   003BB2  D7FE               	bra	u5497
  9280   003BB4  2E26               	decfsz	??_turnLeft^0,f,c
  9281   003BB6  D7FC               	bra	u5497
  9282   003BB8                     
  9283                           ;dc_motor.c: 381:         }
  9284   003BB8  4A29               	infsnz	turnLeft@i^0,f,c
  9285   003BBA  2A2A               	incf	(turnLeft@i+1)^0,f,c
  9286   003BBC                     l623:
  9287   003BBC  5025               	movf	turnLeft@turnRamp^0,w,c
  9288   003BBE  6E26               	movwf	??_turnLeft^0,c
  9289   003BC0  6A27               	clrf	(??_turnLeft+1)^0,c
  9290   003BC2  5026               	movf	??_turnLeft^0,w,c
  9291   003BC4  5C29               	subwf	turnLeft@i^0,w,c
  9292   003BC6  502A               	movf	(turnLeft@i+1)^0,w,c
  9293   003BC8  0A80               	xorlw	128
  9294   003BCA  6E28               	movwf	(??_turnLeft+2)^0,c
  9295   003BCC  5027               	movf	(??_turnLeft+1)^0,w,c
  9296   003BCE  0A80               	xorlw	128
  9297   003BD0  5828               	subwfb	(??_turnLeft+2)^0,w,c
  9298   003BD2  A0D8               	btfss	status,0,c
  9299   003BD4  EFEE  F01D         	goto	u3361
  9300   003BD8  EFF0  F01D         	goto	u3360
  9301   003BDC                     u3361:
  9302   003BDC  EFD5  F01D         	goto	l4274
  9303   003BE0                     u3360:
  9304   003BE0                     
  9305                           ;dc_motor.c: 382:     }
  9306   003BE0  4A2B               	infsnz	turnLeft@cur_power^0,f,c
  9307   003BE2  2A2C               	incf	(turnLeft@cur_power+1)^0,f,c
  9308   003BE4                     l4280:
  9309   003BE4  5023               	movf	turnLeft@turnSpeed^0,w,c
  9310   003BE6  6E26               	movwf	??_turnLeft^0,c
  9311   003BE8  6A27               	clrf	(??_turnLeft+1)^0,c
  9312   003BEA  502B               	movf	turnLeft@cur_power^0,w,c
  9313   003BEC  5C26               	subwf	??_turnLeft^0,w,c
  9314   003BEE  5027               	movf	(??_turnLeft+1)^0,w,c
  9315   003BF0  0A80               	xorlw	128
  9316   003BF2  6E28               	movwf	(??_turnLeft+2)^0,c
  9317   003BF4  502C               	movf	(turnLeft@cur_power+1)^0,w,c
  9318   003BF6  0A80               	xorlw	128
  9319   003BF8  5828               	subwfb	(??_turnLeft+2)^0,w,c
  9320   003BFA  B0D8               	btfsc	status,0,c
  9321   003BFC  EF02  F01E         	goto	u3371
  9322   003C00  EF04  F01E         	goto	u3370
  9323   003C04                     u3371:
  9324   003C04  EFA9  F01D         	goto	l4266
  9325   003C08                     u3370:
  9326   003C08                     
  9327                           ;dc_motor.c: 384:     for (i=0;i<turnDuration;i++) {
  9328   003C08  0E00               	movlw	0
  9329   003C0A  6E2A               	movwf	(turnLeft@i+1)^0,c
  9330   003C0C  0E00               	movlw	0
  9331   003C0E  6E29               	movwf	turnLeft@i^0,c
  9332   003C10  EF13  F01E         	goto	l627
  9333   003C14                     l4284:
  9334                           
  9335                           ;dc_motor.c: 385:             _delay((unsigned long)((10)*(64000000/4000.0)));
  9336   003C14  0ED0               	movlw	208
  9337   003C16  6E26               	movwf	??_turnLeft^0,c
  9338   003C18  0ECA               	movlw	202
  9339   003C1A                     u5507:
  9340   003C1A  2EE8               	decfsz	wreg,f,c
  9341   003C1C  D7FE               	bra	u5507
  9342   003C1E  2E26               	decfsz	??_turnLeft^0,f,c
  9343   003C20  D7FC               	bra	u5507
  9344   003C22                     
  9345                           ;dc_motor.c: 386:         }
  9346   003C22  4A29               	infsnz	turnLeft@i^0,f,c
  9347   003C24  2A2A               	incf	(turnLeft@i+1)^0,f,c
  9348   003C26                     l627:
  9349   003C26  5024               	movf	turnLeft@turnDuration^0,w,c
  9350   003C28  6E26               	movwf	??_turnLeft^0,c
  9351   003C2A  6A27               	clrf	(??_turnLeft+1)^0,c
  9352   003C2C  5026               	movf	??_turnLeft^0,w,c
  9353   003C2E  5C29               	subwf	turnLeft@i^0,w,c
  9354   003C30  502A               	movf	(turnLeft@i+1)^0,w,c
  9355   003C32  0A80               	xorlw	128
  9356   003C34  6E28               	movwf	(??_turnLeft+2)^0,c
  9357   003C36  5027               	movf	(??_turnLeft+1)^0,w,c
  9358   003C38  0A80               	xorlw	128
  9359   003C3A  5828               	subwfb	(??_turnLeft+2)^0,w,c
  9360   003C3C  A0D8               	btfss	status,0,c
  9361   003C3E  EF23  F01E         	goto	u3381
  9362   003C42  EF25  F01E         	goto	u3380
  9363   003C46                     u3381:
  9364   003C46  EF0A  F01E         	goto	l4284
  9365   003C4A                     u3380:
  9366   003C4A                     
  9367                           ;dc_motor.c: 388:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  9368   003C4A  C023  F02B         	movff	turnLeft@turnSpeed,turnLeft@cur_power
  9369   003C4E  6A2C               	clrf	(turnLeft@cur_power+1)^0,c
  9370   003C50                     l4288:
  9371   003C50  BE2C               	btfsc	(turnLeft@cur_power+1)^0,7,c
  9372   003C52  EF2F  F01E         	goto	u3390
  9373   003C56  EF2D  F01E         	goto	u3391
  9374   003C5A                     u3391:
  9375   003C5A  EF31  F01E         	goto	l4292
  9376   003C5E                     u3390:
  9377   003C5E  EF7D  F01E         	goto	l635
  9378   003C62                     l4292:
  9379                           
  9380                           ;dc_motor.c: 389:         mL->power = cur_power+mL->compensation;
  9381   003C62  EE20 F009          	lfsr	2,9
  9382   003C66  501F               	movf	turnLeft@mL^0,w,c
  9383   003C68  26D9               	addwf	fsr2l,f,c
  9384   003C6A  5020               	movf	(turnLeft@mL+1)^0,w,c
  9385   003C6C  22DA               	addwfc	fsr2h,f,c
  9386   003C6E  50DF               	movf	indf2,w,c
  9387   003C70  242B               	addwf	turnLeft@cur_power^0,w,c
  9388   003C72  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  9389   003C76  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  9390   003C7A  6EDF               	movwf	indf2,c
  9391                           
  9392                           ;dc_motor.c: 390:         mR->power = cur_power+mR->compensation;
  9393   003C7C  EE20 F009          	lfsr	2,9
  9394   003C80  5021               	movf	turnLeft@mR^0,w,c
  9395   003C82  26D9               	addwf	fsr2l,f,c
  9396   003C84  5022               	movf	(turnLeft@mR+1)^0,w,c
  9397   003C86  22DA               	addwfc	fsr2h,f,c
  9398   003C88  50DF               	movf	indf2,w,c
  9399   003C8A  242B               	addwf	turnLeft@cur_power^0,w,c
  9400   003C8C  C021  FFD9         	movff	turnLeft@mR,fsr2l
  9401   003C90  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  9402   003C94  6EDF               	movwf	indf2,c
  9403   003C96                     
  9404                           ;dc_motor.c: 391:         setMotorPWM(mL);
  9405   003C96  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  9406   003C9A  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9407   003C9E  EC7E  F01E         	call	_setMotorPWM	;wreg free
  9408   003CA2                     
  9409                           ;dc_motor.c: 392:         setMotorPWM(mR);
  9410   003CA2  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  9411   003CA6  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9412   003CAA  EC7E  F01E         	call	_setMotorPWM	;wreg free
  9413   003CAE                     
  9414                           ;dc_motor.c: 393:         for (i=0;i<turnRamp;i++) {
  9415   003CAE  0E00               	movlw	0
  9416   003CB0  6E2A               	movwf	(turnLeft@i+1)^0,c
  9417   003CB2  0E00               	movlw	0
  9418   003CB4  6E29               	movwf	turnLeft@i^0,c
  9419   003CB6  EF66  F01E         	goto	l632
  9420   003CBA                     l4300:
  9421                           
  9422                           ;dc_motor.c: 394:             _delay((unsigned long)((10)*(64000000/4000.0)));
  9423   003CBA  0ED0               	movlw	208
  9424   003CBC  6E26               	movwf	??_turnLeft^0,c
  9425   003CBE  0ECA               	movlw	202
  9426   003CC0                     u5517:
  9427   003CC0  2EE8               	decfsz	wreg,f,c
  9428   003CC2  D7FE               	bra	u5517
  9429   003CC4  2E26               	decfsz	??_turnLeft^0,f,c
  9430   003CC6  D7FC               	bra	u5517
  9431   003CC8                     
  9432                           ;dc_motor.c: 395:         }
  9433   003CC8  4A29               	infsnz	turnLeft@i^0,f,c
  9434   003CCA  2A2A               	incf	(turnLeft@i+1)^0,f,c
  9435   003CCC                     l632:
  9436   003CCC  5025               	movf	turnLeft@turnRamp^0,w,c
  9437   003CCE  6E26               	movwf	??_turnLeft^0,c
  9438   003CD0  6A27               	clrf	(??_turnLeft+1)^0,c
  9439   003CD2  5026               	movf	??_turnLeft^0,w,c
  9440   003CD4  5C29               	subwf	turnLeft@i^0,w,c
  9441   003CD6  502A               	movf	(turnLeft@i+1)^0,w,c
  9442   003CD8  0A80               	xorlw	128
  9443   003CDA  6E28               	movwf	(??_turnLeft+2)^0,c
  9444   003CDC  5027               	movf	(??_turnLeft+1)^0,w,c
  9445   003CDE  0A80               	xorlw	128
  9446   003CE0  5828               	subwfb	(??_turnLeft+2)^0,w,c
  9447   003CE2  A0D8               	btfss	status,0,c
  9448   003CE4  EF76  F01E         	goto	u3401
  9449   003CE8  EF78  F01E         	goto	u3400
  9450   003CEC                     u3401:
  9451   003CEC  EF5D  F01E         	goto	l4300
  9452   003CF0                     u3400:
  9453   003CF0                     
  9454                           ;dc_motor.c: 396:     }
  9455   003CF0  062B               	decf	turnLeft@cur_power^0,f,c
  9456   003CF2  A0D8               	btfss	status,0,c
  9457   003CF4  062C               	decf	(turnLeft@cur_power+1)^0,f,c
  9458   003CF6  EF28  F01E         	goto	l4288
  9459   003CFA                     l635:
  9460   003CFA  0012               	return		;funcret
  9461   003CFC                     __end_of_turnLeft:
  9462                           	callstack 0
  9463                           
  9464 ;; *************** function _setMotorPWM *****************
  9465 ;; Defined at:
  9466 ;;		line 68 in file "dc_motor.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  m               2   24[COMRAM] PTR struct DC_motor
  9469 ;;		 -> main@motorR(10), main@motorL(10), 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  negDuty         1   29[COMRAM] unsigned char 
  9472 ;;  posDuty         1   28[COMRAM] unsigned char 
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  1    wreg      void 
  9475 ;; Registers used:
  9476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9483 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9484 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9485 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9486 ;;Total ram usage:        6 bytes
  9487 ;; Hardware stack levels used: 1
  9488 ;; Hardware stack levels required when called: 6
  9489 ;; This function calls:
  9490 ;;		___lwdiv
  9491 ;;		___wmul
  9492 ;; This function is called by:
  9493 ;;		_stop
  9494 ;;		_turnLeft
  9495 ;;		_turnRight
  9496 ;;		_fullSpeedAhead
  9497 ;;		_reverseOneSquare
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501                           	psect	text34
  9502   003CFC                     __ptext34:
  9503                           	callstack 0
  9504   003CFC                     _setMotorPWM:
  9505                           	callstack 23
  9506   003CFC                     
  9507                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  9508   003CFC  EE20 F002          	lfsr	2,2
  9509   003D00  5019               	movf	setMotorPWM@m^0,w,c
  9510   003D02  26D9               	addwf	fsr2l,f,c
  9511   003D04  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9512   003D06  22DA               	addwfc	fsr2h,f,c
  9513   003D08  50DF               	movf	indf2,w,c
  9514   003D0A  B4D8               	btfsc	status,2,c
  9515   003D0C  EF8A  F01E         	goto	u3211
  9516   003D10  EF8C  F01E         	goto	u3210
  9517   003D14                     u3211:
  9518   003D14  EFC0  F01E         	goto	l4120
  9519   003D18                     u3210:
  9520   003D18                     
  9521                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  9522   003D18  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  9523   003D1C  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9524   003D20  50DF               	movf	indf2,w,c
  9525   003D22  6E1B               	movwf	??_setMotorPWM^0,c
  9526   003D24  501B               	movf	??_setMotorPWM^0,w,c
  9527   003D26  6E0C               	movwf	___wmul@multiplier^0,c
  9528   003D28  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  9529   003D2A  EE20 F003          	lfsr	2,3
  9530   003D2E  5019               	movf	setMotorPWM@m^0,w,c
  9531   003D30  26D9               	addwf	fsr2l,f,c
  9532   003D32  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9533   003D34  22DA               	addwfc	fsr2h,f,c
  9534   003D36  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  9535   003D3A  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  9536   003D3E  ECC4  F023         	call	___wmul	;wreg free
  9537   003D42  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  9538   003D46  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  9539   003D4A  0E00               	movlw	0
  9540   003D4C  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  9541   003D4E  0E64               	movlw	100
  9542   003D50  6E14               	movwf	___lwdiv@divisor^0,c
  9543   003D52  EC26  F022         	call	___lwdiv	;wreg free
  9544   003D56  EE20 F003          	lfsr	2,3
  9545   003D5A  5019               	movf	setMotorPWM@m^0,w,c
  9546   003D5C  26D9               	addwf	fsr2l,f,c
  9547   003D5E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9548   003D60  22DA               	addwfc	fsr2h,f,c
  9549   003D62  50DF               	movf	indf2,w,c
  9550   003D64  6E1C               	movwf	(??_setMotorPWM+1)^0,c
  9551   003D66  5012               	movf	?___lwdiv^0,w,c
  9552   003D68  5C1C               	subwf	(??_setMotorPWM+1)^0,w,c
  9553   003D6A  6E1D               	movwf	setMotorPWM@posDuty^0,c
  9554   003D6C                     
  9555                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  9556   003D6C  EE20 F003          	lfsr	2,3
  9557   003D70  5019               	movf	setMotorPWM@m^0,w,c
  9558   003D72  26D9               	addwf	fsr2l,f,c
  9559   003D74  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9560   003D76  22DA               	addwfc	fsr2h,f,c
  9561   003D78  50DF               	movf	indf2,w,c
  9562   003D7A  6E1E               	movwf	setMotorPWM@negDuty^0,c
  9563                           
  9564                           ;dc_motor.c: 75:     }
  9565   003D7C  EFE3  F01E         	goto	l4124
  9566   003D80                     l4120:
  9567                           
  9568                           ;dc_motor.c: 77:         posDuty=0;
  9569   003D80  0E00               	movlw	0
  9570   003D82  6E1D               	movwf	setMotorPWM@posDuty^0,c
  9571   003D84                     
  9572                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9573   003D84  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  9574   003D88  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9575   003D8C  50DF               	movf	indf2,w,c
  9576   003D8E  6E1B               	movwf	??_setMotorPWM^0,c
  9577   003D90  501B               	movf	??_setMotorPWM^0,w,c
  9578   003D92  6E0C               	movwf	___wmul@multiplier^0,c
  9579   003D94  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  9580   003D96  EE20 F003          	lfsr	2,3
  9581   003D9A  5019               	movf	setMotorPWM@m^0,w,c
  9582   003D9C  26D9               	addwf	fsr2l,f,c
  9583   003D9E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9584   003DA0  22DA               	addwfc	fsr2h,f,c
  9585   003DA2  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  9586   003DA6  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  9587   003DAA  ECC4  F023         	call	___wmul	;wreg free
  9588   003DAE  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  9589   003DB2  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  9590   003DB6  0E00               	movlw	0
  9591   003DB8  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  9592   003DBA  0E64               	movlw	100
  9593   003DBC  6E14               	movwf	___lwdiv@divisor^0,c
  9594   003DBE  EC26  F022         	call	___lwdiv	;wreg free
  9595   003DC2  5012               	movf	?___lwdiv^0,w,c
  9596   003DC4  6E1E               	movwf	setMotorPWM@negDuty^0,c
  9597   003DC6                     l4124:
  9598                           
  9599                           ;dc_motor.c: 81:     if (m->direction) {
  9600   003DC6  EE20 F001          	lfsr	2,1
  9601   003DCA  5019               	movf	setMotorPWM@m^0,w,c
  9602   003DCC  26D9               	addwf	fsr2l,f,c
  9603   003DCE  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9604   003DD0  22DA               	addwfc	fsr2h,f,c
  9605   003DD2  50DF               	movf	indf2,w,c
  9606   003DD4  B4D8               	btfsc	status,2,c
  9607   003DD6  EFEF  F01E         	goto	u3221
  9608   003DDA  EFF1  F01E         	goto	u3220
  9609   003DDE                     u3221:
  9610   003DDE  EF13  F01F         	goto	l4128
  9611   003DE2                     u3220:
  9612   003DE2                     
  9613                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  9614   003DE2  EE20 F005          	lfsr	2,5
  9615   003DE6  5019               	movf	setMotorPWM@m^0,w,c
  9616   003DE8  26D9               	addwf	fsr2l,f,c
  9617   003DEA  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9618   003DEC  22DA               	addwfc	fsr2h,f,c
  9619   003DEE  CFDE F01B          	movff	postinc2,??_setMotorPWM
  9620   003DF2  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  9621   003DF6  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9622   003DFA  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9623   003DFE  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  9624                           
  9625                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  9626   003E02  EE20 F007          	lfsr	2,7
  9627   003E06  5019               	movf	setMotorPWM@m^0,w,c
  9628   003E08  26D9               	addwf	fsr2l,f,c
  9629   003E0A  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9630   003E0C  22DA               	addwfc	fsr2h,f,c
  9631   003E0E  CFDE F01B          	movff	postinc2,??_setMotorPWM
  9632   003E12  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  9633   003E16  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9634   003E1A  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9635   003E1E  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  9636                           
  9637                           ;dc_motor.c: 84:     } else {
  9638   003E22  EF33  F01F         	goto	l541
  9639   003E26                     l4128:
  9640                           
  9641                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  9642   003E26  EE20 F005          	lfsr	2,5
  9643   003E2A  5019               	movf	setMotorPWM@m^0,w,c
  9644   003E2C  26D9               	addwf	fsr2l,f,c
  9645   003E2E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9646   003E30  22DA               	addwfc	fsr2h,f,c
  9647   003E32  CFDE F01B          	movff	postinc2,??_setMotorPWM
  9648   003E36  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  9649   003E3A  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9650   003E3E  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9651   003E42  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  9652                           
  9653                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  9654   003E46  EE20 F007          	lfsr	2,7
  9655   003E4A  5019               	movf	setMotorPWM@m^0,w,c
  9656   003E4C  26D9               	addwf	fsr2l,f,c
  9657   003E4E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  9658   003E50  22DA               	addwfc	fsr2h,f,c
  9659   003E52  CFDE F01B          	movff	postinc2,??_setMotorPWM
  9660   003E56  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  9661   003E5A  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  9662   003E5E  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9663   003E62  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  9664   003E66                     l541:
  9665   003E66  0012               	return		;funcret
  9666   003E68                     __end_of_setMotorPWM:
  9667                           	callstack 0
  9668                           
  9669 ;; *************** function ___wmul *****************
  9670 ;; Defined at:
  9671 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;  multiplier      2   11[COMRAM] unsigned int 
  9674 ;;  multiplicand    2   13[COMRAM] unsigned int 
  9675 ;; Auto vars:     Size  Location     Type
  9676 ;;  product         2   15[COMRAM] unsigned int 
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  2   11[COMRAM] unsigned int 
  9679 ;; Registers used:
  9680 ;;		wreg, status,2, status,0, prodl, prodh
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9689 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9690 ;;Total ram usage:        6 bytes
  9691 ;; Hardware stack levels used: 1
  9692 ;; Hardware stack levels required when called: 5
  9693 ;; This function calls:
  9694 ;;		Nothing
  9695 ;; This function is called by:
  9696 ;;		_setMotorPWM
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           	psect	text35
  9701   004788                     __ptext35:
  9702                           	callstack 0
  9703   004788                     ___wmul:
  9704                           	callstack 23
  9705   004788  500C               	movf	___wmul@multiplier^0,w,c
  9706   00478A  020E               	mulwf	___wmul@multiplicand^0,c
  9707   00478C  CFF3 F010          	movff	prodl,___wmul@product
  9708   004790  CFF4 F011          	movff	prodh,___wmul@product+1
  9709   004794  500C               	movf	___wmul@multiplier^0,w,c
  9710   004796  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  9711   004798  50F3               	movf	243,w,c
  9712   00479A  2611               	addwf	(___wmul@product+1)^0,f,c
  9713   00479C  500D               	movf	(___wmul@multiplier+1)^0,w,c
  9714   00479E  020E               	mulwf	___wmul@multiplicand^0,c
  9715   0047A0  50F3               	movf	243,w,c
  9716   0047A2  2611               	addwf	(___wmul@product+1)^0,f,c
  9717   0047A4  C010  F00C         	movff	___wmul@product,?___wmul
  9718   0047A8  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  9719   0047AC  0012               	return		;funcret
  9720   0047AE                     __end_of___wmul:
  9721                           	callstack 0
  9722                           
  9723 ;; *************** function ___lwdiv *****************
  9724 ;; Defined at:
  9725 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9726 ;; Parameters:    Size  Location     Type
  9727 ;;  dividend        2   17[COMRAM] unsigned int 
  9728 ;;  divisor         2   19[COMRAM] unsigned int 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;  quotient        2   22[COMRAM] unsigned int 
  9731 ;;  counter         1   21[COMRAM] unsigned char 
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  2   17[COMRAM] unsigned int 
  9734 ;; Registers used:
  9735 ;;		wreg, status,2, status,0
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9742 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9744 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9745 ;;Total ram usage:        7 bytes
  9746 ;; Hardware stack levels used: 1
  9747 ;; Hardware stack levels required when called: 5
  9748 ;; This function calls:
  9749 ;;		Nothing
  9750 ;; This function is called by:
  9751 ;;		_setMotorPWM
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           	psect	text36
  9756   00444C                     __ptext36:
  9757                           	callstack 0
  9758   00444C                     ___lwdiv:
  9759                           	callstack 23
  9760   00444C  0E00               	movlw	0
  9761   00444E  6E18               	movwf	(___lwdiv@quotient+1)^0,c
  9762   004450  0E00               	movlw	0
  9763   004452  6E17               	movwf	___lwdiv@quotient^0,c
  9764   004454  5014               	movf	___lwdiv@divisor^0,w,c
  9765   004456  1015               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9766   004458  B4D8               	btfsc	status,2,c
  9767   00445A  EF31  F022         	goto	u3181
  9768   00445E  EF33  F022         	goto	u3180
  9769   004462                     u3181:
  9770   004462  EF5B  F022         	goto	l1204
  9771   004466                     u3180:
  9772   004466  0E01               	movlw	1
  9773   004468  6E16               	movwf	___lwdiv@counter^0,c
  9774   00446A  EF3B  F022         	goto	l4088
  9775   00446E                     l4086:
  9776   00446E  90D8               	bcf	status,0,c
  9777   004470  3614               	rlcf	___lwdiv@divisor^0,f,c
  9778   004472  3615               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9779   004474  2A16               	incf	___lwdiv@counter^0,f,c
  9780   004476                     l4088:
  9781   004476  AE15               	btfss	(___lwdiv@divisor+1)^0,7,c
  9782   004478  EF40  F022         	goto	u3191
  9783   00447C  EF42  F022         	goto	u3190
  9784   004480                     u3191:
  9785   004480  EF37  F022         	goto	l4086
  9786   004484                     u3190:
  9787   004484                     l4090:
  9788   004484  90D8               	bcf	status,0,c
  9789   004486  3617               	rlcf	___lwdiv@quotient^0,f,c
  9790   004488  3618               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9791   00448A  5014               	movf	___lwdiv@divisor^0,w,c
  9792   00448C  5C12               	subwf	___lwdiv@dividend^0,w,c
  9793   00448E  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  9794   004490  5813               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9795   004492  A0D8               	btfss	status,0,c
  9796   004494  EF4E  F022         	goto	u3201
  9797   004498  EF50  F022         	goto	u3200
  9798   00449C                     u3201:
  9799   00449C  EF55  F022         	goto	l4098
  9800   0044A0                     u3200:
  9801   0044A0  5014               	movf	___lwdiv@divisor^0,w,c
  9802   0044A2  5E12               	subwf	___lwdiv@dividend^0,f,c
  9803   0044A4  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  9804   0044A6  5A13               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9805   0044A8  8017               	bsf	___lwdiv@quotient^0,0,c
  9806   0044AA                     l4098:
  9807   0044AA  90D8               	bcf	status,0,c
  9808   0044AC  3215               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9809   0044AE  3214               	rrcf	___lwdiv@divisor^0,f,c
  9810   0044B0  2E16               	decfsz	___lwdiv@counter^0,f,c
  9811   0044B2  EF42  F022         	goto	l4090
  9812   0044B6                     l1204:
  9813   0044B6  C017  F012         	movff	___lwdiv@quotient,?___lwdiv
  9814   0044BA  C018  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9815   0044BE  0012               	return		;funcret
  9816   0044C0                     __end_of___lwdiv:
  9817                           	callstack 0
  9818                           
  9819 ;; *************** function _batteryLevel *****************
  9820 ;; Defined at:
  9821 ;;		line 6 in file "battery.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;		None
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;  batteryQuart    1   20[COMRAM] unsigned char 
  9826 ;;  batteryVolta    1   19[COMRAM] unsigned char 
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  1    wreg      void 
  9829 ;; Registers used:
  9830 ;;		wreg, status,2, status,0, cstack
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9840 ;;Total ram usage:        2 bytes
  9841 ;; Hardware stack levels used: 1
  9842 ;; Hardware stack levels required when called: 6
  9843 ;; This function calls:
  9844 ;;		_ADC_getval
  9845 ;;		_ADC_init
  9846 ;;		___awdiv
  9847 ;; This function is called by:
  9848 ;;		_main
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852                           	psect	text37
  9853   004590                     __ptext37:
  9854                           	callstack 0
  9855   004590                     _batteryLevel:
  9856                           	callstack 24
  9857   004590                     
  9858                           ;battery.c: 7:     ADC_init();
  9859   004590  EC4E  F024         	call	_ADC_init	;wreg free
  9860                           
  9861                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
  9862   004594  EC5B  F024         	call	_ADC_getval	;wreg free
  9863   004598  6E14               	movwf	batteryLevel@batteryVoltage^0,c
  9864   00459A                     
  9865                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
  9866   00459A  C014  F00C         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
  9867   00459E  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  9868   0045A0  0E00               	movlw	0
  9869   0045A2  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  9870   0045A4  0E18               	movlw	24
  9871   0045A6  6E0E               	movwf	___awdiv@divisor^0,c
  9872   0045A8  ECB0  F020         	call	___awdiv	;wreg free
  9873   0045AC  500C               	movf	?___awdiv^0,w,c
  9874   0045AE  6E15               	movwf	batteryLevel@batteryQuarter^0,c
  9875   0045B0                     
  9876                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
  9877   0045B0  A215               	btfss	batteryLevel@batteryQuarter^0,1,c
  9878   0045B2  EFDD  F022         	goto	u3821
  9879   0045B6  EFDF  F022         	goto	u3820
  9880   0045BA                     u3821:
  9881   0045BA  EFE2  F022         	goto	l455
  9882   0045BE                     u3820:
  9883   0045BE  8E7C               	bsf	124,7,c	;volatile
  9884   0045C0  EFE3  F022         	goto	l456
  9885   0045C4                     l455:
  9886   0045C4  9E7C               	bcf	124,7,c	;volatile
  9887   0045C6                     l456:
  9888                           
  9889                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
  9890   0045C6  A015               	btfss	batteryLevel@batteryQuarter^0,0,c
  9891   0045C8  EFE8  F022         	goto	u3831
  9892   0045CC  EFEA  F022         	goto	u3830
  9893   0045D0                     u3831:
  9894   0045D0  EFED  F022         	goto	l457
  9895   0045D4                     u3830:
  9896   0045D4  8680               	bsf	128,3,c	;volatile
  9897   0045D6  EFEE  F022         	goto	l459
  9898   0045DA                     l457:
  9899   0045DA  9680               	bcf	128,3,c	;volatile
  9900   0045DC                     l459:
  9901   0045DC  0012               	return		;funcret
  9902   0045DE                     __end_of_batteryLevel:
  9903                           	callstack 0
  9904                           
  9905 ;; *************** function ___awdiv *****************
  9906 ;; Defined at:
  9907 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;  dividend        2   11[COMRAM] int 
  9910 ;;  divisor         2   13[COMRAM] int 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;  quotient        2   17[COMRAM] int 
  9913 ;;  sign            1   16[COMRAM] unsigned char 
  9914 ;;  counter         1   15[COMRAM] unsigned char 
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  2   11[COMRAM] int 
  9917 ;; Registers used:
  9918 ;;		wreg, status,2, status,0
  9919 ;; Tracked objects:
  9920 ;;		On entry : 0/0
  9921 ;;		On exit  : 0/0
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9925 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9927 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9928 ;;Total ram usage:        8 bytes
  9929 ;; Hardware stack levels used: 1
  9930 ;; Hardware stack levels required when called: 5
  9931 ;; This function calls:
  9932 ;;		Nothing
  9933 ;; This function is called by:
  9934 ;;		_batteryLevel
  9935 ;; This function uses a non-reentrant model
  9936 ;;
  9937                           
  9938                           	psect	text38
  9939   004160                     __ptext38:
  9940                           	callstack 0
  9941   004160                     ___awdiv:
  9942                           	callstack 24
  9943   004160  0E00               	movlw	0
  9944   004162  6E11               	movwf	___awdiv@sign^0,c
  9945   004164  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  9946   004166  EFB9  F020         	goto	u3760
  9947   00416A  EFB7  F020         	goto	u3761
  9948   00416E                     u3761:
  9949   00416E  EFBF  F020         	goto	l4648
  9950   004172                     u3760:
  9951   004172  6C0E               	negf	___awdiv@divisor^0,c
  9952   004174  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  9953   004176  B0D8               	btfsc	status,0,c
  9954   004178  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  9955   00417A  0E01               	movlw	1
  9956   00417C  6E11               	movwf	___awdiv@sign^0,c
  9957   00417E                     l4648:
  9958   00417E  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  9959   004180  EFC6  F020         	goto	u3770
  9960   004184  EFC4  F020         	goto	u3771
  9961   004188                     u3771:
  9962   004188  EFCC  F020         	goto	l4654
  9963   00418C                     u3770:
  9964   00418C  6C0C               	negf	___awdiv@dividend^0,c
  9965   00418E  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  9966   004190  B0D8               	btfsc	status,0,c
  9967   004192  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  9968   004194  0E01               	movlw	1
  9969   004196  1A11               	xorwf	___awdiv@sign^0,f,c
  9970   004198                     l4654:
  9971   004198  0E00               	movlw	0
  9972   00419A  6E13               	movwf	(___awdiv@quotient+1)^0,c
  9973   00419C  0E00               	movlw	0
  9974   00419E  6E12               	movwf	___awdiv@quotient^0,c
  9975   0041A0  500E               	movf	___awdiv@divisor^0,w,c
  9976   0041A2  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  9977   0041A4  B4D8               	btfsc	status,2,c
  9978   0041A6  EFD7  F020         	goto	u3781
  9979   0041AA  EFD9  F020         	goto	u3780
  9980   0041AE                     u3781:
  9981   0041AE  EF01  F021         	goto	l4676
  9982   0041B2                     u3780:
  9983   0041B2  0E01               	movlw	1
  9984   0041B4  6E10               	movwf	___awdiv@counter^0,c
  9985   0041B6  EFE1  F020         	goto	l4662
  9986   0041BA                     l4660:
  9987   0041BA  90D8               	bcf	status,0,c
  9988   0041BC  360E               	rlcf	___awdiv@divisor^0,f,c
  9989   0041BE  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  9990   0041C0  2A10               	incf	___awdiv@counter^0,f,c
  9991   0041C2                     l4662:
  9992   0041C2  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  9993   0041C4  EFE6  F020         	goto	u3791
  9994   0041C8  EFE8  F020         	goto	u3790
  9995   0041CC                     u3791:
  9996   0041CC  EFDD  F020         	goto	l4660
  9997   0041D0                     u3790:
  9998   0041D0                     l4664:
  9999   0041D0  90D8               	bcf	status,0,c
 10000   0041D2  3612               	rlcf	___awdiv@quotient^0,f,c
 10001   0041D4  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
 10002   0041D6  500E               	movf	___awdiv@divisor^0,w,c
 10003   0041D8  5C0C               	subwf	___awdiv@dividend^0,w,c
 10004   0041DA  500F               	movf	(___awdiv@divisor+1)^0,w,c
 10005   0041DC  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
 10006   0041DE  A0D8               	btfss	status,0,c
 10007   0041E0  EFF4  F020         	goto	u3801
 10008   0041E4  EFF6  F020         	goto	u3800
 10009   0041E8                     u3801:
 10010   0041E8  EFFB  F020         	goto	l4672
 10011   0041EC                     u3800:
 10012   0041EC  500E               	movf	___awdiv@divisor^0,w,c
 10013   0041EE  5E0C               	subwf	___awdiv@dividend^0,f,c
 10014   0041F0  500F               	movf	(___awdiv@divisor+1)^0,w,c
 10015   0041F2  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
 10016   0041F4  8012               	bsf	___awdiv@quotient^0,0,c
 10017   0041F6                     l4672:
 10018   0041F6  90D8               	bcf	status,0,c
 10019   0041F8  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
 10020   0041FA  320E               	rrcf	___awdiv@divisor^0,f,c
 10021   0041FC  2E10               	decfsz	___awdiv@counter^0,f,c
 10022   0041FE  EFE8  F020         	goto	l4664
 10023   004202                     l4676:
 10024   004202  5011               	movf	___awdiv@sign^0,w,c
 10025   004204  B4D8               	btfsc	status,2,c
 10026   004206  EF07  F021         	goto	u3811
 10027   00420A  EF09  F021         	goto	u3810
 10028   00420E                     u3811:
 10029   00420E  EF0D  F021         	goto	l4680
 10030   004212                     u3810:
 10031   004212  6C12               	negf	___awdiv@quotient^0,c
 10032   004214  1E13               	comf	(___awdiv@quotient+1)^0,f,c
 10033   004216  B0D8               	btfsc	status,0,c
 10034   004218  2A13               	incf	(___awdiv@quotient+1)^0,f,c
 10035   00421A                     l4680:
 10036   00421A  C012  F00C         	movff	___awdiv@quotient,?___awdiv
 10037   00421E  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
 10038   004222  0012               	return		;funcret
 10039   004224                     __end_of___awdiv:
 10040                           	callstack 0
 10041                           
 10042 ;; *************** function _ADC_init *****************
 10043 ;; Defined at:
 10044 ;;		line 9 in file "ADC.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;		None
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;		None
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      void 
 10051 ;; Registers used:
 10052 ;;		wreg, status,2
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10062 ;;Total ram usage:        0 bytes
 10063 ;; Hardware stack levels used: 1
 10064 ;; Hardware stack levels required when called: 5
 10065 ;; This function calls:
 10066 ;;		Nothing
 10067 ;; This function is called by:
 10068 ;;		_batteryLevel
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text39
 10073   00489C                     __ptext39:
 10074                           	callstack 0
 10075   00489C                     _ADC_init:
 10076                           	callstack 24
 10077   00489C                     
 10078                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 10079   00489C  8C86               	bsf	134,6,c	;volatile
 10080                           
 10081                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 10082   00489E  010E               	movlb	14	; () banked
 10083   0048A0  8DB4               	bsf	180,6,b	;volatile
 10084                           
 10085                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 10086   0048A2  010F               	movlb	15	; () banked
 10087   0048A4  9958               	bcf	88,4,b	;volatile
 10088   0048A6                     
 10089                           ; BSR set to: 15
 10090                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 10091   0048A6  0EFC               	movlw	-4
 10092   0048A8  1758               	andwf	88,f,b	;volatile
 10093                           
 10094                           ;ADC.c: 17:     ADPCH=0b101110;
 10095   0048AA  0E2E               	movlw	46
 10096   0048AC  6F5F               	movwf	95,b	;volatile
 10097   0048AE                     
 10098                           ; BSR set to: 15
 10099                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 10100   0048AE  9460               	bcf	96,2,c	;volatile
 10101   0048B0                     
 10102                           ; BSR set to: 15
 10103                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 10104   0048B0  8860               	bsf	96,4,c	;volatile
 10105   0048B2                     
 10106                           ; BSR set to: 15
 10107                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 10108   0048B2  8E60               	bsf	96,7,c	;volatile
 10109   0048B4                     
 10110                           ; BSR set to: 15
 10111   0048B4  0012               	return		;funcret
 10112   0048B6                     __end_of_ADC_init:
 10113                           	callstack 0
 10114                           
 10115 ;; *************** function _ADC_getval *****************
 10116 ;; Defined at:
 10117 ;;		line 23 in file "ADC.c"
 10118 ;; Parameters:    Size  Location     Type
 10119 ;;		None
 10120 ;; Auto vars:     Size  Location     Type
 10121 ;;  tmpval          1   11[COMRAM] unsigned char 
 10122 ;; Return value:  Size  Location     Type
 10123 ;;                  1    wreg      unsigned char 
 10124 ;; Registers used:
 10125 ;;		wreg, status,2
 10126 ;; Tracked objects:
 10127 ;;		On entry : 0/0
 10128 ;;		On exit  : 0/0
 10129 ;;		Unchanged: 0/0
 10130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10135 ;;Total ram usage:        1 bytes
 10136 ;; Hardware stack levels used: 1
 10137 ;; Hardware stack levels required when called: 5
 10138 ;; This function calls:
 10139 ;;		Nothing
 10140 ;; This function is called by:
 10141 ;;		_batteryLevel
 10142 ;; This function uses a non-reentrant model
 10143 ;;
 10144                           
 10145                           	psect	text40
 10146   0048B6                     __ptext40:
 10147                           	callstack 0
 10148   0048B6                     _ADC_getval:
 10149                           	callstack 24
 10150   0048B6                     
 10151                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
 10152   0048B6  8060               	bsf	96,0,c	;volatile
 10153   0048B8                     l441:
 10154   0048B8  B060               	btfsc	96,0,c	;volatile
 10155   0048BA  EF61  F024         	goto	u3651
 10156   0048BE  EF63  F024         	goto	u3650
 10157   0048C2                     u3651:
 10158   0048C2  EF5C  F024         	goto	l441
 10159   0048C6                     u3650:
 10160   0048C6                     
 10161                           ;ADC.c: 31:     tmpval = ADRESH;
 10162   0048C6  CF64 F00C          	movff	3940,ADC_getval@tmpval	;volatile
 10163   0048CA                     
 10164                           ;ADC.c: 35:     return tmpval;
 10165   0048CA  500C               	movf	ADC_getval@tmpval^0,w,c
 10166   0048CC  0012               	return		;funcret
 10167   0048CE                     __end_of_ADC_getval:
 10168                           	callstack 0
 10169                           
 10170 ;; *************** function _Timer0_init *****************
 10171 ;; Defined at:
 10172 ;;		line 7 in file "timers.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;		None
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;		None
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  1    wreg      void 
 10179 ;; Registers used:
 10180 ;;		wreg, status,2
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10190 ;;Total ram usage:        0 bytes
 10191 ;; Hardware stack levels used: 1
 10192 ;; Hardware stack levels required when called: 5
 10193 ;; This function calls:
 10194 ;;		Nothing
 10195 ;; This function is called by:
 10196 ;;		_main
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           
 10200                           	psect	text41
 10201   00483E                     __ptext41:
 10202                           	callstack 0
 10203   00483E                     _Timer0_init:
 10204                           	callstack 25
 10205   00483E                     
 10206                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 10207   00483E  50D6               	movf	214,w,c	;volatile
 10208   004840  0B1F               	andlw	-225
 10209   004842  0940               	iorlw	64
 10210   004844  6ED6               	movwf	214,c	;volatile
 10211   004846                     
 10212                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 10213   004846  88D6               	bsf	214,4,c	;volatile
 10214                           
 10215                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
 10216   004848  50D6               	movf	214,w,c	;volatile
 10217   00484A  0BF0               	andlw	-16
 10218   00484C  090B               	iorlw	11
 10219   00484E  6ED6               	movwf	214,c	;volatile
 10220   004850                     
 10221                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 10222   004850  88D5               	bsf	213,4,c	;volatile
 10223                           
 10224                           ;timers.c: 15:     TMR0H=0;
 10225   004852  0E00               	movlw	0
 10226   004854  6ED4               	movwf	212,c	;volatile
 10227                           
 10228                           ;timers.c: 16:     TMR0L=0;
 10229   004856  0E00               	movlw	0
 10230   004858  6ED3               	movwf	211,c	;volatile
 10231   00485A                     
 10232                           ;timers.c: 17:     T0CON0bits.T0EN=1;
 10233   00485A  8ED5               	bsf	213,7,c	;volatile
 10234   00485C  0012               	return		;funcret
 10235   00485E                     __end_of_Timer0_init:
 10236                           	callstack 0
 10237                           
 10238 ;; *************** function _Buggy_init *****************
 10239 ;; Defined at:
 10240 ;;		line 7 in file "buggysetup.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;		None
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;		None
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  1    wreg      void 
 10247 ;; Registers used:
 10248 ;;		None
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10258 ;;Total ram usage:        0 bytes
 10259 ;; Hardware stack levels used: 1
 10260 ;; Hardware stack levels required when called: 5
 10261 ;; This function calls:
 10262 ;;		Nothing
 10263 ;; This function is called by:
 10264 ;;		_main
 10265 ;; This function uses a non-reentrant model
 10266 ;;
 10267                           
 10268                           	psect	text42
 10269   004658                     __ptext42:
 10270                           	callstack 0
 10271   004658                     _Buggy_init:
 10272                           	callstack 25
 10273   004658                     
 10274                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
 10275   004658  9E7C               	bcf	124,7,c	;volatile
 10276                           
 10277                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
 10278   00465A  9E84               	bcf	132,7,c	;volatile
 10279                           
 10280                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
 10281   00465C  9680               	bcf	128,3,c	;volatile
 10282                           
 10283                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
 10284   00465E  9688               	bcf	136,3,c	;volatile
 10285                           
 10286                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
 10287   004660  8486               	bsf	134,2,c	;volatile
 10288                           
 10289                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
 10290   004662  010E               	movlb	14	; () banked
 10291   004664  95B4               	bcf	180,2,b	;volatile
 10292                           
 10293                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
 10294   004666  8686               	bsf	134,3,c	;volatile
 10295                           
 10296                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
 10297   004668  97B4               	bcf	180,3,b	;volatile
 10298                           
 10299                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
 10300   00466A  9280               	bcf	128,1,c	;volatile
 10301                           
 10302                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
 10303   00466C  9288               	bcf	136,1,c	;volatile
 10304                           
 10305                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
 10306   00466E  987C               	bcf	124,4,c	;volatile
 10307                           
 10308                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
 10309   004670  9884               	bcf	132,4,c	;volatile
 10310                           
 10311                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
 10312   004672  967C               	bcf	124,3,c	;volatile
 10313                           
 10314                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
 10315   004674  9684               	bcf	132,3,c	;volatile
 10316                           
 10317                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
 10318   004676  97A7               	bcf	167,3,b	;volatile
 10319                           
 10320                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
 10321   004678  9080               	bcf	128,0,c	;volatile
 10322                           
 10323                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
 10324   00467A  9088               	bcf	136,0,c	;volatile
 10325                           
 10326                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
 10327   00467C  907E               	bcf	126,0,c	;volatile
 10328                           
 10329                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
 10330   00467E  9086               	bcf	134,0,c	;volatile
 10331                           
 10332                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
 10333   004680  907F               	bcf	127,0,c	;volatile
 10334                           
 10335                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
 10336   004682  9087               	bcf	135,0,c	;volatile
 10337                           
 10338                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
 10339   004684  9E7D               	bcf	125,7,c	;volatile
 10340                           
 10341                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
 10342   004686  9E85               	bcf	133,7,c	;volatile
 10343                           
 10344                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
 10345   004688  9679               	bcf	121,3,c	;volatile
 10346                           
 10347                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
 10348   00468A  9681               	bcf	129,3,c	;volatile
 10349   00468C                     
 10350                           ; BSR set to: 14
 10351   00468C  0012               	return		;funcret
 10352   00468E                     __end_of_Buggy_init:
 10353                           	callstack 0
 10354                           
 10355 ;; *************** function _HighISR *****************
 10356 ;; Defined at:
 10357 ;;		line 33 in file "interrupts.c"
 10358 ;; Parameters:    Size  Location     Type
 10359 ;;		None
 10360 ;; Auto vars:     Size  Location     Type
 10361 ;;		None
 10362 ;; Return value:  Size  Location     Type
 10363 ;;                  1    wreg      void 
 10364 ;; Registers used:
 10365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10366 ;; Tracked objects:
 10367 ;;		On entry : 0/0
 10368 ;;		On exit  : 0/0
 10369 ;;		Unchanged: 0/0
 10370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10374 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10375 ;;Total ram usage:        2 bytes
 10376 ;; Hardware stack levels used: 1
 10377 ;; Hardware stack levels required when called: 4
 10378 ;; This function calls:
 10379 ;;		_getCharFromTxBuf
 10380 ;;		_isDataInTxBuf
 10381 ;;		_putCharToRxBuf
 10382 ;;		i2_color_clear_init_interrupts
 10383 ;; This function is called by:
 10384 ;;		Interrupt level 2
 10385 ;; This function uses a non-reentrant model
 10386 ;;
 10387                           
 10388                           	psect	intcode
 10389   000008                     __pintcode:
 10390                           	callstack 0
 10391   000008                     _HighISR:
 10392                           	callstack 21
 10393                           
 10394                           ; BSR set to: 14
 10395                           ;incstack = 0
 10396   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10397   00000A  CFD9 F00A          	movff	fsr2l,??_HighISR
 10398   00000E  CFDA F00B          	movff	fsr2h,??_HighISR+1
 10399   000012                     
 10400                           ;interrupts.c: 37:     if(PIR0bits.INT0IF){
 10401   000012  010E               	movlb	14	; () banked
 10402   000014  A133               	btfss	51,0,b	;volatile
 10403   000016  EF0F  F000         	goto	i2u309_41
 10404   00001A  EF11  F000         	goto	i2u309_40
 10405   00001E                     i2u309_41:
 10406   00001E  EF17  F000         	goto	i2l4034
 10407   000022                     i2u309_40:
 10408   000022                     
 10409                           ; BSR set to: 14
 10410                           ;interrupts.c: 38:         wall = 1;
 10411   000022  0E01               	movlw	1
 10412   000024  6E48               	movwf	_wall^0,c
 10413   000026                     
 10414                           ; BSR set to: 14
 10415                           ;interrupts.c: 39:         color_clear_init_interrupts();
 10416   000026  ECE9  F021         	call	i2_color_clear_init_interrupts	;wreg free
 10417   00002A                     
 10418                           ;interrupts.c: 40:         PIR0bits.INT0IF = 0;
 10419   00002A  010E               	movlb	14	; () banked
 10420   00002C  9133               	bcf	51,0,b	;volatile
 10421   00002E                     i2l4034:
 10422                           
 10423                           ; BSR set to: 14
 10424                           ;interrupts.c: 47:     if(TMR0IF){
 10425   00002E  AB33               	btfss	51,5,b	;volatile
 10426   000030  EF1C  F000         	goto	i2u310_41
 10427   000034  EF1E  F000         	goto	i2u310_40
 10428   000038                     i2u310_41:
 10429   000038  EF21  F000         	goto	i2l4040
 10430   00003C                     i2u310_40:
 10431   00003C                     
 10432                           ; BSR set to: 14
 10433                           ;interrupts.c: 48:         lost = 1;
 10434   00003C  0E01               	movlw	1
 10435   00003E  6E47               	movwf	_lost^0,c
 10436   000040                     
 10437                           ; BSR set to: 14
 10438                           ;interrupts.c: 49:         TMR0IF=0;
 10439   000040  9B33               	bcf	51,5,b	;volatile
 10440   000042                     i2l4040:
 10441                           
 10442                           ; BSR set to: 14
 10443                           ;interrupts.c: 56:     if(PIR4bits.RC4IF){
 10444   000042  A737               	btfss	55,3,b	;volatile
 10445   000044  EF26  F000         	goto	i2u311_41
 10446   000048  EF28  F000         	goto	i2u311_40
 10447   00004C                     i2u311_41:
 10448   00004C  EF2B  F000         	goto	i2l4044
 10449   000050                     i2u311_40:
 10450   000050                     
 10451                           ; BSR set to: 14
 10452                           ;interrupts.c: 58:         putCharToRxBuf(RC4REG);
 10453   000050  51E3               	movf	227,w,b	;volatile
 10454   000052  ECD7  F023         	call	_putCharToRxBuf
 10455   000056                     i2l4044:
 10456                           
 10457                           ;interrupts.c: 62:     if(PIR4bits.TX4IF){
 10458   000056  010E               	movlb	14	; () banked
 10459   000058  A537               	btfss	55,2,b	;volatile
 10460   00005A  EF31  F000         	goto	i2u312_41
 10461   00005E  EF33  F000         	goto	i2u312_40
 10462   000062                     i2u312_41:
 10463   000062  EF43  F000         	goto	i2l360
 10464   000066                     i2u312_40:
 10465   000066                     
 10466                           ; BSR set to: 14
 10467                           ;interrupts.c: 64:         TX4REG = getCharFromTxBuf();
 10468   000066  ECEA  F023         	call	_getCharFromTxBuf	;wreg free
 10469   00006A  010E               	movlb	14	; () banked
 10470   00006C  6FE4               	movwf	228,b	;volatile
 10471   00006E                     
 10472                           ; BSR set to: 14
 10473                           ;interrupts.c: 65:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
 10474   00006E  EC67  F024         	call	_isDataInTxBuf	;wreg free
 10475   000072  0900               	iorlw	0
 10476   000074  A4D8               	btfss	status,2,c
 10477   000076  EF3F  F000         	goto	i2u313_41
 10478   00007A  EF41  F000         	goto	i2u313_40
 10479   00007E                     i2u313_41:
 10480   00007E  EF43  F000         	goto	i2l360
 10481   000082                     i2u313_40:
 10482   000082  010E               	movlb	14	; () banked
 10483   000084  952D               	bcf	45,2,b	;volatile
 10484   000086                     i2l360:
 10485   000086  C00B  FFDA         	movff	??_HighISR+1,fsr2h
 10486   00008A  C00A  FFD9         	movff	??_HighISR,fsr2l
 10487   00008E  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10488   000090  0011               	retfie		f
 10489   000092                     __end_of_HighISR:
 10490                           	callstack 0
 10491                           
 10492 ;; *************** function i2_color_clear_init_interrupts *****************
 10493 ;; Defined at:
 10494 ;;		line 27 in file "color.c"
 10495 ;; Parameters:    Size  Location     Type
 10496 ;;		None
 10497 ;; Auto vars:     Size  Location     Type
 10498 ;;  low_threshol    2    7[COMRAM] unsigned int 
 10499 ;;  high_thresho    2    5[COMRAM] unsigned int 
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  1    wreg      void 
 10502 ;; Registers used:
 10503 ;;		wreg, status,2, status,0, cstack
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10510 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10512 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10513 ;;Total ram usage:        5 bytes
 10514 ;; Hardware stack levels used: 1
 10515 ;; Hardware stack levels required when called: 3
 10516 ;; This function calls:
 10517 ;;		i2_I2C_2_Master_Start
 10518 ;;		i2_I2C_2_Master_Stop
 10519 ;;		i2_I2C_2_Master_Write
 10520 ;;		i2_color_writetoaddr
 10521 ;; This function is called by:
 10522 ;;		_HighISR
 10523 ;; This function uses a non-reentrant model
 10524 ;;
 10525                           
 10526                           	psect	text44
 10527   0043D2                     __ptext44:
 10528                           	callstack 0
 10529   0043D2                     i2_color_clear_init_interrupts:
 10530                           	callstack 21
 10531   0043D2                     
 10532                           ;color.c: 29:     I2C_2_Master_Start();
 10533   0043D2  EC98  F024         	call	i2_I2C_2_Master_Start	;wreg free
 10534                           
 10535                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
 10536   0043D6  0E52               	movlw	82
 10537   0043D8  EC79  F024         	call	i2_I2C_2_Master_Write
 10538                           
 10539                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
 10540   0043DC  0EE6               	movlw	230
 10541   0043DE  EC79  F024         	call	i2_I2C_2_Master_Write
 10542                           
 10543                           ;color.c: 32:     I2C_2_Master_Stop();
 10544   0043E2  EC93  F024         	call	i2_I2C_2_Master_Stop	;wreg free
 10545   0043E6                     
 10546                           ;color.c: 35:     unsigned int high_threshold = ambient + 12;
 10547   0043E6  0E0C               	movlw	12
 10548   0043E8  244D               	addwf	_ambient^0,w,c
 10549   0043EA  6E06               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
 10550   0043EC  0E00               	movlw	0
 10551   0043EE  204E               	addwfc	(_ambient+1)^0,w,c
 10552   0043F0  6E07               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
 10553   0043F2                     
 10554                           ;color.c: 36:     unsigned int low_threshold = ambient - 12;
 10555   0043F2  0EF4               	movlw	244
 10556   0043F4  244D               	addwf	_ambient^0,w,c
 10557   0043F6  6E08               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
 10558   0043F8  0EFF               	movlw	255
 10559   0043FA  204E               	addwfc	(_ambient+1)^0,w,c
 10560   0043FC  6E09               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
 10561                           
 10562                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
 10563   0043FE  0E13               	movlw	19
 10564   004400  6E03               	movwf	i2color_writetoaddr@value^0,c
 10565   004402  0E00               	movlw	0
 10566   004404  EC2F  F024         	call	i2_color_writetoaddr
 10567   004408                     
 10568                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10569   004408  0E3F               	movlw	63
 10570   00440A  6E05               	movwf	??i2_color_clear_init_interrupts^0,c
 10571   00440C  0E55               	movlw	85
 10572   00440E                     i2u552_47:
 10573   00440E  2EE8               	decfsz	wreg,f,c
 10574   004410  D7FE               	bra	i2u552_47
 10575   004412  2E05               	decfsz	??i2_color_clear_init_interrupts^0,f,c
 10576   004414  D7FC               	bra	i2u552_47
 10577   004416  0000               	nop	
 10578   004418                     
 10579                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
 10580   004418  5007               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
 10581   00441A  6E03               	movwf	i2color_writetoaddr@value^0,c
 10582   00441C  0E07               	movlw	7
 10583   00441E  EC2F  F024         	call	i2_color_writetoaddr
 10584   004422                     
 10585                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
 10586   004422  C006  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
 10587   004426  0E06               	movlw	6
 10588   004428  EC2F  F024         	call	i2_color_writetoaddr
 10589   00442C                     
 10590                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
 10591   00442C  5009               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
 10592   00442E  6E03               	movwf	i2color_writetoaddr@value^0,c
 10593   004430  0E05               	movlw	5
 10594   004432  EC2F  F024         	call	i2_color_writetoaddr
 10595   004436                     
 10596                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
 10597   004436  C008  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
 10598   00443A  0E04               	movlw	4
 10599   00443C  EC2F  F024         	call	i2_color_writetoaddr
 10600   004440                     
 10601                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
 10602   004440  0E04               	movlw	4
 10603   004442  6E03               	movwf	i2color_writetoaddr@value^0,c
 10604   004444  0E0C               	movlw	12
 10605   004446  EC2F  F024         	call	i2_color_writetoaddr
 10606   00444A  0012               	return		;funcret
 10607   00444C                     __end_ofi2_color_clear_init_interrupts:
 10608                           	callstack 0
 10609                           
 10610 ;; *************** function i2_color_writetoaddr *****************
 10611 ;; Defined at:
 10612 ;;		line 50 in file "color.c"
 10613 ;; Parameters:    Size  Location     Type
 10614 ;;  address         1    wreg     unsigned char 
 10615 ;;  value           1    2[COMRAM] unsigned char 
 10616 ;; Auto vars:     Size  Location     Type
 10617 ;;  address         1    3[COMRAM] unsigned char 
 10618 ;; Return value:  Size  Location     Type
 10619 ;;                  1    wreg      void 
 10620 ;; Registers used:
 10621 ;;		wreg, status,2, status,0, cstack
 10622 ;; Tracked objects:
 10623 ;;		On entry : 0/0
 10624 ;;		On exit  : 0/0
 10625 ;;		Unchanged: 0/0
 10626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10627 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10631 ;;Total ram usage:        2 bytes
 10632 ;; Hardware stack levels used: 1
 10633 ;; Hardware stack levels required when called: 2
 10634 ;; This function calls:
 10635 ;;		i2_I2C_2_Master_Start
 10636 ;;		i2_I2C_2_Master_Stop
 10637 ;;		i2_I2C_2_Master_Write
 10638 ;; This function is called by:
 10639 ;;		i2_color_clear_init_interrupts
 10640 ;; This function uses a non-reentrant model
 10641 ;;
 10642                           
 10643                           	psect	text45
 10644   00485E                     __ptext45:
 10645                           	callstack 0
 10646   00485E                     i2_color_writetoaddr:
 10647                           	callstack 21
 10648                           
 10649                           ;incstack = 0
 10650                           ;i2color_writetoaddr@address stored from wreg
 10651   00485E  6E04               	movwf	i2color_writetoaddr@address^0,c
 10652   004860                     
 10653                           ;color.c: 51:     I2C_2_Master_Start();
 10654   004860  EC98  F024         	call	i2_I2C_2_Master_Start	;wreg free
 10655                           
 10656                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
 10657   004864  0E52               	movlw	82
 10658   004866  EC79  F024         	call	i2_I2C_2_Master_Write
 10659                           
 10660                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
 10661   00486A  5004               	movf	i2color_writetoaddr@address^0,w,c
 10662   00486C  0980               	iorlw	128
 10663   00486E  EC79  F024         	call	i2_I2C_2_Master_Write
 10664                           
 10665                           ;color.c: 54:     I2C_2_Master_Write(value);
 10666   004872  5003               	movf	i2color_writetoaddr@value^0,w,c
 10667   004874  EC79  F024         	call	i2_I2C_2_Master_Write
 10668                           
 10669                           ;color.c: 55:     I2C_2_Master_Stop();
 10670   004878  EC93  F024         	call	i2_I2C_2_Master_Stop	;wreg free
 10671   00487C  0012               	return		;funcret
 10672   00487E                     __end_ofi2_color_writetoaddr:
 10673                           	callstack 0
 10674                           
 10675 ;; *************** function i2_I2C_2_Master_Write *****************
 10676 ;; Defined at:
 10677 ;;		line 45 in file "i2c.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  data_byte       1    wreg     unsigned char 
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;  data_byte       1    1[COMRAM] unsigned char 
 10682 ;; Return value:  Size  Location     Type
 10683 ;;                  1    wreg      void 
 10684 ;; Registers used:
 10685 ;;		wreg, status,2, status,0, cstack
 10686 ;; Tracked objects:
 10687 ;;		On entry : 0/0
 10688 ;;		On exit  : 0/0
 10689 ;;		Unchanged: 0/0
 10690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10694 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10695 ;;Total ram usage:        1 bytes
 10696 ;; Hardware stack levels used: 1
 10697 ;; Hardware stack levels required when called: 1
 10698 ;; This function calls:
 10699 ;;		i2_I2C_2_Master_Idle
 10700 ;; This function is called by:
 10701 ;;		i2_color_clear_init_interrupts
 10702 ;;		i2_color_writetoaddr
 10703 ;; This function uses a non-reentrant model
 10704 ;;
 10705                           
 10706                           	psect	text46
 10707   0048F2                     __ptext46:
 10708                           	callstack 0
 10709   0048F2                     i2_I2C_2_Master_Write:
 10710                           	callstack 21
 10711                           
 10712                           ;incstack = 0
 10713                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 10714   0048F2  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 10715   0048F4                     
 10716                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10717   0048F4  ECB0  F023         	call	i2_I2C_2_Master_Idle	;wreg free
 10718   0048F8                     
 10719                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10720   0048F8  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 10721   0048FC  0012               	return		;funcret
 10722   0048FE                     __end_ofi2_I2C_2_Master_Write:
 10723                           	callstack 0
 10724                           
 10725 ;; *************** function i2_I2C_2_Master_Stop *****************
 10726 ;; Defined at:
 10727 ;;		line 39 in file "i2c.c"
 10728 ;; Parameters:    Size  Location     Type
 10729 ;;		None
 10730 ;; Auto vars:     Size  Location     Type
 10731 ;;		None
 10732 ;; Return value:  Size  Location     Type
 10733 ;;                  1    wreg      void 
 10734 ;; Registers used:
 10735 ;;		wreg, status,2, status,0, cstack
 10736 ;; Tracked objects:
 10737 ;;		On entry : 0/0
 10738 ;;		On exit  : 0/0
 10739 ;;		Unchanged: 0/0
 10740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10745 ;;Total ram usage:        0 bytes
 10746 ;; Hardware stack levels used: 1
 10747 ;; Hardware stack levels required when called: 1
 10748 ;; This function calls:
 10749 ;;		i2_I2C_2_Master_Idle
 10750 ;; This function is called by:
 10751 ;;		i2_color_clear_init_interrupts
 10752 ;;		i2_color_writetoaddr
 10753 ;; This function uses a non-reentrant model
 10754 ;;
 10755                           
 10756                           	psect	text47
 10757   004926                     __ptext47:
 10758                           	callstack 0
 10759   004926                     i2_I2C_2_Master_Stop:
 10760                           	callstack 21
 10761   004926                     
 10762                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10763   004926  ECB0  F023         	call	i2_I2C_2_Master_Idle	;wreg free
 10764   00492A                     
 10765                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10766   00492A  010E               	movlb	14	; () banked
 10767   00492C  85DA               	bsf	218,2,b	;volatile
 10768   00492E                     
 10769                           ; BSR set to: 14
 10770   00492E  0012               	return		;funcret
 10771   004930                     __end_ofi2_I2C_2_Master_Stop:
 10772                           	callstack 0
 10773                           
 10774 ;; *************** function i2_I2C_2_Master_Start *****************
 10775 ;; Defined at:
 10776 ;;		line 27 in file "i2c.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;		None
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;		None
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg, status,2, status,0, cstack
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10794 ;;Total ram usage:        0 bytes
 10795 ;; Hardware stack levels used: 1
 10796 ;; Hardware stack levels required when called: 1
 10797 ;; This function calls:
 10798 ;;		i2_I2C_2_Master_Idle
 10799 ;; This function is called by:
 10800 ;;		i2_color_clear_init_interrupts
 10801 ;;		i2_color_writetoaddr
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           	psect	text48
 10806   004930                     __ptext48:
 10807                           	callstack 0
 10808   004930                     i2_I2C_2_Master_Start:
 10809                           	callstack 21
 10810   004930                     
 10811                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10812   004930  ECB0  F023         	call	i2_I2C_2_Master_Idle	;wreg free
 10813   004934                     
 10814                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10815   004934  010E               	movlb	14	; () banked
 10816   004936  81DA               	bsf	218,0,b	;volatile
 10817   004938                     
 10818                           ; BSR set to: 14
 10819   004938  0012               	return		;funcret
 10820   00493A                     __end_ofi2_I2C_2_Master_Start:
 10821                           	callstack 0
 10822                           
 10823 ;; *************** function i2_I2C_2_Master_Idle *****************
 10824 ;; Defined at:
 10825 ;;		line 22 in file "i2c.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;		None
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;		None
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1    wreg      void 
 10832 ;; Registers used:
 10833 ;;		wreg, status,2, status,0
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10842 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10843 ;;Total ram usage:        1 bytes
 10844 ;; Hardware stack levels used: 1
 10845 ;; This function calls:
 10846 ;;		Nothing
 10847 ;; This function is called by:
 10848 ;;		i2_I2C_2_Master_Start
 10849 ;;		i2_I2C_2_Master_Stop
 10850 ;;		i2_I2C_2_Master_Write
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           	psect	text49
 10855   004760                     __ptext49:
 10856                           	callstack 0
 10857   004760                     i2_I2C_2_Master_Idle:
 10858                           	callstack 21
 10859   004760                     i2l250:
 10860   004760  010E               	movlb	14	; () banked
 10861   004762  B5D8               	btfsc	216,2,b	;volatile
 10862   004764  EFB6  F023         	goto	i2u167_41
 10863   004768  EFB8  F023         	goto	i2u167_40
 10864   00476C                     i2u167_41:
 10865   00476C  EFB0  F023         	goto	i2l250
 10866   004770                     i2u167_40:
 10867   004770                     
 10868                           ; BSR set to: 14
 10869   004770  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 10870   004774  0E1F               	movlw	31
 10871   004776  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 10872   004778  A4D8               	btfss	status,2,c
 10873   00477A  EFC1  F023         	goto	i2u168_41
 10874   00477E  EFC3  F023         	goto	i2u168_40
 10875   004782                     i2u168_41:
 10876   004782  EFB0  F023         	goto	i2l250
 10877   004786                     i2u168_40:
 10878   004786                     
 10879                           ; BSR set to: 14
 10880   004786  0012               	return		;funcret
 10881   004788                     __end_ofi2_I2C_2_Master_Idle:
 10882                           	callstack 0
 10883                           
 10884 ;; *************** function _putCharToRxBuf *****************
 10885 ;; Defined at:
 10886 ;;		line 33 in file "serial.c"
 10887 ;; Parameters:    Size  Location     Type
 10888 ;;  byte            1    wreg     unsigned char 
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  byte            1    0[COMRAM] unsigned char 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      void 
 10893 ;; Registers used:
 10894 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10904 ;;Total ram usage:        1 bytes
 10905 ;; Hardware stack levels used: 1
 10906 ;; This function calls:
 10907 ;;		Nothing
 10908 ;; This function is called by:
 10909 ;;		_HighISR
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913                           	psect	text50
 10914   0047AE                     __ptext50:
 10915                           	callstack 0
 10916   0047AE                     _putCharToRxBuf:
 10917                           	callstack 24
 10918                           
 10919                           ; BSR set to: 14
 10920                           ;incstack = 0
 10921                           ;putCharToRxBuf@byte stored from wreg
 10922   0047AE  6E01               	movwf	putCharToRxBuf@byte^0,c
 10923   0047B0                     
 10924                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
 10925   0047B0  0E13               	movlw	19
 10926   0047B2  644C               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
 10927   0047B4  EFDE  F023         	goto	i2u286_41
 10928   0047B8  EFE0  F023         	goto	i2u286_40
 10929   0047BC                     i2u286_41:
 10930   0047BC  EFE2  F023         	goto	i2l3852
 10931   0047C0                     i2u286_40:
 10932   0047C0  0E00               	movlw	0
 10933   0047C2  6E4C               	movwf	_RxBufWriteCnt^0,c	;volatile
 10934   0047C4                     i2l3852:
 10935                           
 10936                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
 10937   0047C4  504C               	movf	_RxBufWriteCnt^0,w,c
 10938   0047C6  0FC4               	addlw	low _EUSART4RXbuf
 10939   0047C8  6ED9               	movwf	fsr2l,c
 10940   0047CA  6ADA               	clrf	fsr2h,c
 10941   0047CC  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
 10942   0047D0  2A4C               	incf	_RxBufWriteCnt^0,f,c	;volatile
 10943   0047D2  0012               	return		;funcret
 10944   0047D4                     __end_of_putCharToRxBuf:
 10945                           	callstack 0
 10946                           
 10947 ;; *************** function _isDataInTxBuf *****************
 10948 ;; Defined at:
 10949 ;;		line 61 in file "serial.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;		None
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;		None
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  1    wreg      unsigned char 
 10956 ;; Registers used:
 10957 ;;		wreg, status,2, status,0
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10967 ;;Total ram usage:        0 bytes
 10968 ;; Hardware stack levels used: 1
 10969 ;; This function calls:
 10970 ;;		Nothing
 10971 ;; This function is called by:
 10972 ;;		_HighISR
 10973 ;;		_sendTxBuf
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977                           	psect	text51
 10978   0048CE                     __ptext51:
 10979                           	callstack 0
 10980   0048CE                     _isDataInTxBuf:
 10981                           	callstack 24
 10982   0048CE                     
 10983                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
 10984   0048CE  5049               	movf	_TxBufReadCnt^0,w,c	;volatile
 10985   0048D0  184A               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
 10986   0048D2  A4D8               	btfss	status,2,c
 10987   0048D4  EF6E  F024         	goto	i2u129_41
 10988   0048D8  EF71  F024         	goto	i2u129_40
 10989   0048DC                     i2u129_41:
 10990   0048DC  0E01               	movlw	1
 10991   0048DE  EF72  F024         	goto	i2u130_40
 10992   0048E2                     i2u129_40:
 10993   0048E2  0E00               	movlw	0
 10994   0048E4                     i2u130_40:
 10995   0048E4  0012               	return		;funcret
 10996   0048E6                     __end_of_isDataInTxBuf:
 10997                           	callstack 0
 10998                           
 10999 ;; *************** function _getCharFromTxBuf *****************
 11000 ;; Defined at:
 11001 ;;		line 47 in file "serial.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;		None
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;		None
 11006 ;; Return value:  Size  Location     Type
 11007 ;;                  1    wreg      unsigned char 
 11008 ;; Registers used:
 11009 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11010 ;; Tracked objects:
 11011 ;;		On entry : 0/0
 11012 ;;		On exit  : 0/0
 11013 ;;		Unchanged: 0/0
 11014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11018 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11019 ;;Total ram usage:        1 bytes
 11020 ;; Hardware stack levels used: 1
 11021 ;; This function calls:
 11022 ;;		Nothing
 11023 ;; This function is called by:
 11024 ;;		_HighISR
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028                           	psect	text52
 11029   0047D4                     __ptext52:
 11030                           	callstack 0
 11031   0047D4                     _getCharFromTxBuf:
 11032                           	callstack 24
 11033   0047D4                     
 11034                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
 11035   0047D4  0E3B               	movlw	59
 11036   0047D6  6449               	cpfsgt	_TxBufReadCnt^0,c	;volatile
 11037   0047D8  EFF0  F023         	goto	i2u287_41
 11038   0047DC  EFF2  F023         	goto	i2u287_40
 11039   0047E0                     i2u287_41:
 11040   0047E0  EFF4  F023         	goto	i2l3860
 11041   0047E4                     i2u287_40:
 11042   0047E4  0E00               	movlw	0
 11043   0047E6  6E49               	movwf	_TxBufReadCnt^0,c	;volatile
 11044   0047E8                     i2l3860:
 11045                           
 11046                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
 11047   0047E8  2A49               	incf	_TxBufReadCnt^0,f,c	;volatile
 11048   0047EA  0449               	decf	_TxBufReadCnt^0,w,c	;volatile
 11049   0047EC  6E01               	movwf	??_getCharFromTxBuf^0,c
 11050   0047EE  5001               	movf	??_getCharFromTxBuf^0,w,c
 11051   0047F0  0F60               	addlw	low _EUSART4TXbuf
 11052   0047F2  6ED9               	movwf	fsr2l,c
 11053   0047F4  6ADA               	clrf	fsr2h,c
 11054   0047F6  50DF               	movf	indf2,w,c
 11055   0047F8  0012               	return		;funcret
 11056   0047FA                     __end_of_getCharFromTxBuf:
 11057                           	callstack 0
 11058                           
 11059                           	psect	smallconst
 11060   000E00                     __psmallconst:
 11061                           	callstack 0
 11062   000E00  00                 	db	0
 11063   000E01  00                 	db	0	; dummy byte at the end
 11064   000000                     
 11065                           	psect	rparam
 11066   000000                     
 11067                           	psect	temp
 11068   00004F                     btemp:
 11069                           	callstack 0
 11070   00004F                     	ds	1
 11071   000000                     int$flags	set	btemp
 11072   000000                     wtemp8	set	btemp+1
 11073   000000                     ttemp5	set	btemp+1
 11074   000000                     ttemp6	set	btemp+4
 11075   000000                     ttemp7	set	btemp+8
 11076                           
 11077                           	psect	config
 11078                           
 11079                           ;Config register CONFIG1L @ 0x300000
 11080                           ;	External Oscillator mode Selection bits
 11081                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11082                           ;	Power-up default value for COSC bits
 11083                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11084   300000                     	org	3145728
 11085   300000  AA                 	db	170
 11086                           
 11087                           ;Config register CONFIG1H @ 0x300001
 11088                           ;	unspecified, using default values
 11089                           ;	Clock Out Enable bit
 11090                           ;	CLKOUTEN = 0x1, unprogrammed default
 11091                           ;	Clock Switch Enable bit
 11092                           ;	CSWEN = 0x1, unprogrammed default
 11093                           ;	Fail-Safe Clock Monitor Enable bit
 11094                           ;	FCMEN = 0x1, unprogrammed default
 11095   300001                     	org	3145729
 11096   300001  FF                 	db	255
 11097                           
 11098                           ;Config register CONFIG3L @ 0x300004
 11099                           ;	WDT Period Select bits
 11100                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11101                           ;	WDT operating mode
 11102                           ;	WDTE = OFF, WDT Disabled
 11103   300004                     	org	3145732
 11104   300004  9F                 	db	159
 11105                           
 11106                           ;Config register CONFIG3H @ 0x300005
 11107                           ;	unspecified, using default values
 11108                           ;	WDT Window Select bits
 11109                           ;	WDTCWS = 0x7, unprogrammed default
 11110                           ;	WDT input clock selector
 11111                           ;	WDTCCS = 0x7, unprogrammed default
 11112   300005                     	org	3145733
 11113   300005  FF                 	db	255
 11114                           tosu	equ	0xFFF
 11115                           tosh	equ	0xFFE
 11116                           tosl	equ	0xFFD
 11117                           stkptr	equ	0xFFC
 11118                           pclatu	equ	0xFFB
 11119                           pclath	equ	0xFFA
 11120                           pcl	equ	0xFF9
 11121                           tblptru	equ	0xFF8
 11122                           tblptrh	equ	0xFF7
 11123                           tblptrl	equ	0xFF6
 11124                           tablat	equ	0xFF5
 11125                           prodh	equ	0xFF4
 11126                           prodl	equ	0xFF3
 11127                           indf0	equ	0xFEF
 11128                           postinc0	equ	0xFEE
 11129                           postdec0	equ	0xFED
 11130                           preinc0	equ	0xFEC
 11131                           plusw0	equ	0xFEB
 11132                           fsr0h	equ	0xFEA
 11133                           fsr0l	equ	0xFE9
 11134                           wreg	equ	0xFE8
 11135                           indf1	equ	0xFE7
 11136                           postinc1	equ	0xFE6
 11137                           postdec1	equ	0xFE5
 11138                           preinc1	equ	0xFE4
 11139                           plusw1	equ	0xFE3
 11140                           fsr1h	equ	0xFE2
 11141                           fsr1l	equ	0xFE1
 11142                           bsr	equ	0xFE0
 11143                           indf2	equ	0xFDF
 11144                           postinc2	equ	0xFDE
 11145                           postdec2	equ	0xFDD
 11146                           preinc2	equ	0xFDC
 11147                           plusw2	equ	0xFDB
 11148                           fsr2h	equ	0xFDA
 11149                           fsr2l	equ	0xFD9
 11150                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      78
    BANK0           160     22     146
    BANK1           256     20      20
    BANK2           256      0     122
    BANK3           256    256     256
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK3[1]), 

    color_calibration@blue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@blue(BANK3[6]), 

    color_calibration@green	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@green(BANK3[6]), 

    color_calibration@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK3[6]), 

    color_calibration@lightblue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@lightblue(BANK3[6]), 

    color_calibration@orange	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@orange(BANK3[6]), 

    color_calibration@pink	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@pink(BANK3[6]), 

    color_calibration@red	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@red(BANK3[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK3[8]), 

    color_calibration@white	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@white(BANK3[6]), 

    color_calibration@yellow	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@yellow(BANK3[6]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK3[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK3[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK3[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK3[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK3[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK3[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK3[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    rgb_2_hsv@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK3[6]), 

    S33DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S33DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), main@motorR(BANK3[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_detect
    _move->_returnHome
    _returnHome->_reverseOneSquare
    _returnHome->_turnLeft
    _returnHome->_turnRight
    _lostReturnHome->_reverseOneSquare
    _lostReturnHome->_turnLeft
    _lostReturnHome->_turnRight
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_rgb_2_hsv
    _rgb_2_hsv->___aldiv
    ___lldiv->___lmul
    ___aldiv->___lmul
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_rgb_2_hsv
    _color_calibration->_rgb_2_hsv

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_color_calibration

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               268   268      0  275842
                                             68 COMRAM     2     2      0
                                              0 BANK3    256   256      0
                         _Buggy_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
                   _color_click_init
                       _color_detect
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                          _rgb_2_hsv
                               _stop
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _move                                                18     2     16  124769
                                             64 COMRAM     2     2      0
                                              0 BANK0     16     0     16
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          20     5     15   65372
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      20     5     15   64320
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    5091
                                             30 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    14     7      7    6592
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2     102
                                             11 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    7667
                                             30 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        57     3     54    1863
                                             11 COMRAM    57     3     54
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    1967
                                             20 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0    1064
                                             15 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     903
                                             13 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20   13894
                                             59 COMRAM     2     2      0
                                              0 BANK1     20     0     20
                         _color_read
                          _rgb_2_hsv
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      31
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rgb_2_hsv                                           44    34     10    9273
                                             37 COMRAM    22    12     10
                                              0 BANK0     22    22      0
                            ___aldiv
                            ___lldiv
                             ___lmul
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (2) _min                                                  4     0      4     484
                                             11 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _max                                                  4     0      4     484
                                             11 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2436
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1141
                                             23 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1525
                                             23 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2    1458
                                             15 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      31
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      65
                                             12 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   40974
                                             44 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   15080
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   24080
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2901
                                             24 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     472
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     481
                                             17 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     758
                                             19 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      34
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0     356
                                              9 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (7) i2_color_clear_init_interrupts                        5     5      0     334
                                              4 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _rgb_2_hsv
       ___aldiv
         ___lmul (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _max
       _min
     _white_Light
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_writetoaddr
   _color_detect
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _turnLeft
     _turnRight
   _resetTimer
   _rgb_2_hsv
   _stop
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100    100     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      7A       9       47.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      14       7        7.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      92       5       91.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4E       1       83.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26E      66        0.0%
DATA                 0      0     26E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 01:48:58 2024

                                _white_Light 47FA                                           l87 2D12  
                                         l89 2D20                                           l98 307A  
                               ___awdiv@sign 0011                          ___wmul@multiplicand 000E  
                           main@turnDuration 03DD                                          l201 46DC  
                                        l202 46E4                                          l220 2C48  
                                        l141 483C                                          l206 46B0  
                                        l207 46B8                                          l215 2BB2  
                                        l135 4656                                          l144 4816  
                                        l250 4738                                          l146 481C  
                                        l138 43D0                                          l171 357E  
                                        l180 2328                                          l156 357C  
                                        l253 475E                                          l149 376C  
                                        l262 4910                                          l182 2336  
                                        l174 21BC                                          l191 2558  
                                        l183 23DE                                          l247 470E  
                                        l256 491A                                          l192 2600  
                                        l176 21CA                                          l600 1AE0  
                                        l441 48B8                                          l265 48F0  
                                        l185 23EC                                          l177 2272  
                                        l194 260E                                          l186 2494  
                                        l610 1B5A                                          l443 48C6  
                                        l259 4924                                          l195 26B6  
                                        l179 2280                                          l444 48CC  
                                        l268 461E                                          l188 24A2  
                                        l541 3E66                                          l197 26C4  
                                        l189 254A                                          l438 48B4  
                                        l198 276C                                          l534 4356  
                                        l710 4736                                          l455 45C4  
                                        l623 3BBC                                          l391 489A  
                                        l615 4038                                          l704 485C  
                                        l456 45C6                                          l632 3CCC  
                                        l640 39E8                                          l560 21B0  
                                        l457 45DA                                          l713 47AC  
                                        l618 407A                                          l299 468C  
                                        l459 45DC                                          l635 3CFA  
                                        l627 3C26                                          l707 4906  
                                        l652 3B26                                          l644 3A52  
                                        l740 42B6                                          l724 4518  
                                        l629 3C4A                                          l725 4528  
                                        l661 415E                                          l646 3A76  
                                        l670 386A                                          l575 1442  
                                        l672 388E                                          l649 3AF8  
                                        l657 4112                                          l585 14BC  
                                        l569 1442                                          l690 3206  
                                        l682 3166                                          l666 3800  
                                        l594 1AE0                                          l691 32F6  
                                        l747 42C6                                          l675 3910  
                                        l693 3316                                          l686 3182  
                                        l678 3952                                          l687 31B8  
                                        l944 4222                                          l792 3F72  
                                        _max 46BA                                          _min 468E  
                            color_detect@HSV 000C                                ?_color_detect 000C  
                                        prod 0FF3                          i2_color_writetoaddr 485E  
                                        wreg 0FE8                              color_detect@red 0012  
  color_clear_init_interrupts@high_threshold 0011  i2color_clear_init_interrupts@high_threshold 0006  
                                       l1211 44BE                                         l1204 44B6  
                                       l4100 44B0                                         l4102 4912  
                                       l4110 4908                                         l4120 3D80  
                                       l4200 461C                                         l4104 4916  
                                       l4112 490C                                         l5000 1DB2  
                                       l4122 3D84                                         l4114 3CFC  
                                       l4106 48E8                                         l4210 468E  
                                       l4130 407C                                         l5010 1E54  
                                       l5002 1DC4                                         l4124 3DC6  
                                       l4116 3D18                                         l4300 3CBA  
                                       l4220 397E                                         l4108 48EC  
                                       l4204 46BA                                         l4212 46A4  
                                       l4140 40F4                                         l4132 409C  
                                       l5100 1754                                         l5020 1F0E  
                                       l5004 1DE4                                         l5012 1E8C  
                                       l4126 3DE2                                         l4118 3D6C  
                                       l4302 3CC8                                         l4230 39E4  
                                       l4222 39B2                                         l4070 4738  
                                       l4206 46D0                                         l4142 4100  
                                       l4134 40A8                                         l4150 48FE  
                                       l4310 378A                                         l5102 176C  
                                       l5110 1818                                         l5030 1FB0  
                                       l5022 1F2E                                         l5014 1E9E  
                                       l5006 1DFC                                         l4080 444C  
                                       l4128 3E26                                         l4304 3CF0  
                                       l4240 3A4E                                         l4232 3A0C  
                                       l4224 39BE                                         l4216 3954  
                                       l4072 4748                                         l4400 3EAC  
                                       l4144 410E                                         l4136 40DC  
                                       l4152 4710                                         l4320 37EE  
                                       l4312 3796                                         l4160 3F74  
                                       l5112 1836                                         l5104 17A4  
                                       l5040 2072                                         l5032 1FE8  
                                       l5016 1EBE                                         l5024 1F66  
                                       l5008 1E34                                         l5200 2CCE  
                                       l4090 4484                                         l4082 4454  
                                       l4074 4788                                         l4250 3ACE  
                                       l4242 3A7C                                         l4226 39CA  
                                       l4234 3A10                                         l4218 3972  
                                       l4410 3EEA                                         l4402 3EB0  
                                       l4146 4136                                         l4138 40E8  
                                       l4154 471C                                         l4330 3858  
                                       l4322 37FC                                         l4314 37CA  
                                       l4170 400E                                         l4162 3FBC  
                                       l5130 1958                                         l5114 1856  
                                       l5122 18CA                                         l5106 17C4  
                                       l5050 212C                                         l5042 208A  
                                       l5034 2008                                         l5026 1F78  
                                       l5018 1ED6                                         l5210 2CEA  
                                       l5202 2CD2                                         l4092 448A  
                                       l4084 4466                                         l4076 47A4  
                                       l4252 3ADA                                         l4236 3A34  
                                       l4228 39D6                                         l4420 3F32  
                                       l4412 3EF8                                         l4404 3EC0  
                                       l4500 4378                                         l4148 413A  
                                       l4156 472E                                         l4340 38DA  
                                       l4332 3866                                         l4324 3824  
                                       l4316 37D6                                         l4308 376E  
                                       l4172 401A                                         l5140 19D2  
                                       l5124 18E8                                         l5116 186E  
                                       l5108 17FC                                         l5060 152E  
                                       l5052 2170                                         l5044 20C2  
                                       l5028 1F98                                         l5036 2040  
                                       l5220 2D02                                         l5212 2CF2  
                                       l5204 2CD6                                         l4094 44A0  
                                       l4086 446E                                         l4270 3B92  
                                       l4262 3B28                                         l4254 3AE6  
                                       l4246 3A8E                                         l4238 3A40  
                                       l4190 45E0                                         l4422 3F3C  
                                       l4414 3F02                                         l4406 3ED6  
                                       l4510 43BC                                         l4502 438E  
                                       l4350 3934                                         l4342 38E6  
                                       l4334 3894                                         l4318 37E2  
                                       l4326 3828                                         l4174 4026  
                                       l4182 4066                                         l4166 3FCE  
                                       l5150 1A6C                                         l5142 1A0A  
                                       l5126 1908                                         l5134 197C  
                                       l5118 18A6                                         l5070 15BE  
                                       l5062 154E                                         l5054 14BE  
                                       l5046 20E2                                         l5038 2052  
                                       l5230 2D40                                         l5222 2D06  
                                       l5214 2CF6                                         l5206 2CDA  
                                       l4520 48B0                                         l4096 44A8  
                                       l4088 4476                                         l4272 3B9E  
                                       l4280 3BE4                                         l4264 3B46  
                                       l4256 3AF4                                         l4248 3AC2  
                                       l4192 45E4                                         l4440 35B4  
                                       l4416 3F20                                         l4408 3EDE  
                                       l4424 3F42                                         l4360 44DE  
                                       l4432 47FC                                         l4184 4820  
                                       l4512 43C6                                         l4504 439E  
                                       l4344 38F2                                         l4328 384C  
                                       l4176 4034                                         l4168 4002  
                                       l5160 1B00                                         l5152 1A84  
                                       l5136 199A                                         l5128 1920  
                                       l5080 15F4                                         l5072 15C2  
                                       l5064 1586                                         l5056 14DE  
                                       l4600 126A                                         l5048 211A  
                                       l5240 2DE4                                         l5232 2D96  
                                       l5224 2D0A                                         l5216 2CFA  
                                       l5208 2CE2                                         l4522 48B2  
                                       l4514 489C                                         l4098 44AA  
                                       l4282 3C08                                         l4274 3BAA  
                                       l4266 3B52                                         l4258 3B1C  
                                       l4194 45EC                                         l4186 491C  
                                       l4450 3708                                         l4442 360C  
                                       l4426 3F52                                         l4418 3F30  
                                       l4370 424A                                         l4362 44EE  
                                       l4434 480C                                         l4506 43A8  
                                       l4346 38FE                                         l4354 393E  
                                       l4338 38A6                                         l4178 405C  
                                       l5162 1B32                                         l5154 1ABC  
                                       l5138 19BA                                         l5146 1A2E  
                                       l5090 16A2                                         l5082 1610  
                                       l5074 15D2                                         l5066 159E  
                                       l5058 14F6                                         l4610 12FC  
                                       l4602 1282                                         l4530 0E02  
                                       l5250 2E28                                         l5242 2DEC  
                                       l5234 2DBA                                         l5226 2D0E  
                                       l5218 2CFE                                         l5170 2C56  
                                       l4700 4846                                         l4524 48B6  
                                       l4516 48A6                                         l4292 3C62  
                                       l4284 3C14                                         l4276 3BB8  
                                       l4268 3B86                                         l4196 45F4  
                                       l4188 4920                                         l4452 3726  
                                       l4444 362A                                         l4436 3580  
                                       l4428 3F62                                         l4380 4294  
                                       l4372 4252                                         l4364 44F8  
                                       l4356 44C0                                         l4460 28F4  
                                       l4508 43B2                                         l4348 390C  
                                       l5148 1A4C                                         l5092 16C2  
                                       l5084 1630                                         l5164 1B4A  
                                       l5076 15EA                                         l5068 15BA  
                                       l4612 131C                                         l4620 1390  
                                       l4604 12BA                                         l4540 0ECA  
                                       l4532 0E22                                         l5260 2E8E  
                                       l5252 2E2C                                         l5244 2E04  
                                       l5236 2DC0                                         l5228 2D28  
                                       l5180 2C90                                         l5172 2C74  
                                       l4702 4850                                         l4526 48CA  
                                       l4518 48AE                                         l4294 3C96  
                                       l4286 3C22                                         l4278 3BE0  
                                       l4198 461A                                         l4446 368A  
                                       l4438 359A                                         l4390 3E6C  
                                       l4382 42A4                                         l4374 425E  
                                       l4366 4224                                         l4358 44D0  
                                       l4462 290A                                         l4470 2A42  
                                       l4454 276E                                         l4710 488A  
                                       l5158 1AFC                                         l5094 16DA  
                                       l5086 1648                                         l5078 15F2  
                                       l4622 13AE                                         l4614 1334  
                                       l4550 0F4C                                         l4542 0EE2  
                                       l4534 0E3A                                         l5270 2FB8  
                                       l5262 2EAC                                         l5254 2E3C  
                                       l5246 2E20                                         l5238 2DD8  
                                       l5190 2CAE                                         l5182 2C94  
                                       l5174 2C78                                         l5166 2C4A  
                                       l4704 485A                                         l4640 4160  
                                       l4296 3CA2                                         l4288 3C50  
                                       l4448 36A8                                         l4392 3E7A  
                                       l4384 42A6                                         l4376 426C  
                                       l4368 4234                                         l4480 2C28  
                                       l4472 2A5A                                         l4464 296E  
                                       l4456 28C2                                         l4800 23FC  
                                       l4720 42D8                                         l4712 4894  
                                       l5096 1716                                         l5088 1684  
                                       l4632 145E                                         l4624 13CE  
                                       l4616 136C                                         l4608 12DE  
                                       l4560 0FAA                                         l4552 0F54  
                                       l4544 0EFE                                         l4536 0E72  
                                       l5272 2FC0                                         l5264 2F56  
                                       l5256 2E4C                                         l5280 2FDC  
                                       l5248 2E24                                         l5192 2CB2  
                                       l5184 2C98                                         l5176 2C88  
                                       l5168 2C56                                         l4650 418C  
                                       l4642 4164                                         l4298 3CAE  
                                       l4394 3E8A                                         l4386 42B0  
                                       l4378 4276                                         l4482 2C34  
                                       l4474 2AF4                                         l4466 2984  
                                       l4458 28DC                                         l4810 2490  
                                       l4802 241E                                         l4490 46F8  
                                       l4730 4332                                         l4722 42FE  
                                       l4714 4896                                         l4706 487E  
                                       l5098 1734                                         l4634 1462  
                                       l4626 13E6                                         l4570 1078  
                                       l4562 0FE6                                         l4554 0F56  
                                       l4546 0F02                                         l4538 0E92  
                                       l5282 2FEC                                         l5290 3054  
                                       l5274 2FC4                                         l5266 2F66  
                                       l5258 2E82                                         l5194 2CBA  
                                       l5186 2CA4                                         l5178 2C8C  
                                       l4660 41BA                                         l4652 4194  
                                       l4644 4172                                         l4900 324A  
                                       l4396 3E8E                                         l4388 3E68  
                                       l4476 2B0C                                         l4468 29E6  
                                       l4820 250E                                         l4812 24A6  
                                       l4804 2436                                         l4492 46FA  
                                       l4484 46E6                                         l4740 4354  
                                       l4732 433C                                         l4724 4302  
                                       l4716 4898                                         l4708 4888  
                                       l4636 1494                                         l4628 141E  
                                       l4580 1126                                         l4572 1096  
                                       l4564 1004                                         l4556 0F72  
                                       l4548 0F34                                         l5292 3068  
                                       l5284 2FF0                                         l5276 2FC8  
                                       l5268 2FAC                                         l5196 2CC2  
                                       l5188 2CAA                                         l4670 41F4  
                                       l4662 41C2                                         l4654 4198  
                                       l4646 417A                                         l4750 45D4  
                                       l4742 4590                                         l4902 328A  
                                       l4398 3E9C                                         l4478 2C0A  
                                       l4830 258A                                         l4822 252E  
                                       l4814 24B2                                         l4806 2458  
                                       l4494 46FC                                         l4486 46F0  
                                       l4910 3318                                         l4734 433E  
                                       l4726 4326                                         l4718 42C8  
                                       l4590 11D0                                         l4582 115E  
                                       l4574 10B6                                         l4566 1024  
                                       l4558 0F92                                         l4638 14AC  
                                       l5286 3048                                         l5278 2FD8  
                                       l5198 2CCA                                         ?_max 000C  
                                       l4680 421A                                         l4672 41F6  
                                       l4664 41D0                                         l4656 41A0  
                                       l4648 417E                                         l4744 459A  
                                       l4904 32B2                                         l4840 2612  
                                       l4832 25A2                                         l4824 2546  
                                       l4816 24D4                                         l4808 2478  
                                       l4760 21FC                                         l4752 21B2  
                                       l4488 46F6                                         l4496 4358  
                                       l4920 3386                                         l4912 3318  
                                       l4736 4348                                         l4728 4330  
                                       l4592 1208                                         l4576 10CE  
                                       l4584 117A                                         l4568 103C  
                                       l5288 304C                                         l4674 41FC  
                                       l4666 41D6                                         l4658 41B2  
                                       l4746 45B0                                         l4906 32FA  
                                       l4850 269A                                         l4842 261E  
                                       l4834 25C4                                         l4826 255C  
                                       l4818 24EC                                         l4770 2284  
                                       l4762 2214                                         l4754 21B8  
                                       l4498 436C                                         l4690 462E  
                                       l4930 33FC                                         l4922 33A8  
                                       l4914 333A                                         l4738 434A  
                                       l4586 1198                                         l4578 1106  
                                main@curMove 03DB                                         l4684 4658  
                                       l4668 41EC                                         l4676 4202  
                                       l4748 45BE                                         l4908 3312  
                                       l4860 270E                                         l4852 26B2  
                                       l4844 2640                                         l4836 25E4  
                                       l4828 2568                                         l4780 230C  
                                       l4772 2290                                         l4764 2236  
                                       l4756 21CE                                         l4692 463E  
                                       l4940 348C                                         l4932 341E  
                                       l4924 33B0                                         l4916 335C  
                                       l4588 11B8                                         l4596 122C  
                                       ?_min 000C                                         l4678 4212  
                                       l4870 30A6                                         l4862 2730  
                                       l4854 26C8                                         l4846 2658  
                                       l4838 25FC                                         l4790 2380  
                                       l4782 2324                                         l4774 22B2  
                                       l4766 2256                                         l4758 21DA  
                                       l4694 4648                                         l4686 4620  
                                       l4950 3502                                         l4942 3494  
                                       l4934 3440                                         l4926 33D2  
                                       l4918 3364                                         l4598 124A  
                                       l4880 3190                                         l4872 30BE  
                                       l4864 2750                                         l4856 26D4  
                                       l4848 267A                                         l4792 23A2  
                                       l4784 233A                                         l4776 22CA  
                                       l4768 226E                                         l4696 4652  
                                       l4688 4624                                         l4960 3578  
                                       l4952 3524                                         l4944 34B6  
                                       l4936 3448                                         l4928 33F4  
                                       l4698 483E                                         l4890 31D2  
                                       l4882 31A8                                         l4874 30FE  
                                       l4866 2768                                         l4858 26F6  
                                       l4794 23C2                                         l4786 2346  
                                       l4778 22EC                                         l4954 352C  
                                       l4946 34D8                                         l4938 346A  
                                       l4970 1BA6                                         l4892 31EA  
                                       l4884 31B2                                         l4876 3126  
                                       l4868 307E                                         l4796 23DA  
                                       l4788 2368                                         l4956 354E  
                                       l4948 34E0                                         l4980 1C48  
                                       l4972 1BDE                                         l4964 1B5C  
                                       l4894 31F8                                         l4886 31C6  
                                       l4878 3174                                         l4798 23F0  
                                       l4958 3570                                         l4990 1CEA  
                                       l4982 1C80                                         l4966 1B6E  
                                       l4974 1BFE                                         l4896 320A  
                                       l4888 31D0                                         l4992 1D22  
                                       l4976 1C10                                         l4984 1CA0  
                                       l4968 1B8E                                         l4898 3232  
                                       l4994 1D42                                         l4986 1CB2  
                                       l4978 1C30                                         l4996 1D7A  
                                       l4988 1CD2                                         l4998 1D92  
                                       u3200 44A0                                         u4000 3174  
                    color_calibration@orange 010E                                 _BAUD4CONbits 0EE9  
                                       u3201 449C                                         u4001 3170  
                                       u3210 3D18                                         u4010 3182  
                                       u3211 3D14                                         u4011 317E  
                                       u3220 3DE2                                         u4020 3190  
                                       u3300 46A4                                         u4100 33D2  
                                       u3221 3DDE                                         u4021 318C  
                                       u3301 46A0                                         u4101 33CE  
                                       u3310 3A0C                                         u4030 31A8  
                                       u4110 33F4                                         u3230 4136  
                                       u3311 3A08                                         u4031 31A4  
                                       u4111 33F0                                         u3231 4132  
                                       u3400 3CF0                                         u3320 3A34  
                                       u4040 31C6                                         u3160 4748  
                                       u4200 354E                                         u4120 341E  
                                       u3240 415E                                         u3401 3CEC  
                                       u3321 3A30                                         u4041 31C2  
                                       u3161 4744                                         u4201 354A  
                                       u4121 341A                                         u3241 415A  
                                       u3330 3A76                                         u4050 31F8  
                                       u3170 475E                                         u4210 3570  
                                       u4130 3440                                         u3410 3824  
                                       u3250 3FCA                                         _T2PR 0FBC  
                                       u3331 3A72                                         u4051 31F4  
                                       u3171 475A                                         u4211 356C  
                                       u4131 343C                                         u3411 3820  
                                       u3251 3FC6                                         u3180 4466  
                                       u3340 3A8A                                         u3500 4294  
                                       u4140 346A                                         u4060 333A  
                                       u3420 384C                                         u3260 405C  
                                       u4300 15D2                                         u4220 1B6E  
                                       u3181 4462                                         u3341 3A86  
                                       u3501 4290                                         u4141 3466  
                                       u4061 3336                                         u3421 3848  
                                       u3261 4058                                         u4301 15CE  
                                       u4221 1B6A                                         u3190 4484  
                                       u3350 3B1C                                         u3270 4608  
                                       u3510 3E7A                                         u4150 348C  
                                       u4070 335C                                         u3430 388E  
                                       u4310 1610                                         u4230 1C10  
                                       u3191 4480                                         u3351 3B18  
                                       u3271 4600                                         u3511 3E76  
                                       u4151 3488                                         u4071 3358  
                                       u3431 388A                                         u4311 160C  
                                       u5007 135E                                         u4231 1C0C  
                                       u3360 3BE0                                         u3520 3E9C  
                                       u3600 2984                                         u4160 34B6  
                                       u4080 3386                                         u3440 38A2  
                                       u4320 16A2                                         u4240 1CB2  
                                       u3361 3BDC                                         u3521 3E98  
                                       u3601 2980                                         u4161 34B2  
                                       u4081 3382                                         u3441 389E  
                                       u4321 169E                                         u5017 13D8  
                                       u4241 1CAE                                         u4401 2C50  
                                       u3370 3C08                                         u3530 3ED6  
                                       u3290 46D0                                         u3610 2A5A  
                                       u4170 34D8                                         u4090 33A8  
                                       u3450 3934                                         u4330 1734  
                                       u4250 1DC4                                         u3371 3C04  
                                       u3531 3ED2                                         u3291 46CC  
                                       u3611 2A56                                         u4171 34D4  
                                       u4091 33A4                                         u3451 3930  
                                       u4331 1730                                         u5107 1704  
                                       u5027 1410                                         u4251 1DC0  
                                       u4411 2C62                                         u3380 3C4A  
                                       u3540 3EF8                                         u3460 44DE  
                                       u3620 2B0C                                         u4180 3502  
                                       u4340 1836                                         u3700 1198  
                                       u4260 1E9E                                         u3381 3C46  
                                       u3541 3EF4                                         u3461 44DA  
                                       u3621 2B08                                         u4181 34FE  
                                       u4341 1832                                         u5117 175E  
                                       u5037 14E8                                         u3701 1194  
                                       u4261 1E9A                                         u4501 2EEC  
                                       u4421 2C6E                                         u3390 3C5E  
                                       u3550 3F20                                         u3470 4518  
                                       u4190 3524                                         u4350 18E8  
                                       u3710 124A                                         u4270 1F78  
                                       u4430 2D20                                         u3391 3C5A  
                                       u3551 3F1C                                         u3471 4514  
                                       u4191 3520                                         u5207 19FC  
                                       u4351 18E4                                         u5127 1796  
                                       u5047 1520                                         u3711 1246  
                                       u4271 1F74                                         u4511 2EFE  
                                       u4431 2D1C                                         u3800 41EC  
                                       u3288 460A                                         u3560 3F52  
                                       u3480 424A                                         u3640 2C28  
                                       u4360 199A                                         u3720 12FC  
                                       u4280 2052                                         u4440 2E3C  
                                       u3801 41E8                                         u3561 3F4E  
                                       u3481 4246                                         u3641 2C24  
                                       u5217 1A76                                         u4361 1996  
                                       u5137 17CE                                         u5057 1558  
                                       u3721 12F8                                         u4281 204E  
                                       u4521 2F10                                         u4441 2E38  
                                       u3650 48C6                                         u3810 4212  
                                       u3490 426C                                         u3570 480C  
                                       u4370 1A4C                                         u3730 13AE  
                                       u4290 212C                                         u3651 48C2  
                                       u3811 420E                                         u3491 4268  
                                       u3635 2B2A                                         u3571 4808  
                                       u5307 2260                                         u5227 1AAE  
                                       u4371 1A48                                         u5147 1806  
                                       u5067 1590                                         u3731 13AA  
                                       u4291 2128                                         u4531 2F22  
                                       u3820 45BE                                         u3580 28F4  
                                       u3900 23EC                                         u4380 1B32  
                                       u3740 1494                                         u3660 0F34  
                                       u3821 45BA                                         u3581 28F0  
                                       u3901 23E8                                         u5317 2316  
                                       u5237 402C                                         u4381 1B2E  
                                       u5157 1860                                         u5077 163A  
                                       u3741 1490                                         u3661 0F30  
                                       u4541 2F34                                         u4461 2E98  
                                       u3830 45D4                                         u3590 290A  
                                       u4390 1B5A                                         u3750 14BC  
                                       u3670 0F72                                         u3831 45D0  
                                       u5407 3130                                         u3591 2906  
                                       u3911 240A                                         u5327 23CC  
                                       u5247 37F4                                         u4391 1B56  
                                       u5167 1898                                         u5087 1672  
                                       u3751 14B8                                         u3671 0F6E  
                                       u4551 2F46                                         u4471 2EB6  
                                       u4455 2E48                                         u4607 2D32  
                                       u3760 4172                                         u3920 24A2  
                                       u3840 21CA                                         u3680 1004  
                                       u3761 416E                                         u5417 31DC  
                                       u3921 249E                                         u5337 2482  
                                       u3841 21C6                                         u5257 385E  
                                       u5177 1912                                         u5097 16CC  
                                       u3681 1000                                         u4481 2EC8  
                                       u4457 2E4C                                         u4617 2DCA  
                                       u3770 418C                                         u3690 1096  
                                       u4570 2FEC                                         u3771 4188  
                                       u5507 3C1A                                         u5427 323C  
                                       u5347 2538                                         u3931 24C0  
                                       u3851 21E8                                         u5267 3904  
                                       u5187 194A                                         u3691 1092  
                                       u4707 1D84                                         u4571 2FE8  
                                       u4491 2EDA                                         u4627 2DF6  
                                       u3780 41B2                                         u3940 2558  
                                       u3860 2280                                         u4580 3068  
                                       u3781 41AE                                         u5517 3CC0  
                                       u5437 327C                                         u5357 25EE  
                                       u3941 2554                                         u3861 227C  
                                       u5277 4106                                         u5197 19C4  
                                       u4717 1DEE                                         u4637 1B98  
                                       u4581 3064                                         u4565 2FD4  
                                       u3790 41D0                                         u4590 307A  
                                       u3791 41CC                                         u5447 32BC  
                                       u5367 26A4                                         u3951 2576  
                                       u3871 229E                                         u5287 4634  
                                       u4807 207C                                         u4727 1E26  
                                       u4647 1BD0                                         u4591 3076  
                                       u4567 2FD8                                         u3960 260E  
                                       u3880 2336                                         u5457 3304  
                                       u5377 275A                                         u3961 260A  
                                       u3881 2332                                         u5297 4394  
                                       u4817 20B4                                         u4737 1E5E  
                                       u4657 1C3A                                         u5467 39DC  
                                       u5387 30B0                                         u3971 262C  
                                       u3891 2354                                         u4907 1066  
                                       u4827 20EC                                         u4747 1EC8  
                                       u4667 1C72                                         u3980 26C4  
                                       u5477 3A46                                         u5397 30F0  
                                       u3981 26C0                                         u4917 10C0  
                                       u4837 0E2C                                         u4757 1F00  
                                       u4677 1CDC                                         u5487 3AEC  
                                       u3991 26E2                                         u4927 10F8  
                                       u4847 0E64                                         u4767 1F38  
                                       u4687 1D14                                         u5497 3BB0  
                                       u4937 1130                                         u4857 0E9C  
                                       u4777 1FA2                                         u4697 1D4C  
                                       u4947 1168                                         u4867 0ED4  
                                       u4787 1FDA                                         u4957 11C2  
                                       u4877 0F9C                                         u4797 2012  
                                       u4967 11FA                                         u4887 0FD4  
                                       u4977 1274                                         u4897 102E  
                                       u4987 12AC                                         u4997 1326  
                    color_calibration@yellow 010A                  lostReturnHome@straightSpeed 0036  
                                       _main 2C4A                                         _move 1B5C  
                                       _lost 0047                                         _wall 0048  
                                       fsr1h 0FE2                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         max@a 000C  
                                       max@b 000E                                         btemp 004F  
                                       _stop 3F74                                         min@a 000C  
                                       min@b 000E                                         prodh 0FF4  
                                       prodl 0FF3                                         start 0092  
                           color_detect@blue 001E                          main@reverseDuration 03A6  
                           __end_of_ADC_init 48B6                         ?i2_color_writetoaddr 0003  
                           color_detect@pink 002A                              __end_of_HighISR 0092  
                      lostReturnHome@curMove 0035                                 ___param_bank 0000  
                       __end_of_batteryLevel 45DE                                        ??_max 0010  
                                      ??_min 0010                              __end_of___aldiv 3F74  
                                      ?_main 0001                                        _ADPCH 0F5F  
                            __end_of___awdiv 4224                                        ?_move 00D8  
                            __end_of___lldiv 42C8                                        ?_stop 001F  
                            ___awdiv@divisor 000E                              __end_of___lwdiv 44C0  
                                      i2l141 487C                                        i2l250 4760  
                                      i2l138 444A                                        i2l413 48E4  
                                      i2l253 4786                                        i2l406 47F8  
                                      i2l262 492E                                        i2l256 4938  
                                      i2l360 0086                                        i2l265 48FC  
                                      i2l399 47D2                              ___awdiv@counter 0010  
                             ??_color_detect 0042                                        _TMR0H 0FD4  
                                      _TMR0L 0FD3                          ___lmul@multiplicand 0010  
                 __end_of_I2C_2_Master_Start 491C                   __end_of_I2C_2_Master_Write 48F2  
                                 _Buggy_init 4658                   color_calibration@lightblue 0110  
                     returnHome@straightRamp 0038                       returnHome@straightTime 0033  
                                      tablat 0FF5                                        plusw0 0FEB  
                                      plusw2 0FDB                                        ttemp5 0050  
                                      ttemp6 0053                                        ttemp7 0057  
                                      stop@i 0027                                        status 0FD8  
                                      wtemp8 0050                            color_detect@color 0044  
                          color_detect@green 0018                            color_detect@white 003C  
                      ??i2_color_writetoaddr 0004                                 main@turnRamp 03A9  
                      _I2C_2_Master_RepStart 491C                           putCharToRxBuf@byte 0001  
                            __initialization 452A                    get16bitTMR0val@timer_high 0012  
                               __end_of_main 307E                                 __end_of_move 21B2  
                               __end_of_stop 407C                          move@reverseDuration 00E3  
                            _get16bitTMR0val 4710                                       ??_main 0045  
                                     ??_move 0041                                       ??_stop 0024  
                              __activetblptr 0000                                calibration@mL 002D  
                              calibration@mR 002F                       returnHome@turnDuration 003A  
                               ?_setMotorPWM 0019                                       _ADRESH 0F64  
                                     _CCPR1H 0FAA                                       _CCPR2H 0FA6  
                                     _CCPR3H 0F25                                       _CCPR4H 0F21  
                           ___awdiv@dividend 000C                       lostReturnHome@turnRamp 003B  
                                     _RC0PPS 0E62                                       _RC4REG 0EE3  
                                     _RE2PPS 0E74                                       _RC7PPS 0E69  
                                     _RD5PPS 0E6F                                       _RE4PPS 0E76  
                                     _RD6PPS 0E70                                       i2l3100 4930  
                                     i2l3102 4934                                       i2l3110 48F8  
                                     i2l3104 4926                                       i2l3106 492A  
                                     i2l3108 48F4                                       i2l4030 0026  
                                     i2l4040 0042                                       i2l4032 002A  
                                     i2l4050 0082                                       i2l4042 0050  
                                     i2l4034 002E                                       i2l4026 0012  
                                     i2l2516 48CE                                       i2l4044 0056  
                                     i2l4036 003C                                       i2l4028 0022  
                                     i2l4046 0066                                       i2l4038 0040  
                                     i2l4048 006E                                       i2l3364 4860  
                                     i2l3850 47C0                                       i2l2794 4760  
                                     _RG6PPS 0E88                                       i2l3860 47E8  
                                     i2l3852 47C4                                       i2l2796 4770  
                                     i2l3854 47D0                                       i2l3856 47D4  
                                     i2l3848 47B0                                       i2l3880 4418  
                                     i2l3872 43D2                                       i2l3858 47E4  
                                     i2l3882 4422                                       i2l3874 43E6  
                                     i2l3884 442C                                       i2l3876 43F2  
                                     i2l3886 4436                                       i2l3878 4408  
                                     i2l3888 4440                                    ??_HighISR 000A  
                   __end_of_color_click_init 4658                                       _TMR0IE 714D  
                                     _TMR0IF 719D                                       _RX4PPS 0E15  
                                     _TX4REG 0EE4                                main@lightblue 03CE  
                               ??_ADC_getval 000C                                ??_Timer0_init 000C  
                        calibration@turnRamp 0034                      calibration@turnDuration 0032  
                               _CCPTMRS0bits 0FAD                             _getCharFromTxBuf 47D4  
                                     ___lmul 44C0                                    ??___aldiv 0020  
                                     ___wmul 4788                                    ??___awdiv 0010  
                                  ??___lldiv 0020                                    ??___lwdiv 0016  
                                     clear_0 4568                                       clear_1 4574  
                           ___awdiv@quotient 0012                                       isa$std 0001  
                    returnHome@straightSpeed 0036                                 __pdataCOMRAM 004D  
                                     move@mL 00D8                                       move@mR 00DA  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                  ?_ADC_init 0001                                       stop@mL 001F  
                                     stop@mR 0021                                  ?_Buggy_init 0001  
                          ??_initDCmotorsPWM 000E                           __end_of_ADC_getval 48CE  
                 i2color_writetoaddr@address 0004                             __end_of_turnLeft 3CFC  
                         color_detect@orange 0030                   lostReturnHome@moveSequence 0031  
                      __end_of_isDataInTxBuf 48E6                                   __accesstop 0060  
                    __end_of__initialization 4586                           color_detect@yellow 0024  
                            fullSpeedAhead@i 0028                                main@turnSpeed 03A8  
                     ?_I2C_2_Master_RepStart 0001                                ___rparam_used 0001  
                       __end_of_color_detect 3580                lostReturnHome@reverseDuration 0037  
                             __pcstackCOMRAM 0001                      __end_of_get16bitTMR0val 4738  
                               ?_white_Light 0001                                 __pidataBANK0 493A  
                   get16bitTMR0val@timer_low 0010                     get16bitTMR0val@timer_val 0014  
               ?_color_clear_init_interrupts 0001                             _reverseOneSquare 376E  
                        __end_of_Timer0_init 485E                                   ??_ADC_init 000C  
                               rgb_2_hsv@HSV 002E                                 _batteryLevel 4590  
                                 __pbssBANK0 0060                                   __pbssBANK2 0200  
                             _rgb_2_hsv$3530 00DE                               _rgb_2_hsv$3531 00E0  
                             _rgb_2_hsv$3532 00D8                            _color_writetoaddr 481E  
                               _T2CLKCONbits 0FBF                               _lostReturnHome 14BE  
                         ?_color_writetoaddr 000E                                      ?___lmul 000C  
                                    ?___wmul 000C                               ___lmul@product 0014  
              ??_color_clear_init_interrupts 0010                                  move@curMove 00E1  
                    lostReturnHome@turnSpeed 0039                          ??_color_writetoaddr 000F  
                                    _SP4BRGH 0EE6                                      _SP4BRGL 0EE5  
                 fullSpeedAhead@straightRamp 0024                        turnRight@turnDuration 0024  
                                    _SSP2ADD 0ED6                                      _SSP2BUF 0ED5  
                                 _color_read 3580                       color_writetoaddr@value 000E  
                                    _HighISR 0008                    __end_of_color_writetoaddr 483E  
                     __end_of_lostReturnHome 1B5C                                    _ADREFbits 0F58  
                         _I2C_2_Master_Start 4912                                   _initUSART4 487E  
                        i2_I2C_2_Master_Idle 4760                           _I2C_2_Master_Write 48E6  
                                    __Hparam 0000                          i2_I2C_2_Master_Stop 4926  
                                    __Lparam 0000                                  _Timer0_init 483E  
                       calibration@turnSpeed 0031                             ?_get16bitTMR0val 000C  
                                    ___aldiv 3E68                                      ___awdiv 4160  
                            lostReturnHome@i 0040                                      ___lldiv 4224  
                              ??_calibration 0035                          ?_I2C_2_Master_Start 0001  
                                    ___lwdiv 444C                          ?_I2C_2_Master_Write 0001  
                               __psmallconst 0E00                                      _ambient 004D  
                                    __pcinit 452A                                      __ramtop 0E00  
                                  ?_turnLeft 001F                            __end_of_rgb_2_hsv 2C4A  
                                    __ptext0 2C4A                                      __ptext1 1B5C  
                                    __ptext2 0E02                                      __ptext3 14BE  
                                    __ptext4 3F74                                      __ptext5 376E  
                                    __ptext6 48FE                                      __ptext7 4710  
                                    __ptext8 407C                                      __ptext9 487E  
                       ?i2_I2C_2_Master_Idle 0001                                    _T2CONbits 0FBD  
                       ?i2_I2C_2_Master_Stop 0001                             ___aldiv@dividend 0018  
                                  _T2HLTbits 0FBE                                _RxBufWriteCnt 004C  
                                    main@HSV 03DE                     __end_of_getCharFromTxBuf 47FA  
                                    main@buf 0300                                      main@red 03AA  
                       ??_I2C_2_Master_Start 000D                         ??_I2C_2_Master_Write 000D  
                       end_of_initialization 4586              ??i2_color_clear_init_interrupts 0005  
                __end_ofi2_color_writetoaddr 487E                             ADC_getval@tmpval 000C  
                          reverseOneSquare@i 0029                            ?_color_click_init 0001  
                            ?_lostReturnHome 002D                              ___lldiv@divisor 001C  
                                 _resetTimer 48FE                           ??_color_click_init 0015  
                            ___lldiv@counter 0024                             ___aldiv@quotient 0022  
                 batteryLevel@batteryQuarter 0015                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc1 0FE6                                      postinc2 0FDE  
                 batteryLevel@batteryVoltage 0014                                   main@F14640 009C  
                                 main@F14644 0252                                   main@F14646 0200  
                                 main@F14649 00EE                                   _returnHome 0E02  
                            _initDCmotorsPWM 42C8                                   ??_turnLeft 0026  
                                  _PORTFbits 0F8E                           setMotorPWM@negDuty 001E  
                      ??i2_I2C_2_Master_Idle 0001                                move@turnSpeed 00E5  
                          __end_of_turnRight 3B28                        ??i2_I2C_2_Master_Stop 0002  
                        __end_of_calibration 3318                                 _color_detect 3318  
                                returnHome@i 0040                                    _TRISAbits 0F81  
                         setMotorPWM@posDuty 001D                                    _TRISBbits 0F82  
                                  _TRISCbits 0F83                                    _TRISDbits 0F84  
                                  _TRISEbits 0F85                                    _TRISFbits 0F86  
                                  _TRISGbits 0F87                                    _TRISHbits 0F88  
                           white_Light@state 000C                                 ??_Buggy_init 000C  
                           fullSpeedAhead@mL 001F                             fullSpeedAhead@mR 0021  
                                ?_color_read 0010                     color_writetoaddr@address 000F  
                    ??_I2C_2_Master_RepStart 000D                     __end_of_reverseOneSquare 3954  
                              stop@cur_power 0029                                  _CCP1CONbits 0FAB  
                     color_calibration@green 0106                                 _EUSART4RXbuf 00C4  
                        returnHome@turnSpeed 0039                                 _EUSART4TXbuf 0060  
                                _CCP2CONbits 0FA7                       color_calibration@white 0112  
                                _CCP3CONbits 0F26                   lostReturnHome@straightRamp 0038  
                 lostReturnHome@straightTime 0033                                  ?_initUSART4 0001  
                                 main@orange 03C8                                  _CCP4CONbits 0F22  
                                 main@motorL 03F6                                   main@motorR 03EC  
                                 main@yellow 03BC                               color_read@RGBC 0010  
                             _fullSpeedAhead 407C                               __end_of___lmul 452A  
                       turnLeft@turnDuration 0024                               __end_of___wmul 47AE  
                         __end_of_Buggy_init 468E                                __pidataCOMRAM 493E  
                        start_initialization 452A                                  __end_of_max 46E6  
                                __end_of_min 46BA                                _TxBufWriteCnt 004A  
                 lostReturnHome@turnDuration 003A                                   rgb_2_hsv@b 00EC  
                                 rgb_2_hsv@g 00EA                                   rgb_2_hsv@r 00E2  
                           move@moveSequence 00DD        __end_ofi2_color_clear_init_interrupts 444C  
              i2_color_clear_init_interrupts 43D2                                  ?_resetTimer 0001  
                    __end_of_initDCmotorsPWM 4358                       __end_of_fullSpeedAhead 4160  
                         turnRight@cur_power 002B                                     ??___lmul 0014  
                              rgb_2_hsv@RGBC 0026                                     ??___wmul 0010  
                             _putCharToRxBuf 47AE                                  __pdataBANK0 00EE  
                              rgb_2_hsv@diff 00E6                i2I2C_2_Master_Write@data_byte 0002  
                                _calibration 307E                                rgb_2_hsv@cmax 00E4  
                              rgb_2_hsv@cmin 00DC                                  ?_returnHome 002D  
               reverseOneSquare@straightRamp 0025                 __end_ofi2_I2C_2_Master_Start 493A  
               __end_ofi2_I2C_2_Master_Write 48FE                            turnLeft@cur_power 002B  
                                __pbssCOMRAM 0047                                __pcstackBANK0 00D8  
                              __pcstackBANK1 0100                                __pcstackBANK3 0300  
                                   ?_HighISR 0001                             stop@straightRamp 0023  
                           ___lwdiv@dividend 0012                                 ?_Timer0_init 0001  
                     __end_of_putCharToRxBuf 47D4                              ?_fullSpeedAhead 001F  
                                  __pintcode 0008                                     ?___aldiv 0018  
                         turnRight@turnSpeed 0023                                     ?___awdiv 000C  
                                   ?___lldiv 0018                                     ?___lwdiv 0012  
                       I2C_2_Master_Read@ack 000E                         I2C_2_Master_Read@tmp 000F  
                                __smallconst 0E00                             main@moveSequence 037E  
                          _I2C_2_Master_Idle 4738                            _I2C_2_Master_Init 46E6  
                          _I2C_2_Master_Read 45DE                            turnLeft@turnSpeed 0023  
                          _I2C_2_Master_Stop 4908                                    _rgb_2_hsv 276E  
                               _RxBufReadCnt 004B                                     _ADC_init 489C  
                         ?_I2C_2_Master_Idle 0001                           ?_I2C_2_Master_Init 0001  
                         ?_I2C_2_Master_Read 0001                                ??_setMotorPWM 001B  
                         ?_I2C_2_Master_Stop 0001                             ___lwdiv@quotient 0017  
                   initDCmotorsPWM@PWMperiod 000C                            ?_getCharFromTxBuf 0001  
                           ??_lostReturnHome 003C                           ??_getCharFromTxBuf 0001  
                          move@straightSpeed 00E2                              ___aldiv@divisor 001C  
                        ??_I2C_2_Master_Idle 000C                              ___aldiv@counter 0020  
                        ??_I2C_2_Master_Init 000C                          ??_I2C_2_Master_Read 000D  
                             ___wmul@product 0010                                     _LATAbits 0F79  
                        ??_I2C_2_Master_Stop 000D                                     _LATCbits 0F7B  
                              _isDataInTxBuf 48CE                                     _LATDbits 0F7C  
                                   _LATEbits 0F7D                                     _LATFbits 0F7E  
                                   _LATGbits 0F7F                                     _LATHbits 0F80  
                                   _IPR0bits 0E1F                                     _PIE0bits 0E29  
                                   _PIE4bits 0E2D                                     i2u130_40 48E4  
                                   i2u310_40 003C                                     i2u310_41 0038  
                                turnRight@mL 001F                                     i2u311_40 0050  
                                   i2u311_41 004C                                  turnRight@mR 0021  
                                   i2u312_40 0066                                     i2u312_41 0062  
                                   i2u129_40 48E2                                     i2u313_40 0082  
                                   i2u129_41 48DC                                     i2u313_41 007E  
                                   i2u309_40 0022                                     i2u309_41 001E  
                                   i2u167_40 4770                                     i2u167_41 476C  
                                   _PIR0bits 0E33                                     i2u168_40 4786  
                                   i2u168_41 4782                                     i2u286_40 47C0  
                                   i2u286_41 47BC                                     i2u287_40 47E4  
                                   i2u287_41 47E0                                     _PIR4bits 0E37  
                                   i2u552_47 440E                              ?_putCharToRxBuf 0001  
                           ?_initDCmotorsPWM 000C                  fullSpeedAhead@straightSpeed 0023  
        __end_of_color_clear_init_interrupts 43D2               ?i2_color_clear_init_interrupts 0001  
                _color_clear_init_interrupts 4358                                     _SSP2CON2 0EDA  
                                   _SSP2STAT 0ED8                                 move@turnRamp 00E7  
                                 _ADCON0bits 0F60                    __end_of_I2C_2_Master_Idle 4760  
                      color_calibration@RGBC 0100                    __end_of_I2C_2_Master_Init 4710  
                  __end_of_I2C_2_Master_Read 4620                            ___wmul@multiplier 000C  
                  __end_of_I2C_2_Master_Stop 4912     color_clear_init_interrupts@low_threshold 0013  
 i2color_clear_init_interrupts@low_threshold 0008                                 setMotorPWM@m 0019  
                I2C_2_Master_Write@data_byte 000D                        color_calibration@blue 0108  
                         returnHome@turnRamp 003B                                    main@color 03DA  
                      color_calibration@pink 010C                                    main@green 03B0  
                                  main@white 03D4                                   ?_rgb_2_hsv 0026  
                               _TxBufReadCnt 0049                     i2color_writetoaddr@value 0003  
                                  _turnRight 3954                    returnHome@reverseDuration 0037  
                               ??_color_read 0012                            ___lmul@multiplier 000C  
                                  copy_data0 453E                               ?_isDataInTxBuf 0001  
              __end_of_I2C_2_Master_RepStart 4926                            ?_reverseOneSquare 001F  
                        __end_of_setMotorPWM 3E68                                 ??_initUSART4 000C  
                       i2_I2C_2_Master_Start 4930              reverseOneSquare@reverseDuration 0024  
                       i2_I2C_2_Master_Write 48F2                           ??_reverseOneSquare 0026  
                                   __Hrparam 0000                                   _ADC_getval 48B6  
                           main@testSequence 037A                                     __Lrparam 0000  
                              ??_white_Light 000C                  __end_ofi2_I2C_2_Master_Idle 4788  
                __end_ofi2_I2C_2_Master_Stop 4930                             lostReturnHome@mL 002D  
                           lostReturnHome@mR 002F                           __end_of_color_read 376E  
                                 _ANSELBbits 0E9A                                   _ANSELDbits 0EA7  
                                 _ANSELFbits 0EB4                                   _T0CON0bits 0FD5  
                                 _T0CON1bits 0FD6                            _color_calibration 21B2  
              reverseOneSquare@straightSpeed 0023                              ___lwdiv@divisor 0014  
                     returnHome@moveSequence 0031                           __end_of_initUSART4 489C  
                            ___lwdiv@counter 0016                            turnRight@turnRamp 0025  
                                 ?_turnRight 001F                                     __ptext10 42C8  
                                   __ptext11 3318                                     __ptext20 46BA  
                                   __ptext12 4620                                     __ptext21 44C0  
                                   __ptext13 4358                                     __ptext30 4738  
                                   __ptext22 4224                                     __ptext14 481E  
                                   __ptext31 307E                                     __ptext23 3E68  
                                   __ptext15 46E6                                     __ptext40 48B6  
                                   __ptext32 3954                                     __ptext24 3580  
                                   __ptext16 21B2                                     __ptext41 483E  
                                   __ptext33 3B28                                     __ptext25 48E6  
                                   __ptext17 47FA                                     __ptext50 47AE  
                                   __ptext42 4658                                     __ptext34 3CFC  
                                   __ptext26 4908                                     __ptext18 276E  
                                   __ptext51 48CE                                     __ptext35 4788  
                                   __ptext27 4912                                     __ptext19 468E  
                                   __ptext52 47D4                                     __ptext44 43D2  
                                   __ptext36 444C                                     __ptext28 491C  
                                   __ptext45 485E                                     __ptext37 4590  
                                   __ptext29 45DE                                     __ptext46 48F2  
                                   __ptext38 4160                                     __ptext47 4926  
                                   __ptext39 489C                                     __ptext48 4930  
                                   __ptext49 4760                                    move@color 00DC  
                         ?_color_calibration 0100                                ?_batteryLevel 0001  
                               _SSP2CON1bits 0ED9                                 _SSP2CON2bits 0EDA  
                           turnLeft@turnRamp 0025                                   turnLeft@mL 001F  
                                 turnLeft@mR 0021                          ??_color_calibration 003C  
                      ?i2_I2C_2_Master_Start 0001                             move@straightRamp 00E4  
                      ?i2_I2C_2_Master_Write 0001                             move@straightTime 00DF  
                          returnHome@curMove 0035                                 ??_resetTimer 000C  
                                 turnRight@i 0029                                     isa$xinst 0000  
                                 _RC4STAbits 0EE7                                     main@RGBC 03E4  
                                   int$flags 004F                         color_calibration@HSV 0102  
                               ?_calibration 002D                                     main@blue 03B6  
                       color_calibration@red 0104                                 ??_returnHome 003C  
                                   main@pink 03C2                                     _turnLeft 3B28  
                    fullSpeedAhead@cur_power 002A                          __end_of_white_Light 481E  
                  __end_of_color_calibration 276E                                   _INTCONbits 0FF2  
                  reverseOneSquare@cur_power 002B                                  ??_rgb_2_hsv 0030  
                         reverseOneSquare@mL 001F                           reverseOneSquare@mR 0021  
                         __end_of_resetTimer 4908                             move@turnDuration 00E6  
                             ??_batteryLevel 0014                                  _setMotorPWM 3CFC  
                          ??_get16bitTMR0val 000E                              ??_isDataInTxBuf 0001  
                                   intlevel2 0000                             ___lldiv@dividend 0018  
                           ??_fullSpeedAhead 0025                           __end_of_returnHome 14BE  
                                  turnLeft@i 0029                                  ?_ADC_getval 0001  
                          main@straightSpeed 03A7                             _color_click_init 4620  
                      color_detect@lightblue 0036                                   _SSP2DATPPS 0E1D  
                           ___lldiv@quotient 0020                                   _SSP2CLKPPS 0E1C  
                               ___aldiv@sign 0021                                  ??_turnRight 0026  
                           main@straightRamp 03DC                             main@straightTime 0328  
                                 _TX4STAbits 0EE8                       ??i2_I2C_2_Master_Start 0002  
                     ??i2_I2C_2_Master_Write 0002                             ??_putCharToRxBuf 0001  
                               returnHome@mL 002D                                 returnHome@mR 002F  
