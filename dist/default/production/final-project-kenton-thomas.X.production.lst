

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 05 14:27:07 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Generated 21/07/2023 GMT
    57                           ; 
    58                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F67K40 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     _RC4STAbits	set	3815
    91   000000                     _SP4BRGH	set	3814
    92   000000                     _SP4BRGL	set	3813
    93   000000                     _TX4STAbits	set	3816
    94   000000                     _BAUD4CONbits	set	3817
    95   000000                     _TX4REG	set	3812
    96   000000                     _TRISEbits	set	3973
    97   000000                     _TRISGbits	set	3975
    98   000000                     _LATFbits	set	3966
    99   000000                     _TRISFbits	set	3974
   100   000000                     _TRISHbits	set	3976
   101   000000                     _LATEbits	set	3965
   102   000000                     _LATGbits	set	3967
   103   000000                     _SSP2CON2bits	set	3802
   104   000000                     _RX4PPS	set	3605
   105   000000                     _SSP2CLKPPS	set	3612
   106   000000                     _SSP2DATPPS	set	3613
   107   000000                     _ANSELDbits	set	3751
   108   000000                     _SSP2ADD	set	3798
   109   000000                     _SSP2CON1bits	set	3801
   110   000000                     _LATAbits	set	3961
   111   000000                     _LATDbits	set	3964
   112   000000                     _LATHbits	set	3968
   113   000000                     _TRISBbits	set	3970
   114   000000                     _TRISAbits	set	3969
   115   000000                     _TRISDbits	set	3972
   116   000000                     _PORTFbits	set	3982
   117   000000                     _INTCONbits	set	4082
   118   000000                     _RC4REG	set	3811
   119   000000                     _SSP2CON2	set	3802
   120   000000                     _SSP2STAT	set	3800
   121   000000                     _ANSELFbits	set	3764
   122   000000                     _SSP2BUF	set	3797
   123   000000                     _IPR0bits	set	3615
   124   000000                     _PIE0bits	set	3625
   125   000000                     _RD5PPS	set	3695
   126   000000                     _ANSELBbits	set	3738
   127   000000                     _RD6PPS	set	3696
   128   000000                     _PIE4bits	set	3629
   129   000000                     _PIR0bits	set	3635
   130   000000                     _PIR4bits	set	3639
   131   000000                     _RC0PPS	set	3682
   132                           
   133                           	psect	smallconst
   134   000E00                     __psmallconst:
   135                           	callstack 0
   136   000E00  00                 	db	0
   137   000E01                     STR_1:
   138   000E01  72                 	db	114	;'r'
   139   000E02  3D                 	db	61	;'='
   140   000E03  25                 	db	37
   141   000E04  64                 	db	100	;'d'
   142   000E05  20                 	db	32
   143   000E06  67                 	db	103	;'g'
   144   000E07  3D                 	db	61	;'='
   145   000E08  25                 	db	37
   146   000E09  64                 	db	100	;'d'
   147   000E0A  20                 	db	32
   148   000E0B  62                 	db	98	;'b'
   149   000E0C  3D                 	db	61	;'='
   150   000E0D  25                 	db	37
   151   000E0E  64                 	db	100	;'d'
   152   000E0F  20                 	db	32
   153   000E10  63                 	db	99	;'c'
   154   000E11  3D                 	db	61	;'='
   155   000E12  25                 	db	37
   156   000E13  64                 	db	100	;'d'
   157   000E14  20                 	db	32
   158   000E15  20                 	db	32
   159   000E16  20                 	db	32
   160   000E17  6E                 	db	110	;'n'
   161   000E18  3A                 	db	58	;':'
   162   000E19  20                 	db	32
   163   000E1A  72                 	db	114	;'r'
   164   000E1B  3D                 	db	61	;'='
   165   000E1C  25                 	db	37
   166   000E1D  64                 	db	100	;'d'
   167   000E1E  20                 	db	32
   168   000E1F  67                 	db	103	;'g'
   169   000E20  3D                 	db	61	;'='
   170   000E21  25                 	db	37
   171   000E22  64                 	db	100	;'d'
   172   000E23  20                 	db	32
   173   000E24  62                 	db	98	;'b'
   174   000E25  3D                 	db	61	;'='
   175   000E26  25                 	db	37
   176   000E27  64                 	db	100	;'d'
   177   000E28  0D                 	db	13
   178   000E29  0A                 	db	10
   179   000E2A  00                 	db	0
   180   000E2B  00                 	db	0	; dummy byte at the end
   181   000000                     
   182                           ; #config settings
   183                           
   184                           	psect	cinit
   185   001AE2                     __pcinit:
   186                           	callstack 0
   187   001AE2                     start_initialization:
   188                           	callstack 0
   189   001AE2                     __initialization:
   190                           	callstack 0
   191                           
   192                           ; Clear objects allocated to BANK1 (40 bytes)
   193   001AE2  EE01  F000         	lfsr	0,__pbssBANK1
   194   001AE6  0E28               	movlw	40
   195   001AE8                     clear_0:
   196   001AE8  6AEE               	clrf	postinc0,c
   197   001AEA  06E8               	decf	wreg,f,c
   198   001AEC  E1FD               	bnz	clear_0
   199                           
   200                           ; Clear objects allocated to BANK0 (92 bytes)
   201   001AEE  EE00  F060         	lfsr	0,__pbssBANK0
   202   001AF2  0E5C               	movlw	92
   203   001AF4                     clear_1:
   204   001AF4  6AEE               	clrf	postinc0,c
   205   001AF6  06E8               	decf	wreg,f,c
   206   001AF8  E1FD               	bnz	clear_1
   207                           
   208                           ; Clear objects allocated to COMRAM (29 bytes)
   209   001AFA  EE00  F03D         	lfsr	0,__pbssCOMRAM
   210   001AFE  0E1D               	movlw	29
   211   001B00                     clear_2:
   212   001B00  6AEE               	clrf	postinc0,c
   213   001B02  06E8               	decf	wreg,f,c
   214   001B04  E1FD               	bnz	clear_2
   215   001B06                     end_of_initialization:
   216                           	callstack 0
   217   001B06                     __end_of__initialization:
   218                           	callstack 0
   219   001B06  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   220   001B08  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   221   001B0A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   222   001B0C  6EF8               	movwf	tblptru,c
   223   001B0E  0100               	movlb	0
   224   001B10  EFC2  F00A         	goto	_main	;jump to C main() function
   225                           
   226                           	psect	bssCOMRAM
   227   00003D                     __pbssCOMRAM:
   228                           	callstack 0
   229   00003D                     _EUSART4RXbuf:
   230                           	callstack 0
   231   00003D                     	ds	20
   232   000051                     _width:
   233                           	callstack 0
   234   000051                     	ds	2
   235   000053                     _prec:
   236                           	callstack 0
   237   000053                     	ds	2
   238   000055                     _flags:
   239                           	callstack 0
   240   000055                     	ds	1
   241   000056                     _TxBufReadCnt:
   242                           	callstack 0
   243   000056                     	ds	1
   244   000057                     _TxBufWriteCnt:
   245                           	callstack 0
   246   000057                     	ds	1
   247   000058                     _RxBufReadCnt:
   248                           	callstack 0
   249   000058                     	ds	1
   250   000059                     _RxBufWriteCnt:
   251                           	callstack 0
   252   000059                     	ds	1
   253                           
   254                           	psect	bssBANK0
   255   000060                     __pbssBANK0:
   256                           	callstack 0
   257   000060                     _EUSART4TXbuf:
   258                           	callstack 0
   259   000060                     	ds	60
   260   00009C                     _dbuf:
   261                           	callstack 0
   262   00009C                     	ds	32
   263                           
   264                           	psect	bssBANK1
   265   000100                     __pbssBANK1:
   266                           	callstack 0
   267   000100                     	ds	40
   268                           
   269                           	psect	cstackBANK0
   270   0000BC                     __pcstackBANK0:
   271                           	callstack 0
   272   0000BC                     main@buf:
   273                           	callstack 0
   274                           
   275                           ; 40 bytes @ 0x0
   276   0000BC                     	ds	40
   277   0000E4                     main@RGBC_n:
   278                           	callstack 0
   279                           
   280                           ; 8 bytes @ 0x28
   281   0000E4                     	ds	8
   282   0000EC                     main@RGBC:
   283                           	callstack 0
   284                           
   285                           ; 8 bytes @ 0x30
   286   0000EC                     	ds	8
   287                           
   288                           	psect	cstackCOMRAM
   289   000001                     __pcstackCOMRAM:
   290                           	callstack 0
   291   000001                     ??_getCharFromTxBuf:
   292   000001                     ??i2_I2C_2_Master_Idle:
   293   000001                     putCharToRxBuf@byte:
   294                           	callstack 0
   295   000001                     
   296                           ; 1 bytes @ 0x0
   297   000001                     	ds	1
   298   000002                     i2I2C_2_Master_Write@data_byte:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x1
   302   000002                     	ds	1
   303   000003                     ??_HighISR:
   304                           
   305                           ; 1 bytes @ 0x2
   306   000003                     	ds	2
   307   000005                     ??_I2C_2_Master_Idle:
   308   000005                     ?___awdiv:
   309                           	callstack 0
   310   000005                     ?___awmod:
   311                           	callstack 0
   312   000005                     ?___lmul:
   313                           	callstack 0
   314   000005                     white_Light@state:
   315                           	callstack 0
   316   000005                     putCharToTxBuf@byte:
   317                           	callstack 0
   318   000005                     ___awdiv@dividend:
   319                           	callstack 0
   320   000005                     ___awmod@dividend:
   321                           	callstack 0
   322   000005                     fputc@c:
   323                           	callstack 0
   324   000005                     ___lmul@multiplier:
   325                           	callstack 0
   326   000005                     color_detect@RGBC_n:
   327                           	callstack 0
   328                           
   329                           ; 8 bytes @ 0x4
   330   000005                     	ds	1
   331   000006                     ??_I2C_2_Master_Read:
   332   000006                     I2C_2_Master_Write@data_byte:
   333                           	callstack 0
   334   000006                     TxBufferedString@string:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x5
   338   000006                     	ds	1
   339   000007                     color_writetoaddr@value:
   340                           	callstack 0
   341   000007                     I2C_2_Master_Read@ack:
   342                           	callstack 0
   343   000007                     fputc@fp:
   344                           	callstack 0
   345   000007                     ___awdiv@divisor:
   346                           	callstack 0
   347   000007                     ___awmod@divisor:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x6
   351   000007                     	ds	1
   352   000008                     ??_fputc:
   353   000008                     color_writetoaddr@address:
   354                           	callstack 0
   355   000008                     I2C_2_Master_Read@tmp:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x7
   359   000008                     	ds	1
   360   000009                     ??_color_click_init:
   361   000009                     color_read@RGBC:
   362                           	callstack 0
   363   000009                     ___awdiv@counter:
   364                           	callstack 0
   365   000009                     ___awmod@counter:
   366                           	callstack 0
   367   000009                     ___lmul@multiplicand:
   368                           	callstack 0
   369                           
   370                           ; 4 bytes @ 0x8
   371   000009                     	ds	1
   372   00000A                     ??_color_read:
   373   00000A                     ___awdiv@sign:
   374                           	callstack 0
   375   00000A                     ___awmod@sign:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x9
   379   00000A                     	ds	1
   380   00000B                     ?_abs:
   381                           	callstack 0
   382   00000B                     ___awdiv@quotient:
   383                           	callstack 0
   384   00000B                     abs@a:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0xA
   388   00000B                     	ds	2
   389   00000D                     ??_abs:
   390   00000D                     color_detect@color:
   391                           	callstack 0
   392   00000D                     ___lmul@product:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0xC
   396   00000D                     	ds	2
   397   00000F                     vfpfcnvrt@fp:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0xE
   401   00000F                     	ds	1
   402   000010                     vfpfcnvrt@fmt:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0xF
   406   000010                     	ds	1
   407   000011                     ?___aldiv:
   408                           	callstack 0
   409   000011                     vfpfcnvrt@ap:
   410                           	callstack 0
   411   000011                     ___aldiv@dividend:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x10
   415   000011                     	ds	1
   416   000012                     ??_vfpfcnvrt:
   417                           
   418                           ; 1 bytes @ 0x11
   419   000012                     	ds	1
   420   000013                     vfpfcnvrt@done:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x12
   424   000013                     	ds	1
   425   000014                     vfpfcnvrt@cp:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x13
   429   000014                     	ds	1
   430   000015                     ___aldiv@divisor:
   431                           	callstack 0
   432   000015                     vfpfcnvrt@convarg:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x14
   436   000015                     	ds	4
   437   000019                     ___aldiv@counter:
   438                           	callstack 0
   439   000019                     vfpfcnvrt@c:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x18
   443   000019                     	ds	1
   444   00001A                     ?_vfprintf:
   445                           	callstack 0
   446   00001A                     ___aldiv@sign:
   447                           	callstack 0
   448   00001A                     vfprintf@fp:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x19
   452   00001A                     	ds	1
   453   00001B                     vfprintf@fmt:
   454                           	callstack 0
   455   00001B                     ___aldiv@quotient:
   456                           	callstack 0
   457                           
   458                           ; 4 bytes @ 0x1A
   459   00001B                     	ds	1
   460   00001C                     vfprintf@ap:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x1B
   464   00001C                     	ds	1
   465   00001D                     vfprintf@cfmt:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x1C
   469   00001D                     	ds	1
   470   00001E                     ?_sprintf:
   471                           	callstack 0
   472   00001E                     sprintf@s:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x1D
   476   00001E                     	ds	1
   477   00001F                     sprintf@fmt:
   478                           	callstack 0
   479   00001F                     color_normalise@RGBC:
   480                           	callstack 0
   481                           
   482                           ; 8 bytes @ 0x1E
   483   00001F                     	ds	8
   484   000027                     color_normalise@RGBC_n:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x26
   488   000027                     	ds	1
   489   000028                     ??_color_normalise:
   490                           
   491                           ; 1 bytes @ 0x27
   492   000028                     	ds	6
   493   00002E                     sprintf@ap:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x2D
   497   00002E                     	ds	1
   498   00002F                     sprintf@f:
   499                           	callstack 0
   500                           
   501                           ; 12 bytes @ 0x2E
   502   00002F                     	ds	12
   503   00003B                     ??_main:
   504                           
   505                           ; 1 bytes @ 0x3A
   506   00003B                     	ds	2
   507                           
   508 ;;
   509 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   510 ;;
   511 ;; *************** function _main *****************
   512 ;; Defined at:
   513 ;;		line 22 in file "main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;  buf            40    0[BANK0 ] unsigned char [40]
   518 ;;  RGBC            8   48[BANK0 ] struct RGBC_val
   519 ;;  RGBC_n          8   40[BANK0 ] struct RGBC_val
   520 ;;  color           1    0        unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   531 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   532 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   533 ;;      Totals:         2      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   534 ;;Total ram usage:       58 bytes
   535 ;; Hardware stack levels required when called: 8
   536 ;; This function calls:
   537 ;;		_Buggy_init
   538 ;;		_Interrupts_init
   539 ;;		_TxBufferedString
   540 ;;		_color_click_init
   541 ;;		_color_detect
   542 ;;		_color_normalise
   543 ;;		_color_read
   544 ;;		_initUSART4
   545 ;;		_sendTxBuf
   546 ;;		_sprintf
   547 ;;		_white_Light
   548 ;; This function is called by:
   549 ;;		Startup code after reset
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text0
   554   001584                     __ptext0:
   555                           	callstack 0
   556   001584                     _main:
   557                           	callstack 23
   558   001584                     
   559                           ;main.c: 23:     Buggy_init();
   560   001584  EC22  F00D         	call	_Buggy_init	;wreg free
   561   001588                     
   562                           ;main.c: 24:     color_click_init();
   563   001588  EC7E  F00C         	call	_color_click_init	;wreg free
   564   00158C                     
   565                           ;main.c: 25:     initUSART4();
   566   00158C  EC22  F00E         	call	_initUSART4	;wreg free
   567   001590                     
   568                           ;main.c: 26:     Interrupts_init();
   569   001590  EC56  F00E         	call	_Interrupts_init	;wreg free
   570   001594                     
   571                           ;main.c: 27:     unsigned char color;;main.c: 28:     char buf[40] = {0};
   572   001594  EE20  F0BC         	lfsr	2,main@buf
   573   001598  0E27               	movlw	39
   574   00159A                     u1431:
   575   00159A  6ADE               	clrf	postinc2,c
   576   00159C  06E8               	decf	wreg,f,c
   577   00159E  E2FD               	bc	u1431
   578   0015A0                     
   579                           ;main.c: 30:     struct RGBC_val RGBC, RGBC_n;;main.c: 33:     LATHbits.LATH1=LATDbits.L
      +                          ATD3=1;
   580   0015A0  867C               	bsf	124,3,c	;volatile
   581   0015A2  8280               	bsf	128,1,c	;volatile
   582   0015A4                     
   583                           ;main.c: 36:     white_Light(1);
   584   0015A4  0E01               	movlw	1
   585   0015A6  EC00  F00E         	call	_white_Light
   586   0015AA                     l50:
   587   0015AA  B48E               	btfsc	142,2,c	;volatile
   588   0015AC  EFDA  F00A         	goto	u1441
   589   0015B0  EFDC  F00A         	goto	u1440
   590   0015B4                     u1441:
   591   0015B4  EFD5  F00A         	goto	l50
   592   0015B8                     u1440:
   593   0015B8                     
   594                           ;main.c: 41:         color_read(&RGBC);
   595   0015B8  0EEC               	movlw	low main@RGBC
   596   0015BA  6E09               	movwf	color_read@RGBC^0,c
   597   0015BC  EC16  F007         	call	_color_read	;wreg free
   598   0015C0                     
   599                           ;main.c: 42:         color_normalise(RGBC, &RGBC_n);
   600   0015C0  EE20  F0EC         	lfsr	2,main@RGBC
   601   0015C4  EE00  F01F         	lfsr	0,color_normalise@RGBC
   602   0015C8  0E07               	movlw	7
   603   0015CA                     u1451:
   604   0015CA  CFDB FFEB          	movff	plusw2,plusw0
   605   0015CE  06E8               	decf	wreg,f,c
   606   0015D0  E2FC               	bc	u1451
   607   0015D2  0EE4               	movlw	low main@RGBC_n
   608   0015D4  6E27               	movwf	color_normalise@RGBC_n^0,c
   609   0015D6  EC9B  F009         	call	_color_normalise	;wreg free
   610   0015DA  EE20  F0E4         	lfsr	2,main@RGBC_n
   611   0015DE  EE00  F005         	lfsr	0,color_detect@RGBC_n
   612   0015E2  0E07               	movlw	7
   613   0015E4                     u1461:
   614   0015E4  CFDB FFEB          	movff	plusw2,plusw0
   615   0015E8  06E8               	decf	wreg,f,c
   616   0015EA  E2FC               	bc	u1461
   617   0015EC  ECDD  F008         	call	_color_detect	;wreg free
   618   0015F0                     
   619                           ;main.c: 45:         sprintf(buf,"r=%d g=%d b=%d c=%d   n: r=%d g=%d b=%d\r\n",RGBC.R,RG
      +                          BC.G,RGBC.B,RGBC.C, RGBC_n.R,RGBC_n.G,RGBC_n.B);
   620   0015F0  0EBC               	movlw	low main@buf
   621   0015F2  6E1E               	movwf	sprintf@s^0,c
   622   0015F4  0E01               	movlw	low STR_1
   623   0015F6  6E1F               	movwf	sprintf@fmt^0,c
   624   0015F8  C0EC  F020         	movff	main@RGBC,?_sprintf+2
   625   0015FC  C0ED  F021         	movff	main@RGBC+1,?_sprintf+3
   626   001600  C0EE  F022         	movff	main@RGBC+2,?_sprintf+4
   627   001604  C0EF  F023         	movff	main@RGBC+3,?_sprintf+5
   628   001608  C0F0  F024         	movff	main@RGBC+4,?_sprintf+6
   629   00160C  C0F1  F025         	movff	main@RGBC+5,?_sprintf+7
   630   001610  C0F2  F026         	movff	main@RGBC+6,?_sprintf+8
   631   001614  C0F3  F027         	movff	main@RGBC+7,?_sprintf+9
   632   001618  C0E4  F028         	movff	main@RGBC_n,?_sprintf+10
   633   00161C  C0E5  F029         	movff	main@RGBC_n+1,?_sprintf+11
   634   001620  C0E6  F02A         	movff	main@RGBC_n+2,?_sprintf+12
   635   001624  C0E7  F02B         	movff	main@RGBC_n+3,?_sprintf+13
   636   001628  C0E8  F02C         	movff	main@RGBC_n+4,?_sprintf+14
   637   00162C  C0E9  F02D         	movff	main@RGBC_n+5,?_sprintf+15
   638   001630  EC3D  F00D         	call	_sprintf	;wreg free
   639   001634                     
   640                           ;main.c: 46:         sendTxBuf();
   641   001634  EC31  F00E         	call	_sendTxBuf	;wreg free
   642   001638                     
   643                           ;main.c: 47:         TxBufferedString(buf);
   644   001638  0EBC               	movlw	low main@buf
   645   00163A  6E06               	movwf	TxBufferedString@string^0,c
   646   00163C  6A07               	clrf	(TxBufferedString@string+1)^0,c
   647   00163E  ECB1  F00C         	call	_TxBufferedString	;wreg free
   648   001642                     
   649                           ;main.c: 48:         sendTxBuf();
   650   001642  EC31  F00E         	call	_sendTxBuf	;wreg free
   651   001646                     
   652                           ;main.c: 49:         TxBufferedString("");
   653   001646  0E2A               	movlw	low (STR_1+41)
   654   001648  6E06               	movwf	TxBufferedString@string^0,c
   655   00164A  5006               	movf	TxBufferedString@string^0,w,c
   656   00164C  A4D8               	btfss	status,2,c
   657   00164E  0E0E               	movlw	high __smallconst
   658   001650  6E07               	movwf	(TxBufferedString@string+1)^0,c
   659   001652  ECB1  F00C         	call	_TxBufferedString	;wreg free
   660   001656                     
   661                           ;main.c: 50:         _delay((unsigned long)((300)*(64000000/4000.0)));
   662   001656  0E19               	movlw	25
   663   001658  6E3C               	movwf	(??_main+1)^0,c
   664   00165A  0E5A               	movlw	90
   665   00165C  6E3B               	movwf	??_main^0,c
   666   00165E  0EB2               	movlw	178
   667   001660                     u1517:
   668   001660  2EE8               	decfsz	wreg,f,c
   669   001662  D7FE               	bra	u1517
   670   001664  2E3B               	decfsz	??_main^0,f,c
   671   001666  D7FC               	bra	u1517
   672   001668  2E3C               	decfsz	(??_main+1)^0,f,c
   673   00166A  D7FA               	bra	u1517
   674   00166C  EFD5  F00A         	goto	l50
   675   001670  EF46  F000         	goto	start
   676   001674                     __end_of_main:
   677                           	callstack 0
   678                           
   679 ;; *************** function _white_Light *****************
   680 ;; Defined at:
   681 ;;		line 40 in file "color.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  state           1    wreg     unsigned char 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  state           1    4[COMRAM] unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, status,2
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   699 ;;Total ram usage:        1 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; Hardware stack levels required when called: 3
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text1
   710   001C00                     __ptext1:
   711                           	callstack 0
   712   001C00                     _white_Light:
   713                           	callstack 27
   714                           
   715                           ;incstack = 0
   716                           ;white_Light@state stored from wreg
   717   001C00  6E05               	movwf	white_Light@state^0,c
   718   001C02                     
   719                           ;color.c: 40: void white_Light(char state);color.c: 41: {;color.c: 42:     if (state){
   720   001C02  5005               	movf	white_Light@state^0,w,c
   721   001C04  B4D8               	btfsc	status,2,c
   722   001C06  EF07  F00E         	goto	u1231
   723   001C0A  EF09  F00E         	goto	u1230
   724   001C0E                     u1231:
   725   001C0E  EF0E  F00E         	goto	l86
   726   001C12                     u1230:
   727   001C12                     
   728                           ;color.c: 43:         LATGbits.LATG0 = 1;
   729   001C12  807F               	bsf	127,0,c	;volatile
   730                           
   731                           ;color.c: 44:         LATEbits.LATE7 = 1;
   732   001C14  8E7D               	bsf	125,7,c	;volatile
   733                           
   734                           ;color.c: 45:         LATAbits.LATA3 = 1;
   735   001C16  8679               	bsf	121,3,c	;volatile
   736                           
   737                           ;color.c: 46:     }
   738   001C18  EF11  F00E         	goto	l88
   739   001C1C                     l86:
   740                           
   741                           ;color.c: 48:         LATGbits.LATG0 = 0;
   742   001C1C  907F               	bcf	127,0,c	;volatile
   743                           
   744                           ;color.c: 49:         LATEbits.LATE7 = 0;
   745   001C1E  9E7D               	bcf	125,7,c	;volatile
   746                           
   747                           ;color.c: 50:         LATAbits.LATA3 = 0;
   748   001C20  9679               	bcf	121,3,c	;volatile
   749   001C22                     l88:
   750   001C22  0012               	return		;funcret
   751   001C24                     __end_of_white_Light:
   752                           	callstack 0
   753                           
   754 ;; *************** function _sprintf *****************
   755 ;; Defined at:
   756 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;  s               1   29[COMRAM] PTR unsigned char 
   759 ;;		 -> main@buf(40), 
   760 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
   761 ;;		 -> STR_1(42), 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  f              12   46[COMRAM] struct _IO_FILE
   764 ;;  ret             2    0        int 
   765 ;;  ap              1   45[COMRAM] PTR void [1]
   766 ;;		 -> ?_sprintf(2), 
   767 ;; Return value:  Size  Location     Type
   768 ;;                  2   29[COMRAM] int 
   769 ;; Registers used:
   770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   776 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   777 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   779 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   780 ;;Total ram usage:       29 bytes
   781 ;; Hardware stack levels used: 1
   782 ;; Hardware stack levels required when called: 7
   783 ;; This function calls:
   784 ;;		_vfprintf
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text2
   791   001A7A                     __ptext2:
   792                           	callstack 0
   793   001A7A                     _sprintf:
   794                           	callstack 23
   795   001A7A  0E20               	movlw	low (?_sprintf+2)
   796   001A7C  6E2E               	movwf	sprintf@ap^0,c
   797   001A7E  C01E  F02F         	movff	sprintf@s,sprintf@f
   798   001A82  0E00               	movlw	0
   799   001A84  6E33               	movwf	(sprintf@f+4)^0,c
   800   001A86  0E00               	movlw	0
   801   001A88  6E32               	movwf	(sprintf@f+3)^0,c
   802   001A8A  0E00               	movlw	0
   803   001A8C  6E3A               	movwf	(sprintf@f+11)^0,c
   804   001A8E  0E00               	movlw	0
   805   001A90  6E39               	movwf	(sprintf@f+10)^0,c
   806   001A92  0E2F               	movlw	low sprintf@f
   807   001A94  6E1A               	movwf	vfprintf@fp^0,c
   808   001A96  C01F  F01B         	movff	sprintf@fmt,vfprintf@fmt
   809   001A9A  0E2E               	movlw	low sprintf@ap
   810   001A9C  6E1C               	movwf	vfprintf@ap^0,c
   811   001A9E  EC03  F00D         	call	_vfprintf	;wreg free
   812   001AA2  501E               	movf	sprintf@s^0,w,c
   813   001AA4  2432               	addwf	(sprintf@f+3)^0,w,c
   814   001AA6  6ED9               	movwf	fsr2l,c
   815   001AA8  6ADA               	clrf	fsr2h,c
   816   001AAA  6ADF               	clrf	indf2,c
   817   001AAC  0012               	return		;funcret
   818   001AAE                     __end_of_sprintf:
   819                           	callstack 0
   820                           
   821 ;; *************** function _vfprintf *****************
   822 ;; Defined at:
   823 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  fp              1   25[COMRAM] PTR struct _IO_FILE
   826 ;;		 -> sprintf@f(12), 
   827 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
   828 ;;		 -> STR_1(42), 
   829 ;;  ap              1   27[COMRAM] PTR PTR void 
   830 ;;		 -> sprintf@ap(1), 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  cfmt            1   28[COMRAM] PTR unsigned char 
   833 ;;		 -> STR_1(42), 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  2   25[COMRAM] int 
   836 ;; Registers used:
   837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   843 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   846 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   847 ;;Total ram usage:        4 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; Hardware stack levels required when called: 6
   850 ;; This function calls:
   851 ;;		_vfpfcnvrt
   852 ;; This function is called by:
   853 ;;		_sprintf
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text3
   858   001A06                     __ptext3:
   859                           	callstack 0
   860   001A06                     _vfprintf:
   861                           	callstack 23
   862   001A06                     
   863                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   864   001A06  C01B  F01D         	movff	vfprintf@fmt,vfprintf@cfmt
   865                           
   866                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   867   001A0A  EF0F  F00D         	goto	l1845
   868   001A0E                     l1843:
   869                           
   870                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   871   001A0E  C01A  F00F         	movff	vfprintf@fp,vfpfcnvrt@fp
   872   001A12  0E1D               	movlw	low vfprintf@cfmt
   873   001A14  6E10               	movwf	vfpfcnvrt@fmt^0,c
   874   001A16  C01C  F011         	movff	vfprintf@ap,vfpfcnvrt@ap
   875   001A1A  EC01  F008         	call	_vfpfcnvrt	;wreg free
   876   001A1E                     l1845:
   877                           
   878                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   879   001A1E  C01D  FFF6         	movff	vfprintf@cfmt,tblptrl
   880   001A22                     	if	1	;There is more than 1 active tblptr byte
   881   001A22  0E0E               	movlw	high __smallconst
   882   001A24  6EF7               	movwf	tblptrh,c
   883   001A26                     	endif
   884   001A26                     	if	0	;tblptru may be non-zero
   885   001A26                     	endif
   886   001A26                     	if	0	;tblptru may be non-zero
   887   001A26                     	endif
   888   001A26  0008               	tblrd		*
   889   001A28  50F5               	movf	tablat,w,c
   890   001A2A  0900               	iorlw	0
   891   001A2C  A4D8               	btfss	status,2,c
   892   001A2E  EF1B  F00D         	goto	u1201
   893   001A32  EF1D  F00D         	goto	u1200
   894   001A36                     u1201:
   895   001A36  EF07  F00D         	goto	l1843
   896   001A3A                     u1200:
   897   001A3A                     
   898                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   899   001A3A  0E00               	movlw	0
   900   001A3C  6E1B               	movwf	(?_vfprintf+1)^0,c
   901   001A3E  0E00               	movlw	0
   902   001A40  6E1A               	movwf	?_vfprintf^0,c
   903   001A42  0012               	return		;funcret
   904   001A44                     __end_of_vfprintf:
   905                           	callstack 0
   906                           
   907 ;; *************** function _vfpfcnvrt *****************
   908 ;; Defined at:
   909 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
   912 ;;		 -> sprintf@f(12), 
   913 ;;  fmt             1   15[COMRAM] PTR PTR unsigned char 
   914 ;;		 -> vfprintf@cfmt(1), 
   915 ;;  ap              1   16[COMRAM] PTR PTR void 
   916 ;;		 -> sprintf@ap(1), 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  convarg         4   20[COMRAM] struct .
   919 ;;  c               1   24[COMRAM] unsigned char 
   920 ;;  cp              1   19[COMRAM] PTR unsigned char 
   921 ;;		 -> STR_1(42), 
   922 ;;  done            1   18[COMRAM] _Bool 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   932 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   933 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   935 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   936 ;;Total ram usage:       11 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; Hardware stack levels required when called: 5
   939 ;; This function calls:
   940 ;;		___awdiv
   941 ;;		___awmod
   942 ;;		_abs
   943 ;;		_fputc
   944 ;; This function is called by:
   945 ;;		_vfprintf
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text4
   950   001002                     __ptext4:
   951                           	callstack 0
   952   001002                     _vfpfcnvrt:
   953                           	callstack 23
   954   001002                     
   955                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   956   001002  5010               	movf	vfpfcnvrt@fmt^0,w,c
   957   001004  6ED9               	movwf	fsr2l,c
   958   001006  6ADA               	clrf	fsr2h,c
   959   001008  CFDF FFF6          	movff	indf2,tblptrl
   960   00100C                     	if	1	;There is more than 1 active tblptr byte
   961   00100C  0E0E               	movlw	high __smallconst
   962   00100E  6EF7               	movwf	tblptrh,c
   963   001010                     	endif
   964   001010                     	if	0	;tblptru may be non-zero
   965   001010                     	endif
   966   001010                     	if	0	;tblptru may be non-zero
   967   001010                     	endif
   968   001010  0008               	tblrd		*
   969   001012  50F5               	movf	tablat,w,c
   970   001014  0A25               	xorlw	37
   971   001016  A4D8               	btfss	status,2,c
   972   001018  EF10  F008         	goto	u971
   973   00101C  EF12  F008         	goto	u970
   974   001020                     u971:
   975   001020  EFCB  F008         	goto	l1737
   976   001024                     u970:
   977   001024                     
   978                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   979   001024  5010               	movf	vfpfcnvrt@fmt^0,w,c
   980   001026  6ED9               	movwf	fsr2l,c
   981   001028  6ADA               	clrf	fsr2h,c
   982   00102A  2ADF               	incf	indf2,f,c
   983   00102C                     
   984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   985   00102C  0E00               	movlw	0
   986   00102E  6E52               	movwf	(_width+1)^0,c
   987   001030  0E00               	movlw	0
   988   001032  6E51               	movwf	_width^0,c
   989   001034  C051  F055         	movff	_width,_flags
   990   001038                     
   991                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   992   001038  6853               	setf	_prec^0,c
   993   00103A  6854               	setf	(_prec+1)^0,c
   994   00103C                     
   995                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   996   00103C  5010               	movf	vfpfcnvrt@fmt^0,w,c
   997   00103E  6ED9               	movwf	fsr2l,c
   998   001040  6ADA               	clrf	fsr2h,c
   999   001042  50DF               	movf	indf2,w,c
  1000   001044  6E14               	movwf	vfpfcnvrt@cp^0,c
  1001   001046                     
  1002                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1003   001046  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1004   00104A                     	if	1	;There is more than 1 active tblptr byte
  1005   00104A  0E0E               	movlw	high __smallconst
  1006   00104C  6EF7               	movwf	tblptrh,c
  1007   00104E                     	endif
  1008   00104E                     	if	0	;tblptru may be non-zero
  1009   00104E                     	endif
  1010   00104E                     	if	0	;tblptru may be non-zero
  1011   00104E                     	endif
  1012   00104E  0008               	tblrd		*
  1013   001050  50F5               	movf	tablat,w,c
  1014   001052  0A64               	xorlw	100
  1015   001054  B4D8               	btfsc	status,2,c
  1016   001056  EF2F  F008         	goto	u981
  1017   00105A  EF31  F008         	goto	u980
  1018   00105E                     u981:
  1019   00105E  EF3F  F008         	goto	l1707
  1020   001062                     u980:
  1021   001062  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1022   001066                     	if	1	;There is more than 1 active tblptr byte
  1023   001066  0E0E               	movlw	high __smallconst
  1024   001068  6EF7               	movwf	tblptrh,c
  1025   00106A                     	endif
  1026   00106A                     	if	0	;tblptru may be non-zero
  1027   00106A                     	endif
  1028   00106A                     	if	0	;tblptru may be non-zero
  1029   00106A                     	endif
  1030   00106A  0008               	tblrd		*
  1031   00106C  50F5               	movf	tablat,w,c
  1032   00106E  0A69               	xorlw	105
  1033   001070  A4D8               	btfss	status,2,c
  1034   001072  EF3D  F008         	goto	u991
  1035   001076  EF3F  F008         	goto	u990
  1036   00107A                     u991:
  1037   00107A  EFC5  F008         	goto	l1733
  1038   00107E                     u990:
  1039   00107E                     l1707:
  1040                           
  1041                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1042   00107E  5011               	movf	vfpfcnvrt@ap^0,w,c
  1043   001080  6ED9               	movwf	fsr2l,c
  1044   001082  6ADA               	clrf	fsr2h,c
  1045   001084  0E02               	movlw	2
  1046   001086  26DF               	addwf	indf2,f,c
  1047   001088  5CDF               	subwf	indf2,w,c
  1048   00108A  6ED9               	movwf	fsr2l,c
  1049   00108C  6ADA               	clrf	fsr2h,c
  1050   00108E  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg
  1051   001092  CFDE F016          	movff	postinc2,vfpfcnvrt@convarg+1
  1052   001096                     
  1053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1054   001096  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1055   001098  6ED9               	movwf	fsr2l,c
  1056   00109A  6ADA               	clrf	fsr2h,c
  1057   00109C  2814               	incf	vfpfcnvrt@cp^0,w,c
  1058   00109E  6EDF               	movwf	indf2,c
  1059   0010A0                     
  1060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1061   0010A0  0E20               	movlw	32
  1062   0010A2  6E19               	movwf	vfpfcnvrt@c^0,c
  1063                           
  1064                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1065   0010A4  BE16               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1066   0010A6  EF57  F008         	goto	u1001
  1067   0010AA  EF5A  F008         	goto	u1000
  1068   0010AE                     u1001:
  1069   0010AE  0E01               	movlw	1
  1070   0010B0  EF5B  F008         	goto	u1010
  1071   0010B4                     u1000:
  1072   0010B4  0E00               	movlw	0
  1073   0010B6                     u1010:
  1074   0010B6  6E13               	movwf	vfpfcnvrt@done^0,c
  1075   0010B8                     l1713:
  1076                           
  1077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1078   0010B8  0619               	decf	vfpfcnvrt@c^0,f,c
  1079   0010BA  5019               	movf	vfpfcnvrt@c^0,w,c
  1080   0010BC  0F9C               	addlw	low _dbuf
  1081   0010BE  6ED9               	movwf	fsr2l,c
  1082   0010C0  6ADA               	clrf	fsr2h,c
  1083   0010C2  C015  F005         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1084   0010C6  C016  F006         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1085   0010CA  0E00               	movlw	0
  1086   0010CC  6E08               	movwf	(___awmod@divisor+1)^0,c
  1087   0010CE  0E0A               	movlw	10
  1088   0010D0  6E07               	movwf	___awmod@divisor^0,c
  1089   0010D2  EC9C  F00B         	call	___awmod	;wreg free
  1090   0010D6  C005  F00B         	movff	?___awmod,abs@a
  1091   0010DA  C006  F00C         	movff	?___awmod+1,abs@a+1
  1092   0010DE  EC57  F00D         	call	_abs	;wreg free
  1093   0010E2  500B               	movf	?_abs^0,w,c
  1094   0010E4  0F30               	addlw	48
  1095   0010E6  6EDF               	movwf	indf2,c
  1096   0010E8                     
  1097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1098   0010E8  C015  F005         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1099   0010EC  C016  F006         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1100   0010F0  0E00               	movlw	0
  1101   0010F2  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1102   0010F4  0E0A               	movlw	10
  1103   0010F6  6E07               	movwf	___awdiv@divisor^0,c
  1104   0010F8  EC3A  F00B         	call	___awdiv	;wreg free
  1105   0010FC  C005  F015         	movff	?___awdiv,vfpfcnvrt@convarg
  1106   001100  C006  F016         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1107   001104                     
  1108                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1109   001104  5015               	movf	vfpfcnvrt@convarg^0,w,c
  1110   001106  1016               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1111   001108  B4D8               	btfsc	status,2,c
  1112   00110A  EF89  F008         	goto	u1021
  1113   00110E  EF8B  F008         	goto	u1020
  1114   001112                     u1021:
  1115   001112  EF93  F008         	goto	l1721
  1116   001116                     u1020:
  1117   001116  5019               	movf	vfpfcnvrt@c^0,w,c
  1118   001118  A4D8               	btfss	status,2,c
  1119   00111A  EF91  F008         	goto	u1031
  1120   00111E  EF93  F008         	goto	u1030
  1121   001122                     u1031:
  1122   001122  EF5C  F008         	goto	l1713
  1123   001126                     u1030:
  1124   001126                     l1721:
  1125                           
  1126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1127   001126  5019               	movf	vfpfcnvrt@c^0,w,c
  1128   001128  B4D8               	btfsc	status,2,c
  1129   00112A  EF99  F008         	goto	u1041
  1130   00112E  EF9B  F008         	goto	u1040
  1131   001132                     u1041:
  1132   001132  EFBA  F008         	goto	l1731
  1133   001136                     u1040:
  1134   001136  5013               	movf	vfpfcnvrt@done^0,w,c
  1135   001138  B4D8               	btfsc	status,2,c
  1136   00113A  EFA1  F008         	goto	u1051
  1137   00113E  EFA3  F008         	goto	u1050
  1138   001142                     u1051:
  1139   001142  EFBA  F008         	goto	l1731
  1140   001146                     u1050:
  1141   001146                     
  1142                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1143   001146  0619               	decf	vfpfcnvrt@c^0,f,c
  1144   001148  5019               	movf	vfpfcnvrt@c^0,w,c
  1145   00114A  0F9C               	addlw	low _dbuf
  1146   00114C  6ED9               	movwf	fsr2l,c
  1147   00114E  6ADA               	clrf	fsr2h,c
  1148   001150  0E2D               	movlw	45
  1149   001152  6EDF               	movwf	indf2,c
  1150   001154  EFBA  F008         	goto	l1731
  1151   001158                     l1727:
  1152                           
  1153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1154   001158  5019               	movf	vfpfcnvrt@c^0,w,c
  1155   00115A  0F9C               	addlw	low _dbuf
  1156   00115C  6ED9               	movwf	fsr2l,c
  1157   00115E  6ADA               	clrf	fsr2h,c
  1158   001160  50DF               	movf	indf2,w,c
  1159   001162  6E12               	movwf	??_vfpfcnvrt^0,c
  1160   001164  5012               	movf	??_vfpfcnvrt^0,w,c
  1161   001166  6E05               	movwf	fputc@c^0,c
  1162   001168  6A06               	clrf	(fputc@c+1)^0,c
  1163   00116A  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1164   00116E  ECF4  F00B         	call	_fputc	;wreg free
  1165   001172  2A19               	incf	vfpfcnvrt@c^0,f,c
  1166   001174                     l1731:
  1167                           
  1168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1169   001174  0E20               	movlw	32
  1170   001176  1819               	xorwf	vfpfcnvrt@c^0,w,c
  1171   001178  A4D8               	btfss	status,2,c
  1172   00117A  EFC1  F008         	goto	u1061
  1173   00117E  EFC3  F008         	goto	u1060
  1174   001182                     u1061:
  1175   001182  EFAC  F008         	goto	l1727
  1176   001186                     u1060:
  1177   001186  EFDC  F008         	goto	l1031
  1178   00118A                     l1733:
  1179                           
  1180                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1181   00118A  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1182   00118C  6ED9               	movwf	fsr2l,c
  1183   00118E  6ADA               	clrf	fsr2h,c
  1184   001190  2ADF               	incf	indf2,f,c
  1185   001192  EFDC  F008         	goto	l1031
  1186   001196                     l1737:
  1187                           
  1188                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1189   001196  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1190   001198  6ED9               	movwf	fsr2l,c
  1191   00119A  6ADA               	clrf	fsr2h,c
  1192   00119C  CFDF FFF6          	movff	indf2,tblptrl
  1193   0011A0                     	if	1	;There is more than 1 active tblptr byte
  1194   0011A0  0E0E               	movlw	high __smallconst
  1195   0011A2  6EF7               	movwf	tblptrh,c
  1196   0011A4                     	endif
  1197   0011A4                     	if	0	;tblptru may be non-zero
  1198   0011A4                     	endif
  1199   0011A4                     	if	0	;tblptru may be non-zero
  1200   0011A4                     	endif
  1201   0011A4  0008               	tblrd		*
  1202   0011A6  50F5               	movf	tablat,w,c
  1203   0011A8  6E05               	movwf	fputc@c^0,c
  1204   0011AA  6A06               	clrf	(fputc@c+1)^0,c
  1205   0011AC  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1206   0011B0  ECF4  F00B         	call	_fputc	;wreg free
  1207   0011B4  EFC5  F008         	goto	l1733
  1208   0011B8                     l1031:
  1209   0011B8  0012               	return		;funcret
  1210   0011BA                     __end_of_vfpfcnvrt:
  1211                           	callstack 0
  1212                           
  1213 ;; *************** function _fputc *****************
  1214 ;; Defined at:
  1215 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  c               2    4[COMRAM] int 
  1218 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  1219 ;;		 -> sprintf@f(12), 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  2    4[COMRAM] int 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1231 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1235 ;;Total ram usage:        8 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; Hardware stack levels required when called: 4
  1238 ;; This function calls:
  1239 ;;		_putch
  1240 ;; This function is called by:
  1241 ;;		_vfpfcnvrt
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text5
  1246   0017E8                     __ptext5:
  1247                           	callstack 0
  1248   0017E8                     _fputc:
  1249                           	callstack 23
  1250   0017E8  5007               	movf	fputc@fp^0,w,c
  1251   0017EA  B4D8               	btfsc	status,2,c
  1252   0017EC  EFFA  F00B         	goto	u921
  1253   0017F0  EFFC  F00B         	goto	u920
  1254   0017F4                     u921:
  1255   0017F4  EF04  F00C         	goto	l1667
  1256   0017F8                     u920:
  1257   0017F8  5007               	movf	fputc@fp^0,w,c
  1258   0017FA  A4D8               	btfss	status,2,c
  1259   0017FC  EF02  F00C         	goto	u931
  1260   001800  EF04  F00C         	goto	u930
  1261   001804                     u931:
  1262   001804  EF09  F00C         	goto	l1669
  1263   001808                     u930:
  1264   001808                     l1667:
  1265   001808  5005               	movf	fputc@c^0,w,c
  1266   00180A  EC84  F00E         	call	_putch
  1267   00180E  EF48  F00C         	goto	l1056
  1268   001812                     l1669:
  1269   001812  5007               	movf	fputc@fp^0,w,c
  1270   001814  6ED9               	movwf	fsr2l,c
  1271   001816  6ADA               	clrf	fsr2h,c
  1272   001818  0E0A               	movlw	10
  1273   00181A  26D9               	addwf	fsr2l,f,c
  1274   00181C  50DE               	movf	postinc2,w,c
  1275   00181E  10DE               	iorwf	postinc2,w,c
  1276   001820  B4D8               	btfsc	status,2,c
  1277   001822  EF15  F00C         	goto	u941
  1278   001826  EF17  F00C         	goto	u940
  1279   00182A                     u941:
  1280   00182A  EF30  F00C         	goto	l1673
  1281   00182E                     u940:
  1282   00182E  5007               	movf	fputc@fp^0,w,c
  1283   001830  6ED9               	movwf	fsr2l,c
  1284   001832  6ADA               	clrf	fsr2h,c
  1285   001834  0E0A               	movlw	10
  1286   001836  26D9               	addwf	fsr2l,f,c
  1287   001838  5007               	movf	fputc@fp^0,w,c
  1288   00183A  6EE1               	movwf	fsr1l,c
  1289   00183C  6AE2               	clrf	fsr1h,c
  1290   00183E  0E03               	movlw	3
  1291   001840  26E1               	addwf	fsr1l,f,c
  1292   001842  50DE               	movf	postinc2,w,c
  1293   001844  5CE6               	subwf	postinc1,w,c
  1294   001846  50E6               	movf	postinc1,w,c
  1295   001848  0A80               	xorlw	128
  1296   00184A  6E0C               	movwf	(??_fputc+4)^0,c
  1297   00184C  50DE               	movf	postinc2,w,c
  1298   00184E  0A80               	xorlw	128
  1299   001850  580C               	subwfb	(??_fputc+4)^0,w,c
  1300   001852  B0D8               	btfsc	status,0,c
  1301   001854  EF2E  F00C         	goto	u951
  1302   001858  EF30  F00C         	goto	u950
  1303   00185C                     u951:
  1304   00185C  EF48  F00C         	goto	l1056
  1305   001860                     u950:
  1306   001860                     l1673:
  1307   001860  5007               	movf	fputc@fp^0,w,c
  1308   001862  6ED9               	movwf	fsr2l,c
  1309   001864  6ADA               	clrf	fsr2h,c
  1310   001866  0E03               	movlw	3
  1311   001868  26D9               	addwf	fsr2l,f,c
  1312   00186A  50DF               	movf	indf2,w,c
  1313   00186C  6E08               	movwf	??_fputc^0,c
  1314   00186E  5007               	movf	fputc@fp^0,w,c
  1315   001870  6ED9               	movwf	fsr2l,c
  1316   001872  6ADA               	clrf	fsr2h,c
  1317   001874  50DF               	movf	indf2,w,c
  1318   001876  2408               	addwf	??_fputc^0,w,c
  1319   001878  6ED9               	movwf	fsr2l,c
  1320   00187A  6ADA               	clrf	fsr2h,c
  1321   00187C  C005  FFDF         	movff	fputc@c,indf2
  1322   001880  5007               	movf	fputc@fp^0,w,c
  1323   001882  6ED9               	movwf	fsr2l,c
  1324   001884  6ADA               	clrf	fsr2h,c
  1325   001886  0E03               	movlw	3
  1326   001888  26D9               	addwf	fsr2l,f,c
  1327   00188A  2ADE               	incf	postinc2,f,c
  1328   00188C  0E00               	movlw	0
  1329   00188E  22DD               	addwfc	postdec2,f,c
  1330   001890                     l1056:
  1331   001890  0012               	return		;funcret
  1332   001892                     __end_of_fputc:
  1333                           	callstack 0
  1334                           
  1335 ;; *************** function _putch *****************
  1336 ;; Defined at:
  1337 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  c               1    wreg     unsigned char 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  c               1    0[COMRAM] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 3
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_fputc
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text6
  1366   001D08                     __ptext6:
  1367                           	callstack 0
  1368   001D08                     _putch:
  1369                           	callstack 23
  1370   001D08  0012               	return		;funcret
  1371   001D0A                     __end_of_putch:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _abs *****************
  1375 ;; Defined at:
  1376 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  a               2   10[COMRAM] int 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  2   10[COMRAM] int 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1393 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;Total ram usage:        4 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 3
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_vfpfcnvrt
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text7
  1405   001AAE                     __ptext7:
  1406                           	callstack 0
  1407   001AAE                     _abs:
  1408                           	callstack 24
  1409   001AAE  BE0C               	btfsc	(abs@a+1)^0,7,c
  1410   001AB0  EF5C  F00D         	goto	u961
  1411   001AB4  EF5E  F00D         	goto	u960
  1412   001AB8                     u961:
  1413   001AB8  EF64  F00D         	goto	l1041
  1414   001ABC                     u960:
  1415   001ABC  C00B  F00B         	movff	abs@a,?_abs
  1416   001AC0  C00C  F00C         	movff	abs@a+1,?_abs+1
  1417   001AC4  EF70  F00D         	goto	l1044
  1418   001AC8                     l1041:
  1419   001AC8  C00B  F00D         	movff	abs@a,??_abs
  1420   001ACC  C00C  F00E         	movff	abs@a+1,??_abs+1
  1421   001AD0  1E0D               	comf	??_abs^0,f,c
  1422   001AD2  1E0E               	comf	(??_abs+1)^0,f,c
  1423   001AD4  4A0D               	infsnz	??_abs^0,f,c
  1424   001AD6  2A0E               	incf	(??_abs+1)^0,f,c
  1425   001AD8  C00D  F00B         	movff	??_abs,?_abs
  1426   001ADC  C00E  F00C         	movff	??_abs+1,?_abs+1
  1427   001AE0                     l1044:
  1428   001AE0  0012               	return		;funcret
  1429   001AE2                     __end_of_abs:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function ___awmod *****************
  1433 ;; Defined at:
  1434 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  dividend        2    4[COMRAM] int 
  1437 ;;  divisor         2    6[COMRAM] int 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  sign            1    9[COMRAM] unsigned char 
  1440 ;;  counter         1    8[COMRAM] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  2    4[COMRAM] int 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;Total ram usage:        6 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 3
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_vfpfcnvrt
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text8
  1465   001738                     __ptext8:
  1466                           	callstack 0
  1467   001738                     ___awmod:
  1468                           	callstack 24
  1469   001738  0E00               	movlw	0
  1470   00173A  6E0A               	movwf	___awmod@sign^0,c
  1471   00173C  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  1472   00173E  EFA5  F00B         	goto	u860
  1473   001742  EFA3  F00B         	goto	u861
  1474   001746                     u861:
  1475   001746  EFAB  F00B         	goto	l1635
  1476   00174A                     u860:
  1477   00174A  6C05               	negf	___awmod@dividend^0,c
  1478   00174C  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1479   00174E  B0D8               	btfsc	status,0,c
  1480   001750  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1481   001752  0E01               	movlw	1
  1482   001754  6E0A               	movwf	___awmod@sign^0,c
  1483   001756                     l1635:
  1484   001756  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  1485   001758  EFB2  F00B         	goto	u870
  1486   00175C  EFB0  F00B         	goto	u871
  1487   001760                     u871:
  1488   001760  EFB6  F00B         	goto	l1639
  1489   001764                     u870:
  1490   001764  6C07               	negf	___awmod@divisor^0,c
  1491   001766  1E08               	comf	(___awmod@divisor+1)^0,f,c
  1492   001768  B0D8               	btfsc	status,0,c
  1493   00176A  2A08               	incf	(___awmod@divisor+1)^0,f,c
  1494   00176C                     l1639:
  1495   00176C  5007               	movf	___awmod@divisor^0,w,c
  1496   00176E  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  1497   001770  B4D8               	btfsc	status,2,c
  1498   001772  EFBD  F00B         	goto	u881
  1499   001776  EFBF  F00B         	goto	u880
  1500   00177A                     u881:
  1501   00177A  EFE3  F00B         	goto	l1655
  1502   00177E                     u880:
  1503   00177E  0E01               	movlw	1
  1504   001780  6E09               	movwf	___awmod@counter^0,c
  1505   001782  EFC7  F00B         	goto	l1645
  1506   001786                     l1643:
  1507   001786  90D8               	bcf	status,0,c
  1508   001788  3607               	rlcf	___awmod@divisor^0,f,c
  1509   00178A  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  1510   00178C  2A09               	incf	___awmod@counter^0,f,c
  1511   00178E                     l1645:
  1512   00178E  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  1513   001790  EFCC  F00B         	goto	u891
  1514   001794  EFCE  F00B         	goto	u890
  1515   001798                     u891:
  1516   001798  EFC3  F00B         	goto	l1643
  1517   00179C                     u890:
  1518   00179C                     l1647:
  1519   00179C  5007               	movf	___awmod@divisor^0,w,c
  1520   00179E  5C05               	subwf	___awmod@dividend^0,w,c
  1521   0017A0  5008               	movf	(___awmod@divisor+1)^0,w,c
  1522   0017A2  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  1523   0017A4  A0D8               	btfss	status,0,c
  1524   0017A6  EFD7  F00B         	goto	u901
  1525   0017AA  EFD9  F00B         	goto	u900
  1526   0017AE                     u901:
  1527   0017AE  EFDD  F00B         	goto	l1651
  1528   0017B2                     u900:
  1529   0017B2  5007               	movf	___awmod@divisor^0,w,c
  1530   0017B4  5E05               	subwf	___awmod@dividend^0,f,c
  1531   0017B6  5008               	movf	(___awmod@divisor+1)^0,w,c
  1532   0017B8  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  1533   0017BA                     l1651:
  1534   0017BA  90D8               	bcf	status,0,c
  1535   0017BC  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  1536   0017BE  3207               	rrcf	___awmod@divisor^0,f,c
  1537   0017C0  2E09               	decfsz	___awmod@counter^0,f,c
  1538   0017C2  EFCE  F00B         	goto	l1647
  1539   0017C6                     l1655:
  1540   0017C6  500A               	movf	___awmod@sign^0,w,c
  1541   0017C8  B4D8               	btfsc	status,2,c
  1542   0017CA  EFE9  F00B         	goto	u911
  1543   0017CE  EFEB  F00B         	goto	u910
  1544   0017D2                     u911:
  1545   0017D2  EFEF  F00B         	goto	l1659
  1546   0017D6                     u910:
  1547   0017D6  6C05               	negf	___awmod@dividend^0,c
  1548   0017D8  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1549   0017DA  B0D8               	btfsc	status,0,c
  1550   0017DC  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1551   0017DE                     l1659:
  1552   0017DE  C005  F005         	movff	___awmod@dividend,?___awmod
  1553   0017E2  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  1554   0017E6  0012               	return		;funcret
  1555   0017E8                     __end_of___awmod:
  1556                           	callstack 0
  1557                           
  1558 ;; *************** function ___awdiv *****************
  1559 ;; Defined at:
  1560 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  dividend        2    4[COMRAM] int 
  1563 ;;  divisor         2    6[COMRAM] int 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  quotient        2   10[COMRAM] int 
  1566 ;;  sign            1    9[COMRAM] unsigned char 
  1567 ;;  counter         1    8[COMRAM] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  2    4[COMRAM] int 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1580 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1581 ;;Total ram usage:        8 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; Hardware stack levels required when called: 3
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_vfpfcnvrt
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text9
  1592   001674                     __ptext9:
  1593                           	callstack 0
  1594   001674                     ___awdiv:
  1595                           	callstack 24
  1596   001674  0E00               	movlw	0
  1597   001676  6E0A               	movwf	___awdiv@sign^0,c
  1598   001678  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  1599   00167A  EF43  F00B         	goto	u800
  1600   00167E  EF41  F00B         	goto	u801
  1601   001682                     u801:
  1602   001682  EF49  F00B         	goto	l1591
  1603   001686                     u800:
  1604   001686  6C07               	negf	___awdiv@divisor^0,c
  1605   001688  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  1606   00168A  B0D8               	btfsc	status,0,c
  1607   00168C  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  1608   00168E  0E01               	movlw	1
  1609   001690  6E0A               	movwf	___awdiv@sign^0,c
  1610   001692                     l1591:
  1611   001692  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  1612   001694  EF50  F00B         	goto	u810
  1613   001698  EF4E  F00B         	goto	u811
  1614   00169C                     u811:
  1615   00169C  EF56  F00B         	goto	l1597
  1616   0016A0                     u810:
  1617   0016A0  6C05               	negf	___awdiv@dividend^0,c
  1618   0016A2  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  1619   0016A4  B0D8               	btfsc	status,0,c
  1620   0016A6  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  1621   0016A8  0E01               	movlw	1
  1622   0016AA  1A0A               	xorwf	___awdiv@sign^0,f,c
  1623   0016AC                     l1597:
  1624   0016AC  0E00               	movlw	0
  1625   0016AE  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  1626   0016B0  0E00               	movlw	0
  1627   0016B2  6E0B               	movwf	___awdiv@quotient^0,c
  1628   0016B4  5007               	movf	___awdiv@divisor^0,w,c
  1629   0016B6  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  1630   0016B8  B4D8               	btfsc	status,2,c
  1631   0016BA  EF61  F00B         	goto	u821
  1632   0016BE  EF63  F00B         	goto	u820
  1633   0016C2                     u821:
  1634   0016C2  EF8B  F00B         	goto	l1619
  1635   0016C6                     u820:
  1636   0016C6  0E01               	movlw	1
  1637   0016C8  6E09               	movwf	___awdiv@counter^0,c
  1638   0016CA  EF6B  F00B         	goto	l1605
  1639   0016CE                     l1603:
  1640   0016CE  90D8               	bcf	status,0,c
  1641   0016D0  3607               	rlcf	___awdiv@divisor^0,f,c
  1642   0016D2  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  1643   0016D4  2A09               	incf	___awdiv@counter^0,f,c
  1644   0016D6                     l1605:
  1645   0016D6  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  1646   0016D8  EF70  F00B         	goto	u831
  1647   0016DC  EF72  F00B         	goto	u830
  1648   0016E0                     u831:
  1649   0016E0  EF67  F00B         	goto	l1603
  1650   0016E4                     u830:
  1651   0016E4                     l1607:
  1652   0016E4  90D8               	bcf	status,0,c
  1653   0016E6  360B               	rlcf	___awdiv@quotient^0,f,c
  1654   0016E8  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1655   0016EA  5007               	movf	___awdiv@divisor^0,w,c
  1656   0016EC  5C05               	subwf	___awdiv@dividend^0,w,c
  1657   0016EE  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1658   0016F0  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  1659   0016F2  A0D8               	btfss	status,0,c
  1660   0016F4  EF7E  F00B         	goto	u841
  1661   0016F8  EF80  F00B         	goto	u840
  1662   0016FC                     u841:
  1663   0016FC  EF85  F00B         	goto	l1615
  1664   001700                     u840:
  1665   001700  5007               	movf	___awdiv@divisor^0,w,c
  1666   001702  5E05               	subwf	___awdiv@dividend^0,f,c
  1667   001704  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1668   001706  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  1669   001708  800B               	bsf	___awdiv@quotient^0,0,c
  1670   00170A                     l1615:
  1671   00170A  90D8               	bcf	status,0,c
  1672   00170C  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  1673   00170E  3207               	rrcf	___awdiv@divisor^0,f,c
  1674   001710  2E09               	decfsz	___awdiv@counter^0,f,c
  1675   001712  EF72  F00B         	goto	l1607
  1676   001716                     l1619:
  1677   001716  500A               	movf	___awdiv@sign^0,w,c
  1678   001718  B4D8               	btfsc	status,2,c
  1679   00171A  EF91  F00B         	goto	u851
  1680   00171E  EF93  F00B         	goto	u850
  1681   001722                     u851:
  1682   001722  EF97  F00B         	goto	l1623
  1683   001726                     u850:
  1684   001726  6C0B               	negf	___awdiv@quotient^0,c
  1685   001728  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  1686   00172A  B0D8               	btfsc	status,0,c
  1687   00172C  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  1688   00172E                     l1623:
  1689   00172E  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  1690   001732  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  1691   001736  0012               	return		;funcret
  1692   001738                     __end_of___awdiv:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _sendTxBuf *****************
  1696 ;; Defined at:
  1697 ;;		line 74 in file "serial.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 4
  1718 ;; This function calls:
  1719 ;;		_isDataInTxBuf
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text10
  1726   001C62                     __ptext10:
  1727                           	callstack 0
  1728   001C62                     _sendTxBuf:
  1729                           	callstack 26
  1730   001C62                     
  1731                           ;serial.c: 75:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  1732   001C62  EC3E  F00E         	call	_isDataInTxBuf	;wreg free
  1733   001C66  0900               	iorlw	0
  1734   001C68  B4D8               	btfsc	status,2,c
  1735   001C6A  EF39  F00E         	goto	u1381
  1736   001C6E  EF3B  F00E         	goto	u1380
  1737   001C72                     u1381:
  1738   001C72  EF3D  F00E         	goto	l312
  1739   001C76                     u1380:
  1740   001C76  010E               	movlb	14	; () banked
  1741   001C78  852D               	bsf	45,2,b	;volatile
  1742   001C7A                     l312:
  1743   001C7A  0012               	return		;funcret
  1744   001C7C                     __end_of_sendTxBuf:
  1745                           	callstack 0
  1746                           
  1747 ;; *************** function _isDataInTxBuf *****************
  1748 ;; Defined at:
  1749 ;;		line 61 in file "serial.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      unsigned char 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1767 ;;Total ram usage:        0 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 3
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_sendTxBuf
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text11
  1778   001C7C                     __ptext11:
  1779                           	callstack 0
  1780   001C7C                     _isDataInTxBuf:
  1781                           	callstack 26
  1782   001C7C                     
  1783                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  1784   001C7C  5056               	movf	_TxBufReadCnt^0,w,c	;volatile
  1785   001C7E  1857               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  1786   001C80  A4D8               	btfss	status,2,c
  1787   001C82  EF45  F00E         	goto	u1091
  1788   001C86  EF48  F00E         	goto	u1090
  1789   001C8A                     u1091:
  1790   001C8A  0E01               	movlw	1
  1791   001C8C  EF49  F00E         	goto	u1100
  1792   001C90                     u1090:
  1793   001C90  0E00               	movlw	0
  1794   001C92                     u1100:
  1795   001C92  0012               	return		;funcret
  1796   001C94                     __end_of_isDataInTxBuf:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _initUSART4 *****************
  1800 ;; Defined at:
  1801 ;;		line 4 in file "serial.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 3
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text12
  1830   001C44                     __ptext12:
  1831                           	callstack 0
  1832   001C44                     _initUSART4:
  1833                           	callstack 27
  1834   001C44                     
  1835                           ;serial.c: 7:     RC0PPS = 0x12;
  1836   001C44  0E12               	movlw	18
  1837   001C46  010E               	movlb	14	; () banked
  1838   001C48  6F62               	movwf	98,b	;volatile
  1839                           
  1840                           ;serial.c: 8:     RX4PPS = 0x11;
  1841   001C4A  0E11               	movlw	17
  1842   001C4C  6F15               	movwf	21,b	;volatile
  1843   001C4E                     
  1844                           ; BSR set to: 14
  1845                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  1846   001C4E  97E9               	bcf	233,3,b	;volatile
  1847   001C50                     
  1848                           ; BSR set to: 14
  1849                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  1850   001C50  95E8               	bcf	232,2,b	;volatile
  1851                           
  1852                           ;serial.c: 13:     SP4BRGL = 51;
  1853   001C52  0E33               	movlw	51
  1854   001C54  6FE5               	movwf	229,b	;volatile
  1855                           
  1856                           ;serial.c: 14:     SP4BRGH = 0;
  1857   001C56  0E00               	movlw	0
  1858   001C58  6FE6               	movwf	230,b	;volatile
  1859   001C5A                     
  1860                           ; BSR set to: 14
  1861                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  1862   001C5A  89E7               	bsf	231,4,b	;volatile
  1863   001C5C                     
  1864                           ; BSR set to: 14
  1865                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  1866   001C5C  8BE8               	bsf	232,5,b	;volatile
  1867   001C5E                     
  1868                           ; BSR set to: 14
  1869                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  1870   001C5E  8FE7               	bsf	231,7,b	;volatile
  1871   001C60                     
  1872                           ; BSR set to: 14
  1873   001C60  0012               	return		;funcret
  1874   001C62                     __end_of_initUSART4:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function _color_read *****************
  1878 ;; Defined at:
  1879 ;;		line 55 in file "color.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  RGBC            1    8[COMRAM] PTR struct RGBC_val
  1882 ;;		 -> main@RGBC(8), 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1894 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1896 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1897 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1898 ;;Total ram usage:        8 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 5
  1901 ;; This function calls:
  1902 ;;		_I2C_2_Master_Read
  1903 ;;		_I2C_2_Master_RepStart
  1904 ;;		_I2C_2_Master_Start
  1905 ;;		_I2C_2_Master_Stop
  1906 ;;		_I2C_2_Master_Write
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text13
  1913   000E2C                     __ptext13:
  1914                           	callstack 0
  1915   000E2C                     _color_read:
  1916                           	callstack 25
  1917   000E2C                     
  1918                           ;color.c: 55: void color_read(RGBC_val *RGBC);color.c: 56: {;color.c: 57:  I2C_2_Master_
      +                          Start();
  1919   000E2C  EC75  F00E         	call	_I2C_2_Master_Start	;wreg free
  1920                           
  1921                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
  1922   000E30  0E52               	movlw	82
  1923   000E32  EC5F  F00E         	call	_I2C_2_Master_Write
  1924                           
  1925                           ;color.c: 59:  I2C_2_Master_Write(0xA0 | 0x16);
  1926   000E36  0EB6               	movlw	182
  1927   000E38  EC5F  F00E         	call	_I2C_2_Master_Write
  1928                           
  1929                           ;color.c: 60:  I2C_2_Master_RepStart();
  1930   000E3C  EC6B  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1931                           
  1932                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
  1933   000E40  0E53               	movlw	83
  1934   000E42  EC5F  F00E         	call	_I2C_2_Master_Write
  1935   000E46                     
  1936                           ;color.c: 62:  RGBC->R=I2C_2_Master_Read(1);
  1937   000E46  0E01               	movlw	1
  1938   000E48  ECE2  F00C         	call	_I2C_2_Master_Read
  1939   000E4C  6E0A               	movwf	??_color_read^0,c
  1940   000E4E  6A0B               	clrf	(??_color_read+1)^0,c
  1941   000E50  5009               	movf	color_read@RGBC^0,w,c
  1942   000E52  6ED9               	movwf	fsr2l,c
  1943   000E54  6ADA               	clrf	fsr2h,c
  1944   000E56  C00A  FFDE         	movff	??_color_read,postinc2
  1945   000E5A  C00B  FFDD         	movff	??_color_read+1,postdec2
  1946   000E5E                     
  1947                           ;color.c: 63:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  1948   000E5E  5009               	movf	color_read@RGBC^0,w,c
  1949   000E60  6ED9               	movwf	fsr2l,c
  1950   000E62  6ADA               	clrf	fsr2h,c
  1951   000E64  CFDE F00A          	movff	postinc2,??_color_read
  1952   000E68  CFDD F00B          	movff	postdec2,??_color_read+1
  1953   000E6C  0E00               	movlw	0
  1954   000E6E  ECE2  F00C         	call	_I2C_2_Master_Read
  1955   000E72  6E0C               	movwf	(??_color_read+2)^0,c
  1956   000E74  500C               	movf	(??_color_read+2)^0,w,c
  1957   000E76  6E0E               	movwf	(??_color_read+4)^0,c
  1958   000E78  6A0D               	clrf	(??_color_read+3)^0,c
  1959   000E7A  500A               	movf	??_color_read^0,w,c
  1960   000E7C  100D               	iorwf	(??_color_read+3)^0,w,c
  1961   000E7E  6E0F               	movwf	(??_color_read+5)^0,c
  1962   000E80  500B               	movf	(??_color_read+1)^0,w,c
  1963   000E82  100E               	iorwf	(??_color_read+4)^0,w,c
  1964   000E84  6E10               	movwf	(??_color_read+6)^0,c
  1965   000E86  5009               	movf	color_read@RGBC^0,w,c
  1966   000E88  6ED9               	movwf	fsr2l,c
  1967   000E8A  6ADA               	clrf	fsr2h,c
  1968   000E8C  C00F  FFDE         	movff	??_color_read+5,postinc2
  1969   000E90  C010  FFDD         	movff	??_color_read+6,postdec2
  1970                           
  1971                           ;color.c: 64:  I2C_2_Master_Stop();
  1972   000E94  EC70  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1973                           
  1974                           ;color.c: 66:     I2C_2_Master_Start();
  1975   000E98  EC75  F00E         	call	_I2C_2_Master_Start	;wreg free
  1976                           
  1977                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  1978   000E9C  0E52               	movlw	82
  1979   000E9E  EC5F  F00E         	call	_I2C_2_Master_Write
  1980                           
  1981                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x18);
  1982   000EA2  0EB8               	movlw	184
  1983   000EA4  EC5F  F00E         	call	_I2C_2_Master_Write
  1984                           
  1985                           ;color.c: 69:  I2C_2_Master_RepStart();
  1986   000EA8  EC6B  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1987                           
  1988                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  1989   000EAC  0E53               	movlw	83
  1990   000EAE  EC5F  F00E         	call	_I2C_2_Master_Write
  1991   000EB2                     
  1992                           ;color.c: 71:  RGBC->G=I2C_2_Master_Read(1);
  1993   000EB2  0E01               	movlw	1
  1994   000EB4  ECE2  F00C         	call	_I2C_2_Master_Read
  1995   000EB8  6E0A               	movwf	??_color_read^0,c
  1996   000EBA  6A0B               	clrf	(??_color_read+1)^0,c
  1997   000EBC  5009               	movf	color_read@RGBC^0,w,c
  1998   000EBE  6ED9               	movwf	fsr2l,c
  1999   000EC0  6ADA               	clrf	fsr2h,c
  2000   000EC2  0E02               	movlw	2
  2001   000EC4  26D9               	addwf	fsr2l,f,c
  2002   000EC6  C00A  FFDE         	movff	??_color_read,postinc2
  2003   000ECA  C00B  FFDD         	movff	??_color_read+1,postdec2
  2004   000ECE                     
  2005                           ;color.c: 72:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  2006   000ECE  5009               	movf	color_read@RGBC^0,w,c
  2007   000ED0  6ED9               	movwf	fsr2l,c
  2008   000ED2  6ADA               	clrf	fsr2h,c
  2009   000ED4  0E02               	movlw	2
  2010   000ED6  26D9               	addwf	fsr2l,f,c
  2011   000ED8  CFDE F00A          	movff	postinc2,??_color_read
  2012   000EDC  CFDD F00B          	movff	postdec2,??_color_read+1
  2013   000EE0  0E00               	movlw	0
  2014   000EE2  ECE2  F00C         	call	_I2C_2_Master_Read
  2015   000EE6  6E0C               	movwf	(??_color_read+2)^0,c
  2016   000EE8  500C               	movf	(??_color_read+2)^0,w,c
  2017   000EEA  6E0E               	movwf	(??_color_read+4)^0,c
  2018   000EEC  6A0D               	clrf	(??_color_read+3)^0,c
  2019   000EEE  500A               	movf	??_color_read^0,w,c
  2020   000EF0  100D               	iorwf	(??_color_read+3)^0,w,c
  2021   000EF2  6E0F               	movwf	(??_color_read+5)^0,c
  2022   000EF4  500B               	movf	(??_color_read+1)^0,w,c
  2023   000EF6  100E               	iorwf	(??_color_read+4)^0,w,c
  2024   000EF8  6E10               	movwf	(??_color_read+6)^0,c
  2025   000EFA  5009               	movf	color_read@RGBC^0,w,c
  2026   000EFC  6ED9               	movwf	fsr2l,c
  2027   000EFE  6ADA               	clrf	fsr2h,c
  2028   000F00  0E02               	movlw	2
  2029   000F02  26D9               	addwf	fsr2l,f,c
  2030   000F04  C00F  FFDE         	movff	??_color_read+5,postinc2
  2031   000F08  C010  FFDD         	movff	??_color_read+6,postdec2
  2032                           
  2033                           ;color.c: 73:  I2C_2_Master_Stop();
  2034   000F0C  EC70  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2035                           
  2036                           ;color.c: 75:     I2C_2_Master_Start();
  2037   000F10  EC75  F00E         	call	_I2C_2_Master_Start	;wreg free
  2038                           
  2039                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
  2040   000F14  0E52               	movlw	82
  2041   000F16  EC5F  F00E         	call	_I2C_2_Master_Write
  2042                           
  2043                           ;color.c: 77:  I2C_2_Master_Write(0xA0 | 0x1A);
  2044   000F1A  0EBA               	movlw	186
  2045   000F1C  EC5F  F00E         	call	_I2C_2_Master_Write
  2046                           
  2047                           ;color.c: 78:  I2C_2_Master_RepStart();
  2048   000F20  EC6B  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2049                           
  2050                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  2051   000F24  0E53               	movlw	83
  2052   000F26  EC5F  F00E         	call	_I2C_2_Master_Write
  2053   000F2A                     
  2054                           ;color.c: 80:  RGBC->B=I2C_2_Master_Read(1);
  2055   000F2A  0E01               	movlw	1
  2056   000F2C  ECE2  F00C         	call	_I2C_2_Master_Read
  2057   000F30  6E0A               	movwf	??_color_read^0,c
  2058   000F32  6A0B               	clrf	(??_color_read+1)^0,c
  2059   000F34  5009               	movf	color_read@RGBC^0,w,c
  2060   000F36  6ED9               	movwf	fsr2l,c
  2061   000F38  6ADA               	clrf	fsr2h,c
  2062   000F3A  0E04               	movlw	4
  2063   000F3C  26D9               	addwf	fsr2l,f,c
  2064   000F3E  C00A  FFDE         	movff	??_color_read,postinc2
  2065   000F42  C00B  FFDD         	movff	??_color_read+1,postdec2
  2066   000F46                     
  2067                           ;color.c: 81:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  2068   000F46  5009               	movf	color_read@RGBC^0,w,c
  2069   000F48  6ED9               	movwf	fsr2l,c
  2070   000F4A  6ADA               	clrf	fsr2h,c
  2071   000F4C  0E04               	movlw	4
  2072   000F4E  26D9               	addwf	fsr2l,f,c
  2073   000F50  CFDE F00A          	movff	postinc2,??_color_read
  2074   000F54  CFDD F00B          	movff	postdec2,??_color_read+1
  2075   000F58  0E00               	movlw	0
  2076   000F5A  ECE2  F00C         	call	_I2C_2_Master_Read
  2077   000F5E  6E0C               	movwf	(??_color_read+2)^0,c
  2078   000F60  500C               	movf	(??_color_read+2)^0,w,c
  2079   000F62  6E0E               	movwf	(??_color_read+4)^0,c
  2080   000F64  6A0D               	clrf	(??_color_read+3)^0,c
  2081   000F66  500A               	movf	??_color_read^0,w,c
  2082   000F68  100D               	iorwf	(??_color_read+3)^0,w,c
  2083   000F6A  6E0F               	movwf	(??_color_read+5)^0,c
  2084   000F6C  500B               	movf	(??_color_read+1)^0,w,c
  2085   000F6E  100E               	iorwf	(??_color_read+4)^0,w,c
  2086   000F70  6E10               	movwf	(??_color_read+6)^0,c
  2087   000F72  5009               	movf	color_read@RGBC^0,w,c
  2088   000F74  6ED9               	movwf	fsr2l,c
  2089   000F76  6ADA               	clrf	fsr2h,c
  2090   000F78  0E04               	movlw	4
  2091   000F7A  26D9               	addwf	fsr2l,f,c
  2092   000F7C  C00F  FFDE         	movff	??_color_read+5,postinc2
  2093   000F80  C010  FFDD         	movff	??_color_read+6,postdec2
  2094                           
  2095                           ;color.c: 82:  I2C_2_Master_Stop();
  2096   000F84  EC70  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2097                           
  2098                           ;color.c: 84:     I2C_2_Master_Start();
  2099   000F88  EC75  F00E         	call	_I2C_2_Master_Start	;wreg free
  2100                           
  2101                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x00);
  2102   000F8C  0E52               	movlw	82
  2103   000F8E  EC5F  F00E         	call	_I2C_2_Master_Write
  2104                           
  2105                           ;color.c: 86:  I2C_2_Master_Write(0xA0 | 0x14);
  2106   000F92  0EB4               	movlw	180
  2107   000F94  EC5F  F00E         	call	_I2C_2_Master_Write
  2108                           
  2109                           ;color.c: 87:  I2C_2_Master_RepStart();
  2110   000F98  EC6B  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2111                           
  2112                           ;color.c: 88:  I2C_2_Master_Write(0x52 | 0x01);
  2113   000F9C  0E53               	movlw	83
  2114   000F9E  EC5F  F00E         	call	_I2C_2_Master_Write
  2115   000FA2                     
  2116                           ;color.c: 89:  RGBC->C=I2C_2_Master_Read(1);
  2117   000FA2  0E01               	movlw	1
  2118   000FA4  ECE2  F00C         	call	_I2C_2_Master_Read
  2119   000FA8  6E0A               	movwf	??_color_read^0,c
  2120   000FAA  6A0B               	clrf	(??_color_read+1)^0,c
  2121   000FAC  5009               	movf	color_read@RGBC^0,w,c
  2122   000FAE  6ED9               	movwf	fsr2l,c
  2123   000FB0  6ADA               	clrf	fsr2h,c
  2124   000FB2  0E06               	movlw	6
  2125   000FB4  26D9               	addwf	fsr2l,f,c
  2126   000FB6  C00A  FFDE         	movff	??_color_read,postinc2
  2127   000FBA  C00B  FFDD         	movff	??_color_read+1,postdec2
  2128   000FBE                     
  2129                           ;color.c: 90:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  2130   000FBE  5009               	movf	color_read@RGBC^0,w,c
  2131   000FC0  6ED9               	movwf	fsr2l,c
  2132   000FC2  6ADA               	clrf	fsr2h,c
  2133   000FC4  0E06               	movlw	6
  2134   000FC6  26D9               	addwf	fsr2l,f,c
  2135   000FC8  CFDE F00A          	movff	postinc2,??_color_read
  2136   000FCC  CFDD F00B          	movff	postdec2,??_color_read+1
  2137   000FD0  0E00               	movlw	0
  2138   000FD2  ECE2  F00C         	call	_I2C_2_Master_Read
  2139   000FD6  6E0C               	movwf	(??_color_read+2)^0,c
  2140   000FD8  500C               	movf	(??_color_read+2)^0,w,c
  2141   000FDA  6E0E               	movwf	(??_color_read+4)^0,c
  2142   000FDC  6A0D               	clrf	(??_color_read+3)^0,c
  2143   000FDE  500A               	movf	??_color_read^0,w,c
  2144   000FE0  100D               	iorwf	(??_color_read+3)^0,w,c
  2145   000FE2  6E0F               	movwf	(??_color_read+5)^0,c
  2146   000FE4  500B               	movf	(??_color_read+1)^0,w,c
  2147   000FE6  100E               	iorwf	(??_color_read+4)^0,w,c
  2148   000FE8  6E10               	movwf	(??_color_read+6)^0,c
  2149   000FEA  5009               	movf	color_read@RGBC^0,w,c
  2150   000FEC  6ED9               	movwf	fsr2l,c
  2151   000FEE  6ADA               	clrf	fsr2h,c
  2152   000FF0  0E06               	movlw	6
  2153   000FF2  26D9               	addwf	fsr2l,f,c
  2154   000FF4  C00F  FFDE         	movff	??_color_read+5,postinc2
  2155   000FF8  C010  FFDD         	movff	??_color_read+6,postdec2
  2156                           
  2157                           ;color.c: 91:  I2C_2_Master_Stop();
  2158   000FFC  EC70  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2159   001000  0012               	return		;funcret
  2160   001002                     __end_of_color_read:
  2161                           	callstack 0
  2162                           
  2163 ;; *************** function _I2C_2_Master_RepStart *****************
  2164 ;; Defined at:
  2165 ;;		line 33 in file "i2c.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;Total ram usage:        0 bytes
  2184 ;; Hardware stack levels used: 1
  2185 ;; Hardware stack levels required when called: 4
  2186 ;; This function calls:
  2187 ;;		_I2C_2_Master_Idle
  2188 ;; This function is called by:
  2189 ;;		_color_read
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text14
  2194   001CD6                     __ptext14:
  2195                           	callstack 0
  2196   001CD6                     _I2C_2_Master_RepStart:
  2197                           	callstack 25
  2198   001CD6                     
  2199                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2200   001CD6  EC9F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2201   001CDA                     
  2202                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2203   001CDA  010E               	movlb	14	; () banked
  2204   001CDC  83DA               	bsf	218,1,b	;volatile
  2205   001CDE                     
  2206                           ; BSR set to: 14
  2207   001CDE  0012               	return		;funcret
  2208   001CE0                     __end_of_I2C_2_Master_RepStart:
  2209                           	callstack 0
  2210                           
  2211 ;; *************** function _I2C_2_Master_Read *****************
  2212 ;; Defined at:
  2213 ;;		line 51 in file "i2c.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  ack             1    wreg     unsigned char 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  ack             1    6[COMRAM] unsigned char 
  2218 ;;  tmp             1    7[COMRAM] unsigned char 
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      unsigned char 
  2221 ;; Registers used:
  2222 ;;		wreg, status,2, status,0, cstack
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2229 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2231 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;Total ram usage:        3 bytes
  2233 ;; Hardware stack levels used: 1
  2234 ;; Hardware stack levels required when called: 4
  2235 ;; This function calls:
  2236 ;;		_I2C_2_Master_Idle
  2237 ;; This function is called by:
  2238 ;;		_color_read
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text15
  2243   0019C4                     __ptext15:
  2244                           	callstack 0
  2245   0019C4                     _I2C_2_Master_Read:
  2246                           	callstack 25
  2247                           
  2248                           ; BSR set to: 14
  2249                           ;incstack = 0
  2250                           ;I2C_2_Master_Read@ack stored from wreg
  2251   0019C4  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  2252   0019C6                     
  2253                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2254   0019C6  EC9F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2255   0019CA                     
  2256                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2257   0019CA  010E               	movlb	14	; () banked
  2258   0019CC  87DA               	bsf	218,3,b	;volatile
  2259                           
  2260                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2261   0019CE  EC9F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2262   0019D2                     
  2263                           ;i2c.c: 57:   tmp = SSP2BUF;
  2264   0019D2  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2265                           
  2266                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2267   0019D6  EC9F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2268   0019DA                     
  2269                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2270   0019DA  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  2271   0019DC  B4D8               	btfsc	status,2,c
  2272   0019DE  EFF3  F00C         	goto	u1071
  2273   0019E2  EFF7  F00C         	goto	u1070
  2274   0019E6                     u1071:
  2275   0019E6  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2276   0019E8  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  2277   0019EA  EFF8  F00C         	goto	u1088
  2278   0019EE                     u1070:
  2279   0019EE  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2280   0019F0                     u1088:
  2281   0019F0  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  2282   0019F2  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  2283   0019F4  010E               	movlb	14	; () banked
  2284   0019F6  51DA               	movf	218,w,b	;volatile
  2285   0019F8  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2286   0019FA  0BDF               	andlw	-33
  2287   0019FC  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2288   0019FE  6FDA               	movwf	218,b	;volatile
  2289   001A00                     
  2290                           ; BSR set to: 14
  2291                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2292   001A00  89DA               	bsf	218,4,b	;volatile
  2293   001A02                     
  2294                           ; BSR set to: 14
  2295                           ;i2c.c: 61:   return tmp;
  2296   001A02  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  2297   001A04                     
  2298                           ; BSR set to: 14
  2299   001A04  0012               	return		;funcret
  2300   001A06                     __end_of_I2C_2_Master_Read:
  2301                           	callstack 0
  2302                           
  2303 ;; *************** function _color_normalise *****************
  2304 ;; Defined at:
  2305 ;;		line 95 in file "color.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  RGBC            8   30[COMRAM] struct RGBC_val
  2308 ;;  RGBC_n          1   38[COMRAM] PTR struct RGBC_val
  2309 ;;		 -> main@RGBC_n(8), 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2321 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2323 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2324 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2325 ;;Total ram usage:       11 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; Hardware stack levels required when called: 4
  2328 ;; This function calls:
  2329 ;;		___aldiv
  2330 ;;		___lmul
  2331 ;; This function is called by:
  2332 ;;		_main
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text16
  2337   001336                     __ptext16:
  2338                           	callstack 0
  2339   001336                     _color_normalise:
  2340                           	callstack 26
  2341   001336                     
  2342                           ;color.c: 113:     RGBC_n->C = RGBC.C;
  2343   001336  5027               	movf	color_normalise@RGBC_n^0,w,c
  2344   001338  6ED9               	movwf	fsr2l,c
  2345   00133A  6ADA               	clrf	fsr2h,c
  2346   00133C  0E06               	movlw	6
  2347   00133E  26D9               	addwf	fsr2l,f,c
  2348   001340  C025  FFDE         	movff	color_normalise@RGBC+6,postinc2
  2349   001344  C026  FFDD         	movff	color_normalise@RGBC+7,postdec2
  2350   001348                     
  2351                           ;color.c: 114:     RGBC_n->R = 1000L*RGBC.R/(RGBC.R+RGBC.G+RGBC.B);
  2352   001348  C01F  F005         	movff	color_normalise@RGBC,___lmul@multiplier
  2353   00134C  C020  F006         	movff	color_normalise@RGBC+1,___lmul@multiplier+1
  2354   001350  6A07               	clrf	(___lmul@multiplier+2)^0,c
  2355   001352  6A08               	clrf	(___lmul@multiplier+3)^0,c
  2356   001354  0EE8               	movlw	232
  2357   001356  6E09               	movwf	___lmul@multiplicand^0,c
  2358   001358  0E03               	movlw	3
  2359   00135A  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  2360   00135C  0E00               	movlw	0
  2361   00135E  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  2362   001360  0E00               	movlw	0
  2363   001362  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  2364   001364  EC49  F00C         	call	___lmul	;wreg free
  2365   001368  C005  F011         	movff	?___lmul,___aldiv@dividend
  2366   00136C  C006  F012         	movff	?___lmul+1,___aldiv@dividend+1
  2367   001370  C007  F013         	movff	?___lmul+2,___aldiv@dividend+2
  2368   001374  C008  F014         	movff	?___lmul+3,___aldiv@dividend+3
  2369   001378  5023               	movf	(color_normalise@RGBC+4)^0,w,c
  2370   00137A  2421               	addwf	(color_normalise@RGBC+2)^0,w,c
  2371   00137C  6E28               	movwf	??_color_normalise^0,c
  2372   00137E  5024               	movf	(color_normalise@RGBC+5)^0,w,c
  2373   001380  2022               	addwfc	(color_normalise@RGBC+3)^0,w,c
  2374   001382  6E29               	movwf	(??_color_normalise+1)^0,c
  2375   001384  501F               	movf	color_normalise@RGBC^0,w,c
  2376   001386  2628               	addwf	??_color_normalise^0,f,c
  2377   001388  5020               	movf	(color_normalise@RGBC+1)^0,w,c
  2378   00138A  2229               	addwfc	(??_color_normalise+1)^0,f,c
  2379   00138C  C028  F015         	movff	??_color_normalise,___aldiv@divisor
  2380   001390  C029  F016         	movff	??_color_normalise+1,___aldiv@divisor+1
  2381   001394  6A17               	clrf	(___aldiv@divisor+2)^0,c
  2382   001396  6A18               	clrf	(___aldiv@divisor+3)^0,c
  2383   001398  EC3C  F00A         	call	___aldiv	;wreg free
  2384   00139C  5027               	movf	color_normalise@RGBC_n^0,w,c
  2385   00139E  6ED9               	movwf	fsr2l,c
  2386   0013A0  6ADA               	clrf	fsr2h,c
  2387   0013A2  C011  FFDE         	movff	?___aldiv,postinc2
  2388   0013A6  C012  FFDD         	movff	?___aldiv+1,postdec2
  2389   0013AA                     
  2390                           ;color.c: 115:     RGBC_n->G = 1000L*RGBC.G/(RGBC.R+RGBC.G+RGBC.B);
  2391   0013AA  C021  F005         	movff	color_normalise@RGBC+2,___lmul@multiplier
  2392   0013AE  C022  F006         	movff	color_normalise@RGBC+3,___lmul@multiplier+1
  2393   0013B2  6A07               	clrf	(___lmul@multiplier+2)^0,c
  2394   0013B4  6A08               	clrf	(___lmul@multiplier+3)^0,c
  2395   0013B6  0EE8               	movlw	232
  2396   0013B8  6E09               	movwf	___lmul@multiplicand^0,c
  2397   0013BA  0E03               	movlw	3
  2398   0013BC  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  2399   0013BE  0E00               	movlw	0
  2400   0013C0  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  2401   0013C2  0E00               	movlw	0
  2402   0013C4  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  2403   0013C6  EC49  F00C         	call	___lmul	;wreg free
  2404   0013CA  C005  F011         	movff	?___lmul,___aldiv@dividend
  2405   0013CE  C006  F012         	movff	?___lmul+1,___aldiv@dividend+1
  2406   0013D2  C007  F013         	movff	?___lmul+2,___aldiv@dividend+2
  2407   0013D6  C008  F014         	movff	?___lmul+3,___aldiv@dividend+3
  2408   0013DA  5023               	movf	(color_normalise@RGBC+4)^0,w,c
  2409   0013DC  2421               	addwf	(color_normalise@RGBC+2)^0,w,c
  2410   0013DE  6E28               	movwf	??_color_normalise^0,c
  2411   0013E0  5024               	movf	(color_normalise@RGBC+5)^0,w,c
  2412   0013E2  2022               	addwfc	(color_normalise@RGBC+3)^0,w,c
  2413   0013E4  6E29               	movwf	(??_color_normalise+1)^0,c
  2414   0013E6  501F               	movf	color_normalise@RGBC^0,w,c
  2415   0013E8  2628               	addwf	??_color_normalise^0,f,c
  2416   0013EA  5020               	movf	(color_normalise@RGBC+1)^0,w,c
  2417   0013EC  2229               	addwfc	(??_color_normalise+1)^0,f,c
  2418   0013EE  C028  F015         	movff	??_color_normalise,___aldiv@divisor
  2419   0013F2  C029  F016         	movff	??_color_normalise+1,___aldiv@divisor+1
  2420   0013F6  6A17               	clrf	(___aldiv@divisor+2)^0,c
  2421   0013F8  6A18               	clrf	(___aldiv@divisor+3)^0,c
  2422   0013FA  EC3C  F00A         	call	___aldiv	;wreg free
  2423   0013FE  5027               	movf	color_normalise@RGBC_n^0,w,c
  2424   001400  6ED9               	movwf	fsr2l,c
  2425   001402  6ADA               	clrf	fsr2h,c
  2426   001404  0E02               	movlw	2
  2427   001406  26D9               	addwf	fsr2l,f,c
  2428   001408  C011  FFDE         	movff	?___aldiv,postinc2
  2429   00140C  C012  FFDD         	movff	?___aldiv+1,postdec2
  2430   001410                     
  2431                           ;color.c: 116:     RGBC_n->B = 1000L*RGBC.B/(RGBC.R+RGBC.G+RGBC.B);
  2432   001410  C023  F005         	movff	color_normalise@RGBC+4,___lmul@multiplier
  2433   001414  C024  F006         	movff	color_normalise@RGBC+5,___lmul@multiplier+1
  2434   001418  6A07               	clrf	(___lmul@multiplier+2)^0,c
  2435   00141A  6A08               	clrf	(___lmul@multiplier+3)^0,c
  2436   00141C  0EE8               	movlw	232
  2437   00141E  6E09               	movwf	___lmul@multiplicand^0,c
  2438   001420  0E03               	movlw	3
  2439   001422  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  2440   001424  0E00               	movlw	0
  2441   001426  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  2442   001428  0E00               	movlw	0
  2443   00142A  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  2444   00142C  EC49  F00C         	call	___lmul	;wreg free
  2445   001430  C005  F011         	movff	?___lmul,___aldiv@dividend
  2446   001434  C006  F012         	movff	?___lmul+1,___aldiv@dividend+1
  2447   001438  C007  F013         	movff	?___lmul+2,___aldiv@dividend+2
  2448   00143C  C008  F014         	movff	?___lmul+3,___aldiv@dividend+3
  2449   001440  5023               	movf	(color_normalise@RGBC+4)^0,w,c
  2450   001442  2421               	addwf	(color_normalise@RGBC+2)^0,w,c
  2451   001444  6E28               	movwf	??_color_normalise^0,c
  2452   001446  5024               	movf	(color_normalise@RGBC+5)^0,w,c
  2453   001448  2022               	addwfc	(color_normalise@RGBC+3)^0,w,c
  2454   00144A  6E29               	movwf	(??_color_normalise+1)^0,c
  2455   00144C  501F               	movf	color_normalise@RGBC^0,w,c
  2456   00144E  2628               	addwf	??_color_normalise^0,f,c
  2457   001450  5020               	movf	(color_normalise@RGBC+1)^0,w,c
  2458   001452  2229               	addwfc	(??_color_normalise+1)^0,f,c
  2459   001454  C028  F015         	movff	??_color_normalise,___aldiv@divisor
  2460   001458  C029  F016         	movff	??_color_normalise+1,___aldiv@divisor+1
  2461   00145C  6A17               	clrf	(___aldiv@divisor+2)^0,c
  2462   00145E  6A18               	clrf	(___aldiv@divisor+3)^0,c
  2463   001460  EC3C  F00A         	call	___aldiv	;wreg free
  2464   001464  5027               	movf	color_normalise@RGBC_n^0,w,c
  2465   001466  6ED9               	movwf	fsr2l,c
  2466   001468  6ADA               	clrf	fsr2h,c
  2467   00146A  0E04               	movlw	4
  2468   00146C  26D9               	addwf	fsr2l,f,c
  2469   00146E  C011  FFDE         	movff	?___aldiv,postinc2
  2470   001472  C012  FFDD         	movff	?___aldiv+1,postdec2
  2471   001476  0012               	return		;funcret
  2472   001478                     __end_of_color_normalise:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function ___lmul *****************
  2476 ;; Defined at:
  2477 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  multiplier      4    4[COMRAM] unsigned long 
  2480 ;;  multiplicand    4    8[COMRAM] unsigned long 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  product         4   12[COMRAM] unsigned long 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  4    4[COMRAM] unsigned long 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2492 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2493 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2496 ;;Total ram usage:       12 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 3
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_color_normalise
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text17
  2507   001892                     __ptext17:
  2508                           	callstack 0
  2509   001892                     ___lmul:
  2510                           	callstack 26
  2511   001892  0E00               	movlw	0
  2512   001894  6E0D               	movwf	___lmul@product^0,c
  2513   001896  0E00               	movlw	0
  2514   001898  6E0E               	movwf	(___lmul@product+1)^0,c
  2515   00189A  0E00               	movlw	0
  2516   00189C  6E0F               	movwf	(___lmul@product+2)^0,c
  2517   00189E  0E00               	movlw	0
  2518   0018A0  6E10               	movwf	(___lmul@product+3)^0,c
  2519   0018A2                     l1789:
  2520   0018A2  A005               	btfss	___lmul@multiplier^0,0,c
  2521   0018A4  EF56  F00C         	goto	u1121
  2522   0018A8  EF58  F00C         	goto	u1120
  2523   0018AC                     u1121:
  2524   0018AC  EF60  F00C         	goto	l1793
  2525   0018B0                     u1120:
  2526   0018B0  5009               	movf	___lmul@multiplicand^0,w,c
  2527   0018B2  260D               	addwf	___lmul@product^0,f,c
  2528   0018B4  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  2529   0018B6  220E               	addwfc	(___lmul@product+1)^0,f,c
  2530   0018B8  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  2531   0018BA  220F               	addwfc	(___lmul@product+2)^0,f,c
  2532   0018BC  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  2533   0018BE  2210               	addwfc	(___lmul@product+3)^0,f,c
  2534   0018C0                     l1793:
  2535   0018C0  90D8               	bcf	status,0,c
  2536   0018C2  3609               	rlcf	___lmul@multiplicand^0,f,c
  2537   0018C4  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2538   0018C6  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2539   0018C8  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2540   0018CA  90D8               	bcf	status,0,c
  2541   0018CC  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  2542   0018CE  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  2543   0018D0  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  2544   0018D2  3205               	rrcf	___lmul@multiplier^0,f,c
  2545   0018D4  5005               	movf	___lmul@multiplier^0,w,c
  2546   0018D6  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  2547   0018D8  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  2548   0018DA  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  2549   0018DC  A4D8               	btfss	status,2,c
  2550   0018DE  EF73  F00C         	goto	u1131
  2551   0018E2  EF75  F00C         	goto	u1130
  2552   0018E6                     u1131:
  2553   0018E6  EF51  F00C         	goto	l1789
  2554   0018EA                     u1130:
  2555   0018EA  C00D  F005         	movff	___lmul@product,?___lmul
  2556   0018EE  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  2557   0018F2  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  2558   0018F6  C010  F008         	movff	___lmul@product+3,?___lmul+3
  2559   0018FA  0012               	return		;funcret
  2560   0018FC                     __end_of___lmul:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function ___aldiv *****************
  2564 ;; Defined at:
  2565 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  dividend        4   16[COMRAM] long 
  2568 ;;  divisor         4   20[COMRAM] long 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  quotient        4   26[COMRAM] long 
  2571 ;;  sign            1   25[COMRAM] unsigned char 
  2572 ;;  counter         1   24[COMRAM] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  4   16[COMRAM] long 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, status,0
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2582 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2585 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2586 ;;Total ram usage:       14 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; Hardware stack levels required when called: 3
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_color_normalise
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text18
  2597   001478                     __ptext18:
  2598                           	callstack 0
  2599   001478                     ___aldiv:
  2600                           	callstack 26
  2601   001478  0E00               	movlw	0
  2602   00147A  6E1A               	movwf	___aldiv@sign^0,c
  2603   00147C  BE18               	btfsc	(___aldiv@divisor+3)^0,7,c
  2604   00147E  EF45  F00A         	goto	u1140
  2605   001482  EF43  F00A         	goto	u1141
  2606   001486                     u1141:
  2607   001486  EF4F  F00A         	goto	l1805
  2608   00148A                     u1140:
  2609   00148A  1E18               	comf	(___aldiv@divisor+3)^0,f,c
  2610   00148C  1E17               	comf	(___aldiv@divisor+2)^0,f,c
  2611   00148E  1E16               	comf	(___aldiv@divisor+1)^0,f,c
  2612   001490  6C15               	negf	___aldiv@divisor^0,c
  2613   001492  0E00               	movlw	0
  2614   001494  2216               	addwfc	(___aldiv@divisor+1)^0,f,c
  2615   001496  2217               	addwfc	(___aldiv@divisor+2)^0,f,c
  2616   001498  2218               	addwfc	(___aldiv@divisor+3)^0,f,c
  2617   00149A  0E01               	movlw	1
  2618   00149C  6E1A               	movwf	___aldiv@sign^0,c
  2619   00149E                     l1805:
  2620   00149E  BE14               	btfsc	(___aldiv@dividend+3)^0,7,c
  2621   0014A0  EF56  F00A         	goto	u1150
  2622   0014A4  EF54  F00A         	goto	u1151
  2623   0014A8                     u1151:
  2624   0014A8  EF60  F00A         	goto	l1811
  2625   0014AC                     u1150:
  2626   0014AC  1E14               	comf	(___aldiv@dividend+3)^0,f,c
  2627   0014AE  1E13               	comf	(___aldiv@dividend+2)^0,f,c
  2628   0014B0  1E12               	comf	(___aldiv@dividend+1)^0,f,c
  2629   0014B2  6C11               	negf	___aldiv@dividend^0,c
  2630   0014B4  0E00               	movlw	0
  2631   0014B6  2212               	addwfc	(___aldiv@dividend+1)^0,f,c
  2632   0014B8  2213               	addwfc	(___aldiv@dividend+2)^0,f,c
  2633   0014BA  2214               	addwfc	(___aldiv@dividend+3)^0,f,c
  2634   0014BC  0E01               	movlw	1
  2635   0014BE  1A1A               	xorwf	___aldiv@sign^0,f,c
  2636   0014C0                     l1811:
  2637   0014C0  0E00               	movlw	0
  2638   0014C2  6E1B               	movwf	___aldiv@quotient^0,c
  2639   0014C4  0E00               	movlw	0
  2640   0014C6  6E1C               	movwf	(___aldiv@quotient+1)^0,c
  2641   0014C8  0E00               	movlw	0
  2642   0014CA  6E1D               	movwf	(___aldiv@quotient+2)^0,c
  2643   0014CC  0E00               	movlw	0
  2644   0014CE  6E1E               	movwf	(___aldiv@quotient+3)^0,c
  2645   0014D0  5015               	movf	___aldiv@divisor^0,w,c
  2646   0014D2  1016               	iorwf	(___aldiv@divisor+1)^0,w,c
  2647   0014D4  1017               	iorwf	(___aldiv@divisor+2)^0,w,c
  2648   0014D6  1018               	iorwf	(___aldiv@divisor+3)^0,w,c
  2649   0014D8  B4D8               	btfsc	status,2,c
  2650   0014DA  EF71  F00A         	goto	u1161
  2651   0014DE  EF73  F00A         	goto	u1160
  2652   0014E2                     u1161:
  2653   0014E2  EFA9  F00A         	goto	l1833
  2654   0014E6                     u1160:
  2655   0014E6  0E01               	movlw	1
  2656   0014E8  6E19               	movwf	___aldiv@counter^0,c
  2657   0014EA  EF7D  F00A         	goto	l1819
  2658   0014EE                     l1817:
  2659   0014EE  90D8               	bcf	status,0,c
  2660   0014F0  3615               	rlcf	___aldiv@divisor^0,f,c
  2661   0014F2  3616               	rlcf	(___aldiv@divisor+1)^0,f,c
  2662   0014F4  3617               	rlcf	(___aldiv@divisor+2)^0,f,c
  2663   0014F6  3618               	rlcf	(___aldiv@divisor+3)^0,f,c
  2664   0014F8  2A19               	incf	___aldiv@counter^0,f,c
  2665   0014FA                     l1819:
  2666   0014FA  AE18               	btfss	(___aldiv@divisor+3)^0,7,c
  2667   0014FC  EF82  F00A         	goto	u1171
  2668   001500  EF84  F00A         	goto	u1170
  2669   001504                     u1171:
  2670   001504  EF77  F00A         	goto	l1817
  2671   001508                     u1170:
  2672   001508                     l1821:
  2673   001508  90D8               	bcf	status,0,c
  2674   00150A  361B               	rlcf	___aldiv@quotient^0,f,c
  2675   00150C  361C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2676   00150E  361D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2677   001510  361E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2678   001512  5015               	movf	___aldiv@divisor^0,w,c
  2679   001514  5C11               	subwf	___aldiv@dividend^0,w,c
  2680   001516  5016               	movf	(___aldiv@divisor+1)^0,w,c
  2681   001518  5812               	subwfb	(___aldiv@dividend+1)^0,w,c
  2682   00151A  5017               	movf	(___aldiv@divisor+2)^0,w,c
  2683   00151C  5813               	subwfb	(___aldiv@dividend+2)^0,w,c
  2684   00151E  5018               	movf	(___aldiv@divisor+3)^0,w,c
  2685   001520  5814               	subwfb	(___aldiv@dividend+3)^0,w,c
  2686   001522  A0D8               	btfss	status,0,c
  2687   001524  EF96  F00A         	goto	u1181
  2688   001528  EF98  F00A         	goto	u1180
  2689   00152C                     u1181:
  2690   00152C  EFA1  F00A         	goto	l1829
  2691   001530                     u1180:
  2692   001530  5015               	movf	___aldiv@divisor^0,w,c
  2693   001532  5E11               	subwf	___aldiv@dividend^0,f,c
  2694   001534  5016               	movf	(___aldiv@divisor+1)^0,w,c
  2695   001536  5A12               	subwfb	(___aldiv@dividend+1)^0,f,c
  2696   001538  5017               	movf	(___aldiv@divisor+2)^0,w,c
  2697   00153A  5A13               	subwfb	(___aldiv@dividend+2)^0,f,c
  2698   00153C  5018               	movf	(___aldiv@divisor+3)^0,w,c
  2699   00153E  5A14               	subwfb	(___aldiv@dividend+3)^0,f,c
  2700   001540  801B               	bsf	___aldiv@quotient^0,0,c
  2701   001542                     l1829:
  2702   001542  90D8               	bcf	status,0,c
  2703   001544  3218               	rrcf	(___aldiv@divisor+3)^0,f,c
  2704   001546  3217               	rrcf	(___aldiv@divisor+2)^0,f,c
  2705   001548  3216               	rrcf	(___aldiv@divisor+1)^0,f,c
  2706   00154A  3215               	rrcf	___aldiv@divisor^0,f,c
  2707   00154C  2E19               	decfsz	___aldiv@counter^0,f,c
  2708   00154E  EF84  F00A         	goto	l1821
  2709   001552                     l1833:
  2710   001552  501A               	movf	___aldiv@sign^0,w,c
  2711   001554  B4D8               	btfsc	status,2,c
  2712   001556  EFAF  F00A         	goto	u1191
  2713   00155A  EFB1  F00A         	goto	u1190
  2714   00155E                     u1191:
  2715   00155E  EFB9  F00A         	goto	l1837
  2716   001562                     u1190:
  2717   001562  1E1E               	comf	(___aldiv@quotient+3)^0,f,c
  2718   001564  1E1D               	comf	(___aldiv@quotient+2)^0,f,c
  2719   001566  1E1C               	comf	(___aldiv@quotient+1)^0,f,c
  2720   001568  6C1B               	negf	___aldiv@quotient^0,c
  2721   00156A  0E00               	movlw	0
  2722   00156C  221C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2723   00156E  221D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2724   001570  221E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2725   001572                     l1837:
  2726   001572  C01B  F011         	movff	___aldiv@quotient,?___aldiv
  2727   001576  C01C  F012         	movff	___aldiv@quotient+1,?___aldiv+1
  2728   00157A  C01D  F013         	movff	___aldiv@quotient+2,?___aldiv+2
  2729   00157E  C01E  F014         	movff	___aldiv@quotient+3,?___aldiv+3
  2730   001582  0012               	return		;funcret
  2731   001584                     __end_of___aldiv:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function _color_detect *****************
  2735 ;; Defined at:
  2736 ;;		line 119 in file "color.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  RGBC_n          8    4[COMRAM] struct RGBC_val
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  color           1   12[COMRAM] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      unsigned char 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2750 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;Total ram usage:        9 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 3
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_main
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text19
  2765   0011BA                     __ptext19:
  2766                           	callstack 0
  2767   0011BA                     _color_detect:
  2768                           	callstack 27
  2769   0011BA                     
  2770                           ;color.c: 119: unsigned char color_detect(RGBC_val RGBC_n);color.c: 120: {;color.c: 121:
      +                               unsigned char color=0;
  2771   0011BA  0E00               	movlw	0
  2772   0011BC  6E0D               	movwf	color_detect@color^0,c
  2773   0011BE                     
  2774                           ;color.c: 122:     if (RGBC_n.R > 300) {
  2775   0011BE  0E2D               	movlw	45
  2776   0011C0  5C05               	subwf	color_detect@RGBC_n^0,w,c
  2777   0011C2  0E01               	movlw	1
  2778   0011C4  5806               	subwfb	(color_detect@RGBC_n+1)^0,w,c
  2779   0011C6  A0D8               	btfss	status,0,c
  2780   0011C8  EFE8  F008         	goto	u1241
  2781   0011CC  EFEA  F008         	goto	u1240
  2782   0011D0                     u1241:
  2783   0011D0  EFEE  F008         	goto	l1927
  2784   0011D4                     u1240:
  2785   0011D4                     
  2786                           ;color.c: 123:         color = 1;
  2787   0011D4  0E01               	movlw	1
  2788   0011D6  6E0D               	movwf	color_detect@color^0,c
  2789                           
  2790                           ;color.c: 124:     }
  2791   0011D8  EF99  F009         	goto	l98
  2792   0011DC                     l1927:
  2793   0011DC  0E2D               	movlw	45
  2794   0011DE  5C07               	subwf	(color_detect@RGBC_n+2)^0,w,c
  2795   0011E0  0E01               	movlw	1
  2796   0011E2  5808               	subwfb	(color_detect@RGBC_n+3)^0,w,c
  2797   0011E4  A0D8               	btfss	status,0,c
  2798   0011E6  EFF7  F008         	goto	u1251
  2799   0011EA  EFF9  F008         	goto	u1250
  2800   0011EE                     u1251:
  2801   0011EE  EFFD  F008         	goto	l1931
  2802   0011F2                     u1250:
  2803   0011F2                     
  2804                           ;color.c: 126:         color = 2;
  2805   0011F2  0E02               	movlw	2
  2806   0011F4  6E0D               	movwf	color_detect@color^0,c
  2807                           
  2808                           ;color.c: 127:     }
  2809   0011F6  EF99  F009         	goto	l98
  2810   0011FA                     l1931:
  2811   0011FA  0E2D               	movlw	45
  2812   0011FC  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2813   0011FE  0E01               	movlw	1
  2814   001200  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2815   001202  A0D8               	btfss	status,0,c
  2816   001204  EF06  F009         	goto	u1261
  2817   001208  EF08  F009         	goto	u1260
  2818   00120C                     u1261:
  2819   00120C  EF0C  F009         	goto	l1935
  2820   001210                     u1260:
  2821   001210                     
  2822                           ;color.c: 129:         color = 3;
  2823   001210  0E03               	movlw	3
  2824   001212  6E0D               	movwf	color_detect@color^0,c
  2825                           
  2826                           ;color.c: 130:     }
  2827   001214  EF99  F009         	goto	l98
  2828   001218                     l1935:
  2829   001218  0E2D               	movlw	45
  2830   00121A  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2831   00121C  0E01               	movlw	1
  2832   00121E  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2833   001220  A0D8               	btfss	status,0,c
  2834   001222  EF15  F009         	goto	u1271
  2835   001226  EF17  F009         	goto	u1270
  2836   00122A                     u1271:
  2837   00122A  EF26  F009         	goto	l1941
  2838   00122E                     u1270:
  2839   00122E  0E2D               	movlw	45
  2840   001230  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2841   001232  0E01               	movlw	1
  2842   001234  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2843   001236  A0D8               	btfss	status,0,c
  2844   001238  EF20  F009         	goto	u1281
  2845   00123C  EF22  F009         	goto	u1280
  2846   001240                     u1281:
  2847   001240  EF26  F009         	goto	l1941
  2848   001244                     u1280:
  2849   001244                     
  2850                           ;color.c: 132:         color = 4;
  2851   001244  0E04               	movlw	4
  2852   001246  6E0D               	movwf	color_detect@color^0,c
  2853                           
  2854                           ;color.c: 133:     }
  2855   001248  EF99  F009         	goto	l98
  2856   00124C                     l1941:
  2857   00124C  0E2D               	movlw	45
  2858   00124E  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2859   001250  0E01               	movlw	1
  2860   001252  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2861   001254  A0D8               	btfss	status,0,c
  2862   001256  EF2F  F009         	goto	u1291
  2863   00125A  EF31  F009         	goto	u1290
  2864   00125E                     u1291:
  2865   00125E  EF40  F009         	goto	l1947
  2866   001262                     u1290:
  2867   001262  0E2D               	movlw	45
  2868   001264  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2869   001266  0E01               	movlw	1
  2870   001268  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2871   00126A  A0D8               	btfss	status,0,c
  2872   00126C  EF3A  F009         	goto	u1301
  2873   001270  EF3C  F009         	goto	u1300
  2874   001274                     u1301:
  2875   001274  EF40  F009         	goto	l1947
  2876   001278                     u1300:
  2877   001278                     
  2878                           ;color.c: 135:         color = 5;
  2879   001278  0E05               	movlw	5
  2880   00127A  6E0D               	movwf	color_detect@color^0,c
  2881                           
  2882                           ;color.c: 136:     }
  2883   00127C  EF99  F009         	goto	l98
  2884   001280                     l1947:
  2885   001280  0E2D               	movlw	45
  2886   001282  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2887   001284  0E01               	movlw	1
  2888   001286  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2889   001288  A0D8               	btfss	status,0,c
  2890   00128A  EF49  F009         	goto	u1311
  2891   00128E  EF4B  F009         	goto	u1310
  2892   001292                     u1311:
  2893   001292  EF5A  F009         	goto	l1953
  2894   001296                     u1310:
  2895   001296  0E2D               	movlw	45
  2896   001298  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2897   00129A  0E01               	movlw	1
  2898   00129C  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2899   00129E  A0D8               	btfss	status,0,c
  2900   0012A0  EF54  F009         	goto	u1321
  2901   0012A4  EF56  F009         	goto	u1320
  2902   0012A8                     u1321:
  2903   0012A8  EF5A  F009         	goto	l1953
  2904   0012AC                     u1320:
  2905   0012AC                     
  2906                           ;color.c: 138:         color = 6;
  2907   0012AC  0E06               	movlw	6
  2908   0012AE  6E0D               	movwf	color_detect@color^0,c
  2909                           
  2910                           ;color.c: 139:     }
  2911   0012B0  EF99  F009         	goto	l98
  2912   0012B4                     l1953:
  2913   0012B4  0E2D               	movlw	45
  2914   0012B6  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2915   0012B8  0E01               	movlw	1
  2916   0012BA  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2917   0012BC  A0D8               	btfss	status,0,c
  2918   0012BE  EF63  F009         	goto	u1331
  2919   0012C2  EF65  F009         	goto	u1330
  2920   0012C6                     u1331:
  2921   0012C6  EF74  F009         	goto	l1959
  2922   0012CA                     u1330:
  2923   0012CA  0E2D               	movlw	45
  2924   0012CC  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2925   0012CE  0E01               	movlw	1
  2926   0012D0  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2927   0012D2  A0D8               	btfss	status,0,c
  2928   0012D4  EF6E  F009         	goto	u1341
  2929   0012D8  EF70  F009         	goto	u1340
  2930   0012DC                     u1341:
  2931   0012DC  EF74  F009         	goto	l1959
  2932   0012E0                     u1340:
  2933   0012E0                     
  2934                           ;color.c: 141:         color = 7;
  2935   0012E0  0E07               	movlw	7
  2936   0012E2  6E0D               	movwf	color_detect@color^0,c
  2937                           
  2938                           ;color.c: 142:     }
  2939   0012E4  EF99  F009         	goto	l98
  2940   0012E8                     l1959:
  2941   0012E8  0E2D               	movlw	45
  2942   0012EA  5C05               	subwf	color_detect@RGBC_n^0,w,c
  2943   0012EC  0E01               	movlw	1
  2944   0012EE  5806               	subwfb	(color_detect@RGBC_n+1)^0,w,c
  2945   0012F0  A0D8               	btfss	status,0,c
  2946   0012F2  EF7D  F009         	goto	u1351
  2947   0012F6  EF7F  F009         	goto	u1350
  2948   0012FA                     u1351:
  2949   0012FA  EF99  F009         	goto	l106
  2950   0012FE                     u1350:
  2951   0012FE  0E2D               	movlw	45
  2952   001300  5C07               	subwf	(color_detect@RGBC_n+2)^0,w,c
  2953   001302  0E01               	movlw	1
  2954   001304  5808               	subwfb	(color_detect@RGBC_n+3)^0,w,c
  2955   001306  A0D8               	btfss	status,0,c
  2956   001308  EF88  F009         	goto	u1361
  2957   00130C  EF8A  F009         	goto	u1360
  2958   001310                     u1361:
  2959   001310  EF99  F009         	goto	l106
  2960   001314                     u1360:
  2961   001314  0E2D               	movlw	45
  2962   001316  5C09               	subwf	(color_detect@RGBC_n+4)^0,w,c
  2963   001318  0E01               	movlw	1
  2964   00131A  580A               	subwfb	(color_detect@RGBC_n+5)^0,w,c
  2965   00131C  A0D8               	btfss	status,0,c
  2966   00131E  EF93  F009         	goto	u1371
  2967   001322  EF95  F009         	goto	u1370
  2968   001326                     u1371:
  2969   001326  EF99  F009         	goto	l106
  2970   00132A                     u1370:
  2971   00132A                     
  2972                           ;color.c: 144:         color = 8;
  2973   00132A  0E08               	movlw	8
  2974   00132C  6E0D               	movwf	color_detect@color^0,c
  2975   00132E  EF99  F009         	goto	l98
  2976   001332                     l106:
  2977   001332                     l98:
  2978                           
  2979                           ;color.c: 146:     return color;
  2980   001332  500D               	movf	color_detect@color^0,w,c
  2981   001334  0012               	return		;funcret
  2982   001336                     __end_of_color_detect:
  2983                           	callstack 0
  2984                           
  2985 ;; *************** function _color_click_init *****************
  2986 ;; Defined at:
  2987 ;;		line 5 in file "color.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;		None
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2, status,0, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3005 ;;Total ram usage:        1 bytes
  3006 ;; Hardware stack levels used: 1
  3007 ;; Hardware stack levels required when called: 6
  3008 ;; This function calls:
  3009 ;;		_I2C_2_Master_Init
  3010 ;;		_color_writetoaddr
  3011 ;; This function is called by:
  3012 ;;		_main
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text20
  3017   0018FC                     __ptext20:
  3018                           	callstack 0
  3019   0018FC                     _color_click_init:
  3020                           	callstack 24
  3021   0018FC                     
  3022                           ;color.c: 8:     I2C_2_Master_Init();
  3023   0018FC  EC8A  F00D         	call	_I2C_2_Master_Init	;wreg free
  3024   001900                     
  3025                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3026   001900  0E01               	movlw	1
  3027   001902  6E07               	movwf	color_writetoaddr@value^0,c
  3028   001904  0E00               	movlw	0
  3029   001906  EC12  F00E         	call	_color_writetoaddr
  3030   00190A                     
  3031                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3032   00190A  0E3F               	movlw	63
  3033   00190C  6E09               	movwf	??_color_click_init^0,c
  3034   00190E  0E55               	movlw	85
  3035   001910                     u1527:
  3036   001910  2EE8               	decfsz	wreg,f,c
  3037   001912  D7FE               	bra	u1527
  3038   001914  2E09               	decfsz	??_color_click_init^0,f,c
  3039   001916  D7FC               	bra	u1527
  3040   001918  0000               	nop	
  3041   00191A                     
  3042                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3043   00191A  0E03               	movlw	3
  3044   00191C  6E07               	movwf	color_writetoaddr@value^0,c
  3045   00191E  0E00               	movlw	0
  3046   001920  EC12  F00E         	call	_color_writetoaddr
  3047   001924                     
  3048                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3049   001924  0ED5               	movlw	213
  3050   001926  6E07               	movwf	color_writetoaddr@value^0,c
  3051   001928  0E01               	movlw	1
  3052   00192A  EC12  F00E         	call	_color_writetoaddr
  3053   00192E                     
  3054                           ;color.c: 21:  color_writetoaddr(0x00, 0x13);
  3055   00192E  0E13               	movlw	19
  3056   001930  6E07               	movwf	color_writetoaddr@value^0,c
  3057   001932  0E00               	movlw	0
  3058   001934  EC12  F00E         	call	_color_writetoaddr
  3059   001938                     
  3060                           ;color.c: 22:     color_writetoaddr(0x07, 0x07);
  3061   001938  0E07               	movlw	7
  3062   00193A  6E07               	movwf	color_writetoaddr@value^0,c
  3063   00193C  0E07               	movlw	7
  3064   00193E  EC12  F00E         	call	_color_writetoaddr
  3065   001942                     
  3066                           ;color.c: 23:     color_writetoaddr(0x06, 0xD0);
  3067   001942  0ED0               	movlw	208
  3068   001944  6E07               	movwf	color_writetoaddr@value^0,c
  3069   001946  0E06               	movlw	6
  3070   001948  EC12  F00E         	call	_color_writetoaddr
  3071   00194C                     
  3072                           ;color.c: 24:     color_writetoaddr(0x05, 0x00);
  3073   00194C  0E00               	movlw	0
  3074   00194E  6E07               	movwf	color_writetoaddr@value^0,c
  3075   001950  0E05               	movlw	5
  3076   001952  EC12  F00E         	call	_color_writetoaddr
  3077   001956                     
  3078                           ;color.c: 25:     color_writetoaddr(0x04, 0x00);
  3079   001956  0E00               	movlw	0
  3080   001958  6E07               	movwf	color_writetoaddr@value^0,c
  3081   00195A  0E04               	movlw	4
  3082   00195C  EC12  F00E         	call	_color_writetoaddr
  3083   001960  0012               	return		;funcret
  3084   001962                     __end_of_color_click_init:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _color_writetoaddr *****************
  3088 ;; Defined at:
  3089 ;;		line 31 in file "color.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  address         1    wreg     unsigned char 
  3092 ;;  value           1    6[COMRAM] unsigned char 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  address         1    7[COMRAM] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3104 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3108 ;;Total ram usage:        2 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 5
  3111 ;; This function calls:
  3112 ;;		_I2C_2_Master_Start
  3113 ;;		_I2C_2_Master_Stop
  3114 ;;		_I2C_2_Master_Write
  3115 ;; This function is called by:
  3116 ;;		_color_click_init
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text21
  3121   001C24                     __ptext21:
  3122                           	callstack 0
  3123   001C24                     _color_writetoaddr:
  3124                           	callstack 24
  3125                           
  3126                           ;incstack = 0
  3127                           ;color_writetoaddr@address stored from wreg
  3128   001C24  6E08               	movwf	color_writetoaddr@address^0,c
  3129   001C26                     
  3130                           ;color.c: 32:     I2C_2_Master_Start();
  3131   001C26  EC75  F00E         	call	_I2C_2_Master_Start	;wreg free
  3132                           
  3133                           ;color.c: 33:     I2C_2_Master_Write(0x52 | 0x00);
  3134   001C2A  0E52               	movlw	82
  3135   001C2C  EC5F  F00E         	call	_I2C_2_Master_Write
  3136                           
  3137                           ;color.c: 34:     I2C_2_Master_Write(0x80 | address);
  3138   001C30  5008               	movf	color_writetoaddr@address^0,w,c
  3139   001C32  0980               	iorlw	128
  3140   001C34  EC5F  F00E         	call	_I2C_2_Master_Write
  3141                           
  3142                           ;color.c: 35:     I2C_2_Master_Write(value);
  3143   001C38  5007               	movf	color_writetoaddr@value^0,w,c
  3144   001C3A  EC5F  F00E         	call	_I2C_2_Master_Write
  3145                           
  3146                           ;color.c: 36:     I2C_2_Master_Stop();
  3147   001C3E  EC70  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3148   001C42  0012               	return		;funcret
  3149   001C44                     __end_of_color_writetoaddr:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _I2C_2_Master_Write *****************
  3153 ;; Defined at:
  3154 ;;		line 45 in file "i2c.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  data_byte       1    wreg     unsigned char 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  data_byte       1    5[COMRAM] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2, status,0, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3171 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3172 ;;Total ram usage:        1 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 4
  3175 ;; This function calls:
  3176 ;;		_I2C_2_Master_Idle
  3177 ;; This function is called by:
  3178 ;;		_color_writetoaddr
  3179 ;;		_color_read
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text22
  3184   001CBE                     __ptext22:
  3185                           	callstack 0
  3186   001CBE                     _I2C_2_Master_Write:
  3187                           	callstack 25
  3188                           
  3189                           ;incstack = 0
  3190                           ;I2C_2_Master_Write@data_byte stored from wreg
  3191   001CBE  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3192   001CC0                     
  3193                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3194   001CC0  EC9F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3195   001CC4                     
  3196                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3197   001CC4  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3198   001CC8  0012               	return		;funcret
  3199   001CCA                     __end_of_I2C_2_Master_Write:
  3200                           	callstack 0
  3201                           
  3202 ;; *************** function _I2C_2_Master_Stop *****************
  3203 ;; Defined at:
  3204 ;;		line 39 in file "i2c.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3222 ;;Total ram usage:        0 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; Hardware stack levels required when called: 4
  3225 ;; This function calls:
  3226 ;;		_I2C_2_Master_Idle
  3227 ;; This function is called by:
  3228 ;;		_color_writetoaddr
  3229 ;;		_color_read
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text23
  3234   001CE0                     __ptext23:
  3235                           	callstack 0
  3236   001CE0                     _I2C_2_Master_Stop:
  3237                           	callstack 25
  3238   001CE0                     
  3239                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3240   001CE0  EC9F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3241   001CE4                     
  3242                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3243   001CE4  010E               	movlb	14	; () banked
  3244   001CE6  85DA               	bsf	218,2,b	;volatile
  3245   001CE8                     
  3246                           ; BSR set to: 14
  3247   001CE8  0012               	return		;funcret
  3248   001CEA                     __end_of_I2C_2_Master_Stop:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function _I2C_2_Master_Start *****************
  3252 ;; Defined at:
  3253 ;;		line 27 in file "i2c.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;Total ram usage:        0 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 4
  3274 ;; This function calls:
  3275 ;;		_I2C_2_Master_Idle
  3276 ;; This function is called by:
  3277 ;;		_color_writetoaddr
  3278 ;;		_color_read
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text24
  3283   001CEA                     __ptext24:
  3284                           	callstack 0
  3285   001CEA                     _I2C_2_Master_Start:
  3286                           	callstack 25
  3287   001CEA                     
  3288                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3289   001CEA  EC9F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3290   001CEE                     
  3291                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3292   001CEE  010E               	movlb	14	; () banked
  3293   001CF0  81DA               	bsf	218,0,b	;volatile
  3294   001CF2                     
  3295                           ; BSR set to: 14
  3296   001CF2  0012               	return		;funcret
  3297   001CF4                     __end_of_I2C_2_Master_Start:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _I2C_2_Master_Idle *****************
  3301 ;; Defined at:
  3302 ;;		line 22 in file "i2c.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3320 ;;Total ram usage:        1 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; Hardware stack levels required when called: 3
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_I2C_2_Master_Start
  3327 ;;		_I2C_2_Master_RepStart
  3328 ;;		_I2C_2_Master_Stop
  3329 ;;		_I2C_2_Master_Write
  3330 ;;		_I2C_2_Master_Read
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text25
  3335   001B3E                     __ptext25:
  3336                           	callstack 0
  3337   001B3E                     _I2C_2_Master_Idle:
  3338                           	callstack 25
  3339   001B3E                     l142:
  3340   001B3E  010E               	movlb	14	; () banked
  3341   001B40  B5D8               	btfsc	216,2,b	;volatile
  3342   001B42  EFA5  F00D         	goto	u781
  3343   001B46  EFA7  F00D         	goto	u780
  3344   001B4A                     u781:
  3345   001B4A  EF9F  F00D         	goto	l142
  3346   001B4E                     u780:
  3347   001B4E                     
  3348                           ; BSR set to: 14
  3349   001B4E  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3350   001B52  0E1F               	movlw	31
  3351   001B54  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3352   001B56  A4D8               	btfss	status,2,c
  3353   001B58  EFB0  F00D         	goto	u791
  3354   001B5C  EFB2  F00D         	goto	u790
  3355   001B60                     u791:
  3356   001B60  EF9F  F00D         	goto	l142
  3357   001B64                     u790:
  3358   001B64                     
  3359                           ; BSR set to: 14
  3360   001B64  0012               	return		;funcret
  3361   001B66                     __end_of_I2C_2_Master_Idle:
  3362                           	callstack 0
  3363                           
  3364 ;; *************** function _I2C_2_Master_Init *****************
  3365 ;; Defined at:
  3366 ;;		line 4 in file "i2c.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;Total ram usage:        0 bytes
  3385 ;; Hardware stack levels used: 1
  3386 ;; Hardware stack levels required when called: 3
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_color_click_init
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text26
  3395   001B14                     __ptext26:
  3396                           	callstack 0
  3397   001B14                     _I2C_2_Master_Init:
  3398                           	callstack 26
  3399   001B14                     
  3400                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3401   001B14  010E               	movlb	14	; () banked
  3402   001B16  51D9               	movf	217,w,b	;volatile
  3403   001B18  0BF0               	andlw	-16
  3404   001B1A  0908               	iorlw	8
  3405   001B1C  6FD9               	movwf	217,b	;volatile
  3406   001B1E                     
  3407                           ; BSR set to: 14
  3408                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3409   001B1E  8BD9               	bsf	217,5,b	;volatile
  3410                           
  3411                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3412   001B20  0E9F               	movlw	159
  3413   001B22  6FD6               	movwf	214,b	;volatile
  3414   001B24                     
  3415                           ; BSR set to: 14
  3416                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3417   001B24  8A84               	bsf	132,5,c	;volatile
  3418   001B26                     
  3419                           ; BSR set to: 14
  3420                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3421   001B26  8C84               	bsf	132,6,c	;volatile
  3422   001B28                     
  3423                           ; BSR set to: 14
  3424                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3425   001B28  9BA7               	bcf	167,5,b	;volatile
  3426   001B2A                     
  3427                           ; BSR set to: 14
  3428                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3429   001B2A  9DA7               	bcf	167,6,b	;volatile
  3430                           
  3431                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3432   001B2C  0E1D               	movlw	29
  3433   001B2E  6F1D               	movwf	29,b	;volatile
  3434                           
  3435                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3436   001B30  0E1E               	movlw	30
  3437   001B32  6F1C               	movwf	28,b	;volatile
  3438                           
  3439                           ;i2c.c: 18:   RD5PPS=0x1C;
  3440   001B34  0E1C               	movlw	28
  3441   001B36  6F6F               	movwf	111,b	;volatile
  3442                           
  3443                           ;i2c.c: 19:   RD6PPS=0x1B;
  3444   001B38  0E1B               	movlw	27
  3445   001B3A  6F70               	movwf	112,b	;volatile
  3446   001B3C                     
  3447                           ; BSR set to: 14
  3448   001B3C  0012               	return		;funcret
  3449   001B3E                     __end_of_I2C_2_Master_Init:
  3450                           	callstack 0
  3451                           
  3452 ;; *************** function _TxBufferedString *****************
  3453 ;; Defined at:
  3454 ;;		line 66 in file "serial.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  string          2    5[COMRAM] PTR unsigned char 
  3457 ;;		 -> STR_2(1), main@buf(40), 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3473 ;;Total ram usage:        2 bytes
  3474 ;; Hardware stack levels used: 1
  3475 ;; Hardware stack levels required when called: 4
  3476 ;; This function calls:
  3477 ;;		_putCharToTxBuf
  3478 ;; This function is called by:
  3479 ;;		_main
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text27
  3484   001962                     __ptext27:
  3485                           	callstack 0
  3486   001962                     _TxBufferedString:
  3487                           	callstack 26
  3488   001962                     
  3489                           ;serial.c: 67:     while(*string != 0){
  3490   001962  EFC8  F00C         	goto	l1991
  3491   001966                     l1987:
  3492                           
  3493                           ;serial.c: 68:   putCharToTxBuf(*string++);
  3494   001966  C006  FFF6         	movff	TxBufferedString@string,tblptrl
  3495   00196A  C007  FFF7         	movff	TxBufferedString@string+1,tblptrh
  3496   00196E  0E00               	movlw	low (__smallconst shr (0+16))
  3497   001970  6EF8               	movwf	tblptru,c
  3498   001972  0E0D               	movlw	(high __ramtop+-1)
  3499   001974  64F7               	cpfsgt	tblptrh,c
  3500   001976  D003               	bra	u1397
  3501   001978  0008               	tblrd		*
  3502   00197A  50F5               	movf	tablat,w,c
  3503   00197C  D005               	bra	u1390
  3504   00197E                     u1397:
  3505   00197E  CFF6 FFE9          	movff	tblptrl,fsr0l
  3506   001982  CFF7 FFEA          	movff	tblptrh,fsr0h
  3507   001986  50EF               	movf	indf0,w,c
  3508   001988                     u1390:
  3509   001988  ECC7  F00D         	call	_putCharToTxBuf
  3510   00198C  4A06               	infsnz	TxBufferedString@string^0,f,c
  3511   00198E  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  3512   001990                     l1991:
  3513                           
  3514                           ;serial.c: 67:     while(*string != 0){
  3515   001990  C006  FFF6         	movff	TxBufferedString@string,tblptrl
  3516   001994  C007  FFF7         	movff	TxBufferedString@string+1,tblptrh
  3517   001998  0E00               	movlw	low (__smallconst shr (0+16))
  3518   00199A  6EF8               	movwf	tblptru,c
  3519   00199C  0E0D               	movlw	(high __ramtop+-1)
  3520   00199E  64F7               	cpfsgt	tblptrh,c
  3521   0019A0  D003               	bra	u1407
  3522   0019A2  0008               	tblrd		*
  3523   0019A4  50F5               	movf	tablat,w,c
  3524   0019A6  D005               	bra	u1400
  3525   0019A8                     u1407:
  3526   0019A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  3527   0019AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  3528   0019B0  50EF               	movf	indf0,w,c
  3529   0019B2                     u1400:
  3530   0019B2  0900               	iorlw	0
  3531   0019B4  A4D8               	btfss	status,2,c
  3532   0019B6  EFDF  F00C         	goto	u1411
  3533   0019BA  EFE1  F00C         	goto	u1410
  3534   0019BE                     u1411:
  3535   0019BE  EFB3  F00C         	goto	l1987
  3536   0019C2                     u1410:
  3537   0019C2  0012               	return		;funcret
  3538   0019C4                     __end_of_TxBufferedString:
  3539                           	callstack 0
  3540                           
  3541 ;; *************** function _putCharToTxBuf *****************
  3542 ;; Defined at:
  3543 ;;		line 53 in file "serial.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  byte            1    wreg     unsigned char 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  byte            1    4[COMRAM] unsigned char 
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3561 ;;Total ram usage:        1 bytes
  3562 ;; Hardware stack levels used: 1
  3563 ;; Hardware stack levels required when called: 3
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_TxBufferedString
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text28
  3572   001B8E                     __ptext28:
  3573                           	callstack 0
  3574   001B8E                     _putCharToTxBuf:
  3575                           	callstack 26
  3576                           
  3577                           ;incstack = 0
  3578                           ;putCharToTxBuf@byte stored from wreg
  3579   001B8E  6E05               	movwf	putCharToTxBuf@byte^0,c
  3580   001B90                     
  3581                           ;serial.c: 54:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  3582   001B90  0E3B               	movlw	59
  3583   001B92  6457               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3584   001B94  EFCE  F00D         	goto	u1111
  3585   001B98  EFD0  F00D         	goto	u1110
  3586   001B9C                     u1111:
  3587   001B9C  EFD2  F00D         	goto	l1783
  3588   001BA0                     u1110:
  3589   001BA0  0E00               	movlw	0
  3590   001BA2  6E57               	movwf	_TxBufWriteCnt^0,c	;volatile
  3591   001BA4                     l1783:
  3592                           
  3593                           ;serial.c: 55:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3594   001BA4  5057               	movf	_TxBufWriteCnt^0,w,c
  3595   001BA6  0F60               	addlw	low _EUSART4TXbuf
  3596   001BA8  6ED9               	movwf	fsr2l,c
  3597   001BAA  6ADA               	clrf	fsr2h,c
  3598   001BAC  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  3599   001BB0  2A57               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3600   001BB2  0012               	return		;funcret
  3601   001BB4                     __end_of_putCharToTxBuf:
  3602                           	callstack 0
  3603                           
  3604 ;; *************** function _Interrupts_init *****************
  3605 ;; Defined at:
  3606 ;;		line 10 in file "interrupts.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;		None
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		None
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;Total ram usage:        0 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 3
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_main
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text29
  3635   001CAC                     __ptext29:
  3636                           	callstack 0
  3637   001CAC                     _Interrupts_init:
  3638                           	callstack 27
  3639   001CAC                     
  3640                           ;interrupts.c: 12:  TRISBbits.TRISB0=1;
  3641   001CAC  8082               	bsf	130,0,c	;volatile
  3642                           
  3643                           ;interrupts.c: 13:     ANSELBbits.ANSELB0=0;
  3644   001CAE  010E               	movlb	14	; () banked
  3645   001CB0  919A               	bcf	154,0,b	;volatile
  3646                           
  3647                           ;interrupts.c: 14:     PIE0bits.INT0IE=1;
  3648   001CB2  8129               	bsf	41,0,b	;volatile
  3649                           
  3650                           ;interrupts.c: 15:     IPR0bits.INT0IP=1;
  3651   001CB4  811F               	bsf	31,0,b	;volatile
  3652                           
  3653                           ;interrupts.c: 19:     PIE4bits.RC4IE=1;
  3654   001CB6  872D               	bsf	45,3,b	;volatile
  3655                           
  3656                           ;interrupts.c: 20:     INTCONbits.PEIE=1;
  3657   001CB8  8CF2               	bsf	242,6,c	;volatile
  3658                           
  3659                           ;interrupts.c: 21:     INTCONbits.GIE=1;
  3660   001CBA  8EF2               	bsf	242,7,c	;volatile
  3661   001CBC                     
  3662                           ; BSR set to: 14
  3663   001CBC  0012               	return		;funcret
  3664   001CBE                     __end_of_Interrupts_init:
  3665                           	callstack 0
  3666                           
  3667 ;; *************** function _Buggy_init *****************
  3668 ;; Defined at:
  3669 ;;		line 7 in file "buggysetup.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		None
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;Total ram usage:        0 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; Hardware stack levels required when called: 3
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_main
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text30
  3698   001A44                     __ptext30:
  3699                           	callstack 0
  3700   001A44                     _Buggy_init:
  3701                           	callstack 27
  3702   001A44                     
  3703                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
  3704   001A44  9E7C               	bcf	124,7,c	;volatile
  3705                           
  3706                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
  3707   001A46  9E84               	bcf	132,7,c	;volatile
  3708                           
  3709                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
  3710   001A48  9680               	bcf	128,3,c	;volatile
  3711                           
  3712                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
  3713   001A4A  9688               	bcf	136,3,c	;volatile
  3714                           
  3715                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
  3716   001A4C  8486               	bsf	134,2,c	;volatile
  3717                           
  3718                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
  3719   001A4E  010E               	movlb	14	; () banked
  3720   001A50  95B4               	bcf	180,2,b	;volatile
  3721                           
  3722                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
  3723   001A52  8686               	bsf	134,3,c	;volatile
  3724                           
  3725                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
  3726   001A54  97B4               	bcf	180,3,b	;volatile
  3727                           
  3728                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
  3729   001A56  9280               	bcf	128,1,c	;volatile
  3730                           
  3731                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
  3732   001A58  9288               	bcf	136,1,c	;volatile
  3733                           
  3734                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
  3735   001A5A  987C               	bcf	124,4,c	;volatile
  3736                           
  3737                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
  3738   001A5C  9884               	bcf	132,4,c	;volatile
  3739                           
  3740                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
  3741   001A5E  967C               	bcf	124,3,c	;volatile
  3742                           
  3743                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
  3744   001A60  9684               	bcf	132,3,c	;volatile
  3745                           
  3746                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
  3747   001A62  97A7               	bcf	167,3,b	;volatile
  3748                           
  3749                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
  3750   001A64  9080               	bcf	128,0,c	;volatile
  3751                           
  3752                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
  3753   001A66  9088               	bcf	136,0,c	;volatile
  3754                           
  3755                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
  3756   001A68  907E               	bcf	126,0,c	;volatile
  3757                           
  3758                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
  3759   001A6A  9086               	bcf	134,0,c	;volatile
  3760                           
  3761                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
  3762   001A6C  907F               	bcf	127,0,c	;volatile
  3763                           
  3764                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
  3765   001A6E  9087               	bcf	135,0,c	;volatile
  3766                           
  3767                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
  3768   001A70  9E7D               	bcf	125,7,c	;volatile
  3769                           
  3770                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
  3771   001A72  9E85               	bcf	133,7,c	;volatile
  3772                           
  3773                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
  3774   001A74  9679               	bcf	121,3,c	;volatile
  3775                           
  3776                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
  3777   001A76  9681               	bcf	129,3,c	;volatile
  3778   001A78                     
  3779                           ; BSR set to: 14
  3780   001A78  0012               	return		;funcret
  3781   001A7A                     __end_of_Buggy_init:
  3782                           	callstack 0
  3783                           
  3784 ;; *************** function _HighISR *****************
  3785 ;; Defined at:
  3786 ;;		line 29 in file "interrupts.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;		None
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      void 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;Total ram usage:        2 bytes
  3805 ;; Hardware stack levels used: 1
  3806 ;; Hardware stack levels required when called: 2
  3807 ;; This function calls:
  3808 ;;		_getCharFromTxBuf
  3809 ;;		_putCharToRxBuf
  3810 ;;		i2_I2C_2_Master_Start
  3811 ;;		i2_I2C_2_Master_Stop
  3812 ;;		i2_I2C_2_Master_Write
  3813 ;;		i2_isDataInTxBuf
  3814 ;; This function is called by:
  3815 ;;		Interrupt level 2
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	intcode
  3820   000008                     __pintcode:
  3821                           	callstack 0
  3822   000008                     _HighISR:
  3823                           	callstack 23
  3824                           
  3825                           ; BSR set to: 14
  3826                           ;incstack = 0
  3827   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3828   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3829   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3830   000012                     
  3831                           ;interrupts.c: 33:     if(PIR0bits.INT0IF){
  3832   000012  010E               	movlb	14	; () banked
  3833   000014  A133               	btfss	51,0,b	;volatile
  3834   000016  EF0F  F000         	goto	i2u147_41
  3835   00001A  EF11  F000         	goto	i2u147_40
  3836   00001E                     i2u147_41:
  3837   00001E  EF1E  F000         	goto	i2l2053
  3838   000022                     i2u147_40:
  3839   000022                     
  3840                           ; BSR set to: 14
  3841                           ;interrupts.c: 34:  LATHbits.LATH3 = 1;
  3842   000022  8680               	bsf	128,3,c	;volatile
  3843   000024                     
  3844                           ; BSR set to: 14
  3845                           ;interrupts.c: 36:     I2C_2_Master_Start();
  3846   000024  EC7F  F00E         	call	i2_I2C_2_Master_Start	;wreg free
  3847                           
  3848                           ;interrupts.c: 37:  I2C_2_Master_Write(0x52 | 0x00);
  3849   000028  0E52               	movlw	82
  3850   00002A  EC65  F00E         	call	i2_I2C_2_Master_Write
  3851                           
  3852                           ;interrupts.c: 38:  I2C_2_Master_Write(0b11100110);
  3853   00002E  0EE6               	movlw	230
  3854   000030  EC65  F00E         	call	i2_I2C_2_Master_Write
  3855                           
  3856                           ;interrupts.c: 39:  I2C_2_Master_Stop();
  3857   000034  EC7A  F00E         	call	i2_I2C_2_Master_Stop	;wreg free
  3858   000038                     
  3859                           ;interrupts.c: 41:     PIR0bits.INT0IF = 0;
  3860   000038  010E               	movlb	14	; () banked
  3861   00003A  9133               	bcf	51,0,b	;volatile
  3862   00003C                     i2l2053:
  3863                           
  3864                           ; BSR set to: 14
  3865                           ;interrupts.c: 44:     if(PIR4bits.RC4IF){
  3866   00003C  A737               	btfss	55,3,b	;volatile
  3867   00003E  EF23  F000         	goto	i2u148_41
  3868   000042  EF25  F000         	goto	i2u148_40
  3869   000046                     i2u148_41:
  3870   000046  EF28  F000         	goto	i2l2057
  3871   00004A                     i2u148_40:
  3872   00004A                     
  3873                           ; BSR set to: 14
  3874                           ;interrupts.c: 46:     putCharToRxBuf(RC4REG);
  3875   00004A  51E3               	movf	227,w,b	;volatile
  3876   00004C  ECDA  F00D         	call	_putCharToRxBuf
  3877   000050                     i2l2057:
  3878                           
  3879                           ;interrupts.c: 50:     if(PIR4bits.TX4IF){
  3880   000050  010E               	movlb	14	; () banked
  3881   000052  A537               	btfss	55,2,b	;volatile
  3882   000054  EF2E  F000         	goto	i2u149_41
  3883   000058  EF30  F000         	goto	i2u149_40
  3884   00005C                     i2u149_41:
  3885   00005C  EF40  F000         	goto	i2l249
  3886   000060                     i2u149_40:
  3887   000060                     
  3888                           ; BSR set to: 14
  3889                           ;interrupts.c: 52:     TX4REG = getCharFromTxBuf();
  3890   000060  ECED  F00D         	call	_getCharFromTxBuf	;wreg free
  3891   000064  010E               	movlb	14	; () banked
  3892   000066  6FE4               	movwf	228,b	;volatile
  3893   000068                     
  3894                           ; BSR set to: 14
  3895                           ;interrupts.c: 53:     if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
  3896   000068  EC4A  F00E         	call	i2_isDataInTxBuf	;wreg free
  3897   00006C  0900               	iorlw	0
  3898   00006E  A4D8               	btfss	status,2,c
  3899   000070  EF3C  F000         	goto	i2u150_41
  3900   000074  EF3E  F000         	goto	i2u150_40
  3901   000078                     i2u150_41:
  3902   000078  EF40  F000         	goto	i2l249
  3903   00007C                     i2u150_40:
  3904   00007C  010E               	movlb	14	; () banked
  3905   00007E  952D               	bcf	45,2,b	;volatile
  3906   000080                     i2l249:
  3907   000080  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3908   000084  C003  FFD9         	movff	??_HighISR,fsr2l
  3909   000088  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3910   00008A  0011               	retfie		f
  3911   00008C                     __end_of_HighISR:
  3912                           	callstack 0
  3913                           
  3914 ;; *************** function i2_isDataInTxBuf *****************
  3915 ;; Defined at:
  3916 ;;		line 61 in file "serial.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      unsigned char 
  3923 ;; Registers used:
  3924 ;;		wreg, status,2, status,0
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3934 ;;Total ram usage:        0 bytes
  3935 ;; Hardware stack levels used: 1
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_HighISR
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text32
  3944   001C94                     __ptext32:
  3945                           	callstack 0
  3946   001C94                     i2_isDataInTxBuf:
  3947                           	callstack 24
  3948   001C94                     
  3949                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  3950   001C94  5056               	movf	_TxBufReadCnt^0,w,c	;volatile
  3951   001C96  1857               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3952   001C98  A4D8               	btfss	status,2,c
  3953   001C9A  EF51  F00E         	goto	i2u67_41
  3954   001C9E  EF54  F00E         	goto	i2u67_40
  3955   001CA2                     i2u67_41:
  3956   001CA2  0E01               	movlw	1
  3957   001CA4  EF55  F00E         	goto	i2u68_40
  3958   001CA8                     i2u67_40:
  3959   001CA8  0E00               	movlw	0
  3960   001CAA                     i2u68_40:
  3961   001CAA  0012               	return		;funcret
  3962   001CAC                     __end_ofi2_isDataInTxBuf:
  3963                           	callstack 0
  3964                           
  3965 ;; *************** function i2_I2C_2_Master_Write *****************
  3966 ;; Defined at:
  3967 ;;		line 45 in file "i2c.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  data_byte       1    wreg     unsigned char 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  data_byte       1    1[COMRAM] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2, status,0, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3985 ;;Total ram usage:        1 bytes
  3986 ;; Hardware stack levels used: 1
  3987 ;; Hardware stack levels required when called: 1
  3988 ;; This function calls:
  3989 ;;		i2_I2C_2_Master_Idle
  3990 ;; This function is called by:
  3991 ;;		_HighISR
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text33
  3996   001CCA                     __ptext33:
  3997                           	callstack 0
  3998   001CCA                     i2_I2C_2_Master_Write:
  3999                           	callstack 23
  4000                           
  4001                           ;incstack = 0
  4002                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  4003   001CCA  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  4004   001CCC                     
  4005                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4006   001CCC  ECB3  F00D         	call	i2_I2C_2_Master_Idle	;wreg free
  4007   001CD0                     
  4008                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4009   001CD0  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  4010   001CD4  0012               	return		;funcret
  4011   001CD6                     __end_ofi2_I2C_2_Master_Write:
  4012                           	callstack 0
  4013                           
  4014 ;; *************** function i2_I2C_2_Master_Stop *****************
  4015 ;; Defined at:
  4016 ;;		line 39 in file "i2c.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;		None
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;Total ram usage:        0 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; Hardware stack levels required when called: 1
  4037 ;; This function calls:
  4038 ;;		i2_I2C_2_Master_Idle
  4039 ;; This function is called by:
  4040 ;;		_HighISR
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text34
  4045   001CF4                     __ptext34:
  4046                           	callstack 0
  4047   001CF4                     i2_I2C_2_Master_Stop:
  4048                           	callstack 23
  4049   001CF4                     
  4050                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4051   001CF4  ECB3  F00D         	call	i2_I2C_2_Master_Idle	;wreg free
  4052   001CF8                     
  4053                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4054   001CF8  010E               	movlb	14	; () banked
  4055   001CFA  85DA               	bsf	218,2,b	;volatile
  4056   001CFC                     
  4057                           ; BSR set to: 14
  4058   001CFC  0012               	return		;funcret
  4059   001CFE                     __end_ofi2_I2C_2_Master_Stop:
  4060                           	callstack 0
  4061                           
  4062 ;; *************** function i2_I2C_2_Master_Start *****************
  4063 ;; Defined at:
  4064 ;;		line 27 in file "i2c.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;		None
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      void 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4082 ;;Total ram usage:        0 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 1
  4085 ;; This function calls:
  4086 ;;		i2_I2C_2_Master_Idle
  4087 ;; This function is called by:
  4088 ;;		_HighISR
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text35
  4093   001CFE                     __ptext35:
  4094                           	callstack 0
  4095   001CFE                     i2_I2C_2_Master_Start:
  4096                           	callstack 23
  4097   001CFE                     
  4098                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4099   001CFE  ECB3  F00D         	call	i2_I2C_2_Master_Idle	;wreg free
  4100   001D02                     
  4101                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4102   001D02  010E               	movlb	14	; () banked
  4103   001D04  81DA               	bsf	218,0,b	;volatile
  4104   001D06                     
  4105                           ; BSR set to: 14
  4106   001D06  0012               	return		;funcret
  4107   001D08                     __end_ofi2_I2C_2_Master_Start:
  4108                           	callstack 0
  4109                           
  4110 ;; *************** function i2_I2C_2_Master_Idle *****************
  4111 ;; Defined at:
  4112 ;;		line 22 in file "i2c.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4130 ;;Total ram usage:        1 bytes
  4131 ;; Hardware stack levels used: 1
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		i2_I2C_2_Master_Start
  4136 ;;		i2_I2C_2_Master_Stop
  4137 ;;		i2_I2C_2_Master_Write
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text36
  4142   001B66                     __ptext36:
  4143                           	callstack 0
  4144   001B66                     i2_I2C_2_Master_Idle:
  4145                           	callstack 23
  4146   001B66                     i2l142:
  4147   001B66  010E               	movlb	14	; () banked
  4148   001B68  B5D8               	btfsc	216,2,b	;volatile
  4149   001B6A  EFB9  F00D         	goto	i2u121_41
  4150   001B6E  EFBB  F00D         	goto	i2u121_40
  4151   001B72                     i2u121_41:
  4152   001B72  EFB3  F00D         	goto	i2l142
  4153   001B76                     i2u121_40:
  4154   001B76                     
  4155                           ; BSR set to: 14
  4156   001B76  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  4157   001B7A  0E1F               	movlw	31
  4158   001B7C  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  4159   001B7E  A4D8               	btfss	status,2,c
  4160   001B80  EFC4  F00D         	goto	i2u122_41
  4161   001B84  EFC6  F00D         	goto	i2u122_40
  4162   001B88                     i2u122_41:
  4163   001B88  EFB3  F00D         	goto	i2l142
  4164   001B8C                     i2u122_40:
  4165   001B8C                     
  4166                           ; BSR set to: 14
  4167   001B8C  0012               	return		;funcret
  4168   001B8E                     __end_ofi2_I2C_2_Master_Idle:
  4169                           	callstack 0
  4170                           
  4171 ;; *************** function _putCharToRxBuf *****************
  4172 ;; Defined at:
  4173 ;;		line 33 in file "serial.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  byte            1    wreg     unsigned char 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  byte            1    0[COMRAM] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;Total ram usage:        1 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_HighISR
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text37
  4201   001BB4                     __ptext37:
  4202                           	callstack 0
  4203   001BB4                     _putCharToRxBuf:
  4204                           	callstack 24
  4205                           
  4206                           ; BSR set to: 14
  4207                           ;incstack = 0
  4208                           ;putCharToRxBuf@byte stored from wreg
  4209   001BB4  6E01               	movwf	putCharToRxBuf@byte^0,c
  4210   001BB6                     
  4211                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  4212   001BB6  0E13               	movlw	19
  4213   001BB8  6459               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  4214   001BBA  EFE1  F00D         	goto	i2u65_41
  4215   001BBE  EFE3  F00D         	goto	i2u65_40
  4216   001BC2                     i2u65_41:
  4217   001BC2  EFE5  F00D         	goto	i2l1487
  4218   001BC6                     i2u65_40:
  4219   001BC6  0E00               	movlw	0
  4220   001BC8  6E59               	movwf	_RxBufWriteCnt^0,c	;volatile
  4221   001BCA                     i2l1487:
  4222                           
  4223                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  4224   001BCA  5059               	movf	_RxBufWriteCnt^0,w,c
  4225   001BCC  0F3D               	addlw	low _EUSART4RXbuf
  4226   001BCE  6ED9               	movwf	fsr2l,c
  4227   001BD0  6ADA               	clrf	fsr2h,c
  4228   001BD2  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  4229   001BD6  2A59               	incf	_RxBufWriteCnt^0,f,c	;volatile
  4230   001BD8  0012               	return		;funcret
  4231   001BDA                     __end_of_putCharToRxBuf:
  4232                           	callstack 0
  4233                           
  4234 ;; *************** function _getCharFromTxBuf *****************
  4235 ;; Defined at:
  4236 ;;		line 47 in file "serial.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      unsigned char 
  4243 ;; Registers used:
  4244 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;Total ram usage:        1 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		_HighISR
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text38
  4264   001BDA                     __ptext38:
  4265                           	callstack 0
  4266   001BDA                     _getCharFromTxBuf:
  4267                           	callstack 24
  4268   001BDA                     
  4269                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  4270   001BDA  0E3B               	movlw	59
  4271   001BDC  6456               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  4272   001BDE  EFF3  F00D         	goto	i2u142_41
  4273   001BE2  EFF5  F00D         	goto	i2u142_40
  4274   001BE6                     i2u142_41:
  4275   001BE6  EFF7  F00D         	goto	i2l1997
  4276   001BEA                     i2u142_40:
  4277   001BEA  0E00               	movlw	0
  4278   001BEC  6E56               	movwf	_TxBufReadCnt^0,c	;volatile
  4279   001BEE                     i2l1997:
  4280                           
  4281                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
  4282   001BEE  2A56               	incf	_TxBufReadCnt^0,f,c	;volatile
  4283   001BF0  0456               	decf	_TxBufReadCnt^0,w,c	;volatile
  4284   001BF2  6E01               	movwf	??_getCharFromTxBuf^0,c
  4285   001BF4  5001               	movf	??_getCharFromTxBuf^0,w,c
  4286   001BF6  0F60               	addlw	low _EUSART4TXbuf
  4287   001BF8  6ED9               	movwf	fsr2l,c
  4288   001BFA  6ADA               	clrf	fsr2h,c
  4289   001BFC  50DF               	movf	indf2,w,c
  4290   001BFE  0012               	return		;funcret
  4291   001C00                     __end_of_getCharFromTxBuf:
  4292                           	callstack 0
  4293                           
  4294                           	psect	rparam
  4295   000000                     
  4296                           	psect	temp
  4297   00005A                     btemp:
  4298                           	callstack 0
  4299   00005A                     	ds	1
  4300   000000                     int$flags	set	btemp
  4301   000000                     wtemp8	set	btemp+1
  4302   000000                     ttemp5	set	btemp+1
  4303   000000                     ttemp6	set	btemp+4
  4304   000000                     ttemp7	set	btemp+8
  4305                           
  4306                           	psect	config
  4307                           
  4308                           ;Config register CONFIG1L @ 0x300000
  4309                           ;	External Oscillator mode Selection bits
  4310                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4311                           ;	Power-up default value for COSC bits
  4312                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4313   300000                     	org	3145728
  4314   300000  AA                 	db	170
  4315                           
  4316                           ;Config register CONFIG1H @ 0x300001
  4317                           ;	unspecified, using default values
  4318                           ;	Clock Out Enable bit
  4319                           ;	CLKOUTEN = 0x1, unprogrammed default
  4320                           ;	Clock Switch Enable bit
  4321                           ;	CSWEN = 0x1, unprogrammed default
  4322                           ;	Fail-Safe Clock Monitor Enable bit
  4323                           ;	FCMEN = 0x1, unprogrammed default
  4324   300001                     	org	3145729
  4325   300001  FF                 	db	255
  4326                           
  4327                           ;Config register CONFIG3L @ 0x300004
  4328                           ;	WDT Period Select bits
  4329                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4330                           ;	WDT operating mode
  4331                           ;	WDTE = OFF, WDT Disabled
  4332   300004                     	org	3145732
  4333   300004  9F                 	db	159
  4334                           
  4335                           ;Config register CONFIG3H @ 0x300005
  4336                           ;	unspecified, using default values
  4337                           ;	WDT Window Select bits
  4338                           ;	WDTCWS = 0x7, unprogrammed default
  4339                           ;	WDT input clock selector
  4340                           ;	WDTCCS = 0x7, unprogrammed default
  4341   300005                     	org	3145733
  4342   300005  FF                 	db	255
  4343                           tosu	equ	0xFFF
  4344                           tosh	equ	0xFFE
  4345                           tosl	equ	0xFFD
  4346                           stkptr	equ	0xFFC
  4347                           pclatu	equ	0xFFB
  4348                           pclath	equ	0xFFA
  4349                           pcl	equ	0xFF9
  4350                           tblptru	equ	0xFF8
  4351                           tblptrh	equ	0xFF7
  4352                           tblptrl	equ	0xFF6
  4353                           tablat	equ	0xFF5
  4354                           prodh	equ	0xFF4
  4355                           prodl	equ	0xFF3
  4356                           indf0	equ	0xFEF
  4357                           postinc0	equ	0xFEE
  4358                           postdec0	equ	0xFED
  4359                           preinc0	equ	0xFEC
  4360                           plusw0	equ	0xFEB
  4361                           fsr0h	equ	0xFEA
  4362                           fsr0l	equ	0xFE9
  4363                           wreg	equ	0xFE8
  4364                           indf1	equ	0xFE7
  4365                           postinc1	equ	0xFE6
  4366                           postdec1	equ	0xFE5
  4367                           preinc1	equ	0xFE4
  4368                           plusw1	equ	0xFE3
  4369                           fsr1h	equ	0xFE2
  4370                           fsr1l	equ	0xFE1
  4371                           bsr	equ	0xFE0
  4372                           indf2	equ	0xFDF
  4373                           postinc2	equ	0xFDE
  4374                           postdec2	equ	0xFDD
  4375                           preinc2	equ	0xFDC
  4376                           plusw2	equ	0xFDB
  4377                           fsr2h	equ	0xFDA
  4378                           fsr2l	equ	0xFD9
  4379                           status	equ	0xFD8

Data Sizes:
    Strings     42
    Constant    0
    Data        0
    BSS         161
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      89
    BANK0           160     56     148
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    color_normalise@RGBC_n	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_n(BANK0[8]), 

    color_read@RGBC	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC(BANK0[8]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S1856$buffer	PTR unsigned char  size(2) Largest target is 0

    S1856$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 42
		 -> STR_1(CODE[42]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK0[40]), 

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), STR_2(CODE[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 42
		 -> STR_1(CODE[42]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 42
		 -> STR_1(CODE[42]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 42
		 -> STR_1(CODE[42]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___aldiv
    ___aldiv->___lmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                59    59      0    7328
                                             58 COMRAM     2     2      0
                                              0 BANK0     56    56      0
                         _Buggy_init
                    _Interrupts_init
                   _TxBufferedString
                   _color_click_init
                       _color_detect
                    _color_normalise
                         _color_read
                         _initUSART4
                          _sendTxBuf
                            _sprintf
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    15     16    3287
                                             29 COMRAM    29    13     16
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2936
                                             25 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    2586
                                             14 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                             10 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read                                           8     7      1     407
                                              8 COMRAM     8     7      1
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                     11     2      9    1965
                                             30 COMRAM    11     2      9
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             16 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_detect                                         9     1      8     427
                                              4 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     674
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     674
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     219
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0      37
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (7) i2_isDataInTxBuf                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (7) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (7) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (8) i2_I2C_2_Master_Idle                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_detect
   _color_normalise
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _color_read
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initUSART4
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_I2C_2_Master_Start
     i2_I2C_2_Master_Idle
   i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Idle
   i2_I2C_2_Master_Write
     i2_I2C_2_Master_Idle
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      94       5       92.5%
BITBIGSFRlllhhh     8F      0       0      37        0.0%
BITBIGSFRhhl        63      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      59       1       94.7%
BITBIGSFRllllll     2A      0       0      45        0.0%
BITBIGSFRllllll     29      0       0      43        0.0%
BITBIGSFRllllll     26      0       0      52        0.0%
BITBIGSFRlllllh     20      0       0      40        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      44        0.0%
BITBIGSFRllllll      C      0       0      42        0.0%
BITBIGSFRlllllh      C      0       0      41        0.0%
BITBIGSFRllllll      9      0       0      49        0.0%
BITBIGSFRlllhl       8      0       0      38        0.0%
BITBIGSFRllllll      6      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRhlhh        5      0       0      34        0.0%
BITBIGSFRllllll      3      0       0      46        0.0%
BITBIGSFRllllll      3      0       0      48        0.0%
BITBIGSFRllh         2      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRllllh       1      0       0      39        0.0%
BITBIGSFRhll         1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115      53        0.0%
DATA                 0      0     115       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 05 14:27:07 2024

                  _white_Light 1C00                             l50 15AA                             l80 1960  
                           l83 1C42                             l91 1000                             l94 1476  
                           l86 1C1C                             l88 1C22                             l98 1332  
                 ___awdiv@sign 000A              ??_Interrupts_init 0005                            l112 1334  
                          l106 1332                            l142 1B3E                            l302 1C92  
                          l151 1CDE                            l240 1CBC                            l160 1A04  
                          l312 1C7A                            l145 1B64                            l154 1CE8  
                          l139 1B3C                            l308 19C2                            l148 1CF2  
                          l157 1CC8                            l326 18EA                            l191 1A78  
                          l327 18FA                            l280 1C60                            l394 1582  
                          l546 1736                            l299 1BB2                            l559 17E6  
                          l993 1AAC                            u800 1686                            u801 1682  
                          u810 16A0                            u811 169C                            u820 16C6  
                          u900 17B2                            u821 16C2                            u901 17AE  
                          u830 16E4                            u910 17D6                            u831 16E0  
                          u911 17D2                            u840 1700                            u920 17F8  
                          u841 16FC                            u921 17F4                            u850 1726  
                          u930 1808                            u851 1722                            u931 1804  
                          u780 1B4E                            u860 174A                            u940 182E  
                          u781 1B4A                            u861 1746                            u941 182A  
                          u790 1B64                            u870 1764                            u950 1860  
                          u791 1B60                            u871 1760                            u951 185C  
                          u880 177E                            u960 1ABC                            u881 177A  
                          u961 1AB8                            u890 179C                            u970 1024  
                          u891 1798                            u971 1020                            u980 1062  
                          u981 105E                            u990 107E                            u991 107A  
                          _abs 1AAE                   ___awmod@sign 000A                  ?_color_detect 0005  
                          wreg 0FE8                _color_normalise 1336                           l1031 11B8  
                         l1041 1AC8                           ?_abs 000B                           l1044 1AE0  
                         l1037 1A42                           l2021 1594                           l2013 1584  
                         l2031 15DA                           l2023 15A0                           l2015 1588  
                         l1056 1890                           l2041 1646                           l2033 15F0  
                         l2025 15A4                           l2017 158C                           l1067 1D08  
                         l2043 1656                           l2035 1634                           l2027 15B8  
                         l2019 1590                           l2037 1638                           l2029 15C0  
                         l2039 1642                           l1601 16C6                           l1611 1700  
                         l1603 16CE                           l1621 1726                           l1613 1708  
                         l1605 16D6                           l1701 103C                           l1623 172E  
                         l1615 170A                           l1607 16E4                           l1631 174A  
                         l1711 10A0                           l1703 1046                           l1801 148A  
                         l1617 1710                           l1609 16EA                           l1641 177E  
                         l1633 1752                           l1721 1126                           l1713 10B8  
                         l1705 1062                           l1811 14C0                           l1803 149A  
                         l1619 1716                           l1651 17BA                           l1643 1786  
                         l1635 1756                           l1627 1738                           l1723 1136  
                         l1731 1174                           l1715 10E8                           l1707 107E  
                         l1581 1B4E                           l1821 1508                           l1813 14D0  
                         l1805 149E                           l1901 0EB2                           l1653 17C0  
                         l1645 178E                           l1637 1764                           l1629 173C  
                         l1725 1146                           l1717 1104                           l1709 1096  
                         l1733 118A                           l1751 1B28                           l1743 1B14  
                         l1831 154C                           l1823 1512                           l1815 14E6  
                         l1807 14AC                           l1911 0FBE                           l1903 0ECE  
                         l1591 1692                           l1583 1674                           l1647 179C  
                         l1655 17C6                           l1639 176C                           l1671 182E  
                         l1663 17E8                           l1727 1158                           l1719 1116  
                         l1753 1B2A                           l1745 1B1E                           l1681 1CEA  
                         l1921 11BA                           l1825 1530                           l1817 14EE  
                         l1833 1552                           l1809 14BC                           l1913 1336  
                         l1761 19C6                           l1905 0F2A                           l1593 16A0  
                         l1585 1678                           l1657 17D6                           l1649 17B2  
                         l1673 1860                           l1665 17F8                           l1729 1172  
                         l1737 1196                           l1841 1A06                           l1747 1B24  
                         l1579 1B3E                           l1683 1CEE                           l1691 1CE4  
                         l1755 1C26                           l1931 11FA                           l1923 11BE  
                         l1835 1562                           l1827 1540                           l1819 14FA  
                         l1915 1348                           l1771 1A02                           l1763 19CA  
                         l1907 0F46                           l1595 16A8                           l1587 1686  
                         l1659 17DE                           l1667 1808                           l1843 1A0E  
                         l1781 1BA0                           l1749 1B26                           l1685 1CC0  
                         l1861 190A                           l1941 124C                           l1933 1210  
                         l1925 11D4                           l1837 1572                           l1829 1542  
                         l1917 13AA                           l1765 19D2                           l1757 1CD6  
                         l1909 0FA2                           l1597 16AC                           l1589 168E  
                         l1677 1AAE                           l1669 1812                           l1693 1002  
                         l1845 1A1E                           l1855 1A44                           l1783 1BA4  
                         l1687 1CC4                           l1871 1942                           l1863 191A  
                         l1951 12AC                           l1943 1262                           l1935 1218  
                         l1927 11DC                           l1791 18B0                           l1919 1410  
                         l1767 19DA                           l1759 1CDA                           l1775 1C7C  
                         l1599 16B4                           l1679 1ABC                           l1695 1024  
                         l1847 1A3A                           l1785 1BB0                           l1689 1CE0  
                         l1873 194C                           l1865 1924                           l1857 18FC  
                         l1961 12FE                           l1953 12B4                           l1945 1278  
                         l1937 122E                           l1929 11F2                           l1793 18C0  
                         l1769 1A00                           l1881 1C50                           l1697 102C  
                         l1779 1B90                           l1875 1956                           l1867 192E  
                         l1859 1900                           l1963 1314                           l1955 12CA  
                         l1947 1280                           l1939 1244                           l1795 18CA  
                         l1787 1892                           l1883 1C5A                           l1699 1038  
                         l1971 1A82                           l1891 1C02                           l1869 1938  
                         l1965 132A                           l1957 12E0                           l1949 1296  
                         l1797 1478                           l1789 18A2                           l1885 1C5C  
                         l1877 1C44                           l1981 1C62                           l1973 1A8A  
                         l1893 1C12                           l1991 1990                           l1959 12E8  
                         l1799 147C                           l1895 0E2C                           l1887 1C5E  
                         l1879 1C4E                           l1983 1C76                           l1975 1A92  
                         l1889 1CAC                           l1985 1962                           l1897 0E46  
                         l1977 1AA2                           l1969 1A7A                           l1987 1966  
                         l1899 0E5E                           l1989 198C                           STR_1 0E01  
                         STR_2 0E2A                           u1000 10B4                           u1001 10AE  
                         u1010 10B6                           u1100 1C92                           u1020 1116  
                         u1021 1112                           u1110 1BA0                           u1030 1126  
                         u1111 1B9C                           u1031 1122                           u1120 18B0  
                         u1040 1136                           u1200 1A3A                           u1121 18AC  
                         u1041 1132                           u1201 1A36                           u1130 18EA  
                         u1050 1146                           u1131 18E6                           u1051 1142  
                         u1300 1278                           u1140 148A                           u1060 1186  
                         u1301 1274                           u1141 1486                           u1061 1182  
                         u1310 1296                           u1150 14AC                           u1070 19EE  
                         u1230 1C12                           u1311 1292                           u1151 14A8  
                         u1071 19E6                           u1231 1C0E                           u1400 19B2  
                         u1320 12AC                           u1240 11D4                           u1160 14E6  
                         u1321 12A8                           u1241 11D0                           u1161 14E2  
                         u1410 19C2                           u1330 12CA                           u1250 11F2  
                         u1170 1508                           u1090 1C90                           u1411 19BE  
                         u1331 12C6                           u1251 11EE                           u1171 1504  
                         u1091 1C8A                           u1340 12E0                           u1260 1210  
                         u1180 1530                           u1341 12DC                           u1261 120C  
                         u1181 152C                           u1350 12FE                           u1270 122E  
                         u1190 1562                           u1407 19A8                           u1351 12FA  
                         u1271 122A                           u1191 155E                           u1431 159A  
                         u1360 1314                           u1280 1244                           u1088 19F0  
                         u1440 15B8                   _BAUD4CONbits 0EE9                           u1361 1310  
                         u1281 1240                           u1441 15B4                           u1370 132A  
                         u1290 1262                           u1371 1326                           u1291 125E  
                         u1451 15CA                           u1380 1C76                           u1381 1C72  
                         u1517 1660                           u1461 15E4                           u1390 1988  
                         u1527 1910                           u1397 197E                           abs@a 000B  
                         _dbuf 009C                           _main 1584                           _prec 0053  
                         fsr0h 0FEA                           fsr1h 0FE2                           indf0 0FEF  
                         fsr2h 0FDA                           fsr0l 0FE9                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           btemp 005A  
                         start 008C                __end_of_HighISR 008C                   ___param_bank 0000  
                        ??_abs 000D                __end_of___aldiv 1584                          ?_main 0001  
              __end_of___awdiv 1738                __end_of___awmod 17E8                ___awdiv@divisor 0007  
                        i2l142 1B66                          i2l302 1CAA                          i2l145 1B8C  
                        i2l154 1CFC                          i2l148 1D06                          i2l157 1CD4  
                        i2l249 0080                          i2l295 1BFE                          i2l288 1BD8  
              ___awdiv@counter 0009                 ??_color_detect 000D                   vfpfcnvrt@fmt 0010  
          ___lmul@multiplicand 0009     __end_of_I2C_2_Master_Start 1CF4     __end_of_I2C_2_Master_Write 1CCA  
                        _flags 0055                     _Buggy_init 1A44                          _fputc 17E8  
                        _width 0051                          _putch 1D08                          tablat 0FF5  
                        plusw0 0FEB                          plusw2 0FDB                          ttemp5 005B  
                        ttemp6 005E                          ttemp7 0062                          status 0FD8  
                        wtemp8 005B                __end_of_sprintf 1AAE              color_detect@color 000D  
        _I2C_2_Master_RepStart 1CD6             putCharToRxBuf@byte 0001                __initialization 1AE2  
                 __end_of_main 1674                i2_isDataInTxBuf 1C94             putCharToTxBuf@byte 0005  
                       ??_main 003B                  __activetblptr 0002        __end_of_color_normalise 1478  
                       ?_fputc 0005               ___awdiv@dividend 0005                         ?_putch 0001  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RD5PPS 0E6F  
                       i2l2001 1CFE                         i2l2003 1D02                         i2l2011 1CD0  
                       _RD6PPS 0E70                         i2l2005 1CF4                         i2l2007 1CF8  
                       i2l2009 1CCC                         i2l2051 0038                         i2l2061 0068  
                       i2l2053 003C                         i2l2045 0012                         i2l1511 1C94  
                       i2l2063 007C                         i2l2055 004A                         i2l2047 0022  
                       i2l2057 0050                         i2l2049 0024                         i2l2059 0060  
                       i2l1483 1BB6                         i2l1485 1BC6                         i2l1487 1BCA  
                       i2l1489 1BD6                         i2l1851 1B66                         i2l1853 1B76  
                       i2l1993 1BDA                         i2l1995 1BEA                         i2l1997 1BEE  
                vfpfcnvrt@done 0013                      ??_HighISR 0003       __end_of_color_click_init 1962  
                       _RX4PPS 0E15                         _TX4REG 0EE4                   vfprintf@cfmt 001D  
             _getCharFromTxBuf 1BDA                         ___lmul 1892                      ??___aldiv 0019  
                    ??___awdiv 0009                      ??___awmod 0009             color_detect@RGBC_n 0005  
                       clear_0 1AE8                         clear_1 1AF4                         clear_2 1B00  
             ___awdiv@quotient 000B                ___awmod@divisor 0007                         isa$std 0001  
              ___awmod@counter 0009                         fputc@c 0005              ?_TxBufferedString 0006  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8             ??_TxBufferedString 0008                         putch@c 0001  
             __end_of_vfprintf 1A44                    ?_Buggy_init 0001                      ??_sprintf 002E  
        __end_of_isDataInTxBuf 1C94                     __accesstop 0060        __end_of__initialization 1B06  
       ?_I2C_2_Master_RepStart 0001        __end_ofi2_isDataInTxBuf 1CAC                  ___rparam_used 0001  
         __end_of_color_detect 1336                _Interrupts_init 1CAC                 __pcstackCOMRAM 0001  
                 ?_white_Light 0001                  __end_of_fputc 1892                  __end_of_putch 1D0A  
             ?_color_normalise 001F                        ??_fputc 0008                        ??_putch 0005  
                   __pbssBANK0 0060                     __pbssBANK1 0100              _color_writetoaddr 1C24  
           ?_color_writetoaddr 0007                        ?___lmul 0005                 ___lmul@product 000D  
          ??_color_writetoaddr 0008                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                      i2u65_40 1BC6                        i2u65_41 1BC2                        i2u67_40 1CA8  
                      i2u67_41 1CA2                        i2u68_40 1CAA                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5                     _color_read 0E2C        __end_of_Interrupts_init 1CBE  
       color_writetoaddr@value 0007                        _HighISR 0008      __end_of_color_writetoaddr 1C44  
             ?i2_isDataInTxBuf 0001             _I2C_2_Master_Start 1CEA                     _initUSART4 1C44  
          i2_I2C_2_Master_Idle 1B66             _I2C_2_Master_Write 1CBE                        __Hparam 0000  
          i2_I2C_2_Master_Stop 1CF4                        __Lparam 0000                        ___aldiv 1478  
                      ___awdiv 1674                        ___awmod 1738            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 001A                   __psmallconst 0E00  
                      __pcinit 1AE2                        __ramtop 0E00                        __ptext0 1584  
                      __ptext1 1C00                        __ptext2 1A7A                        __ptext3 1A06  
                      __ptext4 1002                        __ptext5 17E8                        __ptext6 1D08  
                      __ptext7 1AAE                        __ptext8 1738                        __ptext9 1674  
         ?i2_I2C_2_Master_Idle 0001           ?i2_I2C_2_Master_Stop 0001               ___awmod@dividend 0005  
             ___aldiv@dividend 0011                  _RxBufWriteCnt 0059       __end_of_getCharFromTxBuf 1C00  
                      main@buf 00BC                        _sprintf 1A7A           ??_I2C_2_Master_Start 0006  
         ??_I2C_2_Master_Write 0006          color_normalise@RGBC_n 0027           end_of_initialization 1B06  
            __end_of_sendTxBuf 1C7C                        fputc@fp 0007                  __Lmediumconst 0000  
            ?_color_click_init 0001             ??_color_click_init 0009              __end_of_vfpfcnvrt 11BA  
             ___aldiv@quotient 001B                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 0015  
                   main@F14508 0100                     ??_vfprintf 001D                      _PORTFbits 0F8E  
        ??i2_I2C_2_Master_Idle 0001          ??i2_I2C_2_Master_Stop 0002                     main@RGBC_n 00E4  
                 _color_detect 11BA                      _TRISAbits 0F81                      _TRISBbits 0F82  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88               white_Light@state 0005  
                 ??_Buggy_init 0005                    ?_color_read 0009       color_writetoaddr@address 0008  
      ??_I2C_2_Master_RepStart 0006               ?_Interrupts_init 0001                   _EUSART4RXbuf 003D  
                 _EUSART4TXbuf 0060                    ?_initUSART4 0001                 color_read@RGBC 0009  
               __end_of___lmul 18FC                    vfpfcnvrt@ap 0011                    vfpfcnvrt@cp 0014  
                  vfpfcnvrt@fp 000F             __end_of_Buggy_init 1A7A            start_initialization 1AE2  
                  __end_of_abs 1AE2                  _TxBufWriteCnt 0057                    vfprintf@fmt 001B  
                     ??___lmul 000D                 _putCharToRxBuf 1BB4                 _putCharToTxBuf 1B8E  
          color_normalise@RGBC 001F  i2I2C_2_Master_Write@data_byte 0002   __end_ofi2_I2C_2_Master_Start 1D08  
 __end_ofi2_I2C_2_Master_Write 1CD6                    __pbssCOMRAM 003D                  __pcstackBANK0 00BC  
                     ?_HighISR 0001         __end_of_putCharToRxBuf 1BDA         __end_of_putCharToTxBuf 1BB4  
                    __pintcode 0008                       ?___aldiv 0011                       ?___awdiv 0005  
                     ?___awmod 0005         TxBufferedString@string 0006           I2C_2_Master_Read@ack 0007  
         I2C_2_Master_Read@tmp 0008                    __smallconst 0E00              _I2C_2_Master_Idle 1B3E  
            _I2C_2_Master_Init 1B14              _I2C_2_Master_Read 19C4              _I2C_2_Master_Stop 1CE0  
                 _RxBufReadCnt 0058             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                       ?_sprintf 001E  
            ?_getCharFromTxBuf 0001             ??_getCharFromTxBuf 0001                ___aldiv@divisor 0015  
          ??_I2C_2_Master_Idle 0005                ___aldiv@counter 0019            ??_I2C_2_Master_Init 0005  
          ??_I2C_2_Master_Read 0006                       _LATAbits 0F79            ??_I2C_2_Master_Stop 0006  
                _isDataInTxBuf 1C7C                       _LATDbits 0F7C                       _LATEbits 0F7D  
                     _LATFbits 0F7E               _TxBufferedString 1962                       _LATGbits 0F7F  
                     _LATHbits 0F80                      _sendTxBuf 1C62                       _IPR0bits 0E1F  
                     _PIE0bits 0E29                       _PIE4bits 0E2D                       i2u121_40 1B76  
                     i2u121_41 1B72                       i2u122_40 1B8C                       i2u122_41 1B88  
                     i2u142_40 1BEA                       i2u150_40 007C                       i2u142_41 1BE6  
                     i2u150_41 0078                       i2u147_40 0022                       i2u147_41 001E  
                     i2u148_40 004A                       i2u148_41 0046                       i2u149_40 0060  
                     i2u149_41 005C                       _PIR0bits 0E33                       _PIR4bits 0E37  
              ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001                       _SSP2CON2 0EDA  
                     _SSP2STAT 0ED8                      _vfpfcnvrt 1002      __end_of_I2C_2_Master_Idle 1B66  
    __end_of_I2C_2_Master_Init 1B3E      __end_of_I2C_2_Master_Read 1A06      __end_of_I2C_2_Master_Stop 1CEA  
  I2C_2_Master_Write@data_byte 0006                   _TxBufReadCnt 0056                     vfpfcnvrt@c 0019  
                 ??_color_read 000A              ___lmul@multiplier 0005                 ?_isDataInTxBuf 0001  
__end_of_I2C_2_Master_RepStart 1CE0                     ?_sendTxBuf 0001                   ??_initUSART4 0005  
         i2_I2C_2_Master_Start 1CFE           i2_I2C_2_Master_Write 1CCA                       __Hrparam 0000  
            ??_color_normalise 0028                     vfprintf@ap 001C                       __Lrparam 0000  
                   vfprintf@fp 001A                  ??_white_Light 0005    __end_ofi2_I2C_2_Master_Idle 1B8E  
  __end_ofi2_I2C_2_Master_Stop 1CFE                     ?_vfpfcnvrt 000F             __end_of_color_read 1002  
                   _ANSELBbits 0E9A                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                   sprintf@fmt 001F             __end_of_initUSART4 1C62                       __ptext10 1C62  
                     __ptext11 1C7C                       __ptext20 18FC                       __ptext12 1C44  
                     __ptext21 1C24                       __ptext13 0E2C                       __ptext30 1A44  
                     __ptext22 1CBE                       __ptext14 1CD6                       __ptext23 1CE0  
                     __ptext15 19C4                       __ptext32 1C94                       __ptext24 1CEA  
                     __ptext16 1336                       __ptext33 1CCA                       __ptext25 1B3E  
                     __ptext17 1892                       __ptext34 1CF4                       __ptext26 1B14  
                     __ptext18 1478                       __ptext35 1CFE                       __ptext27 1962  
                     __ptext19 11BA                       __ptext36 1B66                       __ptext28 1B8E  
                     __ptext37 1BB4                       __ptext29 1CAC                       __ptext38 1BDA  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA          ?i2_I2C_2_Master_Start 0001  
        ?i2_I2C_2_Master_Write 0001                       isa$xinst 0000                     _RC4STAbits 0EE7  
                     main@RGBC 00EC                       int$flags 005A                       _vfprintf 1A06  
          __end_of_white_Light 1C24                     _INTCONbits 0FF2              ??i2_isDataInTxBuf 0001  
              ??_isDataInTxBuf 0005                       intlevel2 0000                      sprintf@ap 002E  
                  ??_sendTxBuf 0005                    ??_vfpfcnvrt 0012               _color_click_init 18FC  
     __end_of_TxBufferedString 19C4                       sprintf@f 002F                       sprintf@s 001E  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                   ___aldiv@sign 001A  
                   _TX4STAbits 0EE8         ??i2_I2C_2_Master_Start 0002         ??i2_I2C_2_Master_Write 0002  
             ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005  
