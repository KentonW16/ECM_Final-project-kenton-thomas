

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Mar 11 17:50:53 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Generated 21/07/2023 GMT
    73                           ; 
    74                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F67K40 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106   000000                     
   107                           	psect	idataCOMRAM
   108   0041BE                     __pidataCOMRAM:
   109                           	callstack 0
   110                           
   111                           ;initializer for _ambient
   112   0041BE  01F4               	dw	500
   113                           
   114                           	psect	idataBANK0
   115   0041BA                     __pidataBANK0:
   116                           	callstack 0
   117                           
   118                           ;initializer for main@F14627
   119   0041BA  04                 	db	4
   120   0041BB  03                 	db	3
   121   0041BC  09                 	db	9
   122   0041BD  08                 	db	8
   123   000000                     _TRISCbits	set	3971
   124   000000                     _RC4STAbits	set	3815
   125   000000                     _SP4BRGH	set	3814
   126   000000                     _SP4BRGL	set	3813
   127   000000                     _TX4STAbits	set	3816
   128   000000                     _BAUD4CONbits	set	3817
   129   000000                     _TX4REG	set	3812
   130   000000                     _TRISBbits	set	3970
   131   000000                     _TRISAbits	set	3969
   132   000000                     _TRISEbits	set	3973
   133   000000                     _TRISGbits	set	3975
   134   000000                     _LATFbits	set	3966
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISHbits	set	3976
   137   000000                     _TRISDbits	set	3972
   138   000000                     _LATEbits	set	3965
   139   000000                     _LATGbits	set	3967
   140   000000                     _LATHbits	set	3968
   141   000000                     _SSP2CON2bits	set	3802
   142   000000                     _TMR0IF	set	29085
   143   000000                     _TMR0IE	set	29005
   144   000000                     _RX4PPS	set	3605
   145   000000                     _SSP2CLKPPS	set	3612
   146   000000                     _SSP2DATPPS	set	3613
   147   000000                     _PIE0bits	set	3625
   148   000000                     _CCPR4H	set	3873
   149   000000                     _CCPR3H	set	3877
   150   000000                     _CCPR2H	set	4006
   151   000000                     _CCPR1H	set	4010
   152   000000                     _CCP1CONbits	set	4011
   153   000000                     _CCPTMRS0bits	set	4013
   154   000000                     _T2PR	set	4028
   155   000000                     _T2CONbits	set	4029
   156   000000                     _INTCONbits	set	4082
   157   000000                     _CCP2CONbits	set	4007
   158   000000                     _CCP3CONbits	set	3878
   159   000000                     _ADREFbits	set	3928
   160   000000                     _LATAbits	set	3961
   161   000000                     _LATDbits	set	3964
   162   000000                     _PORTFbits	set	3982
   163   000000                     _CCP4CONbits	set	3874
   164   000000                     _PIE4bits	set	3629
   165   000000                     _RD5PPS	set	3695
   166   000000                     _ANSELDbits	set	3751
   167   000000                     _SSP2ADD	set	3798
   168   000000                     _SSP2CON1bits	set	3801
   169   000000                     _LATCbits	set	3963
   170   000000                     _RC4REG	set	3811
   171   000000                     _SSP2CON2	set	3802
   172   000000                     _SSP2STAT	set	3800
   173   000000                     _ANSELFbits	set	3764
   174   000000                     _SSP2BUF	set	3797
   175   000000                     _IPR0bits	set	3615
   176   000000                     _RE2PPS	set	3700
   177   000000                     _ANSELBbits	set	3738
   178   000000                     _RD6PPS	set	3696
   179   000000                     _PIR0bits	set	3635
   180   000000                     _PIR4bits	set	3639
   181   000000                     _RC0PPS	set	3682
   182   000000                     _RC7PPS	set	3689
   183   000000                     _ADPCH	set	3935
   184   000000                     _ADRESH	set	3940
   185   000000                     _ADCON0bits	set	3936
   186   000000                     _RE4PPS	set	3702
   187   000000                     _RG6PPS	set	3720
   188   000000                     _TMR0L	set	4051
   189   000000                     _TMR0H	set	4052
   190   000000                     _T0CON0bits	set	4053
   191   000000                     _T0CON1bits	set	4054
   192   000000                     _T2CLKCONbits	set	4031
   193   000000                     _T2HLTbits	set	4030
   194                           
   195                           ; #config settings
   196                           
   197                           	psect	cinit
   198   003DF0                     __pcinit:
   199                           	callstack 0
   200   003DF0                     start_initialization:
   201                           	callstack 0
   202   003DF0                     __initialization:
   203                           	callstack 0
   204                           
   205                           ; Initialize objects allocated to BANK0 (4 bytes)
   206                           ; load TBLPTR registers with __pidataBANK0
   207   003DF0  0EBA               	movlw	low __pidataBANK0
   208   003DF2  6EF6               	movwf	tblptrl,c
   209   003DF4  0E41               	movlw	high __pidataBANK0
   210   003DF6  6EF7               	movwf	tblptrh,c
   211   003DF8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   212   003DFA  6EF8               	movwf	tblptru,c
   213   003DFC  EE00  F0EA         	lfsr	0,__pdataBANK0
   214   003E00  EE10 F004          	lfsr	1,4
   215   003E04                     copy_data0:
   216   003E04  0009               	tblrd		*+
   217   003E06  CFF5 FFEE          	movff	tablat,postinc0
   218   003E0A  50E5               	movf	postdec1,w,c
   219   003E0C  50E1               	movf	fsr1l,w,c
   220   003E0E  E1FA               	bnz	copy_data0
   221                           
   222                           ; Initialize objects allocated to COMRAM (2 bytes)
   223                           ; load TBLPTR registers with __pidataCOMRAM
   224   003E10  0EBE               	movlw	low __pidataCOMRAM
   225   003E12  6EF6               	movwf	tblptrl,c
   226   003E14  0E41               	movlw	high __pidataCOMRAM
   227   003E16  6EF7               	movwf	tblptrh,c
   228   003E18  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   229   003E1A  6EF8               	movwf	tblptru,c
   230   003E1C  0009               	tblrd		*+	;fetch initializer
   231   003E1E  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   232   003E22  0009               	tblrd		*+	;fetch initializer
   233   003E24  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   234                           
   235                           ; Clear objects allocated to BANK2 (162 bytes)
   236   003E28  EE02  F000         	lfsr	0,__pbssBANK2
   237   003E2C  0EA2               	movlw	162
   238   003E2E                     clear_0:
   239   003E2E  6AEE               	clrf	postinc0,c
   240   003E30  06E8               	decf	wreg,f,c
   241   003E32  E1FD               	bnz	clear_0
   242                           
   243                           ; Clear objects allocated to BANK0 (82 bytes)
   244   003E34  EE00  F060         	lfsr	0,__pbssBANK0
   245   003E38  0E52               	movlw	82
   246   003E3A                     clear_1:
   247   003E3A  6AEE               	clrf	postinc0,c
   248   003E3C  06E8               	decf	wreg,f,c
   249   003E3E  E1FD               	bnz	clear_1
   250                           
   251                           ; Clear objects allocated to COMRAM (4 bytes)
   252   003E40  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   253   003E42  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   254   003E44  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   255   003E46  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   256   003E48                     end_of_initialization:
   257                           	callstack 0
   258   003E48                     __end_of__initialization:
   259                           	callstack 0
   260   003E48  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   261   003E4A  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   262   003E4C  0100               	movlb	0
   263   003E4E  EFB0  F013         	goto	_main	;jump to C main() function
   264                           
   265                           	psect	bssCOMRAM
   266   00004A                     __pbssCOMRAM:
   267                           	callstack 0
   268   00004A                     _TxBufReadCnt:
   269                           	callstack 0
   270   00004A                     	ds	1
   271   00004B                     _TxBufWriteCnt:
   272                           	callstack 0
   273   00004B                     	ds	1
   274   00004C                     _RxBufReadCnt:
   275                           	callstack 0
   276   00004C                     	ds	1
   277   00004D                     _RxBufWriteCnt:
   278                           	callstack 0
   279   00004D                     	ds	1
   280                           
   281                           	psect	dataCOMRAM
   282   00004E                     __pdataCOMRAM:
   283                           	callstack 0
   284   00004E                     _ambient:
   285                           	callstack 0
   286   00004E                     	ds	2
   287                           
   288                           	psect	bssBANK0
   289   000060                     __pbssBANK0:
   290                           	callstack 0
   291   000060                     _EUSART4TXbuf:
   292                           	callstack 0
   293   000060                     	ds	60
   294   00009C                     _EUSART4RXbuf:
   295                           	callstack 0
   296   00009C                     	ds	20
   297   0000B0                     _lost:
   298                           	callstack 0
   299   0000B0                     	ds	1
   300   0000B1                     _wall:
   301                           	callstack 0
   302   0000B1                     	ds	1
   303                           
   304                           	psect	dataBANK0
   305   0000EA                     __pdataBANK0:
   306                           	callstack 0
   307   0000EA                     main@F14627:
   308                           	callstack 0
   309   0000EA                     	ds	4
   310                           
   311                           	psect	bssBANK2
   312   000200                     __pbssBANK2:
   313                           	callstack 0
   314   000200                     	ds	82
   315   000252                     	ds	40
   316   00027A                     	ds	40
   317                           
   318                           	psect	cstackBANK1
   319   000100                     __pcstackBANK1:
   320                           	callstack 0
   321   000100                     main@straightTime:
   322                           	callstack 0
   323                           
   324                           ; 82 bytes @ 0x0
   325   000100                     	ds	82
   326   000152                     main@moveSequence:
   327                           	callstack 0
   328                           
   329                           ; 40 bytes @ 0x52
   330   000152                     	ds	40
   331   00017A                     main@testSequence:
   332                           	callstack 0
   333                           
   334                           ; 4 bytes @ 0x7A
   335   00017A                     	ds	4
   336   00017E                     main@red:
   337                           	callstack 0
   338                           
   339                           ; 6 bytes @ 0x7E
   340   00017E                     	ds	6
   341   000184                     main@green:
   342                           	callstack 0
   343                           
   344                           ; 6 bytes @ 0x84
   345   000184                     	ds	6
   346   00018A                     main@blue:
   347                           	callstack 0
   348                           
   349                           ; 6 bytes @ 0x8A
   350   00018A                     	ds	6
   351   000190                     main@yellow:
   352                           	callstack 0
   353                           
   354                           ; 6 bytes @ 0x90
   355   000190                     	ds	6
   356   000196                     main@pink:
   357                           	callstack 0
   358                           
   359                           ; 6 bytes @ 0x96
   360   000196                     	ds	6
   361   00019C                     main@orange:
   362                           	callstack 0
   363                           
   364                           ; 6 bytes @ 0x9C
   365   00019C                     	ds	6
   366   0001A2                     main@lightblue:
   367                           	callstack 0
   368                           
   369                           ; 6 bytes @ 0xA2
   370   0001A2                     	ds	6
   371   0001A8                     main@white:
   372                           	callstack 0
   373                           
   374                           ; 6 bytes @ 0xA8
   375   0001A8                     	ds	6
   376   0001AE                     main@reverseDuration:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0xAE
   380   0001AE                     	ds	1
   381   0001AF                     main@straightSpeed:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0xAF
   385   0001AF                     	ds	1
   386   0001B0                     main@turnSpeed:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0xB0
   390   0001B0                     	ds	1
   391   0001B1                     main@turnRamp:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0xB1
   395   0001B1                     	ds	1
   396   0001B2                     main@color:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0xB2
   400   0001B2                     	ds	1
   401   0001B3                     main@straightRamp:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0xB3
   405   0001B3                     	ds	1
   406   0001B4                     main@curMove:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0xB4
   410   0001B4                     	ds	1
   411   0001B5                     main@turnDuration:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0xB5
   415   0001B5                     	ds	1
   416   0001B6                     main@RGBC_n:
   417                           	callstack 0
   418                           
   419                           ; 8 bytes @ 0xB6
   420   0001B6                     	ds	8
   421   0001BE                     main@RGBC:
   422                           	callstack 0
   423                           
   424                           ; 8 bytes @ 0xBE
   425   0001BE                     	ds	8
   426   0001C6                     main@motorR:
   427                           	callstack 0
   428                           
   429                           ; 10 bytes @ 0xC6
   430   0001C6                     	ds	10
   431   0001D0                     main@motorL:
   432                           	callstack 0
   433                           
   434                           ; 10 bytes @ 0xD0
   435   0001D0                     	ds	10
   436                           
   437                           	psect	cstackBANK0
   438   0000B2                     __pcstackBANK0:
   439                           	callstack 0
   440   0000B2                     move@mL:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x0
   444   0000B2                     	ds	2
   445   0000B4                     move@mR:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x2
   449   0000B4                     	ds	2
   450   0000B6                     move@color:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x4
   454   0000B6                     	ds	1
   455   0000B7                     move@moveSequence:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x5
   459   0000B7                     	ds	2
   460   0000B9                     move@straightTime:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x7
   464   0000B9                     	ds	2
   465   0000BB                     move@curMove:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x9
   469   0000BB                     	ds	1
   470   0000BC                     move@straightSpeed:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0xA
   474   0000BC                     	ds	1
   475   0000BD                     move@reverseDuration:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0xB
   479   0000BD                     	ds	1
   480   0000BE                     move@straightRamp:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0xC
   484   0000BE                     	ds	1
   485   0000BF                     move@turnSpeed:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0xD
   489   0000BF                     	ds	1
   490   0000C0                     move@turnDuration:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0xE
   494   0000C0                     	ds	1
   495   0000C1                     move@turnRamp:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0xF
   499   0000C1                     	ds	1
   500   0000C2                     main@buf:
   501                           	callstack 0
   502                           
   503                           ; 40 bytes @ 0x10
   504   0000C2                     	ds	40
   505                           
   506                           	psect	cstackCOMRAM
   507   000001                     __pcstackCOMRAM:
   508                           	callstack 0
   509   000001                     ??_getCharFromTxBuf:
   510   000001                     ??i2_I2C_2_Master_Idle:
   511   000001                     putCharToRxBuf@byte:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x0
   515   000001                     	ds	1
   516   000002                     i2I2C_2_Master_Write@data_byte:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x1
   520   000002                     	ds	1
   521   000003                     i2color_writetoaddr@value:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x2
   525   000003                     	ds	1
   526   000004                     i2color_writetoaddr@address:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x3
   530   000004                     	ds	1
   531   000005                     ??i2_color_clear_init_interrupts:
   532                           
   533                           ; 1 bytes @ 0x4
   534   000005                     	ds	1
   535   000006                     i2color_clear_init_interrupts@high_threshold:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x5
   539   000006                     	ds	2
   540   000008                     i2color_clear_init_interrupts@low_threshold:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x7
   544   000008                     	ds	2
   545   00000A                     ??_HighISR:
   546                           
   547                           ; 1 bytes @ 0x9
   548   00000A                     	ds	2
   549   00000C                     ??_I2C_2_Master_Idle:
   550   00000C                     ?_get16bitTMR0val:
   551                           	callstack 0
   552   00000C                     ?___wmul:
   553                           	callstack 0
   554   00000C                     ?___awdiv:
   555                           	callstack 0
   556   00000C                     ?___lmul:
   557                           	callstack 0
   558   00000C                     white_Light@state:
   559                           	callstack 0
   560   00000C                     ADC_getval@tmpval:
   561                           	callstack 0
   562   00000C                     initDCmotorsPWM@PWMperiod:
   563                           	callstack 0
   564   00000C                     ___wmul@multiplier:
   565                           	callstack 0
   566   00000C                     ___awdiv@dividend:
   567                           	callstack 0
   568   00000C                     ___lmul@multiplier:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0xB
   572   00000C                     	ds	1
   573   00000D                     ??_I2C_2_Master_Read:
   574   00000D                     I2C_2_Master_Write@data_byte:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0xC
   578   00000D                     	ds	1
   579   00000E                     ??_get16bitTMR0val:
   580   00000E                     color_writetoaddr@value:
   581                           	callstack 0
   582   00000E                     I2C_2_Master_Read@ack:
   583                           	callstack 0
   584   00000E                     ___wmul@multiplicand:
   585                           	callstack 0
   586   00000E                     ___awdiv@divisor:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0xD
   590   00000E                     	ds	1
   591   00000F                     color_writetoaddr@address:
   592                           	callstack 0
   593   00000F                     I2C_2_Master_Read@tmp:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0xE
   597   00000F                     	ds	1
   598   000010                     ??_color_clear_init_interrupts:
   599   000010                     ___awdiv@counter:
   600                           	callstack 0
   601   000010                     color_read@RGBC:
   602                           	callstack 0
   603   000010                     get16bitTMR0val@timer_low:
   604                           	callstack 0
   605   000010                     ___wmul@product:
   606                           	callstack 0
   607   000010                     ___lmul@multiplicand:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0xF
   611   000010                     	ds	1
   612   000011                     ___awdiv@sign:
   613                           	callstack 0
   614   000011                     color_clear_init_interrupts@high_threshold:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x10
   618   000011                     	ds	1
   619   000012                     ??_color_read:
   620   000012                     ?___lwdiv:
   621                           	callstack 0
   622   000012                     get16bitTMR0val@timer_high:
   623                           	callstack 0
   624   000012                     ___awdiv@quotient:
   625                           	callstack 0
   626   000012                     ___lwdiv@dividend:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x11
   630   000012                     	ds	1
   631   000013                     color_clear_init_interrupts@low_threshold:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x12
   635   000013                     	ds	1
   636   000014                     batteryLevel@batteryVoltage:
   637                           	callstack 0
   638   000014                     get16bitTMR0val@timer_val:
   639                           	callstack 0
   640   000014                     ___lwdiv@divisor:
   641                           	callstack 0
   642   000014                     ___lmul@product:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x13
   646   000014                     	ds	1
   647   000015                     ??_color_click_init:
   648   000015                     batteryLevel@batteryQuarter:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x14
   652   000015                     	ds	1
   653   000016                     ___lwdiv@quotient:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x15
   657   000016                     	ds	2
   658   000018                     ?___aldiv:
   659                           	callstack 0
   660   000018                     ___lwdiv@counter:
   661                           	callstack 0
   662   000018                     ___aldiv@dividend:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0x17
   666   000018                     	ds	1
   667   000019                     setMotorPWM@m:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x18
   671   000019                     	ds	2
   672   00001B                     ??_setMotorPWM:
   673                           
   674                           ; 1 bytes @ 0x1A
   675   00001B                     	ds	1
   676   00001C                     ___aldiv@divisor:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x1B
   680   00001C                     	ds	1
   681   00001D                     setMotorPWM@posDuty:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x1C
   685   00001D                     	ds	1
   686   00001E                     setMotorPWM@negDuty:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x1D
   690   00001E                     	ds	1
   691   00001F                     stop@mL:
   692                           	callstack 0
   693   00001F                     turnLeft@mL:
   694                           	callstack 0
   695   00001F                     turnRight@mL:
   696                           	callstack 0
   697   00001F                     fullSpeedAhead@mL:
   698                           	callstack 0
   699   00001F                     reverseOneSquare@mL:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x1E
   703   00001F                     	ds	1
   704   000020                     ___aldiv@counter:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x1F
   708   000020                     	ds	1
   709   000021                     ___aldiv@sign:
   710                           	callstack 0
   711   000021                     stop@mR:
   712                           	callstack 0
   713   000021                     turnLeft@mR:
   714                           	callstack 0
   715   000021                     turnRight@mR:
   716                           	callstack 0
   717   000021                     fullSpeedAhead@mR:
   718                           	callstack 0
   719   000021                     reverseOneSquare@mR:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x20
   723   000021                     	ds	1
   724   000022                     ___aldiv@quotient:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x21
   728   000022                     	ds	1
   729   000023                     stop@straightRamp:
   730                           	callstack 0
   731   000023                     turnLeft@turnSpeed:
   732                           	callstack 0
   733   000023                     turnRight@turnSpeed:
   734                           	callstack 0
   735   000023                     fullSpeedAhead@straightSpeed:
   736                           	callstack 0
   737   000023                     reverseOneSquare@straightSpeed:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x22
   741   000023                     	ds	1
   742   000024                     ??_stop:
   743   000024                     turnLeft@turnDuration:
   744                           	callstack 0
   745   000024                     turnRight@turnDuration:
   746                           	callstack 0
   747   000024                     fullSpeedAhead@straightRamp:
   748                           	callstack 0
   749   000024                     reverseOneSquare@reverseDuration:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x23
   753   000024                     	ds	1
   754   000025                     ??_fullSpeedAhead:
   755   000025                     turnLeft@turnRamp:
   756                           	callstack 0
   757   000025                     turnRight@turnRamp:
   758                           	callstack 0
   759   000025                     reverseOneSquare@straightRamp:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x24
   763   000025                     	ds	1
   764   000026                     ??_turnRight:
   765   000026                     ??_turnLeft:
   766   000026                     ??_reverseOneSquare:
   767   000026                     color_normalise@RGBC:
   768                           	callstack 0
   769                           
   770                           ; 8 bytes @ 0x25
   771   000026                     	ds	1
   772   000027                     stop@i:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x26
   776   000027                     	ds	1
   777   000028                     fullSpeedAhead@i:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x27
   781   000028                     	ds	1
   782   000029                     stop@cur_power:
   783                           	callstack 0
   784   000029                     turnLeft@i:
   785                           	callstack 0
   786   000029                     turnRight@i:
   787                           	callstack 0
   788   000029                     reverseOneSquare@i:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x28
   792   000029                     	ds	1
   793   00002A                     fullSpeedAhead@cur_power:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x29
   797   00002A                     	ds	1
   798   00002B                     turnLeft@cur_power:
   799                           	callstack 0
   800   00002B                     turnRight@cur_power:
   801                           	callstack 0
   802   00002B                     reverseOneSquare@cur_power:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x2A
   806   00002B                     	ds	2
   807   00002D                     returnHome@mL:
   808                           	callstack 0
   809   00002D                     lostReturnHome@mL:
   810                           	callstack 0
   811   00002D                     calibration@mL:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x2C
   815   00002D                     	ds	1
   816   00002E                     color_normalise@RGBC_n:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x2D
   820   00002E                     	ds	1
   821   00002F                     returnHome@mR:
   822                           	callstack 0
   823   00002F                     lostReturnHome@mR:
   824                           	callstack 0
   825   00002F                     calibration@mR:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x2E
   829   00002F                     	ds	1
   830   000030                     ??_color_normalise:
   831                           
   832                           ; 1 bytes @ 0x2F
   833   000030                     	ds	1
   834   000031                     calibration@turnSpeed:
   835                           	callstack 0
   836   000031                     returnHome@moveSequence:
   837                           	callstack 0
   838   000031                     lostReturnHome@moveSequence:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x30
   842   000031                     	ds	1
   843   000032                     color_calibration@RGBC:
   844                           	callstack 0
   845   000032                     calibration@turnDuration:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x31
   849   000032                     	ds	1
   850   000033                     returnHome@straightTime:
   851                           	callstack 0
   852   000033                     lostReturnHome@straightTime:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x32
   856   000033                     	ds	1
   857   000034                     calibration@turnRamp:
   858                           	callstack 0
   859   000034                     color_calibration@RGBC_n:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x33
   863   000034                     	ds	1
   864   000035                     ??_calibration:
   865   000035                     returnHome@curMove:
   866                           	callstack 0
   867   000035                     lostReturnHome@curMove:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x34
   871   000035                     	ds	1
   872   000036                     returnHome@straightSpeed:
   873                           	callstack 0
   874   000036                     lostReturnHome@straightSpeed:
   875                           	callstack 0
   876   000036                     color_calibration@red:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x35
   880   000036                     	ds	1
   881   000037                     returnHome@reverseDuration:
   882                           	callstack 0
   883   000037                     lostReturnHome@reverseDuration:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x36
   887   000037                     	ds	1
   888   000038                     returnHome@straightRamp:
   889                           	callstack 0
   890   000038                     lostReturnHome@straightRamp:
   891                           	callstack 0
   892   000038                     color_calibration@green:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x37
   896   000038                     	ds	1
   897   000039                     returnHome@turnSpeed:
   898                           	callstack 0
   899   000039                     lostReturnHome@turnSpeed:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x38
   903   000039                     	ds	1
   904   00003A                     returnHome@turnDuration:
   905                           	callstack 0
   906   00003A                     lostReturnHome@turnDuration:
   907                           	callstack 0
   908   00003A                     color_calibration@blue:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x39
   912   00003A                     	ds	1
   913   00003B                     returnHome@turnRamp:
   914                           	callstack 0
   915   00003B                     lostReturnHome@turnRamp:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x3A
   919   00003B                     	ds	1
   920   00003C                     ??_lostReturnHome:
   921   00003C                     ??_returnHome:
   922   00003C                     color_calibration@yellow:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x3B
   926   00003C                     	ds	2
   927   00003E                     color_calibration@pink:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x3D
   931   00003E                     	ds	2
   932   000040                     returnHome@i:
   933                           	callstack 0
   934   000040                     lostReturnHome@i:
   935                           	callstack 0
   936   000040                     color_calibration@orange:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x3F
   940   000040                     	ds	1
   941   000041                     ??_move:
   942                           
   943                           ; 1 bytes @ 0x40
   944   000041                     	ds	1
   945   000042                     color_calibration@lightblue:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x41
   949   000042                     	ds	2
   950   000044                     color_calibration@white:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x43
   954   000044                     	ds	2
   955   000046                     ??_color_calibration:
   956                           
   957                           ; 1 bytes @ 0x45
   958   000046                     	ds	2
   959   000048                     ??_main:
   960                           
   961                           ; 1 bytes @ 0x47
   962   000048                     	ds	2
   963                           
   964 ;;
   965 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   966 ;;
   967 ;; *************** function _main *****************
   968 ;; Defined at:
   969 ;;		line 28 in file "main.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  straightTime   82    0[BANK1 ] unsigned int [41]
   974 ;;  moveSequence   40   82[BANK1 ] unsigned char [40]
   975 ;;  buf            40   16[BANK0 ] unsigned char [40]
   976 ;;  motorL         10  208[BANK1 ] struct DC_motor
   977 ;;  motorR         10  198[BANK1 ] struct DC_motor
   978 ;;  RGBC            8  190[BANK1 ] struct RGBC_val
   979 ;;  RGBC_n          8  182[BANK1 ] struct RGBC_val
   980 ;;  white           6  168[BANK1 ] struct RGB_calib
   981 ;;  lightblue       6  162[BANK1 ] struct RGB_calib
   982 ;;  orange          6  156[BANK1 ] struct RGB_calib
   983 ;;  pink            6  150[BANK1 ] struct RGB_calib
   984 ;;  yellow          6  144[BANK1 ] struct RGB_calib
   985 ;;  blue            6  138[BANK1 ] struct RGB_calib
   986 ;;  green           6  132[BANK1 ] struct RGB_calib
   987 ;;  red             6  126[BANK1 ] struct RGB_calib
   988 ;;  testSequence    4  122[BANK1 ] unsigned char [4]
   989 ;;  PWMcycle        2    0        unsigned int 
   990 ;;  turnDuration    1  181[BANK1 ] unsigned char 
   991 ;;  curMove         1  180[BANK1 ] unsigned char 
   992 ;;  straightRamp    1  179[BANK1 ] unsigned char 
   993 ;;  color           1  178[BANK1 ] unsigned char 
   994 ;;  turnRamp        1  177[BANK1 ] unsigned char 
   995 ;;  turnSpeed       1  176[BANK1 ] unsigned char 
   996 ;;  straightSpee    1  175[BANK1 ] unsigned char 
   997 ;;  reverseDurat    1  174[BANK1 ] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Locals:         0      40     218       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;      Totals:         2      40     218       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;Total ram usage:      260 bytes
  1012 ;; Hardware stack levels required when called: 10
  1013 ;; This function calls:
  1014 ;;		_Buggy_init
  1015 ;;		_Interrupts_init
  1016 ;;		_Timer0_init
  1017 ;;		_batteryLevel
  1018 ;;		_calibration
  1019 ;;		_color_calibration
  1020 ;;		_color_click_init
  1021 ;;		_color_normalise
  1022 ;;		_color_read
  1023 ;;		_fullSpeedAhead
  1024 ;;		_get16bitTMR0val
  1025 ;;		_initDCmotorsPWM
  1026 ;;		_initUSART4
  1027 ;;		_lostReturnHome
  1028 ;;		_move
  1029 ;;		_resetTimer
  1030 ;;		_stop
  1031 ;;		_white_Light
  1032 ;; This function is called by:
  1033 ;;		Startup code after reset
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text0
  1038   002760                     __ptext0:
  1039                           	callstack 0
  1040   002760                     _main:
  1041                           	callstack 21
  1042   002760                     
  1043                           ;main.c: 30:     char buf[40] = {0};
  1044   002760  EE20  F0C2         	lfsr	2,main@buf
  1045   002764  0E27               	movlw	39
  1046   002766                     u2531:
  1047   002766  6ADE               	clrf	postinc2,c
  1048   002768  06E8               	decf	wreg,f,c
  1049   00276A  E2FD               	bc	u2531
  1050   00276C                     
  1051                           ;main.c: 32:     unsigned char color = 0;
  1052   00276C  0E00               	movlw	0
  1053   00276E  0101               	movlb	1	; () banked
  1054   002770  6FB2               	movwf	main@color& (0+255),b
  1055                           
  1056                           ;main.c: 33:     unsigned char moveSequence[40] = {0};
  1057   002772  EE21  F052         	lfsr	2,main@moveSequence
  1058   002776  0E27               	movlw	39
  1059   002778                     u2541:
  1060   002778  6ADE               	clrf	postinc2,c
  1061   00277A  06E8               	decf	wreg,f,c
  1062   00277C  E2FD               	bc	u2541
  1063                           
  1064                           ;main.c: 34:     unsigned int straightTime[41] = {0};
  1065   00277E  EE21  F000         	lfsr	2,main@straightTime
  1066   002782  0E51               	movlw	81
  1067   002784                     u2551:
  1068   002784  6ADE               	clrf	postinc2,c
  1069   002786  06E8               	decf	wreg,f,c
  1070   002788  E2FD               	bc	u2551
  1071   00278A                     
  1072                           ; BSR set to: 1
  1073                           ;main.c: 35:     char curMove = 0;
  1074   00278A  0E00               	movlw	0
  1075   00278C  6FB4               	movwf	main@curMove& (0+255),b
  1076   00278E                     
  1077                           ; BSR set to: 1
  1078                           ;main.c: 37:     unsigned char testSequence[4] = {4,3,9,8};
  1079   00278E  C0EA  F17A         	movff	main@F14627,main@testSequence
  1080   002792  C0EB  F17B         	movff	main@F14627+1,main@testSequence+1
  1081   002796  C0EC  F17C         	movff	main@F14627+2,main@testSequence+2
  1082   00279A  C0ED  F17D         	movff	main@F14627+3,main@testSequence+3
  1083   00279E                     
  1084                           ; BSR set to: 1
  1085                           ;main.c: 40:     struct RGBC_val RGBC, RGBC_n;;main.c: 41:     struct DC_motor motorL, m
      +                          otorR;;main.c: 44:     Buggy_init();
  1086   00279E  EC8D  F01F         	call	_Buggy_init	;wreg free
  1087   0027A2                     
  1088                           ;main.c: 45:     color_click_init();
  1089   0027A2  EC71  F01F         	call	_color_click_init	;wreg free
  1090   0027A6                     
  1091                           ;main.c: 46:     Timer0_init();
  1092   0027A6  EC54  F020         	call	_Timer0_init	;wreg free
  1093   0027AA                     
  1094                           ;main.c: 47:     Interrupts_init();
  1095   0027AA  ECA8  F020         	call	_Interrupts_init	;wreg free
  1096   0027AE                     
  1097                           ;main.c: 48:     initUSART4();
  1098   0027AE  EC74  F020         	call	_initUSART4	;wreg free
  1099   0027B2                     
  1100                           ;main.c: 49:     initDCmotorsPWM(PWMcycle);
  1101   0027B2  0E00               	movlw	0
  1102   0027B4  6E0D               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1103   0027B6  0EC7               	movlw	199
  1104   0027B8  6E0C               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1105   0027BA  ECC7  F01D         	call	_initDCmotorsPWM	;wreg free
  1106   0027BE                     
  1107                           ;main.c: 51:     motorL.power=0;
  1108   0027BE  0E00               	movlw	0
  1109   0027C0  0101               	movlb	1	; () banked
  1110   0027C2  6FD0               	movwf	main@motorL& (0+255),b
  1111   0027C4                     
  1112                           ; BSR set to: 1
  1113                           ;main.c: 52:     motorL.direction=1;
  1114   0027C4  0E01               	movlw	1
  1115   0027C6  6FD1               	movwf	(main@motorL+1)& (0+255),b
  1116   0027C8                     
  1117                           ; BSR set to: 1
  1118                           ;main.c: 53:     motorL.brakemode=1;
  1119   0027C8  0E01               	movlw	1
  1120   0027CA  6FD2               	movwf	(main@motorL+2)& (0+255),b
  1121   0027CC                     
  1122                           ; BSR set to: 1
  1123                           ;main.c: 54:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1124   0027CC  0EAA               	movlw	170
  1125   0027CE  6FD5               	movwf	(main@motorL+5)& (0+255),b
  1126   0027D0  0E0F               	movlw	15
  1127   0027D2  6FD6               	movwf	(main@motorL+6)& (0+255),b
  1128   0027D4                     
  1129                           ; BSR set to: 1
  1130                           ;main.c: 55:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1131   0027D4  0EA6               	movlw	166
  1132   0027D6  6FD7               	movwf	(main@motorL+7)& (0+255),b
  1133   0027D8  0E0F               	movlw	15
  1134   0027DA  6FD8               	movwf	(main@motorL+8)& (0+255),b
  1135   0027DC                     
  1136                           ; BSR set to: 1
  1137                           ;main.c: 56:     motorL.PWMperiod=PWMcycle;
  1138   0027DC  0E00               	movlw	0
  1139   0027DE  6FD4               	movwf	(main@motorL+4)& (0+255),b
  1140   0027E0  0EC7               	movlw	199
  1141   0027E2  6FD3               	movwf	(main@motorL+3)& (0+255),b
  1142   0027E4                     
  1143                           ; BSR set to: 1
  1144                           ;main.c: 57:     motorL.compensation=3;
  1145   0027E4  0E03               	movlw	3
  1146   0027E6  6FD9               	movwf	(main@motorL+9)& (0+255),b
  1147   0027E8                     
  1148                           ; BSR set to: 1
  1149                           ;main.c: 59:     motorR.power=0;
  1150   0027E8  0E00               	movlw	0
  1151   0027EA  6FC6               	movwf	main@motorR& (0+255),b
  1152   0027EC                     
  1153                           ; BSR set to: 1
  1154                           ;main.c: 60:     motorR.direction=1;
  1155   0027EC  0E01               	movlw	1
  1156   0027EE  6FC7               	movwf	(main@motorR+1)& (0+255),b
  1157   0027F0                     
  1158                           ; BSR set to: 1
  1159                           ;main.c: 61:     motorR.brakemode=1;
  1160   0027F0  0E01               	movlw	1
  1161   0027F2  6FC8               	movwf	(main@motorR+2)& (0+255),b
  1162   0027F4                     
  1163                           ; BSR set to: 1
  1164                           ;main.c: 62:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1165   0027F4  0E25               	movlw	37
  1166   0027F6  6FCB               	movwf	(main@motorR+5)& (0+255),b
  1167   0027F8  0E0F               	movlw	15
  1168   0027FA  6FCC               	movwf	(main@motorR+6)& (0+255),b
  1169   0027FC                     
  1170                           ; BSR set to: 1
  1171                           ;main.c: 63:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1172   0027FC  0E21               	movlw	33
  1173   0027FE  6FCD               	movwf	(main@motorR+7)& (0+255),b
  1174   002800  0E0F               	movlw	15
  1175   002802  6FCE               	movwf	(main@motorR+8)& (0+255),b
  1176   002804                     
  1177                           ; BSR set to: 1
  1178                           ;main.c: 64:     motorR.PWMperiod=PWMcycle;
  1179   002804  0E00               	movlw	0
  1180   002806  6FCA               	movwf	(main@motorR+4)& (0+255),b
  1181   002808  0EC7               	movlw	199
  1182   00280A  6FC9               	movwf	(main@motorR+3)& (0+255),b
  1183   00280C                     
  1184                           ; BSR set to: 1
  1185                           ;main.c: 65:     motorR.compensation=0;
  1186   00280C  0E00               	movlw	0
  1187   00280E  6FCF               	movwf	(main@motorR+9)& (0+255),b
  1188   002810                     
  1189                           ; BSR set to: 1
  1190                           ;main.c: 68:     char straightSpeed=25;
  1191   002810  0E19               	movlw	25
  1192   002812  6FAF               	movwf	main@straightSpeed& (0+255),b
  1193   002814                     
  1194                           ; BSR set to: 1
  1195                           ;main.c: 69:     unsigned char straightRamp=1;
  1196   002814  0E01               	movlw	1
  1197   002816  6FB3               	movwf	main@straightRamp& (0+255),b
  1198   002818                     
  1199                           ; BSR set to: 1
  1200                           ;main.c: 71:     unsigned char reverseDuration=10;
  1201   002818  0E0A               	movlw	10
  1202   00281A  6FAE               	movwf	main@reverseDuration& (0+255),b
  1203   00281C                     
  1204                           ; BSR set to: 1
  1205                           ;main.c: 73:     char turnSpeed=20;
  1206   00281C  0E14               	movlw	20
  1207   00281E  6FB0               	movwf	main@turnSpeed& (0+255),b
  1208   002820                     
  1209                           ; BSR set to: 1
  1210                           ;main.c: 74:     unsigned char turnDuration=5;
  1211   002820  0E05               	movlw	5
  1212   002822  6FB5               	movwf	main@turnDuration& (0+255),b
  1213   002824                     
  1214                           ; BSR set to: 1
  1215                           ;main.c: 75:     unsigned char turnRamp=2;
  1216   002824  0E02               	movlw	2
  1217   002826  6FB1               	movwf	main@turnRamp& (0+255),b
  1218   002828                     
  1219                           ; BSR set to: 1
  1220                           ;main.c: 78:     batteryLevel();
  1221   002828  EC29  F01F         	call	_batteryLevel	;wreg free
  1222   00282C                     l87:
  1223   00282C  B48E               	btfsc	142,2,c	;volatile
  1224   00282E  EF1B  F014         	goto	u2561
  1225   002832  EF1D  F014         	goto	u2560
  1226   002836                     u2561:
  1227   002836  EF16  F014         	goto	l87
  1228   00283A                     u2560:
  1229   00283A                     
  1230                           ;main.c: 82:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1231   00283A  9680               	bcf	128,3,c	;volatile
  1232   00283C  9E7C               	bcf	124,7,c	;volatile
  1233                           
  1234                           ;main.c: 105:     LATHbits.LATH1=LATDbits.LATD3=1;
  1235   00283E  867C               	bsf	124,3,c	;volatile
  1236   002840  8280               	bsf	128,1,c	;volatile
  1237   002842                     
  1238                           ;main.c: 106:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1239   002842  0E29               	movlw	41
  1240   002844  6E49               	movwf	(??_main+1)^0,c
  1241   002846  0E96               	movlw	150
  1242   002848  6E48               	movwf	??_main^0,c
  1243   00284A  0E7F               	movlw	127
  1244   00284C                     u2647:
  1245   00284C  2EE8               	decfsz	wreg,f,c
  1246   00284E  D7FE               	bra	u2647
  1247   002850  2E48               	decfsz	??_main^0,f,c
  1248   002852  D7FC               	bra	u2647
  1249   002854  2E49               	decfsz	(??_main+1)^0,f,c
  1250   002856  D7FA               	bra	u2647
  1251   002858  0000               	nop	
  1252   00285A                     
  1253                           ;main.c: 109:     struct RGB_calib red, green, blue, yellow, pink, orange, lightblue, wh
      +                          ite;;main.c: 110:     color_calibration(&RGBC, &RGBC_n, &red, &green, &blue, &yellow, &p
      +                          ink, &orange, &lightblue, &white);
  1254   00285A  0EBE               	movlw	low main@RGBC
  1255   00285C  6E32               	movwf	color_calibration@RGBC^0,c
  1256   00285E  0E01               	movlw	high main@RGBC
  1257   002860  6E33               	movwf	(color_calibration@RGBC+1)^0,c
  1258   002862  0EB6               	movlw	low main@RGBC_n
  1259   002864  6E34               	movwf	color_calibration@RGBC_n^0,c
  1260   002866  0E01               	movlw	high main@RGBC_n
  1261   002868  6E35               	movwf	(color_calibration@RGBC_n+1)^0,c
  1262   00286A  0E7E               	movlw	low main@red
  1263   00286C  6E36               	movwf	color_calibration@red^0,c
  1264   00286E  0E01               	movlw	high main@red
  1265   002870  6E37               	movwf	(color_calibration@red+1)^0,c
  1266   002872  0E84               	movlw	low main@green
  1267   002874  6E38               	movwf	color_calibration@green^0,c
  1268   002876  0E01               	movlw	high main@green
  1269   002878  6E39               	movwf	(color_calibration@green+1)^0,c
  1270   00287A  0E8A               	movlw	low main@blue
  1271   00287C  6E3A               	movwf	color_calibration@blue^0,c
  1272   00287E  0E01               	movlw	high main@blue
  1273   002880  6E3B               	movwf	(color_calibration@blue+1)^0,c
  1274   002882  0E90               	movlw	low main@yellow
  1275   002884  6E3C               	movwf	color_calibration@yellow^0,c
  1276   002886  0E01               	movlw	high main@yellow
  1277   002888  6E3D               	movwf	(color_calibration@yellow+1)^0,c
  1278   00288A  0E96               	movlw	low main@pink
  1279   00288C  6E3E               	movwf	color_calibration@pink^0,c
  1280   00288E  0E01               	movlw	high main@pink
  1281   002890  6E3F               	movwf	(color_calibration@pink+1)^0,c
  1282   002892  0E9C               	movlw	low main@orange
  1283   002894  6E40               	movwf	color_calibration@orange^0,c
  1284   002896  0E01               	movlw	high main@orange
  1285   002898  6E41               	movwf	(color_calibration@orange+1)^0,c
  1286   00289A  0EA2               	movlw	low main@lightblue
  1287   00289C  6E42               	movwf	color_calibration@lightblue^0,c
  1288   00289E  0E01               	movlw	high main@lightblue
  1289   0028A0  6E43               	movwf	(color_calibration@lightblue+1)^0,c
  1290   0028A2  0EA8               	movlw	low main@white
  1291   0028A4  6E44               	movwf	color_calibration@white^0,c
  1292   0028A6  0E01               	movlw	high main@white
  1293   0028A8  6E45               	movwf	(color_calibration@white+1)^0,c
  1294   0028AA  ECDA  F010         	call	_color_calibration	;wreg free
  1295   0028AE                     
  1296                           ;main.c: 113:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1297   0028AE  0ED0               	movlw	low main@motorL
  1298   0028B0  6E2D               	movwf	calibration@mL^0,c
  1299   0028B2  0E01               	movlw	high main@motorL
  1300   0028B4  6E2E               	movwf	(calibration@mL+1)^0,c
  1301   0028B6  0EC6               	movlw	low main@motorR
  1302   0028B8  6E2F               	movwf	calibration@mR^0,c
  1303   0028BA  0E01               	movlw	high main@motorR
  1304   0028BC  6E30               	movwf	(calibration@mR+1)^0,c
  1305   0028BE  0E14               	movlw	20
  1306   0028C0  6E31               	movwf	calibration@turnSpeed^0,c
  1307   0028C2  0EB5               	movlw	low main@turnDuration
  1308   0028C4  6E32               	movwf	calibration@turnDuration^0,c
  1309   0028C6  0E01               	movlw	high main@turnDuration
  1310   0028C8  6E33               	movwf	(calibration@turnDuration+1)^0,c
  1311   0028CA  0E02               	movlw	2
  1312   0028CC  6E34               	movwf	calibration@turnRamp^0,c
  1313   0028CE  EC83  F015         	call	_calibration	;wreg free
  1314   0028D2                     
  1315                           ;main.c: 116:     white_Light(1);
  1316   0028D2  0E01               	movlw	1
  1317   0028D4  EC32  F020         	call	_white_Light
  1318   0028D8                     
  1319                           ;main.c: 117:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1320   0028D8  0E52               	movlw	82
  1321   0028DA  6E49               	movwf	(??_main+1)^0,c
  1322   0028DC  0E2B               	movlw	43
  1323   0028DE  6E48               	movwf	??_main^0,c
  1324   0028E0  0E00               	movlw	0
  1325   0028E2                     u2657:
  1326   0028E2  2EE8               	decfsz	wreg,f,c
  1327   0028E4  D7FE               	bra	u2657
  1328   0028E6  2E48               	decfsz	??_main^0,f,c
  1329   0028E8  D7FC               	bra	u2657
  1330   0028EA  2E49               	decfsz	(??_main+1)^0,f,c
  1331   0028EC  D7FA               	bra	u2657
  1332   0028EE  D000               	nop2	
  1333   0028F0                     
  1334                           ;main.c: 120:     color_read(&RGBC);
  1335   0028F0  0EBE               	movlw	low main@RGBC
  1336   0028F2  6E10               	movwf	color_read@RGBC^0,c
  1337   0028F4  0E01               	movlw	high main@RGBC
  1338   0028F6  6E11               	movwf	(color_read@RGBC+1)^0,c
  1339   0028F8  ECD0  F016         	call	_color_read	;wreg free
  1340   0028FC                     
  1341                           ;main.c: 121:     ambient=RGBC.C;
  1342   0028FC  C1C4  F04E         	movff	main@RGBC+6,_ambient
  1343   002900  C1C5  F04F         	movff	main@RGBC+7,_ambient+1
  1344   002904                     
  1345                           ;main.c: 122:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1346   002904  0E29               	movlw	41
  1347   002906  6E49               	movwf	(??_main+1)^0,c
  1348   002908  0E96               	movlw	150
  1349   00290A  6E48               	movwf	??_main^0,c
  1350   00290C  0E7F               	movlw	127
  1351   00290E                     u2667:
  1352   00290E  2EE8               	decfsz	wreg,f,c
  1353   002910  D7FE               	bra	u2667
  1354   002912  2E48               	decfsz	??_main^0,f,c
  1355   002914  D7FC               	bra	u2667
  1356   002916  2E49               	decfsz	(??_main+1)^0,f,c
  1357   002918  D7FA               	bra	u2667
  1358   00291A  0000               	nop	
  1359   00291C                     
  1360                           ;main.c: 124:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1361   00291C  0ED0               	movlw	low main@motorL
  1362   00291E  6E1F               	movwf	fullSpeedAhead@mL^0,c
  1363   002920  0E01               	movlw	high main@motorL
  1364   002922  6E20               	movwf	(fullSpeedAhead@mL+1)^0,c
  1365   002924  0EC6               	movlw	low main@motorR
  1366   002926  6E21               	movwf	fullSpeedAhead@mR^0,c
  1367   002928  0E01               	movlw	high main@motorR
  1368   00292A  6E22               	movwf	(fullSpeedAhead@mR+1)^0,c
  1369   00292C  0E19               	movlw	25
  1370   00292E  6E23               	movwf	fullSpeedAhead@straightSpeed^0,c
  1371   002930  0E01               	movlw	1
  1372   002932  6E24               	movwf	fullSpeedAhead@straightRamp^0,c
  1373   002934  ECF3  F01C         	call	_fullSpeedAhead	;wreg free
  1374   002938                     
  1375                           ;main.c: 125:     resetTimer();
  1376   002938  ECBF  F020         	call	_resetTimer	;wreg free
  1377   00293C                     
  1378                           ;main.c: 127:     wall=0;
  1379   00293C  0E00               	movlw	0
  1380   00293E  0100               	movlb	0	; () banked
  1381   002940  6FB1               	movwf	_wall& (0+255),b
  1382   002942                     
  1383                           ; BSR set to: 0
  1384                           ;main.c: 128:     lost=0;
  1385   002942  0E00               	movlw	0
  1386   002944  6FB0               	movwf	_lost& (0+255),b
  1387   002946                     l3988:
  1388                           
  1389                           ;main.c: 131:         if (wall == 1) {
  1390   002946  0100               	movlb	0	; () banked
  1391   002948  05B1               	decf	_wall& (0+255),w,b
  1392   00294A  A4D8               	btfss	status,2,c
  1393   00294C  EFAA  F014         	goto	u2571
  1394   002950  EFAC  F014         	goto	u2570
  1395   002954                     u2571:
  1396   002954  EF31  F015         	goto	l4016
  1397   002958                     u2570:
  1398   002958                     
  1399                           ; BSR set to: 0
  1400                           ;main.c: 132:             PIE0bits.INT0IE=TMR0IE=0;
  1401   002958  010E               	movlb	14	; () banked
  1402   00295A  9B29               	bcf	41,5,b	;volatile
  1403   00295C  AB29               	btfss	41,5,b	;volatile
  1404   00295E  D002               	bra	u2585
  1405   002960  8129               	bsf	41,0,b	;volatile
  1406   002962  D002               	bra	u2587
  1407   002964                     u2585:
  1408   002964  010E               	movlb	14	; () banked
  1409   002966  9129               	bcf	41,0,b	;volatile
  1410   002968                     u2587:
  1411   002968                     
  1412                           ; BSR set to: 14
  1413                           ;main.c: 133:             straightTime[curMove] = get16bitTMR0val();
  1414   002968  ECBD  F01F         	call	_get16bitTMR0val	;wreg free
  1415   00296C  0101               	movlb	1	; () banked
  1416   00296E  51B4               	movf	main@curMove& (0+255),w,b
  1417   002970  0D02               	mullw	2
  1418   002972  0E00               	movlw	low main@straightTime
  1419   002974  24F3               	addwf	243,w,c
  1420   002976  6ED9               	movwf	fsr2l,c
  1421   002978  0E01               	movlw	high main@straightTime
  1422   00297A  20F4               	addwfc	prodh,w,c
  1423   00297C  6EDA               	movwf	fsr2h,c
  1424   00297E  C00C  FFDE         	movff	?_get16bitTMR0val,postinc2
  1425   002982  C00D  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1426                           
  1427                           ;main.c: 136:             stop(&motorL, &motorR, straightRamp);
  1428   002986  0ED0               	movlw	low main@motorL
  1429   002988  6E1F               	movwf	stop@mL^0,c
  1430   00298A  0E01               	movlw	high main@motorL
  1431   00298C  6E20               	movwf	(stop@mL+1)^0,c
  1432   00298E  0EC6               	movlw	low main@motorR
  1433   002990  6E21               	movwf	stop@mR^0,c
  1434   002992  0E01               	movlw	high main@motorR
  1435   002994  6E22               	movwf	(stop@mR+1)^0,c
  1436   002996  C1B3  F023         	movff	main@straightRamp,stop@straightRamp
  1437   00299A  EC6F  F01C         	call	_stop	;wreg free
  1438   00299E                     
  1439                           ;main.c: 137:             color_read(&RGBC);
  1440   00299E  0EBE               	movlw	low main@RGBC
  1441   0029A0  6E10               	movwf	color_read@RGBC^0,c
  1442   0029A2  0E01               	movlw	high main@RGBC
  1443   0029A4  6E11               	movwf	(color_read@RGBC+1)^0,c
  1444   0029A6  ECD0  F016         	call	_color_read	;wreg free
  1445   0029AA                     
  1446                           ;main.c: 138:             color_normalise(RGBC, &RGBC_n);
  1447   0029AA  EE21  F0BE         	lfsr	2,main@RGBC
  1448   0029AE  EE00  F026         	lfsr	0,color_normalise@RGBC
  1449   0029B2  0E07               	movlw	7
  1450   0029B4                     u2591:
  1451   0029B4  CFDB FFEB          	movff	plusw2,plusw0
  1452   0029B8  06E8               	decf	wreg,f,c
  1453   0029BA  E2FC               	bc	u2591
  1454   0029BC  0EB6               	movlw	low main@RGBC_n
  1455   0029BE  6E2E               	movwf	color_normalise@RGBC_n^0,c
  1456   0029C0  0E01               	movlw	high main@RGBC_n
  1457   0029C2  6E2F               	movwf	(color_normalise@RGBC_n+1)^0,c
  1458   0029C4  EC44  F01B         	call	_color_normalise	;wreg free
  1459   0029C8                     
  1460                           ;main.c: 140:             color = testSequence[curMove];
  1461   0029C8  0E7A               	movlw	low main@testSequence
  1462   0029CA  0101               	movlb	1	; () banked
  1463   0029CC  25B4               	addwf	main@curMove& (0+255),w,b
  1464   0029CE  6ED9               	movwf	fsr2l,c
  1465   0029D0  6ADA               	clrf	fsr2h,c
  1466   0029D2  0E01               	movlw	high main@testSequence
  1467   0029D4  22DA               	addwfc	fsr2h,f,c
  1468   0029D6  50DF               	movf	indf2,w,c
  1469   0029D8  6FB2               	movwf	main@color& (0+255),b
  1470   0029DA                     
  1471                           ; BSR set to: 1
  1472                           ;main.c: 141:             moveSequence[curMove] = color;
  1473   0029DA  0E52               	movlw	low main@moveSequence
  1474   0029DC  25B4               	addwf	main@curMove& (0+255),w,b
  1475   0029DE  6ED9               	movwf	fsr2l,c
  1476   0029E0  6ADA               	clrf	fsr2h,c
  1477   0029E2  0E01               	movlw	high main@moveSequence
  1478   0029E4  22DA               	addwfc	fsr2h,f,c
  1479   0029E6  C1B2  FFDF         	movff	main@color,indf2
  1480   0029EA                     
  1481                           ; BSR set to: 1
  1482                           ;main.c: 144:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1483   0029EA  0ED0               	movlw	low main@motorL
  1484   0029EC  0100               	movlb	0	; () banked
  1485   0029EE  6FB2               	movwf	move@mL& (0+255),b
  1486   0029F0  0E01               	movlw	high main@motorL
  1487   0029F2  6FB3               	movwf	(move@mL+1)& (0+255),b
  1488   0029F4  0EC6               	movlw	low main@motorR
  1489   0029F6  6FB4               	movwf	move@mR& (0+255),b
  1490   0029F8  0E01               	movlw	high main@motorR
  1491   0029FA  6FB5               	movwf	(move@mR+1)& (0+255),b
  1492   0029FC  C1B2  F0B6         	movff	main@color,move@color
  1493   002A00  0E52               	movlw	low main@moveSequence
  1494   002A02  6FB7               	movwf	move@moveSequence& (0+255),b
  1495   002A04  0E01               	movlw	high main@moveSequence
  1496   002A06  6FB8               	movwf	(move@moveSequence+1)& (0+255),b
  1497   002A08  0E00               	movlw	low main@straightTime
  1498   002A0A  6FB9               	movwf	move@straightTime& (0+255),b
  1499   002A0C  0E01               	movlw	high main@straightTime
  1500   002A0E  6FBA               	movwf	(move@straightTime+1)& (0+255),b
  1501   002A10  C1B4  F0BB         	movff	main@curMove,move@curMove
  1502   002A14  C1AF  F0BC         	movff	main@straightSpeed,move@straightSpeed
  1503   002A18  C1AE  F0BD         	movff	main@reverseDuration,move@reverseDuration
  1504   002A1C  C1B3  F0BE         	movff	main@straightRamp,move@straightRamp
  1505   002A20  C1B0  F0BF         	movff	main@turnSpeed,move@turnSpeed
  1506   002A24  C1B5  F0C0         	movff	main@turnDuration,move@turnDuration
  1507   002A28  C1B1  F0C1         	movff	main@turnRamp,move@turnRamp
  1508   002A2C  ECAF  F00D         	call	_move	;wreg free
  1509   002A30                     
  1510                           ;main.c: 147:             color_read(&RGBC);
  1511   002A30  0EBE               	movlw	low main@RGBC
  1512   002A32  6E10               	movwf	color_read@RGBC^0,c
  1513   002A34  0E01               	movlw	high main@RGBC
  1514   002A36  6E11               	movwf	(color_read@RGBC+1)^0,c
  1515   002A38  ECD0  F016         	call	_color_read	;wreg free
  1516   002A3C                     
  1517                           ;main.c: 148:             ambient=RGBC.C;
  1518   002A3C  C1C4  F04E         	movff	main@RGBC+6,_ambient
  1519   002A40  C1C5  F04F         	movff	main@RGBC+7,_ambient+1
  1520   002A44                     
  1521                           ;main.c: 150:             curMove++;
  1522   002A44  0101               	movlb	1	; () banked
  1523   002A46  2BB4               	incf	main@curMove& (0+255),f,b
  1524   002A48                     
  1525                           ; BSR set to: 1
  1526                           ;main.c: 151:             resetTimer();
  1527   002A48  ECBF  F020         	call	_resetTimer	;wreg free
  1528   002A4C                     
  1529                           ;main.c: 152:             PIE0bits.INT0IE=TMR0IE=1;
  1530   002A4C  010E               	movlb	14	; () banked
  1531   002A4E  8B29               	bsf	41,5,b	;volatile
  1532   002A50  AB29               	btfss	41,5,b	;volatile
  1533   002A52  D002               	bra	u2605
  1534   002A54  8129               	bsf	41,0,b	;volatile
  1535   002A56  D002               	bra	u2607
  1536   002A58                     u2605:
  1537   002A58  010E               	movlb	14	; () banked
  1538   002A5A  9129               	bcf	41,0,b	;volatile
  1539   002A5C                     u2607:
  1540   002A5C                     
  1541                           ; BSR set to: 14
  1542                           ;main.c: 153:             wall = 0;
  1543   002A5C  0E00               	movlw	0
  1544   002A5E  0100               	movlb	0	; () banked
  1545   002A60  6FB1               	movwf	_wall& (0+255),b
  1546   002A62                     l4016:
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;main.c: 157:         if (lost == 1) {
  1550   002A62  05B0               	decf	_lost& (0+255),w,b
  1551   002A64  A4D8               	btfss	status,2,c
  1552   002A66  EF37  F015         	goto	u2611
  1553   002A6A  EF39  F015         	goto	u2610
  1554   002A6E                     u2611:
  1555   002A6E  EF6E  F015         	goto	l4026
  1556   002A72                     u2610:
  1557   002A72                     
  1558                           ; BSR set to: 0
  1559                           ;main.c: 158:             PIE0bits.INT0IE=0;
  1560   002A72  010E               	movlb	14	; () banked
  1561   002A74  9129               	bcf	41,0,b	;volatile
  1562   002A76                     
  1563                           ; BSR set to: 14
  1564                           ;main.c: 159:             stop(&motorL, &motorR, straightRamp);
  1565   002A76  0ED0               	movlw	low main@motorL
  1566   002A78  6E1F               	movwf	stop@mL^0,c
  1567   002A7A  0E01               	movlw	high main@motorL
  1568   002A7C  6E20               	movwf	(stop@mL+1)^0,c
  1569   002A7E  0EC6               	movlw	low main@motorR
  1570   002A80  6E21               	movwf	stop@mR^0,c
  1571   002A82  0E01               	movlw	high main@motorR
  1572   002A84  6E22               	movwf	(stop@mR+1)^0,c
  1573   002A86  C1B3  F023         	movff	main@straightRamp,stop@straightRamp
  1574   002A8A  EC6F  F01C         	call	_stop	;wreg free
  1575                           
  1576                           ;main.c: 160:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1577   002A8E  0ED0               	movlw	low main@motorL
  1578   002A90  6E2D               	movwf	lostReturnHome@mL^0,c
  1579   002A92  0E01               	movlw	high main@motorL
  1580   002A94  6E2E               	movwf	(lostReturnHome@mL+1)^0,c
  1581   002A96  0EC6               	movlw	low main@motorR
  1582   002A98  6E2F               	movwf	lostReturnHome@mR^0,c
  1583   002A9A  0E01               	movlw	high main@motorR
  1584   002A9C  6E30               	movwf	(lostReturnHome@mR+1)^0,c
  1585   002A9E  0E52               	movlw	low main@moveSequence
  1586   002AA0  6E31               	movwf	lostReturnHome@moveSequence^0,c
  1587   002AA2  0E01               	movlw	high main@moveSequence
  1588   002AA4  6E32               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1589   002AA6  0E00               	movlw	low main@straightTime
  1590   002AA8  6E33               	movwf	lostReturnHome@straightTime^0,c
  1591   002AAA  0E01               	movlw	high main@straightTime
  1592   002AAC  6E34               	movwf	(lostReturnHome@straightTime+1)^0,c
  1593   002AAE  C1B4  F035         	movff	main@curMove,lostReturnHome@curMove
  1594   002AB2  C1AF  F036         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1595   002AB6  C1AE  F037         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1596   002ABA  C1B3  F038         	movff	main@straightRamp,lostReturnHome@straightRamp
  1597   002ABE  C1B0  F039         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1598   002AC2  C1B5  F03A         	movff	main@turnDuration,lostReturnHome@turnDuration
  1599   002AC6  C1B1  F03B         	movff	main@turnRamp,lostReturnHome@turnRamp
  1600   002ACA  EC5F  F00A         	call	_lostReturnHome	;wreg free
  1601   002ACE                     
  1602                           ;main.c: 161:             PIE0bits.INT0IE=1;
  1603   002ACE  010E               	movlb	14	; () banked
  1604   002AD0  8129               	bsf	41,0,b	;volatile
  1605   002AD2                     
  1606                           ; BSR set to: 14
  1607                           ;main.c: 162:             lost = 0;
  1608   002AD2  0E00               	movlw	0
  1609   002AD4  0100               	movlb	0	; () banked
  1610   002AD6  6FB0               	movwf	_lost& (0+255),b
  1611                           
  1612                           ;main.c: 163:             break;
  1613   002AD8  EF81  F015         	goto	l98
  1614   002ADC                     l4026:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;main.c: 166:         if (color == 8 || color == 9) {break;}
  1618   002ADC  0E08               	movlw	8
  1619   002ADE  0101               	movlb	1	; () banked
  1620   002AE0  19B2               	xorwf	main@color& (0+255),w,b
  1621   002AE2  B4D8               	btfsc	status,2,c
  1622   002AE4  EF76  F015         	goto	u2621
  1623   002AE8  EF78  F015         	goto	u2620
  1624   002AEC                     u2621:
  1625   002AEC  EF81  F015         	goto	l98
  1626   002AF0                     u2620:
  1627   002AF0                     
  1628                           ; BSR set to: 1
  1629   002AF0  0E09               	movlw	9
  1630   002AF2  19B2               	xorwf	main@color& (0+255),w,b
  1631   002AF4  A4D8               	btfss	status,2,c
  1632   002AF6  EF7F  F015         	goto	u2631
  1633   002AFA  EF81  F015         	goto	u2630
  1634   002AFE                     u2631:
  1635   002AFE  EFA3  F014         	goto	l3988
  1636   002B02                     u2630:
  1637   002B02                     l98:
  1638   002B02  EF4C  F000         	goto	start
  1639   002B06                     __end_of_main:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _move *****************
  1643 ;; Defined at:
  1644 ;;		line 91 in file "dc_motor.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  1647 ;;		 -> main@motorL(10), 
  1648 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  1649 ;;		 -> main@motorR(10), 
  1650 ;;  color           1    4[BANK0 ] unsigned char 
  1651 ;;  moveSequence    2    5[BANK0 ] PTR unsigned char 
  1652 ;;		 -> main@moveSequence(40), 
  1653 ;;  straightTime    2    7[BANK0 ] PTR unsigned int 
  1654 ;;		 -> main@straightTime(82), 
  1655 ;;  curMove         1    9[BANK0 ] unsigned char 
  1656 ;;  straightSpee    1   10[BANK0 ] unsigned char 
  1657 ;;  reverseDurat    1   11[BANK0 ] unsigned char 
  1658 ;;  straightRamp    1   12[BANK0 ] unsigned char 
  1659 ;;  turnSpeed       1   13[BANK0 ] unsigned char 
  1660 ;;  turnDuration    1   14[BANK0 ] unsigned char 
  1661 ;;  turnRamp        1   15[BANK0 ] unsigned char 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1673 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1675 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1676 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;Total ram usage:       18 bytes
  1678 ;; Hardware stack levels used: 1
  1679 ;; Hardware stack levels required when called: 9
  1680 ;; This function calls:
  1681 ;;		_fullSpeedAhead
  1682 ;;		_returnHome
  1683 ;;		_reverseOneSquare
  1684 ;;		_turnLeft
  1685 ;;		_turnRight
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text1
  1692   001B5E                     __ptext1:
  1693                           	callstack 0
  1694   001B5E                     _move:
  1695                           	callstack 21
  1696   001B5E                     
  1697                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reve
      +                          rseDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, uns
      +                          igned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  1698   001B5E  0100               	movlb	0	; () banked
  1699   001B60  05B6               	decf	move@color& (0+255),w,b
  1700   001B62  A4D8               	btfss	status,2,c
  1701   001B64  EFB6  F00D         	goto	u2451
  1702   001B68  EFB8  F00D         	goto	u2450
  1703   001B6C                     u2451:
  1704   001B6C  EF00  F00E         	goto	l3820
  1705   001B70                     u2450:
  1706   001B70                     
  1707                           ; BSR set to: 0
  1708                           ;dc_motor.c: 94:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1709   001B70  C0B2  F01F         	movff	move@mL,turnRight@mL
  1710   001B74  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  1711   001B78  C0B4  F021         	movff	move@mR,turnRight@mR
  1712   001B7C  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  1713   001B80  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1714   001B84  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  1715   001B88  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  1716   001B8C  ECBA  F018         	call	_turnRight	;wreg free
  1717   001B90                     
  1718                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1719   001B90  0E05               	movlw	5
  1720   001B92  6E42               	movwf	(??_move+1)^0,c
  1721   001B94  0E0F               	movlw	15
  1722   001B96  6E41               	movwf	??_move^0,c
  1723   001B98  0EF1               	movlw	241
  1724   001B9A                     u2677:
  1725   001B9A  2EE8               	decfsz	wreg,f,c
  1726   001B9C  D7FE               	bra	u2677
  1727   001B9E  2E41               	decfsz	??_move^0,f,c
  1728   001BA0  D7FC               	bra	u2677
  1729   001BA2  2E42               	decfsz	(??_move+1)^0,f,c
  1730   001BA4  D7FA               	bra	u2677
  1731   001BA6  0000               	nop	
  1732   001BA8                     
  1733                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  1734   001BA8  C0B2  F01F         	movff	move@mL,turnRight@mL
  1735   001BAC  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  1736   001BB0  C0B4  F021         	movff	move@mR,turnRight@mR
  1737   001BB4  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  1738   001BB8  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  1739   001BBC  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  1740   001BC0  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  1741   001BC4  ECBA  F018         	call	_turnRight	;wreg free
  1742                           
  1743                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1744   001BC8  0E05               	movlw	5
  1745   001BCA  6E42               	movwf	(??_move+1)^0,c
  1746   001BCC  0E0F               	movlw	15
  1747   001BCE  6E41               	movwf	??_move^0,c
  1748   001BD0  0EF1               	movlw	241
  1749   001BD2                     u2687:
  1750   001BD2  2EE8               	decfsz	wreg,f,c
  1751   001BD4  D7FE               	bra	u2687
  1752   001BD6  2E41               	decfsz	??_move^0,f,c
  1753   001BD8  D7FC               	bra	u2687
  1754   001BDA  2E42               	decfsz	(??_move+1)^0,f,c
  1755   001BDC  D7FA               	bra	u2687
  1756   001BDE  0000               	nop	
  1757   001BE0                     
  1758                           ;dc_motor.c: 98:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1759   001BE0  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  1760   001BE4  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1761   001BE8  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  1762   001BEC  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1763   001BF0  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1764   001BF4  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1765   001BF8  ECF3  F01C         	call	_fullSpeedAhead	;wreg free
  1766                           
  1767                           ;dc_motor.c: 99:     }
  1768   001BFC  EFD9  F010         	goto	l520
  1769   001C00                     l3820:
  1770                           
  1771                           ; BSR set to: 0
  1772   001C00  0E02               	movlw	2
  1773   001C02  19B6               	xorwf	move@color& (0+255),w,b
  1774   001C04  A4D8               	btfss	status,2,c
  1775   001C06  EF07  F00E         	goto	u2461
  1776   001C0A  EF09  F00E         	goto	u2460
  1777   001C0E                     u2461:
  1778   001C0E  EF51  F00E         	goto	l3830
  1779   001C12                     u2460:
  1780   001C12                     
  1781                           ; BSR set to: 0
  1782                           ;dc_motor.c: 102:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1783   001C12  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1784   001C16  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1785   001C1A  C0B4  F021         	movff	move@mR,turnLeft@mR
  1786   001C1E  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1787   001C22  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1788   001C26  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1789   001C2A  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1790   001C2E  ECA4  F019         	call	_turnLeft	;wreg free
  1791   001C32                     
  1792                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1793   001C32  0E05               	movlw	5
  1794   001C34  6E42               	movwf	(??_move+1)^0,c
  1795   001C36  0E0F               	movlw	15
  1796   001C38  6E41               	movwf	??_move^0,c
  1797   001C3A  0EF1               	movlw	241
  1798   001C3C                     u2697:
  1799   001C3C  2EE8               	decfsz	wreg,f,c
  1800   001C3E  D7FE               	bra	u2697
  1801   001C40  2E41               	decfsz	??_move^0,f,c
  1802   001C42  D7FC               	bra	u2697
  1803   001C44  2E42               	decfsz	(??_move+1)^0,f,c
  1804   001C46  D7FA               	bra	u2697
  1805   001C48  0000               	nop	
  1806   001C4A                     
  1807                           ;dc_motor.c: 104:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1808   001C4A  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1809   001C4E  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1810   001C52  C0B4  F021         	movff	move@mR,turnLeft@mR
  1811   001C56  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1812   001C5A  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1813   001C5E  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1814   001C62  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1815   001C66  ECA4  F019         	call	_turnLeft	;wreg free
  1816                           
  1817                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1818   001C6A  0E05               	movlw	5
  1819   001C6C  6E42               	movwf	(??_move+1)^0,c
  1820   001C6E  0E0F               	movlw	15
  1821   001C70  6E41               	movwf	??_move^0,c
  1822   001C72  0EF1               	movlw	241
  1823   001C74                     u2707:
  1824   001C74  2EE8               	decfsz	wreg,f,c
  1825   001C76  D7FE               	bra	u2707
  1826   001C78  2E41               	decfsz	??_move^0,f,c
  1827   001C7A  D7FC               	bra	u2707
  1828   001C7C  2E42               	decfsz	(??_move+1)^0,f,c
  1829   001C7E  D7FA               	bra	u2707
  1830   001C80  0000               	nop	
  1831   001C82                     
  1832                           ;dc_motor.c: 106:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1833   001C82  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  1834   001C86  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1835   001C8A  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  1836   001C8E  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1837   001C92  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1838   001C96  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1839   001C9A  ECF3  F01C         	call	_fullSpeedAhead	;wreg free
  1840                           
  1841                           ;dc_motor.c: 107:     }
  1842   001C9E  EFD9  F010         	goto	l520
  1843   001CA2                     l3830:
  1844                           
  1845                           ; BSR set to: 0
  1846   001CA2  0E03               	movlw	3
  1847   001CA4  19B6               	xorwf	move@color& (0+255),w,b
  1848   001CA6  A4D8               	btfss	status,2,c
  1849   001CA8  EF58  F00E         	goto	u2471
  1850   001CAC  EF5A  F00E         	goto	u2470
  1851   001CB0                     u2471:
  1852   001CB0  EFDA  F00E         	goto	l3846
  1853   001CB4                     u2470:
  1854   001CB4                     
  1855                           ; BSR set to: 0
  1856                           ;dc_motor.c: 110:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1857   001CB4  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1858   001CB8  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1859   001CBC  C0B4  F021         	movff	move@mR,turnLeft@mR
  1860   001CC0  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1861   001CC4  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1862   001CC8  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1863   001CCC  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1864   001CD0  ECA4  F019         	call	_turnLeft	;wreg free
  1865   001CD4                     
  1866                           ;dc_motor.c: 111:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1867   001CD4  0E05               	movlw	5
  1868   001CD6  6E42               	movwf	(??_move+1)^0,c
  1869   001CD8  0E0F               	movlw	15
  1870   001CDA  6E41               	movwf	??_move^0,c
  1871   001CDC  0EF1               	movlw	241
  1872   001CDE                     u2717:
  1873   001CDE  2EE8               	decfsz	wreg,f,c
  1874   001CE0  D7FE               	bra	u2717
  1875   001CE2  2E41               	decfsz	??_move^0,f,c
  1876   001CE4  D7FC               	bra	u2717
  1877   001CE6  2E42               	decfsz	(??_move+1)^0,f,c
  1878   001CE8  D7FA               	bra	u2717
  1879   001CEA  0000               	nop	
  1880   001CEC                     
  1881                           ;dc_motor.c: 112:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1882   001CEC  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1883   001CF0  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1884   001CF4  C0B4  F021         	movff	move@mR,turnLeft@mR
  1885   001CF8  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1886   001CFC  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1887   001D00  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1888   001D04  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1889   001D08  ECA4  F019         	call	_turnLeft	;wreg free
  1890                           
  1891                           ;dc_motor.c: 113:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1892   001D0C  0E05               	movlw	5
  1893   001D0E  6E42               	movwf	(??_move+1)^0,c
  1894   001D10  0E0F               	movlw	15
  1895   001D12  6E41               	movwf	??_move^0,c
  1896   001D14  0EF1               	movlw	241
  1897   001D16                     u2727:
  1898   001D16  2EE8               	decfsz	wreg,f,c
  1899   001D18  D7FE               	bra	u2727
  1900   001D1A  2E41               	decfsz	??_move^0,f,c
  1901   001D1C  D7FC               	bra	u2727
  1902   001D1E  2E42               	decfsz	(??_move+1)^0,f,c
  1903   001D20  D7FA               	bra	u2727
  1904   001D22  0000               	nop	
  1905   001D24                     
  1906                           ;dc_motor.c: 114:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1907   001D24  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1908   001D28  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1909   001D2C  C0B4  F021         	movff	move@mR,turnLeft@mR
  1910   001D30  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1911   001D34  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1912   001D38  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1913   001D3C  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1914   001D40  ECA4  F019         	call	_turnLeft	;wreg free
  1915   001D44                     
  1916                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1917   001D44  0E05               	movlw	5
  1918   001D46  6E42               	movwf	(??_move+1)^0,c
  1919   001D48  0E0F               	movlw	15
  1920   001D4A  6E41               	movwf	??_move^0,c
  1921   001D4C  0EF1               	movlw	241
  1922   001D4E                     u2737:
  1923   001D4E  2EE8               	decfsz	wreg,f,c
  1924   001D50  D7FE               	bra	u2737
  1925   001D52  2E41               	decfsz	??_move^0,f,c
  1926   001D54  D7FC               	bra	u2737
  1927   001D56  2E42               	decfsz	(??_move+1)^0,f,c
  1928   001D58  D7FA               	bra	u2737
  1929   001D5A  0000               	nop	
  1930                           
  1931                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  1932   001D5C  C0B2  F01F         	movff	move@mL,turnLeft@mL
  1933   001D60  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  1934   001D64  C0B4  F021         	movff	move@mR,turnLeft@mR
  1935   001D68  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  1936   001D6C  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  1937   001D70  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  1938   001D74  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  1939   001D78  ECA4  F019         	call	_turnLeft	;wreg free
  1940   001D7C                     
  1941                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1942   001D7C  0E05               	movlw	5
  1943   001D7E  6E42               	movwf	(??_move+1)^0,c
  1944   001D80  0E0F               	movlw	15
  1945   001D82  6E41               	movwf	??_move^0,c
  1946   001D84  0EF1               	movlw	241
  1947   001D86                     u2747:
  1948   001D86  2EE8               	decfsz	wreg,f,c
  1949   001D88  D7FE               	bra	u2747
  1950   001D8A  2E41               	decfsz	??_move^0,f,c
  1951   001D8C  D7FC               	bra	u2747
  1952   001D8E  2E42               	decfsz	(??_move+1)^0,f,c
  1953   001D90  D7FA               	bra	u2747
  1954   001D92  0000               	nop	
  1955   001D94                     
  1956                           ;dc_motor.c: 118:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  1957   001D94  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  1958   001D98  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  1959   001D9C  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  1960   001DA0  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  1961   001DA4  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  1962   001DA8  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  1963   001DAC  ECF3  F01C         	call	_fullSpeedAhead	;wreg free
  1964                           
  1965                           ;dc_motor.c: 119:     }
  1966   001DB0  EFD9  F010         	goto	l520
  1967   001DB4                     l3846:
  1968                           
  1969                           ; BSR set to: 0
  1970   001DB4  0E04               	movlw	4
  1971   001DB6  19B6               	xorwf	move@color& (0+255),w,b
  1972   001DB8  A4D8               	btfss	status,2,c
  1973   001DBA  EFE1  F00E         	goto	u2481
  1974   001DBE  EFE3  F00E         	goto	u2480
  1975   001DC2                     u2481:
  1976   001DC2  EF47  F00F         	goto	l3858
  1977   001DC6                     u2480:
  1978   001DC6                     
  1979                           ; BSR set to: 0
  1980                           ;dc_motor.c: 122:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  1981   001DC6  C0B2  F01F         	movff	move@mL,reverseOneSquare@mL
  1982   001DCA  C0B3  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  1983   001DCE  C0B4  F021         	movff	move@mR,reverseOneSquare@mR
  1984   001DD2  C0B5  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  1985   001DD6  C0BC  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  1986   001DDA  C0BD  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  1987   001DDE  C0BE  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  1988   001DE2  ECC7  F017         	call	_reverseOneSquare	;wreg free
  1989   001DE6                     
  1990                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1991   001DE6  0E05               	movlw	5
  1992   001DE8  6E42               	movwf	(??_move+1)^0,c
  1993   001DEA  0E0F               	movlw	15
  1994   001DEC  6E41               	movwf	??_move^0,c
  1995   001DEE  0EF1               	movlw	241
  1996   001DF0                     u2757:
  1997   001DF0  2EE8               	decfsz	wreg,f,c
  1998   001DF2  D7FE               	bra	u2757
  1999   001DF4  2E41               	decfsz	??_move^0,f,c
  2000   001DF6  D7FC               	bra	u2757
  2001   001DF8  2E42               	decfsz	(??_move+1)^0,f,c
  2002   001DFA  D7FA               	bra	u2757
  2003   001DFC  0000               	nop	
  2004   001DFE                     
  2005                           ;dc_motor.c: 124:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2006   001DFE  C0B2  F01F         	movff	move@mL,turnRight@mL
  2007   001E02  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2008   001E06  C0B4  F021         	movff	move@mR,turnRight@mR
  2009   001E0A  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2010   001E0E  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2011   001E12  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2012   001E16  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2013   001E1A  ECBA  F018         	call	_turnRight	;wreg free
  2014                           
  2015                           ;dc_motor.c: 125:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2016   001E1E  0E05               	movlw	5
  2017   001E20  6E42               	movwf	(??_move+1)^0,c
  2018   001E22  0E0F               	movlw	15
  2019   001E24  6E41               	movwf	??_move^0,c
  2020   001E26  0EF1               	movlw	241
  2021   001E28                     u2767:
  2022   001E28  2EE8               	decfsz	wreg,f,c
  2023   001E2A  D7FE               	bra	u2767
  2024   001E2C  2E41               	decfsz	??_move^0,f,c
  2025   001E2E  D7FC               	bra	u2767
  2026   001E30  2E42               	decfsz	(??_move+1)^0,f,c
  2027   001E32  D7FA               	bra	u2767
  2028   001E34  0000               	nop	
  2029   001E36                     
  2030                           ;dc_motor.c: 126:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2031   001E36  C0B2  F01F         	movff	move@mL,turnRight@mL
  2032   001E3A  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2033   001E3E  C0B4  F021         	movff	move@mR,turnRight@mR
  2034   001E42  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2035   001E46  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2036   001E4A  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2037   001E4E  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2038   001E52  ECBA  F018         	call	_turnRight	;wreg free
  2039   001E56                     
  2040                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2041   001E56  0E05               	movlw	5
  2042   001E58  6E42               	movwf	(??_move+1)^0,c
  2043   001E5A  0E0F               	movlw	15
  2044   001E5C  6E41               	movwf	??_move^0,c
  2045   001E5E  0EF1               	movlw	241
  2046   001E60                     u2777:
  2047   001E60  2EE8               	decfsz	wreg,f,c
  2048   001E62  D7FE               	bra	u2777
  2049   001E64  2E41               	decfsz	??_move^0,f,c
  2050   001E66  D7FC               	bra	u2777
  2051   001E68  2E42               	decfsz	(??_move+1)^0,f,c
  2052   001E6A  D7FA               	bra	u2777
  2053   001E6C  0000               	nop	
  2054                           
  2055                           ;dc_motor.c: 128:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2056   001E6E  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2057   001E72  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2058   001E76  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2059   001E7A  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2060   001E7E  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2061   001E82  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2062   001E86  ECF3  F01C         	call	_fullSpeedAhead	;wreg free
  2063                           
  2064                           ;dc_motor.c: 129:     }
  2065   001E8A  EFD9  F010         	goto	l520
  2066   001E8E                     l3858:
  2067                           
  2068                           ; BSR set to: 0
  2069   001E8E  0E05               	movlw	5
  2070   001E90  19B6               	xorwf	move@color& (0+255),w,b
  2071   001E92  A4D8               	btfss	status,2,c
  2072   001E94  EF4E  F00F         	goto	u2491
  2073   001E98  EF50  F00F         	goto	u2490
  2074   001E9C                     u2491:
  2075   001E9C  EFB4  F00F         	goto	l3870
  2076   001EA0                     u2490:
  2077   001EA0                     
  2078                           ; BSR set to: 0
  2079                           ;dc_motor.c: 132:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  2080   001EA0  C0B2  F01F         	movff	move@mL,reverseOneSquare@mL
  2081   001EA4  C0B3  F020         	movff	move@mL+1,reverseOneSquare@mL+1
  2082   001EA8  C0B4  F021         	movff	move@mR,reverseOneSquare@mR
  2083   001EAC  C0B5  F022         	movff	move@mR+1,reverseOneSquare@mR+1
  2084   001EB0  C0BC  F023         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  2085   001EB4  C0BD  F024         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  2086   001EB8  C0BE  F025         	movff	move@straightRamp,reverseOneSquare@straightRamp
  2087   001EBC  ECC7  F017         	call	_reverseOneSquare	;wreg free
  2088   001EC0                     
  2089                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2090   001EC0  0E05               	movlw	5
  2091   001EC2  6E42               	movwf	(??_move+1)^0,c
  2092   001EC4  0E0F               	movlw	15
  2093   001EC6  6E41               	movwf	??_move^0,c
  2094   001EC8  0EF1               	movlw	241
  2095   001ECA                     u2787:
  2096   001ECA  2EE8               	decfsz	wreg,f,c
  2097   001ECC  D7FE               	bra	u2787
  2098   001ECE  2E41               	decfsz	??_move^0,f,c
  2099   001ED0  D7FC               	bra	u2787
  2100   001ED2  2E42               	decfsz	(??_move+1)^0,f,c
  2101   001ED4  D7FA               	bra	u2787
  2102   001ED6  0000               	nop	
  2103   001ED8                     
  2104                           ;dc_motor.c: 134:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2105   001ED8  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2106   001EDC  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2107   001EE0  C0B4  F021         	movff	move@mR,turnLeft@mR
  2108   001EE4  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2109   001EE8  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2110   001EEC  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2111   001EF0  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2112   001EF4  ECA4  F019         	call	_turnLeft	;wreg free
  2113                           
  2114                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2115   001EF8  0E05               	movlw	5
  2116   001EFA  6E42               	movwf	(??_move+1)^0,c
  2117   001EFC  0E0F               	movlw	15
  2118   001EFE  6E41               	movwf	??_move^0,c
  2119   001F00  0EF1               	movlw	241
  2120   001F02                     u2797:
  2121   001F02  2EE8               	decfsz	wreg,f,c
  2122   001F04  D7FE               	bra	u2797
  2123   001F06  2E41               	decfsz	??_move^0,f,c
  2124   001F08  D7FC               	bra	u2797
  2125   001F0A  2E42               	decfsz	(??_move+1)^0,f,c
  2126   001F0C  D7FA               	bra	u2797
  2127   001F0E  0000               	nop	
  2128   001F10                     
  2129                           ;dc_motor.c: 136:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2130   001F10  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2131   001F14  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2132   001F18  C0B4  F021         	movff	move@mR,turnLeft@mR
  2133   001F1C  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2134   001F20  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2135   001F24  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2136   001F28  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2137   001F2C  ECA4  F019         	call	_turnLeft	;wreg free
  2138   001F30                     
  2139                           ;dc_motor.c: 137:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2140   001F30  0E05               	movlw	5
  2141   001F32  6E42               	movwf	(??_move+1)^0,c
  2142   001F34  0E0F               	movlw	15
  2143   001F36  6E41               	movwf	??_move^0,c
  2144   001F38  0EF1               	movlw	241
  2145   001F3A                     u2807:
  2146   001F3A  2EE8               	decfsz	wreg,f,c
  2147   001F3C  D7FE               	bra	u2807
  2148   001F3E  2E41               	decfsz	??_move^0,f,c
  2149   001F40  D7FC               	bra	u2807
  2150   001F42  2E42               	decfsz	(??_move+1)^0,f,c
  2151   001F44  D7FA               	bra	u2807
  2152   001F46  0000               	nop	
  2153                           
  2154                           ;dc_motor.c: 138:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2155   001F48  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2156   001F4C  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2157   001F50  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2158   001F54  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2159   001F58  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2160   001F5C  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2161   001F60  ECF3  F01C         	call	_fullSpeedAhead	;wreg free
  2162                           
  2163                           ;dc_motor.c: 139:     }
  2164   001F64  EFD9  F010         	goto	l520
  2165   001F68                     l3870:
  2166                           
  2167                           ; BSR set to: 0
  2168   001F68  0E06               	movlw	6
  2169   001F6A  19B6               	xorwf	move@color& (0+255),w,b
  2170   001F6C  A4D8               	btfss	status,2,c
  2171   001F6E  EFBB  F00F         	goto	u2501
  2172   001F72  EFBD  F00F         	goto	u2500
  2173   001F76                     u2501:
  2174   001F76  EF21  F010         	goto	l3882
  2175   001F7A                     u2500:
  2176   001F7A                     
  2177                           ; BSR set to: 0
  2178                           ;dc_motor.c: 142:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2179   001F7A  C0B2  F01F         	movff	move@mL,turnRight@mL
  2180   001F7E  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2181   001F82  C0B4  F021         	movff	move@mR,turnRight@mR
  2182   001F86  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2183   001F8A  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2184   001F8E  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2185   001F92  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2186   001F96  ECBA  F018         	call	_turnRight	;wreg free
  2187   001F9A                     
  2188                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2189   001F9A  0E05               	movlw	5
  2190   001F9C  6E42               	movwf	(??_move+1)^0,c
  2191   001F9E  0E0F               	movlw	15
  2192   001FA0  6E41               	movwf	??_move^0,c
  2193   001FA2  0EF1               	movlw	241
  2194   001FA4                     u2817:
  2195   001FA4  2EE8               	decfsz	wreg,f,c
  2196   001FA6  D7FE               	bra	u2817
  2197   001FA8  2E41               	decfsz	??_move^0,f,c
  2198   001FAA  D7FC               	bra	u2817
  2199   001FAC  2E42               	decfsz	(??_move+1)^0,f,c
  2200   001FAE  D7FA               	bra	u2817
  2201   001FB0  0000               	nop	
  2202   001FB2                     
  2203                           ;dc_motor.c: 144:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2204   001FB2  C0B2  F01F         	movff	move@mL,turnRight@mL
  2205   001FB6  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2206   001FBA  C0B4  F021         	movff	move@mR,turnRight@mR
  2207   001FBE  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2208   001FC2  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2209   001FC6  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2210   001FCA  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2211   001FCE  ECBA  F018         	call	_turnRight	;wreg free
  2212                           
  2213                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2214   001FD2  0E05               	movlw	5
  2215   001FD4  6E42               	movwf	(??_move+1)^0,c
  2216   001FD6  0E0F               	movlw	15
  2217   001FD8  6E41               	movwf	??_move^0,c
  2218   001FDA  0EF1               	movlw	241
  2219   001FDC                     u2827:
  2220   001FDC  2EE8               	decfsz	wreg,f,c
  2221   001FDE  D7FE               	bra	u2827
  2222   001FE0  2E41               	decfsz	??_move^0,f,c
  2223   001FE2  D7FC               	bra	u2827
  2224   001FE4  2E42               	decfsz	(??_move+1)^0,f,c
  2225   001FE6  D7FA               	bra	u2827
  2226   001FE8  0000               	nop	
  2227   001FEA                     
  2228                           ;dc_motor.c: 146:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2229   001FEA  C0B2  F01F         	movff	move@mL,turnRight@mL
  2230   001FEE  C0B3  F020         	movff	move@mL+1,turnRight@mL+1
  2231   001FF2  C0B4  F021         	movff	move@mR,turnRight@mR
  2232   001FF6  C0B5  F022         	movff	move@mR+1,turnRight@mR+1
  2233   001FFA  C0BF  F023         	movff	move@turnSpeed,turnRight@turnSpeed
  2234   001FFE  C0C0  F024         	movff	move@turnDuration,turnRight@turnDuration
  2235   002002  C0C1  F025         	movff	move@turnRamp,turnRight@turnRamp
  2236   002006  ECBA  F018         	call	_turnRight	;wreg free
  2237   00200A                     
  2238                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2239   00200A  0E05               	movlw	5
  2240   00200C  6E42               	movwf	(??_move+1)^0,c
  2241   00200E  0E0F               	movlw	15
  2242   002010  6E41               	movwf	??_move^0,c
  2243   002012  0EF1               	movlw	241
  2244   002014                     u2837:
  2245   002014  2EE8               	decfsz	wreg,f,c
  2246   002016  D7FE               	bra	u2837
  2247   002018  2E41               	decfsz	??_move^0,f,c
  2248   00201A  D7FC               	bra	u2837
  2249   00201C  2E42               	decfsz	(??_move+1)^0,f,c
  2250   00201E  D7FA               	bra	u2837
  2251   002020  0000               	nop	
  2252                           
  2253                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2254   002022  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2255   002026  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2256   00202A  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2257   00202E  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2258   002032  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2259   002036  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2260   00203A  ECF3  F01C         	call	_fullSpeedAhead	;wreg free
  2261                           
  2262                           ;dc_motor.c: 149:     }
  2263   00203E  EFD9  F010         	goto	l520
  2264   002042                     l3882:
  2265                           
  2266                           ; BSR set to: 0
  2267   002042  0E07               	movlw	7
  2268   002044  19B6               	xorwf	move@color& (0+255),w,b
  2269   002046  A4D8               	btfss	status,2,c
  2270   002048  EF28  F010         	goto	u2511
  2271   00204C  EF2A  F010         	goto	u2510
  2272   002050                     u2511:
  2273   002050  EF8E  F010         	goto	l3894
  2274   002054                     u2510:
  2275   002054                     
  2276                           ; BSR set to: 0
  2277                           ;dc_motor.c: 152:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2278   002054  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2279   002058  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2280   00205C  C0B4  F021         	movff	move@mR,turnLeft@mR
  2281   002060  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2282   002064  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2283   002068  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2284   00206C  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2285   002070  ECA4  F019         	call	_turnLeft	;wreg free
  2286   002074                     
  2287                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2288   002074  0E05               	movlw	5
  2289   002076  6E42               	movwf	(??_move+1)^0,c
  2290   002078  0E0F               	movlw	15
  2291   00207A  6E41               	movwf	??_move^0,c
  2292   00207C  0EF1               	movlw	241
  2293   00207E                     u2847:
  2294   00207E  2EE8               	decfsz	wreg,f,c
  2295   002080  D7FE               	bra	u2847
  2296   002082  2E41               	decfsz	??_move^0,f,c
  2297   002084  D7FC               	bra	u2847
  2298   002086  2E42               	decfsz	(??_move+1)^0,f,c
  2299   002088  D7FA               	bra	u2847
  2300   00208A  0000               	nop	
  2301   00208C                     
  2302                           ;dc_motor.c: 154:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2303   00208C  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2304   002090  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2305   002094  C0B4  F021         	movff	move@mR,turnLeft@mR
  2306   002098  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2307   00209C  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2308   0020A0  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2309   0020A4  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2310   0020A8  ECA4  F019         	call	_turnLeft	;wreg free
  2311                           
  2312                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2313   0020AC  0E05               	movlw	5
  2314   0020AE  6E42               	movwf	(??_move+1)^0,c
  2315   0020B0  0E0F               	movlw	15
  2316   0020B2  6E41               	movwf	??_move^0,c
  2317   0020B4  0EF1               	movlw	241
  2318   0020B6                     u2857:
  2319   0020B6  2EE8               	decfsz	wreg,f,c
  2320   0020B8  D7FE               	bra	u2857
  2321   0020BA  2E41               	decfsz	??_move^0,f,c
  2322   0020BC  D7FC               	bra	u2857
  2323   0020BE  2E42               	decfsz	(??_move+1)^0,f,c
  2324   0020C0  D7FA               	bra	u2857
  2325   0020C2  0000               	nop	
  2326   0020C4                     
  2327                           ;dc_motor.c: 156:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2328   0020C4  C0B2  F01F         	movff	move@mL,turnLeft@mL
  2329   0020C8  C0B3  F020         	movff	move@mL+1,turnLeft@mL+1
  2330   0020CC  C0B4  F021         	movff	move@mR,turnLeft@mR
  2331   0020D0  C0B5  F022         	movff	move@mR+1,turnLeft@mR+1
  2332   0020D4  C0BF  F023         	movff	move@turnSpeed,turnLeft@turnSpeed
  2333   0020D8  C0C0  F024         	movff	move@turnDuration,turnLeft@turnDuration
  2334   0020DC  C0C1  F025         	movff	move@turnRamp,turnLeft@turnRamp
  2335   0020E0  ECA4  F019         	call	_turnLeft	;wreg free
  2336   0020E4                     
  2337                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2338   0020E4  0E05               	movlw	5
  2339   0020E6  6E42               	movwf	(??_move+1)^0,c
  2340   0020E8  0E0F               	movlw	15
  2341   0020EA  6E41               	movwf	??_move^0,c
  2342   0020EC  0EF1               	movlw	241
  2343   0020EE                     u2867:
  2344   0020EE  2EE8               	decfsz	wreg,f,c
  2345   0020F0  D7FE               	bra	u2867
  2346   0020F2  2E41               	decfsz	??_move^0,f,c
  2347   0020F4  D7FC               	bra	u2867
  2348   0020F6  2E42               	decfsz	(??_move+1)^0,f,c
  2349   0020F8  D7FA               	bra	u2867
  2350   0020FA  0000               	nop	
  2351                           
  2352                           ;dc_motor.c: 158:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2353   0020FC  C0B2  F01F         	movff	move@mL,fullSpeedAhead@mL
  2354   002100  C0B3  F020         	movff	move@mL+1,fullSpeedAhead@mL+1
  2355   002104  C0B4  F021         	movff	move@mR,fullSpeedAhead@mR
  2356   002108  C0B5  F022         	movff	move@mR+1,fullSpeedAhead@mR+1
  2357   00210C  C0BC  F023         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2358   002110  C0BE  F024         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2359   002114  ECF3  F01C         	call	_fullSpeedAhead	;wreg free
  2360                           
  2361                           ;dc_motor.c: 159:     }
  2362   002118  EFD9  F010         	goto	l520
  2363   00211C                     l3894:
  2364                           
  2365                           ; BSR set to: 0
  2366   00211C  0E08               	movlw	8
  2367   00211E  19B6               	xorwf	move@color& (0+255),w,b
  2368   002120  A4D8               	btfss	status,2,c
  2369   002122  EF95  F010         	goto	u2521
  2370   002126  EF97  F010         	goto	u2520
  2371   00212A                     u2521:
  2372   00212A  EFB9  F010         	goto	l3898
  2373   00212E                     u2520:
  2374   00212E                     
  2375                           ; BSR set to: 0
  2376                           ;dc_motor.c: 162:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2377   00212E  C0B2  F02D         	movff	move@mL,returnHome@mL
  2378   002132  C0B3  F02E         	movff	move@mL+1,returnHome@mL+1
  2379   002136  C0B4  F02F         	movff	move@mR,returnHome@mR
  2380   00213A  C0B5  F030         	movff	move@mR+1,returnHome@mR+1
  2381   00213E  C0B7  F031         	movff	move@moveSequence,returnHome@moveSequence
  2382   002142  C0B8  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2383   002146  C0B9  F033         	movff	move@straightTime,returnHome@straightTime
  2384   00214A  C0BA  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2385   00214E  C0BB  F035         	movff	move@curMove,returnHome@curMove
  2386   002152  C0BC  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2387   002156  C0BD  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2388   00215A  C0BE  F038         	movff	move@straightRamp,returnHome@straightRamp
  2389   00215E  C0BF  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2390   002162  C0C0  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2391   002166  C0C1  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2392   00216A  EC01  F007         	call	_returnHome	;wreg free
  2393                           
  2394                           ;dc_motor.c: 163:     }
  2395   00216E  EFD9  F010         	goto	l520
  2396   002172                     l3898:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;dc_motor.c: 166:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  2400   002172  C0B2  F02D         	movff	move@mL,returnHome@mL
  2401   002176  C0B3  F02E         	movff	move@mL+1,returnHome@mL+1
  2402   00217A  C0B4  F02F         	movff	move@mR,returnHome@mR
  2403   00217E  C0B5  F030         	movff	move@mR+1,returnHome@mR+1
  2404   002182  C0B7  F031         	movff	move@moveSequence,returnHome@moveSequence
  2405   002186  C0B8  F032         	movff	move@moveSequence+1,returnHome@moveSequence+1
  2406   00218A  C0B9  F033         	movff	move@straightTime,returnHome@straightTime
  2407   00218E  C0BA  F034         	movff	move@straightTime+1,returnHome@straightTime+1
  2408   002192  C0BB  F035         	movff	move@curMove,returnHome@curMove
  2409   002196  C0BC  F036         	movff	move@straightSpeed,returnHome@straightSpeed
  2410   00219A  C0BD  F037         	movff	move@reverseDuration,returnHome@reverseDuration
  2411   00219E  C0BE  F038         	movff	move@straightRamp,returnHome@straightRamp
  2412   0021A2  C0BF  F039         	movff	move@turnSpeed,returnHome@turnSpeed
  2413   0021A6  C0C0  F03A         	movff	move@turnDuration,returnHome@turnDuration
  2414   0021AA  C0C1  F03B         	movff	move@turnRamp,returnHome@turnRamp
  2415   0021AE  EC01  F007         	call	_returnHome	;wreg free
  2416   0021B2                     l520:
  2417   0021B2  0012               	return		;funcret
  2418   0021B4                     __end_of_move:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function _returnHome *****************
  2422 ;; Defined at:
  2423 ;;		line 171 in file "dc_motor.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2426 ;;		 -> main@motorL(10), 
  2427 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2428 ;;		 -> main@motorR(10), 
  2429 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  2430 ;;		 -> main@moveSequence(40), 
  2431 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  2432 ;;		 -> main@straightTime(82), 
  2433 ;;  curMove         1   52[COMRAM] unsigned char 
  2434 ;;  straightSpee    1   53[COMRAM] unsigned char 
  2435 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  2436 ;;  straightRamp    1   55[COMRAM] unsigned char 
  2437 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  2438 ;;  turnDuration    1   57[COMRAM] unsigned char 
  2439 ;;  turnRamp        1   58[COMRAM] unsigned char 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  i               1   63[COMRAM] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2451 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2453 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2454 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2455 ;;Total ram usage:       20 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 8
  2458 ;; This function calls:
  2459 ;;		_fullSpeedAhead
  2460 ;;		_get16bitTMR0val
  2461 ;;		_resetTimer
  2462 ;;		_reverseOneSquare
  2463 ;;		_stop
  2464 ;;		_turnLeft
  2465 ;;		_turnRight
  2466 ;; This function is called by:
  2467 ;;		_move
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text2
  2472   000E02                     __ptext2:
  2473                           	callstack 0
  2474   000E02                     _returnHome:
  2475                           	callstack 21
  2476   000E02                     
  2477                           ;dc_motor.c: 171: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char reverseDu
      +                          ration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned
      +                           char turnRamp);dc_motor.c: 172: {;dc_motor.c: 173:     turnLeft(mL, mR, turnSpeed, turn
      +                          Duration, turnRamp);
  2478   000E02  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2479   000E06  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2480   000E0A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2481   000E0E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2482   000E12  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2483   000E16  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2484   000E1A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2485   000E1E  ECA4  F019         	call	_turnLeft	;wreg free
  2486   000E22                     
  2487                           ;dc_motor.c: 174:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2488   000E22  0E05               	movlw	5
  2489   000E24  6E3D               	movwf	(??_returnHome+1)^0,c
  2490   000E26  0E0F               	movlw	15
  2491   000E28  6E3C               	movwf	??_returnHome^0,c
  2492   000E2A  0EF1               	movlw	241
  2493   000E2C                     u2877:
  2494   000E2C  2EE8               	decfsz	wreg,f,c
  2495   000E2E  D7FE               	bra	u2877
  2496   000E30  2E3C               	decfsz	??_returnHome^0,f,c
  2497   000E32  D7FC               	bra	u2877
  2498   000E34  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2499   000E36  D7FA               	bra	u2877
  2500   000E38  0000               	nop	
  2501   000E3A                     
  2502                           ;dc_motor.c: 175:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2503   000E3A  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2504   000E3E  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2505   000E42  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2506   000E46  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2507   000E4A  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2508   000E4E  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2509   000E52  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2510   000E56  ECA4  F019         	call	_turnLeft	;wreg free
  2511                           
  2512                           ;dc_motor.c: 176:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2513   000E5A  0E05               	movlw	5
  2514   000E5C  6E3D               	movwf	(??_returnHome+1)^0,c
  2515   000E5E  0E0F               	movlw	15
  2516   000E60  6E3C               	movwf	??_returnHome^0,c
  2517   000E62  0EF1               	movlw	241
  2518   000E64                     u2887:
  2519   000E64  2EE8               	decfsz	wreg,f,c
  2520   000E66  D7FE               	bra	u2887
  2521   000E68  2E3C               	decfsz	??_returnHome^0,f,c
  2522   000E6A  D7FC               	bra	u2887
  2523   000E6C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2524   000E6E  D7FA               	bra	u2887
  2525   000E70  0000               	nop	
  2526   000E72                     
  2527                           ;dc_motor.c: 177:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2528   000E72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2529   000E76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2530   000E7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2531   000E7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2532   000E82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2533   000E86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2534   000E8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2535   000E8E  ECA4  F019         	call	_turnLeft	;wreg free
  2536   000E92                     
  2537                           ;dc_motor.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2538   000E92  0E05               	movlw	5
  2539   000E94  6E3D               	movwf	(??_returnHome+1)^0,c
  2540   000E96  0E0F               	movlw	15
  2541   000E98  6E3C               	movwf	??_returnHome^0,c
  2542   000E9A  0EF1               	movlw	241
  2543   000E9C                     u2897:
  2544   000E9C  2EE8               	decfsz	wreg,f,c
  2545   000E9E  D7FE               	bra	u2897
  2546   000EA0  2E3C               	decfsz	??_returnHome^0,f,c
  2547   000EA2  D7FC               	bra	u2897
  2548   000EA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2549   000EA6  D7FA               	bra	u2897
  2550   000EA8  0000               	nop	
  2551                           
  2552                           ;dc_motor.c: 179:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2553   000EAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2554   000EAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2555   000EB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2556   000EB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2557   000EBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2558   000EBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2559   000EC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2560   000EC6  ECA4  F019         	call	_turnLeft	;wreg free
  2561   000ECA                     
  2562                           ;dc_motor.c: 180:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2563   000ECA  0E05               	movlw	5
  2564   000ECC  6E3D               	movwf	(??_returnHome+1)^0,c
  2565   000ECE  0E0F               	movlw	15
  2566   000ED0  6E3C               	movwf	??_returnHome^0,c
  2567   000ED2  0EF1               	movlw	241
  2568   000ED4                     u2907:
  2569   000ED4  2EE8               	decfsz	wreg,f,c
  2570   000ED6  D7FE               	bra	u2907
  2571   000ED8  2E3C               	decfsz	??_returnHome^0,f,c
  2572   000EDA  D7FC               	bra	u2907
  2573   000EDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2574   000EDE  D7FA               	bra	u2907
  2575   000EE0  0000               	nop	
  2576   000EE2                     
  2577                           ;dc_motor.c: 181:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2578   000EE2  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  2579   000EE6  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  2580   000EEA  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  2581   000EEE  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  2582   000EF2  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  2583   000EF6  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  2584   000EFA  ECF3  F01C         	call	_fullSpeedAhead	;wreg free
  2585   000EFE                     
  2586                           ;dc_motor.c: 182:     resetTimer();
  2587   000EFE  ECBF  F020         	call	_resetTimer	;wreg free
  2588   000F02                     l3016:
  2589   000F02  5035               	movf	returnHome@curMove^0,w,c
  2590   000F04  0D02               	mullw	2
  2591   000F06  CFF3 F03C          	movff	prodl,??_returnHome
  2592   000F0A  CFF4 F03D          	movff	prodh,??_returnHome+1
  2593   000F0E  503C               	movf	??_returnHome^0,w,c
  2594   000F10  2433               	addwf	returnHome@straightTime^0,w,c
  2595   000F12  6ED9               	movwf	fsr2l,c
  2596   000F14  503D               	movf	(??_returnHome+1)^0,w,c
  2597   000F16  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  2598   000F18  6EDA               	movwf	fsr2h,c
  2599   000F1A  ECBD  F01F         	call	_get16bitTMR0val	;wreg free
  2600   000F1E  50DE               	movf	postinc2,w,c
  2601   000F20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  2602   000F22  50DE               	movf	postinc2,w,c
  2603   000F24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  2604   000F26  A0D8               	btfss	status,0,c
  2605   000F28  EF98  F007         	goto	u1631
  2606   000F2C  EF9A  F007         	goto	u1630
  2607   000F30                     u1631:
  2608   000F30  EF81  F007         	goto	l3016
  2609   000F34                     u1630:
  2610   000F34                     
  2611                           ;dc_motor.c: 184:     stop(mL, mR, straightRamp);
  2612   000F34  C02D  F01F         	movff	returnHome@mL,stop@mL
  2613   000F38  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  2614   000F3C  C02F  F021         	movff	returnHome@mR,stop@mR
  2615   000F40  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  2616   000F44  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  2617   000F48  EC6F  F01C         	call	_stop	;wreg free
  2618   000F4C                     
  2619                           ;dc_motor.c: 186:     char i=curMove;
  2620   000F4C  C035  F040         	movff	returnHome@curMove,returnHome@i
  2621                           
  2622                           ;dc_motor.c: 187:     while (i>0) {
  2623   000F50  EF56  F00A         	goto	l3108
  2624   000F54                     l3022:
  2625                           
  2626                           ;dc_motor.c: 188:         i--;
  2627   000F54  0640               	decf	returnHome@i^0,f,c
  2628   000F56                     
  2629                           ;dc_motor.c: 190:         if (moveSequence[i] == 1) {
  2630   000F56  5040               	movf	returnHome@i^0,w,c
  2631   000F58  2431               	addwf	returnHome@moveSequence^0,w,c
  2632   000F5A  6ED9               	movwf	fsr2l,c
  2633   000F5C  0E00               	movlw	0
  2634   000F5E  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2635   000F60  6EDA               	movwf	fsr2h,c
  2636   000F62  04DE               	decf	postinc2,w,c
  2637   000F64  A4D8               	btfss	status,2,c
  2638   000F66  EFB7  F007         	goto	u1641
  2639   000F6A  EFB9  F007         	goto	u1640
  2640   000F6E                     u1641:
  2641   000F6E  EFF3  F007         	goto	l3032
  2642   000F72                     u1640:
  2643   000F72                     
  2644                           ;dc_motor.c: 191:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2645   000F72  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2646   000F76  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2647   000F7A  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2648   000F7E  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2649   000F82  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2650   000F86  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2651   000F8A  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2652   000F8E  ECA4  F019         	call	_turnLeft	;wreg free
  2653   000F92                     
  2654                           ;dc_motor.c: 192:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2655   000F92  0E05               	movlw	5
  2656   000F94  6E3D               	movwf	(??_returnHome+1)^0,c
  2657   000F96  0E0F               	movlw	15
  2658   000F98  6E3C               	movwf	??_returnHome^0,c
  2659   000F9A  0EF1               	movlw	241
  2660   000F9C                     u2917:
  2661   000F9C  2EE8               	decfsz	wreg,f,c
  2662   000F9E  D7FE               	bra	u2917
  2663   000FA0  2E3C               	decfsz	??_returnHome^0,f,c
  2664   000FA2  D7FC               	bra	u2917
  2665   000FA4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2666   000FA6  D7FA               	bra	u2917
  2667   000FA8  0000               	nop	
  2668   000FAA                     
  2669                           ;dc_motor.c: 193:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2670   000FAA  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2671   000FAE  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2672   000FB2  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2673   000FB6  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2674   000FBA  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2675   000FBE  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2676   000FC2  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2677   000FC6  ECA4  F019         	call	_turnLeft	;wreg free
  2678                           
  2679                           ;dc_motor.c: 194:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2680   000FCA  0E05               	movlw	5
  2681   000FCC  6E3D               	movwf	(??_returnHome+1)^0,c
  2682   000FCE  0E0F               	movlw	15
  2683   000FD0  6E3C               	movwf	??_returnHome^0,c
  2684   000FD2  0EF1               	movlw	241
  2685   000FD4                     u2927:
  2686   000FD4  2EE8               	decfsz	wreg,f,c
  2687   000FD6  D7FE               	bra	u2927
  2688   000FD8  2E3C               	decfsz	??_returnHome^0,f,c
  2689   000FDA  D7FC               	bra	u2927
  2690   000FDC  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2691   000FDE  D7FA               	bra	u2927
  2692   000FE0  0000               	nop	
  2693                           
  2694                           ;dc_motor.c: 195:         }
  2695   000FE2  EF21  F00A         	goto	l529
  2696   000FE6                     l3032:
  2697   000FE6  5040               	movf	returnHome@i^0,w,c
  2698   000FE8  2431               	addwf	returnHome@moveSequence^0,w,c
  2699   000FEA  6ED9               	movwf	fsr2l,c
  2700   000FEC  0E00               	movlw	0
  2701   000FEE  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2702   000FF0  6EDA               	movwf	fsr2h,c
  2703   000FF2  0E02               	movlw	2
  2704   000FF4  18DE               	xorwf	postinc2,w,c
  2705   000FF6  A4D8               	btfss	status,2,c
  2706   000FF8  EF00  F008         	goto	u1651
  2707   000FFC  EF02  F008         	goto	u1650
  2708   001000                     u1651:
  2709   001000  EF3C  F008         	goto	l3040
  2710   001004                     u1650:
  2711   001004                     
  2712                           ;dc_motor.c: 198:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2713   001004  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2714   001008  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2715   00100C  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2716   001010  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2717   001014  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2718   001018  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2719   00101C  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2720   001020  ECBA  F018         	call	_turnRight	;wreg free
  2721   001024                     
  2722                           ;dc_motor.c: 199:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2723   001024  0E05               	movlw	5
  2724   001026  6E3D               	movwf	(??_returnHome+1)^0,c
  2725   001028  0E0F               	movlw	15
  2726   00102A  6E3C               	movwf	??_returnHome^0,c
  2727   00102C  0EF1               	movlw	241
  2728   00102E                     u2937:
  2729   00102E  2EE8               	decfsz	wreg,f,c
  2730   001030  D7FE               	bra	u2937
  2731   001032  2E3C               	decfsz	??_returnHome^0,f,c
  2732   001034  D7FC               	bra	u2937
  2733   001036  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2734   001038  D7FA               	bra	u2937
  2735   00103A  0000               	nop	
  2736   00103C                     
  2737                           ;dc_motor.c: 200:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2738   00103C  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2739   001040  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2740   001044  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2741   001048  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2742   00104C  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2743   001050  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2744   001054  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2745   001058  ECBA  F018         	call	_turnRight	;wreg free
  2746                           
  2747                           ;dc_motor.c: 201:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2748   00105C  0E05               	movlw	5
  2749   00105E  6E3D               	movwf	(??_returnHome+1)^0,c
  2750   001060  0E0F               	movlw	15
  2751   001062  6E3C               	movwf	??_returnHome^0,c
  2752   001064  0EF1               	movlw	241
  2753   001066                     u2947:
  2754   001066  2EE8               	decfsz	wreg,f,c
  2755   001068  D7FE               	bra	u2947
  2756   00106A  2E3C               	decfsz	??_returnHome^0,f,c
  2757   00106C  D7FC               	bra	u2947
  2758   00106E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2759   001070  D7FA               	bra	u2947
  2760   001072  0000               	nop	
  2761                           
  2762                           ;dc_motor.c: 202:         }
  2763   001074  EF21  F00A         	goto	l529
  2764   001078                     l3040:
  2765   001078  5040               	movf	returnHome@i^0,w,c
  2766   00107A  2431               	addwf	returnHome@moveSequence^0,w,c
  2767   00107C  6ED9               	movwf	fsr2l,c
  2768   00107E  0E00               	movlw	0
  2769   001080  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2770   001082  6EDA               	movwf	fsr2h,c
  2771   001084  0E03               	movlw	3
  2772   001086  18DE               	xorwf	postinc2,w,c
  2773   001088  A4D8               	btfss	status,2,c
  2774   00108A  EF49  F008         	goto	u1661
  2775   00108E  EF4B  F008         	goto	u1660
  2776   001092                     u1661:
  2777   001092  EFBD  F008         	goto	l3054
  2778   001096                     u1660:
  2779   001096                     
  2780                           ;dc_motor.c: 205:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2781   001096  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2782   00109A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2783   00109E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2784   0010A2  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2785   0010A6  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2786   0010AA  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2787   0010AE  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2788   0010B2  ECA4  F019         	call	_turnLeft	;wreg free
  2789   0010B6                     
  2790                           ;dc_motor.c: 206:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2791   0010B6  0E05               	movlw	5
  2792   0010B8  6E3D               	movwf	(??_returnHome+1)^0,c
  2793   0010BA  0E0F               	movlw	15
  2794   0010BC  6E3C               	movwf	??_returnHome^0,c
  2795   0010BE  0EF1               	movlw	241
  2796   0010C0                     u2957:
  2797   0010C0  2EE8               	decfsz	wreg,f,c
  2798   0010C2  D7FE               	bra	u2957
  2799   0010C4  2E3C               	decfsz	??_returnHome^0,f,c
  2800   0010C6  D7FC               	bra	u2957
  2801   0010C8  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2802   0010CA  D7FA               	bra	u2957
  2803   0010CC  0000               	nop	
  2804   0010CE                     
  2805                           ;dc_motor.c: 207:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2806   0010CE  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2807   0010D2  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2808   0010D6  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2809   0010DA  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2810   0010DE  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2811   0010E2  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2812   0010E6  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2813   0010EA  ECA4  F019         	call	_turnLeft	;wreg free
  2814                           
  2815                           ;dc_motor.c: 208:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2816   0010EE  0E05               	movlw	5
  2817   0010F0  6E3D               	movwf	(??_returnHome+1)^0,c
  2818   0010F2  0E0F               	movlw	15
  2819   0010F4  6E3C               	movwf	??_returnHome^0,c
  2820   0010F6  0EF1               	movlw	241
  2821   0010F8                     u2967:
  2822   0010F8  2EE8               	decfsz	wreg,f,c
  2823   0010FA  D7FE               	bra	u2967
  2824   0010FC  2E3C               	decfsz	??_returnHome^0,f,c
  2825   0010FE  D7FC               	bra	u2967
  2826   001100  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2827   001102  D7FA               	bra	u2967
  2828   001104  0000               	nop	
  2829   001106                     
  2830                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2831   001106  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2832   00110A  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2833   00110E  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2834   001112  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2835   001116  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2836   00111A  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2837   00111E  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2838   001122  ECA4  F019         	call	_turnLeft	;wreg free
  2839   001126                     
  2840                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2841   001126  0E05               	movlw	5
  2842   001128  6E3D               	movwf	(??_returnHome+1)^0,c
  2843   00112A  0E0F               	movlw	15
  2844   00112C  6E3C               	movwf	??_returnHome^0,c
  2845   00112E  0EF1               	movlw	241
  2846   001130                     u2977:
  2847   001130  2EE8               	decfsz	wreg,f,c
  2848   001132  D7FE               	bra	u2977
  2849   001134  2E3C               	decfsz	??_returnHome^0,f,c
  2850   001136  D7FC               	bra	u2977
  2851   001138  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2852   00113A  D7FA               	bra	u2977
  2853   00113C  0000               	nop	
  2854                           
  2855                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2856   00113E  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2857   001142  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2858   001146  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2859   00114A  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2860   00114E  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2861   001152  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2862   001156  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2863   00115A  ECA4  F019         	call	_turnLeft	;wreg free
  2864   00115E                     l3052:
  2865                           
  2866                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2867   00115E  0E05               	movlw	5
  2868   001160  6E3D               	movwf	(??_returnHome+1)^0,c
  2869   001162  0E0F               	movlw	15
  2870   001164  6E3C               	movwf	??_returnHome^0,c
  2871   001166  0EF1               	movlw	241
  2872   001168                     u2987:
  2873   001168  2EE8               	decfsz	wreg,f,c
  2874   00116A  D7FE               	bra	u2987
  2875   00116C  2E3C               	decfsz	??_returnHome^0,f,c
  2876   00116E  D7FC               	bra	u2987
  2877   001170  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2878   001172  D7FA               	bra	u2987
  2879   001174  0000               	nop	
  2880                           
  2881                           ;dc_motor.c: 213:         }
  2882   001176  EF21  F00A         	goto	l529
  2883   00117A                     l3054:
  2884   00117A  5040               	movf	returnHome@i^0,w,c
  2885   00117C  2431               	addwf	returnHome@moveSequence^0,w,c
  2886   00117E  6ED9               	movwf	fsr2l,c
  2887   001180  0E00               	movlw	0
  2888   001182  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2889   001184  6EDA               	movwf	fsr2h,c
  2890   001186  0E04               	movlw	4
  2891   001188  18DE               	xorwf	postinc2,w,c
  2892   00118A  A4D8               	btfss	status,2,c
  2893   00118C  EFCA  F008         	goto	u1671
  2894   001190  EFCC  F008         	goto	u1670
  2895   001194                     u1671:
  2896   001194  EF16  F009         	goto	l3066
  2897   001198                     u1670:
  2898   001198                     
  2899                           ;dc_motor.c: 216:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2900   001198  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2901   00119C  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2902   0011A0  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2903   0011A4  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2904   0011A8  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2905   0011AC  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2906   0011B0  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2907   0011B4  ECA4  F019         	call	_turnLeft	;wreg free
  2908   0011B8                     
  2909                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2910   0011B8  0E05               	movlw	5
  2911   0011BA  6E3D               	movwf	(??_returnHome+1)^0,c
  2912   0011BC  0E0F               	movlw	15
  2913   0011BE  6E3C               	movwf	??_returnHome^0,c
  2914   0011C0  0EF1               	movlw	241
  2915   0011C2                     u2997:
  2916   0011C2  2EE8               	decfsz	wreg,f,c
  2917   0011C4  D7FE               	bra	u2997
  2918   0011C6  2E3C               	decfsz	??_returnHome^0,f,c
  2919   0011C8  D7FC               	bra	u2997
  2920   0011CA  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2921   0011CC  D7FA               	bra	u2997
  2922   0011CE  0000               	nop	
  2923   0011D0                     
  2924                           ;dc_motor.c: 218:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2925   0011D0  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  2926   0011D4  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  2927   0011D8  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  2928   0011DC  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  2929   0011E0  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  2930   0011E4  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  2931   0011E8  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  2932   0011EC  ECA4  F019         	call	_turnLeft	;wreg free
  2933                           
  2934                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2935   0011F0  0E05               	movlw	5
  2936   0011F2  6E3D               	movwf	(??_returnHome+1)^0,c
  2937   0011F4  0E0F               	movlw	15
  2938   0011F6  6E3C               	movwf	??_returnHome^0,c
  2939   0011F8  0EF1               	movlw	241
  2940   0011FA                     u3007:
  2941   0011FA  2EE8               	decfsz	wreg,f,c
  2942   0011FC  D7FE               	bra	u3007
  2943   0011FE  2E3C               	decfsz	??_returnHome^0,f,c
  2944   001200  D7FC               	bra	u3007
  2945   001202  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2946   001204  D7FA               	bra	u3007
  2947   001206  0000               	nop	
  2948   001208                     
  2949                           ;dc_motor.c: 220:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  2950   001208  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  2951   00120C  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  2952   001210  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  2953   001214  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  2954   001218  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  2955   00121C  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  2956   001220  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  2957   001224  ECC7  F017         	call	_reverseOneSquare	;wreg free
  2958   001228  EFAF  F008         	goto	l3052
  2959   00122C                     l3066:
  2960   00122C  5040               	movf	returnHome@i^0,w,c
  2961   00122E  2431               	addwf	returnHome@moveSequence^0,w,c
  2962   001230  6ED9               	movwf	fsr2l,c
  2963   001232  0E00               	movlw	0
  2964   001234  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  2965   001236  6EDA               	movwf	fsr2h,c
  2966   001238  0E05               	movlw	5
  2967   00123A  18DE               	xorwf	postinc2,w,c
  2968   00123C  A4D8               	btfss	status,2,c
  2969   00123E  EF23  F009         	goto	u1681
  2970   001242  EF25  F009         	goto	u1680
  2971   001246                     u1681:
  2972   001246  EF6F  F009         	goto	l3078
  2973   00124A                     u1680:
  2974   00124A                     
  2975                           ;dc_motor.c: 225:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2976   00124A  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  2977   00124E  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  2978   001252  C02F  F021         	movff	returnHome@mR,turnRight@mR
  2979   001256  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  2980   00125A  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  2981   00125E  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  2982   001262  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  2983   001266  ECBA  F018         	call	_turnRight	;wreg free
  2984   00126A                     
  2985                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2986   00126A  0E05               	movlw	5
  2987   00126C  6E3D               	movwf	(??_returnHome+1)^0,c
  2988   00126E  0E0F               	movlw	15
  2989   001270  6E3C               	movwf	??_returnHome^0,c
  2990   001272  0EF1               	movlw	241
  2991   001274                     u3017:
  2992   001274  2EE8               	decfsz	wreg,f,c
  2993   001276  D7FE               	bra	u3017
  2994   001278  2E3C               	decfsz	??_returnHome^0,f,c
  2995   00127A  D7FC               	bra	u3017
  2996   00127C  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  2997   00127E  D7FA               	bra	u3017
  2998   001280  0000               	nop	
  2999   001282                     
  3000                           ;dc_motor.c: 227:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3001   001282  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3002   001286  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3003   00128A  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3004   00128E  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3005   001292  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3006   001296  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3007   00129A  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3008   00129E  ECBA  F018         	call	_turnRight	;wreg free
  3009                           
  3010                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3011   0012A2  0E05               	movlw	5
  3012   0012A4  6E3D               	movwf	(??_returnHome+1)^0,c
  3013   0012A6  0E0F               	movlw	15
  3014   0012A8  6E3C               	movwf	??_returnHome^0,c
  3015   0012AA  0EF1               	movlw	241
  3016   0012AC                     u3027:
  3017   0012AC  2EE8               	decfsz	wreg,f,c
  3018   0012AE  D7FE               	bra	u3027
  3019   0012B0  2E3C               	decfsz	??_returnHome^0,f,c
  3020   0012B2  D7FC               	bra	u3027
  3021   0012B4  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3022   0012B6  D7FA               	bra	u3027
  3023   0012B8  0000               	nop	
  3024   0012BA                     
  3025                           ;dc_motor.c: 229:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3026   0012BA  C02D  F01F         	movff	returnHome@mL,reverseOneSquare@mL
  3027   0012BE  C02E  F020         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  3028   0012C2  C02F  F021         	movff	returnHome@mR,reverseOneSquare@mR
  3029   0012C6  C030  F022         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  3030   0012CA  C036  F023         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  3031   0012CE  C037  F024         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  3032   0012D2  C038  F025         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  3033   0012D6  ECC7  F017         	call	_reverseOneSquare	;wreg free
  3034   0012DA  EFAF  F008         	goto	l3052
  3035   0012DE                     l3078:
  3036   0012DE  5040               	movf	returnHome@i^0,w,c
  3037   0012E0  2431               	addwf	returnHome@moveSequence^0,w,c
  3038   0012E2  6ED9               	movwf	fsr2l,c
  3039   0012E4  0E00               	movlw	0
  3040   0012E6  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3041   0012E8  6EDA               	movwf	fsr2h,c
  3042   0012EA  0E06               	movlw	6
  3043   0012EC  18DE               	xorwf	postinc2,w,c
  3044   0012EE  A4D8               	btfss	status,2,c
  3045   0012F0  EF7C  F009         	goto	u1691
  3046   0012F4  EF7E  F009         	goto	u1690
  3047   0012F8                     u1691:
  3048   0012F8  EFC8  F009         	goto	l3090
  3049   0012FC                     u1690:
  3050   0012FC                     
  3051                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3052   0012FC  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3053   001300  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3054   001304  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3055   001308  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3056   00130C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3057   001310  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3058   001314  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3059   001318  ECA4  F019         	call	_turnLeft	;wreg free
  3060   00131C                     
  3061                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3062   00131C  0E05               	movlw	5
  3063   00131E  6E3D               	movwf	(??_returnHome+1)^0,c
  3064   001320  0E0F               	movlw	15
  3065   001322  6E3C               	movwf	??_returnHome^0,c
  3066   001324  0EF1               	movlw	241
  3067   001326                     u3037:
  3068   001326  2EE8               	decfsz	wreg,f,c
  3069   001328  D7FE               	bra	u3037
  3070   00132A  2E3C               	decfsz	??_returnHome^0,f,c
  3071   00132C  D7FC               	bra	u3037
  3072   00132E  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3073   001330  D7FA               	bra	u3037
  3074   001332  0000               	nop	
  3075   001334                     
  3076                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3077   001334  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3078   001338  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3079   00133C  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3080   001340  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3081   001344  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3082   001348  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3083   00134C  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3084   001350  ECA4  F019         	call	_turnLeft	;wreg free
  3085                           
  3086                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3087   001354  0E05               	movlw	5
  3088   001356  6E3D               	movwf	(??_returnHome+1)^0,c
  3089   001358  0E0F               	movlw	15
  3090   00135A  6E3C               	movwf	??_returnHome^0,c
  3091   00135C  0EF1               	movlw	241
  3092   00135E                     u3047:
  3093   00135E  2EE8               	decfsz	wreg,f,c
  3094   001360  D7FE               	bra	u3047
  3095   001362  2E3C               	decfsz	??_returnHome^0,f,c
  3096   001364  D7FC               	bra	u3047
  3097   001366  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3098   001368  D7FA               	bra	u3047
  3099   00136A  0000               	nop	
  3100   00136C                     
  3101                           ;dc_motor.c: 238:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3102   00136C  C02D  F01F         	movff	returnHome@mL,turnLeft@mL
  3103   001370  C02E  F020         	movff	returnHome@mL+1,turnLeft@mL+1
  3104   001374  C02F  F021         	movff	returnHome@mR,turnLeft@mR
  3105   001378  C030  F022         	movff	returnHome@mR+1,turnLeft@mR+1
  3106   00137C  C039  F023         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3107   001380  C03A  F024         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3108   001384  C03B  F025         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3109   001388  ECA4  F019         	call	_turnLeft	;wreg free
  3110   00138C  EFAF  F008         	goto	l3052
  3111   001390                     l3090:
  3112   001390  5040               	movf	returnHome@i^0,w,c
  3113   001392  2431               	addwf	returnHome@moveSequence^0,w,c
  3114   001394  6ED9               	movwf	fsr2l,c
  3115   001396  0E00               	movlw	0
  3116   001398  2032               	addwfc	(returnHome@moveSequence+1)^0,w,c
  3117   00139A  6EDA               	movwf	fsr2h,c
  3118   00139C  0E07               	movlw	7
  3119   00139E  18DE               	xorwf	postinc2,w,c
  3120   0013A0  A4D8               	btfss	status,2,c
  3121   0013A2  EFD5  F009         	goto	u1701
  3122   0013A6  EFD7  F009         	goto	u1700
  3123   0013AA                     u1701:
  3124   0013AA  EF21  F00A         	goto	l535
  3125   0013AE                     u1700:
  3126   0013AE                     
  3127                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3128   0013AE  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3129   0013B2  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3130   0013B6  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3131   0013BA  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3132   0013BE  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3133   0013C2  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3134   0013C6  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3135   0013CA  ECBA  F018         	call	_turnRight	;wreg free
  3136   0013CE                     
  3137                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3138   0013CE  0E05               	movlw	5
  3139   0013D0  6E3D               	movwf	(??_returnHome+1)^0,c
  3140   0013D2  0E0F               	movlw	15
  3141   0013D4  6E3C               	movwf	??_returnHome^0,c
  3142   0013D6  0EF1               	movlw	241
  3143   0013D8                     u3057:
  3144   0013D8  2EE8               	decfsz	wreg,f,c
  3145   0013DA  D7FE               	bra	u3057
  3146   0013DC  2E3C               	decfsz	??_returnHome^0,f,c
  3147   0013DE  D7FC               	bra	u3057
  3148   0013E0  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3149   0013E2  D7FA               	bra	u3057
  3150   0013E4  0000               	nop	
  3151   0013E6                     
  3152                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3153   0013E6  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3154   0013EA  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3155   0013EE  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3156   0013F2  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3157   0013F6  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3158   0013FA  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3159   0013FE  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3160   001402  ECBA  F018         	call	_turnRight	;wreg free
  3161                           
  3162                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3163   001406  0E05               	movlw	5
  3164   001408  6E3D               	movwf	(??_returnHome+1)^0,c
  3165   00140A  0E0F               	movlw	15
  3166   00140C  6E3C               	movwf	??_returnHome^0,c
  3167   00140E  0EF1               	movlw	241
  3168   001410                     u3067:
  3169   001410  2EE8               	decfsz	wreg,f,c
  3170   001412  D7FE               	bra	u3067
  3171   001414  2E3C               	decfsz	??_returnHome^0,f,c
  3172   001416  D7FC               	bra	u3067
  3173   001418  2E3D               	decfsz	(??_returnHome+1)^0,f,c
  3174   00141A  D7FA               	bra	u3067
  3175   00141C  0000               	nop	
  3176   00141E                     
  3177                           ;dc_motor.c: 247:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3178   00141E  C02D  F01F         	movff	returnHome@mL,turnRight@mL
  3179   001422  C02E  F020         	movff	returnHome@mL+1,turnRight@mL+1
  3180   001426  C02F  F021         	movff	returnHome@mR,turnRight@mR
  3181   00142A  C030  F022         	movff	returnHome@mR+1,turnRight@mR+1
  3182   00142E  C039  F023         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  3183   001432  C03A  F024         	movff	returnHome@turnDuration,turnRight@turnDuration
  3184   001436  C03B  F025         	movff	returnHome@turnRamp,turnRight@turnRamp
  3185   00143A  ECBA  F018         	call	_turnRight	;wreg free
  3186   00143E  EFAF  F008         	goto	l3052
  3187   001442                     l535:
  3188   001442                     l529:
  3189                           
  3190                           ;dc_motor.c: 251:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3191   001442  C02D  F01F         	movff	returnHome@mL,fullSpeedAhead@mL
  3192   001446  C02E  F020         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  3193   00144A  C02F  F021         	movff	returnHome@mR,fullSpeedAhead@mR
  3194   00144E  C030  F022         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  3195   001452  C036  F023         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3196   001456  C038  F024         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  3197   00145A  ECF3  F01C         	call	_fullSpeedAhead	;wreg free
  3198   00145E                     
  3199                           ;dc_motor.c: 252:         resetTimer();
  3200   00145E  ECBF  F020         	call	_resetTimer	;wreg free
  3201   001462                     l3104:
  3202   001462  5040               	movf	returnHome@i^0,w,c
  3203   001464  0D02               	mullw	2
  3204   001466  CFF3 F03C          	movff	prodl,??_returnHome
  3205   00146A  CFF4 F03D          	movff	prodh,??_returnHome+1
  3206   00146E  503C               	movf	??_returnHome^0,w,c
  3207   001470  2433               	addwf	returnHome@straightTime^0,w,c
  3208   001472  6ED9               	movwf	fsr2l,c
  3209   001474  503D               	movf	(??_returnHome+1)^0,w,c
  3210   001476  2034               	addwfc	(returnHome@straightTime+1)^0,w,c
  3211   001478  6EDA               	movwf	fsr2h,c
  3212   00147A  ECBD  F01F         	call	_get16bitTMR0val	;wreg free
  3213   00147E  50DE               	movf	postinc2,w,c
  3214   001480  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  3215   001482  50DE               	movf	postinc2,w,c
  3216   001484  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  3217   001486  A0D8               	btfss	status,0,c
  3218   001488  EF48  F00A         	goto	u1711
  3219   00148C  EF4A  F00A         	goto	u1710
  3220   001490                     u1711:
  3221   001490  EF31  F00A         	goto	l3104
  3222   001494                     u1710:
  3223   001494                     
  3224                           ;dc_motor.c: 254:         stop(mL, mR, straightRamp);
  3225   001494  C02D  F01F         	movff	returnHome@mL,stop@mL
  3226   001498  C02E  F020         	movff	returnHome@mL+1,stop@mL+1
  3227   00149C  C02F  F021         	movff	returnHome@mR,stop@mR
  3228   0014A0  C030  F022         	movff	returnHome@mR+1,stop@mR+1
  3229   0014A4  C038  F023         	movff	returnHome@straightRamp,stop@straightRamp
  3230   0014A8  EC6F  F01C         	call	_stop	;wreg free
  3231   0014AC                     l3108:
  3232                           
  3233                           ;dc_motor.c: 187:     while (i>0) {
  3234   0014AC  5040               	movf	returnHome@i^0,w,c
  3235   0014AE  A4D8               	btfss	status,2,c
  3236   0014B0  EF5C  F00A         	goto	u1721
  3237   0014B4  EF5E  F00A         	goto	u1720
  3238   0014B8                     u1721:
  3239   0014B8  EFAA  F007         	goto	l3022
  3240   0014BC                     u1720:
  3241   0014BC  0012               	return		;funcret
  3242   0014BE                     __end_of_returnHome:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _lostReturnHome *****************
  3246 ;; Defined at:
  3247 ;;		line 259 in file "dc_motor.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  3250 ;;		 -> main@motorL(10), 
  3251 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  3252 ;;		 -> main@motorR(10), 
  3253 ;;  moveSequence    2   48[COMRAM] PTR unsigned char 
  3254 ;;		 -> main@moveSequence(40), 
  3255 ;;  straightTime    2   50[COMRAM] PTR unsigned int 
  3256 ;;		 -> main@straightTime(82), 
  3257 ;;  curMove         1   52[COMRAM] unsigned char 
  3258 ;;  straightSpee    1   53[COMRAM] unsigned char 
  3259 ;;  reverseDurat    1   54[COMRAM] unsigned char 
  3260 ;;  straightRamp    1   55[COMRAM] unsigned char 
  3261 ;;  turnSpeed       1   56[COMRAM] unsigned char 
  3262 ;;  turnDuration    1   57[COMRAM] unsigned char 
  3263 ;;  turnRamp        1   58[COMRAM] unsigned char 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  i               1   63[COMRAM] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3275 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3279 ;;Total ram usage:       20 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; Hardware stack levels required when called: 8
  3282 ;; This function calls:
  3283 ;;		_fullSpeedAhead
  3284 ;;		_get16bitTMR0val
  3285 ;;		_resetTimer
  3286 ;;		_reverseOneSquare
  3287 ;;		_stop
  3288 ;;		_turnLeft
  3289 ;;		_turnRight
  3290 ;; This function is called by:
  3291 ;;		_main
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text3
  3296   0014BE                     __ptext3:
  3297                           	callstack 0
  3298   0014BE                     _lostReturnHome:
  3299                           	callstack 22
  3300   0014BE                     
  3301                           ;dc_motor.c: 259: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned char rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 260: {;dc_motor.c: 261:     turnLeft(mL, mR, turnSpeed, 
      +                          turnDuration, turnRamp);
  3302   0014BE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3303   0014C2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3304   0014C6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3305   0014CA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3306   0014CE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3307   0014D2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3308   0014D6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3309   0014DA  ECA4  F019         	call	_turnLeft	;wreg free
  3310   0014DE                     
  3311                           ;dc_motor.c: 262:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3312   0014DE  0E05               	movlw	5
  3313   0014E0  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3314   0014E2  0E0F               	movlw	15
  3315   0014E4  6E3C               	movwf	??_lostReturnHome^0,c
  3316   0014E6  0EF1               	movlw	241
  3317   0014E8                     u3077:
  3318   0014E8  2EE8               	decfsz	wreg,f,c
  3319   0014EA  D7FE               	bra	u3077
  3320   0014EC  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3321   0014EE  D7FC               	bra	u3077
  3322   0014F0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3323   0014F2  D7FA               	bra	u3077
  3324   0014F4  0000               	nop	
  3325   0014F6                     
  3326                           ;dc_motor.c: 263:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3327   0014F6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3328   0014FA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3329   0014FE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3330   001502  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3331   001506  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3332   00150A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3333   00150E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3334   001512  ECA4  F019         	call	_turnLeft	;wreg free
  3335                           
  3336                           ;dc_motor.c: 264:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3337   001516  0E05               	movlw	5
  3338   001518  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3339   00151A  0E0F               	movlw	15
  3340   00151C  6E3C               	movwf	??_lostReturnHome^0,c
  3341   00151E  0EF1               	movlw	241
  3342   001520                     u3087:
  3343   001520  2EE8               	decfsz	wreg,f,c
  3344   001522  D7FE               	bra	u3087
  3345   001524  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3346   001526  D7FC               	bra	u3087
  3347   001528  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3348   00152A  D7FA               	bra	u3087
  3349   00152C  0000               	nop	
  3350   00152E                     
  3351                           ;dc_motor.c: 265:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3352   00152E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3353   001532  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3354   001536  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3355   00153A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3356   00153E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3357   001542  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3358   001546  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3359   00154A  ECA4  F019         	call	_turnLeft	;wreg free
  3360   00154E                     
  3361                           ;dc_motor.c: 266:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3362   00154E  0E05               	movlw	5
  3363   001550  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3364   001552  0E0F               	movlw	15
  3365   001554  6E3C               	movwf	??_lostReturnHome^0,c
  3366   001556  0EF1               	movlw	241
  3367   001558                     u3097:
  3368   001558  2EE8               	decfsz	wreg,f,c
  3369   00155A  D7FE               	bra	u3097
  3370   00155C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3371   00155E  D7FC               	bra	u3097
  3372   001560  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3373   001562  D7FA               	bra	u3097
  3374   001564  0000               	nop	
  3375                           
  3376                           ;dc_motor.c: 267:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3377   001566  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3378   00156A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3379   00156E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3380   001572  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3381   001576  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3382   00157A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3383   00157E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3384   001582  ECA4  F019         	call	_turnLeft	;wreg free
  3385   001586                     
  3386                           ;dc_motor.c: 268:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3387   001586  0E05               	movlw	5
  3388   001588  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3389   00158A  0E0F               	movlw	15
  3390   00158C  6E3C               	movwf	??_lostReturnHome^0,c
  3391   00158E  0EF1               	movlw	241
  3392   001590                     u3107:
  3393   001590  2EE8               	decfsz	wreg,f,c
  3394   001592  D7FE               	bra	u3107
  3395   001594  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3396   001596  D7FC               	bra	u3107
  3397   001598  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3398   00159A  D7FA               	bra	u3107
  3399   00159C  0000               	nop	
  3400   00159E                     
  3401                           ;dc_motor.c: 269:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3402   00159E  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  3403   0015A2  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  3404   0015A6  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  3405   0015AA  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  3406   0015AE  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  3407   0015B2  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  3408   0015B6  ECF3  F01C         	call	_fullSpeedAhead	;wreg free
  3409   0015BA                     
  3410                           ;dc_motor.c: 270:     resetTimer();
  3411   0015BA  ECBF  F020         	call	_resetTimer	;wreg free
  3412   0015BE                     
  3413                           ;dc_motor.c: 271:     lost = 0;
  3414   0015BE  0E00               	movlw	0
  3415   0015C0  0100               	movlb	0	; () banked
  3416   0015C2  6FB0               	movwf	_lost& (0+255),b
  3417   0015C4                     l3492:
  3418                           
  3419                           ; BSR set to: 0
  3420   0015C4  51B0               	movf	_lost& (0+255),w,b
  3421   0015C6  B4D8               	btfsc	status,2,c
  3422   0015C8  EFE8  F00A         	goto	u2111
  3423   0015CC  EFEA  F00A         	goto	u2110
  3424   0015D0                     u2111:
  3425   0015D0  EFE2  F00A         	goto	l3492
  3426   0015D4                     u2110:
  3427   0015D4                     
  3428                           ; BSR set to: 0
  3429                           ;dc_motor.c: 273:     stop(mL, mR, straightRamp);
  3430   0015D4  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  3431   0015D8  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  3432   0015DC  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  3433   0015E0  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  3434   0015E4  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  3435   0015E8  EC6F  F01C         	call	_stop	;wreg free
  3436   0015EC                     
  3437                           ;dc_motor.c: 275:     char i=curMove;
  3438   0015EC  C035  F040         	movff	lostReturnHome@curMove,lostReturnHome@i
  3439                           
  3440                           ;dc_motor.c: 276:     while (i>0) {
  3441   0015F0  EFA6  F00D         	goto	l3584
  3442   0015F4                     l3498:
  3443                           
  3444                           ;dc_motor.c: 277:         i--;
  3445   0015F4  0640               	decf	lostReturnHome@i^0,f,c
  3446   0015F6                     
  3447                           ;dc_motor.c: 279:         if (moveSequence[i] == 1) {
  3448   0015F6  5040               	movf	lostReturnHome@i^0,w,c
  3449   0015F8  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3450   0015FA  6ED9               	movwf	fsr2l,c
  3451   0015FC  0E00               	movlw	0
  3452   0015FE  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3453   001600  6EDA               	movwf	fsr2h,c
  3454   001602  04DE               	decf	postinc2,w,c
  3455   001604  A4D8               	btfss	status,2,c
  3456   001606  EF07  F00B         	goto	u2121
  3457   00160A  EF09  F00B         	goto	u2120
  3458   00160E                     u2121:
  3459   00160E  EF43  F00B         	goto	l3508
  3460   001612                     u2120:
  3461   001612                     
  3462                           ;dc_motor.c: 280:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3463   001612  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3464   001616  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3465   00161A  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3466   00161E  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3467   001622  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3468   001626  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3469   00162A  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3470   00162E  ECA4  F019         	call	_turnLeft	;wreg free
  3471   001632                     
  3472                           ;dc_motor.c: 281:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3473   001632  0E05               	movlw	5
  3474   001634  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3475   001636  0E0F               	movlw	15
  3476   001638  6E3C               	movwf	??_lostReturnHome^0,c
  3477   00163A  0EF1               	movlw	241
  3478   00163C                     u3117:
  3479   00163C  2EE8               	decfsz	wreg,f,c
  3480   00163E  D7FE               	bra	u3117
  3481   001640  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3482   001642  D7FC               	bra	u3117
  3483   001644  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3484   001646  D7FA               	bra	u3117
  3485   001648  0000               	nop	
  3486   00164A                     
  3487                           ;dc_motor.c: 282:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3488   00164A  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3489   00164E  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3490   001652  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3491   001656  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3492   00165A  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3493   00165E  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3494   001662  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3495   001666  ECA4  F019         	call	_turnLeft	;wreg free
  3496                           
  3497                           ;dc_motor.c: 283:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3498   00166A  0E05               	movlw	5
  3499   00166C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3500   00166E  0E0F               	movlw	15
  3501   001670  6E3C               	movwf	??_lostReturnHome^0,c
  3502   001672  0EF1               	movlw	241
  3503   001674                     u3127:
  3504   001674  2EE8               	decfsz	wreg,f,c
  3505   001676  D7FE               	bra	u3127
  3506   001678  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3507   00167A  D7FC               	bra	u3127
  3508   00167C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3509   00167E  D7FA               	bra	u3127
  3510   001680  0000               	nop	
  3511                           
  3512                           ;dc_motor.c: 284:         }
  3513   001682  EF71  F00D         	goto	l554
  3514   001686                     l3508:
  3515   001686  5040               	movf	lostReturnHome@i^0,w,c
  3516   001688  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3517   00168A  6ED9               	movwf	fsr2l,c
  3518   00168C  0E00               	movlw	0
  3519   00168E  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3520   001690  6EDA               	movwf	fsr2h,c
  3521   001692  0E02               	movlw	2
  3522   001694  18DE               	xorwf	postinc2,w,c
  3523   001696  A4D8               	btfss	status,2,c
  3524   001698  EF50  F00B         	goto	u2131
  3525   00169C  EF52  F00B         	goto	u2130
  3526   0016A0                     u2131:
  3527   0016A0  EF8C  F00B         	goto	l3516
  3528   0016A4                     u2130:
  3529   0016A4                     
  3530                           ;dc_motor.c: 287:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3531   0016A4  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3532   0016A8  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3533   0016AC  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3534   0016B0  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3535   0016B4  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3536   0016B8  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3537   0016BC  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3538   0016C0  ECBA  F018         	call	_turnRight	;wreg free
  3539   0016C4                     
  3540                           ;dc_motor.c: 288:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3541   0016C4  0E05               	movlw	5
  3542   0016C6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3543   0016C8  0E0F               	movlw	15
  3544   0016CA  6E3C               	movwf	??_lostReturnHome^0,c
  3545   0016CC  0EF1               	movlw	241
  3546   0016CE                     u3137:
  3547   0016CE  2EE8               	decfsz	wreg,f,c
  3548   0016D0  D7FE               	bra	u3137
  3549   0016D2  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3550   0016D4  D7FC               	bra	u3137
  3551   0016D6  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3552   0016D8  D7FA               	bra	u3137
  3553   0016DA  0000               	nop	
  3554   0016DC                     
  3555                           ;dc_motor.c: 289:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3556   0016DC  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3557   0016E0  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3558   0016E4  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3559   0016E8  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3560   0016EC  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3561   0016F0  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3562   0016F4  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3563   0016F8  ECBA  F018         	call	_turnRight	;wreg free
  3564                           
  3565                           ;dc_motor.c: 290:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3566   0016FC  0E05               	movlw	5
  3567   0016FE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3568   001700  0E0F               	movlw	15
  3569   001702  6E3C               	movwf	??_lostReturnHome^0,c
  3570   001704  0EF1               	movlw	241
  3571   001706                     u3147:
  3572   001706  2EE8               	decfsz	wreg,f,c
  3573   001708  D7FE               	bra	u3147
  3574   00170A  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3575   00170C  D7FC               	bra	u3147
  3576   00170E  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3577   001710  D7FA               	bra	u3147
  3578   001712  0000               	nop	
  3579                           
  3580                           ;dc_motor.c: 291:         }
  3581   001714  EF71  F00D         	goto	l554
  3582   001718                     l3516:
  3583   001718  5040               	movf	lostReturnHome@i^0,w,c
  3584   00171A  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3585   00171C  6ED9               	movwf	fsr2l,c
  3586   00171E  0E00               	movlw	0
  3587   001720  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3588   001722  6EDA               	movwf	fsr2h,c
  3589   001724  0E03               	movlw	3
  3590   001726  18DE               	xorwf	postinc2,w,c
  3591   001728  A4D8               	btfss	status,2,c
  3592   00172A  EF99  F00B         	goto	u2141
  3593   00172E  EF9B  F00B         	goto	u2140
  3594   001732                     u2141:
  3595   001732  EF0D  F00C         	goto	l3530
  3596   001736                     u2140:
  3597   001736                     
  3598                           ;dc_motor.c: 294:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3599   001736  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3600   00173A  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3601   00173E  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3602   001742  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3603   001746  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3604   00174A  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3605   00174E  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3606   001752  ECA4  F019         	call	_turnLeft	;wreg free
  3607   001756                     
  3608                           ;dc_motor.c: 295:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3609   001756  0E05               	movlw	5
  3610   001758  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3611   00175A  0E0F               	movlw	15
  3612   00175C  6E3C               	movwf	??_lostReturnHome^0,c
  3613   00175E  0EF1               	movlw	241
  3614   001760                     u3157:
  3615   001760  2EE8               	decfsz	wreg,f,c
  3616   001762  D7FE               	bra	u3157
  3617   001764  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3618   001766  D7FC               	bra	u3157
  3619   001768  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3620   00176A  D7FA               	bra	u3157
  3621   00176C  0000               	nop	
  3622   00176E                     
  3623                           ;dc_motor.c: 296:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3624   00176E  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3625   001772  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3626   001776  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3627   00177A  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3628   00177E  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3629   001782  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3630   001786  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3631   00178A  ECA4  F019         	call	_turnLeft	;wreg free
  3632                           
  3633                           ;dc_motor.c: 297:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3634   00178E  0E05               	movlw	5
  3635   001790  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3636   001792  0E0F               	movlw	15
  3637   001794  6E3C               	movwf	??_lostReturnHome^0,c
  3638   001796  0EF1               	movlw	241
  3639   001798                     u3167:
  3640   001798  2EE8               	decfsz	wreg,f,c
  3641   00179A  D7FE               	bra	u3167
  3642   00179C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3643   00179E  D7FC               	bra	u3167
  3644   0017A0  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3645   0017A2  D7FA               	bra	u3167
  3646   0017A4  0000               	nop	
  3647   0017A6                     
  3648                           ;dc_motor.c: 298:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3649   0017A6  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3650   0017AA  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3651   0017AE  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3652   0017B2  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3653   0017B6  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3654   0017BA  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3655   0017BE  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3656   0017C2  ECA4  F019         	call	_turnLeft	;wreg free
  3657   0017C6                     
  3658                           ;dc_motor.c: 299:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3659   0017C6  0E05               	movlw	5
  3660   0017C8  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3661   0017CA  0E0F               	movlw	15
  3662   0017CC  6E3C               	movwf	??_lostReturnHome^0,c
  3663   0017CE  0EF1               	movlw	241
  3664   0017D0                     u3177:
  3665   0017D0  2EE8               	decfsz	wreg,f,c
  3666   0017D2  D7FE               	bra	u3177
  3667   0017D4  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3668   0017D6  D7FC               	bra	u3177
  3669   0017D8  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3670   0017DA  D7FA               	bra	u3177
  3671   0017DC  0000               	nop	
  3672                           
  3673                           ;dc_motor.c: 300:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3674   0017DE  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3675   0017E2  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3676   0017E6  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3677   0017EA  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3678   0017EE  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3679   0017F2  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3680   0017F6  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3681   0017FA  ECA4  F019         	call	_turnLeft	;wreg free
  3682   0017FE                     l3528:
  3683                           
  3684                           ;dc_motor.c: 301:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3685   0017FE  0E05               	movlw	5
  3686   001800  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3687   001802  0E0F               	movlw	15
  3688   001804  6E3C               	movwf	??_lostReturnHome^0,c
  3689   001806  0EF1               	movlw	241
  3690   001808                     u3187:
  3691   001808  2EE8               	decfsz	wreg,f,c
  3692   00180A  D7FE               	bra	u3187
  3693   00180C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3694   00180E  D7FC               	bra	u3187
  3695   001810  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3696   001812  D7FA               	bra	u3187
  3697   001814  0000               	nop	
  3698                           
  3699                           ;dc_motor.c: 302:         }
  3700   001816  EF71  F00D         	goto	l554
  3701   00181A                     l3530:
  3702   00181A  5040               	movf	lostReturnHome@i^0,w,c
  3703   00181C  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3704   00181E  6ED9               	movwf	fsr2l,c
  3705   001820  0E00               	movlw	0
  3706   001822  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3707   001824  6EDA               	movwf	fsr2h,c
  3708   001826  0E04               	movlw	4
  3709   001828  18DE               	xorwf	postinc2,w,c
  3710   00182A  A4D8               	btfss	status,2,c
  3711   00182C  EF1A  F00C         	goto	u2151
  3712   001830  EF1C  F00C         	goto	u2150
  3713   001834                     u2151:
  3714   001834  EF66  F00C         	goto	l3542
  3715   001838                     u2150:
  3716   001838                     
  3717                           ;dc_motor.c: 305:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3718   001838  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3719   00183C  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3720   001840  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3721   001844  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3722   001848  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3723   00184C  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3724   001850  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3725   001854  ECA4  F019         	call	_turnLeft	;wreg free
  3726   001858                     
  3727                           ;dc_motor.c: 306:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3728   001858  0E05               	movlw	5
  3729   00185A  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3730   00185C  0E0F               	movlw	15
  3731   00185E  6E3C               	movwf	??_lostReturnHome^0,c
  3732   001860  0EF1               	movlw	241
  3733   001862                     u3197:
  3734   001862  2EE8               	decfsz	wreg,f,c
  3735   001864  D7FE               	bra	u3197
  3736   001866  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3737   001868  D7FC               	bra	u3197
  3738   00186A  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3739   00186C  D7FA               	bra	u3197
  3740   00186E  0000               	nop	
  3741   001870                     
  3742                           ;dc_motor.c: 307:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3743   001870  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3744   001874  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3745   001878  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3746   00187C  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3747   001880  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3748   001884  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3749   001888  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3750   00188C  ECA4  F019         	call	_turnLeft	;wreg free
  3751                           
  3752                           ;dc_motor.c: 308:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3753   001890  0E05               	movlw	5
  3754   001892  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3755   001894  0E0F               	movlw	15
  3756   001896  6E3C               	movwf	??_lostReturnHome^0,c
  3757   001898  0EF1               	movlw	241
  3758   00189A                     u3207:
  3759   00189A  2EE8               	decfsz	wreg,f,c
  3760   00189C  D7FE               	bra	u3207
  3761   00189E  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3762   0018A0  D7FC               	bra	u3207
  3763   0018A2  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3764   0018A4  D7FA               	bra	u3207
  3765   0018A6  0000               	nop	
  3766   0018A8                     
  3767                           ;dc_motor.c: 309:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3768   0018A8  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3769   0018AC  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3770   0018B0  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3771   0018B4  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3772   0018B8  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3773   0018BC  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3774   0018C0  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3775   0018C4  ECC7  F017         	call	_reverseOneSquare	;wreg free
  3776   0018C8  EFFF  F00B         	goto	l3528
  3777   0018CC                     l3542:
  3778   0018CC  5040               	movf	lostReturnHome@i^0,w,c
  3779   0018CE  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3780   0018D0  6ED9               	movwf	fsr2l,c
  3781   0018D2  0E00               	movlw	0
  3782   0018D4  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3783   0018D6  6EDA               	movwf	fsr2h,c
  3784   0018D8  0E05               	movlw	5
  3785   0018DA  18DE               	xorwf	postinc2,w,c
  3786   0018DC  A4D8               	btfss	status,2,c
  3787   0018DE  EF73  F00C         	goto	u2161
  3788   0018E2  EF75  F00C         	goto	u2160
  3789   0018E6                     u2161:
  3790   0018E6  EFBF  F00C         	goto	l3554
  3791   0018EA                     u2160:
  3792   0018EA                     
  3793                           ;dc_motor.c: 314:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3794   0018EA  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3795   0018EE  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3796   0018F2  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3797   0018F6  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3798   0018FA  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3799   0018FE  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3800   001902  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3801   001906  ECBA  F018         	call	_turnRight	;wreg free
  3802   00190A                     
  3803                           ;dc_motor.c: 315:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3804   00190A  0E05               	movlw	5
  3805   00190C  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3806   00190E  0E0F               	movlw	15
  3807   001910  6E3C               	movwf	??_lostReturnHome^0,c
  3808   001912  0EF1               	movlw	241
  3809   001914                     u3217:
  3810   001914  2EE8               	decfsz	wreg,f,c
  3811   001916  D7FE               	bra	u3217
  3812   001918  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3813   00191A  D7FC               	bra	u3217
  3814   00191C  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3815   00191E  D7FA               	bra	u3217
  3816   001920  0000               	nop	
  3817   001922                     
  3818                           ;dc_motor.c: 316:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3819   001922  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3820   001926  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3821   00192A  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3822   00192E  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3823   001932  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3824   001936  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3825   00193A  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3826   00193E  ECBA  F018         	call	_turnRight	;wreg free
  3827                           
  3828                           ;dc_motor.c: 317:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3829   001942  0E05               	movlw	5
  3830   001944  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3831   001946  0E0F               	movlw	15
  3832   001948  6E3C               	movwf	??_lostReturnHome^0,c
  3833   00194A  0EF1               	movlw	241
  3834   00194C                     u3227:
  3835   00194C  2EE8               	decfsz	wreg,f,c
  3836   00194E  D7FE               	bra	u3227
  3837   001950  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3838   001952  D7FC               	bra	u3227
  3839   001954  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3840   001956  D7FA               	bra	u3227
  3841   001958  0000               	nop	
  3842   00195A                     
  3843                           ;dc_motor.c: 318:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  3844   00195A  C02D  F01F         	movff	lostReturnHome@mL,reverseOneSquare@mL
  3845   00195E  C02E  F020         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  3846   001962  C02F  F021         	movff	lostReturnHome@mR,reverseOneSquare@mR
  3847   001966  C030  F022         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  3848   00196A  C036  F023         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  3849   00196E  C037  F024         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  3850   001972  C038  F025         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  3851   001976  ECC7  F017         	call	_reverseOneSquare	;wreg free
  3852   00197A  EFFF  F00B         	goto	l3528
  3853   00197E                     l3554:
  3854   00197E  5040               	movf	lostReturnHome@i^0,w,c
  3855   001980  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3856   001982  6ED9               	movwf	fsr2l,c
  3857   001984  0E00               	movlw	0
  3858   001986  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3859   001988  6EDA               	movwf	fsr2h,c
  3860   00198A  0E06               	movlw	6
  3861   00198C  18DE               	xorwf	postinc2,w,c
  3862   00198E  A4D8               	btfss	status,2,c
  3863   001990  EFCC  F00C         	goto	u2171
  3864   001994  EFCE  F00C         	goto	u2170
  3865   001998                     u2171:
  3866   001998  EF18  F00D         	goto	l3566
  3867   00199C                     u2170:
  3868   00199C                     
  3869                           ;dc_motor.c: 323:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3870   00199C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3871   0019A0  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3872   0019A4  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3873   0019A8  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3874   0019AC  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3875   0019B0  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3876   0019B4  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3877   0019B8  ECA4  F019         	call	_turnLeft	;wreg free
  3878   0019BC                     
  3879                           ;dc_motor.c: 324:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3880   0019BC  0E05               	movlw	5
  3881   0019BE  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3882   0019C0  0E0F               	movlw	15
  3883   0019C2  6E3C               	movwf	??_lostReturnHome^0,c
  3884   0019C4  0EF1               	movlw	241
  3885   0019C6                     u3237:
  3886   0019C6  2EE8               	decfsz	wreg,f,c
  3887   0019C8  D7FE               	bra	u3237
  3888   0019CA  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3889   0019CC  D7FC               	bra	u3237
  3890   0019CE  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3891   0019D0  D7FA               	bra	u3237
  3892   0019D2  0000               	nop	
  3893   0019D4                     
  3894                           ;dc_motor.c: 325:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3895   0019D4  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3896   0019D8  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3897   0019DC  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3898   0019E0  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3899   0019E4  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3900   0019E8  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3901   0019EC  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3902   0019F0  ECA4  F019         	call	_turnLeft	;wreg free
  3903                           
  3904                           ;dc_motor.c: 326:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3905   0019F4  0E05               	movlw	5
  3906   0019F6  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3907   0019F8  0E0F               	movlw	15
  3908   0019FA  6E3C               	movwf	??_lostReturnHome^0,c
  3909   0019FC  0EF1               	movlw	241
  3910   0019FE                     u3247:
  3911   0019FE  2EE8               	decfsz	wreg,f,c
  3912   001A00  D7FE               	bra	u3247
  3913   001A02  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3914   001A04  D7FC               	bra	u3247
  3915   001A06  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3916   001A08  D7FA               	bra	u3247
  3917   001A0A  0000               	nop	
  3918   001A0C                     
  3919                           ;dc_motor.c: 327:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3920   001A0C  C02D  F01F         	movff	lostReturnHome@mL,turnLeft@mL
  3921   001A10  C02E  F020         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  3922   001A14  C02F  F021         	movff	lostReturnHome@mR,turnLeft@mR
  3923   001A18  C030  F022         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  3924   001A1C  C039  F023         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  3925   001A20  C03A  F024         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  3926   001A24  C03B  F025         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  3927   001A28  ECA4  F019         	call	_turnLeft	;wreg free
  3928   001A2C  EFFF  F00B         	goto	l3528
  3929   001A30                     l3566:
  3930   001A30  5040               	movf	lostReturnHome@i^0,w,c
  3931   001A32  2431               	addwf	lostReturnHome@moveSequence^0,w,c
  3932   001A34  6ED9               	movwf	fsr2l,c
  3933   001A36  0E00               	movlw	0
  3934   001A38  2032               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  3935   001A3A  6EDA               	movwf	fsr2h,c
  3936   001A3C  0E07               	movlw	7
  3937   001A3E  18DE               	xorwf	postinc2,w,c
  3938   001A40  A4D8               	btfss	status,2,c
  3939   001A42  EF25  F00D         	goto	u2181
  3940   001A46  EF27  F00D         	goto	u2180
  3941   001A4A                     u2181:
  3942   001A4A  EF71  F00D         	goto	l560
  3943   001A4E                     u2180:
  3944   001A4E                     
  3945                           ;dc_motor.c: 332:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3946   001A4E  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3947   001A52  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3948   001A56  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3949   001A5A  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3950   001A5E  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3951   001A62  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3952   001A66  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3953   001A6A  ECBA  F018         	call	_turnRight	;wreg free
  3954   001A6E                     
  3955                           ;dc_motor.c: 333:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3956   001A6E  0E05               	movlw	5
  3957   001A70  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3958   001A72  0E0F               	movlw	15
  3959   001A74  6E3C               	movwf	??_lostReturnHome^0,c
  3960   001A76  0EF1               	movlw	241
  3961   001A78                     u3257:
  3962   001A78  2EE8               	decfsz	wreg,f,c
  3963   001A7A  D7FE               	bra	u3257
  3964   001A7C  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3965   001A7E  D7FC               	bra	u3257
  3966   001A80  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3967   001A82  D7FA               	bra	u3257
  3968   001A84  0000               	nop	
  3969   001A86                     
  3970                           ;dc_motor.c: 334:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3971   001A86  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3972   001A8A  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3973   001A8E  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3974   001A92  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  3975   001A96  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  3976   001A9A  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  3977   001A9E  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  3978   001AA2  ECBA  F018         	call	_turnRight	;wreg free
  3979                           
  3980                           ;dc_motor.c: 335:             _delay((unsigned long)((50)*(64000000/4000.0)));
  3981   001AA6  0E05               	movlw	5
  3982   001AA8  6E3D               	movwf	(??_lostReturnHome+1)^0,c
  3983   001AAA  0E0F               	movlw	15
  3984   001AAC  6E3C               	movwf	??_lostReturnHome^0,c
  3985   001AAE  0EF1               	movlw	241
  3986   001AB0                     u3267:
  3987   001AB0  2EE8               	decfsz	wreg,f,c
  3988   001AB2  D7FE               	bra	u3267
  3989   001AB4  2E3C               	decfsz	??_lostReturnHome^0,f,c
  3990   001AB6  D7FC               	bra	u3267
  3991   001AB8  2E3D               	decfsz	(??_lostReturnHome+1)^0,f,c
  3992   001ABA  D7FA               	bra	u3267
  3993   001ABC  0000               	nop	
  3994   001ABE                     
  3995                           ;dc_motor.c: 336:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3996   001ABE  C02D  F01F         	movff	lostReturnHome@mL,turnRight@mL
  3997   001AC2  C02E  F020         	movff	lostReturnHome@mL+1,turnRight@mL+1
  3998   001AC6  C02F  F021         	movff	lostReturnHome@mR,turnRight@mR
  3999   001ACA  C030  F022         	movff	lostReturnHome@mR+1,turnRight@mR+1
  4000   001ACE  C039  F023         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  4001   001AD2  C03A  F024         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  4002   001AD6  C03B  F025         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  4003   001ADA  ECBA  F018         	call	_turnRight	;wreg free
  4004   001ADE  EFFF  F00B         	goto	l3528
  4005   001AE2                     l560:
  4006   001AE2                     l554:
  4007                           
  4008                           ;dc_motor.c: 340:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4009   001AE2  C02D  F01F         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4010   001AE6  C02E  F020         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4011   001AEA  C02F  F021         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4012   001AEE  C030  F022         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4013   001AF2  C036  F023         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4014   001AF6  C038  F024         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4015   001AFA  ECF3  F01C         	call	_fullSpeedAhead	;wreg free
  4016   001AFE                     
  4017                           ;dc_motor.c: 341:         resetTimer();
  4018   001AFE  ECBF  F020         	call	_resetTimer	;wreg free
  4019   001B02                     l3580:
  4020   001B02  5040               	movf	lostReturnHome@i^0,w,c
  4021   001B04  0D02               	mullw	2
  4022   001B06  CFF3 F03C          	movff	prodl,??_lostReturnHome
  4023   001B0A  CFF4 F03D          	movff	prodh,??_lostReturnHome+1
  4024   001B0E  503C               	movf	??_lostReturnHome^0,w,c
  4025   001B10  2433               	addwf	lostReturnHome@straightTime^0,w,c
  4026   001B12  6ED9               	movwf	fsr2l,c
  4027   001B14  503D               	movf	(??_lostReturnHome+1)^0,w,c
  4028   001B16  2034               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  4029   001B18  6EDA               	movwf	fsr2h,c
  4030   001B1A  ECBD  F01F         	call	_get16bitTMR0val	;wreg free
  4031   001B1E  50DE               	movf	postinc2,w,c
  4032   001B20  5C0C               	subwf	?_get16bitTMR0val^0,w,c
  4033   001B22  50DE               	movf	postinc2,w,c
  4034   001B24  580D               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4035   001B26  A0D8               	btfss	status,0,c
  4036   001B28  EF98  F00D         	goto	u2191
  4037   001B2C  EF9A  F00D         	goto	u2190
  4038   001B30                     u2191:
  4039   001B30  EF81  F00D         	goto	l3580
  4040   001B34                     u2190:
  4041   001B34                     
  4042                           ;dc_motor.c: 343:         stop(mL, mR, straightRamp);
  4043   001B34  C02D  F01F         	movff	lostReturnHome@mL,stop@mL
  4044   001B38  C02E  F020         	movff	lostReturnHome@mL+1,stop@mL+1
  4045   001B3C  C02F  F021         	movff	lostReturnHome@mR,stop@mR
  4046   001B40  C030  F022         	movff	lostReturnHome@mR+1,stop@mR+1
  4047   001B44  C038  F023         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4048   001B48  EC6F  F01C         	call	_stop	;wreg free
  4049   001B4C                     l3584:
  4050                           
  4051                           ;dc_motor.c: 276:     while (i>0) {
  4052   001B4C  5040               	movf	lostReturnHome@i^0,w,c
  4053   001B4E  A4D8               	btfss	status,2,c
  4054   001B50  EFAC  F00D         	goto	u2201
  4055   001B54  EFAE  F00D         	goto	u2200
  4056   001B58                     u2201:
  4057   001B58  EFFA  F00A         	goto	l3498
  4058   001B5C                     u2200:
  4059   001B5C  0012               	return		;funcret
  4060   001B5E                     __end_of_lostReturnHome:
  4061                           	callstack 0
  4062                           
  4063 ;; *************** function _stop *****************
  4064 ;; Defined at:
  4065 ;;		line 348 in file "dc_motor.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4068 ;;		 -> main@motorL(10), 
  4069 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4070 ;;		 -> main@motorR(10), 
  4071 ;;  straightRamp    1   34[COMRAM] unsigned char 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  cur_power       2   40[COMRAM] int 
  4074 ;;  i               2   38[COMRAM] int 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      void 
  4077 ;; Registers used:
  4078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4084 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4085 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4086 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4087 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4088 ;;Total ram usage:       12 bytes
  4089 ;; Hardware stack levels used: 1
  4090 ;; Hardware stack levels required when called: 7
  4091 ;; This function calls:
  4092 ;;		_setMotorPWM
  4093 ;; This function is called by:
  4094 ;;		_main
  4095 ;;		_returnHome
  4096 ;;		_lostReturnHome
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text4
  4101   0038DE                     __ptext4:
  4102                           	callstack 0
  4103   0038DE                     _stop:
  4104                           	callstack 23
  4105   0038DE                     
  4106                           ;dc_motor.c: 348: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 349: {;dc_motor.c: 350:     mL->direction = 1;
  4107   0038DE  EE20 F001          	lfsr	2,1
  4108   0038E2  501F               	movf	stop@mL^0,w,c
  4109   0038E4  26D9               	addwf	fsr2l,f,c
  4110   0038E6  5020               	movf	(stop@mL+1)^0,w,c
  4111   0038E8  22DA               	addwfc	fsr2h,f,c
  4112   0038EA  0E01               	movlw	1
  4113   0038EC  6EDF               	movwf	indf2,c
  4114                           
  4115                           ;dc_motor.c: 351:     mR->direction = 1;
  4116   0038EE  EE20 F001          	lfsr	2,1
  4117   0038F2  5021               	movf	stop@mR^0,w,c
  4118   0038F4  26D9               	addwf	fsr2l,f,c
  4119   0038F6  5022               	movf	(stop@mR+1)^0,w,c
  4120   0038F8  22DA               	addwfc	fsr2h,f,c
  4121   0038FA  0E01               	movlw	1
  4122   0038FC  6EDF               	movwf	indf2,c
  4123                           
  4124                           ;dc_motor.c: 352:     int i;;dc_motor.c: 353:     int cur_power;;dc_motor.c: 354:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  4125   0038FE  C01F  FFD9         	movff	stop@mL,fsr2l
  4126   003902  C020  FFDA         	movff	stop@mL+1,fsr2h
  4127   003906  50DF               	movf	indf2,w,c
  4128   003908  6E24               	movwf	??_stop^0,c
  4129   00390A  EE20 F009          	lfsr	2,9
  4130   00390E  501F               	movf	stop@mL^0,w,c
  4131   003910  26D9               	addwf	fsr2l,f,c
  4132   003912  5020               	movf	(stop@mL+1)^0,w,c
  4133   003914  22DA               	addwfc	fsr2h,f,c
  4134   003916  50DF               	movf	indf2,w,c
  4135   003918  6E25               	movwf	(??_stop+1)^0,c
  4136   00391A  5025               	movf	(??_stop+1)^0,w,c
  4137   00391C  5C24               	subwf	??_stop^0,w,c
  4138   00391E  6E29               	movwf	stop@cur_power^0,c
  4139   003920  6A2A               	clrf	(stop@cur_power+1)^0,c
  4140   003922  A0D8               	btfss	status,0,c
  4141   003924  062A               	decf	(stop@cur_power+1)^0,f,c
  4142   003926                     l2676:
  4143   003926  BE2A               	btfsc	(stop@cur_power+1)^0,7,c
  4144   003928  EF9A  F01C         	goto	u1340
  4145   00392C  EF98  F01C         	goto	u1341
  4146   003930                     u1341:
  4147   003930  EF9C  F01C         	goto	l2680
  4148   003934                     u1340:
  4149   003934  EFE8  F01C         	goto	l2696
  4150   003938                     l2680:
  4151                           
  4152                           ;dc_motor.c: 355:         mL->power = cur_power+mL->compensation;
  4153   003938  EE20 F009          	lfsr	2,9
  4154   00393C  501F               	movf	stop@mL^0,w,c
  4155   00393E  26D9               	addwf	fsr2l,f,c
  4156   003940  5020               	movf	(stop@mL+1)^0,w,c
  4157   003942  22DA               	addwfc	fsr2h,f,c
  4158   003944  50DF               	movf	indf2,w,c
  4159   003946  2429               	addwf	stop@cur_power^0,w,c
  4160   003948  C01F  FFD9         	movff	stop@mL,fsr2l
  4161   00394C  C020  FFDA         	movff	stop@mL+1,fsr2h
  4162   003950  6EDF               	movwf	indf2,c
  4163                           
  4164                           ;dc_motor.c: 356:         mR->power = cur_power+mR->compensation;
  4165   003952  EE20 F009          	lfsr	2,9
  4166   003956  5021               	movf	stop@mR^0,w,c
  4167   003958  26D9               	addwf	fsr2l,f,c
  4168   00395A  5022               	movf	(stop@mR+1)^0,w,c
  4169   00395C  22DA               	addwfc	fsr2h,f,c
  4170   00395E  50DF               	movf	indf2,w,c
  4171   003960  2429               	addwf	stop@cur_power^0,w,c
  4172   003962  C021  FFD9         	movff	stop@mR,fsr2l
  4173   003966  C022  FFDA         	movff	stop@mR+1,fsr2h
  4174   00396A  6EDF               	movwf	indf2,c
  4175   00396C                     
  4176                           ;dc_motor.c: 357:         setMotorPWM(mL);
  4177   00396C  C01F  F019         	movff	stop@mL,setMotorPWM@m
  4178   003970  C020  F01A         	movff	stop@mL+1,setMotorPWM@m+1
  4179   003974  EC8E  F01A         	call	_setMotorPWM	;wreg free
  4180   003978                     
  4181                           ;dc_motor.c: 358:         setMotorPWM(mR);
  4182   003978  C021  F019         	movff	stop@mR,setMotorPWM@m
  4183   00397C  C022  F01A         	movff	stop@mR+1,setMotorPWM@m+1
  4184   003980  EC8E  F01A         	call	_setMotorPWM	;wreg free
  4185   003984                     
  4186                           ;dc_motor.c: 359:         for (i=0;i<straightRamp;i++) {
  4187   003984  0E00               	movlw	0
  4188   003986  6E28               	movwf	(stop@i+1)^0,c
  4189   003988  0E00               	movlw	0
  4190   00398A  6E27               	movwf	stop@i^0,c
  4191   00398C  EFD1  F01C         	goto	l575
  4192   003990                     l2688:
  4193                           
  4194                           ;dc_motor.c: 360:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4195   003990  0ED0               	movlw	208
  4196   003992  6E24               	movwf	??_stop^0,c
  4197   003994  0ECA               	movlw	202
  4198   003996                     u3277:
  4199   003996  2EE8               	decfsz	wreg,f,c
  4200   003998  D7FE               	bra	u3277
  4201   00399A  2E24               	decfsz	??_stop^0,f,c
  4202   00399C  D7FC               	bra	u3277
  4203   00399E                     
  4204                           ;dc_motor.c: 361:         }
  4205   00399E  4A27               	infsnz	stop@i^0,f,c
  4206   0039A0  2A28               	incf	(stop@i+1)^0,f,c
  4207   0039A2                     l575:
  4208   0039A2  5023               	movf	stop@straightRamp^0,w,c
  4209   0039A4  6E24               	movwf	??_stop^0,c
  4210   0039A6  6A25               	clrf	(??_stop+1)^0,c
  4211   0039A8  5024               	movf	??_stop^0,w,c
  4212   0039AA  5C27               	subwf	stop@i^0,w,c
  4213   0039AC  5028               	movf	(stop@i+1)^0,w,c
  4214   0039AE  0A80               	xorlw	128
  4215   0039B0  6E26               	movwf	(??_stop+2)^0,c
  4216   0039B2  5025               	movf	(??_stop+1)^0,w,c
  4217   0039B4  0A80               	xorlw	128
  4218   0039B6  5826               	subwfb	(??_stop+2)^0,w,c
  4219   0039B8  A0D8               	btfss	status,0,c
  4220   0039BA  EFE1  F01C         	goto	u1351
  4221   0039BE  EFE3  F01C         	goto	u1350
  4222   0039C2                     u1351:
  4223   0039C2  EFC8  F01C         	goto	l2688
  4224   0039C6                     u1350:
  4225   0039C6                     
  4226                           ;dc_motor.c: 362:     }
  4227   0039C6  0629               	decf	stop@cur_power^0,f,c
  4228   0039C8  A0D8               	btfss	status,0,c
  4229   0039CA  062A               	decf	(stop@cur_power+1)^0,f,c
  4230   0039CC  EF93  F01C         	goto	l2676
  4231   0039D0                     l2696:
  4232                           
  4233                           ;dc_motor.c: 363:     mL->power = 0;
  4234   0039D0  C01F  FFD9         	movff	stop@mL,fsr2l
  4235   0039D4  C020  FFDA         	movff	stop@mL+1,fsr2h
  4236   0039D8  6ADF               	clrf	indf2,c
  4237                           
  4238                           ;dc_motor.c: 364:     mR->power = 0;
  4239   0039DA  C021  FFD9         	movff	stop@mR,fsr2l
  4240   0039DE  C022  FFDA         	movff	stop@mR+1,fsr2h
  4241   0039E2  6ADF               	clrf	indf2,c
  4242   0039E4  0012               	return		;funcret
  4243   0039E6                     __end_of_stop:
  4244                           	callstack 0
  4245                           
  4246 ;; *************** function _reverseOneSquare *****************
  4247 ;; Defined at:
  4248 ;;		line 449 in file "dc_motor.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4251 ;;		 -> main@motorL(10), 
  4252 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4253 ;;		 -> main@motorR(10), 
  4254 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4255 ;;  reverseDurat    1   35[COMRAM] unsigned char 
  4256 ;;  straightRamp    1   36[COMRAM] unsigned char 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  cur_power       2   42[COMRAM] int 
  4259 ;;  i               2   40[COMRAM] int 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4269 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4272 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4273 ;;Total ram usage:       14 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; Hardware stack levels required when called: 7
  4276 ;; This function calls:
  4277 ;;		_setMotorPWM
  4278 ;; This function is called by:
  4279 ;;		_move
  4280 ;;		_returnHome
  4281 ;;		_lostReturnHome
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text5
  4286   002F8E                     __ptext5:
  4287                           	callstack 0
  4288   002F8E                     _reverseOneSquare:
  4289                           	callstack 22
  4290   002F8E                     
  4291                           ;dc_motor.c: 449: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned char reverseDuration, unsigned char straightRamp);dc_motor.c: 450: {;dc_motor.c
      +                          : 451:     mL->direction = 0;
  4292   002F8E  EE20 F001          	lfsr	2,1
  4293   002F92  501F               	movf	reverseOneSquare@mL^0,w,c
  4294   002F94  26D9               	addwf	fsr2l,f,c
  4295   002F96  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4296   002F98  22DA               	addwfc	fsr2h,f,c
  4297   002F9A  6ADF               	clrf	indf2,c
  4298                           
  4299                           ;dc_motor.c: 452:     mR->direction = 0;
  4300   002F9C  EE20 F001          	lfsr	2,1
  4301   002FA0  5021               	movf	reverseOneSquare@mR^0,w,c
  4302   002FA2  26D9               	addwf	fsr2l,f,c
  4303   002FA4  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4304   002FA6  22DA               	addwfc	fsr2h,f,c
  4305   002FA8  6ADF               	clrf	indf2,c
  4306   002FAA                     
  4307                           ;dc_motor.c: 453:     int i;;dc_motor.c: 454:     int cur_power;;dc_motor.c: 455:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4308   002FAA  0E00               	movlw	0
  4309   002FAC  6E2C               	movwf	(reverseOneSquare@cur_power+1)^0,c
  4310   002FAE  0E01               	movlw	1
  4311   002FB0  6E2B               	movwf	reverseOneSquare@cur_power^0,c
  4312   002FB2  EF24  F018         	goto	l2828
  4313   002FB6                     l2814:
  4314                           
  4315                           ;dc_motor.c: 456:         mL->power = cur_power+mL->compensation;
  4316   002FB6  EE20 F009          	lfsr	2,9
  4317   002FBA  501F               	movf	reverseOneSquare@mL^0,w,c
  4318   002FBC  26D9               	addwf	fsr2l,f,c
  4319   002FBE  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4320   002FC0  22DA               	addwfc	fsr2h,f,c
  4321   002FC2  50DF               	movf	indf2,w,c
  4322   002FC4  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4323   002FC6  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4324   002FCA  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4325   002FCE  6EDF               	movwf	indf2,c
  4326                           
  4327                           ;dc_motor.c: 457:         mR->power = cur_power+mR->compensation;
  4328   002FD0  EE20 F009          	lfsr	2,9
  4329   002FD4  5021               	movf	reverseOneSquare@mR^0,w,c
  4330   002FD6  26D9               	addwf	fsr2l,f,c
  4331   002FD8  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4332   002FDA  22DA               	addwfc	fsr2h,f,c
  4333   002FDC  50DF               	movf	indf2,w,c
  4334   002FDE  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4335   002FE0  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4336   002FE4  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4337   002FE8  6EDF               	movwf	indf2,c
  4338   002FEA                     
  4339                           ;dc_motor.c: 458:         setMotorPWM(mL);
  4340   002FEA  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4341   002FEE  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4342   002FF2  EC8E  F01A         	call	_setMotorPWM	;wreg free
  4343   002FF6                     
  4344                           ;dc_motor.c: 459:         setMotorPWM(mR);
  4345   002FF6  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4346   002FFA  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4347   002FFE  EC8E  F01A         	call	_setMotorPWM	;wreg free
  4348   003002                     
  4349                           ;dc_motor.c: 460:         for (i=0;i<straightRamp;i++) {
  4350   003002  0E00               	movlw	0
  4351   003004  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4352   003006  0E00               	movlw	0
  4353   003008  6E29               	movwf	reverseOneSquare@i^0,c
  4354   00300A  EF10  F018         	goto	l626
  4355   00300E                     l2822:
  4356                           
  4357                           ;dc_motor.c: 461:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4358   00300E  0ED0               	movlw	208
  4359   003010  6E26               	movwf	??_reverseOneSquare^0,c
  4360   003012  0ECA               	movlw	202
  4361   003014                     u3287:
  4362   003014  2EE8               	decfsz	wreg,f,c
  4363   003016  D7FE               	bra	u3287
  4364   003018  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4365   00301A  D7FC               	bra	u3287
  4366   00301C                     
  4367                           ;dc_motor.c: 462:         }
  4368   00301C  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4369   00301E  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4370   003020                     l626:
  4371   003020  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4372   003022  6E26               	movwf	??_reverseOneSquare^0,c
  4373   003024  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4374   003026  5026               	movf	??_reverseOneSquare^0,w,c
  4375   003028  5C29               	subwf	reverseOneSquare@i^0,w,c
  4376   00302A  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4377   00302C  0A80               	xorlw	128
  4378   00302E  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4379   003030  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4380   003032  0A80               	xorlw	128
  4381   003034  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4382   003036  A0D8               	btfss	status,0,c
  4383   003038  EF20  F018         	goto	u1481
  4384   00303C  EF22  F018         	goto	u1480
  4385   003040                     u1481:
  4386   003040  EF07  F018         	goto	l2822
  4387   003044                     u1480:
  4388   003044                     
  4389                           ;dc_motor.c: 463:     }
  4390   003044  4A2B               	infsnz	reverseOneSquare@cur_power^0,f,c
  4391   003046  2A2C               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  4392   003048                     l2828:
  4393   003048  5023               	movf	reverseOneSquare@straightSpeed^0,w,c
  4394   00304A  6E26               	movwf	??_reverseOneSquare^0,c
  4395   00304C  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4396   00304E  502B               	movf	reverseOneSquare@cur_power^0,w,c
  4397   003050  5C26               	subwf	??_reverseOneSquare^0,w,c
  4398   003052  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4399   003054  0A80               	xorlw	128
  4400   003056  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4401   003058  502C               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  4402   00305A  0A80               	xorlw	128
  4403   00305C  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4404   00305E  B0D8               	btfsc	status,0,c
  4405   003060  EF34  F018         	goto	u1491
  4406   003064  EF36  F018         	goto	u1490
  4407   003068                     u1491:
  4408   003068  EFDB  F017         	goto	l2814
  4409   00306C                     u1490:
  4410   00306C                     
  4411                           ;dc_motor.c: 465:     for (i=0;i<reverseDuration;i++) {
  4412   00306C  0E00               	movlw	0
  4413   00306E  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4414   003070  0E00               	movlw	0
  4415   003072  6E29               	movwf	reverseOneSquare@i^0,c
  4416   003074  EF45  F018         	goto	l630
  4417   003078                     l2832:
  4418                           
  4419                           ;dc_motor.c: 466:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4420   003078  0ED0               	movlw	208
  4421   00307A  6E26               	movwf	??_reverseOneSquare^0,c
  4422   00307C  0ECA               	movlw	202
  4423   00307E                     u3297:
  4424   00307E  2EE8               	decfsz	wreg,f,c
  4425   003080  D7FE               	bra	u3297
  4426   003082  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4427   003084  D7FC               	bra	u3297
  4428   003086                     
  4429                           ;dc_motor.c: 467:         }
  4430   003086  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4431   003088  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4432   00308A                     l630:
  4433   00308A  5024               	movf	reverseOneSquare@reverseDuration^0,w,c
  4434   00308C  6E26               	movwf	??_reverseOneSquare^0,c
  4435   00308E  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4436   003090  5026               	movf	??_reverseOneSquare^0,w,c
  4437   003092  5C29               	subwf	reverseOneSquare@i^0,w,c
  4438   003094  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4439   003096  0A80               	xorlw	128
  4440   003098  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4441   00309A  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4442   00309C  0A80               	xorlw	128
  4443   00309E  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4444   0030A0  A0D8               	btfss	status,0,c
  4445   0030A2  EF55  F018         	goto	u1501
  4446   0030A6  EF57  F018         	goto	u1500
  4447   0030AA                     u1501:
  4448   0030AA  EF3C  F018         	goto	l2832
  4449   0030AE                     u1500:
  4450   0030AE                     
  4451                           ;dc_motor.c: 469:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  4452   0030AE  C023  F02B         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  4453   0030B2  6A2C               	clrf	(reverseOneSquare@cur_power+1)^0,c
  4454   0030B4                     l2836:
  4455   0030B4  BE2C               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  4456   0030B6  EF61  F018         	goto	u1510
  4457   0030BA  EF5F  F018         	goto	u1511
  4458   0030BE                     u1511:
  4459   0030BE  EF63  F018         	goto	l2840
  4460   0030C2                     u1510:
  4461   0030C2  EFAF  F018         	goto	l2856
  4462   0030C6                     l2840:
  4463                           
  4464                           ;dc_motor.c: 470:         mL->power = cur_power+mL->compensation;
  4465   0030C6  EE20 F009          	lfsr	2,9
  4466   0030CA  501F               	movf	reverseOneSquare@mL^0,w,c
  4467   0030CC  26D9               	addwf	fsr2l,f,c
  4468   0030CE  5020               	movf	(reverseOneSquare@mL+1)^0,w,c
  4469   0030D0  22DA               	addwfc	fsr2h,f,c
  4470   0030D2  50DF               	movf	indf2,w,c
  4471   0030D4  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4472   0030D6  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4473   0030DA  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4474   0030DE  6EDF               	movwf	indf2,c
  4475                           
  4476                           ;dc_motor.c: 471:         mR->power = cur_power+mR->compensation;
  4477   0030E0  EE20 F009          	lfsr	2,9
  4478   0030E4  5021               	movf	reverseOneSquare@mR^0,w,c
  4479   0030E6  26D9               	addwf	fsr2l,f,c
  4480   0030E8  5022               	movf	(reverseOneSquare@mR+1)^0,w,c
  4481   0030EA  22DA               	addwfc	fsr2h,f,c
  4482   0030EC  50DF               	movf	indf2,w,c
  4483   0030EE  242B               	addwf	reverseOneSquare@cur_power^0,w,c
  4484   0030F0  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4485   0030F4  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4486   0030F8  6EDF               	movwf	indf2,c
  4487   0030FA                     
  4488                           ;dc_motor.c: 472:         setMotorPWM(mL);
  4489   0030FA  C01F  F019         	movff	reverseOneSquare@mL,setMotorPWM@m
  4490   0030FE  C020  F01A         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  4491   003102  EC8E  F01A         	call	_setMotorPWM	;wreg free
  4492   003106                     
  4493                           ;dc_motor.c: 473:         setMotorPWM(mR);
  4494   003106  C021  F019         	movff	reverseOneSquare@mR,setMotorPWM@m
  4495   00310A  C022  F01A         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  4496   00310E  EC8E  F01A         	call	_setMotorPWM	;wreg free
  4497   003112                     
  4498                           ;dc_motor.c: 474:         for (i=0;i<straightRamp;i++) {
  4499   003112  0E00               	movlw	0
  4500   003114  6E2A               	movwf	(reverseOneSquare@i+1)^0,c
  4501   003116  0E00               	movlw	0
  4502   003118  6E29               	movwf	reverseOneSquare@i^0,c
  4503   00311A  EF98  F018         	goto	l635
  4504   00311E                     l2848:
  4505                           
  4506                           ;dc_motor.c: 475:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4507   00311E  0ED0               	movlw	208
  4508   003120  6E26               	movwf	??_reverseOneSquare^0,c
  4509   003122  0ECA               	movlw	202
  4510   003124                     u3307:
  4511   003124  2EE8               	decfsz	wreg,f,c
  4512   003126  D7FE               	bra	u3307
  4513   003128  2E26               	decfsz	??_reverseOneSquare^0,f,c
  4514   00312A  D7FC               	bra	u3307
  4515   00312C                     
  4516                           ;dc_motor.c: 476:         }
  4517   00312C  4A29               	infsnz	reverseOneSquare@i^0,f,c
  4518   00312E  2A2A               	incf	(reverseOneSquare@i+1)^0,f,c
  4519   003130                     l635:
  4520   003130  5025               	movf	reverseOneSquare@straightRamp^0,w,c
  4521   003132  6E26               	movwf	??_reverseOneSquare^0,c
  4522   003134  6A27               	clrf	(??_reverseOneSquare+1)^0,c
  4523   003136  5026               	movf	??_reverseOneSquare^0,w,c
  4524   003138  5C29               	subwf	reverseOneSquare@i^0,w,c
  4525   00313A  502A               	movf	(reverseOneSquare@i+1)^0,w,c
  4526   00313C  0A80               	xorlw	128
  4527   00313E  6E28               	movwf	(??_reverseOneSquare+2)^0,c
  4528   003140  5027               	movf	(??_reverseOneSquare+1)^0,w,c
  4529   003142  0A80               	xorlw	128
  4530   003144  5828               	subwfb	(??_reverseOneSquare+2)^0,w,c
  4531   003146  A0D8               	btfss	status,0,c
  4532   003148  EFA8  F018         	goto	u1521
  4533   00314C  EFAA  F018         	goto	u1520
  4534   003150                     u1521:
  4535   003150  EF8F  F018         	goto	l2848
  4536   003154                     u1520:
  4537   003154                     
  4538                           ;dc_motor.c: 477:     }
  4539   003154  062B               	decf	reverseOneSquare@cur_power^0,f,c
  4540   003156  A0D8               	btfss	status,0,c
  4541   003158  062C               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  4542   00315A  EF5A  F018         	goto	l2836
  4543   00315E                     l2856:
  4544                           
  4545                           ;dc_motor.c: 478:     mL->power = 0;
  4546   00315E  C01F  FFD9         	movff	reverseOneSquare@mL,fsr2l
  4547   003162  C020  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  4548   003166  6ADF               	clrf	indf2,c
  4549                           
  4550                           ;dc_motor.c: 479:     mR->power = 0;
  4551   003168  C021  FFD9         	movff	reverseOneSquare@mR,fsr2l
  4552   00316C  C022  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  4553   003170  6ADF               	clrf	indf2,c
  4554   003172  0012               	return		;funcret
  4555   003174                     __end_of_reverseOneSquare:
  4556                           	callstack 0
  4557                           
  4558 ;; *************** function _resetTimer *****************
  4559 ;; Defined at:
  4560 ;;		line 23 in file "timers.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 5
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_main
  4585 ;;		_returnHome
  4586 ;;		_lostReturnHome
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text6
  4591   00417E                     __ptext6:
  4592                           	callstack 0
  4593   00417E                     _resetTimer:
  4594                           	callstack 25
  4595   00417E                     
  4596                           ;timers.c: 25:     TMR0H=0;
  4597   00417E  0E00               	movlw	0
  4598   004180  6ED4               	movwf	212,c	;volatile
  4599                           
  4600                           ;timers.c: 26:     TMR0L=0;
  4601   004182  0E00               	movlw	0
  4602   004184  6ED3               	movwf	211,c	;volatile
  4603   004186  0012               	return		;funcret
  4604   004188                     __end_of_resetTimer:
  4605                           	callstack 0
  4606                           
  4607 ;; *************** function _get16bitTMR0val *****************
  4608 ;; Defined at:
  4609 ;;		line 33 in file "timers.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  timer_val       2   19[COMRAM] unsigned int 
  4614 ;;  timer_high      2   17[COMRAM] unsigned int 
  4615 ;;  timer_low       2   15[COMRAM] unsigned int 
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  2   11[COMRAM] unsigned int 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2, status,0
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4626 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4628 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4629 ;;Total ram usage:       10 bytes
  4630 ;; Hardware stack levels used: 1
  4631 ;; Hardware stack levels required when called: 5
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_main
  4636 ;;		_returnHome
  4637 ;;		_lostReturnHome
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           	psect	text7
  4642   003F7A                     __ptext7:
  4643                           	callstack 0
  4644   003F7A                     _get16bitTMR0val:
  4645                           	callstack 23
  4646   003F7A                     
  4647                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  4648   003F7A  CFD3 F010          	movff	4051,get16bitTMR0val@timer_low	;volatile
  4649   003F7E  6A11               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  4650                           
  4651                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  4652   003F80  CFD4 F012          	movff	4052,get16bitTMR0val@timer_high	;volatile
  4653   003F84  6A13               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  4654   003F86                     
  4655                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  4656   003F86  5012               	movf	get16bitTMR0val@timer_high^0,w,c
  4657   003F88  6E0F               	movwf	(??_get16bitTMR0val+1)^0,c
  4658   003F8A  6A0E               	clrf	??_get16bitTMR0val^0,c
  4659   003F8C  5010               	movf	get16bitTMR0val@timer_low^0,w,c
  4660   003F8E  100E               	iorwf	??_get16bitTMR0val^0,w,c
  4661   003F90  6E14               	movwf	get16bitTMR0val@timer_val^0,c
  4662   003F92  5011               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  4663   003F94  100F               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  4664   003F96  6E15               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  4665   003F98                     
  4666                           ;timers.c: 39:     return timer_val;
  4667   003F98  C014  F00C         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  4668   003F9C  C015  F00D         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  4669   003FA0  0012               	return		;funcret
  4670   003FA2                     __end_of_get16bitTMR0val:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _fullSpeedAhead *****************
  4674 ;; Defined at:
  4675 ;;		line 432 in file "dc_motor.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  4678 ;;		 -> main@motorL(10), 
  4679 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  4680 ;;		 -> main@motorR(10), 
  4681 ;;  straightSpee    1   34[COMRAM] unsigned char 
  4682 ;;  straightRamp    1   35[COMRAM] unsigned char 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  cur_power       2   41[COMRAM] int 
  4685 ;;  i               2   39[COMRAM] int 
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4695 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4696 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4697 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4698 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4699 ;;Total ram usage:       13 bytes
  4700 ;; Hardware stack levels used: 1
  4701 ;; Hardware stack levels required when called: 7
  4702 ;; This function calls:
  4703 ;;		_setMotorPWM
  4704 ;; This function is called by:
  4705 ;;		_main
  4706 ;;		_move
  4707 ;;		_returnHome
  4708 ;;		_lostReturnHome
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text8
  4713   0039E6                     __ptext8:
  4714                           	callstack 0
  4715   0039E6                     _fullSpeedAhead:
  4716                           	callstack 21
  4717   0039E6                     
  4718                           ;dc_motor.c: 432: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 433: {;dc_motor.c: 434:     mL->direction = 1;
  4719   0039E6  EE20 F001          	lfsr	2,1
  4720   0039EA  501F               	movf	fullSpeedAhead@mL^0,w,c
  4721   0039EC  26D9               	addwf	fsr2l,f,c
  4722   0039EE  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4723   0039F0  22DA               	addwfc	fsr2h,f,c
  4724   0039F2  0E01               	movlw	1
  4725   0039F4  6EDF               	movwf	indf2,c
  4726                           
  4727                           ;dc_motor.c: 435:     mR->direction = 1;
  4728   0039F6  EE20 F001          	lfsr	2,1
  4729   0039FA  5021               	movf	fullSpeedAhead@mR^0,w,c
  4730   0039FC  26D9               	addwf	fsr2l,f,c
  4731   0039FE  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4732   003A00  22DA               	addwfc	fsr2h,f,c
  4733   003A02  0E01               	movlw	1
  4734   003A04  6EDF               	movwf	indf2,c
  4735   003A06                     
  4736                           ;dc_motor.c: 436:     int i;;dc_motor.c: 437:     int cur_power;;dc_motor.c: 438:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  4737   003A06  0E00               	movlw	0
  4738   003A08  6E2B               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  4739   003A0A  0E01               	movlw	1
  4740   003A0C  6E2A               	movwf	fullSpeedAhead@cur_power^0,c
  4741   003A0E  EF52  F01D         	goto	l2662
  4742   003A12                     l2648:
  4743                           
  4744                           ;dc_motor.c: 439:         mL->power = cur_power+mL->compensation;
  4745   003A12  EE20 F009          	lfsr	2,9
  4746   003A16  501F               	movf	fullSpeedAhead@mL^0,w,c
  4747   003A18  26D9               	addwf	fsr2l,f,c
  4748   003A1A  5020               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4749   003A1C  22DA               	addwfc	fsr2h,f,c
  4750   003A1E  50DF               	movf	indf2,w,c
  4751   003A20  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4752   003A22  C01F  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4753   003A26  C020  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4754   003A2A  6EDF               	movwf	indf2,c
  4755                           
  4756                           ;dc_motor.c: 440:         mR->power = cur_power+mR->compensation;
  4757   003A2C  EE20 F009          	lfsr	2,9
  4758   003A30  5021               	movf	fullSpeedAhead@mR^0,w,c
  4759   003A32  26D9               	addwf	fsr2l,f,c
  4760   003A34  5022               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4761   003A36  22DA               	addwfc	fsr2h,f,c
  4762   003A38  50DF               	movf	indf2,w,c
  4763   003A3A  242A               	addwf	fullSpeedAhead@cur_power^0,w,c
  4764   003A3C  C021  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4765   003A40  C022  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4766   003A44  6EDF               	movwf	indf2,c
  4767   003A46                     
  4768                           ;dc_motor.c: 441:         setMotorPWM(mL);
  4769   003A46  C01F  F019         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4770   003A4A  C020  F01A         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4771   003A4E  EC8E  F01A         	call	_setMotorPWM	;wreg free
  4772   003A52                     
  4773                           ;dc_motor.c: 442:         setMotorPWM(mR);
  4774   003A52  C021  F019         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4775   003A56  C022  F01A         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4776   003A5A  EC8E  F01A         	call	_setMotorPWM	;wreg free
  4777   003A5E                     
  4778                           ;dc_motor.c: 443:         for (i=0;i<straightRamp;i++) {
  4779   003A5E  0E00               	movlw	0
  4780   003A60  6E29               	movwf	(fullSpeedAhead@i+1)^0,c
  4781   003A62  0E00               	movlw	0
  4782   003A64  6E28               	movwf	fullSpeedAhead@i^0,c
  4783   003A66  EF3E  F01D         	goto	l617
  4784   003A6A                     l2656:
  4785                           
  4786                           ;dc_motor.c: 444:             _delay((unsigned long)((10)*(64000000/4000.0)));
  4787   003A6A  0ED0               	movlw	208
  4788   003A6C  6E25               	movwf	??_fullSpeedAhead^0,c
  4789   003A6E  0ECA               	movlw	202
  4790   003A70                     u3317:
  4791   003A70  2EE8               	decfsz	wreg,f,c
  4792   003A72  D7FE               	bra	u3317
  4793   003A74  2E25               	decfsz	??_fullSpeedAhead^0,f,c
  4794   003A76  D7FC               	bra	u3317
  4795   003A78                     
  4796                           ;dc_motor.c: 445:         }
  4797   003A78  4A28               	infsnz	fullSpeedAhead@i^0,f,c
  4798   003A7A  2A29               	incf	(fullSpeedAhead@i+1)^0,f,c
  4799   003A7C                     l617:
  4800   003A7C  5024               	movf	fullSpeedAhead@straightRamp^0,w,c
  4801   003A7E  6E25               	movwf	??_fullSpeedAhead^0,c
  4802   003A80  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  4803   003A82  5025               	movf	??_fullSpeedAhead^0,w,c
  4804   003A84  5C28               	subwf	fullSpeedAhead@i^0,w,c
  4805   003A86  5029               	movf	(fullSpeedAhead@i+1)^0,w,c
  4806   003A88  0A80               	xorlw	128
  4807   003A8A  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  4808   003A8C  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  4809   003A8E  0A80               	xorlw	128
  4810   003A90  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  4811   003A92  A0D8               	btfss	status,0,c
  4812   003A94  EF4E  F01D         	goto	u1321
  4813   003A98  EF50  F01D         	goto	u1320
  4814   003A9C                     u1321:
  4815   003A9C  EF35  F01D         	goto	l2656
  4816   003AA0                     u1320:
  4817   003AA0                     
  4818                           ;dc_motor.c: 446:     }
  4819   003AA0  4A2A               	infsnz	fullSpeedAhead@cur_power^0,f,c
  4820   003AA2  2A2B               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  4821   003AA4                     l2662:
  4822   003AA4  5023               	movf	fullSpeedAhead@straightSpeed^0,w,c
  4823   003AA6  6E25               	movwf	??_fullSpeedAhead^0,c
  4824   003AA8  6A26               	clrf	(??_fullSpeedAhead+1)^0,c
  4825   003AAA  502A               	movf	fullSpeedAhead@cur_power^0,w,c
  4826   003AAC  5C25               	subwf	??_fullSpeedAhead^0,w,c
  4827   003AAE  5026               	movf	(??_fullSpeedAhead+1)^0,w,c
  4828   003AB0  0A80               	xorlw	128
  4829   003AB2  6E27               	movwf	(??_fullSpeedAhead+2)^0,c
  4830   003AB4  502B               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  4831   003AB6  0A80               	xorlw	128
  4832   003AB8  5827               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  4833   003ABA  B0D8               	btfsc	status,0,c
  4834   003ABC  EF62  F01D         	goto	u1331
  4835   003AC0  EF64  F01D         	goto	u1330
  4836   003AC4                     u1331:
  4837   003AC4  EF09  F01D         	goto	l2648
  4838   003AC8                     u1330:
  4839   003AC8  0012               	return		;funcret
  4840   003ACA                     __end_of_fullSpeedAhead:
  4841                           	callstack 0
  4842                           
  4843 ;; *************** function _initUSART4 *****************
  4844 ;; Defined at:
  4845 ;;		line 4 in file "serial.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4863 ;;Total ram usage:        0 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; Hardware stack levels required when called: 5
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_main
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text9
  4874   0040E8                     __ptext9:
  4875                           	callstack 0
  4876   0040E8                     _initUSART4:
  4877                           	callstack 25
  4878   0040E8                     
  4879                           ;serial.c: 7:     RC0PPS = 0x12;
  4880   0040E8  0E12               	movlw	18
  4881   0040EA  010E               	movlb	14	; () banked
  4882   0040EC  6F62               	movwf	98,b	;volatile
  4883                           
  4884                           ;serial.c: 8:     RX4PPS = 0x11;
  4885   0040EE  0E11               	movlw	17
  4886   0040F0  6F15               	movwf	21,b	;volatile
  4887   0040F2                     
  4888                           ; BSR set to: 14
  4889                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  4890   0040F2  97E9               	bcf	233,3,b	;volatile
  4891   0040F4                     
  4892                           ; BSR set to: 14
  4893                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  4894   0040F4  95E8               	bcf	232,2,b	;volatile
  4895                           
  4896                           ;serial.c: 13:     SP4BRGL = 51;
  4897   0040F6  0E33               	movlw	51
  4898   0040F8  6FE5               	movwf	229,b	;volatile
  4899                           
  4900                           ;serial.c: 14:     SP4BRGH = 0;
  4901   0040FA  0E00               	movlw	0
  4902   0040FC  6FE6               	movwf	230,b	;volatile
  4903   0040FE                     
  4904                           ; BSR set to: 14
  4905                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  4906   0040FE  89E7               	bsf	231,4,b	;volatile
  4907   004100                     
  4908                           ; BSR set to: 14
  4909                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  4910   004100  8BE8               	bsf	232,5,b	;volatile
  4911   004102                     
  4912                           ; BSR set to: 14
  4913                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  4914   004102  8FE7               	bsf	231,7,b	;volatile
  4915   004104                     
  4916                           ; BSR set to: 14
  4917   004104  0012               	return		;funcret
  4918   004106                     __end_of_initUSART4:
  4919                           	callstack 0
  4920                           
  4921 ;; *************** function _initDCmotorsPWM *****************
  4922 ;; Defined at:
  4923 ;;		line 8 in file "dc_motor.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;  PWMperiod       2   11[COMRAM] unsigned int 
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;		None
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		wreg, status,2
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4937 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4940 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4941 ;;Total ram usage:        2 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; Hardware stack levels required when called: 5
  4944 ;; This function calls:
  4945 ;;		Nothing
  4946 ;; This function is called by:
  4947 ;;		_main
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text10
  4952   003B8E                     __ptext10:
  4953                           	callstack 0
  4954   003B8E                     _initDCmotorsPWM:
  4955                           	callstack 25
  4956   003B8E                     
  4957                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  4958   003B8E  947D               	bcf	125,2,c	;volatile
  4959                           
  4960                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  4961   003B90  9485               	bcf	133,2,c	;volatile
  4962                           
  4963                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  4964   003B92  987D               	bcf	125,4,c	;volatile
  4965                           
  4966                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  4967   003B94  9885               	bcf	133,4,c	;volatile
  4968                           
  4969                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  4970   003B96  9E7B               	bcf	123,7,c	;volatile
  4971                           
  4972                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  4973   003B98  9E83               	bcf	131,7,c	;volatile
  4974                           
  4975                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  4976   003B9A  9C7F               	bcf	127,6,c	;volatile
  4977                           
  4978                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  4979   003B9C  9C87               	bcf	135,6,c	;volatile
  4980   003B9E                     
  4981                           ;dc_motor.c: 21:     RE2PPS=0x05;
  4982   003B9E  0E05               	movlw	5
  4983   003BA0  010E               	movlb	14	; () banked
  4984   003BA2  6F74               	movwf	116,b	;volatile
  4985                           
  4986                           ;dc_motor.c: 22:     RE4PPS=0x06;
  4987   003BA4  0E06               	movlw	6
  4988   003BA6  6F76               	movwf	118,b	;volatile
  4989                           
  4990                           ;dc_motor.c: 23:     RC7PPS=0x07;
  4991   003BA8  0E07               	movlw	7
  4992   003BAA  6F69               	movwf	105,b	;volatile
  4993                           
  4994                           ;dc_motor.c: 24:     RG6PPS=0x08;
  4995   003BAC  0E08               	movlw	8
  4996   003BAE  6F88               	movwf	136,b	;volatile
  4997                           
  4998                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  4999   003BB0  50BD               	movf	189,w,c	;volatile
  5000   003BB2  0B8F               	andlw	-113
  5001   003BB4  0930               	iorlw	48
  5002   003BB6  6EBD               	movwf	189,c	;volatile
  5003                           
  5004                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  5005   003BB8  0EE0               	movlw	-32
  5006   003BBA  16BE               	andwf	190,f,c	;volatile
  5007                           
  5008                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  5009   003BBC  50BF               	movf	191,w,c	;volatile
  5010   003BBE  0BF0               	andlw	-16
  5011   003BC0  0901               	iorlw	1
  5012   003BC2  6EBF               	movwf	191,c	;volatile
  5013   003BC4                     
  5014                           ; BSR set to: 14
  5015                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  5016   003BC4  C00C  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  5017   003BC8                     
  5018                           ; BSR set to: 14
  5019                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  5020   003BC8  8EBD               	bsf	189,7,c	;volatile
  5021                           
  5022                           ;dc_motor.c: 38:     CCPR1H=0;
  5023   003BCA  0E00               	movlw	0
  5024   003BCC  6EAA               	movwf	170,c	;volatile
  5025                           
  5026                           ;dc_motor.c: 39:     CCPR2H=0;
  5027   003BCE  0E00               	movlw	0
  5028   003BD0  6EA6               	movwf	166,c	;volatile
  5029                           
  5030                           ;dc_motor.c: 40:     CCPR3H=0;
  5031   003BD2  0E00               	movlw	0
  5032   003BD4  010F               	movlb	15	; () banked
  5033   003BD6  6F25               	movwf	37,b	;volatile
  5034                           
  5035                           ;dc_motor.c: 41:     CCPR4H=0;
  5036   003BD8  0E00               	movlw	0
  5037   003BDA  6F21               	movwf	33,b	;volatile
  5038                           
  5039                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  5040   003BDC  0EFC               	movlw	-4
  5041   003BDE  16AD               	andwf	173,f,c	;volatile
  5042                           
  5043                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  5044   003BE0  0EF3               	movlw	-13
  5045   003BE2  16AD               	andwf	173,f,c	;volatile
  5046                           
  5047                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  5048   003BE4  0ECF               	movlw	-49
  5049   003BE6  16AD               	andwf	173,f,c	;volatile
  5050                           
  5051                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  5052   003BE8  0E3F               	movlw	-193
  5053   003BEA  16AD               	andwf	173,f,c	;volatile
  5054   003BEC                     
  5055                           ; BSR set to: 15
  5056                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  5057   003BEC  88AB               	bsf	171,4,c	;volatile
  5058                           
  5059                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  5060   003BEE  50AB               	movf	171,w,c	;volatile
  5061   003BF0  0BF0               	andlw	-16
  5062   003BF2  090C               	iorlw	12
  5063   003BF4  6EAB               	movwf	171,c	;volatile
  5064   003BF6                     
  5065                           ; BSR set to: 15
  5066                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  5067   003BF6  8EAB               	bsf	171,7,c	;volatile
  5068   003BF8                     
  5069                           ; BSR set to: 15
  5070                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  5071   003BF8  88A7               	bsf	167,4,c	;volatile
  5072                           
  5073                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  5074   003BFA  50A7               	movf	167,w,c	;volatile
  5075   003BFC  0BF0               	andlw	-16
  5076   003BFE  090C               	iorlw	12
  5077   003C00  6EA7               	movwf	167,c	;volatile
  5078   003C02                     
  5079                           ; BSR set to: 15
  5080                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  5081   003C02  8EA7               	bsf	167,7,c	;volatile
  5082   003C04                     
  5083                           ; BSR set to: 15
  5084                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  5085   003C04  8926               	bsf	38,4,b	;volatile
  5086                           
  5087                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  5088   003C06  5126               	movf	38,w,b	;volatile
  5089   003C08  0BF0               	andlw	-16
  5090   003C0A  090C               	iorlw	12
  5091   003C0C  6F26               	movwf	38,b	;volatile
  5092   003C0E                     
  5093                           ; BSR set to: 15
  5094                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  5095   003C0E  8F26               	bsf	38,7,b	;volatile
  5096   003C10                     
  5097                           ; BSR set to: 15
  5098                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  5099   003C10  8922               	bsf	34,4,b	;volatile
  5100                           
  5101                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  5102   003C12  5122               	movf	34,w,b	;volatile
  5103   003C14  0BF0               	andlw	-16
  5104   003C16  090C               	iorlw	12
  5105   003C18  6F22               	movwf	34,b	;volatile
  5106   003C1A                     
  5107                           ; BSR set to: 15
  5108                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  5109   003C1A  8F22               	bsf	34,7,b	;volatile
  5110   003C1C                     
  5111                           ; BSR set to: 15
  5112   003C1C  0012               	return		;funcret
  5113   003C1E                     __end_of_initDCmotorsPWM:
  5114                           	callstack 0
  5115                           
  5116 ;; *************** function _color_click_init *****************
  5117 ;; Defined at:
  5118 ;;		line 7 in file "color.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5136 ;;Total ram usage:        1 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 9
  5139 ;; This function calls:
  5140 ;;		_I2C_2_Master_Init
  5141 ;;		_color_clear_init_interrupts
  5142 ;;		_color_writetoaddr
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text11
  5149   003EE2                     __ptext11:
  5150                           	callstack 0
  5151   003EE2                     _color_click_init:
  5152                           	callstack 21
  5153   003EE2                     
  5154                           ;color.c: 10:     I2C_2_Master_Init();
  5155   003EE2  ECA8  F01F         	call	_I2C_2_Master_Init	;wreg free
  5156   003EE6                     
  5157                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  5158   003EE6  0E01               	movlw	1
  5159   003EE8  6E0E               	movwf	color_writetoaddr@value^0,c
  5160   003EEA  0E00               	movlw	0
  5161   003EEC  EC44  F020         	call	_color_writetoaddr
  5162   003EF0                     
  5163                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5164   003EF0  0E3F               	movlw	63
  5165   003EF2  6E15               	movwf	??_color_click_init^0,c
  5166   003EF4  0E55               	movlw	85
  5167   003EF6                     u3327:
  5168   003EF6  2EE8               	decfsz	wreg,f,c
  5169   003EF8  D7FE               	bra	u3327
  5170   003EFA  2E15               	decfsz	??_color_click_init^0,f,c
  5171   003EFC  D7FC               	bra	u3327
  5172   003EFE  0000               	nop	
  5173   003F00                     
  5174                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  5175   003F00  0E03               	movlw	3
  5176   003F02  6E0E               	movwf	color_writetoaddr@value^0,c
  5177   003F04  0E00               	movlw	0
  5178   003F06  EC44  F020         	call	_color_writetoaddr
  5179   003F0A                     
  5180                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  5181   003F0A  0ED5               	movlw	213
  5182   003F0C  6E0E               	movwf	color_writetoaddr@value^0,c
  5183   003F0E  0E01               	movlw	1
  5184   003F10  EC44  F020         	call	_color_writetoaddr
  5185   003F14                     
  5186                           ;color.c: 23:     color_clear_init_interrupts();
  5187   003F14  EC0F  F01E         	call	_color_clear_init_interrupts	;wreg free
  5188   003F18  0012               	return		;funcret
  5189   003F1A                     __end_of_color_click_init:
  5190                           	callstack 0
  5191                           
  5192 ;; *************** function _color_clear_init_interrupts *****************
  5193 ;; Defined at:
  5194 ;;		line 27 in file "color.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  low_threshol    2   18[COMRAM] unsigned int 
  5199 ;;  high_thresho    2   16[COMRAM] unsigned int 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      void 
  5202 ;; Registers used:
  5203 ;;		wreg, status,2, status,0, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5210 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5212 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5213 ;;Total ram usage:        5 bytes
  5214 ;; Hardware stack levels used: 1
  5215 ;; Hardware stack levels required when called: 8
  5216 ;; This function calls:
  5217 ;;		_I2C_2_Master_Start
  5218 ;;		_I2C_2_Master_Stop
  5219 ;;		_I2C_2_Master_Write
  5220 ;;		_color_writetoaddr
  5221 ;; This function is called by:
  5222 ;;		_color_click_init
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text12
  5227   003C1E                     __ptext12:
  5228                           	callstack 0
  5229   003C1E                     _color_clear_init_interrupts:
  5230                           	callstack 21
  5231   003C1E                     
  5232                           ;color.c: 29:     I2C_2_Master_Start();
  5233   003C1E  ECC9  F020         	call	_I2C_2_Master_Start	;wreg free
  5234                           
  5235                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  5236   003C22  0E52               	movlw	82
  5237   003C24  ECB3  F020         	call	_I2C_2_Master_Write
  5238                           
  5239                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  5240   003C28  0EE6               	movlw	230
  5241   003C2A  ECB3  F020         	call	_I2C_2_Master_Write
  5242                           
  5243                           ;color.c: 32:     I2C_2_Master_Stop();
  5244   003C2E  ECC4  F020         	call	_I2C_2_Master_Stop	;wreg free
  5245   003C32                     
  5246                           ;color.c: 35:     unsigned int high_threshold = ambient + 15;
  5247   003C32  0E0F               	movlw	15
  5248   003C34  244E               	addwf	_ambient^0,w,c
  5249   003C36  6E11               	movwf	color_clear_init_interrupts@high_threshold^0,c
  5250   003C38  0E00               	movlw	0
  5251   003C3A  204F               	addwfc	(_ambient+1)^0,w,c
  5252   003C3C  6E12               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  5253   003C3E                     
  5254                           ;color.c: 36:     unsigned int low_threshold = ambient - 15;
  5255   003C3E  0EF1               	movlw	241
  5256   003C40  244E               	addwf	_ambient^0,w,c
  5257   003C42  6E13               	movwf	color_clear_init_interrupts@low_threshold^0,c
  5258   003C44  0EFF               	movlw	255
  5259   003C46  204F               	addwfc	(_ambient+1)^0,w,c
  5260   003C48  6E14               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  5261                           
  5262                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
  5263   003C4A  0E13               	movlw	19
  5264   003C4C  6E0E               	movwf	color_writetoaddr@value^0,c
  5265   003C4E  0E00               	movlw	0
  5266   003C50  EC44  F020         	call	_color_writetoaddr
  5267   003C54                     
  5268                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5269   003C54  0E3F               	movlw	63
  5270   003C56  6E10               	movwf	??_color_clear_init_interrupts^0,c
  5271   003C58  0E55               	movlw	85
  5272   003C5A                     u3337:
  5273   003C5A  2EE8               	decfsz	wreg,f,c
  5274   003C5C  D7FE               	bra	u3337
  5275   003C5E  2E10               	decfsz	??_color_clear_init_interrupts^0,f,c
  5276   003C60  D7FC               	bra	u3337
  5277   003C62  0000               	nop	
  5278   003C64                     
  5279                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
  5280   003C64  5012               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  5281   003C66  6E0E               	movwf	color_writetoaddr@value^0,c
  5282   003C68  0E07               	movlw	7
  5283   003C6A  EC44  F020         	call	_color_writetoaddr
  5284   003C6E                     
  5285                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  5286   003C6E  C011  F00E         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  5287   003C72  0E06               	movlw	6
  5288   003C74  EC44  F020         	call	_color_writetoaddr
  5289   003C78                     
  5290                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
  5291   003C78  5014               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  5292   003C7A  6E0E               	movwf	color_writetoaddr@value^0,c
  5293   003C7C  0E05               	movlw	5
  5294   003C7E  EC44  F020         	call	_color_writetoaddr
  5295   003C82                     
  5296                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  5297   003C82  C013  F00E         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  5298   003C86  0E04               	movlw	4
  5299   003C88  EC44  F020         	call	_color_writetoaddr
  5300   003C8C                     
  5301                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
  5302   003C8C  0E04               	movlw	4
  5303   003C8E  6E0E               	movwf	color_writetoaddr@value^0,c
  5304   003C90  0E0C               	movlw	12
  5305   003C92  EC44  F020         	call	_color_writetoaddr
  5306   003C96  0012               	return		;funcret
  5307   003C98                     __end_of_color_clear_init_interrupts:
  5308                           	callstack 0
  5309                           
  5310 ;; *************** function _color_writetoaddr *****************
  5311 ;; Defined at:
  5312 ;;		line 50 in file "color.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  address         1    wreg     unsigned char 
  5315 ;;  value           1   13[COMRAM] unsigned char 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  address         1   14[COMRAM] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      void 
  5320 ;; Registers used:
  5321 ;;		wreg, status,2, status,0, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5327 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5331 ;;Total ram usage:        2 bytes
  5332 ;; Hardware stack levels used: 1
  5333 ;; Hardware stack levels required when called: 7
  5334 ;; This function calls:
  5335 ;;		_I2C_2_Master_Start
  5336 ;;		_I2C_2_Master_Stop
  5337 ;;		_I2C_2_Master_Write
  5338 ;; This function is called by:
  5339 ;;		_color_click_init
  5340 ;;		_color_clear_init_interrupts
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text13
  5345   004088                     __ptext13:
  5346                           	callstack 0
  5347   004088                     _color_writetoaddr:
  5348                           	callstack 22
  5349                           
  5350                           ;incstack = 0
  5351                           ;color_writetoaddr@address stored from wreg
  5352   004088  6E0F               	movwf	color_writetoaddr@address^0,c
  5353   00408A                     
  5354                           ;color.c: 51:     I2C_2_Master_Start();
  5355   00408A  ECC9  F020         	call	_I2C_2_Master_Start	;wreg free
  5356                           
  5357                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
  5358   00408E  0E52               	movlw	82
  5359   004090  ECB3  F020         	call	_I2C_2_Master_Write
  5360                           
  5361                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
  5362   004094  500F               	movf	color_writetoaddr@address^0,w,c
  5363   004096  0980               	iorlw	128
  5364   004098  ECB3  F020         	call	_I2C_2_Master_Write
  5365                           
  5366                           ;color.c: 54:     I2C_2_Master_Write(value);
  5367   00409C  500E               	movf	color_writetoaddr@value^0,w,c
  5368   00409E  ECB3  F020         	call	_I2C_2_Master_Write
  5369                           
  5370                           ;color.c: 55:     I2C_2_Master_Stop();
  5371   0040A2  ECC4  F020         	call	_I2C_2_Master_Stop	;wreg free
  5372   0040A6  0012               	return		;funcret
  5373   0040A8                     __end_of_color_writetoaddr:
  5374                           	callstack 0
  5375                           
  5376 ;; *************** function _I2C_2_Master_Init *****************
  5377 ;; Defined at:
  5378 ;;		line 4 in file "i2c.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;		None
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;		None
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  1    wreg      void 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;Total ram usage:        0 bytes
  5397 ;; Hardware stack levels used: 1
  5398 ;; Hardware stack levels required when called: 5
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_color_click_init
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text14
  5407   003F50                     __ptext14:
  5408                           	callstack 0
  5409   003F50                     _I2C_2_Master_Init:
  5410                           	callstack 24
  5411   003F50                     
  5412                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5413   003F50  010E               	movlb	14	; () banked
  5414   003F52  51D9               	movf	217,w,b	;volatile
  5415   003F54  0BF0               	andlw	-16
  5416   003F56  0908               	iorlw	8
  5417   003F58  6FD9               	movwf	217,b	;volatile
  5418   003F5A                     
  5419                           ; BSR set to: 14
  5420                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5421   003F5A  8BD9               	bsf	217,5,b	;volatile
  5422                           
  5423                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5424   003F5C  0E9F               	movlw	159
  5425   003F5E  6FD6               	movwf	214,b	;volatile
  5426   003F60                     
  5427                           ; BSR set to: 14
  5428                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5429   003F60  8A84               	bsf	132,5,c	;volatile
  5430   003F62                     
  5431                           ; BSR set to: 14
  5432                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5433   003F62  8C84               	bsf	132,6,c	;volatile
  5434   003F64                     
  5435                           ; BSR set to: 14
  5436                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5437   003F64  9BA7               	bcf	167,5,b	;volatile
  5438   003F66                     
  5439                           ; BSR set to: 14
  5440                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5441   003F66  9DA7               	bcf	167,6,b	;volatile
  5442                           
  5443                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5444   003F68  0E1D               	movlw	29
  5445   003F6A  6F1D               	movwf	29,b	;volatile
  5446                           
  5447                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5448   003F6C  0E1E               	movlw	30
  5449   003F6E  6F1C               	movwf	28,b	;volatile
  5450                           
  5451                           ;i2c.c: 18:   RD5PPS=0x1C;
  5452   003F70  0E1C               	movlw	28
  5453   003F72  6F6F               	movwf	111,b	;volatile
  5454                           
  5455                           ;i2c.c: 19:   RD6PPS=0x1B;
  5456   003F74  0E1B               	movlw	27
  5457   003F76  6F70               	movwf	112,b	;volatile
  5458   003F78                     
  5459                           ; BSR set to: 14
  5460   003F78  0012               	return		;funcret
  5461   003F7A                     __end_of_I2C_2_Master_Init:
  5462                           	callstack 0
  5463                           
  5464 ;; *************** function _color_calibration *****************
  5465 ;; Defined at:
  5466 ;;		line 193 in file "color.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  RGBC            2   49[COMRAM] PTR struct RGBC_val
  5469 ;;		 -> main@RGBC(8), 
  5470 ;;  RGBC_n          2   51[COMRAM] PTR struct RGBC_val
  5471 ;;		 -> main@RGBC_n(8), 
  5472 ;;  red             2   53[COMRAM] PTR struct RGB_calib
  5473 ;;		 -> main@red(6), 
  5474 ;;  green           2   55[COMRAM] PTR struct RGB_calib
  5475 ;;		 -> main@green(6), 
  5476 ;;  blue            2   57[COMRAM] PTR struct RGB_calib
  5477 ;;		 -> main@blue(6), 
  5478 ;;  yellow          2   59[COMRAM] PTR struct RGB_calib
  5479 ;;		 -> main@yellow(6), 
  5480 ;;  pink            2   61[COMRAM] PTR struct RGB_calib
  5481 ;;		 -> main@pink(6), 
  5482 ;;  orange          2   63[COMRAM] PTR struct RGB_calib
  5483 ;;		 -> main@orange(6), 
  5484 ;;  lightblue       2   65[COMRAM] PTR struct RGB_calib
  5485 ;;		 -> main@lightblue(6), 
  5486 ;;  white           2   67[COMRAM] PTR struct RGB_calib
  5487 ;;		 -> main@white(6), 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;		None
  5490 ;; Return value:  Size  Location     Type
  5491 ;;                  1    wreg      void 
  5492 ;; Registers used:
  5493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5499 ;;      Params:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5502 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5503 ;;Total ram usage:       22 bytes
  5504 ;; Hardware stack levels used: 1
  5505 ;; Hardware stack levels required when called: 8
  5506 ;; This function calls:
  5507 ;;		_color_normalise
  5508 ;;		_color_read
  5509 ;;		_white_Light
  5510 ;; This function is called by:
  5511 ;;		_main
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text15
  5516   0021B4                     __ptext15:
  5517                           	callstack 0
  5518   0021B4                     _color_calibration:
  5519                           	callstack 22
  5520   0021B4                     
  5521                           ;color.c: 193: void color_calibration(RGBC_val *RGBC, RGBC_val *RGBC_n, RGB_calib *red, 
      +                          RGB_calib *green, RGB_calib *blue, RGB_calib *yellow, RGB_calib *pink, RGB_calib *orange
      +                          , RGB_calib *lightblue, RGB_calib *white);color.c: 194: {;color.c: 195:     white_Light(
      +                          1);
  5522   0021B4  0E01               	movlw	1
  5523   0021B6  EC32  F020         	call	_white_Light
  5524   0021BA                     
  5525                           ;color.c: 196:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  5526   0021BA  8680               	bsf	128,3,c	;volatile
  5527   0021BC  8E7C               	bsf	124,7,c	;volatile
  5528   0021BE                     l156:
  5529   0021BE  B48E               	btfsc	142,2,c	;volatile
  5530   0021C0  EFE4  F010         	goto	u1811
  5531   0021C4  EFE6  F010         	goto	u1810
  5532   0021C8                     u1811:
  5533   0021C8  EFDF  F010         	goto	l156
  5534   0021CC                     u1810:
  5535   0021CC                     
  5536                           ;color.c: 199:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  5537   0021CC  9680               	bcf	128,3,c	;volatile
  5538   0021CE  9E7C               	bcf	124,7,c	;volatile
  5539   0021D0                     
  5540                           ;color.c: 200:     color_read(RGBC);
  5541   0021D0  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  5542   0021D4  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  5543   0021D8  ECD0  F016         	call	_color_read	;wreg free
  5544   0021DC                     
  5545                           ;color.c: 201:     color_normalise(*RGBC, RGBC_n);
  5546   0021DC  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  5547   0021E0  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  5548   0021E4  EE00  F026         	lfsr	0,color_normalise@RGBC
  5549   0021E8  0E07               	movlw	7
  5550   0021EA                     u1821:
  5551   0021EA  CFDB FFEB          	movff	plusw2,plusw0
  5552   0021EE  06E8               	decf	wreg,f,c
  5553   0021F0  E2FC               	bc	u1821
  5554   0021F2  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  5555   0021F6  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  5556   0021FA  EC44  F01B         	call	_color_normalise	;wreg free
  5557   0021FE                     
  5558                           ;color.c: 202:     red->R = RGBC_n->R;
  5559   0021FE  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  5560   002202  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  5561   002206  C036  FFE1         	movff	color_calibration@red,fsr1l
  5562   00220A  C037  FFE2         	movff	color_calibration@red+1,fsr1h
  5563   00220E  CFDE FFE6          	movff	postinc2,postinc1
  5564   002212  CFDD FFE5          	movff	postdec2,postdec1
  5565   002216                     
  5566                           ;color.c: 203:     red->G = RGBC_n->G;
  5567   002216  EE20 F002          	lfsr	2,2
  5568   00221A  5034               	movf	color_calibration@RGBC_n^0,w,c
  5569   00221C  26D9               	addwf	fsr2l,f,c
  5570   00221E  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5571   002220  22DA               	addwfc	fsr2h,f,c
  5572   002222  EE10 F002          	lfsr	1,2
  5573   002226  5036               	movf	color_calibration@red^0,w,c
  5574   002228  26E1               	addwf	fsr1l,f,c
  5575   00222A  5037               	movf	(color_calibration@red+1)^0,w,c
  5576   00222C  22E2               	addwfc	fsr1h,f,c
  5577   00222E  CFDE FFE6          	movff	postinc2,postinc1
  5578   002232  CFDD FFE5          	movff	postdec2,postdec1
  5579   002236                     
  5580                           ;color.c: 204:     red->B = RGBC_n->B;
  5581   002236  EE20 F004          	lfsr	2,4
  5582   00223A  5034               	movf	color_calibration@RGBC_n^0,w,c
  5583   00223C  26D9               	addwf	fsr2l,f,c
  5584   00223E  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5585   002240  22DA               	addwfc	fsr2h,f,c
  5586   002242  EE10 F004          	lfsr	1,4
  5587   002246  5036               	movf	color_calibration@red^0,w,c
  5588   002248  26E1               	addwf	fsr1l,f,c
  5589   00224A  5037               	movf	(color_calibration@red+1)^0,w,c
  5590   00224C  22E2               	addwfc	fsr1h,f,c
  5591   00224E  CFDE FFE6          	movff	postinc2,postinc1
  5592   002252  CFDD FFE5          	movff	postdec2,postdec1
  5593   002256                     
  5594                           ;color.c: 206:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5595   002256  0E29               	movlw	41
  5596   002258  6E47               	movwf	(??_color_calibration+1)^0,c
  5597   00225A  0E96               	movlw	150
  5598   00225C  6E46               	movwf	??_color_calibration^0,c
  5599   00225E  0E7F               	movlw	127
  5600   002260                     u3347:
  5601   002260  2EE8               	decfsz	wreg,f,c
  5602   002262  D7FE               	bra	u3347
  5603   002264  2E46               	decfsz	??_color_calibration^0,f,c
  5604   002266  D7FC               	bra	u3347
  5605   002268  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  5606   00226A  D7FA               	bra	u3347
  5607   00226C  0000               	nop	
  5608   00226E                     
  5609                           ;color.c: 207:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  5610   00226E  8680               	bsf	128,3,c	;volatile
  5611   002270  8E7C               	bsf	124,7,c	;volatile
  5612   002272                     l159:
  5613   002272  B48E               	btfsc	142,2,c	;volatile
  5614   002274  EF3E  F011         	goto	u1831
  5615   002278  EF40  F011         	goto	u1830
  5616   00227C                     u1831:
  5617   00227C  EF39  F011         	goto	l159
  5618   002280                     u1830:
  5619   002280                     
  5620                           ;color.c: 210:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  5621   002280  9680               	bcf	128,3,c	;volatile
  5622   002282  9E7C               	bcf	124,7,c	;volatile
  5623   002284                     
  5624                           ;color.c: 211:     color_read(RGBC);
  5625   002284  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  5626   002288  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  5627   00228C  ECD0  F016         	call	_color_read	;wreg free
  5628   002290                     
  5629                           ;color.c: 212:     color_normalise(*RGBC, RGBC_n);
  5630   002290  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  5631   002294  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  5632   002298  EE00  F026         	lfsr	0,color_normalise@RGBC
  5633   00229C  0E07               	movlw	7
  5634   00229E                     u1841:
  5635   00229E  CFDB FFEB          	movff	plusw2,plusw0
  5636   0022A2  06E8               	decf	wreg,f,c
  5637   0022A4  E2FC               	bc	u1841
  5638   0022A6  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  5639   0022AA  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  5640   0022AE  EC44  F01B         	call	_color_normalise	;wreg free
  5641   0022B2                     
  5642                           ;color.c: 213:     green->R = RGBC_n->R;
  5643   0022B2  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  5644   0022B6  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  5645   0022BA  C038  FFE1         	movff	color_calibration@green,fsr1l
  5646   0022BE  C039  FFE2         	movff	color_calibration@green+1,fsr1h
  5647   0022C2  CFDE FFE6          	movff	postinc2,postinc1
  5648   0022C6  CFDD FFE5          	movff	postdec2,postdec1
  5649   0022CA                     
  5650                           ;color.c: 214:     green->G = RGBC_n->G;
  5651   0022CA  EE20 F002          	lfsr	2,2
  5652   0022CE  5034               	movf	color_calibration@RGBC_n^0,w,c
  5653   0022D0  26D9               	addwf	fsr2l,f,c
  5654   0022D2  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5655   0022D4  22DA               	addwfc	fsr2h,f,c
  5656   0022D6  EE10 F002          	lfsr	1,2
  5657   0022DA  5038               	movf	color_calibration@green^0,w,c
  5658   0022DC  26E1               	addwf	fsr1l,f,c
  5659   0022DE  5039               	movf	(color_calibration@green+1)^0,w,c
  5660   0022E0  22E2               	addwfc	fsr1h,f,c
  5661   0022E2  CFDE FFE6          	movff	postinc2,postinc1
  5662   0022E6  CFDD FFE5          	movff	postdec2,postdec1
  5663   0022EA                     
  5664                           ;color.c: 215:     green->B = RGBC_n->B;
  5665   0022EA  EE20 F004          	lfsr	2,4
  5666   0022EE  5034               	movf	color_calibration@RGBC_n^0,w,c
  5667   0022F0  26D9               	addwf	fsr2l,f,c
  5668   0022F2  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5669   0022F4  22DA               	addwfc	fsr2h,f,c
  5670   0022F6  EE10 F004          	lfsr	1,4
  5671   0022FA  5038               	movf	color_calibration@green^0,w,c
  5672   0022FC  26E1               	addwf	fsr1l,f,c
  5673   0022FE  5039               	movf	(color_calibration@green+1)^0,w,c
  5674   002300  22E2               	addwfc	fsr1h,f,c
  5675   002302  CFDE FFE6          	movff	postinc2,postinc1
  5676   002306  CFDD FFE5          	movff	postdec2,postdec1
  5677   00230A                     
  5678                           ;color.c: 217:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5679   00230A  0E29               	movlw	41
  5680   00230C  6E47               	movwf	(??_color_calibration+1)^0,c
  5681   00230E  0E96               	movlw	150
  5682   002310  6E46               	movwf	??_color_calibration^0,c
  5683   002312  0E7F               	movlw	127
  5684   002314                     u3357:
  5685   002314  2EE8               	decfsz	wreg,f,c
  5686   002316  D7FE               	bra	u3357
  5687   002318  2E46               	decfsz	??_color_calibration^0,f,c
  5688   00231A  D7FC               	bra	u3357
  5689   00231C  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  5690   00231E  D7FA               	bra	u3357
  5691   002320  0000               	nop	
  5692   002322                     
  5693                           ;color.c: 218:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  5694   002322  8680               	bsf	128,3,c	;volatile
  5695   002324  8E7C               	bsf	124,7,c	;volatile
  5696   002326                     l162:
  5697   002326  B48E               	btfsc	142,2,c	;volatile
  5698   002328  EF98  F011         	goto	u1851
  5699   00232C  EF9A  F011         	goto	u1850
  5700   002330                     u1851:
  5701   002330  EF93  F011         	goto	l162
  5702   002334                     u1850:
  5703   002334                     
  5704                           ;color.c: 221:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  5705   002334  9680               	bcf	128,3,c	;volatile
  5706   002336  9E7C               	bcf	124,7,c	;volatile
  5707   002338                     
  5708                           ;color.c: 222:     color_read(RGBC);
  5709   002338  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  5710   00233C  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  5711   002340  ECD0  F016         	call	_color_read	;wreg free
  5712   002344                     
  5713                           ;color.c: 223:     color_normalise(*RGBC, RGBC_n);
  5714   002344  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  5715   002348  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  5716   00234C  EE00  F026         	lfsr	0,color_normalise@RGBC
  5717   002350  0E07               	movlw	7
  5718   002352                     u1861:
  5719   002352  CFDB FFEB          	movff	plusw2,plusw0
  5720   002356  06E8               	decf	wreg,f,c
  5721   002358  E2FC               	bc	u1861
  5722   00235A  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  5723   00235E  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  5724   002362  EC44  F01B         	call	_color_normalise	;wreg free
  5725   002366                     
  5726                           ;color.c: 224:     blue->R = RGBC_n->R;
  5727   002366  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  5728   00236A  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  5729   00236E  C03A  FFE1         	movff	color_calibration@blue,fsr1l
  5730   002372  C03B  FFE2         	movff	color_calibration@blue+1,fsr1h
  5731   002376  CFDE FFE6          	movff	postinc2,postinc1
  5732   00237A  CFDD FFE5          	movff	postdec2,postdec1
  5733   00237E                     
  5734                           ;color.c: 225:     blue->G = RGBC_n->G;
  5735   00237E  EE20 F002          	lfsr	2,2
  5736   002382  5034               	movf	color_calibration@RGBC_n^0,w,c
  5737   002384  26D9               	addwf	fsr2l,f,c
  5738   002386  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5739   002388  22DA               	addwfc	fsr2h,f,c
  5740   00238A  EE10 F002          	lfsr	1,2
  5741   00238E  503A               	movf	color_calibration@blue^0,w,c
  5742   002390  26E1               	addwf	fsr1l,f,c
  5743   002392  503B               	movf	(color_calibration@blue+1)^0,w,c
  5744   002394  22E2               	addwfc	fsr1h,f,c
  5745   002396  CFDE FFE6          	movff	postinc2,postinc1
  5746   00239A  CFDD FFE5          	movff	postdec2,postdec1
  5747   00239E                     
  5748                           ;color.c: 226:     blue->B = RGBC_n->B;
  5749   00239E  EE20 F004          	lfsr	2,4
  5750   0023A2  5034               	movf	color_calibration@RGBC_n^0,w,c
  5751   0023A4  26D9               	addwf	fsr2l,f,c
  5752   0023A6  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5753   0023A8  22DA               	addwfc	fsr2h,f,c
  5754   0023AA  EE10 F004          	lfsr	1,4
  5755   0023AE  503A               	movf	color_calibration@blue^0,w,c
  5756   0023B0  26E1               	addwf	fsr1l,f,c
  5757   0023B2  503B               	movf	(color_calibration@blue+1)^0,w,c
  5758   0023B4  22E2               	addwfc	fsr1h,f,c
  5759   0023B6  CFDE FFE6          	movff	postinc2,postinc1
  5760   0023BA  CFDD FFE5          	movff	postdec2,postdec1
  5761   0023BE                     
  5762                           ;color.c: 228:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5763   0023BE  0E29               	movlw	41
  5764   0023C0  6E47               	movwf	(??_color_calibration+1)^0,c
  5765   0023C2  0E96               	movlw	150
  5766   0023C4  6E46               	movwf	??_color_calibration^0,c
  5767   0023C6  0E7F               	movlw	127
  5768   0023C8                     u3367:
  5769   0023C8  2EE8               	decfsz	wreg,f,c
  5770   0023CA  D7FE               	bra	u3367
  5771   0023CC  2E46               	decfsz	??_color_calibration^0,f,c
  5772   0023CE  D7FC               	bra	u3367
  5773   0023D0  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  5774   0023D2  D7FA               	bra	u3367
  5775   0023D4  0000               	nop	
  5776   0023D6                     
  5777                           ;color.c: 229:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  5778   0023D6  8680               	bsf	128,3,c	;volatile
  5779   0023D8  8E7C               	bsf	124,7,c	;volatile
  5780   0023DA                     l165:
  5781   0023DA  B48E               	btfsc	142,2,c	;volatile
  5782   0023DC  EFF2  F011         	goto	u1871
  5783   0023E0  EFF4  F011         	goto	u1870
  5784   0023E4                     u1871:
  5785   0023E4  EFED  F011         	goto	l165
  5786   0023E8                     u1870:
  5787   0023E8                     
  5788                           ;color.c: 232:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  5789   0023E8  9680               	bcf	128,3,c	;volatile
  5790   0023EA  9E7C               	bcf	124,7,c	;volatile
  5791   0023EC                     
  5792                           ;color.c: 233:     color_read(RGBC);
  5793   0023EC  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  5794   0023F0  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  5795   0023F4  ECD0  F016         	call	_color_read	;wreg free
  5796   0023F8                     
  5797                           ;color.c: 234:     color_normalise(*RGBC, RGBC_n);
  5798   0023F8  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  5799   0023FC  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  5800   002400  EE00  F026         	lfsr	0,color_normalise@RGBC
  5801   002404  0E07               	movlw	7
  5802   002406                     u1881:
  5803   002406  CFDB FFEB          	movff	plusw2,plusw0
  5804   00240A  06E8               	decf	wreg,f,c
  5805   00240C  E2FC               	bc	u1881
  5806   00240E  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  5807   002412  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  5808   002416  EC44  F01B         	call	_color_normalise	;wreg free
  5809   00241A                     
  5810                           ;color.c: 235:     yellow->R = RGBC_n->R;
  5811   00241A  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  5812   00241E  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  5813   002422  C03C  FFE1         	movff	color_calibration@yellow,fsr1l
  5814   002426  C03D  FFE2         	movff	color_calibration@yellow+1,fsr1h
  5815   00242A  CFDE FFE6          	movff	postinc2,postinc1
  5816   00242E  CFDD FFE5          	movff	postdec2,postdec1
  5817   002432                     
  5818                           ;color.c: 236:     yellow->G = RGBC_n->G;
  5819   002432  EE20 F002          	lfsr	2,2
  5820   002436  5034               	movf	color_calibration@RGBC_n^0,w,c
  5821   002438  26D9               	addwf	fsr2l,f,c
  5822   00243A  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5823   00243C  22DA               	addwfc	fsr2h,f,c
  5824   00243E  EE10 F002          	lfsr	1,2
  5825   002442  503C               	movf	color_calibration@yellow^0,w,c
  5826   002444  26E1               	addwf	fsr1l,f,c
  5827   002446  503D               	movf	(color_calibration@yellow+1)^0,w,c
  5828   002448  22E2               	addwfc	fsr1h,f,c
  5829   00244A  CFDE FFE6          	movff	postinc2,postinc1
  5830   00244E  CFDD FFE5          	movff	postdec2,postdec1
  5831   002452                     
  5832                           ;color.c: 237:     yellow->B = RGBC_n->B;
  5833   002452  EE20 F004          	lfsr	2,4
  5834   002456  5034               	movf	color_calibration@RGBC_n^0,w,c
  5835   002458  26D9               	addwf	fsr2l,f,c
  5836   00245A  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5837   00245C  22DA               	addwfc	fsr2h,f,c
  5838   00245E  EE10 F004          	lfsr	1,4
  5839   002462  503C               	movf	color_calibration@yellow^0,w,c
  5840   002464  26E1               	addwf	fsr1l,f,c
  5841   002466  503D               	movf	(color_calibration@yellow+1)^0,w,c
  5842   002468  22E2               	addwfc	fsr1h,f,c
  5843   00246A  CFDE FFE6          	movff	postinc2,postinc1
  5844   00246E  CFDD FFE5          	movff	postdec2,postdec1
  5845   002472                     
  5846                           ;color.c: 239:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5847   002472  0E29               	movlw	41
  5848   002474  6E47               	movwf	(??_color_calibration+1)^0,c
  5849   002476  0E96               	movlw	150
  5850   002478  6E46               	movwf	??_color_calibration^0,c
  5851   00247A  0E7F               	movlw	127
  5852   00247C                     u3377:
  5853   00247C  2EE8               	decfsz	wreg,f,c
  5854   00247E  D7FE               	bra	u3377
  5855   002480  2E46               	decfsz	??_color_calibration^0,f,c
  5856   002482  D7FC               	bra	u3377
  5857   002484  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  5858   002486  D7FA               	bra	u3377
  5859   002488  0000               	nop	
  5860   00248A                     
  5861                           ;color.c: 240:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  5862   00248A  8680               	bsf	128,3,c	;volatile
  5863   00248C  8E7C               	bsf	124,7,c	;volatile
  5864   00248E                     l168:
  5865   00248E  B48E               	btfsc	142,2,c	;volatile
  5866   002490  EF4C  F012         	goto	u1891
  5867   002494  EF4E  F012         	goto	u1890
  5868   002498                     u1891:
  5869   002498  EF47  F012         	goto	l168
  5870   00249C                     u1890:
  5871   00249C                     
  5872                           ;color.c: 243:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  5873   00249C  9680               	bcf	128,3,c	;volatile
  5874   00249E  9E7C               	bcf	124,7,c	;volatile
  5875   0024A0                     
  5876                           ;color.c: 244:     color_read(RGBC);
  5877   0024A0  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  5878   0024A4  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  5879   0024A8  ECD0  F016         	call	_color_read	;wreg free
  5880   0024AC                     
  5881                           ;color.c: 245:     color_normalise(*RGBC, RGBC_n);
  5882   0024AC  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  5883   0024B0  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  5884   0024B4  EE00  F026         	lfsr	0,color_normalise@RGBC
  5885   0024B8  0E07               	movlw	7
  5886   0024BA                     u1901:
  5887   0024BA  CFDB FFEB          	movff	plusw2,plusw0
  5888   0024BE  06E8               	decf	wreg,f,c
  5889   0024C0  E2FC               	bc	u1901
  5890   0024C2  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  5891   0024C6  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  5892   0024CA  EC44  F01B         	call	_color_normalise	;wreg free
  5893   0024CE                     
  5894                           ;color.c: 246:     pink->R = RGBC_n->R;
  5895   0024CE  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  5896   0024D2  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  5897   0024D6  C03E  FFE1         	movff	color_calibration@pink,fsr1l
  5898   0024DA  C03F  FFE2         	movff	color_calibration@pink+1,fsr1h
  5899   0024DE  CFDE FFE6          	movff	postinc2,postinc1
  5900   0024E2  CFDD FFE5          	movff	postdec2,postdec1
  5901   0024E6                     
  5902                           ;color.c: 247:     pink->G = RGBC_n->G;
  5903   0024E6  EE20 F002          	lfsr	2,2
  5904   0024EA  5034               	movf	color_calibration@RGBC_n^0,w,c
  5905   0024EC  26D9               	addwf	fsr2l,f,c
  5906   0024EE  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5907   0024F0  22DA               	addwfc	fsr2h,f,c
  5908   0024F2  EE10 F002          	lfsr	1,2
  5909   0024F6  503E               	movf	color_calibration@pink^0,w,c
  5910   0024F8  26E1               	addwf	fsr1l,f,c
  5911   0024FA  503F               	movf	(color_calibration@pink+1)^0,w,c
  5912   0024FC  22E2               	addwfc	fsr1h,f,c
  5913   0024FE  CFDE FFE6          	movff	postinc2,postinc1
  5914   002502  CFDD FFE5          	movff	postdec2,postdec1
  5915   002506                     
  5916                           ;color.c: 248:     pink->B = RGBC_n->B;
  5917   002506  EE20 F004          	lfsr	2,4
  5918   00250A  5034               	movf	color_calibration@RGBC_n^0,w,c
  5919   00250C  26D9               	addwf	fsr2l,f,c
  5920   00250E  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5921   002510  22DA               	addwfc	fsr2h,f,c
  5922   002512  EE10 F004          	lfsr	1,4
  5923   002516  503E               	movf	color_calibration@pink^0,w,c
  5924   002518  26E1               	addwf	fsr1l,f,c
  5925   00251A  503F               	movf	(color_calibration@pink+1)^0,w,c
  5926   00251C  22E2               	addwfc	fsr1h,f,c
  5927   00251E  CFDE FFE6          	movff	postinc2,postinc1
  5928   002522  CFDD FFE5          	movff	postdec2,postdec1
  5929   002526                     
  5930                           ;color.c: 250:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5931   002526  0E29               	movlw	41
  5932   002528  6E47               	movwf	(??_color_calibration+1)^0,c
  5933   00252A  0E96               	movlw	150
  5934   00252C  6E46               	movwf	??_color_calibration^0,c
  5935   00252E  0E7F               	movlw	127
  5936   002530                     u3387:
  5937   002530  2EE8               	decfsz	wreg,f,c
  5938   002532  D7FE               	bra	u3387
  5939   002534  2E46               	decfsz	??_color_calibration^0,f,c
  5940   002536  D7FC               	bra	u3387
  5941   002538  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  5942   00253A  D7FA               	bra	u3387
  5943   00253C  0000               	nop	
  5944   00253E                     
  5945                           ;color.c: 251:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  5946   00253E  8680               	bsf	128,3,c	;volatile
  5947   002540  8E7C               	bsf	124,7,c	;volatile
  5948   002542                     l171:
  5949   002542  B48E               	btfsc	142,2,c	;volatile
  5950   002544  EFA6  F012         	goto	u1911
  5951   002548  EFA8  F012         	goto	u1910
  5952   00254C                     u1911:
  5953   00254C  EFA1  F012         	goto	l171
  5954   002550                     u1910:
  5955   002550                     
  5956                           ;color.c: 254:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  5957   002550  9680               	bcf	128,3,c	;volatile
  5958   002552  9E7C               	bcf	124,7,c	;volatile
  5959   002554                     
  5960                           ;color.c: 255:     color_read(RGBC);
  5961   002554  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  5962   002558  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  5963   00255C  ECD0  F016         	call	_color_read	;wreg free
  5964   002560                     
  5965                           ;color.c: 256:     color_normalise(*RGBC, RGBC_n);
  5966   002560  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  5967   002564  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  5968   002568  EE00  F026         	lfsr	0,color_normalise@RGBC
  5969   00256C  0E07               	movlw	7
  5970   00256E                     u1921:
  5971   00256E  CFDB FFEB          	movff	plusw2,plusw0
  5972   002572  06E8               	decf	wreg,f,c
  5973   002574  E2FC               	bc	u1921
  5974   002576  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  5975   00257A  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  5976   00257E  EC44  F01B         	call	_color_normalise	;wreg free
  5977   002582                     
  5978                           ;color.c: 257:     orange->R = RGBC_n->R;
  5979   002582  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  5980   002586  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  5981   00258A  C040  FFE1         	movff	color_calibration@orange,fsr1l
  5982   00258E  C041  FFE2         	movff	color_calibration@orange+1,fsr1h
  5983   002592  CFDE FFE6          	movff	postinc2,postinc1
  5984   002596  CFDD FFE5          	movff	postdec2,postdec1
  5985   00259A                     
  5986                           ;color.c: 258:     orange->G = RGBC_n->G;
  5987   00259A  EE20 F002          	lfsr	2,2
  5988   00259E  5034               	movf	color_calibration@RGBC_n^0,w,c
  5989   0025A0  26D9               	addwf	fsr2l,f,c
  5990   0025A2  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  5991   0025A4  22DA               	addwfc	fsr2h,f,c
  5992   0025A6  EE10 F002          	lfsr	1,2
  5993   0025AA  5040               	movf	color_calibration@orange^0,w,c
  5994   0025AC  26E1               	addwf	fsr1l,f,c
  5995   0025AE  5041               	movf	(color_calibration@orange+1)^0,w,c
  5996   0025B0  22E2               	addwfc	fsr1h,f,c
  5997   0025B2  CFDE FFE6          	movff	postinc2,postinc1
  5998   0025B6  CFDD FFE5          	movff	postdec2,postdec1
  5999   0025BA                     
  6000                           ;color.c: 259:     orange->B = RGBC_n->B;
  6001   0025BA  EE20 F004          	lfsr	2,4
  6002   0025BE  5034               	movf	color_calibration@RGBC_n^0,w,c
  6003   0025C0  26D9               	addwf	fsr2l,f,c
  6004   0025C2  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6005   0025C4  22DA               	addwfc	fsr2h,f,c
  6006   0025C6  EE10 F004          	lfsr	1,4
  6007   0025CA  5040               	movf	color_calibration@orange^0,w,c
  6008   0025CC  26E1               	addwf	fsr1l,f,c
  6009   0025CE  5041               	movf	(color_calibration@orange+1)^0,w,c
  6010   0025D0  22E2               	addwfc	fsr1h,f,c
  6011   0025D2  CFDE FFE6          	movff	postinc2,postinc1
  6012   0025D6  CFDD FFE5          	movff	postdec2,postdec1
  6013   0025DA                     
  6014                           ;color.c: 261:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6015   0025DA  0E29               	movlw	41
  6016   0025DC  6E47               	movwf	(??_color_calibration+1)^0,c
  6017   0025DE  0E96               	movlw	150
  6018   0025E0  6E46               	movwf	??_color_calibration^0,c
  6019   0025E2  0E7F               	movlw	127
  6020   0025E4                     u3397:
  6021   0025E4  2EE8               	decfsz	wreg,f,c
  6022   0025E6  D7FE               	bra	u3397
  6023   0025E8  2E46               	decfsz	??_color_calibration^0,f,c
  6024   0025EA  D7FC               	bra	u3397
  6025   0025EC  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6026   0025EE  D7FA               	bra	u3397
  6027   0025F0  0000               	nop	
  6028   0025F2                     
  6029                           ;color.c: 262:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6030   0025F2  8680               	bsf	128,3,c	;volatile
  6031   0025F4  8E7C               	bsf	124,7,c	;volatile
  6032   0025F6                     l174:
  6033   0025F6  B48E               	btfsc	142,2,c	;volatile
  6034   0025F8  EF00  F013         	goto	u1931
  6035   0025FC  EF02  F013         	goto	u1930
  6036   002600                     u1931:
  6037   002600  EFFB  F012         	goto	l174
  6038   002604                     u1930:
  6039   002604                     
  6040                           ;color.c: 265:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6041   002604  9680               	bcf	128,3,c	;volatile
  6042   002606  9E7C               	bcf	124,7,c	;volatile
  6043   002608                     
  6044                           ;color.c: 266:     color_read(RGBC);
  6045   002608  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6046   00260C  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6047   002610  ECD0  F016         	call	_color_read	;wreg free
  6048   002614                     
  6049                           ;color.c: 267:     color_normalise(*RGBC, RGBC_n);
  6050   002614  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6051   002618  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6052   00261C  EE00  F026         	lfsr	0,color_normalise@RGBC
  6053   002620  0E07               	movlw	7
  6054   002622                     u1941:
  6055   002622  CFDB FFEB          	movff	plusw2,plusw0
  6056   002626  06E8               	decf	wreg,f,c
  6057   002628  E2FC               	bc	u1941
  6058   00262A  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6059   00262E  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6060   002632  EC44  F01B         	call	_color_normalise	;wreg free
  6061   002636                     
  6062                           ;color.c: 268:     lightblue->R = RGBC_n->R;
  6063   002636  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6064   00263A  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6065   00263E  C042  FFE1         	movff	color_calibration@lightblue,fsr1l
  6066   002642  C043  FFE2         	movff	color_calibration@lightblue+1,fsr1h
  6067   002646  CFDE FFE6          	movff	postinc2,postinc1
  6068   00264A  CFDD FFE5          	movff	postdec2,postdec1
  6069   00264E                     
  6070                           ;color.c: 269:     lightblue->G = RGBC_n->G;
  6071   00264E  EE20 F002          	lfsr	2,2
  6072   002652  5034               	movf	color_calibration@RGBC_n^0,w,c
  6073   002654  26D9               	addwf	fsr2l,f,c
  6074   002656  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6075   002658  22DA               	addwfc	fsr2h,f,c
  6076   00265A  EE10 F002          	lfsr	1,2
  6077   00265E  5042               	movf	color_calibration@lightblue^0,w,c
  6078   002660  26E1               	addwf	fsr1l,f,c
  6079   002662  5043               	movf	(color_calibration@lightblue+1)^0,w,c
  6080   002664  22E2               	addwfc	fsr1h,f,c
  6081   002666  CFDE FFE6          	movff	postinc2,postinc1
  6082   00266A  CFDD FFE5          	movff	postdec2,postdec1
  6083   00266E                     
  6084                           ;color.c: 270:     lightblue->B = RGBC_n->B;
  6085   00266E  EE20 F004          	lfsr	2,4
  6086   002672  5034               	movf	color_calibration@RGBC_n^0,w,c
  6087   002674  26D9               	addwf	fsr2l,f,c
  6088   002676  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6089   002678  22DA               	addwfc	fsr2h,f,c
  6090   00267A  EE10 F004          	lfsr	1,4
  6091   00267E  5042               	movf	color_calibration@lightblue^0,w,c
  6092   002680  26E1               	addwf	fsr1l,f,c
  6093   002682  5043               	movf	(color_calibration@lightblue+1)^0,w,c
  6094   002684  22E2               	addwfc	fsr1h,f,c
  6095   002686  CFDE FFE6          	movff	postinc2,postinc1
  6096   00268A  CFDD FFE5          	movff	postdec2,postdec1
  6097   00268E                     
  6098                           ;color.c: 272:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6099   00268E  0E29               	movlw	41
  6100   002690  6E47               	movwf	(??_color_calibration+1)^0,c
  6101   002692  0E96               	movlw	150
  6102   002694  6E46               	movwf	??_color_calibration^0,c
  6103   002696  0E7F               	movlw	127
  6104   002698                     u3407:
  6105   002698  2EE8               	decfsz	wreg,f,c
  6106   00269A  D7FE               	bra	u3407
  6107   00269C  2E46               	decfsz	??_color_calibration^0,f,c
  6108   00269E  D7FC               	bra	u3407
  6109   0026A0  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6110   0026A2  D7FA               	bra	u3407
  6111   0026A4  0000               	nop	
  6112   0026A6                     
  6113                           ;color.c: 273:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6114   0026A6  8680               	bsf	128,3,c	;volatile
  6115   0026A8  8E7C               	bsf	124,7,c	;volatile
  6116   0026AA                     l177:
  6117   0026AA  B48E               	btfsc	142,2,c	;volatile
  6118   0026AC  EF5A  F013         	goto	u1951
  6119   0026B0  EF5C  F013         	goto	u1950
  6120   0026B4                     u1951:
  6121   0026B4  EF55  F013         	goto	l177
  6122   0026B8                     u1950:
  6123   0026B8                     
  6124                           ;color.c: 276:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  6125   0026B8  9680               	bcf	128,3,c	;volatile
  6126   0026BA  9E7C               	bcf	124,7,c	;volatile
  6127   0026BC                     
  6128                           ;color.c: 277:     color_read(RGBC);
  6129   0026BC  C032  F010         	movff	color_calibration@RGBC,color_read@RGBC
  6130   0026C0  C033  F011         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  6131   0026C4  ECD0  F016         	call	_color_read	;wreg free
  6132   0026C8                     
  6133                           ;color.c: 278:     color_normalise(*RGBC, RGBC_n);
  6134   0026C8  C032  FFD9         	movff	color_calibration@RGBC,fsr2l
  6135   0026CC  C033  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  6136   0026D0  EE00  F026         	lfsr	0,color_normalise@RGBC
  6137   0026D4  0E07               	movlw	7
  6138   0026D6                     u1961:
  6139   0026D6  CFDB FFEB          	movff	plusw2,plusw0
  6140   0026DA  06E8               	decf	wreg,f,c
  6141   0026DC  E2FC               	bc	u1961
  6142   0026DE  C034  F02E         	movff	color_calibration@RGBC_n,color_normalise@RGBC_n
  6143   0026E2  C035  F02F         	movff	color_calibration@RGBC_n+1,color_normalise@RGBC_n+1
  6144   0026E6  EC44  F01B         	call	_color_normalise	;wreg free
  6145   0026EA                     
  6146                           ;color.c: 279:     white->R = RGBC_n->R;
  6147   0026EA  C034  FFD9         	movff	color_calibration@RGBC_n,fsr2l
  6148   0026EE  C035  FFDA         	movff	color_calibration@RGBC_n+1,fsr2h
  6149   0026F2  C044  FFE1         	movff	color_calibration@white,fsr1l
  6150   0026F6  C045  FFE2         	movff	color_calibration@white+1,fsr1h
  6151   0026FA  CFDE FFE6          	movff	postinc2,postinc1
  6152   0026FE  CFDD FFE5          	movff	postdec2,postdec1
  6153   002702                     
  6154                           ;color.c: 280:     white->G = RGBC_n->G;
  6155   002702  EE20 F002          	lfsr	2,2
  6156   002706  5034               	movf	color_calibration@RGBC_n^0,w,c
  6157   002708  26D9               	addwf	fsr2l,f,c
  6158   00270A  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6159   00270C  22DA               	addwfc	fsr2h,f,c
  6160   00270E  EE10 F002          	lfsr	1,2
  6161   002712  5044               	movf	color_calibration@white^0,w,c
  6162   002714  26E1               	addwf	fsr1l,f,c
  6163   002716  5045               	movf	(color_calibration@white+1)^0,w,c
  6164   002718  22E2               	addwfc	fsr1h,f,c
  6165   00271A  CFDE FFE6          	movff	postinc2,postinc1
  6166   00271E  CFDD FFE5          	movff	postdec2,postdec1
  6167   002722                     
  6168                           ;color.c: 281:     white->B = RGBC_n->B;
  6169   002722  EE20 F004          	lfsr	2,4
  6170   002726  5034               	movf	color_calibration@RGBC_n^0,w,c
  6171   002728  26D9               	addwf	fsr2l,f,c
  6172   00272A  5035               	movf	(color_calibration@RGBC_n+1)^0,w,c
  6173   00272C  22DA               	addwfc	fsr2h,f,c
  6174   00272E  EE10 F004          	lfsr	1,4
  6175   002732  5044               	movf	color_calibration@white^0,w,c
  6176   002734  26E1               	addwf	fsr1l,f,c
  6177   002736  5045               	movf	(color_calibration@white+1)^0,w,c
  6178   002738  22E2               	addwfc	fsr1h,f,c
  6179   00273A  CFDE FFE6          	movff	postinc2,postinc1
  6180   00273E  CFDD FFE5          	movff	postdec2,postdec1
  6181   002742                     
  6182                           ;color.c: 283:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6183   002742  0E29               	movlw	41
  6184   002744  6E47               	movwf	(??_color_calibration+1)^0,c
  6185   002746  0E96               	movlw	150
  6186   002748  6E46               	movwf	??_color_calibration^0,c
  6187   00274A  0E7F               	movlw	127
  6188   00274C                     u3417:
  6189   00274C  2EE8               	decfsz	wreg,f,c
  6190   00274E  D7FE               	bra	u3417
  6191   002750  2E46               	decfsz	??_color_calibration^0,f,c
  6192   002752  D7FC               	bra	u3417
  6193   002754  2E47               	decfsz	(??_color_calibration+1)^0,f,c
  6194   002756  D7FA               	bra	u3417
  6195   002758  0000               	nop	
  6196   00275A                     
  6197                           ;color.c: 284:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  6198   00275A  8680               	bsf	128,3,c	;volatile
  6199   00275C  8E7C               	bsf	124,7,c	;volatile
  6200   00275E  0012               	return		;funcret
  6201   002760                     __end_of_color_calibration:
  6202                           	callstack 0
  6203                           
  6204 ;; *************** function _white_Light *****************
  6205 ;; Defined at:
  6206 ;;		line 59 in file "color.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  state           1    wreg     unsigned char 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  state           1   11[COMRAM] unsigned char 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		wreg, status,2
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6224 ;;Total ram usage:        1 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 5
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_main
  6231 ;;		_color_calibration
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text16
  6236   004064                     __ptext16:
  6237                           	callstack 0
  6238   004064                     _white_Light:
  6239                           	callstack 25
  6240                           
  6241                           ;incstack = 0
  6242                           ;white_Light@state stored from wreg
  6243   004064  6E0C               	movwf	white_Light@state^0,c
  6244   004066                     
  6245                           ;color.c: 59: void white_Light(char state);color.c: 60: {;color.c: 61:     if (state){
  6246   004066  500C               	movf	white_Light@state^0,w,c
  6247   004068  B4D8               	btfsc	status,2,c
  6248   00406A  EF39  F020         	goto	u1611
  6249   00406E  EF3B  F020         	goto	u1610
  6250   004072                     u1611:
  6251   004072  EF40  F020         	goto	l142
  6252   004076                     u1610:
  6253   004076                     
  6254                           ;color.c: 62:         LATGbits.LATG0 = 1;
  6255   004076  807F               	bsf	127,0,c	;volatile
  6256                           
  6257                           ;color.c: 63:         LATEbits.LATE7 = 1;
  6258   004078  8E7D               	bsf	125,7,c	;volatile
  6259                           
  6260                           ;color.c: 64:         LATAbits.LATA3 = 1;
  6261   00407A  8679               	bsf	121,3,c	;volatile
  6262                           
  6263                           ;color.c: 65:     }
  6264   00407C  EF43  F020         	goto	l144
  6265   004080                     l142:
  6266                           
  6267                           ;color.c: 67:         LATGbits.LATG0 = 0;
  6268   004080  907F               	bcf	127,0,c	;volatile
  6269                           
  6270                           ;color.c: 68:         LATEbits.LATE7 = 0;
  6271   004082  9E7D               	bcf	125,7,c	;volatile
  6272                           
  6273                           ;color.c: 69:         LATAbits.LATA3 = 0;
  6274   004084  9679               	bcf	121,3,c	;volatile
  6275   004086                     l144:
  6276   004086  0012               	return		;funcret
  6277   004088                     __end_of_white_Light:
  6278                           	callstack 0
  6279                           
  6280 ;; *************** function _color_read *****************
  6281 ;; Defined at:
  6282 ;;		line 74 in file "color.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;  RGBC            2   15[COMRAM] PTR struct RGBC_val
  6285 ;;		 -> main@RGBC(8), 
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;		None
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      void 
  6290 ;; Registers used:
  6291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6299 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6300 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6301 ;;Total ram usage:        9 bytes
  6302 ;; Hardware stack levels used: 1
  6303 ;; Hardware stack levels required when called: 7
  6304 ;; This function calls:
  6305 ;;		_I2C_2_Master_Read
  6306 ;;		_I2C_2_Master_RepStart
  6307 ;;		_I2C_2_Master_Start
  6308 ;;		_I2C_2_Master_Stop
  6309 ;;		_I2C_2_Master_Write
  6310 ;; This function is called by:
  6311 ;;		_main
  6312 ;;		_color_calibration
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text17
  6317   002DA0                     __ptext17:
  6318                           	callstack 0
  6319   002DA0                     _color_read:
  6320                           	callstack 23
  6321   002DA0                     
  6322                           ;color.c: 74: void color_read(RGBC_val *RGBC);color.c: 75: {;color.c: 76:  I2C_2_Master_
      +                          Start();
  6323   002DA0  ECC9  F020         	call	_I2C_2_Master_Start	;wreg free
  6324                           
  6325                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  6326   002DA4  0E52               	movlw	82
  6327   002DA6  ECB3  F020         	call	_I2C_2_Master_Write
  6328                           
  6329                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x16);
  6330   002DAA  0EB6               	movlw	182
  6331   002DAC  ECB3  F020         	call	_I2C_2_Master_Write
  6332                           
  6333                           ;color.c: 79:  I2C_2_Master_RepStart();
  6334   002DB0  ECCE  F020         	call	_I2C_2_Master_RepStart	;wreg free
  6335                           
  6336                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  6337   002DB4  0E53               	movlw	83
  6338   002DB6  ECB3  F020         	call	_I2C_2_Master_Write
  6339   002DBA                     
  6340                           ;color.c: 81:  RGBC->R=I2C_2_Master_Read(1);
  6341   002DBA  0E01               	movlw	1
  6342   002DBC  EC50  F01F         	call	_I2C_2_Master_Read
  6343   002DC0  6E12               	movwf	??_color_read^0,c
  6344   002DC2  6A13               	clrf	(??_color_read+1)^0,c
  6345   002DC4  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6346   002DC8  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6347   002DCC  C012  FFDE         	movff	??_color_read,postinc2
  6348   002DD0  C013  FFDD         	movff	??_color_read+1,postdec2
  6349   002DD4                     
  6350                           ;color.c: 82:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  6351   002DD4  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6352   002DD8  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6353   002DDC  CFDE F012          	movff	postinc2,??_color_read
  6354   002DE0  CFDD F013          	movff	postdec2,??_color_read+1
  6355   002DE4  0E00               	movlw	0
  6356   002DE6  EC50  F01F         	call	_I2C_2_Master_Read
  6357   002DEA  6E14               	movwf	(??_color_read+2)^0,c
  6358   002DEC  5014               	movf	(??_color_read+2)^0,w,c
  6359   002DEE  6E16               	movwf	(??_color_read+4)^0,c
  6360   002DF0  6A15               	clrf	(??_color_read+3)^0,c
  6361   002DF2  5012               	movf	??_color_read^0,w,c
  6362   002DF4  1015               	iorwf	(??_color_read+3)^0,w,c
  6363   002DF6  6E17               	movwf	(??_color_read+5)^0,c
  6364   002DF8  5013               	movf	(??_color_read+1)^0,w,c
  6365   002DFA  1016               	iorwf	(??_color_read+4)^0,w,c
  6366   002DFC  6E18               	movwf	(??_color_read+6)^0,c
  6367   002DFE  C010  FFD9         	movff	color_read@RGBC,fsr2l
  6368   002E02  C011  FFDA         	movff	color_read@RGBC+1,fsr2h
  6369   002E06  C017  FFDE         	movff	??_color_read+5,postinc2
  6370   002E0A  C018  FFDD         	movff	??_color_read+6,postdec2
  6371                           
  6372                           ;color.c: 83:  I2C_2_Master_Stop();
  6373   002E0E  ECC4  F020         	call	_I2C_2_Master_Stop	;wreg free
  6374                           
  6375                           ;color.c: 85:     I2C_2_Master_Start();
  6376   002E12  ECC9  F020         	call	_I2C_2_Master_Start	;wreg free
  6377                           
  6378                           ;color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  6379   002E16  0E52               	movlw	82
  6380   002E18  ECB3  F020         	call	_I2C_2_Master_Write
  6381                           
  6382                           ;color.c: 87:  I2C_2_Master_Write(0xA0 | 0x18);
  6383   002E1C  0EB8               	movlw	184
  6384   002E1E  ECB3  F020         	call	_I2C_2_Master_Write
  6385                           
  6386                           ;color.c: 88:  I2C_2_Master_RepStart();
  6387   002E22  ECCE  F020         	call	_I2C_2_Master_RepStart	;wreg free
  6388                           
  6389                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  6390   002E26  0E53               	movlw	83
  6391   002E28  ECB3  F020         	call	_I2C_2_Master_Write
  6392   002E2C                     
  6393                           ;color.c: 90:  RGBC->G=I2C_2_Master_Read(1);
  6394   002E2C  0E01               	movlw	1
  6395   002E2E  EC50  F01F         	call	_I2C_2_Master_Read
  6396   002E32  6E12               	movwf	??_color_read^0,c
  6397   002E34  6A13               	clrf	(??_color_read+1)^0,c
  6398   002E36  EE20 F002          	lfsr	2,2
  6399   002E3A  5010               	movf	color_read@RGBC^0,w,c
  6400   002E3C  26D9               	addwf	fsr2l,f,c
  6401   002E3E  5011               	movf	(color_read@RGBC+1)^0,w,c
  6402   002E40  22DA               	addwfc	fsr2h,f,c
  6403   002E42  C012  FFDE         	movff	??_color_read,postinc2
  6404   002E46  C013  FFDD         	movff	??_color_read+1,postdec2
  6405   002E4A                     
  6406                           ;color.c: 91:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  6407   002E4A  EE20 F002          	lfsr	2,2
  6408   002E4E  5010               	movf	color_read@RGBC^0,w,c
  6409   002E50  26D9               	addwf	fsr2l,f,c
  6410   002E52  5011               	movf	(color_read@RGBC+1)^0,w,c
  6411   002E54  22DA               	addwfc	fsr2h,f,c
  6412   002E56  CFDE F012          	movff	postinc2,??_color_read
  6413   002E5A  CFDD F013          	movff	postdec2,??_color_read+1
  6414   002E5E  0E00               	movlw	0
  6415   002E60  EC50  F01F         	call	_I2C_2_Master_Read
  6416   002E64  6E14               	movwf	(??_color_read+2)^0,c
  6417   002E66  5014               	movf	(??_color_read+2)^0,w,c
  6418   002E68  6E16               	movwf	(??_color_read+4)^0,c
  6419   002E6A  6A15               	clrf	(??_color_read+3)^0,c
  6420   002E6C  5012               	movf	??_color_read^0,w,c
  6421   002E6E  1015               	iorwf	(??_color_read+3)^0,w,c
  6422   002E70  6E17               	movwf	(??_color_read+5)^0,c
  6423   002E72  5013               	movf	(??_color_read+1)^0,w,c
  6424   002E74  1016               	iorwf	(??_color_read+4)^0,w,c
  6425   002E76  6E18               	movwf	(??_color_read+6)^0,c
  6426   002E78  EE20 F002          	lfsr	2,2
  6427   002E7C  5010               	movf	color_read@RGBC^0,w,c
  6428   002E7E  26D9               	addwf	fsr2l,f,c
  6429   002E80  5011               	movf	(color_read@RGBC+1)^0,w,c
  6430   002E82  22DA               	addwfc	fsr2h,f,c
  6431   002E84  C017  FFDE         	movff	??_color_read+5,postinc2
  6432   002E88  C018  FFDD         	movff	??_color_read+6,postdec2
  6433                           
  6434                           ;color.c: 92:  I2C_2_Master_Stop();
  6435   002E8C  ECC4  F020         	call	_I2C_2_Master_Stop	;wreg free
  6436                           
  6437                           ;color.c: 94:     I2C_2_Master_Start();
  6438   002E90  ECC9  F020         	call	_I2C_2_Master_Start	;wreg free
  6439                           
  6440                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6441   002E94  0E52               	movlw	82
  6442   002E96  ECB3  F020         	call	_I2C_2_Master_Write
  6443                           
  6444                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  6445   002E9A  0EBA               	movlw	186
  6446   002E9C  ECB3  F020         	call	_I2C_2_Master_Write
  6447                           
  6448                           ;color.c: 97:  I2C_2_Master_RepStart();
  6449   002EA0  ECCE  F020         	call	_I2C_2_Master_RepStart	;wreg free
  6450                           
  6451                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6452   002EA4  0E53               	movlw	83
  6453   002EA6  ECB3  F020         	call	_I2C_2_Master_Write
  6454   002EAA                     
  6455                           ;color.c: 99:  RGBC->B=I2C_2_Master_Read(1);
  6456   002EAA  0E01               	movlw	1
  6457   002EAC  EC50  F01F         	call	_I2C_2_Master_Read
  6458   002EB0  6E12               	movwf	??_color_read^0,c
  6459   002EB2  6A13               	clrf	(??_color_read+1)^0,c
  6460   002EB4  EE20 F004          	lfsr	2,4
  6461   002EB8  5010               	movf	color_read@RGBC^0,w,c
  6462   002EBA  26D9               	addwf	fsr2l,f,c
  6463   002EBC  5011               	movf	(color_read@RGBC+1)^0,w,c
  6464   002EBE  22DA               	addwfc	fsr2h,f,c
  6465   002EC0  C012  FFDE         	movff	??_color_read,postinc2
  6466   002EC4  C013  FFDD         	movff	??_color_read+1,postdec2
  6467   002EC8                     
  6468                           ;color.c: 100:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  6469   002EC8  EE20 F004          	lfsr	2,4
  6470   002ECC  5010               	movf	color_read@RGBC^0,w,c
  6471   002ECE  26D9               	addwf	fsr2l,f,c
  6472   002ED0  5011               	movf	(color_read@RGBC+1)^0,w,c
  6473   002ED2  22DA               	addwfc	fsr2h,f,c
  6474   002ED4  CFDE F012          	movff	postinc2,??_color_read
  6475   002ED8  CFDD F013          	movff	postdec2,??_color_read+1
  6476   002EDC  0E00               	movlw	0
  6477   002EDE  EC50  F01F         	call	_I2C_2_Master_Read
  6478   002EE2  6E14               	movwf	(??_color_read+2)^0,c
  6479   002EE4  5014               	movf	(??_color_read+2)^0,w,c
  6480   002EE6  6E16               	movwf	(??_color_read+4)^0,c
  6481   002EE8  6A15               	clrf	(??_color_read+3)^0,c
  6482   002EEA  5012               	movf	??_color_read^0,w,c
  6483   002EEC  1015               	iorwf	(??_color_read+3)^0,w,c
  6484   002EEE  6E17               	movwf	(??_color_read+5)^0,c
  6485   002EF0  5013               	movf	(??_color_read+1)^0,w,c
  6486   002EF2  1016               	iorwf	(??_color_read+4)^0,w,c
  6487   002EF4  6E18               	movwf	(??_color_read+6)^0,c
  6488   002EF6  EE20 F004          	lfsr	2,4
  6489   002EFA  5010               	movf	color_read@RGBC^0,w,c
  6490   002EFC  26D9               	addwf	fsr2l,f,c
  6491   002EFE  5011               	movf	(color_read@RGBC+1)^0,w,c
  6492   002F00  22DA               	addwfc	fsr2h,f,c
  6493   002F02  C017  FFDE         	movff	??_color_read+5,postinc2
  6494   002F06  C018  FFDD         	movff	??_color_read+6,postdec2
  6495                           
  6496                           ;color.c: 101:  I2C_2_Master_Stop();
  6497   002F0A  ECC4  F020         	call	_I2C_2_Master_Stop	;wreg free
  6498                           
  6499                           ;color.c: 103:     I2C_2_Master_Start();
  6500   002F0E  ECC9  F020         	call	_I2C_2_Master_Start	;wreg free
  6501                           
  6502                           ;color.c: 104:  I2C_2_Master_Write(0x52 | 0x00);
  6503   002F12  0E52               	movlw	82
  6504   002F14  ECB3  F020         	call	_I2C_2_Master_Write
  6505                           
  6506                           ;color.c: 105:  I2C_2_Master_Write(0xA0 | 0x14);
  6507   002F18  0EB4               	movlw	180
  6508   002F1A  ECB3  F020         	call	_I2C_2_Master_Write
  6509                           
  6510                           ;color.c: 106:  I2C_2_Master_RepStart();
  6511   002F1E  ECCE  F020         	call	_I2C_2_Master_RepStart	;wreg free
  6512                           
  6513                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x01);
  6514   002F22  0E53               	movlw	83
  6515   002F24  ECB3  F020         	call	_I2C_2_Master_Write
  6516   002F28                     
  6517                           ;color.c: 108:  RGBC->C=I2C_2_Master_Read(1);
  6518   002F28  0E01               	movlw	1
  6519   002F2A  EC50  F01F         	call	_I2C_2_Master_Read
  6520   002F2E  6E12               	movwf	??_color_read^0,c
  6521   002F30  6A13               	clrf	(??_color_read+1)^0,c
  6522   002F32  EE20 F006          	lfsr	2,6
  6523   002F36  5010               	movf	color_read@RGBC^0,w,c
  6524   002F38  26D9               	addwf	fsr2l,f,c
  6525   002F3A  5011               	movf	(color_read@RGBC+1)^0,w,c
  6526   002F3C  22DA               	addwfc	fsr2h,f,c
  6527   002F3E  C012  FFDE         	movff	??_color_read,postinc2
  6528   002F42  C013  FFDD         	movff	??_color_read+1,postdec2
  6529   002F46                     
  6530                           ;color.c: 109:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  6531   002F46  EE20 F006          	lfsr	2,6
  6532   002F4A  5010               	movf	color_read@RGBC^0,w,c
  6533   002F4C  26D9               	addwf	fsr2l,f,c
  6534   002F4E  5011               	movf	(color_read@RGBC+1)^0,w,c
  6535   002F50  22DA               	addwfc	fsr2h,f,c
  6536   002F52  CFDE F012          	movff	postinc2,??_color_read
  6537   002F56  CFDD F013          	movff	postdec2,??_color_read+1
  6538   002F5A  0E00               	movlw	0
  6539   002F5C  EC50  F01F         	call	_I2C_2_Master_Read
  6540   002F60  6E14               	movwf	(??_color_read+2)^0,c
  6541   002F62  5014               	movf	(??_color_read+2)^0,w,c
  6542   002F64  6E16               	movwf	(??_color_read+4)^0,c
  6543   002F66  6A15               	clrf	(??_color_read+3)^0,c
  6544   002F68  5012               	movf	??_color_read^0,w,c
  6545   002F6A  1015               	iorwf	(??_color_read+3)^0,w,c
  6546   002F6C  6E17               	movwf	(??_color_read+5)^0,c
  6547   002F6E  5013               	movf	(??_color_read+1)^0,w,c
  6548   002F70  1016               	iorwf	(??_color_read+4)^0,w,c
  6549   002F72  6E18               	movwf	(??_color_read+6)^0,c
  6550   002F74  EE20 F006          	lfsr	2,6
  6551   002F78  5010               	movf	color_read@RGBC^0,w,c
  6552   002F7A  26D9               	addwf	fsr2l,f,c
  6553   002F7C  5011               	movf	(color_read@RGBC+1)^0,w,c
  6554   002F7E  22DA               	addwfc	fsr2h,f,c
  6555   002F80  C017  FFDE         	movff	??_color_read+5,postinc2
  6556   002F84  C018  FFDD         	movff	??_color_read+6,postdec2
  6557                           
  6558                           ;color.c: 110:  I2C_2_Master_Stop();
  6559   002F88  ECC4  F020         	call	_I2C_2_Master_Stop	;wreg free
  6560   002F8C  0012               	return		;funcret
  6561   002F8E                     __end_of_color_read:
  6562                           	callstack 0
  6563                           
  6564 ;; *************** function _I2C_2_Master_Write *****************
  6565 ;; Defined at:
  6566 ;;		line 45 in file "i2c.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  data_byte       1    wreg     unsigned char 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;  data_byte       1   12[COMRAM] unsigned char 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1    wreg      void 
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0, cstack
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6583 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6584 ;;Total ram usage:        1 bytes
  6585 ;; Hardware stack levels used: 1
  6586 ;; Hardware stack levels required when called: 6
  6587 ;; This function calls:
  6588 ;;		_I2C_2_Master_Idle
  6589 ;; This function is called by:
  6590 ;;		_color_clear_init_interrupts
  6591 ;;		_color_writetoaddr
  6592 ;;		_color_read
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           	psect	text18
  6597   004166                     __ptext18:
  6598                           	callstack 0
  6599   004166                     _I2C_2_Master_Write:
  6600                           	callstack 23
  6601                           
  6602                           ;incstack = 0
  6603                           ;I2C_2_Master_Write@data_byte stored from wreg
  6604   004166  6E0D               	movwf	I2C_2_Master_Write@data_byte^0,c
  6605   004168                     
  6606                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6607   004168  ECD1  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6608   00416C                     
  6609                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6610   00416C  C00D  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6611   004170  0012               	return		;funcret
  6612   004172                     __end_of_I2C_2_Master_Write:
  6613                           	callstack 0
  6614                           
  6615 ;; *************** function _I2C_2_Master_Stop *****************
  6616 ;; Defined at:
  6617 ;;		line 39 in file "i2c.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;		None
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;		None
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1    wreg      void 
  6624 ;; Registers used:
  6625 ;;		wreg, status,2, status,0, cstack
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6635 ;;Total ram usage:        0 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; Hardware stack levels required when called: 6
  6638 ;; This function calls:
  6639 ;;		_I2C_2_Master_Idle
  6640 ;; This function is called by:
  6641 ;;		_color_clear_init_interrupts
  6642 ;;		_color_writetoaddr
  6643 ;;		_color_read
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text19
  6648   004188                     __ptext19:
  6649                           	callstack 0
  6650   004188                     _I2C_2_Master_Stop:
  6651                           	callstack 23
  6652   004188                     
  6653                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6654   004188  ECD1  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6655   00418C                     
  6656                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6657   00418C  010E               	movlb	14	; () banked
  6658   00418E  85DA               	bsf	218,2,b	;volatile
  6659   004190                     
  6660                           ; BSR set to: 14
  6661   004190  0012               	return		;funcret
  6662   004192                     __end_of_I2C_2_Master_Stop:
  6663                           	callstack 0
  6664                           
  6665 ;; *************** function _I2C_2_Master_Start *****************
  6666 ;; Defined at:
  6667 ;;		line 27 in file "i2c.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;		None
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;		None
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  1    wreg      void 
  6674 ;; Registers used:
  6675 ;;		wreg, status,2, status,0, cstack
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6685 ;;Total ram usage:        0 bytes
  6686 ;; Hardware stack levels used: 1
  6687 ;; Hardware stack levels required when called: 6
  6688 ;; This function calls:
  6689 ;;		_I2C_2_Master_Idle
  6690 ;; This function is called by:
  6691 ;;		_color_clear_init_interrupts
  6692 ;;		_color_writetoaddr
  6693 ;;		_color_read
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text20
  6698   004192                     __ptext20:
  6699                           	callstack 0
  6700   004192                     _I2C_2_Master_Start:
  6701                           	callstack 23
  6702   004192                     
  6703                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6704   004192  ECD1  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6705   004196                     
  6706                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6707   004196  010E               	movlb	14	; () banked
  6708   004198  81DA               	bsf	218,0,b	;volatile
  6709   00419A                     
  6710                           ; BSR set to: 14
  6711   00419A  0012               	return		;funcret
  6712   00419C                     __end_of_I2C_2_Master_Start:
  6713                           	callstack 0
  6714                           
  6715 ;; *************** function _I2C_2_Master_RepStart *****************
  6716 ;; Defined at:
  6717 ;;		line 33 in file "i2c.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;		None
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  1    wreg      void 
  6724 ;; Registers used:
  6725 ;;		wreg, status,2, status,0, cstack
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6735 ;;Total ram usage:        0 bytes
  6736 ;; Hardware stack levels used: 1
  6737 ;; Hardware stack levels required when called: 6
  6738 ;; This function calls:
  6739 ;;		_I2C_2_Master_Idle
  6740 ;; This function is called by:
  6741 ;;		_color_read
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text21
  6746   00419C                     __ptext21:
  6747                           	callstack 0
  6748   00419C                     _I2C_2_Master_RepStart:
  6749                           	callstack 23
  6750   00419C                     
  6751                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6752   00419C  ECD1  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6753   0041A0                     
  6754                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6755   0041A0  010E               	movlb	14	; () banked
  6756   0041A2  83DA               	bsf	218,1,b	;volatile
  6757   0041A4                     
  6758                           ; BSR set to: 14
  6759   0041A4  0012               	return		;funcret
  6760   0041A6                     __end_of_I2C_2_Master_RepStart:
  6761                           	callstack 0
  6762                           
  6763 ;; *************** function _I2C_2_Master_Read *****************
  6764 ;; Defined at:
  6765 ;;		line 51 in file "i2c.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  ack             1    wreg     unsigned char 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  ack             1   13[COMRAM] unsigned char 
  6770 ;;  tmp             1   14[COMRAM] unsigned char 
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  1    wreg      unsigned char 
  6773 ;; Registers used:
  6774 ;;		wreg, status,2, status,0, cstack
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6783 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6784 ;;Total ram usage:        3 bytes
  6785 ;; Hardware stack levels used: 1
  6786 ;; Hardware stack levels required when called: 6
  6787 ;; This function calls:
  6788 ;;		_I2C_2_Master_Idle
  6789 ;; This function is called by:
  6790 ;;		_color_read
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text22
  6795   003EA0                     __ptext22:
  6796                           	callstack 0
  6797   003EA0                     _I2C_2_Master_Read:
  6798                           	callstack 23
  6799                           
  6800                           ; BSR set to: 14
  6801                           ;incstack = 0
  6802                           ;I2C_2_Master_Read@ack stored from wreg
  6803   003EA0  6E0E               	movwf	I2C_2_Master_Read@ack^0,c
  6804   003EA2                     
  6805                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6806   003EA2  ECD1  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6807   003EA6                     
  6808                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6809   003EA6  010E               	movlb	14	; () banked
  6810   003EA8  87DA               	bsf	218,3,b	;volatile
  6811                           
  6812                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6813   003EAA  ECD1  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6814   003EAE                     
  6815                           ;i2c.c: 57:   tmp = SSP2BUF;
  6816   003EAE  CED5 F00F          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6817                           
  6818                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6819   003EB2  ECD1  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6820   003EB6                     
  6821                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6822   003EB6  500E               	movf	I2C_2_Master_Read@ack^0,w,c
  6823   003EB8  B4D8               	btfsc	status,2,c
  6824   003EBA  EF61  F01F         	goto	u1361
  6825   003EBE  EF65  F01F         	goto	u1360
  6826   003EC2                     u1361:
  6827   003EC2  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  6828   003EC4  2A0D               	incf	??_I2C_2_Master_Read^0,f,c
  6829   003EC6  EF66  F01F         	goto	u1378
  6830   003ECA                     u1360:
  6831   003ECA  6A0D               	clrf	??_I2C_2_Master_Read^0,c
  6832   003ECC                     u1378:
  6833   003ECC  3A0D               	swapf	??_I2C_2_Master_Read^0,f,c
  6834   003ECE  460D               	rlncf	??_I2C_2_Master_Read^0,f,c
  6835   003ED0  010E               	movlb	14	; () banked
  6836   003ED2  51DA               	movf	218,w,b	;volatile
  6837   003ED4  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  6838   003ED6  0BDF               	andlw	-33
  6839   003ED8  180D               	xorwf	??_I2C_2_Master_Read^0,w,c
  6840   003EDA  6FDA               	movwf	218,b	;volatile
  6841   003EDC                     
  6842                           ; BSR set to: 14
  6843                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6844   003EDC  89DA               	bsf	218,4,b	;volatile
  6845   003EDE                     
  6846                           ; BSR set to: 14
  6847                           ;i2c.c: 61:   return tmp;
  6848   003EDE  500F               	movf	I2C_2_Master_Read@tmp^0,w,c
  6849   003EE0                     
  6850                           ; BSR set to: 14
  6851   003EE0  0012               	return		;funcret
  6852   003EE2                     __end_of_I2C_2_Master_Read:
  6853                           	callstack 0
  6854                           
  6855 ;; *************** function _I2C_2_Master_Idle *****************
  6856 ;; Defined at:
  6857 ;;		line 22 in file "i2c.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;		None
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;		None
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1    wreg      void 
  6864 ;; Registers used:
  6865 ;;		wreg, status,2, status,0
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6875 ;;Total ram usage:        1 bytes
  6876 ;; Hardware stack levels used: 1
  6877 ;; Hardware stack levels required when called: 5
  6878 ;; This function calls:
  6879 ;;		Nothing
  6880 ;; This function is called by:
  6881 ;;		_I2C_2_Master_Start
  6882 ;;		_I2C_2_Master_RepStart
  6883 ;;		_I2C_2_Master_Stop
  6884 ;;		_I2C_2_Master_Write
  6885 ;;		_I2C_2_Master_Read
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889                           	psect	text23
  6890   003FA2                     __ptext23:
  6891                           	callstack 0
  6892   003FA2                     _I2C_2_Master_Idle:
  6893                           	callstack 23
  6894   003FA2                     l210:
  6895   003FA2  010E               	movlb	14	; () banked
  6896   003FA4  B5D8               	btfsc	216,2,b	;volatile
  6897   003FA6  EFD7  F01F         	goto	u1231
  6898   003FAA  EFD9  F01F         	goto	u1230
  6899   003FAE                     u1231:
  6900   003FAE  EFD1  F01F         	goto	l210
  6901   003FB2                     u1230:
  6902   003FB2                     
  6903                           ; BSR set to: 14
  6904   003FB2  CEDA F00C          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6905   003FB6  0E1F               	movlw	31
  6906   003FB8  160C               	andwf	??_I2C_2_Master_Idle^0,f,c
  6907   003FBA  A4D8               	btfss	status,2,c
  6908   003FBC  EFE2  F01F         	goto	u1241
  6909   003FC0  EFE4  F01F         	goto	u1240
  6910   003FC4                     u1241:
  6911   003FC4  EFD1  F01F         	goto	l210
  6912   003FC8                     u1240:
  6913   003FC8                     
  6914                           ; BSR set to: 14
  6915   003FC8  0012               	return		;funcret
  6916   003FCA                     __end_of_I2C_2_Master_Idle:
  6917                           	callstack 0
  6918                           
  6919 ;; *************** function _color_normalise *****************
  6920 ;; Defined at:
  6921 ;;		line 114 in file "color.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;  RGBC            8   37[COMRAM] struct RGBC_val
  6924 ;;  RGBC_n          2   45[COMRAM] PTR struct RGBC_val
  6925 ;;		 -> main@RGBC_n(8), 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;		None
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6937 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6939 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6940 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6941 ;;Total ram usage:       12 bytes
  6942 ;; Hardware stack levels used: 1
  6943 ;; Hardware stack levels required when called: 6
  6944 ;; This function calls:
  6945 ;;		___aldiv
  6946 ;;		___lmul
  6947 ;; This function is called by:
  6948 ;;		_main
  6949 ;;		_color_calibration
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text24
  6954   003688                     __ptext24:
  6955                           	callstack 0
  6956   003688                     _color_normalise:
  6957                           	callstack 24
  6958   003688                     
  6959                           ;color.c: 132:     RGBC_n->C = RGBC.C;
  6960   003688  EE20 F006          	lfsr	2,6
  6961   00368C  502E               	movf	color_normalise@RGBC_n^0,w,c
  6962   00368E  26D9               	addwf	fsr2l,f,c
  6963   003690  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  6964   003692  22DA               	addwfc	fsr2h,f,c
  6965   003694  C02C  FFDE         	movff	color_normalise@RGBC+6,postinc2
  6966   003698  C02D  FFDD         	movff	color_normalise@RGBC+7,postdec2
  6967   00369C                     
  6968                           ;color.c: 133:     RGBC_n->R = 1000L*RGBC.R/(RGBC.R+RGBC.G+RGBC.B);
  6969   00369C  C026  F00C         	movff	color_normalise@RGBC,___lmul@multiplier
  6970   0036A0  C027  F00D         	movff	color_normalise@RGBC+1,___lmul@multiplier+1
  6971   0036A4  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  6972   0036A6  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  6973   0036A8  0EE8               	movlw	232
  6974   0036AA  6E10               	movwf	___lmul@multiplicand^0,c
  6975   0036AC  0E03               	movlw	3
  6976   0036AE  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  6977   0036B0  0E00               	movlw	0
  6978   0036B2  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  6979   0036B4  0E00               	movlw	0
  6980   0036B6  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  6981   0036B8  ECC3  F01E         	call	___lmul	;wreg free
  6982   0036BC  C00C  F018         	movff	?___lmul,___aldiv@dividend
  6983   0036C0  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  6984   0036C4  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  6985   0036C8  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  6986   0036CC  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  6987   0036CE  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  6988   0036D0  6E30               	movwf	??_color_normalise^0,c
  6989   0036D2  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  6990   0036D4  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  6991   0036D6  6E31               	movwf	(??_color_normalise+1)^0,c
  6992   0036D8  5026               	movf	color_normalise@RGBC^0,w,c
  6993   0036DA  2630               	addwf	??_color_normalise^0,f,c
  6994   0036DC  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  6995   0036DE  2231               	addwfc	(??_color_normalise+1)^0,f,c
  6996   0036E0  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  6997   0036E4  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  6998   0036E8  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  6999   0036EA  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  7000   0036EC  ECE9  F01B         	call	___aldiv	;wreg free
  7001   0036F0  C02E  FFD9         	movff	color_normalise@RGBC_n,fsr2l
  7002   0036F4  C02F  FFDA         	movff	color_normalise@RGBC_n+1,fsr2h
  7003   0036F8  C018  FFDE         	movff	?___aldiv,postinc2
  7004   0036FC  C019  FFDD         	movff	?___aldiv+1,postdec2
  7005   003700                     
  7006                           ;color.c: 134:     RGBC_n->G = 1000L*RGBC.G/(RGBC.R+RGBC.G+RGBC.B);
  7007   003700  C028  F00C         	movff	color_normalise@RGBC+2,___lmul@multiplier
  7008   003704  C029  F00D         	movff	color_normalise@RGBC+3,___lmul@multiplier+1
  7009   003708  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  7010   00370A  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  7011   00370C  0EE8               	movlw	232
  7012   00370E  6E10               	movwf	___lmul@multiplicand^0,c
  7013   003710  0E03               	movlw	3
  7014   003712  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7015   003714  0E00               	movlw	0
  7016   003716  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7017   003718  0E00               	movlw	0
  7018   00371A  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7019   00371C  ECC3  F01E         	call	___lmul	;wreg free
  7020   003720  C00C  F018         	movff	?___lmul,___aldiv@dividend
  7021   003724  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  7022   003728  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  7023   00372C  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  7024   003730  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  7025   003732  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  7026   003734  6E30               	movwf	??_color_normalise^0,c
  7027   003736  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  7028   003738  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  7029   00373A  6E31               	movwf	(??_color_normalise+1)^0,c
  7030   00373C  5026               	movf	color_normalise@RGBC^0,w,c
  7031   00373E  2630               	addwf	??_color_normalise^0,f,c
  7032   003740  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  7033   003742  2231               	addwfc	(??_color_normalise+1)^0,f,c
  7034   003744  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  7035   003748  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  7036   00374C  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  7037   00374E  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  7038   003750  ECE9  F01B         	call	___aldiv	;wreg free
  7039   003754  EE20 F002          	lfsr	2,2
  7040   003758  502E               	movf	color_normalise@RGBC_n^0,w,c
  7041   00375A  26D9               	addwf	fsr2l,f,c
  7042   00375C  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  7043   00375E  22DA               	addwfc	fsr2h,f,c
  7044   003760  C018  FFDE         	movff	?___aldiv,postinc2
  7045   003764  C019  FFDD         	movff	?___aldiv+1,postdec2
  7046   003768                     
  7047                           ;color.c: 135:     RGBC_n->B = 1000L*RGBC.B/(RGBC.R+RGBC.G+RGBC.B);
  7048   003768  C02A  F00C         	movff	color_normalise@RGBC+4,___lmul@multiplier
  7049   00376C  C02B  F00D         	movff	color_normalise@RGBC+5,___lmul@multiplier+1
  7050   003770  6A0E               	clrf	(___lmul@multiplier+2)^0,c
  7051   003772  6A0F               	clrf	(___lmul@multiplier+3)^0,c
  7052   003774  0EE8               	movlw	232
  7053   003776  6E10               	movwf	___lmul@multiplicand^0,c
  7054   003778  0E03               	movlw	3
  7055   00377A  6E11               	movwf	(___lmul@multiplicand+1)^0,c
  7056   00377C  0E00               	movlw	0
  7057   00377E  6E12               	movwf	(___lmul@multiplicand+2)^0,c
  7058   003780  0E00               	movlw	0
  7059   003782  6E13               	movwf	(___lmul@multiplicand+3)^0,c
  7060   003784  ECC3  F01E         	call	___lmul	;wreg free
  7061   003788  C00C  F018         	movff	?___lmul,___aldiv@dividend
  7062   00378C  C00D  F019         	movff	?___lmul+1,___aldiv@dividend+1
  7063   003790  C00E  F01A         	movff	?___lmul+2,___aldiv@dividend+2
  7064   003794  C00F  F01B         	movff	?___lmul+3,___aldiv@dividend+3
  7065   003798  502A               	movf	(color_normalise@RGBC+4)^0,w,c
  7066   00379A  2428               	addwf	(color_normalise@RGBC+2)^0,w,c
  7067   00379C  6E30               	movwf	??_color_normalise^0,c
  7068   00379E  502B               	movf	(color_normalise@RGBC+5)^0,w,c
  7069   0037A0  2029               	addwfc	(color_normalise@RGBC+3)^0,w,c
  7070   0037A2  6E31               	movwf	(??_color_normalise+1)^0,c
  7071   0037A4  5026               	movf	color_normalise@RGBC^0,w,c
  7072   0037A6  2630               	addwf	??_color_normalise^0,f,c
  7073   0037A8  5027               	movf	(color_normalise@RGBC+1)^0,w,c
  7074   0037AA  2231               	addwfc	(??_color_normalise+1)^0,f,c
  7075   0037AC  C030  F01C         	movff	??_color_normalise,___aldiv@divisor
  7076   0037B0  C031  F01D         	movff	??_color_normalise+1,___aldiv@divisor+1
  7077   0037B4  6A1E               	clrf	(___aldiv@divisor+2)^0,c
  7078   0037B6  6A1F               	clrf	(___aldiv@divisor+3)^0,c
  7079   0037B8  ECE9  F01B         	call	___aldiv	;wreg free
  7080   0037BC  EE20 F004          	lfsr	2,4
  7081   0037C0  502E               	movf	color_normalise@RGBC_n^0,w,c
  7082   0037C2  26D9               	addwf	fsr2l,f,c
  7083   0037C4  502F               	movf	(color_normalise@RGBC_n+1)^0,w,c
  7084   0037C6  22DA               	addwfc	fsr2h,f,c
  7085   0037C8  C018  FFDE         	movff	?___aldiv,postinc2
  7086   0037CC  C019  FFDD         	movff	?___aldiv+1,postdec2
  7087   0037D0  0012               	return		;funcret
  7088   0037D2                     __end_of_color_normalise:
  7089                           	callstack 0
  7090                           
  7091 ;; *************** function ___lmul *****************
  7092 ;; Defined at:
  7093 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  multiplier      4   11[COMRAM] unsigned long 
  7096 ;;  multiplicand    4   15[COMRAM] unsigned long 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;  product         4   19[COMRAM] unsigned long 
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  4   11[COMRAM] unsigned long 
  7101 ;; Registers used:
  7102 ;;		wreg, status,2, status,0
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/0
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7108 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7109 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7111 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7112 ;;Total ram usage:       12 bytes
  7113 ;; Hardware stack levels used: 1
  7114 ;; Hardware stack levels required when called: 5
  7115 ;; This function calls:
  7116 ;;		Nothing
  7117 ;; This function is called by:
  7118 ;;		_color_normalise
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           	psect	text25
  7123   003D86                     __ptext25:
  7124                           	callstack 0
  7125   003D86                     ___lmul:
  7126                           	callstack 24
  7127   003D86  0E00               	movlw	0
  7128   003D88  6E14               	movwf	___lmul@product^0,c
  7129   003D8A  0E00               	movlw	0
  7130   003D8C  6E15               	movwf	(___lmul@product+1)^0,c
  7131   003D8E  0E00               	movlw	0
  7132   003D90  6E16               	movwf	(___lmul@product+2)^0,c
  7133   003D92  0E00               	movlw	0
  7134   003D94  6E17               	movwf	(___lmul@product+3)^0,c
  7135   003D96                     l2860:
  7136   003D96  A00C               	btfss	___lmul@multiplier^0,0,c
  7137   003D98  EFD0  F01E         	goto	u1531
  7138   003D9C  EFD2  F01E         	goto	u1530
  7139   003DA0                     u1531:
  7140   003DA0  EFDA  F01E         	goto	l2864
  7141   003DA4                     u1530:
  7142   003DA4  5010               	movf	___lmul@multiplicand^0,w,c
  7143   003DA6  2614               	addwf	___lmul@product^0,f,c
  7144   003DA8  5011               	movf	(___lmul@multiplicand+1)^0,w,c
  7145   003DAA  2215               	addwfc	(___lmul@product+1)^0,f,c
  7146   003DAC  5012               	movf	(___lmul@multiplicand+2)^0,w,c
  7147   003DAE  2216               	addwfc	(___lmul@product+2)^0,f,c
  7148   003DB0  5013               	movf	(___lmul@multiplicand+3)^0,w,c
  7149   003DB2  2217               	addwfc	(___lmul@product+3)^0,f,c
  7150   003DB4                     l2864:
  7151   003DB4  90D8               	bcf	status,0,c
  7152   003DB6  3610               	rlcf	___lmul@multiplicand^0,f,c
  7153   003DB8  3611               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7154   003DBA  3612               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7155   003DBC  3613               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7156   003DBE  90D8               	bcf	status,0,c
  7157   003DC0  320F               	rrcf	(___lmul@multiplier+3)^0,f,c
  7158   003DC2  320E               	rrcf	(___lmul@multiplier+2)^0,f,c
  7159   003DC4  320D               	rrcf	(___lmul@multiplier+1)^0,f,c
  7160   003DC6  320C               	rrcf	___lmul@multiplier^0,f,c
  7161   003DC8  500C               	movf	___lmul@multiplier^0,w,c
  7162   003DCA  100D               	iorwf	(___lmul@multiplier+1)^0,w,c
  7163   003DCC  100E               	iorwf	(___lmul@multiplier+2)^0,w,c
  7164   003DCE  100F               	iorwf	(___lmul@multiplier+3)^0,w,c
  7165   003DD0  A4D8               	btfss	status,2,c
  7166   003DD2  EFED  F01E         	goto	u1541
  7167   003DD6  EFEF  F01E         	goto	u1540
  7168   003DDA                     u1541:
  7169   003DDA  EFCB  F01E         	goto	l2860
  7170   003DDE                     u1540:
  7171   003DDE  C014  F00C         	movff	___lmul@product,?___lmul
  7172   003DE2  C015  F00D         	movff	___lmul@product+1,?___lmul+1
  7173   003DE6  C016  F00E         	movff	___lmul@product+2,?___lmul+2
  7174   003DEA  C017  F00F         	movff	___lmul@product+3,?___lmul+3
  7175   003DEE  0012               	return		;funcret
  7176   003DF0                     __end_of___lmul:
  7177                           	callstack 0
  7178                           
  7179 ;; *************** function ___aldiv *****************
  7180 ;; Defined at:
  7181 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  dividend        4   23[COMRAM] long 
  7184 ;;  divisor         4   27[COMRAM] long 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  quotient        4   33[COMRAM] long 
  7187 ;;  sign            1   32[COMRAM] unsigned char 
  7188 ;;  counter         1   31[COMRAM] unsigned char 
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  4   23[COMRAM] long 
  7191 ;; Registers used:
  7192 ;;		wreg, status,2, status,0
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7198 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7199 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7201 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7202 ;;Total ram usage:       14 bytes
  7203 ;; Hardware stack levels used: 1
  7204 ;; Hardware stack levels required when called: 5
  7205 ;; This function calls:
  7206 ;;		Nothing
  7207 ;; This function is called by:
  7208 ;;		_color_normalise
  7209 ;; This function uses a non-reentrant model
  7210 ;;
  7211                           
  7212                           	psect	text26
  7213   0037D2                     __ptext26:
  7214                           	callstack 0
  7215   0037D2                     ___aldiv:
  7216                           	callstack 24
  7217   0037D2  0E00               	movlw	0
  7218   0037D4  6E21               	movwf	___aldiv@sign^0,c
  7219   0037D6  BE1F               	btfsc	(___aldiv@divisor+3)^0,7,c
  7220   0037D8  EFF2  F01B         	goto	u1550
  7221   0037DC  EFF0  F01B         	goto	u1551
  7222   0037E0                     u1551:
  7223   0037E0  EFFC  F01B         	goto	l2876
  7224   0037E4                     u1550:
  7225   0037E4  1E1F               	comf	(___aldiv@divisor+3)^0,f,c
  7226   0037E6  1E1E               	comf	(___aldiv@divisor+2)^0,f,c
  7227   0037E8  1E1D               	comf	(___aldiv@divisor+1)^0,f,c
  7228   0037EA  6C1C               	negf	___aldiv@divisor^0,c
  7229   0037EC  0E00               	movlw	0
  7230   0037EE  221D               	addwfc	(___aldiv@divisor+1)^0,f,c
  7231   0037F0  221E               	addwfc	(___aldiv@divisor+2)^0,f,c
  7232   0037F2  221F               	addwfc	(___aldiv@divisor+3)^0,f,c
  7233   0037F4  0E01               	movlw	1
  7234   0037F6  6E21               	movwf	___aldiv@sign^0,c
  7235   0037F8                     l2876:
  7236   0037F8  BE1B               	btfsc	(___aldiv@dividend+3)^0,7,c
  7237   0037FA  EF03  F01C         	goto	u1560
  7238   0037FE  EF01  F01C         	goto	u1561
  7239   003802                     u1561:
  7240   003802  EF0D  F01C         	goto	l2882
  7241   003806                     u1560:
  7242   003806  1E1B               	comf	(___aldiv@dividend+3)^0,f,c
  7243   003808  1E1A               	comf	(___aldiv@dividend+2)^0,f,c
  7244   00380A  1E19               	comf	(___aldiv@dividend+1)^0,f,c
  7245   00380C  6C18               	negf	___aldiv@dividend^0,c
  7246   00380E  0E00               	movlw	0
  7247   003810  2219               	addwfc	(___aldiv@dividend+1)^0,f,c
  7248   003812  221A               	addwfc	(___aldiv@dividend+2)^0,f,c
  7249   003814  221B               	addwfc	(___aldiv@dividend+3)^0,f,c
  7250   003816  0E01               	movlw	1
  7251   003818  1A21               	xorwf	___aldiv@sign^0,f,c
  7252   00381A                     l2882:
  7253   00381A  0E00               	movlw	0
  7254   00381C  6E22               	movwf	___aldiv@quotient^0,c
  7255   00381E  0E00               	movlw	0
  7256   003820  6E23               	movwf	(___aldiv@quotient+1)^0,c
  7257   003822  0E00               	movlw	0
  7258   003824  6E24               	movwf	(___aldiv@quotient+2)^0,c
  7259   003826  0E00               	movlw	0
  7260   003828  6E25               	movwf	(___aldiv@quotient+3)^0,c
  7261   00382A  501C               	movf	___aldiv@divisor^0,w,c
  7262   00382C  101D               	iorwf	(___aldiv@divisor+1)^0,w,c
  7263   00382E  101E               	iorwf	(___aldiv@divisor+2)^0,w,c
  7264   003830  101F               	iorwf	(___aldiv@divisor+3)^0,w,c
  7265   003832  B4D8               	btfsc	status,2,c
  7266   003834  EF1E  F01C         	goto	u1571
  7267   003838  EF20  F01C         	goto	u1570
  7268   00383C                     u1571:
  7269   00383C  EF56  F01C         	goto	l2904
  7270   003840                     u1570:
  7271   003840  0E01               	movlw	1
  7272   003842  6E20               	movwf	___aldiv@counter^0,c
  7273   003844  EF2A  F01C         	goto	l2890
  7274   003848                     l2888:
  7275   003848  90D8               	bcf	status,0,c
  7276   00384A  361C               	rlcf	___aldiv@divisor^0,f,c
  7277   00384C  361D               	rlcf	(___aldiv@divisor+1)^0,f,c
  7278   00384E  361E               	rlcf	(___aldiv@divisor+2)^0,f,c
  7279   003850  361F               	rlcf	(___aldiv@divisor+3)^0,f,c
  7280   003852  2A20               	incf	___aldiv@counter^0,f,c
  7281   003854                     l2890:
  7282   003854  AE1F               	btfss	(___aldiv@divisor+3)^0,7,c
  7283   003856  EF2F  F01C         	goto	u1581
  7284   00385A  EF31  F01C         	goto	u1580
  7285   00385E                     u1581:
  7286   00385E  EF24  F01C         	goto	l2888
  7287   003862                     u1580:
  7288   003862                     l2892:
  7289   003862  90D8               	bcf	status,0,c
  7290   003864  3622               	rlcf	___aldiv@quotient^0,f,c
  7291   003866  3623               	rlcf	(___aldiv@quotient+1)^0,f,c
  7292   003868  3624               	rlcf	(___aldiv@quotient+2)^0,f,c
  7293   00386A  3625               	rlcf	(___aldiv@quotient+3)^0,f,c
  7294   00386C  501C               	movf	___aldiv@divisor^0,w,c
  7295   00386E  5C18               	subwf	___aldiv@dividend^0,w,c
  7296   003870  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7297   003872  5819               	subwfb	(___aldiv@dividend+1)^0,w,c
  7298   003874  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7299   003876  581A               	subwfb	(___aldiv@dividend+2)^0,w,c
  7300   003878  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7301   00387A  581B               	subwfb	(___aldiv@dividend+3)^0,w,c
  7302   00387C  A0D8               	btfss	status,0,c
  7303   00387E  EF43  F01C         	goto	u1591
  7304   003882  EF45  F01C         	goto	u1590
  7305   003886                     u1591:
  7306   003886  EF4E  F01C         	goto	l2900
  7307   00388A                     u1590:
  7308   00388A  501C               	movf	___aldiv@divisor^0,w,c
  7309   00388C  5E18               	subwf	___aldiv@dividend^0,f,c
  7310   00388E  501D               	movf	(___aldiv@divisor+1)^0,w,c
  7311   003890  5A19               	subwfb	(___aldiv@dividend+1)^0,f,c
  7312   003892  501E               	movf	(___aldiv@divisor+2)^0,w,c
  7313   003894  5A1A               	subwfb	(___aldiv@dividend+2)^0,f,c
  7314   003896  501F               	movf	(___aldiv@divisor+3)^0,w,c
  7315   003898  5A1B               	subwfb	(___aldiv@dividend+3)^0,f,c
  7316   00389A  8022               	bsf	___aldiv@quotient^0,0,c
  7317   00389C                     l2900:
  7318   00389C  90D8               	bcf	status,0,c
  7319   00389E  321F               	rrcf	(___aldiv@divisor+3)^0,f,c
  7320   0038A0  321E               	rrcf	(___aldiv@divisor+2)^0,f,c
  7321   0038A2  321D               	rrcf	(___aldiv@divisor+1)^0,f,c
  7322   0038A4  321C               	rrcf	___aldiv@divisor^0,f,c
  7323   0038A6  2E20               	decfsz	___aldiv@counter^0,f,c
  7324   0038A8  EF31  F01C         	goto	l2892
  7325   0038AC                     l2904:
  7326   0038AC  5021               	movf	___aldiv@sign^0,w,c
  7327   0038AE  B4D8               	btfsc	status,2,c
  7328   0038B0  EF5C  F01C         	goto	u1601
  7329   0038B4  EF5E  F01C         	goto	u1600
  7330   0038B8                     u1601:
  7331   0038B8  EF66  F01C         	goto	l2908
  7332   0038BC                     u1600:
  7333   0038BC  1E25               	comf	(___aldiv@quotient+3)^0,f,c
  7334   0038BE  1E24               	comf	(___aldiv@quotient+2)^0,f,c
  7335   0038C0  1E23               	comf	(___aldiv@quotient+1)^0,f,c
  7336   0038C2  6C22               	negf	___aldiv@quotient^0,c
  7337   0038C4  0E00               	movlw	0
  7338   0038C6  2223               	addwfc	(___aldiv@quotient+1)^0,f,c
  7339   0038C8  2224               	addwfc	(___aldiv@quotient+2)^0,f,c
  7340   0038CA  2225               	addwfc	(___aldiv@quotient+3)^0,f,c
  7341   0038CC                     l2908:
  7342   0038CC  C022  F018         	movff	___aldiv@quotient,?___aldiv
  7343   0038D0  C023  F019         	movff	___aldiv@quotient+1,?___aldiv+1
  7344   0038D4  C024  F01A         	movff	___aldiv@quotient+2,?___aldiv+2
  7345   0038D8  C025  F01B         	movff	___aldiv@quotient+3,?___aldiv+3
  7346   0038DC  0012               	return		;funcret
  7347   0038DE                     __end_of___aldiv:
  7348                           	callstack 0
  7349                           
  7350 ;; *************** function _calibration *****************
  7351 ;; Defined at:
  7352 ;;		line 482 in file "dc_motor.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  7355 ;;		 -> main@motorL(10), 
  7356 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  7357 ;;		 -> main@motorR(10), 
  7358 ;;  turnSpeed       1   48[COMRAM] unsigned char 
  7359 ;;  turnDuration    2   49[COMRAM] PTR unsigned char 
  7360 ;;		 -> main@turnDuration(1), 
  7361 ;;  turnRamp        1   51[COMRAM] unsigned char 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;		None
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  1    wreg      void 
  7366 ;; Registers used:
  7367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7368 ;; Tracked objects:
  7369 ;;		On entry : 0/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7373 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7375 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7376 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7377 ;;Total ram usage:       10 bytes
  7378 ;; Hardware stack levels used: 1
  7379 ;; Hardware stack levels required when called: 8
  7380 ;; This function calls:
  7381 ;;		_turnLeft
  7382 ;;		_turnRight
  7383 ;; This function is called by:
  7384 ;;		_main
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text27
  7389   002B06                     __ptext27:
  7390                           	callstack 0
  7391   002B06                     _calibration:
  7392                           	callstack 22
  7393   002B06                     
  7394                           ;dc_motor.c: 482: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 483: {;dc_motor.c: 485:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7395   002B06  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7396   002B0A  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7397   002B0E  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7398   002B12  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7399   002B16  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7400   002B1A  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7401   002B1E  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7402   002B22  50DF               	movf	indf2,w,c
  7403   002B24  6E24               	movwf	turnLeft@turnDuration^0,c
  7404   002B26  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7405   002B2A  ECA4  F019         	call	_turnLeft	;wreg free
  7406   002B2E                     
  7407                           ;dc_motor.c: 486:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7408   002B2E  0E05               	movlw	5
  7409   002B30  6E36               	movwf	(??_calibration+1)^0,c
  7410   002B32  0E0F               	movlw	15
  7411   002B34  6E35               	movwf	??_calibration^0,c
  7412   002B36  0EF1               	movlw	241
  7413   002B38                     u3427:
  7414   002B38  2EE8               	decfsz	wreg,f,c
  7415   002B3A  D7FE               	bra	u3427
  7416   002B3C  2E35               	decfsz	??_calibration^0,f,c
  7417   002B3E  D7FC               	bra	u3427
  7418   002B40  2E36               	decfsz	(??_calibration+1)^0,f,c
  7419   002B42  D7FA               	bra	u3427
  7420   002B44  0000               	nop	
  7421   002B46                     
  7422                           ;dc_motor.c: 487:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7423   002B46  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7424   002B4A  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7425   002B4E  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7426   002B52  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7427   002B56  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7428   002B5A  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7429   002B5E  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7430   002B62  50DF               	movf	indf2,w,c
  7431   002B64  6E24               	movwf	turnLeft@turnDuration^0,c
  7432   002B66  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7433   002B6A  ECA4  F019         	call	_turnLeft	;wreg free
  7434                           
  7435                           ;dc_motor.c: 488:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7436   002B6E  0E05               	movlw	5
  7437   002B70  6E36               	movwf	(??_calibration+1)^0,c
  7438   002B72  0E0F               	movlw	15
  7439   002B74  6E35               	movwf	??_calibration^0,c
  7440   002B76  0EF1               	movlw	241
  7441   002B78                     u3437:
  7442   002B78  2EE8               	decfsz	wreg,f,c
  7443   002B7A  D7FE               	bra	u3437
  7444   002B7C  2E35               	decfsz	??_calibration^0,f,c
  7445   002B7E  D7FC               	bra	u3437
  7446   002B80  2E36               	decfsz	(??_calibration+1)^0,f,c
  7447   002B82  D7FA               	bra	u3437
  7448   002B84  0000               	nop	
  7449   002B86                     
  7450                           ;dc_motor.c: 489:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7451   002B86  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7452   002B8A  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7453   002B8E  C02F  F021         	movff	calibration@mR,turnRight@mR
  7454   002B92  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7455   002B96  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7456   002B9A  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7457   002B9E  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7458   002BA2  50DF               	movf	indf2,w,c
  7459   002BA4  6E24               	movwf	turnRight@turnDuration^0,c
  7460   002BA6  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7461   002BAA  ECBA  F018         	call	_turnRight	;wreg free
  7462   002BAE                     
  7463                           ;dc_motor.c: 490:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7464   002BAE  0E05               	movlw	5
  7465   002BB0  6E36               	movwf	(??_calibration+1)^0,c
  7466   002BB2  0E0F               	movlw	15
  7467   002BB4  6E35               	movwf	??_calibration^0,c
  7468   002BB6  0EF1               	movlw	241
  7469   002BB8                     u3447:
  7470   002BB8  2EE8               	decfsz	wreg,f,c
  7471   002BBA  D7FE               	bra	u3447
  7472   002BBC  2E35               	decfsz	??_calibration^0,f,c
  7473   002BBE  D7FC               	bra	u3447
  7474   002BC0  2E36               	decfsz	(??_calibration+1)^0,f,c
  7475   002BC2  D7FA               	bra	u3447
  7476   002BC4  0000               	nop	
  7477                           
  7478                           ;dc_motor.c: 491:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7479   002BC6  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7480   002BCA  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7481   002BCE  C02F  F021         	movff	calibration@mR,turnRight@mR
  7482   002BD2  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7483   002BD6  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7484   002BDA  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7485   002BDE  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7486   002BE2  50DF               	movf	indf2,w,c
  7487   002BE4  6E24               	movwf	turnRight@turnDuration^0,c
  7488   002BE6  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7489   002BEA  ECBA  F018         	call	_turnRight	;wreg free
  7490   002BEE                     l642:
  7491   002BEE  A48E               	btfss	142,2,c	;volatile
  7492   002BF0  EFFC  F015         	goto	u1971
  7493   002BF4  EFFE  F015         	goto	u1970
  7494   002BF8                     u1971:
  7495   002BF8  EF05  F016         	goto	l646
  7496   002BFC                     u1970:
  7497   002BFC  B68E               	btfsc	142,3,c	;volatile
  7498   002BFE  EF03  F016         	goto	u1981
  7499   002C02  EF05  F016         	goto	u1980
  7500   002C06                     u1981:
  7501   002C06  EFF7  F015         	goto	l642
  7502   002C0A                     u1980:
  7503   002C0A                     l646:
  7504                           
  7505                           ;dc_motor.c: 496:         if (!PORTFbits.RF2 && *turnDuration>0) {
  7506   002C0A  B48E               	btfsc	142,2,c	;volatile
  7507   002C0C  EF0A  F016         	goto	u1991
  7508   002C10  EF0C  F016         	goto	u1990
  7509   002C14                     u1991:
  7510   002C14  EF20  F016         	goto	l647
  7511   002C18                     u1990:
  7512   002C18  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7513   002C1C  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7514   002C20  50DF               	movf	indf2,w,c
  7515   002C22  B4D8               	btfsc	status,2,c
  7516   002C24  EF16  F016         	goto	u2001
  7517   002C28  EF18  F016         	goto	u2000
  7518   002C2C                     u2001:
  7519   002C2C  EF20  F016         	goto	l647
  7520   002C30                     u2000:
  7521   002C30                     
  7522                           ;dc_motor.c: 497:             (*turnDuration)--;
  7523   002C30  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7524   002C34  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7525   002C38  06DF               	decf	indf2,f,c
  7526   002C3A                     
  7527                           ;dc_motor.c: 498:             LATDbits.LATD7 = 1;
  7528   002C3A  8E7C               	bsf	124,7,c	;volatile
  7529                           
  7530                           ;dc_motor.c: 499:         }
  7531   002C3C  EF2D  F016         	goto	l3364
  7532   002C40                     l647:
  7533   002C40  B68E               	btfsc	142,3,c	;volatile
  7534   002C42  EF25  F016         	goto	u2011
  7535   002C46  EF27  F016         	goto	u2010
  7536   002C4A                     u2011:
  7537   002C4A  EF2D  F016         	goto	l3364
  7538   002C4E                     u2010:
  7539   002C4E                     
  7540                           ;dc_motor.c: 502:             (*turnDuration)++;
  7541   002C4E  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7542   002C52  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7543   002C56  2ADF               	incf	indf2,f,c
  7544   002C58                     
  7545                           ;dc_motor.c: 503:             LATHbits.LATH3 = 1;
  7546   002C58  8680               	bsf	128,3,c	;volatile
  7547   002C5A                     l3364:
  7548                           
  7549                           ;dc_motor.c: 506:         _delay((unsigned long)((500)*(64000000/4000.0)));
  7550   002C5A  0E29               	movlw	41
  7551   002C5C  6E36               	movwf	(??_calibration+1)^0,c
  7552   002C5E  0E96               	movlw	150
  7553   002C60  6E35               	movwf	??_calibration^0,c
  7554   002C62  0E7F               	movlw	127
  7555   002C64                     u3457:
  7556   002C64  2EE8               	decfsz	wreg,f,c
  7557   002C66  D7FE               	bra	u3457
  7558   002C68  2E35               	decfsz	??_calibration^0,f,c
  7559   002C6A  D7FC               	bra	u3457
  7560   002C6C  2E36               	decfsz	(??_calibration+1)^0,f,c
  7561   002C6E  D7FA               	bra	u3457
  7562   002C70  0000               	nop	
  7563   002C72                     
  7564                           ;dc_motor.c: 508:         if (!PORTFbits.RF3) {
  7565   002C72  B68E               	btfsc	142,3,c	;volatile
  7566   002C74  EF3E  F016         	goto	u2021
  7567   002C78  EF40  F016         	goto	u2020
  7568   002C7C                     u2021:
  7569   002C7C  EF47  F016         	goto	l650
  7570   002C80                     u2020:
  7571   002C80                     
  7572                           ;dc_motor.c: 509:             (*turnDuration)--;
  7573   002C80  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7574   002C84  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7575   002C88  06DF               	decf	indf2,f,c
  7576                           
  7577                           ;dc_motor.c: 510:             break;
  7578   002C8A  EFBF  F016         	goto	l651
  7579   002C8E                     l650:
  7580                           
  7581                           ;dc_motor.c: 513:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7582   002C8E  9680               	bcf	128,3,c	;volatile
  7583   002C90  9E7C               	bcf	124,7,c	;volatile
  7584   002C92                     
  7585                           ;dc_motor.c: 516:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7586   002C92  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7587   002C96  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7588   002C9A  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7589   002C9E  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7590   002CA2  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7591   002CA6  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7592   002CAA  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7593   002CAE  50DF               	movf	indf2,w,c
  7594   002CB0  6E24               	movwf	turnLeft@turnDuration^0,c
  7595   002CB2  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7596   002CB6  ECA4  F019         	call	_turnLeft	;wreg free
  7597   002CBA                     
  7598                           ;dc_motor.c: 517:         _delay((unsigned long)((50)*(64000000/4000.0)));
  7599   002CBA  0E05               	movlw	5
  7600   002CBC  6E36               	movwf	(??_calibration+1)^0,c
  7601   002CBE  0E0F               	movlw	15
  7602   002CC0  6E35               	movwf	??_calibration^0,c
  7603   002CC2  0EF1               	movlw	241
  7604   002CC4                     u3467:
  7605   002CC4  2EE8               	decfsz	wreg,f,c
  7606   002CC6  D7FE               	bra	u3467
  7607   002CC8  2E35               	decfsz	??_calibration^0,f,c
  7608   002CCA  D7FC               	bra	u3467
  7609   002CCC  2E36               	decfsz	(??_calibration+1)^0,f,c
  7610   002CCE  D7FA               	bra	u3467
  7611   002CD0  0000               	nop	
  7612   002CD2                     
  7613                           ;dc_motor.c: 518:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7614   002CD2  C02D  F01F         	movff	calibration@mL,turnLeft@mL
  7615   002CD6  C02E  F020         	movff	calibration@mL+1,turnLeft@mL+1
  7616   002CDA  C02F  F021         	movff	calibration@mR,turnLeft@mR
  7617   002CDE  C030  F022         	movff	calibration@mR+1,turnLeft@mR+1
  7618   002CE2  C031  F023         	movff	calibration@turnSpeed,turnLeft@turnSpeed
  7619   002CE6  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7620   002CEA  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7621   002CEE  50DF               	movf	indf2,w,c
  7622   002CF0  6E24               	movwf	turnLeft@turnDuration^0,c
  7623   002CF2  C034  F025         	movff	calibration@turnRamp,turnLeft@turnRamp
  7624   002CF6  ECA4  F019         	call	_turnLeft	;wreg free
  7625                           
  7626                           ;dc_motor.c: 519:         _delay((unsigned long)((50)*(64000000/4000.0)));
  7627   002CFA  0E05               	movlw	5
  7628   002CFC  6E36               	movwf	(??_calibration+1)^0,c
  7629   002CFE  0E0F               	movlw	15
  7630   002D00  6E35               	movwf	??_calibration^0,c
  7631   002D02  0EF1               	movlw	241
  7632   002D04                     u3477:
  7633   002D04  2EE8               	decfsz	wreg,f,c
  7634   002D06  D7FE               	bra	u3477
  7635   002D08  2E35               	decfsz	??_calibration^0,f,c
  7636   002D0A  D7FC               	bra	u3477
  7637   002D0C  2E36               	decfsz	(??_calibration+1)^0,f,c
  7638   002D0E  D7FA               	bra	u3477
  7639   002D10  0000               	nop	
  7640   002D12                     
  7641                           ;dc_motor.c: 520:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7642   002D12  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7643   002D16  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7644   002D1A  C02F  F021         	movff	calibration@mR,turnRight@mR
  7645   002D1E  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7646   002D22  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7647   002D26  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7648   002D2A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7649   002D2E  50DF               	movf	indf2,w,c
  7650   002D30  6E24               	movwf	turnRight@turnDuration^0,c
  7651   002D32  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7652   002D36  ECBA  F018         	call	_turnRight	;wreg free
  7653   002D3A                     
  7654                           ;dc_motor.c: 521:         _delay((unsigned long)((50)*(64000000/4000.0)));
  7655   002D3A  0E05               	movlw	5
  7656   002D3C  6E36               	movwf	(??_calibration+1)^0,c
  7657   002D3E  0E0F               	movlw	15
  7658   002D40  6E35               	movwf	??_calibration^0,c
  7659   002D42  0EF1               	movlw	241
  7660   002D44                     u3487:
  7661   002D44  2EE8               	decfsz	wreg,f,c
  7662   002D46  D7FE               	bra	u3487
  7663   002D48  2E35               	decfsz	??_calibration^0,f,c
  7664   002D4A  D7FC               	bra	u3487
  7665   002D4C  2E36               	decfsz	(??_calibration+1)^0,f,c
  7666   002D4E  D7FA               	bra	u3487
  7667   002D50  0000               	nop	
  7668                           
  7669                           ;dc_motor.c: 522:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
  7670   002D52  C02D  F01F         	movff	calibration@mL,turnRight@mL
  7671   002D56  C02E  F020         	movff	calibration@mL+1,turnRight@mL+1
  7672   002D5A  C02F  F021         	movff	calibration@mR,turnRight@mR
  7673   002D5E  C030  F022         	movff	calibration@mR+1,turnRight@mR+1
  7674   002D62  C031  F023         	movff	calibration@turnSpeed,turnRight@turnSpeed
  7675   002D66  C032  FFD9         	movff	calibration@turnDuration,fsr2l
  7676   002D6A  C033  FFDA         	movff	calibration@turnDuration+1,fsr2h
  7677   002D6E  50DF               	movf	indf2,w,c
  7678   002D70  6E24               	movwf	turnRight@turnDuration^0,c
  7679   002D72  C034  F025         	movff	calibration@turnRamp,turnRight@turnRamp
  7680   002D76  ECBA  F018         	call	_turnRight	;wreg free
  7681   002D7A  EFF7  F015         	goto	l642
  7682   002D7E                     l651:
  7683                           
  7684                           ;dc_motor.c: 527:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7685   002D7E  8680               	bsf	128,3,c	;volatile
  7686   002D80  8E7C               	bsf	124,7,c	;volatile
  7687   002D82                     
  7688                           ;dc_motor.c: 528:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7689   002D82  0E09               	movlw	9
  7690   002D84  6E36               	movwf	(??_calibration+1)^0,c
  7691   002D86  0E1E               	movlw	30
  7692   002D88  6E35               	movwf	??_calibration^0,c
  7693   002D8A  0EE4               	movlw	228
  7694   002D8C                     u3497:
  7695   002D8C  2EE8               	decfsz	wreg,f,c
  7696   002D8E  D7FE               	bra	u3497
  7697   002D90  2E35               	decfsz	??_calibration^0,f,c
  7698   002D92  D7FC               	bra	u3497
  7699   002D94  2E36               	decfsz	(??_calibration+1)^0,f,c
  7700   002D96  D7FA               	bra	u3497
  7701   002D98  D000               	nop2	
  7702   002D9A                     
  7703                           ;dc_motor.c: 529:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7704   002D9A  9680               	bcf	128,3,c	;volatile
  7705   002D9C  9E7C               	bcf	124,7,c	;volatile
  7706   002D9E  0012               	return		;funcret
  7707   002DA0                     __end_of_calibration:
  7708                           	callstack 0
  7709                           
  7710 ;; *************** function _turnRight *****************
  7711 ;; Defined at:
  7712 ;;		line 400 in file "dc_motor.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7715 ;;		 -> main@motorL(10), 
  7716 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7717 ;;		 -> main@motorR(10), 
  7718 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  7719 ;;  turnDuration    1   35[COMRAM] unsigned char 
  7720 ;;  turnRamp        1   36[COMRAM] unsigned char 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;  cur_power       2   42[COMRAM] int 
  7723 ;;  i               2   40[COMRAM] int 
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  1    wreg      void 
  7726 ;; Registers used:
  7727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7733 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7734 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7735 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7736 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7737 ;;Total ram usage:       14 bytes
  7738 ;; Hardware stack levels used: 1
  7739 ;; Hardware stack levels required when called: 7
  7740 ;; This function calls:
  7741 ;;		_setMotorPWM
  7742 ;; This function is called by:
  7743 ;;		_move
  7744 ;;		_returnHome
  7745 ;;		_lostReturnHome
  7746 ;;		_calibration
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text28
  7751   003174                     __ptext28:
  7752                           	callstack 0
  7753   003174                     _turnRight:
  7754                           	callstack 22
  7755   003174                     
  7756                           ;dc_motor.c: 400: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 401: {;dc_motor.c: 402:     mL->dir
      +                          ection = 1;
  7757   003174  EE20 F001          	lfsr	2,1
  7758   003178  501F               	movf	turnRight@mL^0,w,c
  7759   00317A  26D9               	addwf	fsr2l,f,c
  7760   00317C  5020               	movf	(turnRight@mL+1)^0,w,c
  7761   00317E  22DA               	addwfc	fsr2h,f,c
  7762   003180  0E01               	movlw	1
  7763   003182  6EDF               	movwf	indf2,c
  7764                           
  7765                           ;dc_motor.c: 403:     mR->direction = 0;
  7766   003184  EE20 F001          	lfsr	2,1
  7767   003188  5021               	movf	turnRight@mR^0,w,c
  7768   00318A  26D9               	addwf	fsr2l,f,c
  7769   00318C  5022               	movf	(turnRight@mR+1)^0,w,c
  7770   00318E  22DA               	addwfc	fsr2h,f,c
  7771   003190  6ADF               	clrf	indf2,c
  7772   003192                     
  7773                           ;dc_motor.c: 404:     int i;;dc_motor.c: 405:     int cur_power;;dc_motor.c: 406:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  7774   003192  0E00               	movlw	0
  7775   003194  6E2C               	movwf	(turnRight@cur_power+1)^0,c
  7776   003196  0E01               	movlw	1
  7777   003198  6E2B               	movwf	turnRight@cur_power^0,c
  7778   00319A  EF18  F019         	goto	l2736
  7779   00319E                     l2722:
  7780                           
  7781                           ;dc_motor.c: 407:         mL->power = cur_power+mL->compensation;
  7782   00319E  EE20 F009          	lfsr	2,9
  7783   0031A2  501F               	movf	turnRight@mL^0,w,c
  7784   0031A4  26D9               	addwf	fsr2l,f,c
  7785   0031A6  5020               	movf	(turnRight@mL+1)^0,w,c
  7786   0031A8  22DA               	addwfc	fsr2h,f,c
  7787   0031AA  50DF               	movf	indf2,w,c
  7788   0031AC  242B               	addwf	turnRight@cur_power^0,w,c
  7789   0031AE  C01F  FFD9         	movff	turnRight@mL,fsr2l
  7790   0031B2  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  7791   0031B6  6EDF               	movwf	indf2,c
  7792                           
  7793                           ;dc_motor.c: 408:         mR->power = cur_power+mR->compensation;
  7794   0031B8  EE20 F009          	lfsr	2,9
  7795   0031BC  5021               	movf	turnRight@mR^0,w,c
  7796   0031BE  26D9               	addwf	fsr2l,f,c
  7797   0031C0  5022               	movf	(turnRight@mR+1)^0,w,c
  7798   0031C2  22DA               	addwfc	fsr2h,f,c
  7799   0031C4  50DF               	movf	indf2,w,c
  7800   0031C6  242B               	addwf	turnRight@cur_power^0,w,c
  7801   0031C8  C021  FFD9         	movff	turnRight@mR,fsr2l
  7802   0031CC  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  7803   0031D0  6EDF               	movwf	indf2,c
  7804   0031D2                     
  7805                           ;dc_motor.c: 409:         setMotorPWM(mL);
  7806   0031D2  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  7807   0031D6  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  7808   0031DA  EC8E  F01A         	call	_setMotorPWM	;wreg free
  7809   0031DE                     
  7810                           ;dc_motor.c: 410:         setMotorPWM(mR);
  7811   0031DE  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  7812   0031E2  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  7813   0031E6  EC8E  F01A         	call	_setMotorPWM	;wreg free
  7814   0031EA                     
  7815                           ;dc_motor.c: 411:         for (i=0;i<turnRamp;i++) {
  7816   0031EA  0E00               	movlw	0
  7817   0031EC  6E2A               	movwf	(turnRight@i+1)^0,c
  7818   0031EE  0E00               	movlw	0
  7819   0031F0  6E29               	movwf	turnRight@i^0,c
  7820   0031F2  EF04  F019         	goto	l600
  7821   0031F6                     l2730:
  7822                           
  7823                           ;dc_motor.c: 412:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7824   0031F6  0ED0               	movlw	208
  7825   0031F8  6E26               	movwf	??_turnRight^0,c
  7826   0031FA  0ECA               	movlw	202
  7827   0031FC                     u3507:
  7828   0031FC  2EE8               	decfsz	wreg,f,c
  7829   0031FE  D7FE               	bra	u3507
  7830   003200  2E26               	decfsz	??_turnRight^0,f,c
  7831   003202  D7FC               	bra	u3507
  7832   003204                     
  7833                           ;dc_motor.c: 413:         }
  7834   003204  4A29               	infsnz	turnRight@i^0,f,c
  7835   003206  2A2A               	incf	(turnRight@i+1)^0,f,c
  7836   003208                     l600:
  7837   003208  5025               	movf	turnRight@turnRamp^0,w,c
  7838   00320A  6E26               	movwf	??_turnRight^0,c
  7839   00320C  6A27               	clrf	(??_turnRight+1)^0,c
  7840   00320E  5026               	movf	??_turnRight^0,w,c
  7841   003210  5C29               	subwf	turnRight@i^0,w,c
  7842   003212  502A               	movf	(turnRight@i+1)^0,w,c
  7843   003214  0A80               	xorlw	128
  7844   003216  6E28               	movwf	(??_turnRight+2)^0,c
  7845   003218  5027               	movf	(??_turnRight+1)^0,w,c
  7846   00321A  0A80               	xorlw	128
  7847   00321C  5828               	subwfb	(??_turnRight+2)^0,w,c
  7848   00321E  A0D8               	btfss	status,0,c
  7849   003220  EF14  F019         	goto	u1381
  7850   003224  EF16  F019         	goto	u1380
  7851   003228                     u1381:
  7852   003228  EFFB  F018         	goto	l2730
  7853   00322C                     u1380:
  7854   00322C                     
  7855                           ;dc_motor.c: 414:     }
  7856   00322C  4A2B               	infsnz	turnRight@cur_power^0,f,c
  7857   00322E  2A2C               	incf	(turnRight@cur_power+1)^0,f,c
  7858   003230                     l2736:
  7859   003230  5023               	movf	turnRight@turnSpeed^0,w,c
  7860   003232  6E26               	movwf	??_turnRight^0,c
  7861   003234  6A27               	clrf	(??_turnRight+1)^0,c
  7862   003236  502B               	movf	turnRight@cur_power^0,w,c
  7863   003238  5C26               	subwf	??_turnRight^0,w,c
  7864   00323A  5027               	movf	(??_turnRight+1)^0,w,c
  7865   00323C  0A80               	xorlw	128
  7866   00323E  6E28               	movwf	(??_turnRight+2)^0,c
  7867   003240  502C               	movf	(turnRight@cur_power+1)^0,w,c
  7868   003242  0A80               	xorlw	128
  7869   003244  5828               	subwfb	(??_turnRight+2)^0,w,c
  7870   003246  B0D8               	btfsc	status,0,c
  7871   003248  EF28  F019         	goto	u1391
  7872   00324C  EF2A  F019         	goto	u1390
  7873   003250                     u1391:
  7874   003250  EFCF  F018         	goto	l2722
  7875   003254                     u1390:
  7876   003254                     
  7877                           ;dc_motor.c: 416:     for (i=0;i<turnDuration;i++) {
  7878   003254  0E00               	movlw	0
  7879   003256  6E2A               	movwf	(turnRight@i+1)^0,c
  7880   003258  0E00               	movlw	0
  7881   00325A  6E29               	movwf	turnRight@i^0,c
  7882   00325C  EF39  F019         	goto	l604
  7883   003260                     l2740:
  7884                           
  7885                           ;dc_motor.c: 417:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7886   003260  0ED0               	movlw	208
  7887   003262  6E26               	movwf	??_turnRight^0,c
  7888   003264  0ECA               	movlw	202
  7889   003266                     u3517:
  7890   003266  2EE8               	decfsz	wreg,f,c
  7891   003268  D7FE               	bra	u3517
  7892   00326A  2E26               	decfsz	??_turnRight^0,f,c
  7893   00326C  D7FC               	bra	u3517
  7894   00326E                     
  7895                           ;dc_motor.c: 418:         }
  7896   00326E  4A29               	infsnz	turnRight@i^0,f,c
  7897   003270  2A2A               	incf	(turnRight@i+1)^0,f,c
  7898   003272                     l604:
  7899   003272  5024               	movf	turnRight@turnDuration^0,w,c
  7900   003274  6E26               	movwf	??_turnRight^0,c
  7901   003276  6A27               	clrf	(??_turnRight+1)^0,c
  7902   003278  5026               	movf	??_turnRight^0,w,c
  7903   00327A  5C29               	subwf	turnRight@i^0,w,c
  7904   00327C  502A               	movf	(turnRight@i+1)^0,w,c
  7905   00327E  0A80               	xorlw	128
  7906   003280  6E28               	movwf	(??_turnRight+2)^0,c
  7907   003282  5027               	movf	(??_turnRight+1)^0,w,c
  7908   003284  0A80               	xorlw	128
  7909   003286  5828               	subwfb	(??_turnRight+2)^0,w,c
  7910   003288  A0D8               	btfss	status,0,c
  7911   00328A  EF49  F019         	goto	u1401
  7912   00328E  EF4B  F019         	goto	u1400
  7913   003292                     u1401:
  7914   003292  EF30  F019         	goto	l2740
  7915   003296                     u1400:
  7916   003296                     
  7917                           ;dc_motor.c: 420:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  7918   003296  C023  F02B         	movff	turnRight@turnSpeed,turnRight@cur_power
  7919   00329A  6A2C               	clrf	(turnRight@cur_power+1)^0,c
  7920   00329C                     l2744:
  7921   00329C  BE2C               	btfsc	(turnRight@cur_power+1)^0,7,c
  7922   00329E  EF55  F019         	goto	u1410
  7923   0032A2  EF53  F019         	goto	u1411
  7924   0032A6                     u1411:
  7925   0032A6  EF57  F019         	goto	l2748
  7926   0032AA                     u1410:
  7927   0032AA  EFA3  F019         	goto	l612
  7928   0032AE                     l2748:
  7929                           
  7930                           ;dc_motor.c: 421:         mL->power = cur_power+mL->compensation;
  7931   0032AE  EE20 F009          	lfsr	2,9
  7932   0032B2  501F               	movf	turnRight@mL^0,w,c
  7933   0032B4  26D9               	addwf	fsr2l,f,c
  7934   0032B6  5020               	movf	(turnRight@mL+1)^0,w,c
  7935   0032B8  22DA               	addwfc	fsr2h,f,c
  7936   0032BA  50DF               	movf	indf2,w,c
  7937   0032BC  242B               	addwf	turnRight@cur_power^0,w,c
  7938   0032BE  C01F  FFD9         	movff	turnRight@mL,fsr2l
  7939   0032C2  C020  FFDA         	movff	turnRight@mL+1,fsr2h
  7940   0032C6  6EDF               	movwf	indf2,c
  7941                           
  7942                           ;dc_motor.c: 422:         mR->power = cur_power+mR->compensation;
  7943   0032C8  EE20 F009          	lfsr	2,9
  7944   0032CC  5021               	movf	turnRight@mR^0,w,c
  7945   0032CE  26D9               	addwf	fsr2l,f,c
  7946   0032D0  5022               	movf	(turnRight@mR+1)^0,w,c
  7947   0032D2  22DA               	addwfc	fsr2h,f,c
  7948   0032D4  50DF               	movf	indf2,w,c
  7949   0032D6  242B               	addwf	turnRight@cur_power^0,w,c
  7950   0032D8  C021  FFD9         	movff	turnRight@mR,fsr2l
  7951   0032DC  C022  FFDA         	movff	turnRight@mR+1,fsr2h
  7952   0032E0  6EDF               	movwf	indf2,c
  7953   0032E2                     
  7954                           ;dc_motor.c: 423:         setMotorPWM(mL);
  7955   0032E2  C01F  F019         	movff	turnRight@mL,setMotorPWM@m
  7956   0032E6  C020  F01A         	movff	turnRight@mL+1,setMotorPWM@m+1
  7957   0032EA  EC8E  F01A         	call	_setMotorPWM	;wreg free
  7958   0032EE                     
  7959                           ;dc_motor.c: 424:         setMotorPWM(mR);
  7960   0032EE  C021  F019         	movff	turnRight@mR,setMotorPWM@m
  7961   0032F2  C022  F01A         	movff	turnRight@mR+1,setMotorPWM@m+1
  7962   0032F6  EC8E  F01A         	call	_setMotorPWM	;wreg free
  7963   0032FA                     
  7964                           ;dc_motor.c: 425:         for (i=0;i<turnRamp;i++) {
  7965   0032FA  0E00               	movlw	0
  7966   0032FC  6E2A               	movwf	(turnRight@i+1)^0,c
  7967   0032FE  0E00               	movlw	0
  7968   003300  6E29               	movwf	turnRight@i^0,c
  7969   003302  EF8C  F019         	goto	l609
  7970   003306                     l2756:
  7971                           
  7972                           ;dc_motor.c: 426:             _delay((unsigned long)((10)*(64000000/4000.0)));
  7973   003306  0ED0               	movlw	208
  7974   003308  6E26               	movwf	??_turnRight^0,c
  7975   00330A  0ECA               	movlw	202
  7976   00330C                     u3527:
  7977   00330C  2EE8               	decfsz	wreg,f,c
  7978   00330E  D7FE               	bra	u3527
  7979   003310  2E26               	decfsz	??_turnRight^0,f,c
  7980   003312  D7FC               	bra	u3527
  7981   003314                     
  7982                           ;dc_motor.c: 427:         }
  7983   003314  4A29               	infsnz	turnRight@i^0,f,c
  7984   003316  2A2A               	incf	(turnRight@i+1)^0,f,c
  7985   003318                     l609:
  7986   003318  5025               	movf	turnRight@turnRamp^0,w,c
  7987   00331A  6E26               	movwf	??_turnRight^0,c
  7988   00331C  6A27               	clrf	(??_turnRight+1)^0,c
  7989   00331E  5026               	movf	??_turnRight^0,w,c
  7990   003320  5C29               	subwf	turnRight@i^0,w,c
  7991   003322  502A               	movf	(turnRight@i+1)^0,w,c
  7992   003324  0A80               	xorlw	128
  7993   003326  6E28               	movwf	(??_turnRight+2)^0,c
  7994   003328  5027               	movf	(??_turnRight+1)^0,w,c
  7995   00332A  0A80               	xorlw	128
  7996   00332C  5828               	subwfb	(??_turnRight+2)^0,w,c
  7997   00332E  A0D8               	btfss	status,0,c
  7998   003330  EF9C  F019         	goto	u1421
  7999   003334  EF9E  F019         	goto	u1420
  8000   003338                     u1421:
  8001   003338  EF83  F019         	goto	l2756
  8002   00333C                     u1420:
  8003   00333C                     
  8004                           ;dc_motor.c: 428:     }
  8005   00333C  062B               	decf	turnRight@cur_power^0,f,c
  8006   00333E  A0D8               	btfss	status,0,c
  8007   003340  062C               	decf	(turnRight@cur_power+1)^0,f,c
  8008   003342  EF4E  F019         	goto	l2744
  8009   003346                     l612:
  8010   003346  0012               	return		;funcret
  8011   003348                     __end_of_turnRight:
  8012                           	callstack 0
  8013                           
  8014 ;; *************** function _turnLeft *****************
  8015 ;; Defined at:
  8016 ;;		line 368 in file "dc_motor.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8019 ;;		 -> main@motorL(10), 
  8020 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8021 ;;		 -> main@motorR(10), 
  8022 ;;  turnSpeed       1   34[COMRAM] unsigned char 
  8023 ;;  turnDuration    1   35[COMRAM] unsigned char 
  8024 ;;  turnRamp        1   36[COMRAM] unsigned char 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  cur_power       2   42[COMRAM] int 
  8027 ;;  i               2   40[COMRAM] int 
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      void 
  8030 ;; Registers used:
  8031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8037 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8038 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8039 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8040 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8041 ;;Total ram usage:       14 bytes
  8042 ;; Hardware stack levels used: 1
  8043 ;; Hardware stack levels required when called: 7
  8044 ;; This function calls:
  8045 ;;		_setMotorPWM
  8046 ;; This function is called by:
  8047 ;;		_move
  8048 ;;		_returnHome
  8049 ;;		_lostReturnHome
  8050 ;;		_calibration
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           	psect	text29
  8055   003348                     __ptext29:
  8056                           	callstack 0
  8057   003348                     _turnLeft:
  8058                           	callstack 22
  8059   003348                     
  8060                           ;dc_motor.c: 368: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 369: {;dc_motor.c: 370:     mL->dire
      +                          ction = 0;
  8061   003348  EE20 F001          	lfsr	2,1
  8062   00334C  501F               	movf	turnLeft@mL^0,w,c
  8063   00334E  26D9               	addwf	fsr2l,f,c
  8064   003350  5020               	movf	(turnLeft@mL+1)^0,w,c
  8065   003352  22DA               	addwfc	fsr2h,f,c
  8066   003354  6ADF               	clrf	indf2,c
  8067                           
  8068                           ;dc_motor.c: 371:     mR->direction = 1;
  8069   003356  EE20 F001          	lfsr	2,1
  8070   00335A  5021               	movf	turnLeft@mR^0,w,c
  8071   00335C  26D9               	addwf	fsr2l,f,c
  8072   00335E  5022               	movf	(turnLeft@mR+1)^0,w,c
  8073   003360  22DA               	addwfc	fsr2h,f,c
  8074   003362  0E01               	movlw	1
  8075   003364  6EDF               	movwf	indf2,c
  8076   003366                     
  8077                           ;dc_motor.c: 372:     int i;;dc_motor.c: 373:     int cur_power;;dc_motor.c: 374:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
  8078   003366  0E00               	movlw	0
  8079   003368  6E2C               	movwf	(turnLeft@cur_power+1)^0,c
  8080   00336A  0E01               	movlw	1
  8081   00336C  6E2B               	movwf	turnLeft@cur_power^0,c
  8082   00336E  EF02  F01A         	goto	l2782
  8083   003372                     l2768:
  8084                           
  8085                           ;dc_motor.c: 375:         mL->power = cur_power+mL->compensation;
  8086   003372  EE20 F009          	lfsr	2,9
  8087   003376  501F               	movf	turnLeft@mL^0,w,c
  8088   003378  26D9               	addwf	fsr2l,f,c
  8089   00337A  5020               	movf	(turnLeft@mL+1)^0,w,c
  8090   00337C  22DA               	addwfc	fsr2h,f,c
  8091   00337E  50DF               	movf	indf2,w,c
  8092   003380  242B               	addwf	turnLeft@cur_power^0,w,c
  8093   003382  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  8094   003386  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  8095   00338A  6EDF               	movwf	indf2,c
  8096                           
  8097                           ;dc_motor.c: 376:         mR->power = cur_power+mR->compensation;
  8098   00338C  EE20 F009          	lfsr	2,9
  8099   003390  5021               	movf	turnLeft@mR^0,w,c
  8100   003392  26D9               	addwf	fsr2l,f,c
  8101   003394  5022               	movf	(turnLeft@mR+1)^0,w,c
  8102   003396  22DA               	addwfc	fsr2h,f,c
  8103   003398  50DF               	movf	indf2,w,c
  8104   00339A  242B               	addwf	turnLeft@cur_power^0,w,c
  8105   00339C  C021  FFD9         	movff	turnLeft@mR,fsr2l
  8106   0033A0  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  8107   0033A4  6EDF               	movwf	indf2,c
  8108   0033A6                     
  8109                           ;dc_motor.c: 377:         setMotorPWM(mL);
  8110   0033A6  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  8111   0033AA  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8112   0033AE  EC8E  F01A         	call	_setMotorPWM	;wreg free
  8113   0033B2                     
  8114                           ;dc_motor.c: 378:         setMotorPWM(mR);
  8115   0033B2  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  8116   0033B6  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8117   0033BA  EC8E  F01A         	call	_setMotorPWM	;wreg free
  8118   0033BE                     
  8119                           ;dc_motor.c: 379:         for (i=0;i<turnRamp;i++) {
  8120   0033BE  0E00               	movlw	0
  8121   0033C0  6E2A               	movwf	(turnLeft@i+1)^0,c
  8122   0033C2  0E00               	movlw	0
  8123   0033C4  6E29               	movwf	turnLeft@i^0,c
  8124   0033C6  EFEE  F019         	goto	l583
  8125   0033CA                     l2776:
  8126                           
  8127                           ;dc_motor.c: 380:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8128   0033CA  0ED0               	movlw	208
  8129   0033CC  6E26               	movwf	??_turnLeft^0,c
  8130   0033CE  0ECA               	movlw	202
  8131   0033D0                     u3537:
  8132   0033D0  2EE8               	decfsz	wreg,f,c
  8133   0033D2  D7FE               	bra	u3537
  8134   0033D4  2E26               	decfsz	??_turnLeft^0,f,c
  8135   0033D6  D7FC               	bra	u3537
  8136   0033D8                     
  8137                           ;dc_motor.c: 381:         }
  8138   0033D8  4A29               	infsnz	turnLeft@i^0,f,c
  8139   0033DA  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8140   0033DC                     l583:
  8141   0033DC  5025               	movf	turnLeft@turnRamp^0,w,c
  8142   0033DE  6E26               	movwf	??_turnLeft^0,c
  8143   0033E0  6A27               	clrf	(??_turnLeft+1)^0,c
  8144   0033E2  5026               	movf	??_turnLeft^0,w,c
  8145   0033E4  5C29               	subwf	turnLeft@i^0,w,c
  8146   0033E6  502A               	movf	(turnLeft@i+1)^0,w,c
  8147   0033E8  0A80               	xorlw	128
  8148   0033EA  6E28               	movwf	(??_turnLeft+2)^0,c
  8149   0033EC  5027               	movf	(??_turnLeft+1)^0,w,c
  8150   0033EE  0A80               	xorlw	128
  8151   0033F0  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8152   0033F2  A0D8               	btfss	status,0,c
  8153   0033F4  EFFE  F019         	goto	u1431
  8154   0033F8  EF00  F01A         	goto	u1430
  8155   0033FC                     u1431:
  8156   0033FC  EFE5  F019         	goto	l2776
  8157   003400                     u1430:
  8158   003400                     
  8159                           ;dc_motor.c: 382:     }
  8160   003400  4A2B               	infsnz	turnLeft@cur_power^0,f,c
  8161   003402  2A2C               	incf	(turnLeft@cur_power+1)^0,f,c
  8162   003404                     l2782:
  8163   003404  5023               	movf	turnLeft@turnSpeed^0,w,c
  8164   003406  6E26               	movwf	??_turnLeft^0,c
  8165   003408  6A27               	clrf	(??_turnLeft+1)^0,c
  8166   00340A  502B               	movf	turnLeft@cur_power^0,w,c
  8167   00340C  5C26               	subwf	??_turnLeft^0,w,c
  8168   00340E  5027               	movf	(??_turnLeft+1)^0,w,c
  8169   003410  0A80               	xorlw	128
  8170   003412  6E28               	movwf	(??_turnLeft+2)^0,c
  8171   003414  502C               	movf	(turnLeft@cur_power+1)^0,w,c
  8172   003416  0A80               	xorlw	128
  8173   003418  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8174   00341A  B0D8               	btfsc	status,0,c
  8175   00341C  EF12  F01A         	goto	u1441
  8176   003420  EF14  F01A         	goto	u1440
  8177   003424                     u1441:
  8178   003424  EFB9  F019         	goto	l2768
  8179   003428                     u1440:
  8180   003428                     
  8181                           ;dc_motor.c: 384:     for (i=0;i<turnDuration;i++) {
  8182   003428  0E00               	movlw	0
  8183   00342A  6E2A               	movwf	(turnLeft@i+1)^0,c
  8184   00342C  0E00               	movlw	0
  8185   00342E  6E29               	movwf	turnLeft@i^0,c
  8186   003430  EF23  F01A         	goto	l587
  8187   003434                     l2786:
  8188                           
  8189                           ;dc_motor.c: 385:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8190   003434  0ED0               	movlw	208
  8191   003436  6E26               	movwf	??_turnLeft^0,c
  8192   003438  0ECA               	movlw	202
  8193   00343A                     u3547:
  8194   00343A  2EE8               	decfsz	wreg,f,c
  8195   00343C  D7FE               	bra	u3547
  8196   00343E  2E26               	decfsz	??_turnLeft^0,f,c
  8197   003440  D7FC               	bra	u3547
  8198   003442                     
  8199                           ;dc_motor.c: 386:         }
  8200   003442  4A29               	infsnz	turnLeft@i^0,f,c
  8201   003444  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8202   003446                     l587:
  8203   003446  5024               	movf	turnLeft@turnDuration^0,w,c
  8204   003448  6E26               	movwf	??_turnLeft^0,c
  8205   00344A  6A27               	clrf	(??_turnLeft+1)^0,c
  8206   00344C  5026               	movf	??_turnLeft^0,w,c
  8207   00344E  5C29               	subwf	turnLeft@i^0,w,c
  8208   003450  502A               	movf	(turnLeft@i+1)^0,w,c
  8209   003452  0A80               	xorlw	128
  8210   003454  6E28               	movwf	(??_turnLeft+2)^0,c
  8211   003456  5027               	movf	(??_turnLeft+1)^0,w,c
  8212   003458  0A80               	xorlw	128
  8213   00345A  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8214   00345C  A0D8               	btfss	status,0,c
  8215   00345E  EF33  F01A         	goto	u1451
  8216   003462  EF35  F01A         	goto	u1450
  8217   003466                     u1451:
  8218   003466  EF1A  F01A         	goto	l2786
  8219   00346A                     u1450:
  8220   00346A                     
  8221                           ;dc_motor.c: 388:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
  8222   00346A  C023  F02B         	movff	turnLeft@turnSpeed,turnLeft@cur_power
  8223   00346E  6A2C               	clrf	(turnLeft@cur_power+1)^0,c
  8224   003470                     l2790:
  8225   003470  BE2C               	btfsc	(turnLeft@cur_power+1)^0,7,c
  8226   003472  EF3F  F01A         	goto	u1460
  8227   003476  EF3D  F01A         	goto	u1461
  8228   00347A                     u1461:
  8229   00347A  EF41  F01A         	goto	l2794
  8230   00347E                     u1460:
  8231   00347E  EF8D  F01A         	goto	l595
  8232   003482                     l2794:
  8233                           
  8234                           ;dc_motor.c: 389:         mL->power = cur_power+mL->compensation;
  8235   003482  EE20 F009          	lfsr	2,9
  8236   003486  501F               	movf	turnLeft@mL^0,w,c
  8237   003488  26D9               	addwf	fsr2l,f,c
  8238   00348A  5020               	movf	(turnLeft@mL+1)^0,w,c
  8239   00348C  22DA               	addwfc	fsr2h,f,c
  8240   00348E  50DF               	movf	indf2,w,c
  8241   003490  242B               	addwf	turnLeft@cur_power^0,w,c
  8242   003492  C01F  FFD9         	movff	turnLeft@mL,fsr2l
  8243   003496  C020  FFDA         	movff	turnLeft@mL+1,fsr2h
  8244   00349A  6EDF               	movwf	indf2,c
  8245                           
  8246                           ;dc_motor.c: 390:         mR->power = cur_power+mR->compensation;
  8247   00349C  EE20 F009          	lfsr	2,9
  8248   0034A0  5021               	movf	turnLeft@mR^0,w,c
  8249   0034A2  26D9               	addwf	fsr2l,f,c
  8250   0034A4  5022               	movf	(turnLeft@mR+1)^0,w,c
  8251   0034A6  22DA               	addwfc	fsr2h,f,c
  8252   0034A8  50DF               	movf	indf2,w,c
  8253   0034AA  242B               	addwf	turnLeft@cur_power^0,w,c
  8254   0034AC  C021  FFD9         	movff	turnLeft@mR,fsr2l
  8255   0034B0  C022  FFDA         	movff	turnLeft@mR+1,fsr2h
  8256   0034B4  6EDF               	movwf	indf2,c
  8257   0034B6                     
  8258                           ;dc_motor.c: 391:         setMotorPWM(mL);
  8259   0034B6  C01F  F019         	movff	turnLeft@mL,setMotorPWM@m
  8260   0034BA  C020  F01A         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8261   0034BE  EC8E  F01A         	call	_setMotorPWM	;wreg free
  8262   0034C2                     
  8263                           ;dc_motor.c: 392:         setMotorPWM(mR);
  8264   0034C2  C021  F019         	movff	turnLeft@mR,setMotorPWM@m
  8265   0034C6  C022  F01A         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8266   0034CA  EC8E  F01A         	call	_setMotorPWM	;wreg free
  8267   0034CE                     
  8268                           ;dc_motor.c: 393:         for (i=0;i<turnRamp;i++) {
  8269   0034CE  0E00               	movlw	0
  8270   0034D0  6E2A               	movwf	(turnLeft@i+1)^0,c
  8271   0034D2  0E00               	movlw	0
  8272   0034D4  6E29               	movwf	turnLeft@i^0,c
  8273   0034D6  EF76  F01A         	goto	l592
  8274   0034DA                     l2802:
  8275                           
  8276                           ;dc_motor.c: 394:             _delay((unsigned long)((10)*(64000000/4000.0)));
  8277   0034DA  0ED0               	movlw	208
  8278   0034DC  6E26               	movwf	??_turnLeft^0,c
  8279   0034DE  0ECA               	movlw	202
  8280   0034E0                     u3557:
  8281   0034E0  2EE8               	decfsz	wreg,f,c
  8282   0034E2  D7FE               	bra	u3557
  8283   0034E4  2E26               	decfsz	??_turnLeft^0,f,c
  8284   0034E6  D7FC               	bra	u3557
  8285   0034E8                     
  8286                           ;dc_motor.c: 395:         }
  8287   0034E8  4A29               	infsnz	turnLeft@i^0,f,c
  8288   0034EA  2A2A               	incf	(turnLeft@i+1)^0,f,c
  8289   0034EC                     l592:
  8290   0034EC  5025               	movf	turnLeft@turnRamp^0,w,c
  8291   0034EE  6E26               	movwf	??_turnLeft^0,c
  8292   0034F0  6A27               	clrf	(??_turnLeft+1)^0,c
  8293   0034F2  5026               	movf	??_turnLeft^0,w,c
  8294   0034F4  5C29               	subwf	turnLeft@i^0,w,c
  8295   0034F6  502A               	movf	(turnLeft@i+1)^0,w,c
  8296   0034F8  0A80               	xorlw	128
  8297   0034FA  6E28               	movwf	(??_turnLeft+2)^0,c
  8298   0034FC  5027               	movf	(??_turnLeft+1)^0,w,c
  8299   0034FE  0A80               	xorlw	128
  8300   003500  5828               	subwfb	(??_turnLeft+2)^0,w,c
  8301   003502  A0D8               	btfss	status,0,c
  8302   003504  EF86  F01A         	goto	u1471
  8303   003508  EF88  F01A         	goto	u1470
  8304   00350C                     u1471:
  8305   00350C  EF6D  F01A         	goto	l2802
  8306   003510                     u1470:
  8307   003510                     
  8308                           ;dc_motor.c: 396:     }
  8309   003510  062B               	decf	turnLeft@cur_power^0,f,c
  8310   003512  A0D8               	btfss	status,0,c
  8311   003514  062C               	decf	(turnLeft@cur_power+1)^0,f,c
  8312   003516  EF38  F01A         	goto	l2790
  8313   00351A                     l595:
  8314   00351A  0012               	return		;funcret
  8315   00351C                     __end_of_turnLeft:
  8316                           	callstack 0
  8317                           
  8318 ;; *************** function _setMotorPWM *****************
  8319 ;; Defined at:
  8320 ;;		line 68 in file "dc_motor.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;  m               2   24[COMRAM] PTR struct DC_motor
  8323 ;;		 -> main@motorR(10), main@motorL(10), 
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;  negDuty         1   29[COMRAM] unsigned char 
  8326 ;;  posDuty         1   28[COMRAM] unsigned char 
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1    wreg      void 
  8329 ;; Registers used:
  8330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8339 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8340 ;;Total ram usage:        6 bytes
  8341 ;; Hardware stack levels used: 1
  8342 ;; Hardware stack levels required when called: 6
  8343 ;; This function calls:
  8344 ;;		___lwdiv
  8345 ;;		___wmul
  8346 ;; This function is called by:
  8347 ;;		_stop
  8348 ;;		_turnLeft
  8349 ;;		_turnRight
  8350 ;;		_fullSpeedAhead
  8351 ;;		_reverseOneSquare
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text30
  8356   00351C                     __ptext30:
  8357                           	callstack 0
  8358   00351C                     _setMotorPWM:
  8359                           	callstack 23
  8360   00351C                     
  8361                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  8362   00351C  EE20 F002          	lfsr	2,2
  8363   003520  5019               	movf	setMotorPWM@m^0,w,c
  8364   003522  26D9               	addwf	fsr2l,f,c
  8365   003524  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8366   003526  22DA               	addwfc	fsr2h,f,c
  8367   003528  50DF               	movf	indf2,w,c
  8368   00352A  B4D8               	btfsc	status,2,c
  8369   00352C  EF9A  F01A         	goto	u1281
  8370   003530  EF9C  F01A         	goto	u1280
  8371   003534                     u1281:
  8372   003534  EFD0  F01A         	goto	l2630
  8373   003538                     u1280:
  8374   003538                     
  8375                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8376   003538  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  8377   00353C  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8378   003540  50DF               	movf	indf2,w,c
  8379   003542  6E1B               	movwf	??_setMotorPWM^0,c
  8380   003544  501B               	movf	??_setMotorPWM^0,w,c
  8381   003546  6E0C               	movwf	___wmul@multiplier^0,c
  8382   003548  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  8383   00354A  EE20 F003          	lfsr	2,3
  8384   00354E  5019               	movf	setMotorPWM@m^0,w,c
  8385   003550  26D9               	addwf	fsr2l,f,c
  8386   003552  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8387   003554  22DA               	addwfc	fsr2h,f,c
  8388   003556  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  8389   00355A  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  8390   00355E  ECF9  F01F         	call	___wmul	;wreg free
  8391   003562  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  8392   003566  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  8393   00356A  0E00               	movlw	0
  8394   00356C  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  8395   00356E  0E64               	movlw	100
  8396   003570  6E14               	movwf	___lwdiv@divisor^0,c
  8397   003572  EC89  F01E         	call	___lwdiv	;wreg free
  8398   003576  EE20 F003          	lfsr	2,3
  8399   00357A  5019               	movf	setMotorPWM@m^0,w,c
  8400   00357C  26D9               	addwf	fsr2l,f,c
  8401   00357E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8402   003580  22DA               	addwfc	fsr2h,f,c
  8403   003582  50DF               	movf	indf2,w,c
  8404   003584  6E1C               	movwf	(??_setMotorPWM+1)^0,c
  8405   003586  5012               	movf	?___lwdiv^0,w,c
  8406   003588  5C1C               	subwf	(??_setMotorPWM+1)^0,w,c
  8407   00358A  6E1D               	movwf	setMotorPWM@posDuty^0,c
  8408   00358C                     
  8409                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  8410   00358C  EE20 F003          	lfsr	2,3
  8411   003590  5019               	movf	setMotorPWM@m^0,w,c
  8412   003592  26D9               	addwf	fsr2l,f,c
  8413   003594  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8414   003596  22DA               	addwfc	fsr2h,f,c
  8415   003598  50DF               	movf	indf2,w,c
  8416   00359A  6E1E               	movwf	setMotorPWM@negDuty^0,c
  8417                           
  8418                           ;dc_motor.c: 75:     }
  8419   00359C  EFF3  F01A         	goto	l2634
  8420   0035A0                     l2630:
  8421                           
  8422                           ;dc_motor.c: 77:         posDuty=0;
  8423   0035A0  0E00               	movlw	0
  8424   0035A2  6E1D               	movwf	setMotorPWM@posDuty^0,c
  8425   0035A4                     
  8426                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8427   0035A4  C019  FFD9         	movff	setMotorPWM@m,fsr2l
  8428   0035A8  C01A  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8429   0035AC  50DF               	movf	indf2,w,c
  8430   0035AE  6E1B               	movwf	??_setMotorPWM^0,c
  8431   0035B0  501B               	movf	??_setMotorPWM^0,w,c
  8432   0035B2  6E0C               	movwf	___wmul@multiplier^0,c
  8433   0035B4  6A0D               	clrf	(___wmul@multiplier+1)^0,c
  8434   0035B6  EE20 F003          	lfsr	2,3
  8435   0035BA  5019               	movf	setMotorPWM@m^0,w,c
  8436   0035BC  26D9               	addwf	fsr2l,f,c
  8437   0035BE  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8438   0035C0  22DA               	addwfc	fsr2h,f,c
  8439   0035C2  CFDE F00E          	movff	postinc2,___wmul@multiplicand
  8440   0035C6  CFDD F00F          	movff	postdec2,___wmul@multiplicand+1
  8441   0035CA  ECF9  F01F         	call	___wmul	;wreg free
  8442   0035CE  C00C  F012         	movff	?___wmul,___lwdiv@dividend
  8443   0035D2  C00D  F013         	movff	?___wmul+1,___lwdiv@dividend+1
  8444   0035D6  0E00               	movlw	0
  8445   0035D8  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  8446   0035DA  0E64               	movlw	100
  8447   0035DC  6E14               	movwf	___lwdiv@divisor^0,c
  8448   0035DE  EC89  F01E         	call	___lwdiv	;wreg free
  8449   0035E2  5012               	movf	?___lwdiv^0,w,c
  8450   0035E4  6E1E               	movwf	setMotorPWM@negDuty^0,c
  8451   0035E6                     l2634:
  8452                           
  8453                           ;dc_motor.c: 81:     if (m->direction) {
  8454   0035E6  EE20 F001          	lfsr	2,1
  8455   0035EA  5019               	movf	setMotorPWM@m^0,w,c
  8456   0035EC  26D9               	addwf	fsr2l,f,c
  8457   0035EE  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8458   0035F0  22DA               	addwfc	fsr2h,f,c
  8459   0035F2  50DF               	movf	indf2,w,c
  8460   0035F4  B4D8               	btfsc	status,2,c
  8461   0035F6  EFFF  F01A         	goto	u1291
  8462   0035FA  EF01  F01B         	goto	u1290
  8463   0035FE                     u1291:
  8464   0035FE  EF23  F01B         	goto	l2638
  8465   003602                     u1290:
  8466   003602                     
  8467                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  8468   003602  EE20 F005          	lfsr	2,5
  8469   003606  5019               	movf	setMotorPWM@m^0,w,c
  8470   003608  26D9               	addwf	fsr2l,f,c
  8471   00360A  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8472   00360C  22DA               	addwfc	fsr2h,f,c
  8473   00360E  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8474   003612  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8475   003616  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8476   00361A  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8477   00361E  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  8478                           
  8479                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  8480   003622  EE20 F007          	lfsr	2,7
  8481   003626  5019               	movf	setMotorPWM@m^0,w,c
  8482   003628  26D9               	addwf	fsr2l,f,c
  8483   00362A  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8484   00362C  22DA               	addwfc	fsr2h,f,c
  8485   00362E  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8486   003632  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8487   003636  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8488   00363A  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8489   00363E  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  8490                           
  8491                           ;dc_motor.c: 84:     } else {
  8492   003642  EF43  F01B         	goto	l501
  8493   003646                     l2638:
  8494                           
  8495                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  8496   003646  EE20 F005          	lfsr	2,5
  8497   00364A  5019               	movf	setMotorPWM@m^0,w,c
  8498   00364C  26D9               	addwf	fsr2l,f,c
  8499   00364E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8500   003650  22DA               	addwfc	fsr2h,f,c
  8501   003652  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8502   003656  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8503   00365A  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8504   00365E  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8505   003662  C01E  FFDF         	movff	setMotorPWM@negDuty,indf2
  8506                           
  8507                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  8508   003666  EE20 F007          	lfsr	2,7
  8509   00366A  5019               	movf	setMotorPWM@m^0,w,c
  8510   00366C  26D9               	addwf	fsr2l,f,c
  8511   00366E  501A               	movf	(setMotorPWM@m+1)^0,w,c
  8512   003670  22DA               	addwfc	fsr2h,f,c
  8513   003672  CFDE F01B          	movff	postinc2,??_setMotorPWM
  8514   003676  CFDD F01C          	movff	postdec2,??_setMotorPWM+1
  8515   00367A  C01B  FFD9         	movff	??_setMotorPWM,fsr2l
  8516   00367E  C01C  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8517   003682  C01D  FFDF         	movff	setMotorPWM@posDuty,indf2
  8518   003686                     l501:
  8519   003686  0012               	return		;funcret
  8520   003688                     __end_of_setMotorPWM:
  8521                           	callstack 0
  8522                           
  8523 ;; *************** function ___wmul *****************
  8524 ;; Defined at:
  8525 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  multiplier      2   11[COMRAM] unsigned int 
  8528 ;;  multiplicand    2   13[COMRAM] unsigned int 
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  product         2   15[COMRAM] unsigned int 
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  2   11[COMRAM] unsigned int 
  8533 ;; Registers used:
  8534 ;;		wreg, status,2, status,0, prodl, prodh
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8543 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8544 ;;Total ram usage:        6 bytes
  8545 ;; Hardware stack levels used: 1
  8546 ;; Hardware stack levels required when called: 5
  8547 ;; This function calls:
  8548 ;;		Nothing
  8549 ;; This function is called by:
  8550 ;;		_setMotorPWM
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           	psect	text31
  8555   003FF2                     __ptext31:
  8556                           	callstack 0
  8557   003FF2                     ___wmul:
  8558                           	callstack 23
  8559   003FF2  500C               	movf	___wmul@multiplier^0,w,c
  8560   003FF4  020E               	mulwf	___wmul@multiplicand^0,c
  8561   003FF6  CFF3 F010          	movff	prodl,___wmul@product
  8562   003FFA  CFF4 F011          	movff	prodh,___wmul@product+1
  8563   003FFE  500C               	movf	___wmul@multiplier^0,w,c
  8564   004000  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  8565   004002  50F3               	movf	243,w,c
  8566   004004  2611               	addwf	(___wmul@product+1)^0,f,c
  8567   004006  500D               	movf	(___wmul@multiplier+1)^0,w,c
  8568   004008  020E               	mulwf	___wmul@multiplicand^0,c
  8569   00400A  50F3               	movf	243,w,c
  8570   00400C  2611               	addwf	(___wmul@product+1)^0,f,c
  8571   00400E  C010  F00C         	movff	___wmul@product,?___wmul
  8572   004012  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  8573   004016  0012               	return		;funcret
  8574   004018                     __end_of___wmul:
  8575                           	callstack 0
  8576                           
  8577 ;; *************** function ___lwdiv *****************
  8578 ;; Defined at:
  8579 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  dividend        2   17[COMRAM] unsigned int 
  8582 ;;  divisor         2   19[COMRAM] unsigned int 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;  quotient        2   21[COMRAM] unsigned int 
  8585 ;;  counter         1   23[COMRAM] unsigned char 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  2   17[COMRAM] unsigned int 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2, status,0
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8595 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8598 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8599 ;;Total ram usage:        7 bytes
  8600 ;; Hardware stack levels used: 1
  8601 ;; Hardware stack levels required when called: 5
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_setMotorPWM
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           	psect	text32
  8610   003D12                     __ptext32:
  8611                           	callstack 0
  8612   003D12                     ___lwdiv:
  8613                           	callstack 23
  8614   003D12  0E00               	movlw	0
  8615   003D14  6E17               	movwf	(___lwdiv@quotient+1)^0,c
  8616   003D16  0E00               	movlw	0
  8617   003D18  6E16               	movwf	___lwdiv@quotient^0,c
  8618   003D1A  5014               	movf	___lwdiv@divisor^0,w,c
  8619   003D1C  1015               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8620   003D1E  B4D8               	btfsc	status,2,c
  8621   003D20  EF94  F01E         	goto	u1251
  8622   003D24  EF96  F01E         	goto	u1250
  8623   003D28                     u1251:
  8624   003D28  EFBE  F01E         	goto	l1164
  8625   003D2C                     u1250:
  8626   003D2C  0E01               	movlw	1
  8627   003D2E  6E18               	movwf	___lwdiv@counter^0,c
  8628   003D30  EF9E  F01E         	goto	l2598
  8629   003D34                     l2596:
  8630   003D34  90D8               	bcf	status,0,c
  8631   003D36  3614               	rlcf	___lwdiv@divisor^0,f,c
  8632   003D38  3615               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8633   003D3A  2A18               	incf	___lwdiv@counter^0,f,c
  8634   003D3C                     l2598:
  8635   003D3C  AE15               	btfss	(___lwdiv@divisor+1)^0,7,c
  8636   003D3E  EFA3  F01E         	goto	u1261
  8637   003D42  EFA5  F01E         	goto	u1260
  8638   003D46                     u1261:
  8639   003D46  EF9A  F01E         	goto	l2596
  8640   003D4A                     u1260:
  8641   003D4A                     l2600:
  8642   003D4A  90D8               	bcf	status,0,c
  8643   003D4C  3616               	rlcf	___lwdiv@quotient^0,f,c
  8644   003D4E  3617               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8645   003D50  5014               	movf	___lwdiv@divisor^0,w,c
  8646   003D52  5C12               	subwf	___lwdiv@dividend^0,w,c
  8647   003D54  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  8648   003D56  5813               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8649   003D58  A0D8               	btfss	status,0,c
  8650   003D5A  EFB1  F01E         	goto	u1271
  8651   003D5E  EFB3  F01E         	goto	u1270
  8652   003D62                     u1271:
  8653   003D62  EFB8  F01E         	goto	l2608
  8654   003D66                     u1270:
  8655   003D66  5014               	movf	___lwdiv@divisor^0,w,c
  8656   003D68  5E12               	subwf	___lwdiv@dividend^0,f,c
  8657   003D6A  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  8658   003D6C  5A13               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8659   003D6E  8016               	bsf	___lwdiv@quotient^0,0,c
  8660   003D70                     l2608:
  8661   003D70  90D8               	bcf	status,0,c
  8662   003D72  3215               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8663   003D74  3214               	rrcf	___lwdiv@divisor^0,f,c
  8664   003D76  2E18               	decfsz	___lwdiv@counter^0,f,c
  8665   003D78  EFA5  F01E         	goto	l2600
  8666   003D7C                     l1164:
  8667   003D7C  C016  F012         	movff	___lwdiv@quotient,?___lwdiv
  8668   003D80  C017  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8669   003D84  0012               	return		;funcret
  8670   003D86                     __end_of___lwdiv:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function _batteryLevel *****************
  8674 ;; Defined at:
  8675 ;;		line 6 in file "battery.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;		None
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;  batteryQuart    1   20[COMRAM] unsigned char 
  8680 ;;  batteryVolta    1   19[COMRAM] unsigned char 
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, status,2, status,0, cstack
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8694 ;;Total ram usage:        2 bytes
  8695 ;; Hardware stack levels used: 1
  8696 ;; Hardware stack levels required when called: 6
  8697 ;; This function calls:
  8698 ;;		_ADC_getval
  8699 ;;		_ADC_init
  8700 ;;		___awdiv
  8701 ;; This function is called by:
  8702 ;;		_main
  8703 ;; This function uses a non-reentrant model
  8704 ;;
  8705                           
  8706                           	psect	text33
  8707   003E52                     __ptext33:
  8708                           	callstack 0
  8709   003E52                     _batteryLevel:
  8710                           	callstack 24
  8711   003E52                     
  8712                           ;battery.c: 7:     ADC_init();
  8713   003E52  EC83  F020         	call	_ADC_init	;wreg free
  8714                           
  8715                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
  8716   003E56  EC90  F020         	call	_ADC_getval	;wreg free
  8717   003E5A  6E14               	movwf	batteryLevel@batteryVoltage^0,c
  8718   003E5C                     
  8719                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
  8720   003E5C  C014  F00C         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
  8721   003E60  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  8722   003E62  0E00               	movlw	0
  8723   003E64  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  8724   003E66  0E18               	movlw	24
  8725   003E68  6E0E               	movwf	___awdiv@divisor^0,c
  8726   003E6A  EC65  F01D         	call	___awdiv	;wreg free
  8727   003E6E  500C               	movf	?___awdiv^0,w,c
  8728   003E70  6E15               	movwf	batteryLevel@batteryQuarter^0,c
  8729   003E72                     
  8730                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
  8731   003E72  A215               	btfss	batteryLevel@batteryQuarter^0,1,c
  8732   003E74  EF3E  F01F         	goto	u1791
  8733   003E78  EF40  F01F         	goto	u1790
  8734   003E7C                     u1791:
  8735   003E7C  EF43  F01F         	goto	l415
  8736   003E80                     u1790:
  8737   003E80  8E7C               	bsf	124,7,c	;volatile
  8738   003E82  EF44  F01F         	goto	l416
  8739   003E86                     l415:
  8740   003E86  9E7C               	bcf	124,7,c	;volatile
  8741   003E88                     l416:
  8742                           
  8743                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
  8744   003E88  A015               	btfss	batteryLevel@batteryQuarter^0,0,c
  8745   003E8A  EF49  F01F         	goto	u1801
  8746   003E8E  EF4B  F01F         	goto	u1800
  8747   003E92                     u1801:
  8748   003E92  EF4E  F01F         	goto	l417
  8749   003E96                     u1800:
  8750   003E96  8680               	bsf	128,3,c	;volatile
  8751   003E98  EF4F  F01F         	goto	l419
  8752   003E9C                     l417:
  8753   003E9C  9680               	bcf	128,3,c	;volatile
  8754   003E9E                     l419:
  8755   003E9E  0012               	return		;funcret
  8756   003EA0                     __end_of_batteryLevel:
  8757                           	callstack 0
  8758                           
  8759 ;; *************** function ___awdiv *****************
  8760 ;; Defined at:
  8761 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;  dividend        2   11[COMRAM] int 
  8764 ;;  divisor         2   13[COMRAM] int 
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;  quotient        2   17[COMRAM] int 
  8767 ;;  sign            1   16[COMRAM] unsigned char 
  8768 ;;  counter         1   15[COMRAM] unsigned char 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  2   11[COMRAM] int 
  8771 ;; Registers used:
  8772 ;;		wreg, status,2, status,0
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8779 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8781 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8782 ;;Total ram usage:        8 bytes
  8783 ;; Hardware stack levels used: 1
  8784 ;; Hardware stack levels required when called: 5
  8785 ;; This function calls:
  8786 ;;		Nothing
  8787 ;; This function is called by:
  8788 ;;		_batteryLevel
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           	psect	text34
  8793   003ACA                     __ptext34:
  8794                           	callstack 0
  8795   003ACA                     ___awdiv:
  8796                           	callstack 24
  8797   003ACA  0E00               	movlw	0
  8798   003ACC  6E11               	movwf	___awdiv@sign^0,c
  8799   003ACE  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  8800   003AD0  EF6E  F01D         	goto	u1730
  8801   003AD4  EF6C  F01D         	goto	u1731
  8802   003AD8                     u1731:
  8803   003AD8  EF74  F01D         	goto	l3118
  8804   003ADC                     u1730:
  8805   003ADC  6C0E               	negf	___awdiv@divisor^0,c
  8806   003ADE  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  8807   003AE0  B0D8               	btfsc	status,0,c
  8808   003AE2  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  8809   003AE4  0E01               	movlw	1
  8810   003AE6  6E11               	movwf	___awdiv@sign^0,c
  8811   003AE8                     l3118:
  8812   003AE8  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  8813   003AEA  EF7B  F01D         	goto	u1740
  8814   003AEE  EF79  F01D         	goto	u1741
  8815   003AF2                     u1741:
  8816   003AF2  EF81  F01D         	goto	l3124
  8817   003AF6                     u1740:
  8818   003AF6  6C0C               	negf	___awdiv@dividend^0,c
  8819   003AF8  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  8820   003AFA  B0D8               	btfsc	status,0,c
  8821   003AFC  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  8822   003AFE  0E01               	movlw	1
  8823   003B00  1A11               	xorwf	___awdiv@sign^0,f,c
  8824   003B02                     l3124:
  8825   003B02  0E00               	movlw	0
  8826   003B04  6E13               	movwf	(___awdiv@quotient+1)^0,c
  8827   003B06  0E00               	movlw	0
  8828   003B08  6E12               	movwf	___awdiv@quotient^0,c
  8829   003B0A  500E               	movf	___awdiv@divisor^0,w,c
  8830   003B0C  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  8831   003B0E  B4D8               	btfsc	status,2,c
  8832   003B10  EF8C  F01D         	goto	u1751
  8833   003B14  EF8E  F01D         	goto	u1750
  8834   003B18                     u1751:
  8835   003B18  EFB6  F01D         	goto	l3146
  8836   003B1C                     u1750:
  8837   003B1C  0E01               	movlw	1
  8838   003B1E  6E10               	movwf	___awdiv@counter^0,c
  8839   003B20  EF96  F01D         	goto	l3132
  8840   003B24                     l3130:
  8841   003B24  90D8               	bcf	status,0,c
  8842   003B26  360E               	rlcf	___awdiv@divisor^0,f,c
  8843   003B28  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  8844   003B2A  2A10               	incf	___awdiv@counter^0,f,c
  8845   003B2C                     l3132:
  8846   003B2C  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  8847   003B2E  EF9B  F01D         	goto	u1761
  8848   003B32  EF9D  F01D         	goto	u1760
  8849   003B36                     u1761:
  8850   003B36  EF92  F01D         	goto	l3130
  8851   003B3A                     u1760:
  8852   003B3A                     l3134:
  8853   003B3A  90D8               	bcf	status,0,c
  8854   003B3C  3612               	rlcf	___awdiv@quotient^0,f,c
  8855   003B3E  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  8856   003B40  500E               	movf	___awdiv@divisor^0,w,c
  8857   003B42  5C0C               	subwf	___awdiv@dividend^0,w,c
  8858   003B44  500F               	movf	(___awdiv@divisor+1)^0,w,c
  8859   003B46  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  8860   003B48  A0D8               	btfss	status,0,c
  8861   003B4A  EFA9  F01D         	goto	u1771
  8862   003B4E  EFAB  F01D         	goto	u1770
  8863   003B52                     u1771:
  8864   003B52  EFB0  F01D         	goto	l3142
  8865   003B56                     u1770:
  8866   003B56  500E               	movf	___awdiv@divisor^0,w,c
  8867   003B58  5E0C               	subwf	___awdiv@dividend^0,f,c
  8868   003B5A  500F               	movf	(___awdiv@divisor+1)^0,w,c
  8869   003B5C  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  8870   003B5E  8012               	bsf	___awdiv@quotient^0,0,c
  8871   003B60                     l3142:
  8872   003B60  90D8               	bcf	status,0,c
  8873   003B62  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  8874   003B64  320E               	rrcf	___awdiv@divisor^0,f,c
  8875   003B66  2E10               	decfsz	___awdiv@counter^0,f,c
  8876   003B68  EF9D  F01D         	goto	l3134
  8877   003B6C                     l3146:
  8878   003B6C  5011               	movf	___awdiv@sign^0,w,c
  8879   003B6E  B4D8               	btfsc	status,2,c
  8880   003B70  EFBC  F01D         	goto	u1781
  8881   003B74  EFBE  F01D         	goto	u1780
  8882   003B78                     u1781:
  8883   003B78  EFC2  F01D         	goto	l3150
  8884   003B7C                     u1780:
  8885   003B7C  6C12               	negf	___awdiv@quotient^0,c
  8886   003B7E  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  8887   003B80  B0D8               	btfsc	status,0,c
  8888   003B82  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  8889   003B84                     l3150:
  8890   003B84  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  8891   003B88  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  8892   003B8C  0012               	return		;funcret
  8893   003B8E                     __end_of___awdiv:
  8894                           	callstack 0
  8895                           
  8896 ;; *************** function _ADC_init *****************
  8897 ;; Defined at:
  8898 ;;		line 9 in file "ADC.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;		None
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;		None
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      void 
  8905 ;; Registers used:
  8906 ;;		wreg, status,2
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;Total ram usage:        0 bytes
  8917 ;; Hardware stack levels used: 1
  8918 ;; Hardware stack levels required when called: 5
  8919 ;; This function calls:
  8920 ;;		Nothing
  8921 ;; This function is called by:
  8922 ;;		_batteryLevel
  8923 ;; This function uses a non-reentrant model
  8924 ;;
  8925                           
  8926                           	psect	text35
  8927   004106                     __ptext35:
  8928                           	callstack 0
  8929   004106                     _ADC_init:
  8930                           	callstack 24
  8931   004106                     
  8932                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  8933   004106  8C86               	bsf	134,6,c	;volatile
  8934                           
  8935                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  8936   004108  010E               	movlb	14	; () banked
  8937   00410A  8DB4               	bsf	180,6,b	;volatile
  8938                           
  8939                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  8940   00410C  010F               	movlb	15	; () banked
  8941   00410E  9958               	bcf	88,4,b	;volatile
  8942   004110                     
  8943                           ; BSR set to: 15
  8944                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  8945   004110  0EFC               	movlw	-4
  8946   004112  1758               	andwf	88,f,b	;volatile
  8947                           
  8948                           ;ADC.c: 17:     ADPCH=0b101110;
  8949   004114  0E2E               	movlw	46
  8950   004116  6F5F               	movwf	95,b	;volatile
  8951   004118                     
  8952                           ; BSR set to: 15
  8953                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  8954   004118  9460               	bcf	96,2,c	;volatile
  8955   00411A                     
  8956                           ; BSR set to: 15
  8957                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  8958   00411A  8860               	bsf	96,4,c	;volatile
  8959   00411C                     
  8960                           ; BSR set to: 15
  8961                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  8962   00411C  8E60               	bsf	96,7,c	;volatile
  8963   00411E                     
  8964                           ; BSR set to: 15
  8965   00411E  0012               	return		;funcret
  8966   004120                     __end_of_ADC_init:
  8967                           	callstack 0
  8968                           
  8969 ;; *************** function _ADC_getval *****************
  8970 ;; Defined at:
  8971 ;;		line 23 in file "ADC.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;		None
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;  tmpval          1   11[COMRAM] unsigned char 
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      unsigned char 
  8978 ;; Registers used:
  8979 ;;		wreg, status,2
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8989 ;;Total ram usage:        1 bytes
  8990 ;; Hardware stack levels used: 1
  8991 ;; Hardware stack levels required when called: 5
  8992 ;; This function calls:
  8993 ;;		Nothing
  8994 ;; This function is called by:
  8995 ;;		_batteryLevel
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           	psect	text36
  9000   004120                     __ptext36:
  9001                           	callstack 0
  9002   004120                     _ADC_getval:
  9003                           	callstack 24
  9004   004120                     
  9005                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  9006   004120  8060               	bsf	96,0,c	;volatile
  9007   004122                     l401:
  9008   004122  B060               	btfsc	96,0,c	;volatile
  9009   004124  EF96  F020         	goto	u1621
  9010   004128  EF98  F020         	goto	u1620
  9011   00412C                     u1621:
  9012   00412C  EF91  F020         	goto	l401
  9013   004130                     u1620:
  9014   004130                     
  9015                           ;ADC.c: 31:     tmpval = ADRESH;
  9016   004130  CF64 F00C          	movff	3940,ADC_getval@tmpval	;volatile
  9017   004134                     
  9018                           ;ADC.c: 35:     return tmpval;
  9019   004134  500C               	movf	ADC_getval@tmpval^0,w,c
  9020   004136  0012               	return		;funcret
  9021   004138                     __end_of_ADC_getval:
  9022                           	callstack 0
  9023                           
  9024 ;; *************** function _Timer0_init *****************
  9025 ;; Defined at:
  9026 ;;		line 7 in file "timers.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;		None
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;		None
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  1    wreg      void 
  9033 ;; Registers used:
  9034 ;;		wreg, status,2
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9044 ;;Total ram usage:        0 bytes
  9045 ;; Hardware stack levels used: 1
  9046 ;; Hardware stack levels required when called: 5
  9047 ;; This function calls:
  9048 ;;		Nothing
  9049 ;; This function is called by:
  9050 ;;		_main
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           	psect	text37
  9055   0040A8                     __ptext37:
  9056                           	callstack 0
  9057   0040A8                     _Timer0_init:
  9058                           	callstack 25
  9059   0040A8                     
  9060                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  9061   0040A8  50D6               	movf	214,w,c	;volatile
  9062   0040AA  0B1F               	andlw	-225
  9063   0040AC  0940               	iorlw	64
  9064   0040AE  6ED6               	movwf	214,c	;volatile
  9065   0040B0                     
  9066                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  9067   0040B0  88D6               	bsf	214,4,c	;volatile
  9068                           
  9069                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
  9070   0040B2  50D6               	movf	214,w,c	;volatile
  9071   0040B4  0BF0               	andlw	-16
  9072   0040B6  090B               	iorlw	11
  9073   0040B8  6ED6               	movwf	214,c	;volatile
  9074   0040BA                     
  9075                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  9076   0040BA  88D5               	bsf	213,4,c	;volatile
  9077                           
  9078                           ;timers.c: 15:     TMR0H=0;
  9079   0040BC  0E00               	movlw	0
  9080   0040BE  6ED4               	movwf	212,c	;volatile
  9081                           
  9082                           ;timers.c: 16:     TMR0L=0;
  9083   0040C0  0E00               	movlw	0
  9084   0040C2  6ED3               	movwf	211,c	;volatile
  9085   0040C4                     
  9086                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  9087   0040C4  8ED5               	bsf	213,7,c	;volatile
  9088   0040C6  0012               	return		;funcret
  9089   0040C8                     __end_of_Timer0_init:
  9090                           	callstack 0
  9091                           
  9092 ;; *************** function _Interrupts_init *****************
  9093 ;; Defined at:
  9094 ;;		line 11 in file "interrupts.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;		None
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;		None
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  1    wreg      void 
  9101 ;; Registers used:
  9102 ;;		None
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9112 ;;Total ram usage:        0 bytes
  9113 ;; Hardware stack levels used: 1
  9114 ;; Hardware stack levels required when called: 5
  9115 ;; This function calls:
  9116 ;;		Nothing
  9117 ;; This function is called by:
  9118 ;;		_main
  9119 ;; This function uses a non-reentrant model
  9120 ;;
  9121                           
  9122                           	psect	text38
  9123   004150                     __ptext38:
  9124                           	callstack 0
  9125   004150                     _Interrupts_init:
  9126                           	callstack 25
  9127   004150                     
  9128                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
  9129   004150  8082               	bsf	130,0,c	;volatile
  9130                           
  9131                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
  9132   004152  010E               	movlb	14	; () banked
  9133   004154  919A               	bcf	154,0,b	;volatile
  9134                           
  9135                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
  9136   004156  8129               	bsf	41,0,b	;volatile
  9137                           
  9138                           ;interrupts.c: 17:     IPR0bits.INT0IP = 1;
  9139   004158  811F               	bsf	31,0,b	;volatile
  9140                           
  9141                           ;interrupts.c: 18:     INTCONbits.INT0EDG = 0;
  9142   00415A  90F2               	bcf	242,0,c	;volatile
  9143                           
  9144                           ;interrupts.c: 22:     TMR0IE=1;
  9145   00415C  8B29               	bsf	41,5,b	;volatile
  9146                           
  9147                           ;interrupts.c: 23:     PIE4bits.RC4IE=1;
  9148   00415E  872D               	bsf	45,3,b	;volatile
  9149                           
  9150                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  9151   004160  8CF2               	bsf	242,6,c	;volatile
  9152                           
  9153                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  9154   004162  8EF2               	bsf	242,7,c	;volatile
  9155   004164                     
  9156                           ; BSR set to: 14
  9157   004164  0012               	return		;funcret
  9158   004166                     __end_of_Interrupts_init:
  9159                           	callstack 0
  9160                           
  9161 ;; *************** function _Buggy_init *****************
  9162 ;; Defined at:
  9163 ;;		line 7 in file "buggysetup.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;		None
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      void 
  9170 ;; Registers used:
  9171 ;;		None
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9181 ;;Total ram usage:        0 bytes
  9182 ;; Hardware stack levels used: 1
  9183 ;; Hardware stack levels required when called: 5
  9184 ;; This function calls:
  9185 ;;		Nothing
  9186 ;; This function is called by:
  9187 ;;		_main
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text39
  9192   003F1A                     __ptext39:
  9193                           	callstack 0
  9194   003F1A                     _Buggy_init:
  9195                           	callstack 25
  9196   003F1A                     
  9197                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
  9198   003F1A  9E7C               	bcf	124,7,c	;volatile
  9199                           
  9200                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
  9201   003F1C  9E84               	bcf	132,7,c	;volatile
  9202                           
  9203                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
  9204   003F1E  9680               	bcf	128,3,c	;volatile
  9205                           
  9206                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
  9207   003F20  9688               	bcf	136,3,c	;volatile
  9208                           
  9209                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
  9210   003F22  8486               	bsf	134,2,c	;volatile
  9211                           
  9212                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
  9213   003F24  010E               	movlb	14	; () banked
  9214   003F26  95B4               	bcf	180,2,b	;volatile
  9215                           
  9216                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
  9217   003F28  8686               	bsf	134,3,c	;volatile
  9218                           
  9219                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
  9220   003F2A  97B4               	bcf	180,3,b	;volatile
  9221                           
  9222                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
  9223   003F2C  9280               	bcf	128,1,c	;volatile
  9224                           
  9225                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
  9226   003F2E  9288               	bcf	136,1,c	;volatile
  9227                           
  9228                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
  9229   003F30  987C               	bcf	124,4,c	;volatile
  9230                           
  9231                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
  9232   003F32  9884               	bcf	132,4,c	;volatile
  9233                           
  9234                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
  9235   003F34  967C               	bcf	124,3,c	;volatile
  9236                           
  9237                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
  9238   003F36  9684               	bcf	132,3,c	;volatile
  9239                           
  9240                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
  9241   003F38  97A7               	bcf	167,3,b	;volatile
  9242                           
  9243                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
  9244   003F3A  9080               	bcf	128,0,c	;volatile
  9245                           
  9246                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
  9247   003F3C  9088               	bcf	136,0,c	;volatile
  9248                           
  9249                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
  9250   003F3E  907E               	bcf	126,0,c	;volatile
  9251                           
  9252                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
  9253   003F40  9086               	bcf	134,0,c	;volatile
  9254                           
  9255                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
  9256   003F42  907F               	bcf	127,0,c	;volatile
  9257                           
  9258                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
  9259   003F44  9087               	bcf	135,0,c	;volatile
  9260                           
  9261                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
  9262   003F46  9E7D               	bcf	125,7,c	;volatile
  9263                           
  9264                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
  9265   003F48  9E85               	bcf	133,7,c	;volatile
  9266                           
  9267                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
  9268   003F4A  9679               	bcf	121,3,c	;volatile
  9269                           
  9270                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
  9271   003F4C  9681               	bcf	129,3,c	;volatile
  9272   003F4E                     
  9273                           ; BSR set to: 14
  9274   003F4E  0012               	return		;funcret
  9275   003F50                     __end_of_Buggy_init:
  9276                           	callstack 0
  9277                           
  9278 ;; *************** function _HighISR *****************
  9279 ;; Defined at:
  9280 ;;		line 33 in file "interrupts.c"
  9281 ;; Parameters:    Size  Location     Type
  9282 ;;		None
  9283 ;; Auto vars:     Size  Location     Type
  9284 ;;		None
  9285 ;; Return value:  Size  Location     Type
  9286 ;;                  1    wreg      void 
  9287 ;; Registers used:
  9288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9289 ;; Tracked objects:
  9290 ;;		On entry : 0/0
  9291 ;;		On exit  : 0/0
  9292 ;;		Unchanged: 0/0
  9293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9298 ;;Total ram usage:        2 bytes
  9299 ;; Hardware stack levels used: 1
  9300 ;; Hardware stack levels required when called: 4
  9301 ;; This function calls:
  9302 ;;		_getCharFromTxBuf
  9303 ;;		_isDataInTxBuf
  9304 ;;		_putCharToRxBuf
  9305 ;;		i2_color_clear_init_interrupts
  9306 ;; This function is called by:
  9307 ;;		Interrupt level 2
  9308 ;; This function uses a non-reentrant model
  9309 ;;
  9310                           
  9311                           	psect	intcode
  9312   000008                     __pintcode:
  9313                           	callstack 0
  9314   000008                     _HighISR:
  9315                           	callstack 21
  9316                           
  9317                           ; BSR set to: 14
  9318                           ;incstack = 0
  9319   000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9320   00000A  CFD9 F00A          	movff	fsr2l,??_HighISR
  9321   00000E  CFDA F00B          	movff	fsr2h,??_HighISR+1
  9322   000012                     
  9323                           ;interrupts.c: 37:     if(PIR0bits.INT0IF){
  9324   000012  010E               	movlb	14	; () banked
  9325   000014  A133               	btfss	51,0,b	;volatile
  9326   000016  EF0F  F000         	goto	i2u237_41
  9327   00001A  EF11  F000         	goto	i2u237_40
  9328   00001E                     i2u237_41:
  9329   00001E  EF18  F000         	goto	i2l3770
  9330   000022                     i2u237_40:
  9331   000022                     
  9332                           ; BSR set to: 14
  9333                           ;interrupts.c: 38:         wall = 1;
  9334   000022  0E01               	movlw	1
  9335   000024  0100               	movlb	0	; () banked
  9336   000026  6FB1               	movwf	_wall& (0+255),b
  9337   000028                     
  9338                           ; BSR set to: 0
  9339                           ;interrupts.c: 39:         color_clear_init_interrupts();
  9340   000028  EC4C  F01E         	call	i2_color_clear_init_interrupts	;wreg free
  9341   00002C                     
  9342                           ;interrupts.c: 40:         PIR0bits.INT0IF = 0;
  9343   00002C  010E               	movlb	14	; () banked
  9344   00002E  9133               	bcf	51,0,b	;volatile
  9345   000030                     i2l3770:
  9346                           
  9347                           ; BSR set to: 14
  9348                           ;interrupts.c: 47:     if(TMR0IF){
  9349   000030  AB33               	btfss	51,5,b	;volatile
  9350   000032  EF1D  F000         	goto	i2u238_41
  9351   000036  EF1F  F000         	goto	i2u238_40
  9352   00003A                     i2u238_41:
  9353   00003A  EF24  F000         	goto	i2l3776
  9354   00003E                     i2u238_40:
  9355   00003E                     
  9356                           ; BSR set to: 14
  9357                           ;interrupts.c: 48:         lost = 1;
  9358   00003E  0E01               	movlw	1
  9359   000040  0100               	movlb	0	; () banked
  9360   000042  6FB0               	movwf	_lost& (0+255),b
  9361   000044                     
  9362                           ; BSR set to: 0
  9363                           ;interrupts.c: 49:         TMR0IF=0;
  9364   000044  010E               	movlb	14	; () banked
  9365   000046  9B33               	bcf	51,5,b	;volatile
  9366   000048                     i2l3776:
  9367                           
  9368                           ; BSR set to: 14
  9369                           ;interrupts.c: 56:     if(PIR4bits.RC4IF){
  9370   000048  A737               	btfss	55,3,b	;volatile
  9371   00004A  EF29  F000         	goto	i2u239_41
  9372   00004E  EF2B  F000         	goto	i2u239_40
  9373   000052                     i2u239_41:
  9374   000052  EF2E  F000         	goto	i2l3780
  9375   000056                     i2u239_40:
  9376   000056                     
  9377                           ; BSR set to: 14
  9378                           ;interrupts.c: 58:         putCharToRxBuf(RC4REG);
  9379   000056  51E3               	movf	227,w,b	;volatile
  9380   000058  EC0C  F020         	call	_putCharToRxBuf
  9381   00005C                     i2l3780:
  9382                           
  9383                           ;interrupts.c: 62:     if(PIR4bits.TX4IF){
  9384   00005C  010E               	movlb	14	; () banked
  9385   00005E  A537               	btfss	55,2,b	;volatile
  9386   000060  EF34  F000         	goto	i2u240_41
  9387   000064  EF36  F000         	goto	i2u240_40
  9388   000068                     i2u240_41:
  9389   000068  EF46  F000         	goto	i2l320
  9390   00006C                     i2u240_40:
  9391   00006C                     
  9392                           ; BSR set to: 14
  9393                           ;interrupts.c: 64:         TX4REG = getCharFromTxBuf();
  9394   00006C  EC1F  F020         	call	_getCharFromTxBuf	;wreg free
  9395   000070  010E               	movlb	14	; () banked
  9396   000072  6FE4               	movwf	228,b	;volatile
  9397   000074                     
  9398                           ; BSR set to: 14
  9399                           ;interrupts.c: 65:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
  9400   000074  EC9C  F020         	call	_isDataInTxBuf	;wreg free
  9401   000078  0900               	iorlw	0
  9402   00007A  A4D8               	btfss	status,2,c
  9403   00007C  EF42  F000         	goto	i2u241_41
  9404   000080  EF44  F000         	goto	i2u241_40
  9405   000084                     i2u241_41:
  9406   000084  EF46  F000         	goto	i2l320
  9407   000088                     i2u241_40:
  9408   000088  010E               	movlb	14	; () banked
  9409   00008A  952D               	bcf	45,2,b	;volatile
  9410   00008C                     i2l320:
  9411   00008C  C00B  FFDA         	movff	??_HighISR+1,fsr2h
  9412   000090  C00A  FFD9         	movff	??_HighISR,fsr2l
  9413   000094  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9414   000096  0011               	retfie		f
  9415   000098                     __end_of_HighISR:
  9416                           	callstack 0
  9417                           
  9418 ;; *************** function i2_color_clear_init_interrupts *****************
  9419 ;; Defined at:
  9420 ;;		line 27 in file "color.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  low_threshol    2    7[COMRAM] unsigned int 
  9425 ;;  high_thresho    2    5[COMRAM] unsigned int 
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  1    wreg      void 
  9428 ;; Registers used:
  9429 ;;		wreg, status,2, status,0, cstack
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9436 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9437 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9438 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9439 ;;Total ram usage:        5 bytes
  9440 ;; Hardware stack levels used: 1
  9441 ;; Hardware stack levels required when called: 3
  9442 ;; This function calls:
  9443 ;;		i2_I2C_2_Master_Start
  9444 ;;		i2_I2C_2_Master_Stop
  9445 ;;		i2_I2C_2_Master_Write
  9446 ;;		i2_color_writetoaddr
  9447 ;; This function is called by:
  9448 ;;		_HighISR
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text41
  9453   003C98                     __ptext41:
  9454                           	callstack 0
  9455   003C98                     i2_color_clear_init_interrupts:
  9456                           	callstack 21
  9457   003C98                     
  9458                           ;color.c: 29:     I2C_2_Master_Start();
  9459   003C98  ECD8  F020         	call	i2_I2C_2_Master_Start	;wreg free
  9460                           
  9461                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  9462   003C9C  0E52               	movlw	82
  9463   003C9E  ECB9  F020         	call	i2_I2C_2_Master_Write
  9464                           
  9465                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  9466   003CA2  0EE6               	movlw	230
  9467   003CA4  ECB9  F020         	call	i2_I2C_2_Master_Write
  9468                           
  9469                           ;color.c: 32:     I2C_2_Master_Stop();
  9470   003CA8  ECD3  F020         	call	i2_I2C_2_Master_Stop	;wreg free
  9471   003CAC                     
  9472                           ;color.c: 35:     unsigned int high_threshold = ambient + 15;
  9473   003CAC  0E0F               	movlw	15
  9474   003CAE  244E               	addwf	_ambient^0,w,c
  9475   003CB0  6E06               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
  9476   003CB2  0E00               	movlw	0
  9477   003CB4  204F               	addwfc	(_ambient+1)^0,w,c
  9478   003CB6  6E07               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
  9479   003CB8                     
  9480                           ;color.c: 36:     unsigned int low_threshold = ambient - 15;
  9481   003CB8  0EF1               	movlw	241
  9482   003CBA  244E               	addwf	_ambient^0,w,c
  9483   003CBC  6E08               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
  9484   003CBE  0EFF               	movlw	255
  9485   003CC0  204F               	addwfc	(_ambient+1)^0,w,c
  9486   003CC2  6E09               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
  9487                           
  9488                           ;color.c: 39:  color_writetoaddr(0x00, 0x13);
  9489   003CC4  0E13               	movlw	19
  9490   003CC6  6E03               	movwf	i2color_writetoaddr@value^0,c
  9491   003CC8  0E00               	movlw	0
  9492   003CCA  EC64  F020         	call	i2_color_writetoaddr
  9493   003CCE                     
  9494                           ;color.c: 40:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9495   003CCE  0E3F               	movlw	63
  9496   003CD0  6E05               	movwf	??i2_color_clear_init_interrupts^0,c
  9497   003CD2  0E55               	movlw	85
  9498   003CD4                     i2u356_47:
  9499   003CD4  2EE8               	decfsz	wreg,f,c
  9500   003CD6  D7FE               	bra	i2u356_47
  9501   003CD8  2E05               	decfsz	??i2_color_clear_init_interrupts^0,f,c
  9502   003CDA  D7FC               	bra	i2u356_47
  9503   003CDC  0000               	nop	
  9504   003CDE                     
  9505                           ;color.c: 41:     color_writetoaddr(0x07, (high_threshold >> 8));
  9506   003CDE  5007               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
  9507   003CE0  6E03               	movwf	i2color_writetoaddr@value^0,c
  9508   003CE2  0E07               	movlw	7
  9509   003CE4  EC64  F020         	call	i2_color_writetoaddr
  9510   003CE8                     
  9511                           ;color.c: 42:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  9512   003CE8  C006  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
  9513   003CEC  0E06               	movlw	6
  9514   003CEE  EC64  F020         	call	i2_color_writetoaddr
  9515   003CF2                     
  9516                           ;color.c: 43:     color_writetoaddr(0x05, (low_threshold >> 8));
  9517   003CF2  5009               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
  9518   003CF4  6E03               	movwf	i2color_writetoaddr@value^0,c
  9519   003CF6  0E05               	movlw	5
  9520   003CF8  EC64  F020         	call	i2_color_writetoaddr
  9521   003CFC                     
  9522                           ;color.c: 44:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  9523   003CFC  C008  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
  9524   003D00  0E04               	movlw	4
  9525   003D02  EC64  F020         	call	i2_color_writetoaddr
  9526   003D06                     
  9527                           ;color.c: 45:     color_writetoaddr(0x0C, 0b0100);
  9528   003D06  0E04               	movlw	4
  9529   003D08  6E03               	movwf	i2color_writetoaddr@value^0,c
  9530   003D0A  0E0C               	movlw	12
  9531   003D0C  EC64  F020         	call	i2_color_writetoaddr
  9532   003D10  0012               	return		;funcret
  9533   003D12                     __end_ofi2_color_clear_init_interrupts:
  9534                           	callstack 0
  9535                           
  9536 ;; *************** function i2_color_writetoaddr *****************
  9537 ;; Defined at:
  9538 ;;		line 50 in file "color.c"
  9539 ;; Parameters:    Size  Location     Type
  9540 ;;  address         1    wreg     unsigned char 
  9541 ;;  value           1    2[COMRAM] unsigned char 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;  address         1    3[COMRAM] unsigned char 
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  1    wreg      void 
  9546 ;; Registers used:
  9547 ;;		wreg, status,2, status,0, cstack
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9553 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9557 ;;Total ram usage:        2 bytes
  9558 ;; Hardware stack levels used: 1
  9559 ;; Hardware stack levels required when called: 2
  9560 ;; This function calls:
  9561 ;;		i2_I2C_2_Master_Start
  9562 ;;		i2_I2C_2_Master_Stop
  9563 ;;		i2_I2C_2_Master_Write
  9564 ;; This function is called by:
  9565 ;;		i2_color_clear_init_interrupts
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           	psect	text42
  9570   0040C8                     __ptext42:
  9571                           	callstack 0
  9572   0040C8                     i2_color_writetoaddr:
  9573                           	callstack 21
  9574                           
  9575                           ;incstack = 0
  9576                           ;i2color_writetoaddr@address stored from wreg
  9577   0040C8  6E04               	movwf	i2color_writetoaddr@address^0,c
  9578   0040CA                     
  9579                           ;color.c: 51:     I2C_2_Master_Start();
  9580   0040CA  ECD8  F020         	call	i2_I2C_2_Master_Start	;wreg free
  9581                           
  9582                           ;color.c: 52:     I2C_2_Master_Write(0x52 | 0x00);
  9583   0040CE  0E52               	movlw	82
  9584   0040D0  ECB9  F020         	call	i2_I2C_2_Master_Write
  9585                           
  9586                           ;color.c: 53:     I2C_2_Master_Write(0x80 | address);
  9587   0040D4  5004               	movf	i2color_writetoaddr@address^0,w,c
  9588   0040D6  0980               	iorlw	128
  9589   0040D8  ECB9  F020         	call	i2_I2C_2_Master_Write
  9590                           
  9591                           ;color.c: 54:     I2C_2_Master_Write(value);
  9592   0040DC  5003               	movf	i2color_writetoaddr@value^0,w,c
  9593   0040DE  ECB9  F020         	call	i2_I2C_2_Master_Write
  9594                           
  9595                           ;color.c: 55:     I2C_2_Master_Stop();
  9596   0040E2  ECD3  F020         	call	i2_I2C_2_Master_Stop	;wreg free
  9597   0040E6  0012               	return		;funcret
  9598   0040E8                     __end_ofi2_color_writetoaddr:
  9599                           	callstack 0
  9600                           
  9601 ;; *************** function i2_I2C_2_Master_Write *****************
  9602 ;; Defined at:
  9603 ;;		line 45 in file "i2c.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  data_byte       1    wreg     unsigned char 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  data_byte       1    1[COMRAM] unsigned char 
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg, status,2, status,0, cstack
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9621 ;;Total ram usage:        1 bytes
  9622 ;; Hardware stack levels used: 1
  9623 ;; Hardware stack levels required when called: 1
  9624 ;; This function calls:
  9625 ;;		i2_I2C_2_Master_Idle
  9626 ;; This function is called by:
  9627 ;;		i2_color_clear_init_interrupts
  9628 ;;		i2_color_writetoaddr
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           	psect	text43
  9633   004172                     __ptext43:
  9634                           	callstack 0
  9635   004172                     i2_I2C_2_Master_Write:
  9636                           	callstack 21
  9637                           
  9638                           ;incstack = 0
  9639                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9640   004172  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9641   004174                     
  9642                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9643   004174  ECE5  F01F         	call	i2_I2C_2_Master_Idle	;wreg free
  9644   004178                     
  9645                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9646   004178  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9647   00417C  0012               	return		;funcret
  9648   00417E                     __end_ofi2_I2C_2_Master_Write:
  9649                           	callstack 0
  9650                           
  9651 ;; *************** function i2_I2C_2_Master_Stop *****************
  9652 ;; Defined at:
  9653 ;;		line 39 in file "i2c.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;		None
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;		None
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  1    wreg      void 
  9660 ;; Registers used:
  9661 ;;		wreg, status,2, status,0, cstack
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9671 ;;Total ram usage:        0 bytes
  9672 ;; Hardware stack levels used: 1
  9673 ;; Hardware stack levels required when called: 1
  9674 ;; This function calls:
  9675 ;;		i2_I2C_2_Master_Idle
  9676 ;; This function is called by:
  9677 ;;		i2_color_clear_init_interrupts
  9678 ;;		i2_color_writetoaddr
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	text44
  9683   0041A6                     __ptext44:
  9684                           	callstack 0
  9685   0041A6                     i2_I2C_2_Master_Stop:
  9686                           	callstack 21
  9687   0041A6                     
  9688                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9689   0041A6  ECE5  F01F         	call	i2_I2C_2_Master_Idle	;wreg free
  9690   0041AA                     
  9691                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9692   0041AA  010E               	movlb	14	; () banked
  9693   0041AC  85DA               	bsf	218,2,b	;volatile
  9694   0041AE                     
  9695                           ; BSR set to: 14
  9696   0041AE  0012               	return		;funcret
  9697   0041B0                     __end_ofi2_I2C_2_Master_Stop:
  9698                           	callstack 0
  9699                           
  9700 ;; *************** function i2_I2C_2_Master_Start *****************
  9701 ;; Defined at:
  9702 ;;		line 27 in file "i2c.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;		None
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1    wreg      void 
  9709 ;; Registers used:
  9710 ;;		wreg, status,2, status,0, cstack
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9720 ;;Total ram usage:        0 bytes
  9721 ;; Hardware stack levels used: 1
  9722 ;; Hardware stack levels required when called: 1
  9723 ;; This function calls:
  9724 ;;		i2_I2C_2_Master_Idle
  9725 ;; This function is called by:
  9726 ;;		i2_color_clear_init_interrupts
  9727 ;;		i2_color_writetoaddr
  9728 ;; This function uses a non-reentrant model
  9729 ;;
  9730                           
  9731                           	psect	text45
  9732   0041B0                     __ptext45:
  9733                           	callstack 0
  9734   0041B0                     i2_I2C_2_Master_Start:
  9735                           	callstack 21
  9736   0041B0                     
  9737                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9738   0041B0  ECE5  F01F         	call	i2_I2C_2_Master_Idle	;wreg free
  9739   0041B4                     
  9740                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9741   0041B4  010E               	movlb	14	; () banked
  9742   0041B6  81DA               	bsf	218,0,b	;volatile
  9743   0041B8                     
  9744                           ; BSR set to: 14
  9745   0041B8  0012               	return		;funcret
  9746   0041BA                     __end_ofi2_I2C_2_Master_Start:
  9747                           	callstack 0
  9748                           
  9749 ;; *************** function i2_I2C_2_Master_Idle *****************
  9750 ;; Defined at:
  9751 ;;		line 22 in file "i2c.c"
  9752 ;; Parameters:    Size  Location     Type
  9753 ;;		None
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;		None
  9756 ;; Return value:  Size  Location     Type
  9757 ;;                  1    wreg      void 
  9758 ;; Registers used:
  9759 ;;		wreg, status,2, status,0
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 0/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9769 ;;Total ram usage:        1 bytes
  9770 ;; Hardware stack levels used: 1
  9771 ;; This function calls:
  9772 ;;		Nothing
  9773 ;; This function is called by:
  9774 ;;		i2_I2C_2_Master_Start
  9775 ;;		i2_I2C_2_Master_Stop
  9776 ;;		i2_I2C_2_Master_Write
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           	psect	text46
  9781   003FCA                     __ptext46:
  9782                           	callstack 0
  9783   003FCA                     i2_I2C_2_Master_Idle:
  9784                           	callstack 21
  9785   003FCA                     i2l210:
  9786   003FCA  010E               	movlb	14	; () banked
  9787   003FCC  B5D8               	btfsc	216,2,b	;volatile
  9788   003FCE  EFEB  F01F         	goto	i2u130_41
  9789   003FD2  EFED  F01F         	goto	i2u130_40
  9790   003FD6                     i2u130_41:
  9791   003FD6  EFE5  F01F         	goto	i2l210
  9792   003FDA                     i2u130_40:
  9793   003FDA                     
  9794                           ; BSR set to: 14
  9795   003FDA  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9796   003FDE  0E1F               	movlw	31
  9797   003FE0  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9798   003FE2  A4D8               	btfss	status,2,c
  9799   003FE4  EFF6  F01F         	goto	i2u131_41
  9800   003FE8  EFF8  F01F         	goto	i2u131_40
  9801   003FEC                     i2u131_41:
  9802   003FEC  EFE5  F01F         	goto	i2l210
  9803   003FF0                     i2u131_40:
  9804   003FF0                     
  9805                           ; BSR set to: 14
  9806   003FF0  0012               	return		;funcret
  9807   003FF2                     __end_ofi2_I2C_2_Master_Idle:
  9808                           	callstack 0
  9809                           
  9810 ;; *************** function _putCharToRxBuf *****************
  9811 ;; Defined at:
  9812 ;;		line 33 in file "serial.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;  byte            1    wreg     unsigned char 
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;  byte            1    0[COMRAM] unsigned char 
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9830 ;;Total ram usage:        1 bytes
  9831 ;; Hardware stack levels used: 1
  9832 ;; This function calls:
  9833 ;;		Nothing
  9834 ;; This function is called by:
  9835 ;;		_HighISR
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839                           	psect	text47
  9840   004018                     __ptext47:
  9841                           	callstack 0
  9842   004018                     _putCharToRxBuf:
  9843                           	callstack 24
  9844                           
  9845                           ; BSR set to: 14
  9846                           ;incstack = 0
  9847                           ;putCharToRxBuf@byte stored from wreg
  9848   004018  6E01               	movwf	putCharToRxBuf@byte^0,c
  9849   00401A                     
  9850                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9851   00401A  0E13               	movlw	19
  9852   00401C  644D               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9853   00401E  EF13  F020         	goto	i2u221_41
  9854   004022  EF15  F020         	goto	i2u221_40
  9855   004026                     i2u221_41:
  9856   004026  EF17  F020         	goto	i2l3590
  9857   00402A                     i2u221_40:
  9858   00402A  0E00               	movlw	0
  9859   00402C  6E4D               	movwf	_RxBufWriteCnt^0,c	;volatile
  9860   00402E                     i2l3590:
  9861                           
  9862                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9863   00402E  504D               	movf	_RxBufWriteCnt^0,w,c
  9864   004030  0F9C               	addlw	low _EUSART4RXbuf
  9865   004032  6ED9               	movwf	fsr2l,c
  9866   004034  6ADA               	clrf	fsr2h,c
  9867   004036  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9868   00403A  2A4D               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9869   00403C  0012               	return		;funcret
  9870   00403E                     __end_of_putCharToRxBuf:
  9871                           	callstack 0
  9872                           
  9873 ;; *************** function _isDataInTxBuf *****************
  9874 ;; Defined at:
  9875 ;;		line 61 in file "serial.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;		None
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;		None
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  1    wreg      unsigned char 
  9882 ;; Registers used:
  9883 ;;		wreg, status,2, status,0
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9893 ;;Total ram usage:        0 bytes
  9894 ;; Hardware stack levels used: 1
  9895 ;; This function calls:
  9896 ;;		Nothing
  9897 ;; This function is called by:
  9898 ;;		_HighISR
  9899 ;;		_sendTxBuf
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           	psect	text48
  9904   004138                     __ptext48:
  9905                           	callstack 0
  9906   004138                     _isDataInTxBuf:
  9907                           	callstack 24
  9908   004138                     
  9909                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
  9910   004138  504A               	movf	_TxBufReadCnt^0,w,c	;volatile
  9911   00413A  184B               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  9912   00413C  A4D8               	btfss	status,2,c
  9913   00413E  EFA3  F020         	goto	i2u223_41
  9914   004142  EFA6  F020         	goto	i2u223_40
  9915   004146                     i2u223_41:
  9916   004146  0E01               	movlw	1
  9917   004148  EFA7  F020         	goto	i2u224_40
  9918   00414C                     i2u223_40:
  9919   00414C  0E00               	movlw	0
  9920   00414E                     i2u224_40:
  9921   00414E  0012               	return		;funcret
  9922   004150                     __end_of_isDataInTxBuf:
  9923                           	callstack 0
  9924                           
  9925 ;; *************** function _getCharFromTxBuf *****************
  9926 ;; Defined at:
  9927 ;;		line 47 in file "serial.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;		None
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      unsigned char 
  9934 ;; Registers used:
  9935 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9945 ;;Total ram usage:        1 bytes
  9946 ;; Hardware stack levels used: 1
  9947 ;; This function calls:
  9948 ;;		Nothing
  9949 ;; This function is called by:
  9950 ;;		_HighISR
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           	psect	text49
  9955   00403E                     __ptext49:
  9956                           	callstack 0
  9957   00403E                     _getCharFromTxBuf:
  9958                           	callstack 24
  9959   00403E                     
  9960                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9961   00403E  0E3B               	movlw	59
  9962   004040  644A               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9963   004042  EF25  F020         	goto	i2u222_41
  9964   004046  EF27  F020         	goto	i2u222_40
  9965   00404A                     i2u222_41:
  9966   00404A  EF29  F020         	goto	i2l3598
  9967   00404E                     i2u222_40:
  9968   00404E  0E00               	movlw	0
  9969   004050  6E4A               	movwf	_TxBufReadCnt^0,c	;volatile
  9970   004052                     i2l3598:
  9971                           
  9972                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
  9973   004052  2A4A               	incf	_TxBufReadCnt^0,f,c	;volatile
  9974   004054  044A               	decf	_TxBufReadCnt^0,w,c	;volatile
  9975   004056  6E01               	movwf	??_getCharFromTxBuf^0,c
  9976   004058  5001               	movf	??_getCharFromTxBuf^0,w,c
  9977   00405A  0F60               	addlw	low _EUSART4TXbuf
  9978   00405C  6ED9               	movwf	fsr2l,c
  9979   00405E  6ADA               	clrf	fsr2h,c
  9980   004060  50DF               	movf	indf2,w,c
  9981   004062  0012               	return		;funcret
  9982   004064                     __end_of_getCharFromTxBuf:
  9983                           	callstack 0
  9984                           
  9985                           	psect	smallconst
  9986   000E00                     __psmallconst:
  9987                           	callstack 0
  9988   000E00  00                 	db	0
  9989   000E01  00                 	db	0	; dummy byte at the end
  9990   000000                     
  9991                           	psect	rparam
  9992   000000                     
  9993                           	psect	temp
  9994   000050                     btemp:
  9995                           	callstack 0
  9996   000050                     	ds	1
  9997   000000                     int$flags	set	btemp
  9998   000000                     wtemp8	set	btemp+1
  9999   000000                     ttemp5	set	btemp+1
 10000   000000                     ttemp6	set	btemp+4
 10001   000000                     ttemp7	set	btemp+8
 10002                           
 10003                           	psect	config
 10004                           
 10005                           ;Config register CONFIG1L @ 0x300000
 10006                           ;	External Oscillator mode Selection bits
 10007                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10008                           ;	Power-up default value for COSC bits
 10009                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10010   300000                     	org	3145728
 10011   300000  AA                 	db	170
 10012                           
 10013                           ;Config register CONFIG1H @ 0x300001
 10014                           ;	unspecified, using default values
 10015                           ;	Clock Out Enable bit
 10016                           ;	CLKOUTEN = 0x1, unprogrammed default
 10017                           ;	Clock Switch Enable bit
 10018                           ;	CSWEN = 0x1, unprogrammed default
 10019                           ;	Fail-Safe Clock Monitor Enable bit
 10020                           ;	FCMEN = 0x1, unprogrammed default
 10021   300001                     	org	3145729
 10022   300001  FF                 	db	255
 10023                           
 10024                           ;Config register CONFIG3L @ 0x300004
 10025                           ;	WDT Period Select bits
 10026                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10027                           ;	WDT operating mode
 10028                           ;	WDTE = OFF, WDT Disabled
 10029   300004                     	org	3145732
 10030   300004  9F                 	db	159
 10031                           
 10032                           ;Config register CONFIG3H @ 0x300005
 10033                           ;	unspecified, using default values
 10034                           ;	WDT Window Select bits
 10035                           ;	WDTCWS = 0x7, unprogrammed default
 10036                           ;	WDT input clock selector
 10037                           ;	WDTCCS = 0x7, unprogrammed default
 10038   300005                     	org	3145733
 10039   300005  FF                 	db	255
 10040                           tosu	equ	0xFFF
 10041                           tosh	equ	0xFFE
 10042                           tosl	equ	0xFFD
 10043                           stkptr	equ	0xFFC
 10044                           pclatu	equ	0xFFB
 10045                           pclath	equ	0xFFA
 10046                           pcl	equ	0xFF9
 10047                           tblptru	equ	0xFF8
 10048                           tblptrh	equ	0xFF7
 10049                           tblptrl	equ	0xFF6
 10050                           tablat	equ	0xFF5
 10051                           prodh	equ	0xFF4
 10052                           prodl	equ	0xFF3
 10053                           indf0	equ	0xFEF
 10054                           postinc0	equ	0xFEE
 10055                           postdec0	equ	0xFED
 10056                           preinc0	equ	0xFEC
 10057                           plusw0	equ	0xFEB
 10058                           fsr0h	equ	0xFEA
 10059                           fsr0l	equ	0xFE9
 10060                           wreg	equ	0xFE8
 10061                           indf1	equ	0xFE7
 10062                           postinc1	equ	0xFE6
 10063                           postdec1	equ	0xFE5
 10064                           preinc1	equ	0xFE4
 10065                           plusw1	equ	0xFE3
 10066                           fsr1h	equ	0xFE2
 10067                           fsr1l	equ	0xFE1
 10068                           bsr	equ	0xFE0
 10069                           indf2	equ	0xFDF
 10070                           postinc2	equ	0xFDE
 10071                           postdec2	equ	0xFDD
 10072                           preinc2	equ	0xFDC
 10073                           plusw2	equ	0xFDB
 10074                           fsr2h	equ	0xFDA
 10075                           fsr2l	equ	0xFD9
 10076                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      79
    BANK0           160     56     142
    BANK1           256    218     218
    BANK2           256      0     162
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK1[1]), 

    color_calibration@blue	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@blue(BANK1[6]), 

    color_calibration@green	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@green(BANK1[6]), 

    color_calibration@lightblue	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@lightblue(BANK1[6]), 

    color_calibration@orange	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@orange(BANK1[6]), 

    color_calibration@pink	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@pink(BANK1[6]), 

    color_calibration@red	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@red(BANK1[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    color_calibration@RGBC_n	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC_n(BANK1[8]), 

    color_calibration@white	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@white(BANK1[6]), 

    color_calibration@yellow	PTR struct RGB_calib size(2) Largest target is 6
		 -> main@yellow(BANK1[6]), 

    color_normalise@RGBC_n	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC_n(BANK1[8]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    S29DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S29DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), main@motorR(BANK1[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_calibration
    _move->_returnHome
    _returnHome->_reverseOneSquare
    _returnHome->_turnLeft
    _returnHome->_turnRight
    _lostReturnHome->_reverseOneSquare
    _lostReturnHome->_turnLeft
    _lostReturnHome->_turnRight
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_color_normalise
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___aldiv
    ___aldiv->___lmul
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_move

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               262   262      0  216207
                                             71 COMRAM     2     2      0
                                             16 BANK0     40    40      0
                                              0 BANK1    218   218      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
                   _color_click_init
                    _color_normalise
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                               _stop
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _move                                                18     2     16  103098
                                             64 COMRAM     2     2      0
                                              0 BANK0     16     0     16
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          20     5     15   53152
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      20     5     15   52272
                                             44 COMRAM    20     5     15
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    4053
                                             30 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    14     7      7    5257
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2      69
                                             11 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    6245
                                             30 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    1612
                                             20 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0     862
                                             15 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             13 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20    6714
                                             49 COMRAM    22     2     20
                    _color_normalise
                         _color_read
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2    1167
                                             15 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                             12 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                     12     2     10    3181
                                             37 COMRAM    12     2     10
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             23 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   33814
                                             44 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   12433
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   20033
                                             30 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2285
                                             24 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             17 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     543
                                             19 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0     356
                                              9 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (7) i2_color_clear_init_interrupts                        5     5      0     334
                                              4 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_normalise
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _white_Light
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_writetoaddr
   _color_normalise
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _turnLeft
     _turnRight
   _resetTimer
   _stop
   _white_Light

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A2       9       63.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     DA      DA       7       85.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      4F       1       84.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     259      66        0.0%
DATA                 0      0     259       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Mar 11 17:50:53 2024

                                _white_Light 4064                      color_calibration@RGBC_n 0034  
                                         l87 282C                                           l89 283A  
                                         l98 2B02                                 ___awdiv@sign 0011  
                        ___wmul@multiplicand 000E                             main@turnDuration 01B5  
                          ??_Interrupts_init 000C                                          l210 3FA2  
                                        l213 3FC8                                          l133 3F18  
                                        l310 4164                                          l150 37D0  
                                        l222 4190                                          l142 4080  
                                        l207 3F78                                          l216 419A  
                                        l144 4086                                          l136 3C96  
                                        l401 4122                                          l225 4170  
                                        l161 2280                                          l170 249C  
                                        l162 2326                                          l403 4130  
                                        l219 41A4                                          l147 2F8C  
                                        l171 2542                                          l139 40A6  
                                        l404 4136                                          l228 3EE0  
                                        l180 275E                                          l164 2334  
                                        l156 21BE                                          l501 3686  
                                        l173 2550                                          l165 23DA  
                                        l174 25F6                                          l158 21CC  
                                        l415 3E86                                          l167 23E8  
                                        l159 2272                                          l351 4104  
                                        l416 3E88                                          l600 3208  
                                        l176 2604                                          l168 248E  
                                        l520 21B2                                          l417 3E9C  
                                        l177 26AA                                          l259 3F4E  
                                        l419 3E9E                                          l179 26B8  
                                        l612 3346                                          l604 3272  
                                        l621 3AC8                                          l606 3296  
                                        l630 308A                                          l535 1442  
                                        l632 30AE                                          l560 1AE2  
                                        l609 3318                                          l617 3A7C  
                                        l545 14BC                                          l529 1442  
                                        l650 2C8E                                          l642 2BEE  
                                        l626 3020                                          l570 1B5C  
                                        l554 1AE2                                          l651 2D7E  
                                        l635 3130                                          l653 2D9E  
                                        l398 411E                                          l646 2C0A  
                                        l494 3C1C                                          l670 3FA0  
                                        l638 3172                                          l583 33DC  
                                        l647 2C40                                          l575 39A2  
                                        l664 40C6                                          l904 3B8C  
                                        l592 34EC                                          l752 38DC  
                                        l673 4016                                          l578 39E4  
                                        l595 351A                                          l587 3446  
                                        l667 4186                                          l684 3DDE  
                                        l589 346A                                          l685 3DEE  
                                        prod 0FF3                          i2_color_writetoaddr 40C8  
                                        wreg 0FE8    color_clear_init_interrupts@high_threshold 0011  
i2color_clear_init_interrupts@high_threshold 0006                              _color_normalise 3688  
                                       l3000 0E02                                         l3010 0ECA  
                                       l3002 0E22                                         l1171 3D84  
                                       l1164 3D7C                                         l3020 0F4C  
                                       l3012 0EE2                                         l3004 0E3A  
                                       l3110 3ACA                                         l3102 145E  
                                       l3030 0FAA                                         l3022 0F54  
                                       l3014 0EFE                                         l3006 0E72  
                                       l3120 3AF6                                         l3112 3ACE  
                                       l3200 3BEC                                         l3104 1462  
                                       l3040 1078                                         l3032 0FE6  
                                       l3024 0F56                                         l3016 0F02  
                                       l3008 0E92                                         l4000 29DA  
                                       l3130 3B24                                         l3122 3AFE  
                                       l3114 3ADC                                         l3210 3C0E  
                                       l3202 3BF6                                         l3106 1494  
                                       l3050 1126                                         l3042 1096  
                                       l3034 1004                                         l3026 0F72  
                                       l3018 0F34                                         l4010 2A48  
                                       l4002 29EA                                         l3140 3B5E  
                                       l3132 3B2C                                         l3124 3B02  
                                       l3116 3AE4                                         l3220 3E72  
                                       l3300 2554                                         l3212 3C10  
                                       l3204 3BF8                                         l3060 11D0  
                                       l3052 115E                                         l3044 10B6  
                                       l3036 1024                                         l3028 0F92  
                                       l3108 14AC                                         l4020 2A76  
                                       l4012 2A4C                                         l4004 2A30  
                                       l3150 3B84                                         l3142 3B60  
                                       l3134 3B3A                                         l3126 3B0A  
                                       l3118 3AE8                                         l3222 3E80  
                                       l3310 25DA                                         l3302 2560  
                                       l3230 21D0                                         l3214 3C1A  
                                       l3206 3C02                                         l3070 126A  
                                       l3062 1208                                         l3046 10CE  
                                       l3054 117A                                         l3038 103C  
                                       l4022 2ACE                                         l4014 2A5C  
                                       l4006 2A3C                                         l3144 3B66  
                                       l3136 3B40                                         l3128 3B1C  
                                       l3224 3E96                                         l3216 3E52  
                                       l2600 3D4A                                         l3320 264E  
                                       l3312 25F2                                         l3304 2582  
                                       l3240 2256                                         l3232 21DC  
                                       l3160 3EE6                                         l3208 3C04  
                                       l3080 12FC                                         l3072 1282  
                                       l3056 1198                                         l3048 1106  
                                       l4024 2AD2                                         l4008 2A44  
                                       l4016 2A62                                         l3170 40A8  
                                       l3138 3B56                                         l3146 3B6C  
                                       l3218 3E5C                                         l2610 3D76  
                                       l2602 3D50                                         l3330 26C8  
                                       l3322 266E                                         l3314 2608  
                                       l3306 259A                                         l3250 22CA  
                                       l3242 226E                                         l3234 21FE  
                                       l3226 21B4                                         l3162 3EF0  
                                       l3082 131C                                         l3090 1390  
                                       l3074 12BA                                         l3058 11B8  
                                       l3066 122C                                         l4018 2A72  
                                       l4026 2ADC                                         l3156 3F1A  
                                       l3172 40B0                                         l3148 3B7C  
                                       l2604 3D66                                         l2700 419C  
                                       l2612 4192                                         l2620 4188  
                                       l3340 275A                                         l3332 26EA  
                                       l3324 268E                                         l3316 2614  
                                       l3308 25BA                                         l3260 2344  
                                       l3252 22EA                                         l3244 2284  
                                       l3236 2216                                         l3228 21BA  
                                       l3164 3F00                                         l3180 40E8  
                                       l3500 15F6                                         l3092 13AE  
                                       l3084 1334                                         l3068 124A  
                                       l4028 2AF0                                         l3174 40BA  
                                       l2606 3D6E                                         l2630 35A0  
                                       l3350 2BAE                                         l3342 2B06  
                                       l2710 3EB6                                         l2702 41A0  
                                       l2614 4196                                         l2622 418C  
                                       l3334 2702                                         l3326 26A6  
                                       l3318 2636                                         l3270 23D6  
                                       l3262 2366                                         l3254 230A  
                                       l3246 2290                                         l3238 2236  
                                       l3166 3F0A                                         l3158 3EE2  
                                       l3190 4102                                         l3182 40F2  
                                       l3510 16A4                                         l3502 1612  
                                       l3094 13CE                                         l3086 136C  
                                       l3078 12DE                                         l3176 40C4  
                                       l2608 3D70                                         l2632 35A4  
                                       l2624 351C                                         l2800 34CE  
                                       l2720 3192                                         l3360 2C4E  
                                       l3352 2BFC                                         l3344 2B2E  
                                       l2712 3EDC                                         l2704 3EA2  
                                       l2616 4168                                         l3336 2722  
                                       l3328 26BC                                         l3280 2452  
                                       l3272 23EC                                         l3264 237E  
                                       l3256 2322                                         l3248 22B2  
                                       l3168 3F14                                         l3192 3B8E  
                                       l3184 40F4                                         l3520 1756  
                                       l3512 16C4                                         l3504 1632  
                                       l3096 13E6                                         l3178 4150  
                                       l2634 35E6                                         l2626 3538  
                                       l2802 34DA                                         l2730 31F6  
                                       l2722 319E                                         l3370 2C92  
                                       l3362 2C58                                         l3354 2C18  
                                       l3346 2B46                                         l2714 3EDE  
                                       l2706 3EA6                                         l2618 416C  
                                       l3338 2742                                         l3290 24CE  
                                       l3282 2472                                         l3274 23F8  
                                       l3266 239E                                         l3258 2338  
                                       l3194 3B9E                                         l3186 40FE  
                                       l2650 3A46                                         l2810 2F8E  
                                       l3522 176E                                         l3530 181A  
                                       l3514 16DC                                         l3506 164A  
                                       l3098 141E                                         l2636 3602  
                                       l2628 358C                                         l2804 34E8  
                                       l2740 3260                                         l2732 3204  
                                       l2724 31D2                                         l3380 2D82  
                                       l3372 2CBA                                         l3364 2C5A  
                                       l3356 2C30                                         l3348 2B86  
                                       l2900 389C                                         l2580 3FA2  
                                       l2708 3EAE                                         l3292 24E6  
                                       l3284 248A                                         l3276 241A  
                                       l3268 23BE                                         l3196 3BC4  
                                       l3188 4100                                         l2660 3AA0  
                                       l2652 3A52                                         l2644 39E6  
                                       l2820 3002                                         l2812 2FAA  
                                       l3532 1838                                         l3524 17A6  
                                       l3516 1718                                         l3508 1686  
                                       l2590 3D12                                         l2638 3646  
                                       l2806 3510                                         l2750 32E2  
                                       l2742 326E                                         l2734 322C  
                                       l2726 31DE                                         l2718 3174  
                                       l3382 2D9A                                         l3374 2CD2  
                                       l3366 2C72                                         l3358 2C3A  
                                       l2902 38A6                                         l2582 3FB2  
                                       l3294 2506                                         l3286 24A0  
                                       l3278 2432                                         l3198 3BC8  
                                       l2654 3A5E                                         l2662 3AA4  
                                       l2646 3A06                                         l2670 3F98  
                                       l2830 306C                                         l2822 300E  
                                       l2814 2FB6                                         l3550 195A  
                                       l3534 1858                                         l3542 18CC  
                                       l3526 17C6                                         l3518 1736  
                                       l2592 3D1A                                         l2584 3FF2  
                                       l2760 333C                                         l2752 32EE  
                                       l2744 329C                                         l2728 31EA  
                                       l2736 3230                                         l3376 2D12  
                                       l3368 2C80                                         l2904 38AC  
                                       l3296 2526                                         l3288 24AC  
                                       l2656 3A6A                                         l2648 3A12  
                                       l2664 417E                                         l2840 30C6  
                                       l2832 3078                                         l2824 301C  
                                       l2816 2FEA                                         l2680 3938  
                                       l3560 19D4                                         l3544 18EA  
                                       l3536 1870                                         l3528 17FE  
                                       l3480 152E                                         l2594 3D2C  
                                       l2586 400E                                         l2770 33A6  
                                       l2754 32FA                                         l2738 3254  
                                       l3378 2D3A                                         l2906 38BC  
                                       l2930 2DBA                                         l3298 253E  
                                       l2658 3A78                                         l2666 3F7A  
                                       l2850 312C                                         l2842 30FA  
                                       l2834 3086                                         l2826 3044  
                                       l2818 2FF6                                         l2690 399E  
                                       l2682 396C                                         l2674 38DE  
                                       l3570 1A6E                                         l3562 1A0C  
                                       l3546 190A                                         l3554 197E  
                                       l3538 18A8                                         l3490 15BE  
                                       l3482 154E                                         l3474 14BE  
                                       l3810 1B5E                                         l2596 3D34  
                                       l2780 3400                                         l2772 33B2  
                                       l2764 3348                                         l2756 3306  
                                       l2748 32AE                                         l2908 38CC  
                                       l2860 3D96                                         l2940 2EC8  
                                       l2932 2DD4                                         l2924 4066  
                                       l2668 3F86                                         l2852 3154  
                                       l2844 3106                                         l2836 30B4  
                                       l2828 3048                                         l2692 39C6  
                                       l2684 3978                                         l2676 3926  
                                       l3580 1B02                                         l3572 1A86  
                                       l3556 199C                                         l3548 1922  
                                       l3492 15C4                                         l3484 1586  
                                       l3476 14DE                                         l3812 1B70  
                                       l3820 1C00                                         l3900 2760  
                                       l2598 3D3C                                         l2790 3470  
                                       l2774 33BE                                         l2782 3404  
                                       l2766 3366                                         l2758 3314  
                                       l2870 37D6                                         l2862 3DA4  
                                       l2950 3700                                         l2942 2F28  
                                       l2934 2E2C                                         l2926 4076  
                                       l2846 3112                                         l2686 3984  
                                       l3582 1B34                                         l3574 1ABE  
                                       l3558 19BC                                         l3566 1A30  
                                       l3494 15D4                                         l3486 159E  
                                       l3478 14F6                                         l3822 1C12  
                                       l3830 1CA2                                         l3814 1B90  
                                       l3910 279E                                         l3902 276C  
                                       l2784 3428                                         l2776 33CA  
                                       l2768 3372                                         l2880 3816  
                                       l2872 37E4                                         l2864 3DB4  
                                       l2952 3768                                         l2944 2F46  
                                       l2936 2E4A                                         l2928 2DA0  
                                       l2960 3F62                                         l2848 311E  
                                       l2856 315E                                         l2688 3990  
                                       l2696 39D0                                         l3568 1A4E  
                                       l3584 1B4C                                         l3496 15EC  
                                       l3488 15BA                                         l3840 1D44  
                                       l3832 1CB4                                         l3824 1C32  
                                       l3816 1BA8                                         l3920 27B2  
                                       l3912 27A2                                         l3904 276C  
                                       l2794 3482                                         l2786 3434  
                                       l2778 33D8                                         l2890 3854  
                                       l2882 381A                                         l2874 37F4  
                                       l2866 3DBE                                         l2858 3D86  
                                       l2946 3688                                         l2938 2EAA  
                                       l2962 3F64                                         l2954 3F50  
                                       l2698 408A                                         l2970 3C3E  
                                       l3578 1AFE                                         l3498 15F4  
                                       l3850 1DE6                                         l3842 1D7C  
                                       l3834 1CD4                                         l3826 1C4A  
                                       l3818 1BE0                                         l3930 27D4  
                                       l3922 27BE                                         l3914 27A6  
                                       l3906 278A                                         l2796 34B6  
                                       l2788 3442                                         l2892 3862  
                                       l2884 382A                                         l2876 37F8  
                                       l2868 37D2                                         l2948 369C  
                                       l2964 3F66                                         l2956 3F5A  
                                       l2980 3C82                                         l2972 3C54  
                                       l3860 1EA0                                         l3852 1DFE  
                                       l3844 1D94                                         l3836 1CEC  
                                       l3828 1C82                                         l3940 27F0  
                                       l3932 27DC                                         l3924 27C4  
                                       l3916 27AA                                         l3908 278E  
                                       l2990 411A                                         l2798 34C2  
                                       l2894 386C                                         l2886 3840  
                                       l2878 3806                                         l2958 3F60  
                                       l2982 3C8C                                         l2974 3C64  
                                       l2966 3C1E                                         l3862 1EC0  
                                       l3870 1F68                                         l3854 1E36  
                                       l3838 1D24                                         l3846 1DB4  
                                       l3950 2810                                         l3942 27F4  
                                       l3934 27E4                                         l3926 27C8  
                                       l3918 27AE                                         l2992 411C  
                                       l2984 4106                                         l2896 388A  
                                       l2888 3848                                         l2976 3C6E  
                                       l2968 3C32                                         l3880 200A  
                                       l3872 1F7A                                         l3864 1ED8  
                                       l3856 1E56                                         l3848 1DC6  
                                       l3960 2824                                         l3952 2814  
                                       l3944 27FC                                         l3936 27E8  
                                       l3928 27CC                                         l2994 4120  
                                       l2986 4110                                         l2898 389A  
                                       l2978 3C78                                         l3890 20C4  
                                       l3874 1F9A                                         l3882 2042  
                                       l3866 1F10                                         l3858 1E8E  
                                       l3970 28D2                                         l3962 2828  
                                       l3954 2818                                         l3946 2804  
                                       l3938 27EC                                  main@curMove 01B4  
                                       l2996 4134                                         l2988 4118  
                                       l3892 20E4                                         l3884 2054  
                                       l3876 1FB2                                         l3868 1F30  
                                       l3980 291C                                         l3972 28D8  
                                       l3964 2842                                         l3956 281C  
                                       l3948 280C                                         l3886 2074  
                                       l3894 211C                                         l3878 1FEA  
                                       l3990 2958                                         l3982 2938  
                                       l3974 28F0                                         l3966 285A  
                                       l3958 2820                                         l3896 212E  
                                       l3888 208C                                         l3992 2968  
                                       l3984 293C                                         l3976 28FC  
                                       l3968 28AE                                         l3898 2172  
                                       l3994 299E                                         l3986 2942  
                                       l3978 2904                                         l3996 29AA  
                                       l3988 2946                                         l3998 29C8  
                                       u2000 2C30                                         u2001 2C2C  
                                       u2010 2C4E                                         u2011 2C4A  
                                       u2020 2C80                                         u2021 2C7C  
                                       u1230 3FB2                                         u2110 15D4  
                                       u1231 3FAE                                         u2111 15D0  
                                       u1400 3296                                         u1240 3FC8  
                                       u1320 3AA0                                         u2200 1B5C  
                                       u2120 1612                                         u1401 3292  
                                       u1241 3FC4                                         u1321 3A9C  
                                       u2201 1B58                                         u2121 160E  
                                       u1250 3D2C                                         u1410 32AA  
                                       u1330 3AC8                                         u2130 16A4  
                                       u1251 3D28                                         u1411 32A6  
                                       u1331 3AC4                                         u2131 16A0  
                                       u1260 3D4A                                         u1420 333C  
                                       u1500 30AE                                         u1340 3934  
                                       u2140 1736                                         u1261 3D46  
                                       u1421 3338                                         u1501 30AA  
                                       u1341 3930                                         u2141 1732  
                                       u1270 3D66                                         u1430 3400  
                                       u1510 30C2                                         u1350 39C6  
                                       u2150 1838                                         u1271 3D62  
                                       u1431 33FC                                         u1511 30BE  
                                       u1351 39C2                                         u2151 1834  
                                       u3007 11FA                                         u1280 3538  
                                       u1440 3428                                         u1600 38BC  
                                       u1360 3ECA                                         u1520 3154  
                                       u2160 18EA                      color_calibration@orange 0040  
                               _BAUD4CONbits 0EE9                                         u1281 3534  
                                       u1441 3424                                         u1601 38B8  
                                       u1361 3EC2                                         u1521 3150  
                                       u2161 18E6                                         u3017 1274  
                                       u1290 3602                                         u1450 346A  
                                       u1530 3DA4                                         u1610 4076  
                                       u2170 199C                                         u1291 35FE  
                                       u1451 3466                                         u1531 3DA0  
                                       u1611 4072                                         u2171 1998  
                                       u3107 1590                                         u3027 12AC  
                                       u1620 4130                                         u1460 347E  
                                       u1380 322C                                         u1540 3DDE  
                                       u2180 1A4E                                         u1700 13AE  
                                       u2500 1F7A                                         u1621 412C  
                                       u1461 347A                                         u1381 3228  
                                       u1541 3DDA                                         u2181 1A4A  
                                       u3117 163C                                         u1701 13AA  
                                       u3037 1326                                         u2501 1F76  
                                       u1470 3510                                         u1390 3254  
                                       u1550 37E4                                         u2190 1B34  
                                       u1710 1494                                         u1630 0F34  
                                       u2510 2054                                         u1471 350C  
                                       u1391 3250                                         u1551 37E0  
                                       u2191 1B30                                         u3207 189A  
                                       u3127 1674                                         u1711 1490  
                                       u3047 135E                                         u1631 0F30  
                                       u2511 2050                                         u1800 3E96  
                                       u1560 3806                                         u1480 3044  
                                       u1720 14BC                                         u1640 0F72  
                                       u2520 212E                                         u1801 3E92  
                                       u1561 3802                                         u1481 3040  
                                       u3217 1914                                         u3137 16CE  
                                       u1721 14B8                                         u3057 13D8  
                                       u1641 0F6E                                         u2521 212A  
                                       u1730 3ADC                                         u1570 3840  
                                       u1378 3ECC                                         u1810 21CC  
                                       u1490 306C                                         u1650 1004  
                                       u2450 1B70                                         u2610 2A72  
                                       _T2PR 0FBC                                         u1731 3AD8  
                                       u1571 383C                                         u1811 21C8  
                                       u3307 3124                                         u1491 3068  
                                       u3227 194C                                         u3147 1706  
                                       u3067 1410                                         u1651 1000  
                                       u2451 1B6C                                         u2611 2A6E  
                                       u2531 2766                                         u1740 3AF6  
                                       u1580 3862                                         u1660 1096  
                                       u2460 1C12                                         u2620 2AF0  
                                       u1741 3AF2                                         u1581 385E  
                                       u1901 24BA                                         u1821 21EA  
                                       u3317 3A70                                         u3237 19C6  
                                       u3157 1760                                         u3077 14E8  
                                       u1661 1092                                         u2461 1C0E  
                                       u2621 2AEC                                         u2605 2A58  
                                       u2541 2778                                         u1750 3B1C  
                                       u1590 388A                                         u1910 2550  
                                       u1830 2280                                         u1670 1198  
                                       u2470 1CB4                                         u2630 2B02  
                                       u1751 3B18                                         u1591 3886  
                                       u3407 2698                                         u1911 254C  
                                       u1831 227C                                         u3327 3EF6  
                                       u3247 19FE                                         u3167 1798  
                                       u3087 1520                                         u1671 1194  
                                       u2471 1CB0                                         u2631 2AFE  
                                       u2607 2A5C                                         u2551 2784  
                                       u1760 3B3A                                         u1680 124A  
                                       u2480 1DC6                                         u2560 283A  
                                       u1761 3B36                                         u3417 274C  
                                       u1921 256E                                         u1841 229E  
                                       u3337 3C5A                                         u3257 1A78  
                                       u3177 17D0                                         u3097 1558  
                                       u1681 1246                                         u2481 1DC2  
                                       u2561 2836                                         u1770 3B56  
                                       u1930 2604                                         u1850 2334  
                                       u1690 12FC                                         u2490 1EA0  
                                       u2570 2958                                         u1771 3B52  
                                       u3507 31FC                                         u3427 2B38  
                                       u1931 2600                                         u1851 2330  
                                       u3347 2260                                         u3267 1AB0  
                                       u3187 1808                                         u1691 12F8  
                                       u2491 1E9C                                         u2707 1C74  
                                       u2571 2954                                         u1780 3B7C  
                                       u1781 3B78                                         u3517 3266  
                                       u3437 2B78                                         u1941 2622  
                                       u1861 2352                                         u3357 2314  
                                       u3277 3996                                         u3197 1862  
                                       u2717 1CDE                                         u1790 3E80  
                                       u1950 26B8                                         u1870 23E8  
                                       u1791 3E7C                                         u3527 330C  
                                       u3447 2BB8                                         u1951 26B4  
                                       u1871 23E4                                         u3367 23C8  
                                       u3287 3014                                         u2807 1F3A  
                                       u2727 1D16                                         u2591 29B4  
                                       u2647 284C                                         u3537 33D0  
                                       u3457 2C64                                         u1961 26D6  
                                       u3377 247C                                         u1881 2406  
                                       u3297 307E                                         u2817 1FA4  
                                       u2737 1D4E                                         u2585 2964  
                                       u2657 28E2                                         u1970 2BFC  
                                       u1890 249C                                         u3547 343A  
                                       u3467 2CC4                                         u1971 2BF8  
                                       u3387 2530                                         u1891 2498  
                                       u2907 0ED4                                         u2827 1FDC  
                                       u2747 1D86                                         u2587 2968  
                                       u2667 290E                                         u1980 2C0A  
                                       u3557 34E0                                         u3477 2D04  
                                       u1981 2C06                                         u3397 25E4  
                                       u2917 0F9C                                         u2837 2014  
                                       u2757 1DF0                                         u2677 1B9A  
                                       u1990 2C18                                         u3487 2D44  
                                       u1991 2C14                                         u2927 0FD4  
                                       u2847 207E                                         u2767 1E28  
                                       u2687 1BD2                                         u3497 2D8C  
                                       u2937 102E                                         u2857 20B6  
                                       u2777 1E60                                         u2697 1C3C  
                                       u2947 1066                                         u2867 20EE  
                                       u2787 1ECA                                         u2957 10C0  
                                       u2877 0E2C                                         u2797 1F02  
                                       u2967 10F8                                         u2887 0E64  
                                       u2977 1130                                         u2897 0E9C  
                                       u2987 1168                                         u2997 11C2  
                    color_calibration@yellow 003C                  lostReturnHome@straightSpeed 0036  
                                       _main 2760                                         _move 1B5E  
                                       _lost 00B0                                         _wall 00B1  
                                       fsr1h 0FE2                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         btemp 0050  
                                       _stop 38DE                                         prodh 0FF4  
                                       prodl 0FF3                                         start 0098  
                        main@reverseDuration 01AE                             __end_of_ADC_init 4120  
                       ?i2_color_writetoaddr 0003                              __end_of_HighISR 0098  
                      lostReturnHome@curMove 0035                                 ___param_bank 0000  
                       __end_of_batteryLevel 3EA0                              __end_of___aldiv 38DE  
                                      ?_main 0001                                        _ADPCH 0F5F  
                            __end_of___awdiv 3B8E                                        ?_move 00B2  
                                      ?_stop 001F                              ___awdiv@divisor 000E  
                            __end_of___lwdiv 3D86                                        i2l210 3FCA  
                                      i2l213 3FF0                                        i2l222 41AE  
                                      i2l216 41B8                                        i2l136 3D10  
                                      i2l320 008C                                        i2l225 417C  
                                      i2l139 40E6                                        i2l373 414E  
                                      i2l366 4062                                        i2l359 403C  
                            ___awdiv@counter 0010                                        _TMR0H 0FD4  
                                      _TMR0L 0FD3                          ___lmul@multiplicand 0010  
                 __end_of_I2C_2_Master_Start 419C                   __end_of_I2C_2_Master_Write 4172  
                                 _Buggy_init 3F1A                   color_calibration@lightblue 0042  
                     returnHome@straightRamp 0038                       returnHome@straightTime 0033  
                                      tablat 0FF5                                        plusw0 0FEB  
                                      plusw2 0FDB                                        ttemp5 0051  
                                      ttemp6 0054                                        ttemp7 0058  
                                      stop@i 0027                                        status 0FD8  
                                      wtemp8 0051                        ??i2_color_writetoaddr 0004  
                               main@turnRamp 01B1                        _I2C_2_Master_RepStart 419C  
                         putCharToRxBuf@byte 0001                              __initialization 3DF0  
                  get16bitTMR0val@timer_high 0012                                 __end_of_main 2B06  
                               __end_of_move 21B4                                 __end_of_stop 39E6  
                        move@reverseDuration 00BD                              _get16bitTMR0val 3F7A  
                                     ??_main 0048                                       ??_move 0041  
                                     ??_stop 0024                                __activetblptr 0000  
                              calibration@mL 002D                                calibration@mR 002F  
                    __end_of_color_normalise 37D2                       returnHome@turnDuration 003A  
                               ?_setMotorPWM 0019                                       _ADRESH 0F64  
                                     _CCPR1H 0FAA                                       _CCPR2H 0FA6  
                                     _CCPR3H 0F25                                       _CCPR4H 0F21  
                           ___awdiv@dividend 000C                       lostReturnHome@turnRamp 003B  
                                     _RC0PPS 0E62                                       _RC4REG 0EE3  
                                     _RE2PPS 0E74                                       _RC7PPS 0E69  
                                     _RD5PPS 0E6F                                       _RE4PPS 0E76  
                                     _RD6PPS 0E70                                       i2l3154 40CA  
                                     i2l2640 3FCA                                       i2l3602 4138  
                                     i2l2642 3FDA                                       i2l3620 3CCE  
                                     i2l3630 3D06                                       i2l3622 3CDE  
                                     i2l3614 3C98                                       i2l2912 41B0  
                                     i2l2920 4174                                       i2l3624 3CE8  
                                     i2l3616 3CAC                                       i2l2914 41B4  
                                     i2l2922 4178                                       i2l3626 3CF2  
                                     i2l3618 3CB8                                       i2l2916 41A6  
                                     i2l3628 3CFC                                       i2l3590 402E  
                                     i2l2918 41AA                                       i2l3592 403A  
                                     i2l3594 403E                                       i2l3586 401A  
                                     i2l3770 0030                                       i2l3762 0012  
                                     _RG6PPS 0E88                                       i2l3596 404E  
                                     i2l3588 402A                                       i2l3780 005C  
                                     i2l3772 003E                                       i2l3764 0022  
                                     i2l3598 4052                                       i2l3782 006C  
                                     i2l3774 0044                                       i2l3766 0028  
                                     i2l3784 0074                                       i2l3776 0048  
                                     i2l3768 002C                                       i2l3786 0088  
                                     i2l3778 0056                                    ??_HighISR 000A  
                   __end_of_color_click_init 3F1A                                       _TMR0IE 714D  
                                     _TMR0IF 719D                                       _RX4PPS 0E15  
                                     _TX4REG 0EE4                                main@lightblue 01A2  
                               ??_ADC_getval 000C                                ??_Timer0_init 000C  
                        calibration@turnRamp 0034                      calibration@turnDuration 0032  
                               _CCPTMRS0bits 0FAD                             _getCharFromTxBuf 403E  
                                     ___lmul 3D86                                    ??___aldiv 0020  
                                     ___wmul 3FF2                                    ??___awdiv 0010  
                                  ??___lwdiv 0016                                       clear_0 3E2E  
                                     clear_1 3E3A                             ___awdiv@quotient 0012  
                                     isa$std 0001                      returnHome@straightSpeed 0036  
                               __pdataCOMRAM 004E                                       move@mL 00B2  
                                     move@mR 00B4                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                                    ?_ADC_init 0001  
                                     stop@mL 001F                                       stop@mR 0021  
                                ?_Buggy_init 0001                            ??_initDCmotorsPWM 000E  
                         __end_of_ADC_getval 4138                   i2color_writetoaddr@address 0004  
                           __end_of_turnLeft 351C                   lostReturnHome@moveSequence 0031  
                      __end_of_isDataInTxBuf 4150                                   __accesstop 0060  
                    __end_of__initialization 3E48                              fullSpeedAhead@i 0028  
                              main@turnSpeed 01B0                       ?_I2C_2_Master_RepStart 0001  
                              ___rparam_used 0001                lostReturnHome@reverseDuration 0037  
                            _Interrupts_init 4150                               __pcstackCOMRAM 0001  
                    __end_of_get16bitTMR0val 3FA2                                 ?_white_Light 0001  
                               __pidataBANK0 41BA                     get16bitTMR0val@timer_low 0010  
                   get16bitTMR0val@timer_val 0014                 ?_color_clear_init_interrupts 0001  
                           _reverseOneSquare 2F8E                          __end_of_Timer0_init 40C8  
                           ?_color_normalise 0026                                   ??_ADC_init 000C  
                               _batteryLevel 3E52                                   __pbssBANK0 0060  
                                 __pbssBANK2 0200                            _color_writetoaddr 4088  
                               _T2CLKCONbits 0FBF                               _lostReturnHome 14BE  
                         ?_color_writetoaddr 000E                                      ?___lmul 000C  
                                    ?___wmul 000C                               ___lmul@product 0014  
              ??_color_clear_init_interrupts 0010                                  move@curMove 00BB  
                    lostReturnHome@turnSpeed 0039                          ??_color_writetoaddr 000F  
                                    _SP4BRGH 0EE6                                      _SP4BRGL 0EE5  
                 fullSpeedAhead@straightRamp 0024                        turnRight@turnDuration 0024  
                                    _SSP2ADD 0ED6                                      _SSP2BUF 0ED5  
                                 _color_read 2DA0                      __end_of_Interrupts_init 4166  
                     color_writetoaddr@value 000E                                      _HighISR 0008  
                  __end_of_color_writetoaddr 40A8                       __end_of_lostReturnHome 1B5E  
                                  _ADREFbits 0F58                           _I2C_2_Master_Start 4192  
                                 _initUSART4 40E8                          i2_I2C_2_Master_Idle 3FCA  
                         _I2C_2_Master_Write 4166                                      __Hparam 0000  
                        i2_I2C_2_Master_Stop 41A6                                      __Lparam 0000  
                                _Timer0_init 40A8                         calibration@turnSpeed 0031  
                           ?_get16bitTMR0val 000C                                      ___aldiv 37D2  
                                    ___awdiv 3ACA                              lostReturnHome@i 0040  
                              ??_calibration 0035                          ?_I2C_2_Master_Start 0001  
                                    ___lwdiv 3D12                          ?_I2C_2_Master_Write 0001  
                               __psmallconst 0E00                                      _ambient 004E  
                                    __pcinit 3DF0                                      __ramtop 0E00  
                                  ?_turnLeft 001F                                      __ptext0 2760  
                                    __ptext1 1B5E                                      __ptext2 0E02  
                                    __ptext3 14BE                                      __ptext4 38DE  
                                    __ptext5 2F8E                                      __ptext6 417E  
                                    __ptext7 3F7A                                      __ptext8 39E6  
                                    __ptext9 40E8                         ?i2_I2C_2_Master_Idle 0001  
                                  _T2CONbits 0FBD                         ?i2_I2C_2_Master_Stop 0001  
                           ___aldiv@dividend 0018                                    _T2HLTbits 0FBE  
                              _RxBufWriteCnt 004D                     __end_of_getCharFromTxBuf 4064  
                                    main@buf 00C2                                      main@red 017E  
                       ??_I2C_2_Master_Start 000D                         ??_I2C_2_Master_Write 000D  
                      color_normalise@RGBC_n 002E                         end_of_initialization 3E48  
            ??i2_color_clear_init_interrupts 0005                  __end_ofi2_color_writetoaddr 40E8  
                           ADC_getval@tmpval 000C                            reverseOneSquare@i 0029  
                          ?_color_click_init 0001                              ?_lostReturnHome 002D  
                                 _resetTimer 417E                           ??_color_click_init 0015  
                           ___aldiv@quotient 0022                   batteryLevel@batteryQuarter 0015  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc1 0FE6  
                                    postinc2 0FDE                   batteryLevel@batteryVoltage 0014  
                                 main@F14622 0252                                   main@F14624 0200  
                                 main@F14618 027A                                   main@F14627 00EA  
                                 _returnHome 0E02                              _initDCmotorsPWM 3B8E  
                                 ??_turnLeft 0026                                    _PORTFbits 0F8E  
                         setMotorPWM@negDuty 001E                        ??i2_I2C_2_Master_Idle 0001  
                              move@turnSpeed 00BF                            __end_of_turnRight 3348  
                      ??i2_I2C_2_Master_Stop 0002                                   main@RGBC_n 01B6  
                        __end_of_calibration 2DA0                                  returnHome@i 0040  
                                  _TRISAbits 0F81                           setMotorPWM@posDuty 001D  
                                  _TRISBbits 0F82                                    _TRISCbits 0F83  
                                  _TRISDbits 0F84                                    _TRISEbits 0F85  
                                  _TRISFbits 0F86                                    _TRISGbits 0F87  
                                  _TRISHbits 0F88                             white_Light@state 000C  
                               ??_Buggy_init 000C                             fullSpeedAhead@mL 001F  
                           fullSpeedAhead@mR 0021                                  ?_color_read 0010  
                   color_writetoaddr@address 000F                      ??_I2C_2_Master_RepStart 000D  
                   __end_of_reverseOneSquare 3174                             ?_Interrupts_init 0001  
                              stop@cur_power 0029                                  _CCP1CONbits 0FAB  
                     color_calibration@green 0038                                 _EUSART4RXbuf 009C  
                        returnHome@turnSpeed 0039                                 _EUSART4TXbuf 0060  
                                _CCP2CONbits 0FA7                       color_calibration@white 0044  
                                _CCP3CONbits 0F26                   lostReturnHome@straightRamp 0038  
                 lostReturnHome@straightTime 0033                                  ?_initUSART4 0001  
                                 main@orange 019C                                  _CCP4CONbits 0F22  
                                 main@motorL 01D0                                   main@motorR 01C6  
                                 main@yellow 0190                               color_read@RGBC 0010  
                             _fullSpeedAhead 39E6                               __end_of___lmul 3DF0  
                       turnLeft@turnDuration 0024                               __end_of___wmul 4018  
                         __end_of_Buggy_init 3F50                                __pidataCOMRAM 41BE  
                        start_initialization 3DF0                                _TxBufWriteCnt 004B  
                 lostReturnHome@turnDuration 003A                             move@moveSequence 00B7  
      __end_ofi2_color_clear_init_interrupts 3D12                i2_color_clear_init_interrupts 3C98  
                                ?_resetTimer 0001                      __end_of_initDCmotorsPWM 3C1E  
                     __end_of_fullSpeedAhead 3ACA                           turnRight@cur_power 002B  
                                   ??___lmul 0014                                     ??___wmul 0010  
                             _putCharToRxBuf 4018                          color_normalise@RGBC 0026  
                                __pdataBANK0 00EA                i2I2C_2_Master_Write@data_byte 0002  
                                _calibration 2B06                                  ?_returnHome 002D  
               reverseOneSquare@straightRamp 0025                 __end_ofi2_I2C_2_Master_Start 41BA  
               __end_ofi2_I2C_2_Master_Write 417E                            turnLeft@cur_power 002B  
                                __pbssCOMRAM 004A                                __pcstackBANK0 00B2  
                              __pcstackBANK1 0100                                     ?_HighISR 0001  
                           stop@straightRamp 0023                             ___lwdiv@dividend 0012  
                               ?_Timer0_init 0001                       __end_of_putCharToRxBuf 403E  
                            ?_fullSpeedAhead 001F                                    __pintcode 0008  
                                   ?___aldiv 0018                           turnRight@turnSpeed 0023  
                                   ?___awdiv 000C                                     ?___lwdiv 0012  
                       I2C_2_Master_Read@ack 000E                         I2C_2_Master_Read@tmp 000F  
                                __smallconst 0E00                             main@moveSequence 0152  
                          _I2C_2_Master_Idle 3FA2                            _I2C_2_Master_Init 3F50  
                          _I2C_2_Master_Read 3EA0                            turnLeft@turnSpeed 0023  
                          _I2C_2_Master_Stop 4188                                 _RxBufReadCnt 004C  
                                   _ADC_init 4106                           ?_I2C_2_Master_Idle 0001  
                         ?_I2C_2_Master_Init 0001                           ?_I2C_2_Master_Read 0001  
                              ??_setMotorPWM 001B                           ?_I2C_2_Master_Stop 0001  
                           ___lwdiv@quotient 0016                     initDCmotorsPWM@PWMperiod 000C  
                          ?_getCharFromTxBuf 0001                             ??_lostReturnHome 003C  
                         ??_getCharFromTxBuf 0001                            move@straightSpeed 00BC  
                            ___aldiv@divisor 001C                          ??_I2C_2_Master_Idle 000C  
                            ___aldiv@counter 0020                          ??_I2C_2_Master_Init 000C  
                        ??_I2C_2_Master_Read 000D                               ___wmul@product 0010  
                                   _LATAbits 0F79                          ??_I2C_2_Master_Stop 000D  
                                   _LATCbits 0F7B                                _isDataInTxBuf 4138  
                                   _LATDbits 0F7C                                     _LATEbits 0F7D  
                                   _LATFbits 0F7E                                     _LATGbits 0F7F  
                                   _LATHbits 0F80                                     _IPR0bits 0E1F  
                                   _PIE0bits 0E29                                     _PIE4bits 0E2D  
                                   i2u130_40 3FDA                                     i2u130_41 3FD6  
                                   i2u131_40 3FF0                                     i2u131_41 3FEC  
                                   i2u221_40 402A                                     i2u221_41 4026  
                                   i2u222_40 404E                                     i2u222_41 404A  
                                turnRight@mL 001F                                     i2u223_40 414C  
                                   i2u223_41 4146                                  turnRight@mR 0021  
                                   i2u224_40 414E                                     i2u240_40 006C  
                                   i2u240_41 0068                                     i2u241_40 0088  
                                   i2u241_41 0084                                     i2u237_40 0022  
                                   i2u237_41 001E                                     i2u238_40 003E  
                                   i2u238_41 003A                                     i2u239_40 0056  
                                   i2u239_41 0052                                     _PIR0bits 0E33  
                                   i2u356_47 3CD4                                     _PIR4bits 0E37  
                            ?_putCharToRxBuf 0001                             ?_initDCmotorsPWM 000C  
                fullSpeedAhead@straightSpeed 0023          __end_of_color_clear_init_interrupts 3C98  
             ?i2_color_clear_init_interrupts 0001                  _color_clear_init_interrupts 3C1E  
                                   _SSP2CON2 0EDA                                     _SSP2STAT 0ED8  
                               move@turnRamp 00C1                                   _ADCON0bits 0F60  
                  __end_of_I2C_2_Master_Idle 3FCA                        color_calibration@RGBC 0032  
                  __end_of_I2C_2_Master_Init 3F7A                    __end_of_I2C_2_Master_Read 3EE2  
                          ___wmul@multiplier 000C                    __end_of_I2C_2_Master_Stop 4192  
   color_clear_init_interrupts@low_threshold 0013   i2color_clear_init_interrupts@low_threshold 0008  
                               setMotorPWM@m 0019                  I2C_2_Master_Write@data_byte 000D  
                      color_calibration@blue 003A                           returnHome@turnRamp 003B  
                                  main@color 01B2                        color_calibration@pink 003E  
                                  main@green 0184                                    main@white 01A8  
                               _TxBufReadCnt 004A                     i2color_writetoaddr@value 0003  
                                  _turnRight 3174                    returnHome@reverseDuration 0037  
                               ??_color_read 0012                            ___lmul@multiplier 000C  
                                  copy_data0 3E04                               ?_isDataInTxBuf 0001  
              __end_of_I2C_2_Master_RepStart 41A6                            ?_reverseOneSquare 001F  
                        __end_of_setMotorPWM 3688                                 ??_initUSART4 000C  
                       i2_I2C_2_Master_Start 41B0              reverseOneSquare@reverseDuration 0024  
                       i2_I2C_2_Master_Write 4172                           ??_reverseOneSquare 0026  
                                   __Hrparam 0000                            ??_color_normalise 0030  
                                 _ADC_getval 4120                             main@testSequence 017A  
                                   __Lrparam 0000                                ??_white_Light 000C  
                __end_ofi2_I2C_2_Master_Idle 3FF2                  __end_ofi2_I2C_2_Master_Stop 41B0  
                           lostReturnHome@mL 002D                             lostReturnHome@mR 002F  
                         __end_of_color_read 2F8E                                   _ANSELBbits 0E9A  
                                 _ANSELDbits 0EA7                                   _ANSELFbits 0EB4  
                                 _T0CON0bits 0FD5                                   _T0CON1bits 0FD6  
                          _color_calibration 21B4                reverseOneSquare@straightSpeed 0023  
                            ___lwdiv@divisor 0014                       returnHome@moveSequence 0031  
                         __end_of_initUSART4 4106                              ___lwdiv@counter 0018  
                          turnRight@turnRamp 0025                                   ?_turnRight 001F  
                                   __ptext10 3B8E                                     __ptext11 3EE2  
                                   __ptext20 4192                                     __ptext12 3C1E  
                                   __ptext21 419C                                     __ptext13 4088  
                                   __ptext30 351C                                     __ptext22 3EA0  
                                   __ptext14 3F50                                     __ptext31 3FF2  
                                   __ptext23 3FA2                                     __ptext15 21B4  
                                   __ptext32 3D12                                     __ptext24 3688  
                                   __ptext16 4064                                     __ptext41 3C98  
                                   __ptext33 3E52                                     __ptext25 3D86  
                                   __ptext17 2DA0                                     __ptext42 40C8  
                                   __ptext34 3ACA                                     __ptext26 37D2  
                                   __ptext18 4166                                     __ptext43 4172  
                                   __ptext35 4106                                     __ptext27 2B06  
                                   __ptext19 4188                                     __ptext44 41A6  
                                   __ptext36 4120                                     __ptext28 3174  
                                   __ptext45 41B0                                     __ptext37 40A8  
                                   __ptext29 3348                                     __ptext46 3FCA  
                                   __ptext38 4150                                     __ptext47 4018  
                                   __ptext39 3F1A                                     __ptext48 4138  
                                   __ptext49 403E                                    move@color 00B6  
                         ?_color_calibration 0032                                ?_batteryLevel 0001  
                               _SSP2CON1bits 0ED9                                 _SSP2CON2bits 0EDA  
                           turnLeft@turnRamp 0025                                   turnLeft@mL 001F  
                                 turnLeft@mR 0021                          ??_color_calibration 0046  
                      ?i2_I2C_2_Master_Start 0001                             move@straightRamp 00BE  
                      ?i2_I2C_2_Master_Write 0001                             move@straightTime 00B9  
                          returnHome@curMove 0035                                 ??_resetTimer 000C  
                                 turnRight@i 0029                                     isa$xinst 0000  
                                 _RC4STAbits 0EE7                                     main@RGBC 01BE  
                                   int$flags 0050                                 ?_calibration 002D  
                                   main@blue 018A                         color_calibration@red 0036  
                               ??_returnHome 003C                                     main@pink 0196  
                                   _turnLeft 3348                      fullSpeedAhead@cur_power 002A  
                        __end_of_white_Light 4088                    __end_of_color_calibration 2760  
                                 _INTCONbits 0FF2                    reverseOneSquare@cur_power 002B  
                         reverseOneSquare@mL 001F                           reverseOneSquare@mR 0021  
                         __end_of_resetTimer 4188                             move@turnDuration 00C0  
                             ??_batteryLevel 0014                                  _setMotorPWM 351C  
                          ??_get16bitTMR0val 000E                              ??_isDataInTxBuf 0001  
                                   intlevel2 0000                             ??_fullSpeedAhead 0025  
                         __end_of_returnHome 14BE                                    turnLeft@i 0029  
                                ?_ADC_getval 0001                            main@straightSpeed 01AF  
                           _color_click_init 3EE2                                   _SSP2DATPPS 0E1D  
                                 _SSP2CLKPPS 0E1C                                 ___aldiv@sign 0021  
                                ??_turnRight 0026                             main@straightRamp 01B3  
                           main@straightTime 0100                                   _TX4STAbits 0EE8  
                     ??i2_I2C_2_Master_Start 0002                       ??i2_I2C_2_Master_Write 0002  
                           ??_putCharToRxBuf 0001                                 returnHome@mL 002D  
                               returnHome@mR 002F  
