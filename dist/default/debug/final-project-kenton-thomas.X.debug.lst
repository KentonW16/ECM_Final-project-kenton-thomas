

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 11:45:15 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80   000000                     
    81                           ; Generated 21/07/2023 GMT
    82                           ; 
    83                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F67K40 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115   000000                     
   116                           	psect	idataBANK0
   117   00545C                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for main@F14662
   121   00545C  02                 	db	2
   122   00545D  02                 	db	2
   123   00545E  01                 	db	1
   124   00545F  01                 	db	1
   125                           
   126                           ;initializer for _ambient
   127   005460  01F4               	dw	500
   128   000000                     _TRISCbits	set	3971
   129   000000                     _RC4STAbits	set	3815
   130   000000                     _SP4BRGH	set	3814
   131   000000                     _SP4BRGL	set	3813
   132   000000                     _TX4STAbits	set	3816
   133   000000                     _BAUD4CONbits	set	3817
   134   000000                     _TX4REG	set	3812
   135   000000                     _TRISBbits	set	3970
   136   000000                     _TRISAbits	set	3969
   137   000000                     _TRISEbits	set	3973
   138   000000                     _TRISGbits	set	3975
   139   000000                     _LATFbits	set	3966
   140   000000                     _TRISFbits	set	3974
   141   000000                     _TRISHbits	set	3976
   142   000000                     _TRISDbits	set	3972
   143   000000                     _LATEbits	set	3965
   144   000000                     _LATGbits	set	3967
   145   000000                     _LATHbits	set	3968
   146   000000                     _SSP2CON2bits	set	3802
   147   000000                     _TMR0IF	set	29085
   148   000000                     _TMR0IP	set	28925
   149   000000                     _TMR0IE	set	29005
   150   000000                     _RX4PPS	set	3605
   151   000000                     _SSP2CLKPPS	set	3612
   152   000000                     _SSP2DATPPS	set	3613
   153   000000                     _PIE0bits	set	3625
   154   000000                     _CCPR4H	set	3873
   155   000000                     _CCPR3H	set	3877
   156   000000                     _CCPR2H	set	4006
   157   000000                     _CCPR1H	set	4010
   158   000000                     _CCP1CONbits	set	4011
   159   000000                     _CCPTMRS0bits	set	4013
   160   000000                     _T2PR	set	4028
   161   000000                     _T2CONbits	set	4029
   162   000000                     _INTCONbits	set	4082
   163   000000                     _CCP2CONbits	set	4007
   164   000000                     _CCP3CONbits	set	3878
   165   000000                     _ADREFbits	set	3928
   166   000000                     _LATAbits	set	3961
   167   000000                     _LATDbits	set	3964
   168   000000                     _PORTFbits	set	3982
   169   000000                     _CCP4CONbits	set	3874
   170   000000                     _PIE4bits	set	3629
   171   000000                     _RD5PPS	set	3695
   172   000000                     _ANSELDbits	set	3751
   173   000000                     _SSP2ADD	set	3798
   174   000000                     _SSP2CON1bits	set	3801
   175   000000                     _LATCbits	set	3963
   176   000000                     _RC4REG	set	3811
   177   000000                     _SSP2CON2	set	3802
   178   000000                     _SSP2STAT	set	3800
   179   000000                     _ANSELFbits	set	3764
   180   000000                     _SSP2BUF	set	3797
   181   000000                     _IPR0bits	set	3615
   182   000000                     _RE2PPS	set	3700
   183   000000                     _ANSELBbits	set	3738
   184   000000                     _RD6PPS	set	3696
   185   000000                     _PIR0bits	set	3635
   186   000000                     _PIR4bits	set	3639
   187   000000                     _RC0PPS	set	3682
   188   000000                     _RC7PPS	set	3689
   189   000000                     _ADPCH	set	3935
   190   000000                     _ADRESH	set	3940
   191   000000                     _ADCON0bits	set	3936
   192   000000                     _RE4PPS	set	3702
   193   000000                     _RG6PPS	set	3720
   194   000000                     _TMR0L	set	4051
   195   000000                     _TMR0H	set	4052
   196   000000                     _T0CON0bits	set	4053
   197   000000                     _T0CON1bits	set	4054
   198   000000                     _T2CLKCONbits	set	4031
   199   000000                     _T2HLTbits	set	4030
   200                           
   201                           ; #config settings
   202                           
   203                           	psect	cinit
   204   005040                     __pcinit:
   205                           	callstack 0
   206   005040                     start_initialization:
   207                           	callstack 0
   208   005040                     __initialization:
   209                           	callstack 0
   210                           
   211                           ; Initialize objects allocated to BANK0 (6 bytes)
   212                           ; load TBLPTR registers with __pidataBANK0
   213   005040  0E5C               	movlw	low __pidataBANK0
   214   005042  6EF6               	movwf	tblptrl,c
   215   005044  0E54               	movlw	high __pidataBANK0
   216   005046  6EF7               	movwf	tblptrh,c
   217   005048  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   218   00504A  6EF8               	movwf	tblptru,c
   219   00504C  EE00  F0DA         	lfsr	0,__pdataBANK0
   220   005050  EE10 F006          	lfsr	1,6
   221   005054                     copy_data0:
   222   005054  0009               	tblrd		*+
   223   005056  CFF5 FFEE          	movff	tablat,postinc0
   224   00505A  50E5               	movf	postdec1,w,c
   225   00505C  50E1               	movf	fsr1l,w,c
   226   00505E  E1FA               	bnz	copy_data0
   227                           
   228                           ; Clear objects allocated to BANK2 (142 bytes)
   229   005060  EE02  F000         	lfsr	0,__pbssBANK2
   230   005064  0E8E               	movlw	142
   231   005066                     clear_0:
   232   005066  6AEE               	clrf	postinc0,c
   233   005068  06E8               	decf	wreg,f,c
   234   00506A  E1FD               	bnz	clear_0
   235                           
   236                           ; Clear objects allocated to BANK1 (40 bytes)
   237   00506C  EE01  F0D8         	lfsr	0,__pbssBANK1
   238   005070  0E28               	movlw	40
   239   005072                     clear_1:
   240   005072  6AEE               	clrf	postinc0,c
   241   005074  06E8               	decf	wreg,f,c
   242   005076  E1FD               	bnz	clear_1
   243                           
   244                           ; Clear objects allocated to BANK0 (62 bytes)
   245   005078  EE00  F060         	lfsr	0,__pbssBANK0
   246   00507C  0E3E               	movlw	62
   247   00507E                     clear_2:
   248   00507E  6AEE               	clrf	postinc0,c
   249   005080  06E8               	decf	wreg,f,c
   250   005082  E1FD               	bnz	clear_2
   251                           
   252                           ; Clear objects allocated to COMRAM (4 bytes)
   253   005084  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   254   005086  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   255   005088  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   256   00508A  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   257   00508C                     end_of_initialization:
   258                           	callstack 0
   259   00508C                     __end_of__initialization:
   260                           	callstack 0
   261   00508C  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   262   00508E  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   263   005090  0100               	movlb	0
   264   005092  EFC0  F014         	goto	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMRAM
   267   00004A                     __pbssCOMRAM:
   268                           	callstack 0
   269   00004A                     _TxBufReadCnt:
   270                           	callstack 0
   271   00004A                     	ds	1
   272   00004B                     _TxBufWriteCnt:
   273                           	callstack 0
   274   00004B                     	ds	1
   275   00004C                     _RxBufReadCnt:
   276                           	callstack 0
   277   00004C                     	ds	1
   278   00004D                     _RxBufWriteCnt:
   279                           	callstack 0
   280   00004D                     	ds	1
   281                           
   282                           	psect	bssBANK0
   283   000060                     __pbssBANK0:
   284                           	callstack 0
   285   000060                     	ds	40
   286   000088                     _EUSART4RXbuf:
   287                           	callstack 0
   288   000088                     	ds	20
   289   00009C                     _lost:
   290                           	callstack 0
   291   00009C                     	ds	1
   292   00009D                     _brightnessChange:
   293                           	callstack 0
   294   00009D                     	ds	1
   295                           
   296                           	psect	dataBANK0
   297   0000DA                     __pdataBANK0:
   298                           	callstack 0
   299   0000DA                     main@F14662:
   300                           	callstack 0
   301   0000DA                     	ds	4
   302   0000DE                     _ambient:
   303                           	callstack 0
   304   0000DE                     	ds	2
   305                           
   306                           	psect	bssBANK1
   307   0001D8                     __pbssBANK1:
   308                           	callstack 0
   309   0001D8                     	ds	40
   310                           
   311                           	psect	bssBANK2
   312   000200                     __pbssBANK2:
   313                           	callstack 0
   314   000200                     	ds	82
   315   000252                     _EUSART4TXbuf:
   316                           	callstack 0
   317   000252                     	ds	60
   318                           
   319                           	psect	cstackBANK2
   320   00028E                     __pcstackBANK2:
   321                           	callstack 0
   322   00028E                     main@turnRamp:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x0
   326   00028E                     	ds	1
   327   00028F                     main@straightSpeed:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x1
   331   00028F                     	ds	1
   332   000290                     main@color:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x2
   336   000290                     	ds	1
   337   000291                     main@curMove:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x3
   341   000291                     	ds	1
   342   000292                     main@straightRamp:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x4
   346   000292                     	ds	1
   347   000293                     main@turnDuration:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x5
   351   000293                     	ds	1
   352   000294                     main@HSV:
   353                           	callstack 0
   354                           
   355                           ; 6 bytes @ 0x6
   356   000294                     	ds	6
   357   00029A                     main@RGBC:
   358                           	callstack 0
   359                           
   360                           ; 8 bytes @ 0xC
   361   00029A                     	ds	8
   362   0002A2                     main@motorR:
   363                           	callstack 0
   364                           
   365                           ; 10 bytes @ 0x14
   366   0002A2                     	ds	10
   367   0002AC                     main@motorL:
   368                           	callstack 0
   369                           
   370                           ; 10 bytes @ 0x1E
   371   0002AC                     	ds	10
   372                           
   373                           	psect	cstackBANK1
   374   000100                     __pcstackBANK1:
   375                           	callstack 0
   376   000100                     main@buf:
   377                           	callstack 0
   378                           
   379                           ; 40 bytes @ 0x0
   380   000100                     	ds	40
   381   000128                     main@straightTime:
   382                           	callstack 0
   383                           
   384                           ; 82 bytes @ 0x28
   385   000128                     	ds	82
   386   00017A                     main@moveSequence:
   387                           	callstack 0
   388                           
   389                           ; 40 bytes @ 0x7A
   390   00017A                     	ds	40
   391   0001A2                     main@wall:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0xA2
   395   0001A2                     	ds	1
   396   0001A3                     main@ambientNew:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0xA3
   400   0001A3                     	ds	2
   401   0001A5                     main@reverseDuration:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0xA5
   405   0001A5                     	ds	2
   406   0001A7                     main@turnSpeed:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0xA7
   410   0001A7                     	ds	1
   411   0001A8                     main@red:
   412                           	callstack 0
   413                           
   414                           ; 6 bytes @ 0xA8
   415   0001A8                     	ds	6
   416   0001AE                     main@green:
   417                           	callstack 0
   418                           
   419                           ; 6 bytes @ 0xAE
   420   0001AE                     	ds	6
   421   0001B4                     main@blue:
   422                           	callstack 0
   423                           
   424                           ; 6 bytes @ 0xB4
   425   0001B4                     	ds	6
   426   0001BA                     main@yellow:
   427                           	callstack 0
   428                           
   429                           ; 6 bytes @ 0xBA
   430   0001BA                     	ds	6
   431   0001C0                     main@pink:
   432                           	callstack 0
   433                           
   434                           ; 6 bytes @ 0xC0
   435   0001C0                     	ds	6
   436   0001C6                     main@orange:
   437                           	callstack 0
   438                           
   439                           ; 6 bytes @ 0xC6
   440   0001C6                     	ds	6
   441   0001CC                     main@lightblue:
   442                           	callstack 0
   443                           
   444                           ; 6 bytes @ 0xCC
   445   0001CC                     	ds	6
   446   0001D2                     main@white:
   447                           	callstack 0
   448                           
   449                           ; 6 bytes @ 0xD2
   450   0001D2                     	ds	6
   451                           
   452                           	psect	cstackBANK0
   453   00009E                     __pcstackBANK0:
   454                           	callstack 0
   455   00009E                     returnHome@i:
   456                           	callstack 0
   457   00009E                     _rgb_2_hsv$3598:
   458                           	callstack 0
   459   00009E                     color_detect@HSV:
   460                           	callstack 0
   461                           
   462                           ; 6 bytes @ 0x0
   463   00009E                     	ds	1
   464   00009F                     move@mL:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x1
   468   00009F                     	ds	2
   469   0000A1                     move@mR:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x3
   473   0000A1                     	ds	1
   474   0000A2                     rgb_2_hsv@cmin:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x4
   478   0000A2                     	ds	1
   479   0000A3                     move@color:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x5
   483   0000A3                     	ds	1
   484   0000A4                     move@moveSequence:
   485                           	callstack 0
   486   0000A4                     _rgb_2_hsv$3596:
   487                           	callstack 0
   488   0000A4                     color_detect@red:
   489                           	callstack 0
   490                           
   491                           ; 6 bytes @ 0x6
   492   0000A4                     	ds	2
   493   0000A6                     move@straightTime:
   494                           	callstack 0
   495   0000A6                     _rgb_2_hsv$3597:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x8
   499   0000A6                     	ds	2
   500   0000A8                     move@curMove:
   501                           	callstack 0
   502   0000A8                     rgb_2_hsv@r:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0xA
   506   0000A8                     	ds	1
   507   0000A9                     move@straightSpeed:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0xB
   511   0000A9                     	ds	1
   512   0000AA                     rgb_2_hsv@cmax:
   513                           	callstack 0
   514   0000AA                     move@reverseDuration:
   515                           	callstack 0
   516   0000AA                     color_detect@green:
   517                           	callstack 0
   518                           
   519                           ; 6 bytes @ 0xC
   520   0000AA                     	ds	2
   521   0000AC                     move@straightRamp:
   522                           	callstack 0
   523   0000AC                     rgb_2_hsv@diff:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0xE
   527   0000AC                     	ds	1
   528   0000AD                     move@turnSpeed:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0xF
   532   0000AD                     	ds	1
   533   0000AE                     move@turnDuration:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0x10
   537   0000AE                     	ds	1
   538   0000AF                     move@turnRamp:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x11
   542   0000AF                     	ds	1
   543   0000B0                     ??_move:
   544   0000B0                     rgb_2_hsv@g:
   545                           	callstack 0
   546   0000B0                     color_detect@blue:
   547                           	callstack 0
   548                           
   549                           ; 6 bytes @ 0x12
   550   0000B0                     	ds	2
   551   0000B2                     rgb_2_hsv@b:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x14
   555   0000B2                     	ds	2
   556   0000B4                     color_calibration@RGBC:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x16
   560   0000B4                     	ds	2
   561   0000B6                     color_calibration@HSV:
   562                           	callstack 0
   563   0000B6                     color_detect@yellow:
   564                           	callstack 0
   565                           
   566                           ; 6 bytes @ 0x18
   567   0000B6                     	ds	2
   568   0000B8                     color_calibration@red:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x1A
   572   0000B8                     	ds	2
   573   0000BA                     color_calibration@green:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x1C
   577   0000BA                     	ds	2
   578   0000BC                     color_calibration@blue:
   579                           	callstack 0
   580   0000BC                     color_detect@pink:
   581                           	callstack 0
   582                           
   583                           ; 6 bytes @ 0x1E
   584   0000BC                     	ds	2
   585   0000BE                     color_calibration@yellow:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x20
   589   0000BE                     	ds	2
   590   0000C0                     color_calibration@pink:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x22
   594   0000C0                     	ds	2
   595   0000C2                     color_calibration@orange:
   596                           	callstack 0
   597   0000C2                     color_detect@orange:
   598                           	callstack 0
   599                           
   600                           ; 6 bytes @ 0x24
   601   0000C2                     	ds	2
   602   0000C4                     color_calibration@lightblue:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x26
   606   0000C4                     	ds	2
   607   0000C6                     color_calibration@white:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x28
   611   0000C6                     	ds	2
   612   0000C8                     color_detect@lightblue:
   613                           	callstack 0
   614                           
   615                           ; 6 bytes @ 0x2A
   616   0000C8                     	ds	6
   617   0000CE                     color_detect@white:
   618                           	callstack 0
   619                           
   620                           ; 6 bytes @ 0x30
   621   0000CE                     	ds	6
   622   0000D4                     ??_main:
   623                           
   624                           ; 1 bytes @ 0x36
   625   0000D4                     	ds	2
   626   0000D6                     main@testSequence:
   627                           	callstack 0
   628                           
   629                           ; 4 bytes @ 0x38
   630   0000D6                     	ds	4
   631                           
   632                           	psect	cstackCOMRAM
   633   000001                     __pcstackCOMRAM:
   634                           	callstack 0
   635   000001                     ??_getCharFromTxBuf:
   636   000001                     ??i2_I2C_2_Master_Idle:
   637   000001                     ?i2___lwdiv:
   638                           	callstack 0
   639   000001                     putCharToRxBuf@byte:
   640                           	callstack 0
   641   000001                     i2___lwdiv@dividend:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x0
   645   000001                     	ds	1
   646   000002                     i2I2C_2_Master_Write@data_byte:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x1
   650   000002                     	ds	1
   651   000003                     i2color_writetoaddr@value:
   652                           	callstack 0
   653   000003                     i2___lwdiv@divisor:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x2
   657   000003                     	ds	1
   658   000004                     i2color_writetoaddr@address:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x3
   662   000004                     	ds	1
   663   000005                     i2___lwdiv@quotient:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x4
   667   000005                     	ds	2
   668   000007                     i2___lwdiv@counter:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x6
   672   000007                     	ds	1
   673   000008                     ??i2_color_clear_init_interrupts:
   674                           
   675                           ; 1 bytes @ 0x7
   676   000008                     	ds	1
   677   000009                     i2color_clear_init_interrupts@high_threshold:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x8
   681   000009                     	ds	2
   682   00000B                     i2color_clear_init_interrupts@low_threshold:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0xA
   686   00000B                     	ds	2
   687   00000D                     ??_HighISR:
   688                           
   689                           ; 1 bytes @ 0xC
   690   00000D                     	ds	2
   691   00000F                     ??_LowISR:
   692                           
   693                           ; 1 bytes @ 0xE
   694   00000F                     	ds	3
   695   000012                     ??_I2C_2_Master_Idle:
   696   000012                     ?_get16bitTMR0val:
   697                           	callstack 0
   698   000012                     ?_min:
   699                           	callstack 0
   700   000012                     ?_max:
   701                           	callstack 0
   702   000012                     ?___wmul:
   703                           	callstack 0
   704   000012                     ?___awdiv:
   705                           	callstack 0
   706   000012                     ?___lmul:
   707                           	callstack 0
   708   000012                     white_Light@state:
   709                           	callstack 0
   710   000012                     ADC_getval@tmpval:
   711                           	callstack 0
   712   000012                     max@a:
   713                           	callstack 0
   714   000012                     min@a:
   715                           	callstack 0
   716   000012                     initDCmotorsPWM@PWMperiod:
   717                           	callstack 0
   718   000012                     ___wmul@multiplier:
   719                           	callstack 0
   720   000012                     ___awdiv@dividend:
   721                           	callstack 0
   722   000012                     ___lmul@multiplier:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x11
   726   000012                     	ds	1
   727   000013                     ??_I2C_2_Master_Read:
   728   000013                     I2C_2_Master_Write@data_byte:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x12
   732   000013                     	ds	1
   733   000014                     ??_get16bitTMR0val:
   734   000014                     color_writetoaddr@value:
   735                           	callstack 0
   736   000014                     I2C_2_Master_Read@ack:
   737                           	callstack 0
   738   000014                     max@b:
   739                           	callstack 0
   740   000014                     min@b:
   741                           	callstack 0
   742   000014                     ___wmul@multiplicand:
   743                           	callstack 0
   744   000014                     ___awdiv@divisor:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x13
   748   000014                     	ds	1
   749   000015                     color_writetoaddr@address:
   750                           	callstack 0
   751   000015                     I2C_2_Master_Read@tmp:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x14
   755   000015                     	ds	1
   756   000016                     ??_color_detect:
   757   000016                     ___awdiv@counter:
   758                           	callstack 0
   759   000016                     color_read@RGBC:
   760                           	callstack 0
   761   000016                     get16bitTMR0val@timer_low:
   762                           	callstack 0
   763   000016                     ___wmul@product:
   764                           	callstack 0
   765   000016                     ___lmul@multiplicand:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x15
   769   000016                     	ds	1
   770   000017                     ___awdiv@sign:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x16
   774   000017                     	ds	1
   775   000018                     ??_color_read:
   776   000018                     ?___lwdiv:
   777                           	callstack 0
   778   000018                     get16bitTMR0val@timer_high:
   779                           	callstack 0
   780   000018                     ___awdiv@quotient:
   781                           	callstack 0
   782   000018                     ___lwdiv@dividend:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x17
   786   000018                     	ds	2
   787   00001A                     batteryLevel@batteryVoltage:
   788                           	callstack 0
   789   00001A                     get16bitTMR0val@timer_val:
   790                           	callstack 0
   791   00001A                     ___lwdiv@divisor:
   792                           	callstack 0
   793   00001A                     ___lmul@product:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x19
   797   00001A                     	ds	1
   798   00001B                     batteryLevel@batteryQuarter:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x1A
   802   00001B                     	ds	1
   803   00001C                     ___lwdiv@counter:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x1B
   807   00001C                     	ds	1
   808   00001D                     ___lwdiv@quotient:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x1C
   812   00001D                     	ds	1
   813   00001E                     ?___lldiv:
   814                           	callstack 0
   815   00001E                     ?___aldiv:
   816                           	callstack 0
   817   00001E                     ___lldiv@dividend:
   818                           	callstack 0
   819   00001E                     ___aldiv@dividend:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x1D
   823   00001E                     	ds	1
   824   00001F                     ??_color_clear_init_interrupts:
   825   00001F                     setMotorPWM@m:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x1E
   829   00001F                     	ds	1
   830   000020                     color_clear_init_interrupts@high_threshold:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x1F
   834   000020                     	ds	1
   835   000021                     ??_setMotorPWM:
   836                           
   837                           ; 1 bytes @ 0x20
   838   000021                     	ds	1
   839   000022                     color_clear_init_interrupts@low_threshold:
   840                           	callstack 0
   841   000022                     ___lldiv@divisor:
   842                           	callstack 0
   843   000022                     ___aldiv@divisor:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x21
   847   000022                     	ds	1
   848   000023                     color_detect@color:
   849                           	callstack 0
   850   000023                     setMotorPWM@posDuty:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x22
   854   000023                     	ds	1
   855   000024                     ??_color_click_init:
   856   000024                     setMotorPWM@negDuty:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x23
   860   000024                     	ds	1
   861   000025                     stop@mL:
   862                           	callstack 0
   863   000025                     turnLeft@mL:
   864                           	callstack 0
   865   000025                     turnRight@mL:
   866                           	callstack 0
   867   000025                     fullSpeedAhead@mL:
   868                           	callstack 0
   869   000025                     reverseOneSquare@mL:
   870                           	callstack 0
   871   000025                     wallAdjust@mL:
   872                           	callstack 0
   873   000025                     reverseShort@mL:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x24
   877   000025                     	ds	1
   878   000026                     ___aldiv@counter:
   879                           	callstack 0
   880   000026                     ___lldiv@quotient:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0x25
   884   000026                     	ds	1
   885   000027                     ___aldiv@sign:
   886                           	callstack 0
   887   000027                     stop@mR:
   888                           	callstack 0
   889   000027                     turnLeft@mR:
   890                           	callstack 0
   891   000027                     turnRight@mR:
   892                           	callstack 0
   893   000027                     fullSpeedAhead@mR:
   894                           	callstack 0
   895   000027                     reverseOneSquare@mR:
   896                           	callstack 0
   897   000027                     wallAdjust@mR:
   898                           	callstack 0
   899   000027                     reverseShort@mR:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x26
   903   000027                     	ds	1
   904   000028                     ___aldiv@quotient:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x27
   908   000028                     	ds	1
   909   000029                     stop@straightRamp:
   910                           	callstack 0
   911   000029                     turnLeft@turnSpeed:
   912                           	callstack 0
   913   000029                     turnRight@turnSpeed:
   914                           	callstack 0
   915   000029                     fullSpeedAhead@straightSpeed:
   916                           	callstack 0
   917   000029                     reverseOneSquare@straightSpeed:
   918                           	callstack 0
   919   000029                     wallAdjust@straightSpeed:
   920                           	callstack 0
   921   000029                     reverseShort@straightSpeed:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x28
   925   000029                     	ds	1
   926   00002A                     ??_stop:
   927   00002A                     turnLeft@turnDuration:
   928                           	callstack 0
   929   00002A                     turnRight@turnDuration:
   930                           	callstack 0
   931   00002A                     fullSpeedAhead@straightRamp:
   932                           	callstack 0
   933   00002A                     wallAdjust@straightRamp:
   934                           	callstack 0
   935   00002A                     reverseShort@straightRamp:
   936                           	callstack 0
   937   00002A                     ___lldiv@counter:
   938                           	callstack 0
   939   00002A                     reverseOneSquare@reverseDuration:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x29
   943   00002A                     	ds	1
   944   00002B                     ??_fullSpeedAhead:
   945   00002B                     ??_wallAdjust:
   946   00002B                     ??_reverseShort:
   947   00002B                     turnLeft@turnRamp:
   948                           	callstack 0
   949   00002B                     turnRight@turnRamp:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x2A
   953   00002B                     	ds	1
   954   00002C                     ??_turnRight:
   955   00002C                     ??_turnLeft:
   956   00002C                     reverseOneSquare@straightRamp:
   957                           	callstack 0
   958   00002C                     rgb_2_hsv@RGBC:
   959                           	callstack 0
   960                           
   961                           ; 8 bytes @ 0x2B
   962   00002C                     	ds	1
   963   00002D                     ??_reverseOneSquare:
   964   00002D                     stop@i:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x2C
   968   00002D                     	ds	1
   969   00002E                     wallAdjust@adjustDuration:
   970                           	callstack 0
   971   00002E                     reverseShort@shortReverseDuration:
   972                           	callstack 0
   973   00002E                     fullSpeedAhead@i:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x2D
   977   00002E                     	ds	1
   978   00002F                     wallAdjust@wallReverseDuration:
   979                           	callstack 0
   980   00002F                     stop@cur_power:
   981                           	callstack 0
   982   00002F                     turnLeft@i:
   983                           	callstack 0
   984   00002F                     turnRight@i:
   985                           	callstack 0
   986   00002F                     reverseShort@i:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x2E
   990   00002F                     	ds	1
   991   000030                     wallAdjust@wallSpeed:
   992                           	callstack 0
   993   000030                     fullSpeedAhead@cur_power:
   994                           	callstack 0
   995   000030                     reverseOneSquare@i:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x2F
   999   000030                     	ds	1
  1000   000031                     turnLeft@cur_power:
  1001                           	callstack 0
  1002   000031                     turnRight@cur_power:
  1003                           	callstack 0
  1004   000031                     wallAdjust@i:
  1005                           	callstack 0
  1006   000031                     reverseShort@cur_power:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x30
  1010   000031                     	ds	1
  1011   000032                     reverseOneSquare@cur_power:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x31
  1015   000032                     	ds	1
  1016   000033                     wallAdjust@cur_power:
  1017                           	callstack 0
  1018   000033                     calibration@mL:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x32
  1022   000033                     	ds	1
  1023   000034                     rgb_2_hsv@HSV:
  1024                           	callstack 0
  1025   000034                     returnHome@mL:
  1026                           	callstack 0
  1027   000034                     lostReturnHome@mL:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x33
  1031   000034                     	ds	1
  1032   000035                     calibration@mR:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x34
  1036   000035                     	ds	1
  1037   000036                     ??_rgb_2_hsv:
  1038   000036                     returnHome@mR:
  1039                           	callstack 0
  1040   000036                     lostReturnHome@mR:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x35
  1044   000036                     	ds	1
  1045   000037                     calibration@turnSpeed:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x36
  1049   000037                     	ds	1
  1050   000038                     returnHome@moveSequence:
  1051                           	callstack 0
  1052   000038                     lostReturnHome@moveSequence:
  1053                           	callstack 0
  1054   000038                     calibration@turnDuration:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x37
  1058   000038                     	ds	2
  1059   00003A                     calibration@turnRamp:
  1060                           	callstack 0
  1061   00003A                     returnHome@straightTime:
  1062                           	callstack 0
  1063   00003A                     lostReturnHome@straightTime:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x39
  1067   00003A                     	ds	1
  1068   00003B                     ??_calibration:
  1069                           
  1070                           ; 1 bytes @ 0x3A
  1071   00003B                     	ds	1
  1072   00003C                     returnHome@curMove:
  1073                           	callstack 0
  1074   00003C                     lostReturnHome@curMove:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x3B
  1078   00003C                     	ds	1
  1079   00003D                     returnHome@straightSpeed:
  1080                           	callstack 0
  1081   00003D                     lostReturnHome@straightSpeed:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x3C
  1085   00003D                     	ds	1
  1086   00003E                     returnHome@reverseDuration:
  1087                           	callstack 0
  1088   00003E                     lostReturnHome@reverseDuration:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x3D
  1092   00003E                     	ds	2
  1093   000040                     returnHome@straightRamp:
  1094                           	callstack 0
  1095   000040                     lostReturnHome@straightRamp:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x3F
  1099   000040                     	ds	1
  1100   000041                     returnHome@turnSpeed:
  1101                           	callstack 0
  1102   000041                     lostReturnHome@turnSpeed:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x40
  1106   000041                     	ds	1
  1107   000042                     ??_color_calibration:
  1108   000042                     returnHome@turnDuration:
  1109                           	callstack 0
  1110   000042                     lostReturnHome@turnDuration:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x41
  1114   000042                     	ds	1
  1115   000043                     returnHome@turnRamp:
  1116                           	callstack 0
  1117   000043                     lostReturnHome@turnRamp:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x42
  1121   000043                     	ds	1
  1122   000044                     ??_lostReturnHome:
  1123   000044                     ??_returnHome:
  1124                           
  1125                           ; 1 bytes @ 0x43
  1126   000044                     	ds	4
  1127   000048                     lostReturnHome@i:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x47
  1131   000048                     	ds	2
  1132                           
  1133 ;;
  1134 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1135 ;;
  1136 ;; *************** function _main *****************
  1137 ;; Defined at:
  1138 ;;		line 28 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  straightTime   82   40[BANK1 ] unsigned int [41]
  1143 ;;  moveSequence   40  122[BANK1 ] unsigned char [40]
  1144 ;;  buf            40    0[BANK1 ] unsigned char [40]
  1145 ;;  motorL         10   30[BANK2 ] struct DC_motor
  1146 ;;  motorR         10   20[BANK2 ] struct DC_motor
  1147 ;;  RGBC            8   12[BANK2 ] struct RGBC_val
  1148 ;;  RGBC_n          8    0        struct RGBC_val
  1149 ;;  HSV             6    6[BANK2 ] struct HSV_val
  1150 ;;  white           6  210[BANK1 ] struct HSV_calib
  1151 ;;  lightblue       6  204[BANK1 ] struct HSV_calib
  1152 ;;  orange          6  198[BANK1 ] struct HSV_calib
  1153 ;;  pink            6  192[BANK1 ] struct HSV_calib
  1154 ;;  yellow          6  186[BANK1 ] struct HSV_calib
  1155 ;;  blue            6  180[BANK1 ] struct HSV_calib
  1156 ;;  green           6  174[BANK1 ] struct HSV_calib
  1157 ;;  red             6  168[BANK1 ] struct HSV_calib
  1158 ;;  testSequence    4   56[BANK0 ] unsigned char [4]
  1159 ;;  PWMcycle        2    0        unsigned int 
  1160 ;;  reverseDurat    2  165[BANK1 ] unsigned int 
  1161 ;;  ambientNew      2  163[BANK1 ] unsigned int 
  1162 ;;  turnDuration    1    5[BANK2 ] unsigned char 
  1163 ;;  straightRamp    1    4[BANK2 ] unsigned char 
  1164 ;;  curMove         1    3[BANK2 ] unsigned char 
  1165 ;;  color           1    2[BANK2 ] unsigned char 
  1166 ;;  straightSpee    1    1[BANK2 ] unsigned char 
  1167 ;;  turnRamp        1    0[BANK2 ] unsigned char 
  1168 ;;  turnSpeed       1  167[BANK1 ] unsigned char 
  1169 ;;  wall            1  162[BANK1 ] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1180 ;;      Locals:         0       4     216      40       0       0       0       0       0       0       0       0       
      +0       0       0
  1181 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1182 ;;      Totals:         0       6     216      40       0       0       0       0       0       0       0       0       
      +0       0       0
  1183 ;;Total ram usage:      262 bytes
  1184 ;; Hardware stack levels required when called: 11
  1185 ;; This function calls:
  1186 ;;		_Buggy_init
  1187 ;;		_Interrupts_init
  1188 ;;		_Timer0_init
  1189 ;;		_batteryLevel
  1190 ;;		_calibration
  1191 ;;		_color_calibration
  1192 ;;		_color_clear_init_interrupts
  1193 ;;		_color_click_init
  1194 ;;		_color_detect
  1195 ;;		_color_read
  1196 ;;		_fullSpeedAhead
  1197 ;;		_get16bitTMR0val
  1198 ;;		_initDCmotorsPWM
  1199 ;;		_initUSART4
  1200 ;;		_lostReturnHome
  1201 ;;		_move
  1202 ;;		_resetTimer
  1203 ;;		_rgb_2_hsv
  1204 ;;		_stop
  1205 ;;		_wallAdjust
  1206 ;;		_white_Light
  1207 ;; This function is called by:
  1208 ;;		Startup code after reset
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text0
  1213   002980                     __ptext0:
  1214                           	callstack 0
  1215   002980                     _main:
  1216                           	callstack 20
  1217   002980                     
  1218                           ;main.c: 30:     char buf[40] = {0};
  1219   002980  EE21  F000         	lfsr	2,main@buf
  1220   002984  0E27               	movlw	39
  1221   002986                     u5141:
  1222   002986  6ADE               	clrf	postinc2,c
  1223   002988  06E8               	decf	wreg,f,c
  1224   00298A  E2FD               	bc	u5141
  1225   00298C                     
  1226                           ;main.c: 33:     unsigned int ambientNew;;main.c: 34:     char wall = 0;
  1227   00298C  0E00               	movlw	0
  1228   00298E  0101               	movlb	1	; () banked
  1229   002990  6FA2               	movwf	main@wall& (0+255),b
  1230   002992                     
  1231                           ; BSR set to: 1
  1232                           ;main.c: 35:     unsigned char color = 0;
  1233   002992  0E00               	movlw	0
  1234   002994  0102               	movlb	2	; () banked
  1235   002996  6F90               	movwf	main@color& (0+255),b
  1236   002998                     
  1237                           ; BSR set to: 2
  1238                           ;main.c: 36:     unsigned char moveSequence[40] = {0};
  1239   002998  EE21  F07A         	lfsr	2,main@moveSequence
  1240   00299C  0E27               	movlw	39
  1241   00299E                     u5151:
  1242   00299E  6ADE               	clrf	postinc2,c
  1243   0029A0  06E8               	decf	wreg,f,c
  1244   0029A2  E2FD               	bc	u5151
  1245   0029A4                     
  1246                           ; BSR set to: 2
  1247                           ;main.c: 37:     unsigned int straightTime[41] = {0};
  1248   0029A4  EE21  F028         	lfsr	2,main@straightTime
  1249   0029A8  0E51               	movlw	81
  1250   0029AA                     u5161:
  1251   0029AA  6ADE               	clrf	postinc2,c
  1252   0029AC  06E8               	decf	wreg,f,c
  1253   0029AE  E2FD               	bc	u5161
  1254   0029B0                     
  1255                           ; BSR set to: 2
  1256                           ;main.c: 38:     char curMove = 0;
  1257   0029B0  0E00               	movlw	0
  1258   0029B2  6F91               	movwf	main@curMove& (0+255),b
  1259   0029B4                     
  1260                           ; BSR set to: 2
  1261                           ;main.c: 40:     unsigned char testSequence[4] = {2,2,1,1,8};
  1262   0029B4  C0DA  F0D6         	movff	main@F14662,main@testSequence
  1263   0029B8  C0DB  F0D7         	movff	main@F14662+1,main@testSequence+1
  1264   0029BC  C0DC  F0D8         	movff	main@F14662+2,main@testSequence+2
  1265   0029C0  C0DD  F0D9         	movff	main@F14662+3,main@testSequence+3
  1266   0029C4                     
  1267                           ; BSR set to: 2
  1268                           ;main.c: 43:     struct RGBC_val RGBC, RGBC_n;;main.c: 44:     struct HSV_val HSV;;main.
      +                          c: 45:     struct DC_motor motorL, motorR;;main.c: 48:     Buggy_init();
  1269   0029C4  ECAF  F028         	call	_Buggy_init	;wreg free
  1270   0029C8                     
  1271                           ;main.c: 49:     color_click_init();
  1272   0029C8  EC93  F028         	call	_color_click_init	;wreg free
  1273   0029CC                     
  1274                           ;main.c: 50:     Timer0_init();
  1275   0029CC  ECA5  F029         	call	_Timer0_init	;wreg free
  1276   0029D0                     
  1277                           ;main.c: 51:     initUSART4();
  1278   0029D0  ECC5  F029         	call	_initUSART4	;wreg free
  1279   0029D4                     
  1280                           ;main.c: 52:     initDCmotorsPWM(PWMcycle);
  1281   0029D4  0E00               	movlw	0
  1282   0029D6  6E13               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1283   0029D8  0EC7               	movlw	199
  1284   0029DA  6E12               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1285   0029DC  ECF4  F026         	call	_initDCmotorsPWM	;wreg free
  1286   0029E0                     
  1287                           ;main.c: 54:     motorL.power=0;
  1288   0029E0  0E00               	movlw	0
  1289   0029E2  0102               	movlb	2	; () banked
  1290   0029E4  6FAC               	movwf	main@motorL& (0+255),b
  1291   0029E6                     
  1292                           ; BSR set to: 2
  1293                           ;main.c: 55:     motorL.direction=1;
  1294   0029E6  0E01               	movlw	1
  1295   0029E8  6FAD               	movwf	(main@motorL+1)& (0+255),b
  1296   0029EA                     
  1297                           ; BSR set to: 2
  1298                           ;main.c: 56:     motorL.brakemode=1;
  1299   0029EA  0E01               	movlw	1
  1300   0029EC  6FAE               	movwf	(main@motorL+2)& (0+255),b
  1301   0029EE                     
  1302                           ; BSR set to: 2
  1303                           ;main.c: 57:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1304   0029EE  0EAA               	movlw	170
  1305   0029F0  6FB1               	movwf	(main@motorL+5)& (0+255),b
  1306   0029F2  0E0F               	movlw	15
  1307   0029F4  6FB2               	movwf	(main@motorL+6)& (0+255),b
  1308   0029F6                     
  1309                           ; BSR set to: 2
  1310                           ;main.c: 58:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1311   0029F6  0EA6               	movlw	166
  1312   0029F8  6FB3               	movwf	(main@motorL+7)& (0+255),b
  1313   0029FA  0E0F               	movlw	15
  1314   0029FC  6FB4               	movwf	(main@motorL+8)& (0+255),b
  1315   0029FE                     
  1316                           ; BSR set to: 2
  1317                           ;main.c: 59:     motorL.PWMperiod=PWMcycle;
  1318   0029FE  0E00               	movlw	0
  1319   002A00  6FB0               	movwf	(main@motorL+4)& (0+255),b
  1320   002A02  0EC7               	movlw	199
  1321   002A04  6FAF               	movwf	(main@motorL+3)& (0+255),b
  1322   002A06                     
  1323                           ; BSR set to: 2
  1324                           ;main.c: 60:     motorL.compensation=0;
  1325   002A06  0E00               	movlw	0
  1326   002A08  6FB5               	movwf	(main@motorL+9)& (0+255),b
  1327   002A0A                     
  1328                           ; BSR set to: 2
  1329                           ;main.c: 62:     motorR.power=0;
  1330   002A0A  0E00               	movlw	0
  1331   002A0C  6FA2               	movwf	main@motorR& (0+255),b
  1332   002A0E                     
  1333                           ; BSR set to: 2
  1334                           ;main.c: 63:     motorR.direction=1;
  1335   002A0E  0E01               	movlw	1
  1336   002A10  6FA3               	movwf	(main@motorR+1)& (0+255),b
  1337   002A12                     
  1338                           ; BSR set to: 2
  1339                           ;main.c: 64:     motorR.brakemode=1;
  1340   002A12  0E01               	movlw	1
  1341   002A14  6FA4               	movwf	(main@motorR+2)& (0+255),b
  1342   002A16                     
  1343                           ; BSR set to: 2
  1344                           ;main.c: 65:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1345   002A16  0E25               	movlw	37
  1346   002A18  6FA7               	movwf	(main@motorR+5)& (0+255),b
  1347   002A1A  0E0F               	movlw	15
  1348   002A1C  6FA8               	movwf	(main@motorR+6)& (0+255),b
  1349   002A1E                     
  1350                           ; BSR set to: 2
  1351                           ;main.c: 66:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1352   002A1E  0E21               	movlw	33
  1353   002A20  6FA9               	movwf	(main@motorR+7)& (0+255),b
  1354   002A22  0E0F               	movlw	15
  1355   002A24  6FAA               	movwf	(main@motorR+8)& (0+255),b
  1356   002A26                     
  1357                           ; BSR set to: 2
  1358                           ;main.c: 67:     motorR.PWMperiod=PWMcycle;
  1359   002A26  0E00               	movlw	0
  1360   002A28  6FA6               	movwf	(main@motorR+4)& (0+255),b
  1361   002A2A  0EC7               	movlw	199
  1362   002A2C  6FA5               	movwf	(main@motorR+3)& (0+255),b
  1363   002A2E                     
  1364                           ; BSR set to: 2
  1365                           ;main.c: 68:     motorR.compensation=0;
  1366   002A2E  0E00               	movlw	0
  1367   002A30  6FAB               	movwf	(main@motorR+9)& (0+255),b
  1368   002A32                     
  1369                           ; BSR set to: 2
  1370                           ;main.c: 71:     char straightSpeed=20;
  1371   002A32  0E14               	movlw	20
  1372   002A34  6F8F               	movwf	main@straightSpeed& (0+255),b
  1373   002A36                     
  1374                           ; BSR set to: 2
  1375                           ;main.c: 72:     unsigned char straightRamp=2;
  1376   002A36  0E02               	movlw	2
  1377   002A38  6F92               	movwf	main@straightRamp& (0+255),b
  1378   002A3A                     
  1379                           ; BSR set to: 2
  1380                           ;main.c: 74:     unsigned int reverseDuration=400;
  1381   002A3A  0E01               	movlw	1
  1382   002A3C  0101               	movlb	1	; () banked
  1383   002A3E  6FA6               	movwf	(main@reverseDuration+1)& (0+255),b
  1384   002A40  0E90               	movlw	144
  1385   002A42  6FA5               	movwf	main@reverseDuration& (0+255),b
  1386   002A44                     
  1387                           ; BSR set to: 1
  1388                           ;main.c: 76:     char turnSpeed=40;
  1389   002A44  0E28               	movlw	40
  1390   002A46  6FA7               	movwf	main@turnSpeed& (0+255),b
  1391   002A48                     
  1392                           ; BSR set to: 1
  1393                           ;main.c: 77:     unsigned char turnDuration=10;
  1394   002A48  0E0A               	movlw	10
  1395   002A4A  0102               	movlb	2	; () banked
  1396   002A4C  6F93               	movwf	main@turnDuration& (0+255),b
  1397   002A4E                     
  1398                           ; BSR set to: 2
  1399                           ;main.c: 78:     unsigned char turnRamp=1;
  1400   002A4E  0E01               	movlw	1
  1401   002A50  6F8E               	movwf	main@turnRamp& (0+255),b
  1402   002A52                     
  1403                           ; BSR set to: 2
  1404                           ;main.c: 81:     batteryLevel();
  1405   002A52  EC4B  F028         	call	_batteryLevel	;wreg free
  1406   002A56                     l93:
  1407   002A56  B48E               	btfsc	142,2,c	;volatile
  1408   002A58  EF30  F015         	goto	u5171
  1409   002A5C  EF32  F015         	goto	u5170
  1410   002A60                     u5171:
  1411   002A60  EF2B  F015         	goto	l93
  1412   002A64                     u5170:
  1413   002A64                     
  1414                           ;main.c: 94:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  1415   002A64  9680               	bcf	128,3,c	;volatile
  1416   002A66  9E7C               	bcf	124,7,c	;volatile
  1417                           
  1418                           ;main.c: 97:     LATHbits.LATH1=LATDbits.LATD3=1;
  1419   002A68  867C               	bsf	124,3,c	;volatile
  1420   002A6A  8280               	bsf	128,1,c	;volatile
  1421   002A6C                     
  1422                           ;main.c: 98:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1423   002A6C  0E29               	movlw	41
  1424   002A6E  0100               	movlb	0	; () banked
  1425   002A70  6FD5               	movwf	(??_main+1)& (0+255),b
  1426   002A72  0E96               	movlw	150
  1427   002A74  6FD4               	movwf	??_main& (0+255),b
  1428   002A76  0E7F               	movlw	127
  1429   002A78                     u5357:
  1430   002A78  2EE8               	decfsz	wreg,f,c
  1431   002A7A  D7FE               	bra	u5357
  1432   002A7C  2FD4               	decfsz	??_main& (0+255),f,b
  1433   002A7E  D7FC               	bra	u5357
  1434   002A80  2FD5               	decfsz	(??_main+1)& (0+255),f,b
  1435   002A82  D7FA               	bra	u5357
  1436   002A84                     
  1437                           ;main.c: 101:     struct HSV_calib red, green, blue, yellow, pink, orange, lightblue, wh
      +                          ite;;main.c: 102:     color_calibration(&RGBC, &HSV, &red, &green, &blue, &yellow, &pink
      +                          , &orange, &lightblue, &white);
  1438   002A84  0E9A               	movlw	low main@RGBC
  1439   002A86  0100               	movlb	0	; () banked
  1440   002A88  6FB4               	movwf	color_calibration@RGBC& (0+255),b
  1441   002A8A  0E02               	movlw	high main@RGBC
  1442   002A8C  6FB5               	movwf	(color_calibration@RGBC+1)& (0+255),b
  1443   002A8E  0E94               	movlw	low main@HSV
  1444   002A90  6FB6               	movwf	color_calibration@HSV& (0+255),b
  1445   002A92  0E02               	movlw	high main@HSV
  1446   002A94  6FB7               	movwf	(color_calibration@HSV+1)& (0+255),b
  1447   002A96  0EA8               	movlw	low main@red
  1448   002A98  6FB8               	movwf	color_calibration@red& (0+255),b
  1449   002A9A  0E01               	movlw	high main@red
  1450   002A9C  6FB9               	movwf	(color_calibration@red+1)& (0+255),b
  1451   002A9E  0EAE               	movlw	low main@green
  1452   002AA0  6FBA               	movwf	color_calibration@green& (0+255),b
  1453   002AA2  0E01               	movlw	high main@green
  1454   002AA4  6FBB               	movwf	(color_calibration@green+1)& (0+255),b
  1455   002AA6  0EB4               	movlw	low main@blue
  1456   002AA8  6FBC               	movwf	color_calibration@blue& (0+255),b
  1457   002AAA  0E01               	movlw	high main@blue
  1458   002AAC  6FBD               	movwf	(color_calibration@blue+1)& (0+255),b
  1459   002AAE  0EBA               	movlw	low main@yellow
  1460   002AB0  6FBE               	movwf	color_calibration@yellow& (0+255),b
  1461   002AB2  0E01               	movlw	high main@yellow
  1462   002AB4  6FBF               	movwf	(color_calibration@yellow+1)& (0+255),b
  1463   002AB6  0EC0               	movlw	low main@pink
  1464   002AB8  6FC0               	movwf	color_calibration@pink& (0+255),b
  1465   002ABA  0E01               	movlw	high main@pink
  1466   002ABC  6FC1               	movwf	(color_calibration@pink+1)& (0+255),b
  1467   002ABE  0EC6               	movlw	low main@orange
  1468   002AC0  6FC2               	movwf	color_calibration@orange& (0+255),b
  1469   002AC2  0E01               	movlw	high main@orange
  1470   002AC4  6FC3               	movwf	(color_calibration@orange+1)& (0+255),b
  1471   002AC6  0ECC               	movlw	low main@lightblue
  1472   002AC8  6FC4               	movwf	color_calibration@lightblue& (0+255),b
  1473   002ACA  0E01               	movlw	high main@lightblue
  1474   002ACC  6FC5               	movwf	(color_calibration@lightblue+1)& (0+255),b
  1475   002ACE  0ED2               	movlw	low main@white
  1476   002AD0  6FC6               	movwf	color_calibration@white& (0+255),b
  1477   002AD2  0E01               	movlw	high main@white
  1478   002AD4  6FC7               	movwf	(color_calibration@white+1)& (0+255),b
  1479   002AD6  ECE2  F011         	call	_color_calibration	;wreg free
  1480   002ADA                     
  1481                           ;main.c: 105:     calibration(&motorL, &motorR, turnSpeed, &turnDuration, turnRamp);
  1482   002ADA  0EAC               	movlw	low main@motorL
  1483   002ADC  6E33               	movwf	calibration@mL^0,c
  1484   002ADE  0E02               	movlw	high main@motorL
  1485   002AE0  6E34               	movwf	(calibration@mL+1)^0,c
  1486   002AE2  0EA2               	movlw	low main@motorR
  1487   002AE4  6E35               	movwf	calibration@mR^0,c
  1488   002AE6  0E02               	movlw	high main@motorR
  1489   002AE8  6E36               	movwf	(calibration@mR+1)^0,c
  1490   002AEA  0E28               	movlw	40
  1491   002AEC  6E37               	movwf	calibration@turnSpeed^0,c
  1492   002AEE  0E93               	movlw	low main@turnDuration
  1493   002AF0  6E38               	movwf	calibration@turnDuration^0,c
  1494   002AF2  0E02               	movlw	high main@turnDuration
  1495   002AF4  6E39               	movwf	(calibration@turnDuration+1)^0,c
  1496   002AF6  0E01               	movlw	1
  1497   002AF8  6E3A               	movwf	calibration@turnRamp^0,c
  1498   002AFA  EC62  F01D         	call	_calibration	;wreg free
  1499   002AFE                     
  1500                           ;main.c: 115:     white_Light(1);
  1501   002AFE  0E01               	movlw	1
  1502   002B00  EC83  F029         	call	_white_Light
  1503   002B04                     
  1504                           ;main.c: 116:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1505   002B04  0E52               	movlw	82
  1506   002B06  0100               	movlb	0	; () banked
  1507   002B08  6FD5               	movwf	(??_main+1)& (0+255),b
  1508   002B0A  0E2B               	movlw	43
  1509   002B0C  6FD4               	movwf	??_main& (0+255),b
  1510   002B0E  0E00               	movlw	0
  1511   002B10                     u5367:
  1512   002B10  2EE8               	decfsz	wreg,f,c
  1513   002B12  D7FE               	bra	u5367
  1514   002B14  2FD4               	decfsz	??_main& (0+255),f,b
  1515   002B16  D7FC               	bra	u5367
  1516   002B18  2FD5               	decfsz	(??_main+1)& (0+255),f,b
  1517   002B1A  D7FA               	bra	u5367
  1518   002B1C  0000               	nop	
  1519   002B1E                     
  1520                           ;main.c: 119:     resetTimer();
  1521   002B1E  EC10  F02A         	call	_resetTimer	;wreg free
  1522   002B22                     
  1523                           ;main.c: 120:     Interrupts_init();
  1524   002B22  ECF9  F029         	call	_Interrupts_init	;wreg free
  1525   002B26                     
  1526                           ;main.c: 123:     color_read(&RGBC);
  1527   002B26  0E9A               	movlw	low main@RGBC
  1528   002B28  6E16               	movwf	color_read@RGBC^0,c
  1529   002B2A  0E02               	movlw	high main@RGBC
  1530   002B2C  6E17               	movwf	(color_read@RGBC+1)^0,c
  1531   002B2E  ECA7  F01F         	call	_color_read	;wreg free
  1532   002B32                     
  1533                           ;main.c: 124:     ambient=RGBC.C;
  1534   002B32  C2A0  F0DE         	movff	main@RGBC+6,_ambient
  1535   002B36  C2A1  F0DF         	movff	main@RGBC+7,_ambient+1
  1536   002B3A                     
  1537                           ;main.c: 125:     color_clear_init_interrupts();
  1538   002B3A  ECFC  F025         	call	_color_clear_init_interrupts	;wreg free
  1539   002B3E                     
  1540                           ;main.c: 126:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1541   002B3E  0ED0               	movlw	208
  1542   002B40  0100               	movlb	0	; () banked
  1543   002B42  6FD4               	movwf	??_main& (0+255),b
  1544   002B44  0EC9               	movlw	201
  1545   002B46                     u5377:
  1546   002B46  2EE8               	decfsz	wreg,f,c
  1547   002B48  D7FE               	bra	u5377
  1548   002B4A  2FD4               	decfsz	??_main& (0+255),f,b
  1549   002B4C  D7FC               	bra	u5377
  1550   002B4E  D000               	nop2	
  1551   002B50                     
  1552                           ;main.c: 129:     fullSpeedAhead(&motorL, &motorR, straightSpeed, straightRamp);
  1553   002B50  0EAC               	movlw	low main@motorL
  1554   002B52  6E25               	movwf	fullSpeedAhead@mL^0,c
  1555   002B54  0E02               	movlw	high main@motorL
  1556   002B56  6E26               	movwf	(fullSpeedAhead@mL+1)^0,c
  1557   002B58  0EA2               	movlw	low main@motorR
  1558   002B5A  6E27               	movwf	fullSpeedAhead@mR^0,c
  1559   002B5C  0E02               	movlw	high main@motorR
  1560   002B5E  6E28               	movwf	(fullSpeedAhead@mR+1)^0,c
  1561   002B60  0E14               	movlw	20
  1562   002B62  6E29               	movwf	fullSpeedAhead@straightSpeed^0,c
  1563   002B64  0E02               	movlw	2
  1564   002B66  6E2A               	movwf	fullSpeedAhead@straightRamp^0,c
  1565   002B68  EC27  F025         	call	_fullSpeedAhead	;wreg free
  1566   002B6C                     
  1567                           ;main.c: 130:     resetTimer();
  1568   002B6C  EC10  F02A         	call	_resetTimer	;wreg free
  1569   002B70                     
  1570                           ;main.c: 133:     brightnessChange=0;
  1571   002B70  0E00               	movlw	0
  1572   002B72  0100               	movlb	0	; () banked
  1573   002B74  6F9D               	movwf	_brightnessChange& (0+255),b
  1574   002B76                     
  1575                           ; BSR set to: 0
  1576                           ;main.c: 134:     lost=0;
  1577   002B76  0E00               	movlw	0
  1578   002B78  6F9C               	movwf	_lost& (0+255),b
  1579   002B7A                     l5996:
  1580                           
  1581                           ;main.c: 137:         if (brightnessChange == 1) {
  1582   002B7A  0100               	movlb	0	; () banked
  1583   002B7C  059D               	decf	_brightnessChange& (0+255),w,b
  1584   002B7E  A4D8               	btfss	status,2,c
  1585   002B80  EFC4  F015         	goto	u5181
  1586   002B84  EFC6  F015         	goto	u5180
  1587   002B88                     u5181:
  1588   002B88  EFF9  F015         	goto	l6014
  1589   002B8C                     u5180:
  1590   002B8C                     
  1591                           ; BSR set to: 0
  1592                           ;main.c: 140:             color_read(&RGBC);
  1593   002B8C  0E9A               	movlw	low main@RGBC
  1594   002B8E  6E16               	movwf	color_read@RGBC^0,c
  1595   002B90  0E02               	movlw	high main@RGBC
  1596   002B92  6E17               	movwf	(color_read@RGBC+1)^0,c
  1597   002B94  ECA7  F01F         	call	_color_read	;wreg free
  1598   002B98                     
  1599                           ;main.c: 141:             ambientNew=RGBC.C;
  1600   002B98  C2A0  F1A3         	movff	main@RGBC+6,main@ambientNew
  1601   002B9C  C2A1  F1A4         	movff	main@RGBC+7,main@ambientNew+1
  1602   002BA0                     
  1603                           ;main.c: 143:             if (ambientNew <= ambient) {
  1604   002BA0  0101               	movlb	1	; () banked
  1605   002BA2  51A3               	movf	main@ambientNew& (0+255),w,b
  1606   002BA4  0100               	movlb	0	; () banked
  1607   002BA6  5DDE               	subwf	_ambient& (0+255),w,b
  1608   002BA8  0101               	movlb	1	; () banked
  1609   002BAA  51A4               	movf	(main@ambientNew+1)& (0+255),w,b
  1610   002BAC  0100               	movlb	0	; () banked
  1611   002BAE  59DF               	subwfb	(_ambient+1)& (0+255),w,b
  1612   002BB0  A0D8               	btfss	status,0,c
  1613   002BB2  EFDD  F015         	goto	u5191
  1614   002BB6  EFDF  F015         	goto	u5190
  1615   002BBA                     u5191:
  1616   002BBA  EFF3  F015         	goto	l6012
  1617   002BBE                     u5190:
  1618   002BBE                     
  1619                           ; BSR set to: 0
  1620                           ;main.c: 144:                 ambient = ambientNew;
  1621   002BBE  C1A3  F0DE         	movff	main@ambientNew,_ambient
  1622   002BC2  C1A4  F0DF         	movff	main@ambientNew+1,_ambient+1
  1623   002BC6                     
  1624                           ; BSR set to: 0
  1625                           ;main.c: 145:                 color_clear_init_interrupts();
  1626   002BC6  ECFC  F025         	call	_color_clear_init_interrupts	;wreg free
  1627   002BCA                     
  1628                           ;main.c: 146:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  1629   002BCA  0ED0               	movlw	208
  1630   002BCC  0100               	movlb	0	; () banked
  1631   002BCE  6FD4               	movwf	??_main& (0+255),b
  1632   002BD0  0EC9               	movlw	201
  1633   002BD2                     u5387:
  1634   002BD2  2EE8               	decfsz	wreg,f,c
  1635   002BD4  D7FE               	bra	u5387
  1636   002BD6  2FD4               	decfsz	??_main& (0+255),f,b
  1637   002BD8  D7FC               	bra	u5387
  1638   002BDA  D000               	nop2	
  1639   002BDC                     
  1640                           ;main.c: 147:                 brightnessChange = 0;
  1641   002BDC  0E00               	movlw	0
  1642   002BDE  0100               	movlb	0	; () banked
  1643   002BE0  6F9D               	movwf	_brightnessChange& (0+255),b
  1644                           
  1645                           ;main.c: 148:             }
  1646   002BE2  EFF9  F015         	goto	l6014
  1647   002BE6                     l6012:
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;main.c: 151:                 wall = 1;
  1651   002BE6  0E01               	movlw	1
  1652   002BE8  0101               	movlb	1	; () banked
  1653   002BEA  6FA2               	movwf	main@wall& (0+255),b
  1654                           
  1655                           ;main.c: 152:                 brightnessChange = 0;
  1656   002BEC  0E00               	movlw	0
  1657   002BEE  0100               	movlb	0	; () banked
  1658   002BF0  6F9D               	movwf	_brightnessChange& (0+255),b
  1659   002BF2                     l6014:
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;main.c: 156:         if (wall == 1) {
  1663   002BF2  0101               	movlb	1	; () banked
  1664   002BF4  05A2               	decf	main@wall& (0+255),w,b
  1665   002BF6  A4D8               	btfss	status,2,c
  1666   002BF8  EF00  F016         	goto	u5201
  1667   002BFC  EF02  F016         	goto	u5200
  1668   002C00                     u5201:
  1669   002C00  EFE2  F016         	goto	l6046
  1670   002C04                     u5200:
  1671   002C04                     
  1672                           ; BSR set to: 1
  1673                           ;main.c: 157:             PIE0bits.INT0IE=TMR0IE=0;
  1674   002C04  010E               	movlb	14	; () banked
  1675   002C06  9B29               	bcf	41,5,b	;volatile
  1676   002C08  AB29               	btfss	41,5,b	;volatile
  1677   002C0A  D002               	bra	u5215
  1678   002C0C  8129               	bsf	41,0,b	;volatile
  1679   002C0E  D002               	bra	u5217
  1680   002C10                     u5215:
  1681   002C10  010E               	movlb	14	; () banked
  1682   002C12  9129               	bcf	41,0,b	;volatile
  1683   002C14                     u5217:
  1684   002C14                     
  1685                           ; BSR set to: 14
  1686                           ;main.c: 158:             straightTime[curMove] = get16bitTMR0val();
  1687   002C14  EC21  F029         	call	_get16bitTMR0val	;wreg free
  1688   002C18  0102               	movlb	2	; () banked
  1689   002C1A  5191               	movf	main@curMove& (0+255),w,b
  1690   002C1C  0D02               	mullw	2
  1691   002C1E  0E28               	movlw	low main@straightTime
  1692   002C20  24F3               	addwf	243,w,c
  1693   002C22  6ED9               	movwf	fsr2l,c
  1694   002C24  0E01               	movlw	high main@straightTime
  1695   002C26  20F4               	addwfc	prodh,w,c
  1696   002C28  6EDA               	movwf	fsr2h,c
  1697   002C2A  C012  FFDE         	movff	?_get16bitTMR0val,postinc2
  1698   002C2E  C013  FFDD         	movff	?_get16bitTMR0val+1,postdec2
  1699                           
  1700                           ;main.c: 161:             stop(&motorL, &motorR, straightRamp);
  1701   002C32  0EAC               	movlw	low main@motorL
  1702   002C34  6E25               	movwf	stop@mL^0,c
  1703   002C36  0E02               	movlw	high main@motorL
  1704   002C38  6E26               	movwf	(stop@mL+1)^0,c
  1705   002C3A  0EA2               	movlw	low main@motorR
  1706   002C3C  6E27               	movwf	stop@mR^0,c
  1707   002C3E  0E02               	movlw	high main@motorR
  1708   002C40  6E28               	movwf	(stop@mR+1)^0,c
  1709   002C42  C292  F029         	movff	main@straightRamp,stop@straightRamp
  1710   002C46  ECA3  F024         	call	_stop	;wreg free
  1711                           
  1712                           ;main.c: 162:             wallAdjust(&motorL, &motorR, straightSpeed, straightRamp);
  1713   002C4A  0EAC               	movlw	low main@motorL
  1714   002C4C  6E25               	movwf	wallAdjust@mL^0,c
  1715   002C4E  0E02               	movlw	high main@motorL
  1716   002C50  6E26               	movwf	(wallAdjust@mL+1)^0,c
  1717   002C52  0EA2               	movlw	low main@motorR
  1718   002C54  6E27               	movwf	wallAdjust@mR^0,c
  1719   002C56  0E02               	movlw	high main@motorR
  1720   002C58  6E28               	movwf	(wallAdjust@mR+1)^0,c
  1721   002C5A  C28F  F029         	movff	main@straightSpeed,wallAdjust@straightSpeed
  1722   002C5E  C292  F02A         	movff	main@straightRamp,wallAdjust@straightRamp
  1723   002C62  ECA5  F019         	call	_wallAdjust	;wreg free
  1724   002C66                     
  1725                           ;main.c: 163:             color_read(&RGBC);
  1726   002C66  0E9A               	movlw	low main@RGBC
  1727   002C68  6E16               	movwf	color_read@RGBC^0,c
  1728   002C6A  0E02               	movlw	high main@RGBC
  1729   002C6C  6E17               	movwf	(color_read@RGBC+1)^0,c
  1730   002C6E  ECA7  F01F         	call	_color_read	;wreg free
  1731   002C72                     
  1732                           ;main.c: 165:             rgb_2_hsv(RGBC, &HSV);
  1733   002C72  EE22  F09A         	lfsr	2,main@RGBC
  1734   002C76  EE00  F02C         	lfsr	0,rgb_2_hsv@RGBC
  1735   002C7A  0E07               	movlw	7
  1736   002C7C                     u5221:
  1737   002C7C  CFDB FFEB          	movff	plusw2,plusw0
  1738   002C80  06E8               	decf	wreg,f,c
  1739   002C82  E2FC               	bc	u5221
  1740   002C84  0E94               	movlw	low main@HSV
  1741   002C86  6E34               	movwf	rgb_2_hsv@HSV^0,c
  1742   002C88  0E02               	movlw	high main@HSV
  1743   002C8A  6E35               	movwf	(rgb_2_hsv@HSV+1)^0,c
  1744   002C8C  EC37  F017         	call	_rgb_2_hsv	;wreg free
  1745   002C90                     
  1746                           ;main.c: 166:             color = color_detect(HSV, red, green, blue, yellow, pink, oran
      +                          ge, lightblue, white);
  1747   002C90  EE22  F094         	lfsr	2,main@HSV
  1748   002C94  EE00  F09E         	lfsr	0,color_detect@HSV
  1749   002C98  0E05               	movlw	5
  1750   002C9A                     u5231:
  1751   002C9A  CFDB FFEB          	movff	plusw2,plusw0
  1752   002C9E  06E8               	decf	wreg,f,c
  1753   002CA0  E2FC               	bc	u5231
  1754   002CA2  EE21  F0A8         	lfsr	2,main@red
  1755   002CA6  EE00  F0A4         	lfsr	0,color_detect@red
  1756   002CAA  0E05               	movlw	5
  1757   002CAC                     u5241:
  1758   002CAC  CFDB FFEB          	movff	plusw2,plusw0
  1759   002CB0  06E8               	decf	wreg,f,c
  1760   002CB2  E2FC               	bc	u5241
  1761   002CB4  EE21  F0AE         	lfsr	2,main@green
  1762   002CB8  EE00  F0AA         	lfsr	0,color_detect@green
  1763   002CBC  0E05               	movlw	5
  1764   002CBE                     u5251:
  1765   002CBE  CFDB FFEB          	movff	plusw2,plusw0
  1766   002CC2  06E8               	decf	wreg,f,c
  1767   002CC4  E2FC               	bc	u5251
  1768   002CC6  EE21  F0B4         	lfsr	2,main@blue
  1769   002CCA  EE00  F0B0         	lfsr	0,color_detect@blue
  1770   002CCE  0E05               	movlw	5
  1771   002CD0                     u5261:
  1772   002CD0  CFDB FFEB          	movff	plusw2,plusw0
  1773   002CD4  06E8               	decf	wreg,f,c
  1774   002CD6  E2FC               	bc	u5261
  1775   002CD8  EE21  F0BA         	lfsr	2,main@yellow
  1776   002CDC  EE00  F0B6         	lfsr	0,color_detect@yellow
  1777   002CE0  0E05               	movlw	5
  1778   002CE2                     u5271:
  1779   002CE2  CFDB FFEB          	movff	plusw2,plusw0
  1780   002CE6  06E8               	decf	wreg,f,c
  1781   002CE8  E2FC               	bc	u5271
  1782   002CEA  EE21  F0C0         	lfsr	2,main@pink
  1783   002CEE  EE00  F0BC         	lfsr	0,color_detect@pink
  1784   002CF2  0E05               	movlw	5
  1785   002CF4                     u5281:
  1786   002CF4  CFDB FFEB          	movff	plusw2,plusw0
  1787   002CF8  06E8               	decf	wreg,f,c
  1788   002CFA  E2FC               	bc	u5281
  1789   002CFC  EE21  F0C6         	lfsr	2,main@orange
  1790   002D00  EE00  F0C2         	lfsr	0,color_detect@orange
  1791   002D04  0E05               	movlw	5
  1792   002D06                     u5291:
  1793   002D06  CFDB FFEB          	movff	plusw2,plusw0
  1794   002D0A  06E8               	decf	wreg,f,c
  1795   002D0C  E2FC               	bc	u5291
  1796   002D0E  EE21  F0CC         	lfsr	2,main@lightblue
  1797   002D12  EE00  F0C8         	lfsr	0,color_detect@lightblue
  1798   002D16  0E05               	movlw	5
  1799   002D18                     u5301:
  1800   002D18  CFDB FFEB          	movff	plusw2,plusw0
  1801   002D1C  06E8               	decf	wreg,f,c
  1802   002D1E  E2FC               	bc	u5301
  1803   002D20  EE21  F0D2         	lfsr	2,main@white
  1804   002D24  EE00  F0CE         	lfsr	0,color_detect@white
  1805   002D28  0E05               	movlw	5
  1806   002D2A                     u5311:
  1807   002D2A  CFDB FFEB          	movff	plusw2,plusw0
  1808   002D2E  06E8               	decf	wreg,f,c
  1809   002D30  E2FC               	bc	u5311
  1810   002D32  EC8E  F01B         	call	_color_detect	;wreg free
  1811   002D36  0102               	movlb	2	; () banked
  1812   002D38  6F90               	movwf	main@color& (0+255),b
  1813   002D3A                     
  1814                           ; BSR set to: 2
  1815                           ;main.c: 168:             moveSequence[curMove] = color;
  1816   002D3A  0E7A               	movlw	low main@moveSequence
  1817   002D3C  2591               	addwf	main@curMove& (0+255),w,b
  1818   002D3E  6ED9               	movwf	fsr2l,c
  1819   002D40  6ADA               	clrf	fsr2h,c
  1820   002D42  0E01               	movlw	high main@moveSequence
  1821   002D44  22DA               	addwfc	fsr2h,f,c
  1822   002D46  C290  FFDF         	movff	main@color,indf2
  1823   002D4A                     
  1824                           ; BSR set to: 2
  1825                           ;main.c: 171:             move(&motorL, &motorR, color, moveSequence, straightTime, curM
      +                          ove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  1826   002D4A  0EAC               	movlw	low main@motorL
  1827   002D4C  0100               	movlb	0	; () banked
  1828   002D4E  6F9F               	movwf	move@mL& (0+255),b
  1829   002D50  0E02               	movlw	high main@motorL
  1830   002D52  6FA0               	movwf	(move@mL+1)& (0+255),b
  1831   002D54  0EA2               	movlw	low main@motorR
  1832   002D56  6FA1               	movwf	move@mR& (0+255),b
  1833   002D58  0E02               	movlw	high main@motorR
  1834   002D5A  6FA2               	movwf	(move@mR+1)& (0+255),b
  1835   002D5C  C290  F0A3         	movff	main@color,move@color
  1836   002D60  0E7A               	movlw	low main@moveSequence
  1837   002D62  6FA4               	movwf	move@moveSequence& (0+255),b
  1838   002D64  0E01               	movlw	high main@moveSequence
  1839   002D66  6FA5               	movwf	(move@moveSequence+1)& (0+255),b
  1840   002D68  0E28               	movlw	low main@straightTime
  1841   002D6A  6FA6               	movwf	move@straightTime& (0+255),b
  1842   002D6C  0E01               	movlw	high main@straightTime
  1843   002D6E  6FA7               	movwf	(move@straightTime+1)& (0+255),b
  1844   002D70  C291  F0A8         	movff	main@curMove,move@curMove
  1845   002D74  C28F  F0A9         	movff	main@straightSpeed,move@straightSpeed
  1846   002D78  C1A5  F0AA         	movff	main@reverseDuration,move@reverseDuration
  1847   002D7C  C1A6  F0AB         	movff	main@reverseDuration+1,move@reverseDuration+1
  1848   002D80  C292  F0AC         	movff	main@straightRamp,move@straightRamp
  1849   002D84  C1A7  F0AD         	movff	main@turnSpeed,move@turnSpeed
  1850   002D88  C293  F0AE         	movff	main@turnDuration,move@turnDuration
  1851   002D8C  C28E  F0AF         	movff	main@turnRamp,move@turnRamp
  1852   002D90  EC01  F007         	call	_move	;wreg free
  1853   002D94                     
  1854                           ;main.c: 174:             color_read(&RGBC);
  1855   002D94  0E9A               	movlw	low main@RGBC
  1856   002D96  6E16               	movwf	color_read@RGBC^0,c
  1857   002D98  0E02               	movlw	high main@RGBC
  1858   002D9A  6E17               	movwf	(color_read@RGBC+1)^0,c
  1859   002D9C  ECA7  F01F         	call	_color_read	;wreg free
  1860   002DA0                     
  1861                           ;main.c: 175:             ambient=RGBC.C;
  1862   002DA0  C2A0  F0DE         	movff	main@RGBC+6,_ambient
  1863   002DA4  C2A1  F0DF         	movff	main@RGBC+7,_ambient+1
  1864   002DA8                     
  1865                           ;main.c: 176:             color_clear_init_interrupts();
  1866   002DA8  ECFC  F025         	call	_color_clear_init_interrupts	;wreg free
  1867   002DAC                     
  1868                           ;main.c: 177:             brightnessChange = 0;
  1869   002DAC  0E00               	movlw	0
  1870   002DAE  0100               	movlb	0	; () banked
  1871   002DB0  6F9D               	movwf	_brightnessChange& (0+255),b
  1872   002DB2                     
  1873                           ; BSR set to: 0
  1874                           ;main.c: 179:             curMove++;
  1875   002DB2  0102               	movlb	2	; () banked
  1876   002DB4  2B91               	incf	main@curMove& (0+255),f,b
  1877   002DB6                     
  1878                           ; BSR set to: 2
  1879                           ;main.c: 180:             resetTimer();
  1880   002DB6  EC10  F02A         	call	_resetTimer	;wreg free
  1881   002DBA                     
  1882                           ;main.c: 182:             PIE0bits.INT0IE=1;
  1883   002DBA  010E               	movlb	14	; () banked
  1884   002DBC  8129               	bsf	41,0,b	;volatile
  1885   002DBE                     
  1886                           ; BSR set to: 14
  1887                           ;main.c: 183:             wall = 0;
  1888   002DBE  0E00               	movlw	0
  1889   002DC0  0101               	movlb	1	; () banked
  1890   002DC2  6FA2               	movwf	main@wall& (0+255),b
  1891   002DC4                     l6046:
  1892                           
  1893                           ; BSR set to: 1
  1894                           ;main.c: 187:         if (lost == 1) {
  1895   002DC4  0100               	movlb	0	; () banked
  1896   002DC6  059C               	decf	_lost& (0+255),w,b
  1897   002DC8  A4D8               	btfss	status,2,c
  1898   002DCA  EFE9  F016         	goto	u5321
  1899   002DCE  EFEB  F016         	goto	u5320
  1900   002DD2                     u5321:
  1901   002DD2  EF22  F017         	goto	l6056
  1902   002DD6                     u5320:
  1903   002DD6                     
  1904                           ; BSR set to: 0
  1905                           ;main.c: 188:             PIE0bits.INT0IE=0;
  1906   002DD6  010E               	movlb	14	; () banked
  1907   002DD8  9129               	bcf	41,0,b	;volatile
  1908   002DDA                     
  1909                           ; BSR set to: 14
  1910                           ;main.c: 189:             stop(&motorL, &motorR, straightRamp);
  1911   002DDA  0EAC               	movlw	low main@motorL
  1912   002DDC  6E25               	movwf	stop@mL^0,c
  1913   002DDE  0E02               	movlw	high main@motorL
  1914   002DE0  6E26               	movwf	(stop@mL+1)^0,c
  1915   002DE2  0EA2               	movlw	low main@motorR
  1916   002DE4  6E27               	movwf	stop@mR^0,c
  1917   002DE6  0E02               	movlw	high main@motorR
  1918   002DE8  6E28               	movwf	(stop@mR+1)^0,c
  1919   002DEA  C292  F029         	movff	main@straightRamp,stop@straightRamp
  1920   002DEE  ECA3  F024         	call	_stop	;wreg free
  1921                           
  1922                           ;main.c: 190:             lostReturnHome(&motorL, &motorR, moveSequence, straightTime, c
      +                          urMove, straightSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp)
      +                          ;
  1923   002DF2  0EAC               	movlw	low main@motorL
  1924   002DF4  6E34               	movwf	lostReturnHome@mL^0,c
  1925   002DF6  0E02               	movlw	high main@motorL
  1926   002DF8  6E35               	movwf	(lostReturnHome@mL+1)^0,c
  1927   002DFA  0EA2               	movlw	low main@motorR
  1928   002DFC  6E36               	movwf	lostReturnHome@mR^0,c
  1929   002DFE  0E02               	movlw	high main@motorR
  1930   002E00  6E37               	movwf	(lostReturnHome@mR+1)^0,c
  1931   002E02  0E7A               	movlw	low main@moveSequence
  1932   002E04  6E38               	movwf	lostReturnHome@moveSequence^0,c
  1933   002E06  0E01               	movlw	high main@moveSequence
  1934   002E08  6E39               	movwf	(lostReturnHome@moveSequence+1)^0,c
  1935   002E0A  0E28               	movlw	low main@straightTime
  1936   002E0C  6E3A               	movwf	lostReturnHome@straightTime^0,c
  1937   002E0E  0E01               	movlw	high main@straightTime
  1938   002E10  6E3B               	movwf	(lostReturnHome@straightTime+1)^0,c
  1939   002E12  C291  F03C         	movff	main@curMove,lostReturnHome@curMove
  1940   002E16  C28F  F03D         	movff	main@straightSpeed,lostReturnHome@straightSpeed
  1941   002E1A  C1A5  F03E         	movff	main@reverseDuration,lostReturnHome@reverseDuration
  1942   002E1E  C1A6  F03F         	movff	main@reverseDuration+1,lostReturnHome@reverseDuration+1
  1943   002E22  C292  F040         	movff	main@straightRamp,lostReturnHome@straightRamp
  1944   002E26  C1A7  F041         	movff	main@turnSpeed,lostReturnHome@turnSpeed
  1945   002E2A  C293  F042         	movff	main@turnDuration,lostReturnHome@turnDuration
  1946   002E2E  C28E  F043         	movff	main@turnRamp,lostReturnHome@turnRamp
  1947   002E32  EC8C  F00E         	call	_lostReturnHome	;wreg free
  1948   002E36                     
  1949                           ;main.c: 191:             PIE0bits.INT0IE=1;
  1950   002E36  010E               	movlb	14	; () banked
  1951   002E38  8129               	bsf	41,0,b	;volatile
  1952   002E3A                     
  1953                           ; BSR set to: 14
  1954                           ;main.c: 192:             lost = 0;
  1955   002E3A  0E00               	movlw	0
  1956   002E3C  0100               	movlb	0	; () banked
  1957   002E3E  6F9C               	movwf	_lost& (0+255),b
  1958                           
  1959                           ;main.c: 193:             break;
  1960   002E40  EF35  F017         	goto	l107
  1961   002E44                     l6056:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;main.c: 196:         if (color == 8 || color == 9) {break;}
  1965   002E44  0E08               	movlw	8
  1966   002E46  0102               	movlb	2	; () banked
  1967   002E48  1990               	xorwf	main@color& (0+255),w,b
  1968   002E4A  B4D8               	btfsc	status,2,c
  1969   002E4C  EF2A  F017         	goto	u5331
  1970   002E50  EF2C  F017         	goto	u5330
  1971   002E54                     u5331:
  1972   002E54  EF35  F017         	goto	l107
  1973   002E58                     u5330:
  1974   002E58                     
  1975                           ; BSR set to: 2
  1976   002E58  0E09               	movlw	9
  1977   002E5A  1990               	xorwf	main@color& (0+255),w,b
  1978   002E5C  A4D8               	btfss	status,2,c
  1979   002E5E  EF33  F017         	goto	u5341
  1980   002E62  EF35  F017         	goto	u5340
  1981   002E66                     u5341:
  1982   002E66  EFBD  F015         	goto	l5996
  1983   002E6A                     u5340:
  1984   002E6A                     l107:
  1985   002E6A  EF28  F000         	goto	start
  1986   002E6E                     __end_of_main:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _wallAdjust *****************
  1990 ;; Defined at:
  1991 ;;		line 501 in file "dc_motor.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  1994 ;;		 -> main@motorL(10), 
  1995 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  1996 ;;		 -> main@motorR(10), 
  1997 ;;  straightSpee    1   40[COMRAM] unsigned char 
  1998 ;;  straightRamp    1   41[COMRAM] unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  cur_power       2   50[COMRAM] int 
  2001 ;;  i               2   48[COMRAM] int 
  2002 ;;  wallSpeed       1   47[COMRAM] unsigned char 
  2003 ;;  wallReverseD    1   46[COMRAM] unsigned char 
  2004 ;;  adjustDurati    1   45[COMRAM] unsigned char 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2014 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2016 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2018 ;;Total ram usage:       16 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 8
  2021 ;; This function calls:
  2022 ;;		_setMotorPWM
  2023 ;; This function is called by:
  2024 ;;		_main
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text1
  2029   00334A                     __ptext1:
  2030                           	callstack 0
  2031   00334A                     _wallAdjust:
  2032                           	callstack 22
  2033   00334A                     
  2034                           ;dc_motor.c: 501: void wallAdjust(DC_motor *mL, DC_motor *mR, char straightSpeed, unsign
      +                          ed char straightRamp);dc_motor.c: 502: {;dc_motor.c: 503:     unsigned char adjustDurati
      +                          on = 120;
  2035   00334A  0E78               	movlw	120
  2036   00334C  6E2E               	movwf	wallAdjust@adjustDuration^0,c
  2037                           
  2038                           ;dc_motor.c: 504:     unsigned char wallReverseDuration = 20;
  2039   00334E  0E14               	movlw	20
  2040   003350  6E2F               	movwf	wallAdjust@wallReverseDuration^0,c
  2041                           
  2042                           ;dc_motor.c: 505:     unsigned char wallSpeed = 40;
  2043   003352  0E28               	movlw	40
  2044   003354  6E30               	movwf	wallAdjust@wallSpeed^0,c
  2045   003356                     
  2046                           ;dc_motor.c: 507:     mL->direction = 1;
  2047   003356  EE20 F001          	lfsr	2,1
  2048   00335A  5025               	movf	wallAdjust@mL^0,w,c
  2049   00335C  26D9               	addwf	fsr2l,f,c
  2050   00335E  5026               	movf	(wallAdjust@mL+1)^0,w,c
  2051   003360  22DA               	addwfc	fsr2h,f,c
  2052   003362  0E01               	movlw	1
  2053   003364  6EDF               	movwf	indf2,c
  2054   003366                     
  2055                           ;dc_motor.c: 508:     mR->direction = 1;
  2056   003366  EE20 F001          	lfsr	2,1
  2057   00336A  5027               	movf	wallAdjust@mR^0,w,c
  2058   00336C  26D9               	addwf	fsr2l,f,c
  2059   00336E  5028               	movf	(wallAdjust@mR+1)^0,w,c
  2060   003370  22DA               	addwfc	fsr2h,f,c
  2061   003372  0E01               	movlw	1
  2062   003374  6EDF               	movwf	indf2,c
  2063                           
  2064                           ;dc_motor.c: 509:     int i;;dc_motor.c: 510:     int cur_power;;dc_motor.c: 511:     fo
      +                          r (cur_power=1;cur_power<=wallSpeed;cur_power++) {
  2065   003376  0E00               	movlw	0
  2066   003378  6E34               	movwf	(wallAdjust@cur_power+1)^0,c
  2067   00337A  0E01               	movlw	1
  2068   00337C  6E33               	movwf	wallAdjust@cur_power^0,c
  2069   00337E  EF0B  F01A         	goto	l5522
  2070   003382                     l5508:
  2071                           
  2072                           ;dc_motor.c: 512:         mL->power = cur_power+mL->compensation;
  2073   003382  EE20 F009          	lfsr	2,9
  2074   003386  5025               	movf	wallAdjust@mL^0,w,c
  2075   003388  26D9               	addwf	fsr2l,f,c
  2076   00338A  5026               	movf	(wallAdjust@mL+1)^0,w,c
  2077   00338C  22DA               	addwfc	fsr2h,f,c
  2078   00338E  50DF               	movf	indf2,w,c
  2079   003390  2433               	addwf	wallAdjust@cur_power^0,w,c
  2080   003392  C025  FFD9         	movff	wallAdjust@mL,fsr2l
  2081   003396  C026  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2082   00339A  6EDF               	movwf	indf2,c
  2083                           
  2084                           ;dc_motor.c: 513:         mR->power = cur_power+mR->compensation;
  2085   00339C  EE20 F009          	lfsr	2,9
  2086   0033A0  5027               	movf	wallAdjust@mR^0,w,c
  2087   0033A2  26D9               	addwf	fsr2l,f,c
  2088   0033A4  5028               	movf	(wallAdjust@mR+1)^0,w,c
  2089   0033A6  22DA               	addwfc	fsr2h,f,c
  2090   0033A8  50DF               	movf	indf2,w,c
  2091   0033AA  2433               	addwf	wallAdjust@cur_power^0,w,c
  2092   0033AC  C027  FFD9         	movff	wallAdjust@mR,fsr2l
  2093   0033B0  C028  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2094   0033B4  6EDF               	movwf	indf2,c
  2095   0033B6                     
  2096                           ;dc_motor.c: 514:         setMotorPWM(mL);
  2097   0033B6  C025  F01F         	movff	wallAdjust@mL,setMotorPWM@m
  2098   0033BA  C026  F020         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2099   0033BE  EC67  F023         	call	_setMotorPWM	;wreg free
  2100   0033C2                     
  2101                           ;dc_motor.c: 515:         setMotorPWM(mR);
  2102   0033C2  C027  F01F         	movff	wallAdjust@mR,setMotorPWM@m
  2103   0033C6  C028  F020         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2104   0033CA  EC67  F023         	call	_setMotorPWM	;wreg free
  2105   0033CE                     
  2106                           ;dc_motor.c: 516:         for (i=0;i<straightRamp;i++) {
  2107   0033CE  0E00               	movlw	0
  2108   0033D0  6E32               	movwf	(wallAdjust@i+1)^0,c
  2109   0033D2  0E00               	movlw	0
  2110   0033D4  6E31               	movwf	wallAdjust@i^0,c
  2111   0033D6  EFF7  F019         	goto	l709
  2112   0033DA                     l5516:
  2113                           
  2114                           ;dc_motor.c: 517:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2115   0033DA  0E68               	movlw	104
  2116   0033DC  6E2B               	movwf	??_wallAdjust^0,c
  2117   0033DE  0EE4               	movlw	228
  2118   0033E0                     u5397:
  2119   0033E0  2EE8               	decfsz	wreg,f,c
  2120   0033E2  D7FE               	bra	u5397
  2121   0033E4  2E2B               	decfsz	??_wallAdjust^0,f,c
  2122   0033E6  D7FC               	bra	u5397
  2123   0033E8  D000               	nop2	
  2124   0033EA                     
  2125                           ;dc_motor.c: 518:         }
  2126   0033EA  4A31               	infsnz	wallAdjust@i^0,f,c
  2127   0033EC  2A32               	incf	(wallAdjust@i+1)^0,f,c
  2128   0033EE                     l709:
  2129   0033EE  502A               	movf	wallAdjust@straightRamp^0,w,c
  2130   0033F0  6E2B               	movwf	??_wallAdjust^0,c
  2131   0033F2  6A2C               	clrf	(??_wallAdjust+1)^0,c
  2132   0033F4  502B               	movf	??_wallAdjust^0,w,c
  2133   0033F6  5C31               	subwf	wallAdjust@i^0,w,c
  2134   0033F8  5032               	movf	(wallAdjust@i+1)^0,w,c
  2135   0033FA  0A80               	xorlw	128
  2136   0033FC  6E2D               	movwf	(??_wallAdjust+2)^0,c
  2137   0033FE  502C               	movf	(??_wallAdjust+1)^0,w,c
  2138   003400  0A80               	xorlw	128
  2139   003402  582D               	subwfb	(??_wallAdjust+2)^0,w,c
  2140   003404  A0D8               	btfss	status,0,c
  2141   003406  EF07  F01A         	goto	u4641
  2142   00340A  EF09  F01A         	goto	u4640
  2143   00340E                     u4641:
  2144   00340E  EFED  F019         	goto	l5516
  2145   003412                     u4640:
  2146   003412                     
  2147                           ;dc_motor.c: 519:     }
  2148   003412  4A33               	infsnz	wallAdjust@cur_power^0,f,c
  2149   003414  2A34               	incf	(wallAdjust@cur_power+1)^0,f,c
  2150   003416                     l5522:
  2151   003416  5030               	movf	wallAdjust@wallSpeed^0,w,c
  2152   003418  6E2B               	movwf	??_wallAdjust^0,c
  2153   00341A  6A2C               	clrf	(??_wallAdjust+1)^0,c
  2154   00341C  5033               	movf	wallAdjust@cur_power^0,w,c
  2155   00341E  5C2B               	subwf	??_wallAdjust^0,w,c
  2156   003420  502C               	movf	(??_wallAdjust+1)^0,w,c
  2157   003422  0A80               	xorlw	128
  2158   003424  6E2D               	movwf	(??_wallAdjust+2)^0,c
  2159   003426  5034               	movf	(wallAdjust@cur_power+1)^0,w,c
  2160   003428  0A80               	xorlw	128
  2161   00342A  582D               	subwfb	(??_wallAdjust+2)^0,w,c
  2162   00342C  B0D8               	btfsc	status,0,c
  2163   00342E  EF1B  F01A         	goto	u4651
  2164   003432  EF1D  F01A         	goto	u4650
  2165   003436                     u4651:
  2166   003436  EFC1  F019         	goto	l5508
  2167   00343A                     u4650:
  2168   00343A                     
  2169                           ;dc_motor.c: 521:     for (i=0;i<adjustDuration;i++) {
  2170   00343A  0E00               	movlw	0
  2171   00343C  6E32               	movwf	(wallAdjust@i+1)^0,c
  2172   00343E  0E00               	movlw	0
  2173   003440  6E31               	movwf	wallAdjust@i^0,c
  2174   003442  EF2D  F01A         	goto	l713
  2175   003446                     l5526:
  2176                           
  2177                           ;dc_motor.c: 522:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2178   003446  0E68               	movlw	104
  2179   003448  6E2B               	movwf	??_wallAdjust^0,c
  2180   00344A  0EE4               	movlw	228
  2181   00344C                     u5407:
  2182   00344C  2EE8               	decfsz	wreg,f,c
  2183   00344E  D7FE               	bra	u5407
  2184   003450  2E2B               	decfsz	??_wallAdjust^0,f,c
  2185   003452  D7FC               	bra	u5407
  2186   003454  D000               	nop2	
  2187   003456                     
  2188                           ;dc_motor.c: 523:         }
  2189   003456  4A31               	infsnz	wallAdjust@i^0,f,c
  2190   003458  2A32               	incf	(wallAdjust@i+1)^0,f,c
  2191   00345A                     l713:
  2192   00345A  502E               	movf	wallAdjust@adjustDuration^0,w,c
  2193   00345C  6E2B               	movwf	??_wallAdjust^0,c
  2194   00345E  6A2C               	clrf	(??_wallAdjust+1)^0,c
  2195   003460  502B               	movf	??_wallAdjust^0,w,c
  2196   003462  5C31               	subwf	wallAdjust@i^0,w,c
  2197   003464  5032               	movf	(wallAdjust@i+1)^0,w,c
  2198   003466  0A80               	xorlw	128
  2199   003468  6E2D               	movwf	(??_wallAdjust+2)^0,c
  2200   00346A  502C               	movf	(??_wallAdjust+1)^0,w,c
  2201   00346C  0A80               	xorlw	128
  2202   00346E  582D               	subwfb	(??_wallAdjust+2)^0,w,c
  2203   003470  A0D8               	btfss	status,0,c
  2204   003472  EF3D  F01A         	goto	u4661
  2205   003476  EF3F  F01A         	goto	u4660
  2206   00347A                     u4661:
  2207   00347A  EF23  F01A         	goto	l5526
  2208   00347E                     u4660:
  2209   00347E                     
  2210                           ;dc_motor.c: 525:     for (cur_power=wallSpeed;cur_power>=0;cur_power--) {
  2211   00347E  C030  F033         	movff	wallAdjust@wallSpeed,wallAdjust@cur_power
  2212   003482  6A34               	clrf	(wallAdjust@cur_power+1)^0,c
  2213   003484                     l5530:
  2214   003484  BE34               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2215   003486  EF49  F01A         	goto	u4670
  2216   00348A  EF47  F01A         	goto	u4671
  2217   00348E                     u4671:
  2218   00348E  EF4B  F01A         	goto	l5534
  2219   003492                     u4670:
  2220   003492  EF98  F01A         	goto	l5550
  2221   003496                     l5534:
  2222                           
  2223                           ;dc_motor.c: 526:         mL->power = cur_power+mL->compensation;
  2224   003496  EE20 F009          	lfsr	2,9
  2225   00349A  5025               	movf	wallAdjust@mL^0,w,c
  2226   00349C  26D9               	addwf	fsr2l,f,c
  2227   00349E  5026               	movf	(wallAdjust@mL+1)^0,w,c
  2228   0034A0  22DA               	addwfc	fsr2h,f,c
  2229   0034A2  50DF               	movf	indf2,w,c
  2230   0034A4  2433               	addwf	wallAdjust@cur_power^0,w,c
  2231   0034A6  C025  FFD9         	movff	wallAdjust@mL,fsr2l
  2232   0034AA  C026  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2233   0034AE  6EDF               	movwf	indf2,c
  2234                           
  2235                           ;dc_motor.c: 527:         mR->power = cur_power+mR->compensation;
  2236   0034B0  EE20 F009          	lfsr	2,9
  2237   0034B4  5027               	movf	wallAdjust@mR^0,w,c
  2238   0034B6  26D9               	addwf	fsr2l,f,c
  2239   0034B8  5028               	movf	(wallAdjust@mR+1)^0,w,c
  2240   0034BA  22DA               	addwfc	fsr2h,f,c
  2241   0034BC  50DF               	movf	indf2,w,c
  2242   0034BE  2433               	addwf	wallAdjust@cur_power^0,w,c
  2243   0034C0  C027  FFD9         	movff	wallAdjust@mR,fsr2l
  2244   0034C4  C028  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2245   0034C8  6EDF               	movwf	indf2,c
  2246   0034CA                     
  2247                           ;dc_motor.c: 528:         setMotorPWM(mL);
  2248   0034CA  C025  F01F         	movff	wallAdjust@mL,setMotorPWM@m
  2249   0034CE  C026  F020         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2250   0034D2  EC67  F023         	call	_setMotorPWM	;wreg free
  2251   0034D6                     
  2252                           ;dc_motor.c: 529:         setMotorPWM(mR);
  2253   0034D6  C027  F01F         	movff	wallAdjust@mR,setMotorPWM@m
  2254   0034DA  C028  F020         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2255   0034DE  EC67  F023         	call	_setMotorPWM	;wreg free
  2256   0034E2                     
  2257                           ;dc_motor.c: 530:         for (i=0;i<straightRamp;i++) {
  2258   0034E2  0E00               	movlw	0
  2259   0034E4  6E32               	movwf	(wallAdjust@i+1)^0,c
  2260   0034E6  0E00               	movlw	0
  2261   0034E8  6E31               	movwf	wallAdjust@i^0,c
  2262   0034EA  EF81  F01A         	goto	l718
  2263   0034EE                     l5542:
  2264                           
  2265                           ;dc_motor.c: 531:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2266   0034EE  0E68               	movlw	104
  2267   0034F0  6E2B               	movwf	??_wallAdjust^0,c
  2268   0034F2  0EE4               	movlw	228
  2269   0034F4                     u5417:
  2270   0034F4  2EE8               	decfsz	wreg,f,c
  2271   0034F6  D7FE               	bra	u5417
  2272   0034F8  2E2B               	decfsz	??_wallAdjust^0,f,c
  2273   0034FA  D7FC               	bra	u5417
  2274   0034FC  D000               	nop2	
  2275   0034FE                     
  2276                           ;dc_motor.c: 532:         }
  2277   0034FE  4A31               	infsnz	wallAdjust@i^0,f,c
  2278   003500  2A32               	incf	(wallAdjust@i+1)^0,f,c
  2279   003502                     l718:
  2280   003502  502A               	movf	wallAdjust@straightRamp^0,w,c
  2281   003504  6E2B               	movwf	??_wallAdjust^0,c
  2282   003506  6A2C               	clrf	(??_wallAdjust+1)^0,c
  2283   003508  502B               	movf	??_wallAdjust^0,w,c
  2284   00350A  5C31               	subwf	wallAdjust@i^0,w,c
  2285   00350C  5032               	movf	(wallAdjust@i+1)^0,w,c
  2286   00350E  0A80               	xorlw	128
  2287   003510  6E2D               	movwf	(??_wallAdjust+2)^0,c
  2288   003512  502C               	movf	(??_wallAdjust+1)^0,w,c
  2289   003514  0A80               	xorlw	128
  2290   003516  582D               	subwfb	(??_wallAdjust+2)^0,w,c
  2291   003518  A0D8               	btfss	status,0,c
  2292   00351A  EF91  F01A         	goto	u4681
  2293   00351E  EF93  F01A         	goto	u4680
  2294   003522                     u4681:
  2295   003522  EF77  F01A         	goto	l5542
  2296   003526                     u4680:
  2297   003526                     
  2298                           ;dc_motor.c: 533:     }
  2299   003526  0633               	decf	wallAdjust@cur_power^0,f,c
  2300   003528  A0D8               	btfss	status,0,c
  2301   00352A  0634               	decf	(wallAdjust@cur_power+1)^0,f,c
  2302   00352C  EF42  F01A         	goto	l5530
  2303   003530                     l5550:
  2304                           
  2305                           ;dc_motor.c: 535:     mL->direction = 0;
  2306   003530  EE20 F001          	lfsr	2,1
  2307   003534  5025               	movf	wallAdjust@mL^0,w,c
  2308   003536  26D9               	addwf	fsr2l,f,c
  2309   003538  5026               	movf	(wallAdjust@mL+1)^0,w,c
  2310   00353A  22DA               	addwfc	fsr2h,f,c
  2311   00353C  6ADF               	clrf	indf2,c
  2312                           
  2313                           ;dc_motor.c: 536:     mR->direction = 0;
  2314   00353E  EE20 F001          	lfsr	2,1
  2315   003542  5027               	movf	wallAdjust@mR^0,w,c
  2316   003544  26D9               	addwf	fsr2l,f,c
  2317   003546  5028               	movf	(wallAdjust@mR+1)^0,w,c
  2318   003548  22DA               	addwfc	fsr2h,f,c
  2319   00354A  6ADF               	clrf	indf2,c
  2320   00354C                     
  2321                           ;dc_motor.c: 537:     for (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  2322   00354C  0E00               	movlw	0
  2323   00354E  6E34               	movwf	(wallAdjust@cur_power+1)^0,c
  2324   003550  0E01               	movlw	1
  2325   003552  6E33               	movwf	wallAdjust@cur_power^0,c
  2326   003554  EFF6  F01A         	goto	l5568
  2327   003558                     l5554:
  2328                           
  2329                           ;dc_motor.c: 538:         mL->power = cur_power+mL->compensation;
  2330   003558  EE20 F009          	lfsr	2,9
  2331   00355C  5025               	movf	wallAdjust@mL^0,w,c
  2332   00355E  26D9               	addwf	fsr2l,f,c
  2333   003560  5026               	movf	(wallAdjust@mL+1)^0,w,c
  2334   003562  22DA               	addwfc	fsr2h,f,c
  2335   003564  50DF               	movf	indf2,w,c
  2336   003566  2433               	addwf	wallAdjust@cur_power^0,w,c
  2337   003568  C025  FFD9         	movff	wallAdjust@mL,fsr2l
  2338   00356C  C026  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2339   003570  6EDF               	movwf	indf2,c
  2340                           
  2341                           ;dc_motor.c: 539:         mR->power = cur_power+mR->compensation;
  2342   003572  EE20 F009          	lfsr	2,9
  2343   003576  5027               	movf	wallAdjust@mR^0,w,c
  2344   003578  26D9               	addwf	fsr2l,f,c
  2345   00357A  5028               	movf	(wallAdjust@mR+1)^0,w,c
  2346   00357C  22DA               	addwfc	fsr2h,f,c
  2347   00357E  50DF               	movf	indf2,w,c
  2348   003580  2433               	addwf	wallAdjust@cur_power^0,w,c
  2349   003582  C027  FFD9         	movff	wallAdjust@mR,fsr2l
  2350   003586  C028  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2351   00358A  6EDF               	movwf	indf2,c
  2352   00358C                     
  2353                           ;dc_motor.c: 540:         setMotorPWM(mL);
  2354   00358C  C025  F01F         	movff	wallAdjust@mL,setMotorPWM@m
  2355   003590  C026  F020         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2356   003594  EC67  F023         	call	_setMotorPWM	;wreg free
  2357   003598                     
  2358                           ;dc_motor.c: 541:         setMotorPWM(mR);
  2359   003598  C027  F01F         	movff	wallAdjust@mR,setMotorPWM@m
  2360   00359C  C028  F020         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2361   0035A0  EC67  F023         	call	_setMotorPWM	;wreg free
  2362   0035A4                     
  2363                           ;dc_motor.c: 542:         for (i=0;i<straightRamp;i++) {
  2364   0035A4  0E00               	movlw	0
  2365   0035A6  6E32               	movwf	(wallAdjust@i+1)^0,c
  2366   0035A8  0E00               	movlw	0
  2367   0035AA  6E31               	movwf	wallAdjust@i^0,c
  2368   0035AC  EFE2  F01A         	goto	l723
  2369   0035B0                     l5562:
  2370                           
  2371                           ;dc_motor.c: 543:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2372   0035B0  0E68               	movlw	104
  2373   0035B2  6E2B               	movwf	??_wallAdjust^0,c
  2374   0035B4  0EE4               	movlw	228
  2375   0035B6                     u5427:
  2376   0035B6  2EE8               	decfsz	wreg,f,c
  2377   0035B8  D7FE               	bra	u5427
  2378   0035BA  2E2B               	decfsz	??_wallAdjust^0,f,c
  2379   0035BC  D7FC               	bra	u5427
  2380   0035BE  D000               	nop2	
  2381   0035C0                     
  2382                           ;dc_motor.c: 544:         }
  2383   0035C0  4A31               	infsnz	wallAdjust@i^0,f,c
  2384   0035C2  2A32               	incf	(wallAdjust@i+1)^0,f,c
  2385   0035C4                     l723:
  2386   0035C4  502A               	movf	wallAdjust@straightRamp^0,w,c
  2387   0035C6  6E2B               	movwf	??_wallAdjust^0,c
  2388   0035C8  6A2C               	clrf	(??_wallAdjust+1)^0,c
  2389   0035CA  502B               	movf	??_wallAdjust^0,w,c
  2390   0035CC  5C31               	subwf	wallAdjust@i^0,w,c
  2391   0035CE  5032               	movf	(wallAdjust@i+1)^0,w,c
  2392   0035D0  0A80               	xorlw	128
  2393   0035D2  6E2D               	movwf	(??_wallAdjust+2)^0,c
  2394   0035D4  502C               	movf	(??_wallAdjust+1)^0,w,c
  2395   0035D6  0A80               	xorlw	128
  2396   0035D8  582D               	subwfb	(??_wallAdjust+2)^0,w,c
  2397   0035DA  A0D8               	btfss	status,0,c
  2398   0035DC  EFF2  F01A         	goto	u4691
  2399   0035E0  EFF4  F01A         	goto	u4690
  2400   0035E4                     u4691:
  2401   0035E4  EFD8  F01A         	goto	l5562
  2402   0035E8                     u4690:
  2403   0035E8                     
  2404                           ;dc_motor.c: 545:     }
  2405   0035E8  4A33               	infsnz	wallAdjust@cur_power^0,f,c
  2406   0035EA  2A34               	incf	(wallAdjust@cur_power+1)^0,f,c
  2407   0035EC                     l5568:
  2408   0035EC  5029               	movf	wallAdjust@straightSpeed^0,w,c
  2409   0035EE  6E2B               	movwf	??_wallAdjust^0,c
  2410   0035F0  6A2C               	clrf	(??_wallAdjust+1)^0,c
  2411   0035F2  5033               	movf	wallAdjust@cur_power^0,w,c
  2412   0035F4  5C2B               	subwf	??_wallAdjust^0,w,c
  2413   0035F6  502C               	movf	(??_wallAdjust+1)^0,w,c
  2414   0035F8  0A80               	xorlw	128
  2415   0035FA  6E2D               	movwf	(??_wallAdjust+2)^0,c
  2416   0035FC  5034               	movf	(wallAdjust@cur_power+1)^0,w,c
  2417   0035FE  0A80               	xorlw	128
  2418   003600  582D               	subwfb	(??_wallAdjust+2)^0,w,c
  2419   003602  B0D8               	btfsc	status,0,c
  2420   003604  EF06  F01B         	goto	u4701
  2421   003608  EF08  F01B         	goto	u4700
  2422   00360C                     u4701:
  2423   00360C  EFAC  F01A         	goto	l5554
  2424   003610                     u4700:
  2425   003610                     
  2426                           ;dc_motor.c: 547:     for (i=0;i<wallReverseDuration;i++) {
  2427   003610  0E00               	movlw	0
  2428   003612  6E32               	movwf	(wallAdjust@i+1)^0,c
  2429   003614  0E00               	movlw	0
  2430   003616  6E31               	movwf	wallAdjust@i^0,c
  2431   003618  EF18  F01B         	goto	l727
  2432   00361C                     l5572:
  2433                           
  2434                           ;dc_motor.c: 548:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2435   00361C  0E68               	movlw	104
  2436   00361E  6E2B               	movwf	??_wallAdjust^0,c
  2437   003620  0EE4               	movlw	228
  2438   003622                     u5437:
  2439   003622  2EE8               	decfsz	wreg,f,c
  2440   003624  D7FE               	bra	u5437
  2441   003626  2E2B               	decfsz	??_wallAdjust^0,f,c
  2442   003628  D7FC               	bra	u5437
  2443   00362A  D000               	nop2	
  2444   00362C                     
  2445                           ;dc_motor.c: 549:         }
  2446   00362C  4A31               	infsnz	wallAdjust@i^0,f,c
  2447   00362E  2A32               	incf	(wallAdjust@i+1)^0,f,c
  2448   003630                     l727:
  2449   003630  502F               	movf	wallAdjust@wallReverseDuration^0,w,c
  2450   003632  6E2B               	movwf	??_wallAdjust^0,c
  2451   003634  6A2C               	clrf	(??_wallAdjust+1)^0,c
  2452   003636  502B               	movf	??_wallAdjust^0,w,c
  2453   003638  5C31               	subwf	wallAdjust@i^0,w,c
  2454   00363A  5032               	movf	(wallAdjust@i+1)^0,w,c
  2455   00363C  0A80               	xorlw	128
  2456   00363E  6E2D               	movwf	(??_wallAdjust+2)^0,c
  2457   003640  502C               	movf	(??_wallAdjust+1)^0,w,c
  2458   003642  0A80               	xorlw	128
  2459   003644  582D               	subwfb	(??_wallAdjust+2)^0,w,c
  2460   003646  A0D8               	btfss	status,0,c
  2461   003648  EF28  F01B         	goto	u4711
  2462   00364C  EF2A  F01B         	goto	u4710
  2463   003650                     u4711:
  2464   003650  EF0E  F01B         	goto	l5572
  2465   003654                     u4710:
  2466   003654                     
  2467                           ;dc_motor.c: 551:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  2468   003654  C029  F033         	movff	wallAdjust@straightSpeed,wallAdjust@cur_power
  2469   003658  6A34               	clrf	(wallAdjust@cur_power+1)^0,c
  2470   00365A                     l5576:
  2471   00365A  BE34               	btfsc	(wallAdjust@cur_power+1)^0,7,c
  2472   00365C  EF34  F01B         	goto	u4720
  2473   003660  EF32  F01B         	goto	u4721
  2474   003664                     u4721:
  2475   003664  EF36  F01B         	goto	l5580
  2476   003668                     u4720:
  2477   003668  EF83  F01B         	goto	l5596
  2478   00366C                     l5580:
  2479                           
  2480                           ;dc_motor.c: 552:         mL->power = cur_power+mL->compensation;
  2481   00366C  EE20 F009          	lfsr	2,9
  2482   003670  5025               	movf	wallAdjust@mL^0,w,c
  2483   003672  26D9               	addwf	fsr2l,f,c
  2484   003674  5026               	movf	(wallAdjust@mL+1)^0,w,c
  2485   003676  22DA               	addwfc	fsr2h,f,c
  2486   003678  50DF               	movf	indf2,w,c
  2487   00367A  2433               	addwf	wallAdjust@cur_power^0,w,c
  2488   00367C  C025  FFD9         	movff	wallAdjust@mL,fsr2l
  2489   003680  C026  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2490   003684  6EDF               	movwf	indf2,c
  2491                           
  2492                           ;dc_motor.c: 553:         mR->power = cur_power+mR->compensation;
  2493   003686  EE20 F009          	lfsr	2,9
  2494   00368A  5027               	movf	wallAdjust@mR^0,w,c
  2495   00368C  26D9               	addwf	fsr2l,f,c
  2496   00368E  5028               	movf	(wallAdjust@mR+1)^0,w,c
  2497   003690  22DA               	addwfc	fsr2h,f,c
  2498   003692  50DF               	movf	indf2,w,c
  2499   003694  2433               	addwf	wallAdjust@cur_power^0,w,c
  2500   003696  C027  FFD9         	movff	wallAdjust@mR,fsr2l
  2501   00369A  C028  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2502   00369E  6EDF               	movwf	indf2,c
  2503   0036A0                     
  2504                           ;dc_motor.c: 554:         setMotorPWM(mL);
  2505   0036A0  C025  F01F         	movff	wallAdjust@mL,setMotorPWM@m
  2506   0036A4  C026  F020         	movff	wallAdjust@mL+1,setMotorPWM@m+1
  2507   0036A8  EC67  F023         	call	_setMotorPWM	;wreg free
  2508   0036AC                     
  2509                           ;dc_motor.c: 555:         setMotorPWM(mR);
  2510   0036AC  C027  F01F         	movff	wallAdjust@mR,setMotorPWM@m
  2511   0036B0  C028  F020         	movff	wallAdjust@mR+1,setMotorPWM@m+1
  2512   0036B4  EC67  F023         	call	_setMotorPWM	;wreg free
  2513   0036B8                     
  2514                           ;dc_motor.c: 556:         for (i=0;i<straightRamp;i++) {
  2515   0036B8  0E00               	movlw	0
  2516   0036BA  6E32               	movwf	(wallAdjust@i+1)^0,c
  2517   0036BC  0E00               	movlw	0
  2518   0036BE  6E31               	movwf	wallAdjust@i^0,c
  2519   0036C0  EF6C  F01B         	goto	l732
  2520   0036C4                     l5588:
  2521                           
  2522                           ;dc_motor.c: 557:             _delay((unsigned long)((5)*(64000000/4000.0)));
  2523   0036C4  0E68               	movlw	104
  2524   0036C6  6E2B               	movwf	??_wallAdjust^0,c
  2525   0036C8  0EE4               	movlw	228
  2526   0036CA                     u5447:
  2527   0036CA  2EE8               	decfsz	wreg,f,c
  2528   0036CC  D7FE               	bra	u5447
  2529   0036CE  2E2B               	decfsz	??_wallAdjust^0,f,c
  2530   0036D0  D7FC               	bra	u5447
  2531   0036D2  D000               	nop2	
  2532   0036D4                     
  2533                           ;dc_motor.c: 558:         }
  2534   0036D4  4A31               	infsnz	wallAdjust@i^0,f,c
  2535   0036D6  2A32               	incf	(wallAdjust@i+1)^0,f,c
  2536   0036D8                     l732:
  2537   0036D8  502A               	movf	wallAdjust@straightRamp^0,w,c
  2538   0036DA  6E2B               	movwf	??_wallAdjust^0,c
  2539   0036DC  6A2C               	clrf	(??_wallAdjust+1)^0,c
  2540   0036DE  502B               	movf	??_wallAdjust^0,w,c
  2541   0036E0  5C31               	subwf	wallAdjust@i^0,w,c
  2542   0036E2  5032               	movf	(wallAdjust@i+1)^0,w,c
  2543   0036E4  0A80               	xorlw	128
  2544   0036E6  6E2D               	movwf	(??_wallAdjust+2)^0,c
  2545   0036E8  502C               	movf	(??_wallAdjust+1)^0,w,c
  2546   0036EA  0A80               	xorlw	128
  2547   0036EC  582D               	subwfb	(??_wallAdjust+2)^0,w,c
  2548   0036EE  A0D8               	btfss	status,0,c
  2549   0036F0  EF7C  F01B         	goto	u4731
  2550   0036F4  EF7E  F01B         	goto	u4730
  2551   0036F8                     u4731:
  2552   0036F8  EF62  F01B         	goto	l5588
  2553   0036FC                     u4730:
  2554   0036FC                     
  2555                           ;dc_motor.c: 559:     }
  2556   0036FC  0633               	decf	wallAdjust@cur_power^0,f,c
  2557   0036FE  A0D8               	btfss	status,0,c
  2558   003700  0634               	decf	(wallAdjust@cur_power+1)^0,f,c
  2559   003702  EF2D  F01B         	goto	l5576
  2560   003706                     l5596:
  2561                           
  2562                           ;dc_motor.c: 560:     mL->power = 0;
  2563   003706  C025  FFD9         	movff	wallAdjust@mL,fsr2l
  2564   00370A  C026  FFDA         	movff	wallAdjust@mL+1,fsr2h
  2565   00370E  6ADF               	clrf	indf2,c
  2566                           
  2567                           ;dc_motor.c: 561:     mR->power = 0;
  2568   003710  C027  FFD9         	movff	wallAdjust@mR,fsr2l
  2569   003714  C028  FFDA         	movff	wallAdjust@mR+1,fsr2h
  2570   003718  6ADF               	clrf	indf2,c
  2571   00371A  0012               	return		;funcret
  2572   00371C                     __end_of_wallAdjust:
  2573                           	callstack 0
  2574                           
  2575 ;; *************** function _move *****************
  2576 ;; Defined at:
  2577 ;;		line 91 in file "dc_motor.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  mL              2    1[BANK0 ] PTR struct DC_motor
  2580 ;;		 -> main@motorL(10), 
  2581 ;;  mR              2    3[BANK0 ] PTR struct DC_motor
  2582 ;;		 -> main@motorR(10), 
  2583 ;;  color           1    5[BANK0 ] unsigned char 
  2584 ;;  moveSequence    2    6[BANK0 ] PTR unsigned char 
  2585 ;;		 -> main@moveSequence(40), 
  2586 ;;  straightTime    2    8[BANK0 ] PTR unsigned int 
  2587 ;;		 -> main@straightTime(82), 
  2588 ;;  curMove         1   10[BANK0 ] unsigned char 
  2589 ;;  straightSpee    1   11[BANK0 ] unsigned char 
  2590 ;;  reverseDurat    2   12[BANK0 ] unsigned int 
  2591 ;;  straightRamp    1   14[BANK0 ] unsigned char 
  2592 ;;  turnSpeed       1   15[BANK0 ] unsigned char 
  2593 ;;  turnDuration    1   16[BANK0 ] unsigned char 
  2594 ;;  turnRamp        1   17[BANK0 ] unsigned char 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2606 ;;      Params:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2610 ;;Total ram usage:       19 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; Hardware stack levels required when called: 10
  2613 ;; This function calls:
  2614 ;;		_fullSpeedAhead
  2615 ;;		_returnHome
  2616 ;;		_reverseOneSquare
  2617 ;;		_reverseShort
  2618 ;;		_turnLeft
  2619 ;;		_turnRight
  2620 ;; This function is called by:
  2621 ;;		_main
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text2
  2626   000E02                     __ptext2:
  2627                           	callstack 0
  2628   000E02                     _move:
  2629                           	callstack 20
  2630   000E02                     
  2631                           ;dc_motor.c: 91: void move(DC_motor *mL, DC_motor *mR, char color, unsigned char *moveSe
      +                          quence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned int rever
      +                          seDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsi
      +                          gned char turnRamp);dc_motor.c: 92: {;dc_motor.c: 93:     if (color == 1) {
  2632   000E02  0100               	movlb	0	; () banked
  2633   000E04  05A3               	decf	move@color& (0+255),w,b
  2634   000E06  A4D8               	btfss	status,2,c
  2635   000E08  EF08  F007         	goto	u4961
  2636   000E0C  EF0A  F007         	goto	u4960
  2637   000E10                     u4961:
  2638   000E10  EF6C  F007         	goto	l5676
  2639   000E14                     u4960:
  2640   000E14                     
  2641                           ; BSR set to: 0
  2642                           ;dc_motor.c: 94:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2643   000E14  C09F  F025         	movff	move@mL,reverseShort@mL
  2644   000E18  C0A0  F026         	movff	move@mL+1,reverseShort@mL+1
  2645   000E1C  C0A1  F027         	movff	move@mR,reverseShort@mR
  2646   000E20  C0A2  F028         	movff	move@mR+1,reverseShort@mR+1
  2647   000E24  C0A9  F029         	movff	move@straightSpeed,reverseShort@straightSpeed
  2648   000E28  C0AC  F02A         	movff	move@straightRamp,reverseShort@straightRamp
  2649   000E2C  ECAF  F01E         	call	_reverseShort	;wreg free
  2650   000E30                     
  2651                           ;dc_motor.c: 95:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2652   000E30  0E05               	movlw	5
  2653   000E32  0100               	movlb	0	; () banked
  2654   000E34  6FB1               	movwf	(??_move+1)& (0+255),b
  2655   000E36  0E0F               	movlw	15
  2656   000E38  6FB0               	movwf	??_move& (0+255),b
  2657   000E3A  0EF1               	movlw	241
  2658   000E3C                     u5457:
  2659   000E3C  2EE8               	decfsz	wreg,f,c
  2660   000E3E  D7FE               	bra	u5457
  2661   000E40  2FB0               	decfsz	??_move& (0+255),f,b
  2662   000E42  D7FC               	bra	u5457
  2663   000E44  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  2664   000E46  D7FA               	bra	u5457
  2665   000E48                     
  2666                           ;dc_motor.c: 96:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2667   000E48  C09F  F025         	movff	move@mL,turnRight@mL
  2668   000E4C  C0A0  F026         	movff	move@mL+1,turnRight@mL+1
  2669   000E50  C0A1  F027         	movff	move@mR,turnRight@mR
  2670   000E54  C0A2  F028         	movff	move@mR+1,turnRight@mR+1
  2671   000E58  C0AD  F029         	movff	move@turnSpeed,turnRight@turnSpeed
  2672   000E5C  C0AE  F02A         	movff	move@turnDuration,turnRight@turnDuration
  2673   000E60  C0AF  F02B         	movff	move@turnRamp,turnRight@turnRamp
  2674   000E64  EC8D  F021         	call	_turnRight	;wreg free
  2675                           
  2676                           ;dc_motor.c: 97:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2677   000E68  0E05               	movlw	5
  2678   000E6A  0100               	movlb	0	; () banked
  2679   000E6C  6FB1               	movwf	(??_move+1)& (0+255),b
  2680   000E6E  0E0F               	movlw	15
  2681   000E70  6FB0               	movwf	??_move& (0+255),b
  2682   000E72  0EF1               	movlw	241
  2683   000E74                     u5467:
  2684   000E74  2EE8               	decfsz	wreg,f,c
  2685   000E76  D7FE               	bra	u5467
  2686   000E78  2FB0               	decfsz	??_move& (0+255),f,b
  2687   000E7A  D7FC               	bra	u5467
  2688   000E7C  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  2689   000E7E  D7FA               	bra	u5467
  2690   000E80                     
  2691                           ;dc_motor.c: 98:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  2692   000E80  C09F  F025         	movff	move@mL,turnRight@mL
  2693   000E84  C0A0  F026         	movff	move@mL+1,turnRight@mL+1
  2694   000E88  C0A1  F027         	movff	move@mR,turnRight@mR
  2695   000E8C  C0A2  F028         	movff	move@mR+1,turnRight@mR+1
  2696   000E90  C0AD  F029         	movff	move@turnSpeed,turnRight@turnSpeed
  2697   000E94  C0AE  F02A         	movff	move@turnDuration,turnRight@turnDuration
  2698   000E98  C0AF  F02B         	movff	move@turnRamp,turnRight@turnRamp
  2699   000E9C  EC8D  F021         	call	_turnRight	;wreg free
  2700   000EA0                     
  2701                           ;dc_motor.c: 99:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2702   000EA0  0E05               	movlw	5
  2703   000EA2  0100               	movlb	0	; () banked
  2704   000EA4  6FB1               	movwf	(??_move+1)& (0+255),b
  2705   000EA6  0E0F               	movlw	15
  2706   000EA8  6FB0               	movwf	??_move& (0+255),b
  2707   000EAA  0EF1               	movlw	241
  2708   000EAC                     u5477:
  2709   000EAC  2EE8               	decfsz	wreg,f,c
  2710   000EAE  D7FE               	bra	u5477
  2711   000EB0  2FB0               	decfsz	??_move& (0+255),f,b
  2712   000EB2  D7FC               	bra	u5477
  2713   000EB4  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  2714   000EB6  D7FA               	bra	u5477
  2715                           
  2716                           ;dc_motor.c: 100:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2717   000EB8  C09F  F025         	movff	move@mL,fullSpeedAhead@mL
  2718   000EBC  C0A0  F026         	movff	move@mL+1,fullSpeedAhead@mL+1
  2719   000EC0  C0A1  F027         	movff	move@mR,fullSpeedAhead@mR
  2720   000EC4  C0A2  F028         	movff	move@mR+1,fullSpeedAhead@mR+1
  2721   000EC8  C0A9  F029         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2722   000ECC  C0AC  F02A         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2723   000ED0  EC27  F025         	call	_fullSpeedAhead	;wreg free
  2724                           
  2725                           ;dc_motor.c: 101:     }
  2726   000ED4  EF1D  F00B         	goto	l586
  2727   000ED8                     l5676:
  2728                           
  2729                           ; BSR set to: 0
  2730   000ED8  0E02               	movlw	2
  2731   000EDA  19A3               	xorwf	move@color& (0+255),w,b
  2732   000EDC  A4D8               	btfss	status,2,c
  2733   000EDE  EF73  F007         	goto	u4971
  2734   000EE2  EF75  F007         	goto	u4970
  2735   000EE6                     u4971:
  2736   000EE6  EFD7  F007         	goto	l5688
  2737   000EEA                     u4970:
  2738   000EEA                     
  2739                           ; BSR set to: 0
  2740                           ;dc_motor.c: 104:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2741   000EEA  C09F  F025         	movff	move@mL,reverseShort@mL
  2742   000EEE  C0A0  F026         	movff	move@mL+1,reverseShort@mL+1
  2743   000EF2  C0A1  F027         	movff	move@mR,reverseShort@mR
  2744   000EF6  C0A2  F028         	movff	move@mR+1,reverseShort@mR+1
  2745   000EFA  C0A9  F029         	movff	move@straightSpeed,reverseShort@straightSpeed
  2746   000EFE  C0AC  F02A         	movff	move@straightRamp,reverseShort@straightRamp
  2747   000F02  ECAF  F01E         	call	_reverseShort	;wreg free
  2748   000F06                     
  2749                           ;dc_motor.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2750   000F06  0E05               	movlw	5
  2751   000F08  0100               	movlb	0	; () banked
  2752   000F0A  6FB1               	movwf	(??_move+1)& (0+255),b
  2753   000F0C  0E0F               	movlw	15
  2754   000F0E  6FB0               	movwf	??_move& (0+255),b
  2755   000F10  0EF1               	movlw	241
  2756   000F12                     u5487:
  2757   000F12  2EE8               	decfsz	wreg,f,c
  2758   000F14  D7FE               	bra	u5487
  2759   000F16  2FB0               	decfsz	??_move& (0+255),f,b
  2760   000F18  D7FC               	bra	u5487
  2761   000F1A  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  2762   000F1C  D7FA               	bra	u5487
  2763   000F1E                     
  2764                           ;dc_motor.c: 106:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2765   000F1E  C09F  F025         	movff	move@mL,turnLeft@mL
  2766   000F22  C0A0  F026         	movff	move@mL+1,turnLeft@mL+1
  2767   000F26  C0A1  F027         	movff	move@mR,turnLeft@mR
  2768   000F2A  C0A2  F028         	movff	move@mR+1,turnLeft@mR+1
  2769   000F2E  C0AD  F029         	movff	move@turnSpeed,turnLeft@turnSpeed
  2770   000F32  C0AE  F02A         	movff	move@turnDuration,turnLeft@turnDuration
  2771   000F36  C0AF  F02B         	movff	move@turnRamp,turnLeft@turnRamp
  2772   000F3A  EC7A  F022         	call	_turnLeft	;wreg free
  2773                           
  2774                           ;dc_motor.c: 107:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2775   000F3E  0E05               	movlw	5
  2776   000F40  0100               	movlb	0	; () banked
  2777   000F42  6FB1               	movwf	(??_move+1)& (0+255),b
  2778   000F44  0E0F               	movlw	15
  2779   000F46  6FB0               	movwf	??_move& (0+255),b
  2780   000F48  0EF1               	movlw	241
  2781   000F4A                     u5497:
  2782   000F4A  2EE8               	decfsz	wreg,f,c
  2783   000F4C  D7FE               	bra	u5497
  2784   000F4E  2FB0               	decfsz	??_move& (0+255),f,b
  2785   000F50  D7FC               	bra	u5497
  2786   000F52  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  2787   000F54  D7FA               	bra	u5497
  2788   000F56                     
  2789                           ;dc_motor.c: 108:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2790   000F56  C09F  F025         	movff	move@mL,turnLeft@mL
  2791   000F5A  C0A0  F026         	movff	move@mL+1,turnLeft@mL+1
  2792   000F5E  C0A1  F027         	movff	move@mR,turnLeft@mR
  2793   000F62  C0A2  F028         	movff	move@mR+1,turnLeft@mR+1
  2794   000F66  C0AD  F029         	movff	move@turnSpeed,turnLeft@turnSpeed
  2795   000F6A  C0AE  F02A         	movff	move@turnDuration,turnLeft@turnDuration
  2796   000F6E  C0AF  F02B         	movff	move@turnRamp,turnLeft@turnRamp
  2797   000F72  EC7A  F022         	call	_turnLeft	;wreg free
  2798   000F76                     
  2799                           ;dc_motor.c: 109:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2800   000F76  0E05               	movlw	5
  2801   000F78  0100               	movlb	0	; () banked
  2802   000F7A  6FB1               	movwf	(??_move+1)& (0+255),b
  2803   000F7C  0E0F               	movlw	15
  2804   000F7E  6FB0               	movwf	??_move& (0+255),b
  2805   000F80  0EF1               	movlw	241
  2806   000F82                     u5507:
  2807   000F82  2EE8               	decfsz	wreg,f,c
  2808   000F84  D7FE               	bra	u5507
  2809   000F86  2FB0               	decfsz	??_move& (0+255),f,b
  2810   000F88  D7FC               	bra	u5507
  2811   000F8A  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  2812   000F8C  D7FA               	bra	u5507
  2813                           
  2814                           ;dc_motor.c: 110:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2815   000F8E  C09F  F025         	movff	move@mL,fullSpeedAhead@mL
  2816   000F92  C0A0  F026         	movff	move@mL+1,fullSpeedAhead@mL+1
  2817   000F96  C0A1  F027         	movff	move@mR,fullSpeedAhead@mR
  2818   000F9A  C0A2  F028         	movff	move@mR+1,fullSpeedAhead@mR+1
  2819   000F9E  C0A9  F029         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2820   000FA2  C0AC  F02A         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2821   000FA6  EC27  F025         	call	_fullSpeedAhead	;wreg free
  2822                           
  2823                           ;dc_motor.c: 111:     }
  2824   000FAA  EF1D  F00B         	goto	l586
  2825   000FAE                     l5688:
  2826                           
  2827                           ; BSR set to: 0
  2828   000FAE  0E03               	movlw	3
  2829   000FB0  19A3               	xorwf	move@color& (0+255),w,b
  2830   000FB2  A4D8               	btfss	status,2,c
  2831   000FB4  EFDE  F007         	goto	u4981
  2832   000FB8  EFE0  F007         	goto	u4980
  2833   000FBC                     u4981:
  2834   000FBC  EF7A  F008         	goto	l5706
  2835   000FC0                     u4980:
  2836   000FC0                     
  2837                           ; BSR set to: 0
  2838                           ;dc_motor.c: 114:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2839   000FC0  C09F  F025         	movff	move@mL,reverseShort@mL
  2840   000FC4  C0A0  F026         	movff	move@mL+1,reverseShort@mL+1
  2841   000FC8  C0A1  F027         	movff	move@mR,reverseShort@mR
  2842   000FCC  C0A2  F028         	movff	move@mR+1,reverseShort@mR+1
  2843   000FD0  C0A9  F029         	movff	move@straightSpeed,reverseShort@straightSpeed
  2844   000FD4  C0AC  F02A         	movff	move@straightRamp,reverseShort@straightRamp
  2845   000FD8  ECAF  F01E         	call	_reverseShort	;wreg free
  2846   000FDC                     
  2847                           ;dc_motor.c: 115:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2848   000FDC  0E05               	movlw	5
  2849   000FDE  0100               	movlb	0	; () banked
  2850   000FE0  6FB1               	movwf	(??_move+1)& (0+255),b
  2851   000FE2  0E0F               	movlw	15
  2852   000FE4  6FB0               	movwf	??_move& (0+255),b
  2853   000FE6  0EF1               	movlw	241
  2854   000FE8                     u5517:
  2855   000FE8  2EE8               	decfsz	wreg,f,c
  2856   000FEA  D7FE               	bra	u5517
  2857   000FEC  2FB0               	decfsz	??_move& (0+255),f,b
  2858   000FEE  D7FC               	bra	u5517
  2859   000FF0  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  2860   000FF2  D7FA               	bra	u5517
  2861   000FF4                     
  2862                           ;dc_motor.c: 116:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2863   000FF4  C09F  F025         	movff	move@mL,turnLeft@mL
  2864   000FF8  C0A0  F026         	movff	move@mL+1,turnLeft@mL+1
  2865   000FFC  C0A1  F027         	movff	move@mR,turnLeft@mR
  2866   001000  C0A2  F028         	movff	move@mR+1,turnLeft@mR+1
  2867   001004  C0AD  F029         	movff	move@turnSpeed,turnLeft@turnSpeed
  2868   001008  C0AE  F02A         	movff	move@turnDuration,turnLeft@turnDuration
  2869   00100C  C0AF  F02B         	movff	move@turnRamp,turnLeft@turnRamp
  2870   001010  EC7A  F022         	call	_turnLeft	;wreg free
  2871                           
  2872                           ;dc_motor.c: 117:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2873   001014  0E05               	movlw	5
  2874   001016  0100               	movlb	0	; () banked
  2875   001018  6FB1               	movwf	(??_move+1)& (0+255),b
  2876   00101A  0E0F               	movlw	15
  2877   00101C  6FB0               	movwf	??_move& (0+255),b
  2878   00101E  0EF1               	movlw	241
  2879   001020                     u5527:
  2880   001020  2EE8               	decfsz	wreg,f,c
  2881   001022  D7FE               	bra	u5527
  2882   001024  2FB0               	decfsz	??_move& (0+255),f,b
  2883   001026  D7FC               	bra	u5527
  2884   001028  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  2885   00102A  D7FA               	bra	u5527
  2886   00102C                     
  2887                           ;dc_motor.c: 118:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2888   00102C  C09F  F025         	movff	move@mL,turnLeft@mL
  2889   001030  C0A0  F026         	movff	move@mL+1,turnLeft@mL+1
  2890   001034  C0A1  F027         	movff	move@mR,turnLeft@mR
  2891   001038  C0A2  F028         	movff	move@mR+1,turnLeft@mR+1
  2892   00103C  C0AD  F029         	movff	move@turnSpeed,turnLeft@turnSpeed
  2893   001040  C0AE  F02A         	movff	move@turnDuration,turnLeft@turnDuration
  2894   001044  C0AF  F02B         	movff	move@turnRamp,turnLeft@turnRamp
  2895   001048  EC7A  F022         	call	_turnLeft	;wreg free
  2896   00104C                     
  2897                           ;dc_motor.c: 119:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2898   00104C  0E05               	movlw	5
  2899   00104E  0100               	movlb	0	; () banked
  2900   001050  6FB1               	movwf	(??_move+1)& (0+255),b
  2901   001052  0E0F               	movlw	15
  2902   001054  6FB0               	movwf	??_move& (0+255),b
  2903   001056  0EF1               	movlw	241
  2904   001058                     u5537:
  2905   001058  2EE8               	decfsz	wreg,f,c
  2906   00105A  D7FE               	bra	u5537
  2907   00105C  2FB0               	decfsz	??_move& (0+255),f,b
  2908   00105E  D7FC               	bra	u5537
  2909   001060  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  2910   001062  D7FA               	bra	u5537
  2911                           
  2912                           ;dc_motor.c: 120:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2913   001064  C09F  F025         	movff	move@mL,turnLeft@mL
  2914   001068  C0A0  F026         	movff	move@mL+1,turnLeft@mL+1
  2915   00106C  C0A1  F027         	movff	move@mR,turnLeft@mR
  2916   001070  C0A2  F028         	movff	move@mR+1,turnLeft@mR+1
  2917   001074  C0AD  F029         	movff	move@turnSpeed,turnLeft@turnSpeed
  2918   001078  C0AE  F02A         	movff	move@turnDuration,turnLeft@turnDuration
  2919   00107C  C0AF  F02B         	movff	move@turnRamp,turnLeft@turnRamp
  2920   001080  EC7A  F022         	call	_turnLeft	;wreg free
  2921   001084                     
  2922                           ;dc_motor.c: 121:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2923   001084  0E05               	movlw	5
  2924   001086  0100               	movlb	0	; () banked
  2925   001088  6FB1               	movwf	(??_move+1)& (0+255),b
  2926   00108A  0E0F               	movlw	15
  2927   00108C  6FB0               	movwf	??_move& (0+255),b
  2928   00108E  0EF1               	movlw	241
  2929   001090                     u5547:
  2930   001090  2EE8               	decfsz	wreg,f,c
  2931   001092  D7FE               	bra	u5547
  2932   001094  2FB0               	decfsz	??_move& (0+255),f,b
  2933   001096  D7FC               	bra	u5547
  2934   001098  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  2935   00109A  D7FA               	bra	u5547
  2936   00109C                     
  2937                           ;dc_motor.c: 122:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  2938   00109C  C09F  F025         	movff	move@mL,turnLeft@mL
  2939   0010A0  C0A0  F026         	movff	move@mL+1,turnLeft@mL+1
  2940   0010A4  C0A1  F027         	movff	move@mR,turnLeft@mR
  2941   0010A8  C0A2  F028         	movff	move@mR+1,turnLeft@mR+1
  2942   0010AC  C0AD  F029         	movff	move@turnSpeed,turnLeft@turnSpeed
  2943   0010B0  C0AE  F02A         	movff	move@turnDuration,turnLeft@turnDuration
  2944   0010B4  C0AF  F02B         	movff	move@turnRamp,turnLeft@turnRamp
  2945   0010B8  EC7A  F022         	call	_turnLeft	;wreg free
  2946                           
  2947                           ;dc_motor.c: 123:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2948   0010BC  0E05               	movlw	5
  2949   0010BE  0100               	movlb	0	; () banked
  2950   0010C0  6FB1               	movwf	(??_move+1)& (0+255),b
  2951   0010C2  0E0F               	movlw	15
  2952   0010C4  6FB0               	movwf	??_move& (0+255),b
  2953   0010C6  0EF1               	movlw	241
  2954   0010C8                     u5557:
  2955   0010C8  2EE8               	decfsz	wreg,f,c
  2956   0010CA  D7FE               	bra	u5557
  2957   0010CC  2FB0               	decfsz	??_move& (0+255),f,b
  2958   0010CE  D7FC               	bra	u5557
  2959   0010D0  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  2960   0010D2  D7FA               	bra	u5557
  2961   0010D4                     
  2962                           ;dc_motor.c: 124:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  2963   0010D4  C09F  F025         	movff	move@mL,fullSpeedAhead@mL
  2964   0010D8  C0A0  F026         	movff	move@mL+1,fullSpeedAhead@mL+1
  2965   0010DC  C0A1  F027         	movff	move@mR,fullSpeedAhead@mR
  2966   0010E0  C0A2  F028         	movff	move@mR+1,fullSpeedAhead@mR+1
  2967   0010E4  C0A9  F029         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  2968   0010E8  C0AC  F02A         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  2969   0010EC  EC27  F025         	call	_fullSpeedAhead	;wreg free
  2970                           
  2971                           ;dc_motor.c: 125:     }
  2972   0010F0  EF1D  F00B         	goto	l586
  2973   0010F4                     l5706:
  2974                           
  2975                           ; BSR set to: 0
  2976   0010F4  0E04               	movlw	4
  2977   0010F6  19A3               	xorwf	move@color& (0+255),w,b
  2978   0010F8  A4D8               	btfss	status,2,c
  2979   0010FA  EF81  F008         	goto	u4991
  2980   0010FE  EF83  F008         	goto	u4990
  2981   001102                     u4991:
  2982   001102  EF03  F009         	goto	l5722
  2983   001106                     u4990:
  2984   001106                     
  2985                           ; BSR set to: 0
  2986                           ;dc_motor.c: 128:         reverseShort(mL, mR, straightSpeed, straightRamp);
  2987   001106  C09F  F025         	movff	move@mL,reverseShort@mL
  2988   00110A  C0A0  F026         	movff	move@mL+1,reverseShort@mL+1
  2989   00110E  C0A1  F027         	movff	move@mR,reverseShort@mR
  2990   001112  C0A2  F028         	movff	move@mR+1,reverseShort@mR+1
  2991   001116  C0A9  F029         	movff	move@straightSpeed,reverseShort@straightSpeed
  2992   00111A  C0AC  F02A         	movff	move@straightRamp,reverseShort@straightRamp
  2993   00111E  ECAF  F01E         	call	_reverseShort	;wreg free
  2994   001122                     
  2995                           ;dc_motor.c: 129:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2996   001122  0E05               	movlw	5
  2997   001124  0100               	movlb	0	; () banked
  2998   001126  6FB1               	movwf	(??_move+1)& (0+255),b
  2999   001128  0E0F               	movlw	15
  3000   00112A  6FB0               	movwf	??_move& (0+255),b
  3001   00112C  0EF1               	movlw	241
  3002   00112E                     u5567:
  3003   00112E  2EE8               	decfsz	wreg,f,c
  3004   001130  D7FE               	bra	u5567
  3005   001132  2FB0               	decfsz	??_move& (0+255),f,b
  3006   001134  D7FC               	bra	u5567
  3007   001136  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3008   001138  D7FA               	bra	u5567
  3009   00113A                     
  3010                           ;dc_motor.c: 130:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  3011   00113A  C09F  F025         	movff	move@mL,reverseOneSquare@mL
  3012   00113E  C0A0  F026         	movff	move@mL+1,reverseOneSquare@mL+1
  3013   001142  C0A1  F027         	movff	move@mR,reverseOneSquare@mR
  3014   001146  C0A2  F028         	movff	move@mR+1,reverseOneSquare@mR+1
  3015   00114A  C0A9  F029         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  3016   00114E  C0AA  F02A         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  3017   001152  C0AB  F02B         	movff	move@reverseDuration+1,reverseOneSquare@reverseDuration+1
  3018   001156  C0AC  F02C         	movff	move@straightRamp,reverseOneSquare@straightRamp
  3019   00115A  EC9E  F020         	call	_reverseOneSquare	;wreg free
  3020                           
  3021                           ;dc_motor.c: 131:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3022   00115E  0E05               	movlw	5
  3023   001160  0100               	movlb	0	; () banked
  3024   001162  6FB1               	movwf	(??_move+1)& (0+255),b
  3025   001164  0E0F               	movlw	15
  3026   001166  6FB0               	movwf	??_move& (0+255),b
  3027   001168  0EF1               	movlw	241
  3028   00116A                     u5577:
  3029   00116A  2EE8               	decfsz	wreg,f,c
  3030   00116C  D7FE               	bra	u5577
  3031   00116E  2FB0               	decfsz	??_move& (0+255),f,b
  3032   001170  D7FC               	bra	u5577
  3033   001172  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3034   001174  D7FA               	bra	u5577
  3035   001176                     
  3036                           ;dc_motor.c: 132:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3037   001176  C09F  F025         	movff	move@mL,turnRight@mL
  3038   00117A  C0A0  F026         	movff	move@mL+1,turnRight@mL+1
  3039   00117E  C0A1  F027         	movff	move@mR,turnRight@mR
  3040   001182  C0A2  F028         	movff	move@mR+1,turnRight@mR+1
  3041   001186  C0AD  F029         	movff	move@turnSpeed,turnRight@turnSpeed
  3042   00118A  C0AE  F02A         	movff	move@turnDuration,turnRight@turnDuration
  3043   00118E  C0AF  F02B         	movff	move@turnRamp,turnRight@turnRamp
  3044   001192  EC8D  F021         	call	_turnRight	;wreg free
  3045   001196                     
  3046                           ;dc_motor.c: 133:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3047   001196  0E05               	movlw	5
  3048   001198  0100               	movlb	0	; () banked
  3049   00119A  6FB1               	movwf	(??_move+1)& (0+255),b
  3050   00119C  0E0F               	movlw	15
  3051   00119E  6FB0               	movwf	??_move& (0+255),b
  3052   0011A0  0EF1               	movlw	241
  3053   0011A2                     u5587:
  3054   0011A2  2EE8               	decfsz	wreg,f,c
  3055   0011A4  D7FE               	bra	u5587
  3056   0011A6  2FB0               	decfsz	??_move& (0+255),f,b
  3057   0011A8  D7FC               	bra	u5587
  3058   0011AA  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3059   0011AC  D7FA               	bra	u5587
  3060                           
  3061                           ;dc_motor.c: 134:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3062   0011AE  C09F  F025         	movff	move@mL,turnRight@mL
  3063   0011B2  C0A0  F026         	movff	move@mL+1,turnRight@mL+1
  3064   0011B6  C0A1  F027         	movff	move@mR,turnRight@mR
  3065   0011BA  C0A2  F028         	movff	move@mR+1,turnRight@mR+1
  3066   0011BE  C0AD  F029         	movff	move@turnSpeed,turnRight@turnSpeed
  3067   0011C2  C0AE  F02A         	movff	move@turnDuration,turnRight@turnDuration
  3068   0011C6  C0AF  F02B         	movff	move@turnRamp,turnRight@turnRamp
  3069   0011CA  EC8D  F021         	call	_turnRight	;wreg free
  3070   0011CE                     
  3071                           ;dc_motor.c: 135:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3072   0011CE  0E05               	movlw	5
  3073   0011D0  0100               	movlb	0	; () banked
  3074   0011D2  6FB1               	movwf	(??_move+1)& (0+255),b
  3075   0011D4  0E0F               	movlw	15
  3076   0011D6  6FB0               	movwf	??_move& (0+255),b
  3077   0011D8  0EF1               	movlw	241
  3078   0011DA                     u5597:
  3079   0011DA  2EE8               	decfsz	wreg,f,c
  3080   0011DC  D7FE               	bra	u5597
  3081   0011DE  2FB0               	decfsz	??_move& (0+255),f,b
  3082   0011E0  D7FC               	bra	u5597
  3083   0011E2  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3084   0011E4  D7FA               	bra	u5597
  3085   0011E6                     
  3086                           ;dc_motor.c: 136:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3087   0011E6  C09F  F025         	movff	move@mL,fullSpeedAhead@mL
  3088   0011EA  C0A0  F026         	movff	move@mL+1,fullSpeedAhead@mL+1
  3089   0011EE  C0A1  F027         	movff	move@mR,fullSpeedAhead@mR
  3090   0011F2  C0A2  F028         	movff	move@mR+1,fullSpeedAhead@mR+1
  3091   0011F6  C0A9  F029         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3092   0011FA  C0AC  F02A         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3093   0011FE  EC27  F025         	call	_fullSpeedAhead	;wreg free
  3094                           
  3095                           ;dc_motor.c: 137:     }
  3096   001202  EF1D  F00B         	goto	l586
  3097   001206                     l5722:
  3098                           
  3099                           ; BSR set to: 0
  3100   001206  0E05               	movlw	5
  3101   001208  19A3               	xorwf	move@color& (0+255),w,b
  3102   00120A  A4D8               	btfss	status,2,c
  3103   00120C  EF0A  F009         	goto	u5001
  3104   001210  EF0C  F009         	goto	u5000
  3105   001214                     u5001:
  3106   001214  EF8C  F009         	goto	l5738
  3107   001218                     u5000:
  3108   001218                     
  3109                           ; BSR set to: 0
  3110                           ;dc_motor.c: 140:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3111   001218  C09F  F025         	movff	move@mL,reverseShort@mL
  3112   00121C  C0A0  F026         	movff	move@mL+1,reverseShort@mL+1
  3113   001220  C0A1  F027         	movff	move@mR,reverseShort@mR
  3114   001224  C0A2  F028         	movff	move@mR+1,reverseShort@mR+1
  3115   001228  C0A9  F029         	movff	move@straightSpeed,reverseShort@straightSpeed
  3116   00122C  C0AC  F02A         	movff	move@straightRamp,reverseShort@straightRamp
  3117   001230  ECAF  F01E         	call	_reverseShort	;wreg free
  3118   001234                     
  3119                           ;dc_motor.c: 141:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3120   001234  0E05               	movlw	5
  3121   001236  0100               	movlb	0	; () banked
  3122   001238  6FB1               	movwf	(??_move+1)& (0+255),b
  3123   00123A  0E0F               	movlw	15
  3124   00123C  6FB0               	movwf	??_move& (0+255),b
  3125   00123E  0EF1               	movlw	241
  3126   001240                     u5607:
  3127   001240  2EE8               	decfsz	wreg,f,c
  3128   001242  D7FE               	bra	u5607
  3129   001244  2FB0               	decfsz	??_move& (0+255),f,b
  3130   001246  D7FC               	bra	u5607
  3131   001248  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3132   00124A  D7FA               	bra	u5607
  3133   00124C                     
  3134                           ;dc_motor.c: 142:         reverseOneSquare(mL, mR, straightSpeed, reverseDuration, strai
      +                          ghtRamp);
  3135   00124C  C09F  F025         	movff	move@mL,reverseOneSquare@mL
  3136   001250  C0A0  F026         	movff	move@mL+1,reverseOneSquare@mL+1
  3137   001254  C0A1  F027         	movff	move@mR,reverseOneSquare@mR
  3138   001258  C0A2  F028         	movff	move@mR+1,reverseOneSquare@mR+1
  3139   00125C  C0A9  F029         	movff	move@straightSpeed,reverseOneSquare@straightSpeed
  3140   001260  C0AA  F02A         	movff	move@reverseDuration,reverseOneSquare@reverseDuration
  3141   001264  C0AB  F02B         	movff	move@reverseDuration+1,reverseOneSquare@reverseDuration+1
  3142   001268  C0AC  F02C         	movff	move@straightRamp,reverseOneSquare@straightRamp
  3143   00126C  EC9E  F020         	call	_reverseOneSquare	;wreg free
  3144                           
  3145                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3146   001270  0E05               	movlw	5
  3147   001272  0100               	movlb	0	; () banked
  3148   001274  6FB1               	movwf	(??_move+1)& (0+255),b
  3149   001276  0E0F               	movlw	15
  3150   001278  6FB0               	movwf	??_move& (0+255),b
  3151   00127A  0EF1               	movlw	241
  3152   00127C                     u5617:
  3153   00127C  2EE8               	decfsz	wreg,f,c
  3154   00127E  D7FE               	bra	u5617
  3155   001280  2FB0               	decfsz	??_move& (0+255),f,b
  3156   001282  D7FC               	bra	u5617
  3157   001284  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3158   001286  D7FA               	bra	u5617
  3159   001288                     
  3160                           ;dc_motor.c: 144:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3161   001288  C09F  F025         	movff	move@mL,turnLeft@mL
  3162   00128C  C0A0  F026         	movff	move@mL+1,turnLeft@mL+1
  3163   001290  C0A1  F027         	movff	move@mR,turnLeft@mR
  3164   001294  C0A2  F028         	movff	move@mR+1,turnLeft@mR+1
  3165   001298  C0AD  F029         	movff	move@turnSpeed,turnLeft@turnSpeed
  3166   00129C  C0AE  F02A         	movff	move@turnDuration,turnLeft@turnDuration
  3167   0012A0  C0AF  F02B         	movff	move@turnRamp,turnLeft@turnRamp
  3168   0012A4  EC7A  F022         	call	_turnLeft	;wreg free
  3169   0012A8                     
  3170                           ;dc_motor.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3171   0012A8  0E05               	movlw	5
  3172   0012AA  0100               	movlb	0	; () banked
  3173   0012AC  6FB1               	movwf	(??_move+1)& (0+255),b
  3174   0012AE  0E0F               	movlw	15
  3175   0012B0  6FB0               	movwf	??_move& (0+255),b
  3176   0012B2  0EF1               	movlw	241
  3177   0012B4                     u5627:
  3178   0012B4  2EE8               	decfsz	wreg,f,c
  3179   0012B6  D7FE               	bra	u5627
  3180   0012B8  2FB0               	decfsz	??_move& (0+255),f,b
  3181   0012BA  D7FC               	bra	u5627
  3182   0012BC  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3183   0012BE  D7FA               	bra	u5627
  3184                           
  3185                           ;dc_motor.c: 146:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3186   0012C0  C09F  F025         	movff	move@mL,turnLeft@mL
  3187   0012C4  C0A0  F026         	movff	move@mL+1,turnLeft@mL+1
  3188   0012C8  C0A1  F027         	movff	move@mR,turnLeft@mR
  3189   0012CC  C0A2  F028         	movff	move@mR+1,turnLeft@mR+1
  3190   0012D0  C0AD  F029         	movff	move@turnSpeed,turnLeft@turnSpeed
  3191   0012D4  C0AE  F02A         	movff	move@turnDuration,turnLeft@turnDuration
  3192   0012D8  C0AF  F02B         	movff	move@turnRamp,turnLeft@turnRamp
  3193   0012DC  EC7A  F022         	call	_turnLeft	;wreg free
  3194   0012E0                     
  3195                           ;dc_motor.c: 147:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3196   0012E0  0E05               	movlw	5
  3197   0012E2  0100               	movlb	0	; () banked
  3198   0012E4  6FB1               	movwf	(??_move+1)& (0+255),b
  3199   0012E6  0E0F               	movlw	15
  3200   0012E8  6FB0               	movwf	??_move& (0+255),b
  3201   0012EA  0EF1               	movlw	241
  3202   0012EC                     u5637:
  3203   0012EC  2EE8               	decfsz	wreg,f,c
  3204   0012EE  D7FE               	bra	u5637
  3205   0012F0  2FB0               	decfsz	??_move& (0+255),f,b
  3206   0012F2  D7FC               	bra	u5637
  3207   0012F4  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3208   0012F6  D7FA               	bra	u5637
  3209   0012F8                     
  3210                           ;dc_motor.c: 148:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3211   0012F8  C09F  F025         	movff	move@mL,fullSpeedAhead@mL
  3212   0012FC  C0A0  F026         	movff	move@mL+1,fullSpeedAhead@mL+1
  3213   001300  C0A1  F027         	movff	move@mR,fullSpeedAhead@mR
  3214   001304  C0A2  F028         	movff	move@mR+1,fullSpeedAhead@mR+1
  3215   001308  C0A9  F029         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3216   00130C  C0AC  F02A         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3217   001310  EC27  F025         	call	_fullSpeedAhead	;wreg free
  3218                           
  3219                           ;dc_motor.c: 149:     }
  3220   001314  EF1D  F00B         	goto	l586
  3221   001318                     l5738:
  3222                           
  3223                           ; BSR set to: 0
  3224   001318  0E06               	movlw	6
  3225   00131A  19A3               	xorwf	move@color& (0+255),w,b
  3226   00131C  A4D8               	btfss	status,2,c
  3227   00131E  EF93  F009         	goto	u5011
  3228   001322  EF95  F009         	goto	u5010
  3229   001326                     u5011:
  3230   001326  EF13  F00A         	goto	l5754
  3231   00132A                     u5010:
  3232   00132A                     
  3233                           ; BSR set to: 0
  3234                           ;dc_motor.c: 152:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3235   00132A  C09F  F025         	movff	move@mL,reverseShort@mL
  3236   00132E  C0A0  F026         	movff	move@mL+1,reverseShort@mL+1
  3237   001332  C0A1  F027         	movff	move@mR,reverseShort@mR
  3238   001336  C0A2  F028         	movff	move@mR+1,reverseShort@mR+1
  3239   00133A  C0A9  F029         	movff	move@straightSpeed,reverseShort@straightSpeed
  3240   00133E  C0AC  F02A         	movff	move@straightRamp,reverseShort@straightRamp
  3241   001342  ECAF  F01E         	call	_reverseShort	;wreg free
  3242   001346                     
  3243                           ;dc_motor.c: 153:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3244   001346  0E05               	movlw	5
  3245   001348  0100               	movlb	0	; () banked
  3246   00134A  6FB1               	movwf	(??_move+1)& (0+255),b
  3247   00134C  0E0F               	movlw	15
  3248   00134E  6FB0               	movwf	??_move& (0+255),b
  3249   001350  0EF1               	movlw	241
  3250   001352                     u5647:
  3251   001352  2EE8               	decfsz	wreg,f,c
  3252   001354  D7FE               	bra	u5647
  3253   001356  2FB0               	decfsz	??_move& (0+255),f,b
  3254   001358  D7FC               	bra	u5647
  3255   00135A  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3256   00135C  D7FA               	bra	u5647
  3257   00135E                     
  3258                           ;dc_motor.c: 154:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3259   00135E  C09F  F025         	movff	move@mL,turnRight@mL
  3260   001362  C0A0  F026         	movff	move@mL+1,turnRight@mL+1
  3261   001366  C0A1  F027         	movff	move@mR,turnRight@mR
  3262   00136A  C0A2  F028         	movff	move@mR+1,turnRight@mR+1
  3263   00136E  C0AD  F029         	movff	move@turnSpeed,turnRight@turnSpeed
  3264   001372  C0AE  F02A         	movff	move@turnDuration,turnRight@turnDuration
  3265   001376  C0AF  F02B         	movff	move@turnRamp,turnRight@turnRamp
  3266   00137A  EC8D  F021         	call	_turnRight	;wreg free
  3267                           
  3268                           ;dc_motor.c: 155:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3269   00137E  0E05               	movlw	5
  3270   001380  0100               	movlb	0	; () banked
  3271   001382  6FB1               	movwf	(??_move+1)& (0+255),b
  3272   001384  0E0F               	movlw	15
  3273   001386  6FB0               	movwf	??_move& (0+255),b
  3274   001388  0EF1               	movlw	241
  3275   00138A                     u5657:
  3276   00138A  2EE8               	decfsz	wreg,f,c
  3277   00138C  D7FE               	bra	u5657
  3278   00138E  2FB0               	decfsz	??_move& (0+255),f,b
  3279   001390  D7FC               	bra	u5657
  3280   001392  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3281   001394  D7FA               	bra	u5657
  3282   001396                     
  3283                           ;dc_motor.c: 156:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3284   001396  C09F  F025         	movff	move@mL,turnRight@mL
  3285   00139A  C0A0  F026         	movff	move@mL+1,turnRight@mL+1
  3286   00139E  C0A1  F027         	movff	move@mR,turnRight@mR
  3287   0013A2  C0A2  F028         	movff	move@mR+1,turnRight@mR+1
  3288   0013A6  C0AD  F029         	movff	move@turnSpeed,turnRight@turnSpeed
  3289   0013AA  C0AE  F02A         	movff	move@turnDuration,turnRight@turnDuration
  3290   0013AE  C0AF  F02B         	movff	move@turnRamp,turnRight@turnRamp
  3291   0013B2  EC8D  F021         	call	_turnRight	;wreg free
  3292   0013B6                     
  3293                           ;dc_motor.c: 157:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3294   0013B6  0E05               	movlw	5
  3295   0013B8  0100               	movlb	0	; () banked
  3296   0013BA  6FB1               	movwf	(??_move+1)& (0+255),b
  3297   0013BC  0E0F               	movlw	15
  3298   0013BE  6FB0               	movwf	??_move& (0+255),b
  3299   0013C0  0EF1               	movlw	241
  3300   0013C2                     u5667:
  3301   0013C2  2EE8               	decfsz	wreg,f,c
  3302   0013C4  D7FE               	bra	u5667
  3303   0013C6  2FB0               	decfsz	??_move& (0+255),f,b
  3304   0013C8  D7FC               	bra	u5667
  3305   0013CA  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3306   0013CC  D7FA               	bra	u5667
  3307                           
  3308                           ;dc_motor.c: 158:         turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  3309   0013CE  C09F  F025         	movff	move@mL,turnRight@mL
  3310   0013D2  C0A0  F026         	movff	move@mL+1,turnRight@mL+1
  3311   0013D6  C0A1  F027         	movff	move@mR,turnRight@mR
  3312   0013DA  C0A2  F028         	movff	move@mR+1,turnRight@mR+1
  3313   0013DE  C0AD  F029         	movff	move@turnSpeed,turnRight@turnSpeed
  3314   0013E2  C0AE  F02A         	movff	move@turnDuration,turnRight@turnDuration
  3315   0013E6  C0AF  F02B         	movff	move@turnRamp,turnRight@turnRamp
  3316   0013EA  EC8D  F021         	call	_turnRight	;wreg free
  3317   0013EE                     
  3318                           ;dc_motor.c: 159:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3319   0013EE  0E05               	movlw	5
  3320   0013F0  0100               	movlb	0	; () banked
  3321   0013F2  6FB1               	movwf	(??_move+1)& (0+255),b
  3322   0013F4  0E0F               	movlw	15
  3323   0013F6  6FB0               	movwf	??_move& (0+255),b
  3324   0013F8  0EF1               	movlw	241
  3325   0013FA                     u5677:
  3326   0013FA  2EE8               	decfsz	wreg,f,c
  3327   0013FC  D7FE               	bra	u5677
  3328   0013FE  2FB0               	decfsz	??_move& (0+255),f,b
  3329   001400  D7FC               	bra	u5677
  3330   001402  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3331   001404  D7FA               	bra	u5677
  3332   001406                     
  3333                           ;dc_motor.c: 160:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3334   001406  C09F  F025         	movff	move@mL,fullSpeedAhead@mL
  3335   00140A  C0A0  F026         	movff	move@mL+1,fullSpeedAhead@mL+1
  3336   00140E  C0A1  F027         	movff	move@mR,fullSpeedAhead@mR
  3337   001412  C0A2  F028         	movff	move@mR+1,fullSpeedAhead@mR+1
  3338   001416  C0A9  F029         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3339   00141A  C0AC  F02A         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3340   00141E  EC27  F025         	call	_fullSpeedAhead	;wreg free
  3341                           
  3342                           ;dc_motor.c: 161:     }
  3343   001422  EF1D  F00B         	goto	l586
  3344   001426                     l5754:
  3345                           
  3346                           ; BSR set to: 0
  3347   001426  0E07               	movlw	7
  3348   001428  19A3               	xorwf	move@color& (0+255),w,b
  3349   00142A  A4D8               	btfss	status,2,c
  3350   00142C  EF1A  F00A         	goto	u5021
  3351   001430  EF1C  F00A         	goto	u5020
  3352   001434                     u5021:
  3353   001434  EF9A  F00A         	goto	l5770
  3354   001438                     u5020:
  3355   001438                     
  3356                           ; BSR set to: 0
  3357                           ;dc_motor.c: 164:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3358   001438  C09F  F025         	movff	move@mL,reverseShort@mL
  3359   00143C  C0A0  F026         	movff	move@mL+1,reverseShort@mL+1
  3360   001440  C0A1  F027         	movff	move@mR,reverseShort@mR
  3361   001444  C0A2  F028         	movff	move@mR+1,reverseShort@mR+1
  3362   001448  C0A9  F029         	movff	move@straightSpeed,reverseShort@straightSpeed
  3363   00144C  C0AC  F02A         	movff	move@straightRamp,reverseShort@straightRamp
  3364   001450  ECAF  F01E         	call	_reverseShort	;wreg free
  3365   001454                     
  3366                           ;dc_motor.c: 165:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3367   001454  0E05               	movlw	5
  3368   001456  0100               	movlb	0	; () banked
  3369   001458  6FB1               	movwf	(??_move+1)& (0+255),b
  3370   00145A  0E0F               	movlw	15
  3371   00145C  6FB0               	movwf	??_move& (0+255),b
  3372   00145E  0EF1               	movlw	241
  3373   001460                     u5687:
  3374   001460  2EE8               	decfsz	wreg,f,c
  3375   001462  D7FE               	bra	u5687
  3376   001464  2FB0               	decfsz	??_move& (0+255),f,b
  3377   001466  D7FC               	bra	u5687
  3378   001468  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3379   00146A  D7FA               	bra	u5687
  3380   00146C                     
  3381                           ;dc_motor.c: 166:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3382   00146C  C09F  F025         	movff	move@mL,turnLeft@mL
  3383   001470  C0A0  F026         	movff	move@mL+1,turnLeft@mL+1
  3384   001474  C0A1  F027         	movff	move@mR,turnLeft@mR
  3385   001478  C0A2  F028         	movff	move@mR+1,turnLeft@mR+1
  3386   00147C  C0AD  F029         	movff	move@turnSpeed,turnLeft@turnSpeed
  3387   001480  C0AE  F02A         	movff	move@turnDuration,turnLeft@turnDuration
  3388   001484  C0AF  F02B         	movff	move@turnRamp,turnLeft@turnRamp
  3389   001488  EC7A  F022         	call	_turnLeft	;wreg free
  3390                           
  3391                           ;dc_motor.c: 167:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3392   00148C  0E05               	movlw	5
  3393   00148E  0100               	movlb	0	; () banked
  3394   001490  6FB1               	movwf	(??_move+1)& (0+255),b
  3395   001492  0E0F               	movlw	15
  3396   001494  6FB0               	movwf	??_move& (0+255),b
  3397   001496  0EF1               	movlw	241
  3398   001498                     u5697:
  3399   001498  2EE8               	decfsz	wreg,f,c
  3400   00149A  D7FE               	bra	u5697
  3401   00149C  2FB0               	decfsz	??_move& (0+255),f,b
  3402   00149E  D7FC               	bra	u5697
  3403   0014A0  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3404   0014A2  D7FA               	bra	u5697
  3405   0014A4                     
  3406                           ;dc_motor.c: 168:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3407   0014A4  C09F  F025         	movff	move@mL,turnLeft@mL
  3408   0014A8  C0A0  F026         	movff	move@mL+1,turnLeft@mL+1
  3409   0014AC  C0A1  F027         	movff	move@mR,turnLeft@mR
  3410   0014B0  C0A2  F028         	movff	move@mR+1,turnLeft@mR+1
  3411   0014B4  C0AD  F029         	movff	move@turnSpeed,turnLeft@turnSpeed
  3412   0014B8  C0AE  F02A         	movff	move@turnDuration,turnLeft@turnDuration
  3413   0014BC  C0AF  F02B         	movff	move@turnRamp,turnLeft@turnRamp
  3414   0014C0  EC7A  F022         	call	_turnLeft	;wreg free
  3415   0014C4                     
  3416                           ;dc_motor.c: 169:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3417   0014C4  0E05               	movlw	5
  3418   0014C6  0100               	movlb	0	; () banked
  3419   0014C8  6FB1               	movwf	(??_move+1)& (0+255),b
  3420   0014CA  0E0F               	movlw	15
  3421   0014CC  6FB0               	movwf	??_move& (0+255),b
  3422   0014CE  0EF1               	movlw	241
  3423   0014D0                     u5707:
  3424   0014D0  2EE8               	decfsz	wreg,f,c
  3425   0014D2  D7FE               	bra	u5707
  3426   0014D4  2FB0               	decfsz	??_move& (0+255),f,b
  3427   0014D6  D7FC               	bra	u5707
  3428   0014D8  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3429   0014DA  D7FA               	bra	u5707
  3430                           
  3431                           ;dc_motor.c: 170:         turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3432   0014DC  C09F  F025         	movff	move@mL,turnLeft@mL
  3433   0014E0  C0A0  F026         	movff	move@mL+1,turnLeft@mL+1
  3434   0014E4  C0A1  F027         	movff	move@mR,turnLeft@mR
  3435   0014E8  C0A2  F028         	movff	move@mR+1,turnLeft@mR+1
  3436   0014EC  C0AD  F029         	movff	move@turnSpeed,turnLeft@turnSpeed
  3437   0014F0  C0AE  F02A         	movff	move@turnDuration,turnLeft@turnDuration
  3438   0014F4  C0AF  F02B         	movff	move@turnRamp,turnLeft@turnRamp
  3439   0014F8  EC7A  F022         	call	_turnLeft	;wreg free
  3440   0014FC                     
  3441                           ;dc_motor.c: 171:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3442   0014FC  0E05               	movlw	5
  3443   0014FE  0100               	movlb	0	; () banked
  3444   001500  6FB1               	movwf	(??_move+1)& (0+255),b
  3445   001502  0E0F               	movlw	15
  3446   001504  6FB0               	movwf	??_move& (0+255),b
  3447   001506  0EF1               	movlw	241
  3448   001508                     u5717:
  3449   001508  2EE8               	decfsz	wreg,f,c
  3450   00150A  D7FE               	bra	u5717
  3451   00150C  2FB0               	decfsz	??_move& (0+255),f,b
  3452   00150E  D7FC               	bra	u5717
  3453   001510  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3454   001512  D7FA               	bra	u5717
  3455   001514                     
  3456                           ;dc_motor.c: 172:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  3457   001514  C09F  F025         	movff	move@mL,fullSpeedAhead@mL
  3458   001518  C0A0  F026         	movff	move@mL+1,fullSpeedAhead@mL+1
  3459   00151C  C0A1  F027         	movff	move@mR,fullSpeedAhead@mR
  3460   001520  C0A2  F028         	movff	move@mR+1,fullSpeedAhead@mR+1
  3461   001524  C0A9  F029         	movff	move@straightSpeed,fullSpeedAhead@straightSpeed
  3462   001528  C0AC  F02A         	movff	move@straightRamp,fullSpeedAhead@straightRamp
  3463   00152C  EC27  F025         	call	_fullSpeedAhead	;wreg free
  3464                           
  3465                           ;dc_motor.c: 173:     }
  3466   001530  EF1D  F00B         	goto	l586
  3467   001534                     l5770:
  3468                           
  3469                           ; BSR set to: 0
  3470   001534  0E08               	movlw	8
  3471   001536  19A3               	xorwf	move@color& (0+255),w,b
  3472   001538  A4D8               	btfss	status,2,c
  3473   00153A  EFA1  F00A         	goto	u5031
  3474   00153E  EFA3  F00A         	goto	u5030
  3475   001542                     u5031:
  3476   001542  EFE1  F00A         	goto	l5778
  3477   001546                     u5030:
  3478   001546                     
  3479                           ; BSR set to: 0
  3480                           ;dc_motor.c: 176:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3481   001546  C09F  F025         	movff	move@mL,reverseShort@mL
  3482   00154A  C0A0  F026         	movff	move@mL+1,reverseShort@mL+1
  3483   00154E  C0A1  F027         	movff	move@mR,reverseShort@mR
  3484   001552  C0A2  F028         	movff	move@mR+1,reverseShort@mR+1
  3485   001556  C0A9  F029         	movff	move@straightSpeed,reverseShort@straightSpeed
  3486   00155A  C0AC  F02A         	movff	move@straightRamp,reverseShort@straightRamp
  3487   00155E  ECAF  F01E         	call	_reverseShort	;wreg free
  3488   001562                     
  3489                           ;dc_motor.c: 177:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3490   001562  0E05               	movlw	5
  3491   001564  0100               	movlb	0	; () banked
  3492   001566  6FB1               	movwf	(??_move+1)& (0+255),b
  3493   001568  0E0F               	movlw	15
  3494   00156A  6FB0               	movwf	??_move& (0+255),b
  3495   00156C  0EF1               	movlw	241
  3496   00156E                     u5727:
  3497   00156E  2EE8               	decfsz	wreg,f,c
  3498   001570  D7FE               	bra	u5727
  3499   001572  2FB0               	decfsz	??_move& (0+255),f,b
  3500   001574  D7FC               	bra	u5727
  3501   001576  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3502   001578  D7FA               	bra	u5727
  3503   00157A                     
  3504                           ;dc_motor.c: 178:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3505   00157A  C09F  F034         	movff	move@mL,returnHome@mL
  3506   00157E  C0A0  F035         	movff	move@mL+1,returnHome@mL+1
  3507   001582  C0A1  F036         	movff	move@mR,returnHome@mR
  3508   001586  C0A2  F037         	movff	move@mR+1,returnHome@mR+1
  3509   00158A  C0A4  F038         	movff	move@moveSequence,returnHome@moveSequence
  3510   00158E  C0A5  F039         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3511   001592  C0A6  F03A         	movff	move@straightTime,returnHome@straightTime
  3512   001596  C0A7  F03B         	movff	move@straightTime+1,returnHome@straightTime+1
  3513   00159A  C0A8  F03C         	movff	move@curMove,returnHome@curMove
  3514   00159E  C0A9  F03D         	movff	move@straightSpeed,returnHome@straightSpeed
  3515   0015A2  C0AA  F03E         	movff	move@reverseDuration,returnHome@reverseDuration
  3516   0015A6  C0AB  F03F         	movff	move@reverseDuration+1,returnHome@reverseDuration+1
  3517   0015AA  C0AC  F040         	movff	move@straightRamp,returnHome@straightRamp
  3518   0015AE  C0AD  F041         	movff	move@turnSpeed,returnHome@turnSpeed
  3519   0015B2  C0AE  F042         	movff	move@turnDuration,returnHome@turnDuration
  3520   0015B6  C0AF  F043         	movff	move@turnRamp,returnHome@turnRamp
  3521   0015BA  EC1E  F00B         	call	_returnHome	;wreg free
  3522                           
  3523                           ;dc_motor.c: 179:     }
  3524   0015BE  EF1D  F00B         	goto	l586
  3525   0015C2                     l5778:
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;dc_motor.c: 182:         reverseShort(mL, mR, straightSpeed, straightRamp);
  3529   0015C2  C09F  F025         	movff	move@mL,reverseShort@mL
  3530   0015C6  C0A0  F026         	movff	move@mL+1,reverseShort@mL+1
  3531   0015CA  C0A1  F027         	movff	move@mR,reverseShort@mR
  3532   0015CE  C0A2  F028         	movff	move@mR+1,reverseShort@mR+1
  3533   0015D2  C0A9  F029         	movff	move@straightSpeed,reverseShort@straightSpeed
  3534   0015D6  C0AC  F02A         	movff	move@straightRamp,reverseShort@straightRamp
  3535   0015DA  ECAF  F01E         	call	_reverseShort	;wreg free
  3536   0015DE                     
  3537                           ;dc_motor.c: 183:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3538   0015DE  0E05               	movlw	5
  3539   0015E0  0100               	movlb	0	; () banked
  3540   0015E2  6FB1               	movwf	(??_move+1)& (0+255),b
  3541   0015E4  0E0F               	movlw	15
  3542   0015E6  6FB0               	movwf	??_move& (0+255),b
  3543   0015E8  0EF1               	movlw	241
  3544   0015EA                     u5737:
  3545   0015EA  2EE8               	decfsz	wreg,f,c
  3546   0015EC  D7FE               	bra	u5737
  3547   0015EE  2FB0               	decfsz	??_move& (0+255),f,b
  3548   0015F0  D7FC               	bra	u5737
  3549   0015F2  2FB1               	decfsz	(??_move+1)& (0+255),f,b
  3550   0015F4  D7FA               	bra	u5737
  3551   0015F6                     
  3552                           ;dc_motor.c: 184:         returnHome(mL, mR, moveSequence, straightTime, curMove, straig
      +                          htSpeed, reverseDuration, straightRamp, turnSpeed, turnDuration, turnRamp);
  3553   0015F6  C09F  F034         	movff	move@mL,returnHome@mL
  3554   0015FA  C0A0  F035         	movff	move@mL+1,returnHome@mL+1
  3555   0015FE  C0A1  F036         	movff	move@mR,returnHome@mR
  3556   001602  C0A2  F037         	movff	move@mR+1,returnHome@mR+1
  3557   001606  C0A4  F038         	movff	move@moveSequence,returnHome@moveSequence
  3558   00160A  C0A5  F039         	movff	move@moveSequence+1,returnHome@moveSequence+1
  3559   00160E  C0A6  F03A         	movff	move@straightTime,returnHome@straightTime
  3560   001612  C0A7  F03B         	movff	move@straightTime+1,returnHome@straightTime+1
  3561   001616  C0A8  F03C         	movff	move@curMove,returnHome@curMove
  3562   00161A  C0A9  F03D         	movff	move@straightSpeed,returnHome@straightSpeed
  3563   00161E  C0AA  F03E         	movff	move@reverseDuration,returnHome@reverseDuration
  3564   001622  C0AB  F03F         	movff	move@reverseDuration+1,returnHome@reverseDuration+1
  3565   001626  C0AC  F040         	movff	move@straightRamp,returnHome@straightRamp
  3566   00162A  C0AD  F041         	movff	move@turnSpeed,returnHome@turnSpeed
  3567   00162E  C0AE  F042         	movff	move@turnDuration,returnHome@turnDuration
  3568   001632  C0AF  F043         	movff	move@turnRamp,returnHome@turnRamp
  3569   001636  EC1E  F00B         	call	_returnHome	;wreg free
  3570   00163A                     l586:
  3571   00163A  0012               	return		;funcret
  3572   00163C                     __end_of_move:
  3573                           	callstack 0
  3574                           
  3575 ;; *************** function _reverseShort *****************
  3576 ;; Defined at:
  3577 ;;		line 564 in file "dc_motor.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  3580 ;;		 -> main@motorL(10), 
  3581 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  3582 ;;		 -> main@motorR(10), 
  3583 ;;  straightSpee    1   40[COMRAM] unsigned char 
  3584 ;;  straightRamp    1   41[COMRAM] unsigned char 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;  cur_power       2   48[COMRAM] int 
  3587 ;;  i               2   46[COMRAM] int 
  3588 ;;  shortReverse    1   45[COMRAM] unsigned char 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3598 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3599 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3600 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3601 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3602 ;;Total ram usage:       14 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 8
  3605 ;; This function calls:
  3606 ;;		_setMotorPWM
  3607 ;; This function is called by:
  3608 ;;		_move
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text3
  3613   003D5E                     __ptext3:
  3614                           	callstack 0
  3615   003D5E                     _reverseShort:
  3616                           	callstack 21
  3617   003D5E                     
  3618                           ;dc_motor.c: 564: void reverseShort(DC_motor *mL, DC_motor *mR, char straightSpeed, unsi
      +                          gned char straightRamp);dc_motor.c: 565: {;dc_motor.c: 566:     unsigned char shortRever
      +                          seDuration = 20;
  3619   003D5E  0E14               	movlw	20
  3620   003D60  6E2E               	movwf	reverseShort@shortReverseDuration^0,c
  3621   003D62                     
  3622                           ;dc_motor.c: 568:     mL->direction = 0;
  3623   003D62  EE20 F001          	lfsr	2,1
  3624   003D66  5025               	movf	reverseShort@mL^0,w,c
  3625   003D68  26D9               	addwf	fsr2l,f,c
  3626   003D6A  5026               	movf	(reverseShort@mL+1)^0,w,c
  3627   003D6C  22DA               	addwfc	fsr2h,f,c
  3628   003D6E  6ADF               	clrf	indf2,c
  3629   003D70                     
  3630                           ;dc_motor.c: 569:     mR->direction = 0;
  3631   003D70  EE20 F001          	lfsr	2,1
  3632   003D74  5027               	movf	reverseShort@mR^0,w,c
  3633   003D76  26D9               	addwf	fsr2l,f,c
  3634   003D78  5028               	movf	(reverseShort@mR+1)^0,w,c
  3635   003D7A  22DA               	addwfc	fsr2h,f,c
  3636   003D7C  6ADF               	clrf	indf2,c
  3637                           
  3638                           ;dc_motor.c: 570:     int i;;dc_motor.c: 571:     int cur_power;;dc_motor.c: 572:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  3639   003D7E  0E00               	movlw	0
  3640   003D80  6E32               	movwf	(reverseShort@cur_power+1)^0,c
  3641   003D82  0E01               	movlw	1
  3642   003D84  6E31               	movwf	reverseShort@cur_power^0,c
  3643   003D86  EF0F  F01F         	goto	l5090
  3644   003D8A                     l5076:
  3645                           
  3646                           ;dc_motor.c: 573:         mL->power = cur_power+mL->compensation;
  3647   003D8A  EE20 F009          	lfsr	2,9
  3648   003D8E  5025               	movf	reverseShort@mL^0,w,c
  3649   003D90  26D9               	addwf	fsr2l,f,c
  3650   003D92  5026               	movf	(reverseShort@mL+1)^0,w,c
  3651   003D94  22DA               	addwfc	fsr2h,f,c
  3652   003D96  50DF               	movf	indf2,w,c
  3653   003D98  2431               	addwf	reverseShort@cur_power^0,w,c
  3654   003D9A  C025  FFD9         	movff	reverseShort@mL,fsr2l
  3655   003D9E  C026  FFDA         	movff	reverseShort@mL+1,fsr2h
  3656   003DA2  6EDF               	movwf	indf2,c
  3657                           
  3658                           ;dc_motor.c: 574:         mR->power = cur_power+mR->compensation;
  3659   003DA4  EE20 F009          	lfsr	2,9
  3660   003DA8  5027               	movf	reverseShort@mR^0,w,c
  3661   003DAA  26D9               	addwf	fsr2l,f,c
  3662   003DAC  5028               	movf	(reverseShort@mR+1)^0,w,c
  3663   003DAE  22DA               	addwfc	fsr2h,f,c
  3664   003DB0  50DF               	movf	indf2,w,c
  3665   003DB2  2431               	addwf	reverseShort@cur_power^0,w,c
  3666   003DB4  C027  FFD9         	movff	reverseShort@mR,fsr2l
  3667   003DB8  C028  FFDA         	movff	reverseShort@mR+1,fsr2h
  3668   003DBC  6EDF               	movwf	indf2,c
  3669   003DBE                     
  3670                           ;dc_motor.c: 575:         setMotorPWM(mL);
  3671   003DBE  C025  F01F         	movff	reverseShort@mL,setMotorPWM@m
  3672   003DC2  C026  F020         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3673   003DC6  EC67  F023         	call	_setMotorPWM	;wreg free
  3674   003DCA                     
  3675                           ;dc_motor.c: 576:         setMotorPWM(mR);
  3676   003DCA  C027  F01F         	movff	reverseShort@mR,setMotorPWM@m
  3677   003DCE  C028  F020         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3678   003DD2  EC67  F023         	call	_setMotorPWM	;wreg free
  3679   003DD6                     
  3680                           ;dc_motor.c: 577:         for (i=0;i<straightRamp;i++) {
  3681   003DD6  0E00               	movlw	0
  3682   003DD8  6E30               	movwf	(reverseShort@i+1)^0,c
  3683   003DDA  0E00               	movlw	0
  3684   003DDC  6E2F               	movwf	reverseShort@i^0,c
  3685   003DDE  EFFB  F01E         	goto	l740
  3686   003DE2                     l5084:
  3687                           
  3688                           ;dc_motor.c: 578:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3689   003DE2  0E68               	movlw	104
  3690   003DE4  6E2B               	movwf	??_reverseShort^0,c
  3691   003DE6  0EE4               	movlw	228
  3692   003DE8                     u5747:
  3693   003DE8  2EE8               	decfsz	wreg,f,c
  3694   003DEA  D7FE               	bra	u5747
  3695   003DEC  2E2B               	decfsz	??_reverseShort^0,f,c
  3696   003DEE  D7FC               	bra	u5747
  3697   003DF0  D000               	nop2	
  3698   003DF2                     
  3699                           ;dc_motor.c: 579:         }
  3700   003DF2  4A2F               	infsnz	reverseShort@i^0,f,c
  3701   003DF4  2A30               	incf	(reverseShort@i+1)^0,f,c
  3702   003DF6                     l740:
  3703   003DF6  502A               	movf	reverseShort@straightRamp^0,w,c
  3704   003DF8  6E2B               	movwf	??_reverseShort^0,c
  3705   003DFA  6A2C               	clrf	(??_reverseShort+1)^0,c
  3706   003DFC  502B               	movf	??_reverseShort^0,w,c
  3707   003DFE  5C2F               	subwf	reverseShort@i^0,w,c
  3708   003E00  5030               	movf	(reverseShort@i+1)^0,w,c
  3709   003E02  0A80               	xorlw	128
  3710   003E04  6E2D               	movwf	(??_reverseShort+2)^0,c
  3711   003E06  502C               	movf	(??_reverseShort+1)^0,w,c
  3712   003E08  0A80               	xorlw	128
  3713   003E0A  582D               	subwfb	(??_reverseShort+2)^0,w,c
  3714   003E0C  A0D8               	btfss	status,0,c
  3715   003E0E  EF0B  F01F         	goto	u4191
  3716   003E12  EF0D  F01F         	goto	u4190
  3717   003E16                     u4191:
  3718   003E16  EFF1  F01E         	goto	l5084
  3719   003E1A                     u4190:
  3720   003E1A                     
  3721                           ;dc_motor.c: 580:     }
  3722   003E1A  4A31               	infsnz	reverseShort@cur_power^0,f,c
  3723   003E1C  2A32               	incf	(reverseShort@cur_power+1)^0,f,c
  3724   003E1E                     l5090:
  3725   003E1E  5029               	movf	reverseShort@straightSpeed^0,w,c
  3726   003E20  6E2B               	movwf	??_reverseShort^0,c
  3727   003E22  6A2C               	clrf	(??_reverseShort+1)^0,c
  3728   003E24  5031               	movf	reverseShort@cur_power^0,w,c
  3729   003E26  5C2B               	subwf	??_reverseShort^0,w,c
  3730   003E28  502C               	movf	(??_reverseShort+1)^0,w,c
  3731   003E2A  0A80               	xorlw	128
  3732   003E2C  6E2D               	movwf	(??_reverseShort+2)^0,c
  3733   003E2E  5032               	movf	(reverseShort@cur_power+1)^0,w,c
  3734   003E30  0A80               	xorlw	128
  3735   003E32  582D               	subwfb	(??_reverseShort+2)^0,w,c
  3736   003E34  B0D8               	btfsc	status,0,c
  3737   003E36  EF1F  F01F         	goto	u4201
  3738   003E3A  EF21  F01F         	goto	u4200
  3739   003E3E                     u4201:
  3740   003E3E  EFC5  F01E         	goto	l5076
  3741   003E42                     u4200:
  3742   003E42                     
  3743                           ;dc_motor.c: 582:     for (i=0;i<shortReverseDuration;i++) {
  3744   003E42  0E00               	movlw	0
  3745   003E44  6E30               	movwf	(reverseShort@i+1)^0,c
  3746   003E46  0E00               	movlw	0
  3747   003E48  6E2F               	movwf	reverseShort@i^0,c
  3748   003E4A  EF31  F01F         	goto	l744
  3749   003E4E                     l5094:
  3750                           
  3751                           ;dc_motor.c: 583:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3752   003E4E  0E68               	movlw	104
  3753   003E50  6E2B               	movwf	??_reverseShort^0,c
  3754   003E52  0EE4               	movlw	228
  3755   003E54                     u5757:
  3756   003E54  2EE8               	decfsz	wreg,f,c
  3757   003E56  D7FE               	bra	u5757
  3758   003E58  2E2B               	decfsz	??_reverseShort^0,f,c
  3759   003E5A  D7FC               	bra	u5757
  3760   003E5C  D000               	nop2	
  3761   003E5E                     
  3762                           ;dc_motor.c: 584:         }
  3763   003E5E  4A2F               	infsnz	reverseShort@i^0,f,c
  3764   003E60  2A30               	incf	(reverseShort@i+1)^0,f,c
  3765   003E62                     l744:
  3766   003E62  502E               	movf	reverseShort@shortReverseDuration^0,w,c
  3767   003E64  6E2B               	movwf	??_reverseShort^0,c
  3768   003E66  6A2C               	clrf	(??_reverseShort+1)^0,c
  3769   003E68  502B               	movf	??_reverseShort^0,w,c
  3770   003E6A  5C2F               	subwf	reverseShort@i^0,w,c
  3771   003E6C  5030               	movf	(reverseShort@i+1)^0,w,c
  3772   003E6E  0A80               	xorlw	128
  3773   003E70  6E2D               	movwf	(??_reverseShort+2)^0,c
  3774   003E72  502C               	movf	(??_reverseShort+1)^0,w,c
  3775   003E74  0A80               	xorlw	128
  3776   003E76  582D               	subwfb	(??_reverseShort+2)^0,w,c
  3777   003E78  A0D8               	btfss	status,0,c
  3778   003E7A  EF41  F01F         	goto	u4211
  3779   003E7E  EF43  F01F         	goto	u4210
  3780   003E82                     u4211:
  3781   003E82  EF27  F01F         	goto	l5094
  3782   003E86                     u4210:
  3783   003E86                     
  3784                           ;dc_motor.c: 586:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  3785   003E86  C029  F031         	movff	reverseShort@straightSpeed,reverseShort@cur_power
  3786   003E8A  6A32               	clrf	(reverseShort@cur_power+1)^0,c
  3787   003E8C                     l5098:
  3788   003E8C  BE32               	btfsc	(reverseShort@cur_power+1)^0,7,c
  3789   003E8E  EF4D  F01F         	goto	u4220
  3790   003E92  EF4B  F01F         	goto	u4221
  3791   003E96                     u4221:
  3792   003E96  EF4F  F01F         	goto	l5102
  3793   003E9A                     u4220:
  3794   003E9A  EF9C  F01F         	goto	l5118
  3795   003E9E                     l5102:
  3796                           
  3797                           ;dc_motor.c: 587:         mL->power = cur_power+mL->compensation;
  3798   003E9E  EE20 F009          	lfsr	2,9
  3799   003EA2  5025               	movf	reverseShort@mL^0,w,c
  3800   003EA4  26D9               	addwf	fsr2l,f,c
  3801   003EA6  5026               	movf	(reverseShort@mL+1)^0,w,c
  3802   003EA8  22DA               	addwfc	fsr2h,f,c
  3803   003EAA  50DF               	movf	indf2,w,c
  3804   003EAC  2431               	addwf	reverseShort@cur_power^0,w,c
  3805   003EAE  C025  FFD9         	movff	reverseShort@mL,fsr2l
  3806   003EB2  C026  FFDA         	movff	reverseShort@mL+1,fsr2h
  3807   003EB6  6EDF               	movwf	indf2,c
  3808                           
  3809                           ;dc_motor.c: 588:         mR->power = cur_power+mR->compensation;
  3810   003EB8  EE20 F009          	lfsr	2,9
  3811   003EBC  5027               	movf	reverseShort@mR^0,w,c
  3812   003EBE  26D9               	addwf	fsr2l,f,c
  3813   003EC0  5028               	movf	(reverseShort@mR+1)^0,w,c
  3814   003EC2  22DA               	addwfc	fsr2h,f,c
  3815   003EC4  50DF               	movf	indf2,w,c
  3816   003EC6  2431               	addwf	reverseShort@cur_power^0,w,c
  3817   003EC8  C027  FFD9         	movff	reverseShort@mR,fsr2l
  3818   003ECC  C028  FFDA         	movff	reverseShort@mR+1,fsr2h
  3819   003ED0  6EDF               	movwf	indf2,c
  3820   003ED2                     
  3821                           ;dc_motor.c: 589:         setMotorPWM(mL);
  3822   003ED2  C025  F01F         	movff	reverseShort@mL,setMotorPWM@m
  3823   003ED6  C026  F020         	movff	reverseShort@mL+1,setMotorPWM@m+1
  3824   003EDA  EC67  F023         	call	_setMotorPWM	;wreg free
  3825   003EDE                     
  3826                           ;dc_motor.c: 590:         setMotorPWM(mR);
  3827   003EDE  C027  F01F         	movff	reverseShort@mR,setMotorPWM@m
  3828   003EE2  C028  F020         	movff	reverseShort@mR+1,setMotorPWM@m+1
  3829   003EE6  EC67  F023         	call	_setMotorPWM	;wreg free
  3830   003EEA                     
  3831                           ;dc_motor.c: 591:         for (i=0;i<straightRamp;i++) {
  3832   003EEA  0E00               	movlw	0
  3833   003EEC  6E30               	movwf	(reverseShort@i+1)^0,c
  3834   003EEE  0E00               	movlw	0
  3835   003EF0  6E2F               	movwf	reverseShort@i^0,c
  3836   003EF2  EF85  F01F         	goto	l749
  3837   003EF6                     l5110:
  3838                           
  3839                           ;dc_motor.c: 592:             _delay((unsigned long)((5)*(64000000/4000.0)));
  3840   003EF6  0E68               	movlw	104
  3841   003EF8  6E2B               	movwf	??_reverseShort^0,c
  3842   003EFA  0EE4               	movlw	228
  3843   003EFC                     u5767:
  3844   003EFC  2EE8               	decfsz	wreg,f,c
  3845   003EFE  D7FE               	bra	u5767
  3846   003F00  2E2B               	decfsz	??_reverseShort^0,f,c
  3847   003F02  D7FC               	bra	u5767
  3848   003F04  D000               	nop2	
  3849   003F06                     
  3850                           ;dc_motor.c: 593:         }
  3851   003F06  4A2F               	infsnz	reverseShort@i^0,f,c
  3852   003F08  2A30               	incf	(reverseShort@i+1)^0,f,c
  3853   003F0A                     l749:
  3854   003F0A  502A               	movf	reverseShort@straightRamp^0,w,c
  3855   003F0C  6E2B               	movwf	??_reverseShort^0,c
  3856   003F0E  6A2C               	clrf	(??_reverseShort+1)^0,c
  3857   003F10  502B               	movf	??_reverseShort^0,w,c
  3858   003F12  5C2F               	subwf	reverseShort@i^0,w,c
  3859   003F14  5030               	movf	(reverseShort@i+1)^0,w,c
  3860   003F16  0A80               	xorlw	128
  3861   003F18  6E2D               	movwf	(??_reverseShort+2)^0,c
  3862   003F1A  502C               	movf	(??_reverseShort+1)^0,w,c
  3863   003F1C  0A80               	xorlw	128
  3864   003F1E  582D               	subwfb	(??_reverseShort+2)^0,w,c
  3865   003F20  A0D8               	btfss	status,0,c
  3866   003F22  EF95  F01F         	goto	u4231
  3867   003F26  EF97  F01F         	goto	u4230
  3868   003F2A                     u4231:
  3869   003F2A  EF7B  F01F         	goto	l5110
  3870   003F2E                     u4230:
  3871   003F2E                     
  3872                           ;dc_motor.c: 594:     }
  3873   003F2E  0631               	decf	reverseShort@cur_power^0,f,c
  3874   003F30  A0D8               	btfss	status,0,c
  3875   003F32  0632               	decf	(reverseShort@cur_power+1)^0,f,c
  3876   003F34  EF46  F01F         	goto	l5098
  3877   003F38                     l5118:
  3878                           
  3879                           ;dc_motor.c: 595:     mL->power = 0;
  3880   003F38  C025  FFD9         	movff	reverseShort@mL,fsr2l
  3881   003F3C  C026  FFDA         	movff	reverseShort@mL+1,fsr2h
  3882   003F40  6ADF               	clrf	indf2,c
  3883                           
  3884                           ;dc_motor.c: 596:     mR->power = 0;
  3885   003F42  C027  FFD9         	movff	reverseShort@mR,fsr2l
  3886   003F46  C028  FFDA         	movff	reverseShort@mR+1,fsr2h
  3887   003F4A  6ADF               	clrf	indf2,c
  3888   003F4C  0012               	return		;funcret
  3889   003F4E                     __end_of_reverseShort:
  3890                           	callstack 0
  3891                           
  3892 ;; *************** function _returnHome *****************
  3893 ;; Defined at:
  3894 ;;		line 189 in file "dc_motor.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  mL              2   51[COMRAM] PTR struct DC_motor
  3897 ;;		 -> main@motorL(10), 
  3898 ;;  mR              2   53[COMRAM] PTR struct DC_motor
  3899 ;;		 -> main@motorR(10), 
  3900 ;;  moveSequence    2   55[COMRAM] PTR unsigned char 
  3901 ;;		 -> main@moveSequence(40), 
  3902 ;;  straightTime    2   57[COMRAM] PTR unsigned int 
  3903 ;;		 -> main@straightTime(82), 
  3904 ;;  curMove         1   59[COMRAM] unsigned char 
  3905 ;;  straightSpee    1   60[COMRAM] unsigned char 
  3906 ;;  reverseDurat    2   61[COMRAM] unsigned int 
  3907 ;;  straightRamp    1   63[COMRAM] unsigned char 
  3908 ;;  turnSpeed       1   64[COMRAM] unsigned char 
  3909 ;;  turnDuration    1   65[COMRAM] unsigned char 
  3910 ;;  turnRamp        1   66[COMRAM] unsigned char 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;  i               1    0[BANK0 ] unsigned char 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      void 
  3915 ;; Registers used:
  3916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3922 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;      Totals:        22       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;Total ram usage:       23 bytes
  3927 ;; Hardware stack levels used: 1
  3928 ;; Hardware stack levels required when called: 9
  3929 ;; This function calls:
  3930 ;;		_fullSpeedAhead
  3931 ;;		_get16bitTMR0val
  3932 ;;		_resetTimer
  3933 ;;		_reverseOneSquare
  3934 ;;		_stop
  3935 ;;		_turnLeft
  3936 ;;		_turnRight
  3937 ;; This function is called by:
  3938 ;;		_move
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text4
  3943   00163C                     __ptext4:
  3944                           	callstack 0
  3945   00163C                     _returnHome:
  3946                           	callstack 20
  3947   00163C                     
  3948                           ;dc_motor.c: 189: void returnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSequenc
      +                          e, unsigned int *straightTime, char curMove, char straightSpeed, unsigned int reverseDur
      +                          ation, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsigned 
      +                          char turnRamp);dc_motor.c: 190: {;dc_motor.c: 191:     turnLeft(mL, mR, turnSpeed, turnD
      +                          uration, turnRamp);
  3949   00163C  C034  F025         	movff	returnHome@mL,turnLeft@mL
  3950   001640  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  3951   001644  C036  F027         	movff	returnHome@mR,turnLeft@mR
  3952   001648  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  3953   00164C  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3954   001650  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3955   001654  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3956   001658  EC7A  F022         	call	_turnLeft	;wreg free
  3957   00165C                     
  3958                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3959   00165C  0E05               	movlw	5
  3960   00165E  6E45               	movwf	(??_returnHome+1)^0,c
  3961   001660  0E0F               	movlw	15
  3962   001662  6E44               	movwf	??_returnHome^0,c
  3963   001664  0EF1               	movlw	241
  3964   001666                     u5777:
  3965   001666  2EE8               	decfsz	wreg,f,c
  3966   001668  D7FE               	bra	u5777
  3967   00166A  2E44               	decfsz	??_returnHome^0,f,c
  3968   00166C  D7FC               	bra	u5777
  3969   00166E  2E45               	decfsz	(??_returnHome+1)^0,f,c
  3970   001670  D7FA               	bra	u5777
  3971   001672  0000               	nop	
  3972   001674                     
  3973                           ;dc_motor.c: 193:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3974   001674  C034  F025         	movff	returnHome@mL,turnLeft@mL
  3975   001678  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  3976   00167C  C036  F027         	movff	returnHome@mR,turnLeft@mR
  3977   001680  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  3978   001684  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  3979   001688  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  3980   00168C  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  3981   001690  EC7A  F022         	call	_turnLeft	;wreg free
  3982                           
  3983                           ;dc_motor.c: 194:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3984   001694  0E05               	movlw	5
  3985   001696  6E45               	movwf	(??_returnHome+1)^0,c
  3986   001698  0E0F               	movlw	15
  3987   00169A  6E44               	movwf	??_returnHome^0,c
  3988   00169C  0EF1               	movlw	241
  3989   00169E                     u5787:
  3990   00169E  2EE8               	decfsz	wreg,f,c
  3991   0016A0  D7FE               	bra	u5787
  3992   0016A2  2E44               	decfsz	??_returnHome^0,f,c
  3993   0016A4  D7FC               	bra	u5787
  3994   0016A6  2E45               	decfsz	(??_returnHome+1)^0,f,c
  3995   0016A8  D7FA               	bra	u5787
  3996   0016AA  0000               	nop	
  3997   0016AC                     
  3998                           ;dc_motor.c: 195:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  3999   0016AC  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4000   0016B0  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4001   0016B4  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4002   0016B8  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4003   0016BC  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4004   0016C0  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4005   0016C4  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4006   0016C8  EC7A  F022         	call	_turnLeft	;wreg free
  4007   0016CC                     
  4008                           ;dc_motor.c: 196:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4009   0016CC  0E05               	movlw	5
  4010   0016CE  6E45               	movwf	(??_returnHome+1)^0,c
  4011   0016D0  0E0F               	movlw	15
  4012   0016D2  6E44               	movwf	??_returnHome^0,c
  4013   0016D4  0EF1               	movlw	241
  4014   0016D6                     u5797:
  4015   0016D6  2EE8               	decfsz	wreg,f,c
  4016   0016D8  D7FE               	bra	u5797
  4017   0016DA  2E44               	decfsz	??_returnHome^0,f,c
  4018   0016DC  D7FC               	bra	u5797
  4019   0016DE  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4020   0016E0  D7FA               	bra	u5797
  4021   0016E2  0000               	nop	
  4022                           
  4023                           ;dc_motor.c: 197:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4024   0016E4  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4025   0016E8  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4026   0016EC  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4027   0016F0  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4028   0016F4  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4029   0016F8  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4030   0016FC  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4031   001700  EC7A  F022         	call	_turnLeft	;wreg free
  4032   001704                     
  4033                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4034   001704  0E05               	movlw	5
  4035   001706  6E45               	movwf	(??_returnHome+1)^0,c
  4036   001708  0E0F               	movlw	15
  4037   00170A  6E44               	movwf	??_returnHome^0,c
  4038   00170C  0EF1               	movlw	241
  4039   00170E                     u5807:
  4040   00170E  2EE8               	decfsz	wreg,f,c
  4041   001710  D7FE               	bra	u5807
  4042   001712  2E44               	decfsz	??_returnHome^0,f,c
  4043   001714  D7FC               	bra	u5807
  4044   001716  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4045   001718  D7FA               	bra	u5807
  4046   00171A  0000               	nop	
  4047   00171C                     
  4048                           ;dc_motor.c: 199:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4049   00171C  C034  F025         	movff	returnHome@mL,fullSpeedAhead@mL
  4050   001720  C035  F026         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4051   001724  C036  F027         	movff	returnHome@mR,fullSpeedAhead@mR
  4052   001728  C037  F028         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4053   00172C  C03D  F029         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4054   001730  C040  F02A         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4055   001734  EC27  F025         	call	_fullSpeedAhead	;wreg free
  4056   001738                     
  4057                           ;dc_motor.c: 200:     resetTimer();
  4058   001738  EC10  F02A         	call	_resetTimer	;wreg free
  4059   00173C                     l5136:
  4060   00173C  503C               	movf	returnHome@curMove^0,w,c
  4061   00173E  0D02               	mullw	2
  4062   001740  CFF3 F044          	movff	prodl,??_returnHome
  4063   001744  CFF4 F045          	movff	prodh,??_returnHome+1
  4064   001748  5044               	movf	??_returnHome^0,w,c
  4065   00174A  243A               	addwf	returnHome@straightTime^0,w,c
  4066   00174C  6ED9               	movwf	fsr2l,c
  4067   00174E  5045               	movf	(??_returnHome+1)^0,w,c
  4068   001750  203B               	addwfc	(returnHome@straightTime+1)^0,w,c
  4069   001752  6EDA               	movwf	fsr2h,c
  4070   001754  CFDE F046          	movff	postinc2,??_returnHome+2
  4071   001758  CFDD F047          	movff	postdec2,??_returnHome+3
  4072   00175C  0E10               	movlw	16
  4073   00175E  2446               	addwf	(??_returnHome+2)^0,w,c
  4074   001760  6E48               	movwf	(??_returnHome+4)^0,c
  4075   001762  0E27               	movlw	39
  4076   001764  2047               	addwfc	(??_returnHome+3)^0,w,c
  4077   001766  6E49               	movwf	(??_returnHome+5)^0,c
  4078   001768  EC21  F029         	call	_get16bitTMR0val	;wreg free
  4079   00176C  5048               	movf	(??_returnHome+4)^0,w,c
  4080   00176E  5C12               	subwf	?_get16bitTMR0val^0,w,c
  4081   001770  5049               	movf	(??_returnHome+5)^0,w,c
  4082   001772  5813               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4083   001774  A0D8               	btfss	status,0,c
  4084   001776  EFBF  F00B         	goto	u4241
  4085   00177A  EFC1  F00B         	goto	u4240
  4086   00177E                     u4241:
  4087   00177E  EF9E  F00B         	goto	l5136
  4088   001782                     u4240:
  4089   001782                     
  4090                           ;dc_motor.c: 202:     stop(mL, mR, straightRamp);
  4091   001782  C034  F025         	movff	returnHome@mL,stop@mL
  4092   001786  C035  F026         	movff	returnHome@mL+1,stop@mL+1
  4093   00178A  C036  F027         	movff	returnHome@mR,stop@mR
  4094   00178E  C037  F028         	movff	returnHome@mR+1,stop@mR+1
  4095   001792  C040  F029         	movff	returnHome@straightRamp,stop@straightRamp
  4096   001796  ECA3  F024         	call	_stop	;wreg free
  4097   00179A                     
  4098                           ;dc_motor.c: 204:     char i=curMove;
  4099   00179A  C03C  F09E         	movff	returnHome@curMove,returnHome@i
  4100                           
  4101                           ;dc_motor.c: 205:     while (i>0) {
  4102   00179E  EF82  F00E         	goto	l5228
  4103   0017A2                     l5142:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;dc_motor.c: 206:         i--;
  4107   0017A2  079E               	decf	returnHome@i& (0+255),f,b
  4108   0017A4                     
  4109                           ; BSR set to: 0
  4110                           ;dc_motor.c: 208:         if (moveSequence[i] == 1) {
  4111   0017A4  519E               	movf	returnHome@i& (0+255),w,b
  4112   0017A6  2438               	addwf	returnHome@moveSequence^0,w,c
  4113   0017A8  6ED9               	movwf	fsr2l,c
  4114   0017AA  0E00               	movlw	0
  4115   0017AC  2039               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4116   0017AE  6EDA               	movwf	fsr2h,c
  4117   0017B0  04DE               	decf	postinc2,w,c
  4118   0017B2  A4D8               	btfss	status,2,c
  4119   0017B4  EFDE  F00B         	goto	u4251
  4120   0017B8  EFE0  F00B         	goto	u4250
  4121   0017BC                     u4251:
  4122   0017BC  EF1A  F00C         	goto	l5152
  4123   0017C0                     u4250:
  4124   0017C0                     
  4125                           ; BSR set to: 0
  4126                           ;dc_motor.c: 209:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4127   0017C0  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4128   0017C4  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4129   0017C8  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4130   0017CC  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4131   0017D0  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4132   0017D4  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4133   0017D8  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4134   0017DC  EC7A  F022         	call	_turnLeft	;wreg free
  4135   0017E0                     
  4136                           ;dc_motor.c: 210:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4137   0017E0  0E05               	movlw	5
  4138   0017E2  6E45               	movwf	(??_returnHome+1)^0,c
  4139   0017E4  0E0F               	movlw	15
  4140   0017E6  6E44               	movwf	??_returnHome^0,c
  4141   0017E8  0EF1               	movlw	241
  4142   0017EA                     u5817:
  4143   0017EA  2EE8               	decfsz	wreg,f,c
  4144   0017EC  D7FE               	bra	u5817
  4145   0017EE  2E44               	decfsz	??_returnHome^0,f,c
  4146   0017F0  D7FC               	bra	u5817
  4147   0017F2  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4148   0017F4  D7FA               	bra	u5817
  4149   0017F6  0000               	nop	
  4150   0017F8                     
  4151                           ;dc_motor.c: 211:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4152   0017F8  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4153   0017FC  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4154   001800  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4155   001804  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4156   001808  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4157   00180C  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4158   001810  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4159   001814  EC7A  F022         	call	_turnLeft	;wreg free
  4160                           
  4161                           ;dc_motor.c: 212:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4162   001818  0E05               	movlw	5
  4163   00181A  6E45               	movwf	(??_returnHome+1)^0,c
  4164   00181C  0E0F               	movlw	15
  4165   00181E  6E44               	movwf	??_returnHome^0,c
  4166   001820  0EF1               	movlw	241
  4167   001822                     u5827:
  4168   001822  2EE8               	decfsz	wreg,f,c
  4169   001824  D7FE               	bra	u5827
  4170   001826  2E44               	decfsz	??_returnHome^0,f,c
  4171   001828  D7FC               	bra	u5827
  4172   00182A  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4173   00182C  D7FA               	bra	u5827
  4174   00182E  0000               	nop	
  4175                           
  4176                           ;dc_motor.c: 213:         }
  4177   001830  EF4C  F00E         	goto	l595
  4178   001834                     l5152:
  4179                           
  4180                           ; BSR set to: 0
  4181   001834  519E               	movf	returnHome@i& (0+255),w,b
  4182   001836  2438               	addwf	returnHome@moveSequence^0,w,c
  4183   001838  6ED9               	movwf	fsr2l,c
  4184   00183A  0E00               	movlw	0
  4185   00183C  2039               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4186   00183E  6EDA               	movwf	fsr2h,c
  4187   001840  0E02               	movlw	2
  4188   001842  18DE               	xorwf	postinc2,w,c
  4189   001844  A4D8               	btfss	status,2,c
  4190   001846  EF27  F00C         	goto	u4261
  4191   00184A  EF29  F00C         	goto	u4260
  4192   00184E                     u4261:
  4193   00184E  EF63  F00C         	goto	l5160
  4194   001852                     u4260:
  4195   001852                     
  4196                           ; BSR set to: 0
  4197                           ;dc_motor.c: 216:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4198   001852  C034  F025         	movff	returnHome@mL,turnRight@mL
  4199   001856  C035  F026         	movff	returnHome@mL+1,turnRight@mL+1
  4200   00185A  C036  F027         	movff	returnHome@mR,turnRight@mR
  4201   00185E  C037  F028         	movff	returnHome@mR+1,turnRight@mR+1
  4202   001862  C041  F029         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4203   001866  C042  F02A         	movff	returnHome@turnDuration,turnRight@turnDuration
  4204   00186A  C043  F02B         	movff	returnHome@turnRamp,turnRight@turnRamp
  4205   00186E  EC8D  F021         	call	_turnRight	;wreg free
  4206   001872                     
  4207                           ;dc_motor.c: 217:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4208   001872  0E05               	movlw	5
  4209   001874  6E45               	movwf	(??_returnHome+1)^0,c
  4210   001876  0E0F               	movlw	15
  4211   001878  6E44               	movwf	??_returnHome^0,c
  4212   00187A  0EF1               	movlw	241
  4213   00187C                     u5837:
  4214   00187C  2EE8               	decfsz	wreg,f,c
  4215   00187E  D7FE               	bra	u5837
  4216   001880  2E44               	decfsz	??_returnHome^0,f,c
  4217   001882  D7FC               	bra	u5837
  4218   001884  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4219   001886  D7FA               	bra	u5837
  4220   001888  0000               	nop	
  4221   00188A                     
  4222                           ;dc_motor.c: 218:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4223   00188A  C034  F025         	movff	returnHome@mL,turnRight@mL
  4224   00188E  C035  F026         	movff	returnHome@mL+1,turnRight@mL+1
  4225   001892  C036  F027         	movff	returnHome@mR,turnRight@mR
  4226   001896  C037  F028         	movff	returnHome@mR+1,turnRight@mR+1
  4227   00189A  C041  F029         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4228   00189E  C042  F02A         	movff	returnHome@turnDuration,turnRight@turnDuration
  4229   0018A2  C043  F02B         	movff	returnHome@turnRamp,turnRight@turnRamp
  4230   0018A6  EC8D  F021         	call	_turnRight	;wreg free
  4231                           
  4232                           ;dc_motor.c: 219:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4233   0018AA  0E05               	movlw	5
  4234   0018AC  6E45               	movwf	(??_returnHome+1)^0,c
  4235   0018AE  0E0F               	movlw	15
  4236   0018B0  6E44               	movwf	??_returnHome^0,c
  4237   0018B2  0EF1               	movlw	241
  4238   0018B4                     u5847:
  4239   0018B4  2EE8               	decfsz	wreg,f,c
  4240   0018B6  D7FE               	bra	u5847
  4241   0018B8  2E44               	decfsz	??_returnHome^0,f,c
  4242   0018BA  D7FC               	bra	u5847
  4243   0018BC  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4244   0018BE  D7FA               	bra	u5847
  4245   0018C0  0000               	nop	
  4246                           
  4247                           ;dc_motor.c: 220:         }
  4248   0018C2  EF4C  F00E         	goto	l595
  4249   0018C6                     l5160:
  4250                           
  4251                           ; BSR set to: 0
  4252   0018C6  519E               	movf	returnHome@i& (0+255),w,b
  4253   0018C8  2438               	addwf	returnHome@moveSequence^0,w,c
  4254   0018CA  6ED9               	movwf	fsr2l,c
  4255   0018CC  0E00               	movlw	0
  4256   0018CE  2039               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4257   0018D0  6EDA               	movwf	fsr2h,c
  4258   0018D2  0E03               	movlw	3
  4259   0018D4  18DE               	xorwf	postinc2,w,c
  4260   0018D6  A4D8               	btfss	status,2,c
  4261   0018D8  EF70  F00C         	goto	u4271
  4262   0018DC  EF72  F00C         	goto	u4270
  4263   0018E0                     u4271:
  4264   0018E0  EFE4  F00C         	goto	l5174
  4265   0018E4                     u4270:
  4266   0018E4                     
  4267                           ; BSR set to: 0
  4268                           ;dc_motor.c: 223:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4269   0018E4  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4270   0018E8  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4271   0018EC  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4272   0018F0  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4273   0018F4  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4274   0018F8  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4275   0018FC  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4276   001900  EC7A  F022         	call	_turnLeft	;wreg free
  4277   001904                     
  4278                           ;dc_motor.c: 224:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4279   001904  0E05               	movlw	5
  4280   001906  6E45               	movwf	(??_returnHome+1)^0,c
  4281   001908  0E0F               	movlw	15
  4282   00190A  6E44               	movwf	??_returnHome^0,c
  4283   00190C  0EF1               	movlw	241
  4284   00190E                     u5857:
  4285   00190E  2EE8               	decfsz	wreg,f,c
  4286   001910  D7FE               	bra	u5857
  4287   001912  2E44               	decfsz	??_returnHome^0,f,c
  4288   001914  D7FC               	bra	u5857
  4289   001916  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4290   001918  D7FA               	bra	u5857
  4291   00191A  0000               	nop	
  4292   00191C                     
  4293                           ;dc_motor.c: 225:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4294   00191C  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4295   001920  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4296   001924  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4297   001928  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4298   00192C  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4299   001930  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4300   001934  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4301   001938  EC7A  F022         	call	_turnLeft	;wreg free
  4302                           
  4303                           ;dc_motor.c: 226:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4304   00193C  0E05               	movlw	5
  4305   00193E  6E45               	movwf	(??_returnHome+1)^0,c
  4306   001940  0E0F               	movlw	15
  4307   001942  6E44               	movwf	??_returnHome^0,c
  4308   001944  0EF1               	movlw	241
  4309   001946                     u5867:
  4310   001946  2EE8               	decfsz	wreg,f,c
  4311   001948  D7FE               	bra	u5867
  4312   00194A  2E44               	decfsz	??_returnHome^0,f,c
  4313   00194C  D7FC               	bra	u5867
  4314   00194E  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4315   001950  D7FA               	bra	u5867
  4316   001952  0000               	nop	
  4317   001954                     
  4318                           ;dc_motor.c: 227:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4319   001954  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4320   001958  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4321   00195C  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4322   001960  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4323   001964  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4324   001968  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4325   00196C  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4326   001970  EC7A  F022         	call	_turnLeft	;wreg free
  4327   001974                     
  4328                           ;dc_motor.c: 228:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4329   001974  0E05               	movlw	5
  4330   001976  6E45               	movwf	(??_returnHome+1)^0,c
  4331   001978  0E0F               	movlw	15
  4332   00197A  6E44               	movwf	??_returnHome^0,c
  4333   00197C  0EF1               	movlw	241
  4334   00197E                     u5877:
  4335   00197E  2EE8               	decfsz	wreg,f,c
  4336   001980  D7FE               	bra	u5877
  4337   001982  2E44               	decfsz	??_returnHome^0,f,c
  4338   001984  D7FC               	bra	u5877
  4339   001986  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4340   001988  D7FA               	bra	u5877
  4341   00198A  0000               	nop	
  4342                           
  4343                           ;dc_motor.c: 229:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4344   00198C  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4345   001990  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4346   001994  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4347   001998  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4348   00199C  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4349   0019A0  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4350   0019A4  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4351   0019A8  EC7A  F022         	call	_turnLeft	;wreg free
  4352   0019AC                     l5172:
  4353                           
  4354                           ;dc_motor.c: 230:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4355   0019AC  0E05               	movlw	5
  4356   0019AE  6E45               	movwf	(??_returnHome+1)^0,c
  4357   0019B0  0E0F               	movlw	15
  4358   0019B2  6E44               	movwf	??_returnHome^0,c
  4359   0019B4  0EF1               	movlw	241
  4360   0019B6                     u5887:
  4361   0019B6  2EE8               	decfsz	wreg,f,c
  4362   0019B8  D7FE               	bra	u5887
  4363   0019BA  2E44               	decfsz	??_returnHome^0,f,c
  4364   0019BC  D7FC               	bra	u5887
  4365   0019BE  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4366   0019C0  D7FA               	bra	u5887
  4367   0019C2  0000               	nop	
  4368                           
  4369                           ;dc_motor.c: 231:         }
  4370   0019C4  EF4C  F00E         	goto	l595
  4371   0019C8                     l5174:
  4372                           
  4373                           ; BSR set to: 0
  4374   0019C8  519E               	movf	returnHome@i& (0+255),w,b
  4375   0019CA  2438               	addwf	returnHome@moveSequence^0,w,c
  4376   0019CC  6ED9               	movwf	fsr2l,c
  4377   0019CE  0E00               	movlw	0
  4378   0019D0  2039               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4379   0019D2  6EDA               	movwf	fsr2h,c
  4380   0019D4  0E04               	movlw	4
  4381   0019D6  18DE               	xorwf	postinc2,w,c
  4382   0019D8  A4D8               	btfss	status,2,c
  4383   0019DA  EFF1  F00C         	goto	u4281
  4384   0019DE  EFF3  F00C         	goto	u4280
  4385   0019E2                     u4281:
  4386   0019E2  EF3F  F00D         	goto	l5186
  4387   0019E6                     u4280:
  4388   0019E6                     
  4389                           ; BSR set to: 0
  4390                           ;dc_motor.c: 234:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4391   0019E6  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4392   0019EA  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4393   0019EE  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4394   0019F2  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4395   0019F6  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4396   0019FA  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4397   0019FE  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4398   001A02  EC7A  F022         	call	_turnLeft	;wreg free
  4399   001A06                     
  4400                           ;dc_motor.c: 235:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4401   001A06  0E05               	movlw	5
  4402   001A08  6E45               	movwf	(??_returnHome+1)^0,c
  4403   001A0A  0E0F               	movlw	15
  4404   001A0C  6E44               	movwf	??_returnHome^0,c
  4405   001A0E  0EF1               	movlw	241
  4406   001A10                     u5897:
  4407   001A10  2EE8               	decfsz	wreg,f,c
  4408   001A12  D7FE               	bra	u5897
  4409   001A14  2E44               	decfsz	??_returnHome^0,f,c
  4410   001A16  D7FC               	bra	u5897
  4411   001A18  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4412   001A1A  D7FA               	bra	u5897
  4413   001A1C  0000               	nop	
  4414   001A1E                     
  4415                           ;dc_motor.c: 236:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4416   001A1E  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4417   001A22  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4418   001A26  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4419   001A2A  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4420   001A2E  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4421   001A32  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4422   001A36  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4423   001A3A  EC7A  F022         	call	_turnLeft	;wreg free
  4424                           
  4425                           ;dc_motor.c: 237:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4426   001A3E  0E05               	movlw	5
  4427   001A40  6E45               	movwf	(??_returnHome+1)^0,c
  4428   001A42  0E0F               	movlw	15
  4429   001A44  6E44               	movwf	??_returnHome^0,c
  4430   001A46  0EF1               	movlw	241
  4431   001A48                     u5907:
  4432   001A48  2EE8               	decfsz	wreg,f,c
  4433   001A4A  D7FE               	bra	u5907
  4434   001A4C  2E44               	decfsz	??_returnHome^0,f,c
  4435   001A4E  D7FC               	bra	u5907
  4436   001A50  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4437   001A52  D7FA               	bra	u5907
  4438   001A54  0000               	nop	
  4439   001A56                     
  4440                           ;dc_motor.c: 238:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4441   001A56  C034  F025         	movff	returnHome@mL,reverseOneSquare@mL
  4442   001A5A  C035  F026         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4443   001A5E  C036  F027         	movff	returnHome@mR,reverseOneSquare@mR
  4444   001A62  C037  F028         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4445   001A66  C03D  F029         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4446   001A6A  C03E  F02A         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4447   001A6E  C03F  F02B         	movff	returnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  4448   001A72  C040  F02C         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4449   001A76  EC9E  F020         	call	_reverseOneSquare	;wreg free
  4450   001A7A  EFD6  F00C         	goto	l5172
  4451   001A7E                     l5186:
  4452                           
  4453                           ; BSR set to: 0
  4454   001A7E  519E               	movf	returnHome@i& (0+255),w,b
  4455   001A80  2438               	addwf	returnHome@moveSequence^0,w,c
  4456   001A82  6ED9               	movwf	fsr2l,c
  4457   001A84  0E00               	movlw	0
  4458   001A86  2039               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4459   001A88  6EDA               	movwf	fsr2h,c
  4460   001A8A  0E05               	movlw	5
  4461   001A8C  18DE               	xorwf	postinc2,w,c
  4462   001A8E  A4D8               	btfss	status,2,c
  4463   001A90  EF4C  F00D         	goto	u4291
  4464   001A94  EF4E  F00D         	goto	u4290
  4465   001A98                     u4291:
  4466   001A98  EF9A  F00D         	goto	l5198
  4467   001A9C                     u4290:
  4468   001A9C                     
  4469                           ; BSR set to: 0
  4470                           ;dc_motor.c: 243:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4471   001A9C  C034  F025         	movff	returnHome@mL,turnRight@mL
  4472   001AA0  C035  F026         	movff	returnHome@mL+1,turnRight@mL+1
  4473   001AA4  C036  F027         	movff	returnHome@mR,turnRight@mR
  4474   001AA8  C037  F028         	movff	returnHome@mR+1,turnRight@mR+1
  4475   001AAC  C041  F029         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4476   001AB0  C042  F02A         	movff	returnHome@turnDuration,turnRight@turnDuration
  4477   001AB4  C043  F02B         	movff	returnHome@turnRamp,turnRight@turnRamp
  4478   001AB8  EC8D  F021         	call	_turnRight	;wreg free
  4479   001ABC                     
  4480                           ;dc_motor.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4481   001ABC  0E05               	movlw	5
  4482   001ABE  6E45               	movwf	(??_returnHome+1)^0,c
  4483   001AC0  0E0F               	movlw	15
  4484   001AC2  6E44               	movwf	??_returnHome^0,c
  4485   001AC4  0EF1               	movlw	241
  4486   001AC6                     u5917:
  4487   001AC6  2EE8               	decfsz	wreg,f,c
  4488   001AC8  D7FE               	bra	u5917
  4489   001ACA  2E44               	decfsz	??_returnHome^0,f,c
  4490   001ACC  D7FC               	bra	u5917
  4491   001ACE  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4492   001AD0  D7FA               	bra	u5917
  4493   001AD2  0000               	nop	
  4494   001AD4                     
  4495                           ;dc_motor.c: 245:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4496   001AD4  C034  F025         	movff	returnHome@mL,turnRight@mL
  4497   001AD8  C035  F026         	movff	returnHome@mL+1,turnRight@mL+1
  4498   001ADC  C036  F027         	movff	returnHome@mR,turnRight@mR
  4499   001AE0  C037  F028         	movff	returnHome@mR+1,turnRight@mR+1
  4500   001AE4  C041  F029         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4501   001AE8  C042  F02A         	movff	returnHome@turnDuration,turnRight@turnDuration
  4502   001AEC  C043  F02B         	movff	returnHome@turnRamp,turnRight@turnRamp
  4503   001AF0  EC8D  F021         	call	_turnRight	;wreg free
  4504                           
  4505                           ;dc_motor.c: 246:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4506   001AF4  0E05               	movlw	5
  4507   001AF6  6E45               	movwf	(??_returnHome+1)^0,c
  4508   001AF8  0E0F               	movlw	15
  4509   001AFA  6E44               	movwf	??_returnHome^0,c
  4510   001AFC  0EF1               	movlw	241
  4511   001AFE                     u5927:
  4512   001AFE  2EE8               	decfsz	wreg,f,c
  4513   001B00  D7FE               	bra	u5927
  4514   001B02  2E44               	decfsz	??_returnHome^0,f,c
  4515   001B04  D7FC               	bra	u5927
  4516   001B06  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4517   001B08  D7FA               	bra	u5927
  4518   001B0A  0000               	nop	
  4519   001B0C                     
  4520                           ;dc_motor.c: 247:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  4521   001B0C  C034  F025         	movff	returnHome@mL,reverseOneSquare@mL
  4522   001B10  C035  F026         	movff	returnHome@mL+1,reverseOneSquare@mL+1
  4523   001B14  C036  F027         	movff	returnHome@mR,reverseOneSquare@mR
  4524   001B18  C037  F028         	movff	returnHome@mR+1,reverseOneSquare@mR+1
  4525   001B1C  C03D  F029         	movff	returnHome@straightSpeed,reverseOneSquare@straightSpeed
  4526   001B20  C03E  F02A         	movff	returnHome@reverseDuration,reverseOneSquare@reverseDuration
  4527   001B24  C03F  F02B         	movff	returnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  4528   001B28  C040  F02C         	movff	returnHome@straightRamp,reverseOneSquare@straightRamp
  4529   001B2C  EC9E  F020         	call	_reverseOneSquare	;wreg free
  4530   001B30  EFD6  F00C         	goto	l5172
  4531   001B34                     l5198:
  4532                           
  4533                           ; BSR set to: 0
  4534   001B34  519E               	movf	returnHome@i& (0+255),w,b
  4535   001B36  2438               	addwf	returnHome@moveSequence^0,w,c
  4536   001B38  6ED9               	movwf	fsr2l,c
  4537   001B3A  0E00               	movlw	0
  4538   001B3C  2039               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4539   001B3E  6EDA               	movwf	fsr2h,c
  4540   001B40  0E06               	movlw	6
  4541   001B42  18DE               	xorwf	postinc2,w,c
  4542   001B44  A4D8               	btfss	status,2,c
  4543   001B46  EFA7  F00D         	goto	u4301
  4544   001B4A  EFA9  F00D         	goto	u4300
  4545   001B4E                     u4301:
  4546   001B4E  EFF3  F00D         	goto	l5210
  4547   001B52                     u4300:
  4548   001B52                     
  4549                           ; BSR set to: 0
  4550                           ;dc_motor.c: 252:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4551   001B52  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4552   001B56  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4553   001B5A  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4554   001B5E  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4555   001B62  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4556   001B66  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4557   001B6A  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4558   001B6E  EC7A  F022         	call	_turnLeft	;wreg free
  4559   001B72                     
  4560                           ;dc_motor.c: 253:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4561   001B72  0E05               	movlw	5
  4562   001B74  6E45               	movwf	(??_returnHome+1)^0,c
  4563   001B76  0E0F               	movlw	15
  4564   001B78  6E44               	movwf	??_returnHome^0,c
  4565   001B7A  0EF1               	movlw	241
  4566   001B7C                     u5937:
  4567   001B7C  2EE8               	decfsz	wreg,f,c
  4568   001B7E  D7FE               	bra	u5937
  4569   001B80  2E44               	decfsz	??_returnHome^0,f,c
  4570   001B82  D7FC               	bra	u5937
  4571   001B84  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4572   001B86  D7FA               	bra	u5937
  4573   001B88  0000               	nop	
  4574   001B8A                     
  4575                           ;dc_motor.c: 254:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4576   001B8A  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4577   001B8E  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4578   001B92  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4579   001B96  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4580   001B9A  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4581   001B9E  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4582   001BA2  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4583   001BA6  EC7A  F022         	call	_turnLeft	;wreg free
  4584                           
  4585                           ;dc_motor.c: 255:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4586   001BAA  0E05               	movlw	5
  4587   001BAC  6E45               	movwf	(??_returnHome+1)^0,c
  4588   001BAE  0E0F               	movlw	15
  4589   001BB0  6E44               	movwf	??_returnHome^0,c
  4590   001BB2  0EF1               	movlw	241
  4591   001BB4                     u5947:
  4592   001BB4  2EE8               	decfsz	wreg,f,c
  4593   001BB6  D7FE               	bra	u5947
  4594   001BB8  2E44               	decfsz	??_returnHome^0,f,c
  4595   001BBA  D7FC               	bra	u5947
  4596   001BBC  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4597   001BBE  D7FA               	bra	u5947
  4598   001BC0  0000               	nop	
  4599   001BC2                     
  4600                           ;dc_motor.c: 256:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4601   001BC2  C034  F025         	movff	returnHome@mL,turnLeft@mL
  4602   001BC6  C035  F026         	movff	returnHome@mL+1,turnLeft@mL+1
  4603   001BCA  C036  F027         	movff	returnHome@mR,turnLeft@mR
  4604   001BCE  C037  F028         	movff	returnHome@mR+1,turnLeft@mR+1
  4605   001BD2  C041  F029         	movff	returnHome@turnSpeed,turnLeft@turnSpeed
  4606   001BD6  C042  F02A         	movff	returnHome@turnDuration,turnLeft@turnDuration
  4607   001BDA  C043  F02B         	movff	returnHome@turnRamp,turnLeft@turnRamp
  4608   001BDE  EC7A  F022         	call	_turnLeft	;wreg free
  4609   001BE2  EFD6  F00C         	goto	l5172
  4610   001BE6                     l5210:
  4611                           
  4612                           ; BSR set to: 0
  4613   001BE6  519E               	movf	returnHome@i& (0+255),w,b
  4614   001BE8  2438               	addwf	returnHome@moveSequence^0,w,c
  4615   001BEA  6ED9               	movwf	fsr2l,c
  4616   001BEC  0E00               	movlw	0
  4617   001BEE  2039               	addwfc	(returnHome@moveSequence+1)^0,w,c
  4618   001BF0  6EDA               	movwf	fsr2h,c
  4619   001BF2  0E07               	movlw	7
  4620   001BF4  18DE               	xorwf	postinc2,w,c
  4621   001BF6  A4D8               	btfss	status,2,c
  4622   001BF8  EF00  F00E         	goto	u4311
  4623   001BFC  EF02  F00E         	goto	u4310
  4624   001C00                     u4311:
  4625   001C00  EF4C  F00E         	goto	l601
  4626   001C04                     u4310:
  4627   001C04                     
  4628                           ; BSR set to: 0
  4629                           ;dc_motor.c: 261:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4630   001C04  C034  F025         	movff	returnHome@mL,turnRight@mL
  4631   001C08  C035  F026         	movff	returnHome@mL+1,turnRight@mL+1
  4632   001C0C  C036  F027         	movff	returnHome@mR,turnRight@mR
  4633   001C10  C037  F028         	movff	returnHome@mR+1,turnRight@mR+1
  4634   001C14  C041  F029         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4635   001C18  C042  F02A         	movff	returnHome@turnDuration,turnRight@turnDuration
  4636   001C1C  C043  F02B         	movff	returnHome@turnRamp,turnRight@turnRamp
  4637   001C20  EC8D  F021         	call	_turnRight	;wreg free
  4638   001C24                     
  4639                           ;dc_motor.c: 262:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4640   001C24  0E05               	movlw	5
  4641   001C26  6E45               	movwf	(??_returnHome+1)^0,c
  4642   001C28  0E0F               	movlw	15
  4643   001C2A  6E44               	movwf	??_returnHome^0,c
  4644   001C2C  0EF1               	movlw	241
  4645   001C2E                     u5957:
  4646   001C2E  2EE8               	decfsz	wreg,f,c
  4647   001C30  D7FE               	bra	u5957
  4648   001C32  2E44               	decfsz	??_returnHome^0,f,c
  4649   001C34  D7FC               	bra	u5957
  4650   001C36  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4651   001C38  D7FA               	bra	u5957
  4652   001C3A  0000               	nop	
  4653   001C3C                     
  4654                           ;dc_motor.c: 263:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4655   001C3C  C034  F025         	movff	returnHome@mL,turnRight@mL
  4656   001C40  C035  F026         	movff	returnHome@mL+1,turnRight@mL+1
  4657   001C44  C036  F027         	movff	returnHome@mR,turnRight@mR
  4658   001C48  C037  F028         	movff	returnHome@mR+1,turnRight@mR+1
  4659   001C4C  C041  F029         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4660   001C50  C042  F02A         	movff	returnHome@turnDuration,turnRight@turnDuration
  4661   001C54  C043  F02B         	movff	returnHome@turnRamp,turnRight@turnRamp
  4662   001C58  EC8D  F021         	call	_turnRight	;wreg free
  4663                           
  4664                           ;dc_motor.c: 264:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4665   001C5C  0E05               	movlw	5
  4666   001C5E  6E45               	movwf	(??_returnHome+1)^0,c
  4667   001C60  0E0F               	movlw	15
  4668   001C62  6E44               	movwf	??_returnHome^0,c
  4669   001C64  0EF1               	movlw	241
  4670   001C66                     u5967:
  4671   001C66  2EE8               	decfsz	wreg,f,c
  4672   001C68  D7FE               	bra	u5967
  4673   001C6A  2E44               	decfsz	??_returnHome^0,f,c
  4674   001C6C  D7FC               	bra	u5967
  4675   001C6E  2E45               	decfsz	(??_returnHome+1)^0,f,c
  4676   001C70  D7FA               	bra	u5967
  4677   001C72  0000               	nop	
  4678   001C74                     
  4679                           ;dc_motor.c: 265:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  4680   001C74  C034  F025         	movff	returnHome@mL,turnRight@mL
  4681   001C78  C035  F026         	movff	returnHome@mL+1,turnRight@mL+1
  4682   001C7C  C036  F027         	movff	returnHome@mR,turnRight@mR
  4683   001C80  C037  F028         	movff	returnHome@mR+1,turnRight@mR+1
  4684   001C84  C041  F029         	movff	returnHome@turnSpeed,turnRight@turnSpeed
  4685   001C88  C042  F02A         	movff	returnHome@turnDuration,turnRight@turnDuration
  4686   001C8C  C043  F02B         	movff	returnHome@turnRamp,turnRight@turnRamp
  4687   001C90  EC8D  F021         	call	_turnRight	;wreg free
  4688   001C94  EFD6  F00C         	goto	l5172
  4689   001C98                     l601:
  4690   001C98                     l595:
  4691                           
  4692                           ;dc_motor.c: 269:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4693   001C98  C034  F025         	movff	returnHome@mL,fullSpeedAhead@mL
  4694   001C9C  C035  F026         	movff	returnHome@mL+1,fullSpeedAhead@mL+1
  4695   001CA0  C036  F027         	movff	returnHome@mR,fullSpeedAhead@mR
  4696   001CA4  C037  F028         	movff	returnHome@mR+1,fullSpeedAhead@mR+1
  4697   001CA8  C03D  F029         	movff	returnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4698   001CAC  C040  F02A         	movff	returnHome@straightRamp,fullSpeedAhead@straightRamp
  4699   001CB0  EC27  F025         	call	_fullSpeedAhead	;wreg free
  4700   001CB4                     
  4701                           ;dc_motor.c: 270:         resetTimer();
  4702   001CB4  EC10  F02A         	call	_resetTimer	;wreg free
  4703   001CB8                     l5224:
  4704   001CB8  0100               	movlb	0	; () banked
  4705   001CBA  519E               	movf	returnHome@i& (0+255),w,b
  4706   001CBC  0D02               	mullw	2
  4707   001CBE  CFF3 F044          	movff	prodl,??_returnHome
  4708   001CC2  CFF4 F045          	movff	prodh,??_returnHome+1
  4709   001CC6  5044               	movf	??_returnHome^0,w,c
  4710   001CC8  243A               	addwf	returnHome@straightTime^0,w,c
  4711   001CCA  6ED9               	movwf	fsr2l,c
  4712   001CCC  5045               	movf	(??_returnHome+1)^0,w,c
  4713   001CCE  203B               	addwfc	(returnHome@straightTime+1)^0,w,c
  4714   001CD0  6EDA               	movwf	fsr2h,c
  4715   001CD2  EC21  F029         	call	_get16bitTMR0val	;wreg free
  4716   001CD6  50DE               	movf	postinc2,w,c
  4717   001CD8  5C12               	subwf	?_get16bitTMR0val^0,w,c
  4718   001CDA  50DE               	movf	postinc2,w,c
  4719   001CDC  5813               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  4720   001CDE  A0D8               	btfss	status,0,c
  4721   001CE0  EF74  F00E         	goto	u4321
  4722   001CE4  EF76  F00E         	goto	u4320
  4723   001CE8                     u4321:
  4724   001CE8  EF5C  F00E         	goto	l5224
  4725   001CEC                     u4320:
  4726   001CEC                     
  4727                           ;dc_motor.c: 272:         stop(mL, mR, straightRamp);
  4728   001CEC  C034  F025         	movff	returnHome@mL,stop@mL
  4729   001CF0  C035  F026         	movff	returnHome@mL+1,stop@mL+1
  4730   001CF4  C036  F027         	movff	returnHome@mR,stop@mR
  4731   001CF8  C037  F028         	movff	returnHome@mR+1,stop@mR+1
  4732   001CFC  C040  F029         	movff	returnHome@straightRamp,stop@straightRamp
  4733   001D00  ECA3  F024         	call	_stop	;wreg free
  4734   001D04                     l5228:
  4735                           
  4736                           ;dc_motor.c: 205:     while (i>0) {
  4737   001D04  0100               	movlb	0	; () banked
  4738   001D06  519E               	movf	returnHome@i& (0+255),w,b
  4739   001D08  A4D8               	btfss	status,2,c
  4740   001D0A  EF89  F00E         	goto	u4331
  4741   001D0E  EF8B  F00E         	goto	u4330
  4742   001D12                     u4331:
  4743   001D12  EFD1  F00B         	goto	l5142
  4744   001D16                     u4330:
  4745   001D16                     
  4746                           ; BSR set to: 0
  4747   001D16  0012               	return		;funcret
  4748   001D18                     __end_of_returnHome:
  4749                           	callstack 0
  4750                           
  4751 ;; *************** function _lostReturnHome *****************
  4752 ;; Defined at:
  4753 ;;		line 277 in file "dc_motor.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  mL              2   51[COMRAM] PTR struct DC_motor
  4756 ;;		 -> main@motorL(10), 
  4757 ;;  mR              2   53[COMRAM] PTR struct DC_motor
  4758 ;;		 -> main@motorR(10), 
  4759 ;;  moveSequence    2   55[COMRAM] PTR unsigned char 
  4760 ;;		 -> main@moveSequence(40), 
  4761 ;;  straightTime    2   57[COMRAM] PTR unsigned int 
  4762 ;;		 -> main@straightTime(82), 
  4763 ;;  curMove         1   59[COMRAM] unsigned char 
  4764 ;;  straightSpee    1   60[COMRAM] unsigned char 
  4765 ;;  reverseDurat    2   61[COMRAM] unsigned int 
  4766 ;;  straightRamp    1   63[COMRAM] unsigned char 
  4767 ;;  turnSpeed       1   64[COMRAM] unsigned char 
  4768 ;;  turnDuration    1   65[COMRAM] unsigned char 
  4769 ;;  turnRamp        1   66[COMRAM] unsigned char 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  i               1   71[COMRAM] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      void 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4781 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4783 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4784 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4785 ;;Total ram usage:       21 bytes
  4786 ;; Hardware stack levels used: 1
  4787 ;; Hardware stack levels required when called: 9
  4788 ;; This function calls:
  4789 ;;		_fullSpeedAhead
  4790 ;;		_get16bitTMR0val
  4791 ;;		_resetTimer
  4792 ;;		_reverseOneSquare
  4793 ;;		_stop
  4794 ;;		_turnLeft
  4795 ;;		_turnRight
  4796 ;; This function is called by:
  4797 ;;		_main
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text5
  4802   001D18                     __ptext5:
  4803                           	callstack 0
  4804   001D18                     _lostReturnHome:
  4805                           	callstack 21
  4806   001D18                     
  4807                           ;dc_motor.c: 277: void lostReturnHome(DC_motor *mL, DC_motor *mR, unsigned char *moveSeq
      +                          uence, unsigned int *straightTime, char curMove, char straightSpeed, unsigned int revers
      +                          eDuration, unsigned char straightRamp, char turnSpeed, unsigned char turnDuration, unsig
      +                          ned char turnRamp);dc_motor.c: 278: {;dc_motor.c: 279:     LATDbits.LATD7 = LATHbits.LAT
      +                          H3 = 1;
  4808   001D18  8680               	bsf	128,3,c	;volatile
  4809   001D1A  8E7C               	bsf	124,7,c	;volatile
  4810   001D1C                     
  4811                           ;dc_motor.c: 280:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4812   001D1C  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  4813   001D20  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4814   001D24  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  4815   001D28  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4816   001D2C  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4817   001D30  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4818   001D34  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4819   001D38  EC7A  F022         	call	_turnLeft	;wreg free
  4820   001D3C                     
  4821                           ;dc_motor.c: 281:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4822   001D3C  0E05               	movlw	5
  4823   001D3E  6E45               	movwf	(??_lostReturnHome+1)^0,c
  4824   001D40  0E0F               	movlw	15
  4825   001D42  6E44               	movwf	??_lostReturnHome^0,c
  4826   001D44  0EF1               	movlw	241
  4827   001D46                     u5977:
  4828   001D46  2EE8               	decfsz	wreg,f,c
  4829   001D48  D7FE               	bra	u5977
  4830   001D4A  2E44               	decfsz	??_lostReturnHome^0,f,c
  4831   001D4C  D7FC               	bra	u5977
  4832   001D4E  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  4833   001D50  D7FA               	bra	u5977
  4834   001D52  0000               	nop	
  4835   001D54                     
  4836                           ;dc_motor.c: 282:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4837   001D54  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  4838   001D58  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4839   001D5C  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  4840   001D60  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4841   001D64  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4842   001D68  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4843   001D6C  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4844   001D70  EC7A  F022         	call	_turnLeft	;wreg free
  4845                           
  4846                           ;dc_motor.c: 283:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4847   001D74  0E05               	movlw	5
  4848   001D76  6E45               	movwf	(??_lostReturnHome+1)^0,c
  4849   001D78  0E0F               	movlw	15
  4850   001D7A  6E44               	movwf	??_lostReturnHome^0,c
  4851   001D7C  0EF1               	movlw	241
  4852   001D7E                     u5987:
  4853   001D7E  2EE8               	decfsz	wreg,f,c
  4854   001D80  D7FE               	bra	u5987
  4855   001D82  2E44               	decfsz	??_lostReturnHome^0,f,c
  4856   001D84  D7FC               	bra	u5987
  4857   001D86  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  4858   001D88  D7FA               	bra	u5987
  4859   001D8A  0000               	nop	
  4860   001D8C                     
  4861                           ;dc_motor.c: 284:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4862   001D8C  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  4863   001D90  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4864   001D94  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  4865   001D98  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4866   001D9C  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4867   001DA0  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4868   001DA4  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4869   001DA8  EC7A  F022         	call	_turnLeft	;wreg free
  4870   001DAC                     
  4871                           ;dc_motor.c: 285:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4872   001DAC  0E05               	movlw	5
  4873   001DAE  6E45               	movwf	(??_lostReturnHome+1)^0,c
  4874   001DB0  0E0F               	movlw	15
  4875   001DB2  6E44               	movwf	??_lostReturnHome^0,c
  4876   001DB4  0EF1               	movlw	241
  4877   001DB6                     u5997:
  4878   001DB6  2EE8               	decfsz	wreg,f,c
  4879   001DB8  D7FE               	bra	u5997
  4880   001DBA  2E44               	decfsz	??_lostReturnHome^0,f,c
  4881   001DBC  D7FC               	bra	u5997
  4882   001DBE  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  4883   001DC0  D7FA               	bra	u5997
  4884   001DC2  0000               	nop	
  4885                           
  4886                           ;dc_motor.c: 286:     turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4887   001DC4  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  4888   001DC8  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4889   001DCC  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  4890   001DD0  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4891   001DD4  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4892   001DD8  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4893   001DDC  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4894   001DE0  EC7A  F022         	call	_turnLeft	;wreg free
  4895   001DE4                     
  4896                           ;dc_motor.c: 287:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4897   001DE4  0E05               	movlw	5
  4898   001DE6  6E45               	movwf	(??_lostReturnHome+1)^0,c
  4899   001DE8  0E0F               	movlw	15
  4900   001DEA  6E44               	movwf	??_lostReturnHome^0,c
  4901   001DEC  0EF1               	movlw	241
  4902   001DEE                     u6007:
  4903   001DEE  2EE8               	decfsz	wreg,f,c
  4904   001DF0  D7FE               	bra	u6007
  4905   001DF2  2E44               	decfsz	??_lostReturnHome^0,f,c
  4906   001DF4  D7FC               	bra	u6007
  4907   001DF6  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  4908   001DF8  D7FA               	bra	u6007
  4909   001DFA  0000               	nop	
  4910   001DFC                     
  4911                           ;dc_motor.c: 288:     fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  4912   001DFC  C034  F025         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  4913   001E00  C035  F026         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  4914   001E04  C036  F027         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  4915   001E08  C037  F028         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  4916   001E0C  C03D  F029         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  4917   001E10  C040  F02A         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  4918   001E14  EC27  F025         	call	_fullSpeedAhead	;wreg free
  4919   001E18                     
  4920                           ;dc_motor.c: 289:     resetTimer();
  4921   001E18  EC10  F02A         	call	_resetTimer	;wreg free
  4922   001E1C                     
  4923                           ;dc_motor.c: 290:     lost = 0;
  4924   001E1C  0E00               	movlw	0
  4925   001E1E  0100               	movlb	0	; () banked
  4926   001E20  6F9C               	movwf	_lost& (0+255),b
  4927   001E22                     l5804:
  4928                           
  4929                           ; BSR set to: 0
  4930   001E22  519C               	movf	_lost& (0+255),w,b
  4931   001E24  B4D8               	btfsc	status,2,c
  4932   001E26  EF17  F00F         	goto	u5041
  4933   001E2A  EF19  F00F         	goto	u5040
  4934   001E2E                     u5041:
  4935   001E2E  EF11  F00F         	goto	l5804
  4936   001E32                     u5040:
  4937   001E32                     
  4938                           ; BSR set to: 0
  4939                           ;dc_motor.c: 292:     stop(mL, mR, straightRamp);
  4940   001E32  C034  F025         	movff	lostReturnHome@mL,stop@mL
  4941   001E36  C035  F026         	movff	lostReturnHome@mL+1,stop@mL+1
  4942   001E3A  C036  F027         	movff	lostReturnHome@mR,stop@mR
  4943   001E3E  C037  F028         	movff	lostReturnHome@mR+1,stop@mR+1
  4944   001E42  C040  F029         	movff	lostReturnHome@straightRamp,stop@straightRamp
  4945   001E46  ECA3  F024         	call	_stop	;wreg free
  4946   001E4A                     
  4947                           ;dc_motor.c: 294:     char i=curMove;
  4948   001E4A  C03C  F048         	movff	lostReturnHome@curMove,lostReturnHome@i
  4949                           
  4950                           ;dc_motor.c: 295:     while (i>0) {
  4951   001E4E  EFD9  F011         	goto	l5896
  4952   001E52                     l5810:
  4953                           
  4954                           ;dc_motor.c: 296:         i--;
  4955   001E52  0648               	decf	lostReturnHome@i^0,f,c
  4956   001E54                     
  4957                           ;dc_motor.c: 298:         if (moveSequence[i] == 1) {
  4958   001E54  5048               	movf	lostReturnHome@i^0,w,c
  4959   001E56  2438               	addwf	lostReturnHome@moveSequence^0,w,c
  4960   001E58  6ED9               	movwf	fsr2l,c
  4961   001E5A  0E00               	movlw	0
  4962   001E5C  2039               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  4963   001E5E  6EDA               	movwf	fsr2h,c
  4964   001E60  04DE               	decf	postinc2,w,c
  4965   001E62  A4D8               	btfss	status,2,c
  4966   001E64  EF36  F00F         	goto	u5051
  4967   001E68  EF38  F00F         	goto	u5050
  4968   001E6C                     u5051:
  4969   001E6C  EF72  F00F         	goto	l5820
  4970   001E70                     u5050:
  4971   001E70                     
  4972                           ;dc_motor.c: 299:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4973   001E70  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  4974   001E74  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  4975   001E78  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  4976   001E7C  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  4977   001E80  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  4978   001E84  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  4979   001E88  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  4980   001E8C  EC7A  F022         	call	_turnLeft	;wreg free
  4981   001E90                     
  4982                           ;dc_motor.c: 300:             _delay((unsigned long)((50)*(64000000/4000.0)));
  4983   001E90  0E05               	movlw	5
  4984   001E92  6E45               	movwf	(??_lostReturnHome+1)^0,c
  4985   001E94  0E0F               	movlw	15
  4986   001E96  6E44               	movwf	??_lostReturnHome^0,c
  4987   001E98  0EF1               	movlw	241
  4988   001E9A                     u6017:
  4989   001E9A  2EE8               	decfsz	wreg,f,c
  4990   001E9C  D7FE               	bra	u6017
  4991   001E9E  2E44               	decfsz	??_lostReturnHome^0,f,c
  4992   001EA0  D7FC               	bra	u6017
  4993   001EA2  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  4994   001EA4  D7FA               	bra	u6017
  4995   001EA6  0000               	nop	
  4996   001EA8                     
  4997                           ;dc_motor.c: 301:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  4998   001EA8  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  4999   001EAC  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5000   001EB0  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  5001   001EB4  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5002   001EB8  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5003   001EBC  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5004   001EC0  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5005   001EC4  EC7A  F022         	call	_turnLeft	;wreg free
  5006                           
  5007                           ;dc_motor.c: 302:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5008   001EC8  0E05               	movlw	5
  5009   001ECA  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5010   001ECC  0E0F               	movlw	15
  5011   001ECE  6E44               	movwf	??_lostReturnHome^0,c
  5012   001ED0  0EF1               	movlw	241
  5013   001ED2                     u6027:
  5014   001ED2  2EE8               	decfsz	wreg,f,c
  5015   001ED4  D7FE               	bra	u6027
  5016   001ED6  2E44               	decfsz	??_lostReturnHome^0,f,c
  5017   001ED8  D7FC               	bra	u6027
  5018   001EDA  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5019   001EDC  D7FA               	bra	u6027
  5020   001EDE  0000               	nop	
  5021                           
  5022                           ;dc_motor.c: 303:         }
  5023   001EE0  EFA4  F011         	goto	l620
  5024   001EE4                     l5820:
  5025   001EE4  5048               	movf	lostReturnHome@i^0,w,c
  5026   001EE6  2438               	addwf	lostReturnHome@moveSequence^0,w,c
  5027   001EE8  6ED9               	movwf	fsr2l,c
  5028   001EEA  0E00               	movlw	0
  5029   001EEC  2039               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5030   001EEE  6EDA               	movwf	fsr2h,c
  5031   001EF0  0E02               	movlw	2
  5032   001EF2  18DE               	xorwf	postinc2,w,c
  5033   001EF4  A4D8               	btfss	status,2,c
  5034   001EF6  EF7F  F00F         	goto	u5061
  5035   001EFA  EF81  F00F         	goto	u5060
  5036   001EFE                     u5061:
  5037   001EFE  EFBB  F00F         	goto	l5828
  5038   001F02                     u5060:
  5039   001F02                     
  5040                           ;dc_motor.c: 306:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5041   001F02  C034  F025         	movff	lostReturnHome@mL,turnRight@mL
  5042   001F06  C035  F026         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5043   001F0A  C036  F027         	movff	lostReturnHome@mR,turnRight@mR
  5044   001F0E  C037  F028         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5045   001F12  C041  F029         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5046   001F16  C042  F02A         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5047   001F1A  C043  F02B         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5048   001F1E  EC8D  F021         	call	_turnRight	;wreg free
  5049   001F22                     
  5050                           ;dc_motor.c: 307:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5051   001F22  0E05               	movlw	5
  5052   001F24  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5053   001F26  0E0F               	movlw	15
  5054   001F28  6E44               	movwf	??_lostReturnHome^0,c
  5055   001F2A  0EF1               	movlw	241
  5056   001F2C                     u6037:
  5057   001F2C  2EE8               	decfsz	wreg,f,c
  5058   001F2E  D7FE               	bra	u6037
  5059   001F30  2E44               	decfsz	??_lostReturnHome^0,f,c
  5060   001F32  D7FC               	bra	u6037
  5061   001F34  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5062   001F36  D7FA               	bra	u6037
  5063   001F38  0000               	nop	
  5064   001F3A                     
  5065                           ;dc_motor.c: 308:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5066   001F3A  C034  F025         	movff	lostReturnHome@mL,turnRight@mL
  5067   001F3E  C035  F026         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5068   001F42  C036  F027         	movff	lostReturnHome@mR,turnRight@mR
  5069   001F46  C037  F028         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5070   001F4A  C041  F029         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5071   001F4E  C042  F02A         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5072   001F52  C043  F02B         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5073   001F56  EC8D  F021         	call	_turnRight	;wreg free
  5074                           
  5075                           ;dc_motor.c: 309:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5076   001F5A  0E05               	movlw	5
  5077   001F5C  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5078   001F5E  0E0F               	movlw	15
  5079   001F60  6E44               	movwf	??_lostReturnHome^0,c
  5080   001F62  0EF1               	movlw	241
  5081   001F64                     u6047:
  5082   001F64  2EE8               	decfsz	wreg,f,c
  5083   001F66  D7FE               	bra	u6047
  5084   001F68  2E44               	decfsz	??_lostReturnHome^0,f,c
  5085   001F6A  D7FC               	bra	u6047
  5086   001F6C  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5087   001F6E  D7FA               	bra	u6047
  5088   001F70  0000               	nop	
  5089                           
  5090                           ;dc_motor.c: 310:         }
  5091   001F72  EFA4  F011         	goto	l620
  5092   001F76                     l5828:
  5093   001F76  5048               	movf	lostReturnHome@i^0,w,c
  5094   001F78  2438               	addwf	lostReturnHome@moveSequence^0,w,c
  5095   001F7A  6ED9               	movwf	fsr2l,c
  5096   001F7C  0E00               	movlw	0
  5097   001F7E  2039               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5098   001F80  6EDA               	movwf	fsr2h,c
  5099   001F82  0E03               	movlw	3
  5100   001F84  18DE               	xorwf	postinc2,w,c
  5101   001F86  A4D8               	btfss	status,2,c
  5102   001F88  EFC8  F00F         	goto	u5071
  5103   001F8C  EFCA  F00F         	goto	u5070
  5104   001F90                     u5071:
  5105   001F90  EF3C  F010         	goto	l5842
  5106   001F94                     u5070:
  5107   001F94                     
  5108                           ;dc_motor.c: 313:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5109   001F94  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  5110   001F98  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5111   001F9C  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  5112   001FA0  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5113   001FA4  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5114   001FA8  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5115   001FAC  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5116   001FB0  EC7A  F022         	call	_turnLeft	;wreg free
  5117   001FB4                     
  5118                           ;dc_motor.c: 314:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5119   001FB4  0E05               	movlw	5
  5120   001FB6  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5121   001FB8  0E0F               	movlw	15
  5122   001FBA  6E44               	movwf	??_lostReturnHome^0,c
  5123   001FBC  0EF1               	movlw	241
  5124   001FBE                     u6057:
  5125   001FBE  2EE8               	decfsz	wreg,f,c
  5126   001FC0  D7FE               	bra	u6057
  5127   001FC2  2E44               	decfsz	??_lostReturnHome^0,f,c
  5128   001FC4  D7FC               	bra	u6057
  5129   001FC6  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5130   001FC8  D7FA               	bra	u6057
  5131   001FCA  0000               	nop	
  5132   001FCC                     
  5133                           ;dc_motor.c: 315:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5134   001FCC  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  5135   001FD0  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5136   001FD4  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  5137   001FD8  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5138   001FDC  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5139   001FE0  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5140   001FE4  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5141   001FE8  EC7A  F022         	call	_turnLeft	;wreg free
  5142                           
  5143                           ;dc_motor.c: 316:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5144   001FEC  0E05               	movlw	5
  5145   001FEE  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5146   001FF0  0E0F               	movlw	15
  5147   001FF2  6E44               	movwf	??_lostReturnHome^0,c
  5148   001FF4  0EF1               	movlw	241
  5149   001FF6                     u6067:
  5150   001FF6  2EE8               	decfsz	wreg,f,c
  5151   001FF8  D7FE               	bra	u6067
  5152   001FFA  2E44               	decfsz	??_lostReturnHome^0,f,c
  5153   001FFC  D7FC               	bra	u6067
  5154   001FFE  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5155   002000  D7FA               	bra	u6067
  5156   002002  0000               	nop	
  5157   002004                     
  5158                           ;dc_motor.c: 317:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5159   002004  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  5160   002008  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5161   00200C  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  5162   002010  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5163   002014  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5164   002018  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5165   00201C  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5166   002020  EC7A  F022         	call	_turnLeft	;wreg free
  5167   002024                     
  5168                           ;dc_motor.c: 318:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5169   002024  0E05               	movlw	5
  5170   002026  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5171   002028  0E0F               	movlw	15
  5172   00202A  6E44               	movwf	??_lostReturnHome^0,c
  5173   00202C  0EF1               	movlw	241
  5174   00202E                     u6077:
  5175   00202E  2EE8               	decfsz	wreg,f,c
  5176   002030  D7FE               	bra	u6077
  5177   002032  2E44               	decfsz	??_lostReturnHome^0,f,c
  5178   002034  D7FC               	bra	u6077
  5179   002036  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5180   002038  D7FA               	bra	u6077
  5181   00203A  0000               	nop	
  5182                           
  5183                           ;dc_motor.c: 319:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5184   00203C  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  5185   002040  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5186   002044  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  5187   002048  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5188   00204C  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5189   002050  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5190   002054  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5191   002058  EC7A  F022         	call	_turnLeft	;wreg free
  5192   00205C                     l5840:
  5193                           
  5194                           ;dc_motor.c: 320:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5195   00205C  0E05               	movlw	5
  5196   00205E  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5197   002060  0E0F               	movlw	15
  5198   002062  6E44               	movwf	??_lostReturnHome^0,c
  5199   002064  0EF1               	movlw	241
  5200   002066                     u6087:
  5201   002066  2EE8               	decfsz	wreg,f,c
  5202   002068  D7FE               	bra	u6087
  5203   00206A  2E44               	decfsz	??_lostReturnHome^0,f,c
  5204   00206C  D7FC               	bra	u6087
  5205   00206E  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5206   002070  D7FA               	bra	u6087
  5207   002072  0000               	nop	
  5208                           
  5209                           ;dc_motor.c: 321:         }
  5210   002074  EFA4  F011         	goto	l620
  5211   002078                     l5842:
  5212   002078  5048               	movf	lostReturnHome@i^0,w,c
  5213   00207A  2438               	addwf	lostReturnHome@moveSequence^0,w,c
  5214   00207C  6ED9               	movwf	fsr2l,c
  5215   00207E  0E00               	movlw	0
  5216   002080  2039               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5217   002082  6EDA               	movwf	fsr2h,c
  5218   002084  0E04               	movlw	4
  5219   002086  18DE               	xorwf	postinc2,w,c
  5220   002088  A4D8               	btfss	status,2,c
  5221   00208A  EF49  F010         	goto	u5081
  5222   00208E  EF4B  F010         	goto	u5080
  5223   002092                     u5081:
  5224   002092  EF97  F010         	goto	l5854
  5225   002096                     u5080:
  5226   002096                     
  5227                           ;dc_motor.c: 324:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5228   002096  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  5229   00209A  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5230   00209E  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  5231   0020A2  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5232   0020A6  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5233   0020AA  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5234   0020AE  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5235   0020B2  EC7A  F022         	call	_turnLeft	;wreg free
  5236   0020B6                     
  5237                           ;dc_motor.c: 325:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5238   0020B6  0E05               	movlw	5
  5239   0020B8  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5240   0020BA  0E0F               	movlw	15
  5241   0020BC  6E44               	movwf	??_lostReturnHome^0,c
  5242   0020BE  0EF1               	movlw	241
  5243   0020C0                     u6097:
  5244   0020C0  2EE8               	decfsz	wreg,f,c
  5245   0020C2  D7FE               	bra	u6097
  5246   0020C4  2E44               	decfsz	??_lostReturnHome^0,f,c
  5247   0020C6  D7FC               	bra	u6097
  5248   0020C8  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5249   0020CA  D7FA               	bra	u6097
  5250   0020CC  0000               	nop	
  5251   0020CE                     
  5252                           ;dc_motor.c: 326:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5253   0020CE  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  5254   0020D2  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5255   0020D6  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  5256   0020DA  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5257   0020DE  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5258   0020E2  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5259   0020E6  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5260   0020EA  EC7A  F022         	call	_turnLeft	;wreg free
  5261                           
  5262                           ;dc_motor.c: 327:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5263   0020EE  0E05               	movlw	5
  5264   0020F0  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5265   0020F2  0E0F               	movlw	15
  5266   0020F4  6E44               	movwf	??_lostReturnHome^0,c
  5267   0020F6  0EF1               	movlw	241
  5268   0020F8                     u6107:
  5269   0020F8  2EE8               	decfsz	wreg,f,c
  5270   0020FA  D7FE               	bra	u6107
  5271   0020FC  2E44               	decfsz	??_lostReturnHome^0,f,c
  5272   0020FE  D7FC               	bra	u6107
  5273   002100  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5274   002102  D7FA               	bra	u6107
  5275   002104  0000               	nop	
  5276   002106                     
  5277                           ;dc_motor.c: 328:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5278   002106  C034  F025         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5279   00210A  C035  F026         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5280   00210E  C036  F027         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5281   002112  C037  F028         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5282   002116  C03D  F029         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5283   00211A  C03E  F02A         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5284   00211E  C03F  F02B         	movff	lostReturnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  5285   002122  C040  F02C         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5286   002126  EC9E  F020         	call	_reverseOneSquare	;wreg free
  5287   00212A  EF2E  F010         	goto	l5840
  5288   00212E                     l5854:
  5289   00212E  5048               	movf	lostReturnHome@i^0,w,c
  5290   002130  2438               	addwf	lostReturnHome@moveSequence^0,w,c
  5291   002132  6ED9               	movwf	fsr2l,c
  5292   002134  0E00               	movlw	0
  5293   002136  2039               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5294   002138  6EDA               	movwf	fsr2h,c
  5295   00213A  0E05               	movlw	5
  5296   00213C  18DE               	xorwf	postinc2,w,c
  5297   00213E  A4D8               	btfss	status,2,c
  5298   002140  EFA4  F010         	goto	u5091
  5299   002144  EFA6  F010         	goto	u5090
  5300   002148                     u5091:
  5301   002148  EFF2  F010         	goto	l5866
  5302   00214C                     u5090:
  5303   00214C                     
  5304                           ;dc_motor.c: 333:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5305   00214C  C034  F025         	movff	lostReturnHome@mL,turnRight@mL
  5306   002150  C035  F026         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5307   002154  C036  F027         	movff	lostReturnHome@mR,turnRight@mR
  5308   002158  C037  F028         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5309   00215C  C041  F029         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5310   002160  C042  F02A         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5311   002164  C043  F02B         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5312   002168  EC8D  F021         	call	_turnRight	;wreg free
  5313   00216C                     
  5314                           ;dc_motor.c: 334:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5315   00216C  0E05               	movlw	5
  5316   00216E  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5317   002170  0E0F               	movlw	15
  5318   002172  6E44               	movwf	??_lostReturnHome^0,c
  5319   002174  0EF1               	movlw	241
  5320   002176                     u6117:
  5321   002176  2EE8               	decfsz	wreg,f,c
  5322   002178  D7FE               	bra	u6117
  5323   00217A  2E44               	decfsz	??_lostReturnHome^0,f,c
  5324   00217C  D7FC               	bra	u6117
  5325   00217E  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5326   002180  D7FA               	bra	u6117
  5327   002182  0000               	nop	
  5328   002184                     
  5329                           ;dc_motor.c: 335:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5330   002184  C034  F025         	movff	lostReturnHome@mL,turnRight@mL
  5331   002188  C035  F026         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5332   00218C  C036  F027         	movff	lostReturnHome@mR,turnRight@mR
  5333   002190  C037  F028         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5334   002194  C041  F029         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5335   002198  C042  F02A         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5336   00219C  C043  F02B         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5337   0021A0  EC8D  F021         	call	_turnRight	;wreg free
  5338                           
  5339                           ;dc_motor.c: 336:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5340   0021A4  0E05               	movlw	5
  5341   0021A6  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5342   0021A8  0E0F               	movlw	15
  5343   0021AA  6E44               	movwf	??_lostReturnHome^0,c
  5344   0021AC  0EF1               	movlw	241
  5345   0021AE                     u6127:
  5346   0021AE  2EE8               	decfsz	wreg,f,c
  5347   0021B0  D7FE               	bra	u6127
  5348   0021B2  2E44               	decfsz	??_lostReturnHome^0,f,c
  5349   0021B4  D7FC               	bra	u6127
  5350   0021B6  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5351   0021B8  D7FA               	bra	u6127
  5352   0021BA  0000               	nop	
  5353   0021BC                     
  5354                           ;dc_motor.c: 337:             reverseOneSquare(mL, mR, straightSpeed, reverseDuration, s
      +                          traightRamp);
  5355   0021BC  C034  F025         	movff	lostReturnHome@mL,reverseOneSquare@mL
  5356   0021C0  C035  F026         	movff	lostReturnHome@mL+1,reverseOneSquare@mL+1
  5357   0021C4  C036  F027         	movff	lostReturnHome@mR,reverseOneSquare@mR
  5358   0021C8  C037  F028         	movff	lostReturnHome@mR+1,reverseOneSquare@mR+1
  5359   0021CC  C03D  F029         	movff	lostReturnHome@straightSpeed,reverseOneSquare@straightSpeed
  5360   0021D0  C03E  F02A         	movff	lostReturnHome@reverseDuration,reverseOneSquare@reverseDuration
  5361   0021D4  C03F  F02B         	movff	lostReturnHome@reverseDuration+1,reverseOneSquare@reverseDuration+1
  5362   0021D8  C040  F02C         	movff	lostReturnHome@straightRamp,reverseOneSquare@straightRamp
  5363   0021DC  EC9E  F020         	call	_reverseOneSquare	;wreg free
  5364   0021E0  EF2E  F010         	goto	l5840
  5365   0021E4                     l5866:
  5366   0021E4  5048               	movf	lostReturnHome@i^0,w,c
  5367   0021E6  2438               	addwf	lostReturnHome@moveSequence^0,w,c
  5368   0021E8  6ED9               	movwf	fsr2l,c
  5369   0021EA  0E00               	movlw	0
  5370   0021EC  2039               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5371   0021EE  6EDA               	movwf	fsr2h,c
  5372   0021F0  0E06               	movlw	6
  5373   0021F2  18DE               	xorwf	postinc2,w,c
  5374   0021F4  A4D8               	btfss	status,2,c
  5375   0021F6  EFFF  F010         	goto	u5101
  5376   0021FA  EF01  F011         	goto	u5100
  5377   0021FE                     u5101:
  5378   0021FE  EF4B  F011         	goto	l5878
  5379   002202                     u5100:
  5380   002202                     
  5381                           ;dc_motor.c: 342:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5382   002202  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  5383   002206  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5384   00220A  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  5385   00220E  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5386   002212  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5387   002216  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5388   00221A  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5389   00221E  EC7A  F022         	call	_turnLeft	;wreg free
  5390   002222                     
  5391                           ;dc_motor.c: 343:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5392   002222  0E05               	movlw	5
  5393   002224  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5394   002226  0E0F               	movlw	15
  5395   002228  6E44               	movwf	??_lostReturnHome^0,c
  5396   00222A  0EF1               	movlw	241
  5397   00222C                     u6137:
  5398   00222C  2EE8               	decfsz	wreg,f,c
  5399   00222E  D7FE               	bra	u6137
  5400   002230  2E44               	decfsz	??_lostReturnHome^0,f,c
  5401   002232  D7FC               	bra	u6137
  5402   002234  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5403   002236  D7FA               	bra	u6137
  5404   002238  0000               	nop	
  5405   00223A                     
  5406                           ;dc_motor.c: 344:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5407   00223A  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  5408   00223E  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5409   002242  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  5410   002246  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5411   00224A  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5412   00224E  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5413   002252  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5414   002256  EC7A  F022         	call	_turnLeft	;wreg free
  5415                           
  5416                           ;dc_motor.c: 345:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5417   00225A  0E05               	movlw	5
  5418   00225C  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5419   00225E  0E0F               	movlw	15
  5420   002260  6E44               	movwf	??_lostReturnHome^0,c
  5421   002262  0EF1               	movlw	241
  5422   002264                     u6147:
  5423   002264  2EE8               	decfsz	wreg,f,c
  5424   002266  D7FE               	bra	u6147
  5425   002268  2E44               	decfsz	??_lostReturnHome^0,f,c
  5426   00226A  D7FC               	bra	u6147
  5427   00226C  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5428   00226E  D7FA               	bra	u6147
  5429   002270  0000               	nop	
  5430   002272                     
  5431                           ;dc_motor.c: 346:             turnLeft(mL, mR, turnSpeed, turnDuration, turnRamp);
  5432   002272  C034  F025         	movff	lostReturnHome@mL,turnLeft@mL
  5433   002276  C035  F026         	movff	lostReturnHome@mL+1,turnLeft@mL+1
  5434   00227A  C036  F027         	movff	lostReturnHome@mR,turnLeft@mR
  5435   00227E  C037  F028         	movff	lostReturnHome@mR+1,turnLeft@mR+1
  5436   002282  C041  F029         	movff	lostReturnHome@turnSpeed,turnLeft@turnSpeed
  5437   002286  C042  F02A         	movff	lostReturnHome@turnDuration,turnLeft@turnDuration
  5438   00228A  C043  F02B         	movff	lostReturnHome@turnRamp,turnLeft@turnRamp
  5439   00228E  EC7A  F022         	call	_turnLeft	;wreg free
  5440   002292  EF2E  F010         	goto	l5840
  5441   002296                     l5878:
  5442   002296  5048               	movf	lostReturnHome@i^0,w,c
  5443   002298  2438               	addwf	lostReturnHome@moveSequence^0,w,c
  5444   00229A  6ED9               	movwf	fsr2l,c
  5445   00229C  0E00               	movlw	0
  5446   00229E  2039               	addwfc	(lostReturnHome@moveSequence+1)^0,w,c
  5447   0022A0  6EDA               	movwf	fsr2h,c
  5448   0022A2  0E07               	movlw	7
  5449   0022A4  18DE               	xorwf	postinc2,w,c
  5450   0022A6  A4D8               	btfss	status,2,c
  5451   0022A8  EF58  F011         	goto	u5111
  5452   0022AC  EF5A  F011         	goto	u5110
  5453   0022B0                     u5111:
  5454   0022B0  EFA4  F011         	goto	l626
  5455   0022B4                     u5110:
  5456   0022B4                     
  5457                           ;dc_motor.c: 351:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5458   0022B4  C034  F025         	movff	lostReturnHome@mL,turnRight@mL
  5459   0022B8  C035  F026         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5460   0022BC  C036  F027         	movff	lostReturnHome@mR,turnRight@mR
  5461   0022C0  C037  F028         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5462   0022C4  C041  F029         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5463   0022C8  C042  F02A         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5464   0022CC  C043  F02B         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5465   0022D0  EC8D  F021         	call	_turnRight	;wreg free
  5466   0022D4                     
  5467                           ;dc_motor.c: 352:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5468   0022D4  0E05               	movlw	5
  5469   0022D6  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5470   0022D8  0E0F               	movlw	15
  5471   0022DA  6E44               	movwf	??_lostReturnHome^0,c
  5472   0022DC  0EF1               	movlw	241
  5473   0022DE                     u6157:
  5474   0022DE  2EE8               	decfsz	wreg,f,c
  5475   0022E0  D7FE               	bra	u6157
  5476   0022E2  2E44               	decfsz	??_lostReturnHome^0,f,c
  5477   0022E4  D7FC               	bra	u6157
  5478   0022E6  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5479   0022E8  D7FA               	bra	u6157
  5480   0022EA  0000               	nop	
  5481   0022EC                     
  5482                           ;dc_motor.c: 353:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5483   0022EC  C034  F025         	movff	lostReturnHome@mL,turnRight@mL
  5484   0022F0  C035  F026         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5485   0022F4  C036  F027         	movff	lostReturnHome@mR,turnRight@mR
  5486   0022F8  C037  F028         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5487   0022FC  C041  F029         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5488   002300  C042  F02A         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5489   002304  C043  F02B         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5490   002308  EC8D  F021         	call	_turnRight	;wreg free
  5491                           
  5492                           ;dc_motor.c: 354:             _delay((unsigned long)((50)*(64000000/4000.0)));
  5493   00230C  0E05               	movlw	5
  5494   00230E  6E45               	movwf	(??_lostReturnHome+1)^0,c
  5495   002310  0E0F               	movlw	15
  5496   002312  6E44               	movwf	??_lostReturnHome^0,c
  5497   002314  0EF1               	movlw	241
  5498   002316                     u6167:
  5499   002316  2EE8               	decfsz	wreg,f,c
  5500   002318  D7FE               	bra	u6167
  5501   00231A  2E44               	decfsz	??_lostReturnHome^0,f,c
  5502   00231C  D7FC               	bra	u6167
  5503   00231E  2E45               	decfsz	(??_lostReturnHome+1)^0,f,c
  5504   002320  D7FA               	bra	u6167
  5505   002322  0000               	nop	
  5506   002324                     
  5507                           ;dc_motor.c: 355:             turnRight(mL, mR, turnSpeed, turnDuration, turnRamp);
  5508   002324  C034  F025         	movff	lostReturnHome@mL,turnRight@mL
  5509   002328  C035  F026         	movff	lostReturnHome@mL+1,turnRight@mL+1
  5510   00232C  C036  F027         	movff	lostReturnHome@mR,turnRight@mR
  5511   002330  C037  F028         	movff	lostReturnHome@mR+1,turnRight@mR+1
  5512   002334  C041  F029         	movff	lostReturnHome@turnSpeed,turnRight@turnSpeed
  5513   002338  C042  F02A         	movff	lostReturnHome@turnDuration,turnRight@turnDuration
  5514   00233C  C043  F02B         	movff	lostReturnHome@turnRamp,turnRight@turnRamp
  5515   002340  EC8D  F021         	call	_turnRight	;wreg free
  5516   002344  EF2E  F010         	goto	l5840
  5517   002348                     l626:
  5518   002348                     l620:
  5519                           
  5520                           ;dc_motor.c: 359:         fullSpeedAhead(mL, mR, straightSpeed, straightRamp);
  5521   002348  C034  F025         	movff	lostReturnHome@mL,fullSpeedAhead@mL
  5522   00234C  C035  F026         	movff	lostReturnHome@mL+1,fullSpeedAhead@mL+1
  5523   002350  C036  F027         	movff	lostReturnHome@mR,fullSpeedAhead@mR
  5524   002354  C037  F028         	movff	lostReturnHome@mR+1,fullSpeedAhead@mR+1
  5525   002358  C03D  F029         	movff	lostReturnHome@straightSpeed,fullSpeedAhead@straightSpeed
  5526   00235C  C040  F02A         	movff	lostReturnHome@straightRamp,fullSpeedAhead@straightRamp
  5527   002360  EC27  F025         	call	_fullSpeedAhead	;wreg free
  5528   002364                     
  5529                           ;dc_motor.c: 360:         resetTimer();
  5530   002364  EC10  F02A         	call	_resetTimer	;wreg free
  5531   002368                     l5892:
  5532   002368  5048               	movf	lostReturnHome@i^0,w,c
  5533   00236A  0D02               	mullw	2
  5534   00236C  CFF3 F044          	movff	prodl,??_lostReturnHome
  5535   002370  CFF4 F045          	movff	prodh,??_lostReturnHome+1
  5536   002374  5044               	movf	??_lostReturnHome^0,w,c
  5537   002376  243A               	addwf	lostReturnHome@straightTime^0,w,c
  5538   002378  6ED9               	movwf	fsr2l,c
  5539   00237A  5045               	movf	(??_lostReturnHome+1)^0,w,c
  5540   00237C  203B               	addwfc	(lostReturnHome@straightTime+1)^0,w,c
  5541   00237E  6EDA               	movwf	fsr2h,c
  5542   002380  EC21  F029         	call	_get16bitTMR0val	;wreg free
  5543   002384  50DE               	movf	postinc2,w,c
  5544   002386  5C12               	subwf	?_get16bitTMR0val^0,w,c
  5545   002388  50DE               	movf	postinc2,w,c
  5546   00238A  5813               	subwfb	(?_get16bitTMR0val+1)^0,w,c
  5547   00238C  A0D8               	btfss	status,0,c
  5548   00238E  EFCB  F011         	goto	u5121
  5549   002392  EFCD  F011         	goto	u5120
  5550   002396                     u5121:
  5551   002396  EFB4  F011         	goto	l5892
  5552   00239A                     u5120:
  5553   00239A                     
  5554                           ;dc_motor.c: 362:         stop(mL, mR, straightRamp);
  5555   00239A  C034  F025         	movff	lostReturnHome@mL,stop@mL
  5556   00239E  C035  F026         	movff	lostReturnHome@mL+1,stop@mL+1
  5557   0023A2  C036  F027         	movff	lostReturnHome@mR,stop@mR
  5558   0023A6  C037  F028         	movff	lostReturnHome@mR+1,stop@mR+1
  5559   0023AA  C040  F029         	movff	lostReturnHome@straightRamp,stop@straightRamp
  5560   0023AE  ECA3  F024         	call	_stop	;wreg free
  5561   0023B2                     l5896:
  5562                           
  5563                           ;dc_motor.c: 295:     while (i>0) {
  5564   0023B2  5048               	movf	lostReturnHome@i^0,w,c
  5565   0023B4  A4D8               	btfss	status,2,c
  5566   0023B6  EFDF  F011         	goto	u5131
  5567   0023BA  EFE1  F011         	goto	u5130
  5568   0023BE                     u5131:
  5569   0023BE  EF29  F00F         	goto	l5810
  5570   0023C2                     u5130:
  5571   0023C2  0012               	return		;funcret
  5572   0023C4                     __end_of_lostReturnHome:
  5573                           	callstack 0
  5574                           
  5575 ;; *************** function _stop *****************
  5576 ;; Defined at:
  5577 ;;		line 367 in file "dc_motor.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  5580 ;;		 -> main@motorL(10), 
  5581 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  5582 ;;		 -> main@motorR(10), 
  5583 ;;  straightRamp    1   40[COMRAM] unsigned char 
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;  cur_power       2   46[COMRAM] int 
  5586 ;;  i               2   44[COMRAM] int 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      void 
  5589 ;; Registers used:
  5590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5596 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5597 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5598 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;Total ram usage:       12 bytes
  5601 ;; Hardware stack levels used: 1
  5602 ;; Hardware stack levels required when called: 8
  5603 ;; This function calls:
  5604 ;;		_setMotorPWM
  5605 ;; This function is called by:
  5606 ;;		_main
  5607 ;;		_returnHome
  5608 ;;		_lostReturnHome
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text6
  5613   004946                     __ptext6:
  5614                           	callstack 0
  5615   004946                     _stop:
  5616                           	callstack 22
  5617   004946                     
  5618                           ;dc_motor.c: 367: void stop(DC_motor *mL, DC_motor *mR, unsigned char straightRamp);dc_m
      +                          otor.c: 368: {;dc_motor.c: 369:     mL->direction = 1;
  5619   004946  EE20 F001          	lfsr	2,1
  5620   00494A  5025               	movf	stop@mL^0,w,c
  5621   00494C  26D9               	addwf	fsr2l,f,c
  5622   00494E  5026               	movf	(stop@mL+1)^0,w,c
  5623   004950  22DA               	addwfc	fsr2h,f,c
  5624   004952  0E01               	movlw	1
  5625   004954  6EDF               	movwf	indf2,c
  5626                           
  5627                           ;dc_motor.c: 370:     mR->direction = 1;
  5628   004956  EE20 F001          	lfsr	2,1
  5629   00495A  5027               	movf	stop@mR^0,w,c
  5630   00495C  26D9               	addwf	fsr2l,f,c
  5631   00495E  5028               	movf	(stop@mR+1)^0,w,c
  5632   004960  22DA               	addwfc	fsr2h,f,c
  5633   004962  0E01               	movlw	1
  5634   004964  6EDF               	movwf	indf2,c
  5635                           
  5636                           ;dc_motor.c: 371:     int i;;dc_motor.c: 372:     int cur_power;;dc_motor.c: 373:     fo
      +                          r (cur_power=mL->power-mL->compensation;cur_power>=0;cur_power--) {
  5637   004966  C025  FFD9         	movff	stop@mL,fsr2l
  5638   00496A  C026  FFDA         	movff	stop@mL+1,fsr2h
  5639   00496E  50DF               	movf	indf2,w,c
  5640   004970  6E2A               	movwf	??_stop^0,c
  5641   004972  EE20 F009          	lfsr	2,9
  5642   004976  5025               	movf	stop@mL^0,w,c
  5643   004978  26D9               	addwf	fsr2l,f,c
  5644   00497A  5026               	movf	(stop@mL+1)^0,w,c
  5645   00497C  22DA               	addwfc	fsr2h,f,c
  5646   00497E  50DF               	movf	indf2,w,c
  5647   004980  6E2B               	movwf	(??_stop+1)^0,c
  5648   004982  502B               	movf	(??_stop+1)^0,w,c
  5649   004984  5C2A               	subwf	??_stop^0,w,c
  5650   004986  6E2F               	movwf	stop@cur_power^0,c
  5651   004988  6A30               	clrf	(stop@cur_power+1)^0,c
  5652   00498A  A0D8               	btfss	status,0,c
  5653   00498C  0630               	decf	(stop@cur_power+1)^0,f,c
  5654   00498E                     l4706:
  5655   00498E  BE30               	btfsc	(stop@cur_power+1)^0,7,c
  5656   004990  EFCE  F024         	goto	u3780
  5657   004994  EFCC  F024         	goto	u3781
  5658   004998                     u3781:
  5659   004998  EFD0  F024         	goto	l4710
  5660   00499C                     u3780:
  5661   00499C  EF1C  F025         	goto	l4726
  5662   0049A0                     l4710:
  5663                           
  5664                           ;dc_motor.c: 374:         mL->power = cur_power+mL->compensation;
  5665   0049A0  EE20 F009          	lfsr	2,9
  5666   0049A4  5025               	movf	stop@mL^0,w,c
  5667   0049A6  26D9               	addwf	fsr2l,f,c
  5668   0049A8  5026               	movf	(stop@mL+1)^0,w,c
  5669   0049AA  22DA               	addwfc	fsr2h,f,c
  5670   0049AC  50DF               	movf	indf2,w,c
  5671   0049AE  242F               	addwf	stop@cur_power^0,w,c
  5672   0049B0  C025  FFD9         	movff	stop@mL,fsr2l
  5673   0049B4  C026  FFDA         	movff	stop@mL+1,fsr2h
  5674   0049B8  6EDF               	movwf	indf2,c
  5675                           
  5676                           ;dc_motor.c: 375:         mR->power = cur_power+mR->compensation;
  5677   0049BA  EE20 F009          	lfsr	2,9
  5678   0049BE  5027               	movf	stop@mR^0,w,c
  5679   0049C0  26D9               	addwf	fsr2l,f,c
  5680   0049C2  5028               	movf	(stop@mR+1)^0,w,c
  5681   0049C4  22DA               	addwfc	fsr2h,f,c
  5682   0049C6  50DF               	movf	indf2,w,c
  5683   0049C8  242F               	addwf	stop@cur_power^0,w,c
  5684   0049CA  C027  FFD9         	movff	stop@mR,fsr2l
  5685   0049CE  C028  FFDA         	movff	stop@mR+1,fsr2h
  5686   0049D2  6EDF               	movwf	indf2,c
  5687   0049D4                     
  5688                           ;dc_motor.c: 376:         setMotorPWM(mL);
  5689   0049D4  C025  F01F         	movff	stop@mL,setMotorPWM@m
  5690   0049D8  C026  F020         	movff	stop@mL+1,setMotorPWM@m+1
  5691   0049DC  EC67  F023         	call	_setMotorPWM	;wreg free
  5692   0049E0                     
  5693                           ;dc_motor.c: 377:         setMotorPWM(mR);
  5694   0049E0  C027  F01F         	movff	stop@mR,setMotorPWM@m
  5695   0049E4  C028  F020         	movff	stop@mR+1,setMotorPWM@m+1
  5696   0049E8  EC67  F023         	call	_setMotorPWM	;wreg free
  5697   0049EC                     
  5698                           ;dc_motor.c: 378:         for (i=0;i<straightRamp;i++) {
  5699   0049EC  0E00               	movlw	0
  5700   0049EE  6E2E               	movwf	(stop@i+1)^0,c
  5701   0049F0  0E00               	movlw	0
  5702   0049F2  6E2D               	movwf	stop@i^0,c
  5703   0049F4  EF05  F025         	goto	l641
  5704   0049F8                     l4718:
  5705                           
  5706                           ;dc_motor.c: 379:             _delay((unsigned long)((10)*(64000000/4000.0)));
  5707   0049F8  0ED0               	movlw	208
  5708   0049FA  6E2A               	movwf	??_stop^0,c
  5709   0049FC  0ECA               	movlw	202
  5710   0049FE                     u6177:
  5711   0049FE  2EE8               	decfsz	wreg,f,c
  5712   004A00  D7FE               	bra	u6177
  5713   004A02  2E2A               	decfsz	??_stop^0,f,c
  5714   004A04  D7FC               	bra	u6177
  5715   004A06                     
  5716                           ;dc_motor.c: 380:         }
  5717   004A06  4A2D               	infsnz	stop@i^0,f,c
  5718   004A08  2A2E               	incf	(stop@i+1)^0,f,c
  5719   004A0A                     l641:
  5720   004A0A  5029               	movf	stop@straightRamp^0,w,c
  5721   004A0C  6E2A               	movwf	??_stop^0,c
  5722   004A0E  6A2B               	clrf	(??_stop+1)^0,c
  5723   004A10  502A               	movf	??_stop^0,w,c
  5724   004A12  5C2D               	subwf	stop@i^0,w,c
  5725   004A14  502E               	movf	(stop@i+1)^0,w,c
  5726   004A16  0A80               	xorlw	128
  5727   004A18  6E2C               	movwf	(??_stop+2)^0,c
  5728   004A1A  502B               	movf	(??_stop+1)^0,w,c
  5729   004A1C  0A80               	xorlw	128
  5730   004A1E  582C               	subwfb	(??_stop+2)^0,w,c
  5731   004A20  A0D8               	btfss	status,0,c
  5732   004A22  EF15  F025         	goto	u3791
  5733   004A26  EF17  F025         	goto	u3790
  5734   004A2A                     u3791:
  5735   004A2A  EFFC  F024         	goto	l4718
  5736   004A2E                     u3790:
  5737   004A2E                     
  5738                           ;dc_motor.c: 381:     }
  5739   004A2E  062F               	decf	stop@cur_power^0,f,c
  5740   004A30  A0D8               	btfss	status,0,c
  5741   004A32  0630               	decf	(stop@cur_power+1)^0,f,c
  5742   004A34  EFC7  F024         	goto	l4706
  5743   004A38                     l4726:
  5744                           
  5745                           ;dc_motor.c: 382:     mL->power = 0;
  5746   004A38  C025  FFD9         	movff	stop@mL,fsr2l
  5747   004A3C  C026  FFDA         	movff	stop@mL+1,fsr2h
  5748   004A40  6ADF               	clrf	indf2,c
  5749                           
  5750                           ;dc_motor.c: 383:     mR->power = 0;
  5751   004A42  C027  FFD9         	movff	stop@mR,fsr2l
  5752   004A46  C028  FFDA         	movff	stop@mR+1,fsr2h
  5753   004A4A  6ADF               	clrf	indf2,c
  5754   004A4C  0012               	return		;funcret
  5755   004A4E                     __end_of_stop:
  5756                           	callstack 0
  5757                           
  5758 ;; *************** function _reverseOneSquare *****************
  5759 ;; Defined at:
  5760 ;;		line 468 in file "dc_motor.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  5763 ;;		 -> main@motorL(10), 
  5764 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  5765 ;;		 -> main@motorR(10), 
  5766 ;;  straightSpee    1   40[COMRAM] unsigned char 
  5767 ;;  reverseDurat    2   41[COMRAM] unsigned int 
  5768 ;;  straightRamp    1   43[COMRAM] unsigned char 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  cur_power       2   49[COMRAM] int 
  5771 ;;  i               2   47[COMRAM] int 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1    wreg      void 
  5774 ;; Registers used:
  5775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5781 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5782 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5783 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5784 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5785 ;;Total ram usage:       15 bytes
  5786 ;; Hardware stack levels used: 1
  5787 ;; Hardware stack levels required when called: 8
  5788 ;; This function calls:
  5789 ;;		_setMotorPWM
  5790 ;; This function is called by:
  5791 ;;		_move
  5792 ;;		_returnHome
  5793 ;;		_lostReturnHome
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           	psect	text7
  5798   00413C                     __ptext7:
  5799                           	callstack 0
  5800   00413C                     _reverseOneSquare:
  5801                           	callstack 21
  5802   00413C                     
  5803                           ;dc_motor.c: 468: void reverseOneSquare(DC_motor *mL, DC_motor *mR, char straightSpeed, 
      +                          unsigned int reverseDuration, unsigned char straightRamp);dc_motor.c: 469: {;dc_motor.c:
      +                           470:     mL->direction = 0;
  5804   00413C  EE20 F001          	lfsr	2,1
  5805   004140  5025               	movf	reverseOneSquare@mL^0,w,c
  5806   004142  26D9               	addwf	fsr2l,f,c
  5807   004144  5026               	movf	(reverseOneSquare@mL+1)^0,w,c
  5808   004146  22DA               	addwfc	fsr2h,f,c
  5809   004148  6ADF               	clrf	indf2,c
  5810                           
  5811                           ;dc_motor.c: 471:     mR->direction = 0;
  5812   00414A  EE20 F001          	lfsr	2,1
  5813   00414E  5027               	movf	reverseOneSquare@mR^0,w,c
  5814   004150  26D9               	addwf	fsr2l,f,c
  5815   004152  5028               	movf	(reverseOneSquare@mR+1)^0,w,c
  5816   004154  22DA               	addwfc	fsr2h,f,c
  5817   004156  6ADF               	clrf	indf2,c
  5818   004158                     
  5819                           ;dc_motor.c: 472:     int i;;dc_motor.c: 473:     int cur_power;;dc_motor.c: 474:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  5820   004158  0E00               	movlw	0
  5821   00415A  6E33               	movwf	(reverseOneSquare@cur_power+1)^0,c
  5822   00415C  0E01               	movlw	1
  5823   00415E  6E32               	movwf	reverseOneSquare@cur_power^0,c
  5824   004160  EFFC  F020         	goto	l4870
  5825   004164                     l4856:
  5826                           
  5827                           ;dc_motor.c: 475:         mL->power = cur_power+mL->compensation;
  5828   004164  EE20 F009          	lfsr	2,9
  5829   004168  5025               	movf	reverseOneSquare@mL^0,w,c
  5830   00416A  26D9               	addwf	fsr2l,f,c
  5831   00416C  5026               	movf	(reverseOneSquare@mL+1)^0,w,c
  5832   00416E  22DA               	addwfc	fsr2h,f,c
  5833   004170  50DF               	movf	indf2,w,c
  5834   004172  2432               	addwf	reverseOneSquare@cur_power^0,w,c
  5835   004174  C025  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5836   004178  C026  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5837   00417C  6EDF               	movwf	indf2,c
  5838                           
  5839                           ;dc_motor.c: 476:         mR->power = cur_power+mR->compensation;
  5840   00417E  EE20 F009          	lfsr	2,9
  5841   004182  5027               	movf	reverseOneSquare@mR^0,w,c
  5842   004184  26D9               	addwf	fsr2l,f,c
  5843   004186  5028               	movf	(reverseOneSquare@mR+1)^0,w,c
  5844   004188  22DA               	addwfc	fsr2h,f,c
  5845   00418A  50DF               	movf	indf2,w,c
  5846   00418C  2432               	addwf	reverseOneSquare@cur_power^0,w,c
  5847   00418E  C027  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5848   004192  C028  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5849   004196  6EDF               	movwf	indf2,c
  5850   004198                     
  5851                           ;dc_motor.c: 477:         setMotorPWM(mL);
  5852   004198  C025  F01F         	movff	reverseOneSquare@mL,setMotorPWM@m
  5853   00419C  C026  F020         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  5854   0041A0  EC67  F023         	call	_setMotorPWM	;wreg free
  5855   0041A4                     
  5856                           ;dc_motor.c: 478:         setMotorPWM(mR);
  5857   0041A4  C027  F01F         	movff	reverseOneSquare@mR,setMotorPWM@m
  5858   0041A8  C028  F020         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  5859   0041AC  EC67  F023         	call	_setMotorPWM	;wreg free
  5860   0041B0                     
  5861                           ;dc_motor.c: 479:         for (i=0;i<straightRamp;i++) {
  5862   0041B0  0E00               	movlw	0
  5863   0041B2  6E31               	movwf	(reverseOneSquare@i+1)^0,c
  5864   0041B4  0E00               	movlw	0
  5865   0041B6  6E30               	movwf	reverseOneSquare@i^0,c
  5866   0041B8  EFE8  F020         	goto	l692
  5867   0041BC                     l4864:
  5868                           
  5869                           ;dc_motor.c: 480:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5870   0041BC  0E68               	movlw	104
  5871   0041BE  6E2D               	movwf	??_reverseOneSquare^0,c
  5872   0041C0  0EE4               	movlw	228
  5873   0041C2                     u6187:
  5874   0041C2  2EE8               	decfsz	wreg,f,c
  5875   0041C4  D7FE               	bra	u6187
  5876   0041C6  2E2D               	decfsz	??_reverseOneSquare^0,f,c
  5877   0041C8  D7FC               	bra	u6187
  5878   0041CA  D000               	nop2	
  5879   0041CC                     
  5880                           ;dc_motor.c: 481:         }
  5881   0041CC  4A30               	infsnz	reverseOneSquare@i^0,f,c
  5882   0041CE  2A31               	incf	(reverseOneSquare@i+1)^0,f,c
  5883   0041D0                     l692:
  5884   0041D0  502C               	movf	reverseOneSquare@straightRamp^0,w,c
  5885   0041D2  6E2D               	movwf	??_reverseOneSquare^0,c
  5886   0041D4  6A2E               	clrf	(??_reverseOneSquare+1)^0,c
  5887   0041D6  502D               	movf	??_reverseOneSquare^0,w,c
  5888   0041D8  5C30               	subwf	reverseOneSquare@i^0,w,c
  5889   0041DA  5031               	movf	(reverseOneSquare@i+1)^0,w,c
  5890   0041DC  0A80               	xorlw	128
  5891   0041DE  6E2F               	movwf	(??_reverseOneSquare+2)^0,c
  5892   0041E0  502E               	movf	(??_reverseOneSquare+1)^0,w,c
  5893   0041E2  0A80               	xorlw	128
  5894   0041E4  582F               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5895   0041E6  A0D8               	btfss	status,0,c
  5896   0041E8  EFF8  F020         	goto	u3941
  5897   0041EC  EFFA  F020         	goto	u3940
  5898   0041F0                     u3941:
  5899   0041F0  EFDE  F020         	goto	l4864
  5900   0041F4                     u3940:
  5901   0041F4                     
  5902                           ;dc_motor.c: 482:     }
  5903   0041F4  4A32               	infsnz	reverseOneSquare@cur_power^0,f,c
  5904   0041F6  2A33               	incf	(reverseOneSquare@cur_power+1)^0,f,c
  5905   0041F8                     l4870:
  5906   0041F8  5029               	movf	reverseOneSquare@straightSpeed^0,w,c
  5907   0041FA  6E2D               	movwf	??_reverseOneSquare^0,c
  5908   0041FC  6A2E               	clrf	(??_reverseOneSquare+1)^0,c
  5909   0041FE  5032               	movf	reverseOneSquare@cur_power^0,w,c
  5910   004200  5C2D               	subwf	??_reverseOneSquare^0,w,c
  5911   004202  502E               	movf	(??_reverseOneSquare+1)^0,w,c
  5912   004204  0A80               	xorlw	128
  5913   004206  6E2F               	movwf	(??_reverseOneSquare+2)^0,c
  5914   004208  5033               	movf	(reverseOneSquare@cur_power+1)^0,w,c
  5915   00420A  0A80               	xorlw	128
  5916   00420C  582F               	subwfb	(??_reverseOneSquare+2)^0,w,c
  5917   00420E  B0D8               	btfsc	status,0,c
  5918   004210  EF0C  F021         	goto	u3951
  5919   004214  EF0E  F021         	goto	u3950
  5920   004218                     u3951:
  5921   004218  EFB2  F020         	goto	l4856
  5922   00421C                     u3950:
  5923   00421C                     
  5924                           ;dc_motor.c: 484:     for (i=0;i<reverseDuration;i++) {
  5925   00421C  0E00               	movlw	0
  5926   00421E  6E31               	movwf	(reverseOneSquare@i+1)^0,c
  5927   004220  0E00               	movlw	0
  5928   004222  6E30               	movwf	reverseOneSquare@i^0,c
  5929   004224  EF1E  F021         	goto	l696
  5930   004228                     l4874:
  5931                           
  5932                           ;dc_motor.c: 485:             _delay((unsigned long)((5)*(64000000/4000.0)));
  5933   004228  0E68               	movlw	104
  5934   00422A  6E2D               	movwf	??_reverseOneSquare^0,c
  5935   00422C  0EE4               	movlw	228
  5936   00422E                     u6197:
  5937   00422E  2EE8               	decfsz	wreg,f,c
  5938   004230  D7FE               	bra	u6197
  5939   004232  2E2D               	decfsz	??_reverseOneSquare^0,f,c
  5940   004234  D7FC               	bra	u6197
  5941   004236  D000               	nop2	
  5942   004238                     
  5943                           ;dc_motor.c: 486:         }
  5944   004238  4A30               	infsnz	reverseOneSquare@i^0,f,c
  5945   00423A  2A31               	incf	(reverseOneSquare@i+1)^0,f,c
  5946   00423C                     l696:
  5947   00423C  502A               	movf	reverseOneSquare@reverseDuration^0,w,c
  5948   00423E  5C30               	subwf	reverseOneSquare@i^0,w,c
  5949   004240  502B               	movf	(reverseOneSquare@reverseDuration+1)^0,w,c
  5950   004242  5831               	subwfb	(reverseOneSquare@i+1)^0,w,c
  5951   004244  A0D8               	btfss	status,0,c
  5952   004246  EF27  F021         	goto	u3961
  5953   00424A  EF29  F021         	goto	u3960
  5954   00424E                     u3961:
  5955   00424E  EF14  F021         	goto	l4874
  5956   004252                     u3960:
  5957   004252                     
  5958                           ;dc_motor.c: 488:     for (cur_power=straightSpeed;cur_power>=0;cur_power--) {
  5959   004252  C029  F032         	movff	reverseOneSquare@straightSpeed,reverseOneSquare@cur_power
  5960   004256  6A33               	clrf	(reverseOneSquare@cur_power+1)^0,c
  5961   004258                     l4878:
  5962   004258  BE33               	btfsc	(reverseOneSquare@cur_power+1)^0,7,c
  5963   00425A  EF33  F021         	goto	u3970
  5964   00425E  EF31  F021         	goto	u3971
  5965   004262                     u3971:
  5966   004262  EF35  F021         	goto	l4882
  5967   004266                     u3970:
  5968   004266  EF82  F021         	goto	l4898
  5969   00426A                     l4882:
  5970                           
  5971                           ;dc_motor.c: 489:         mL->power = cur_power+mL->compensation;
  5972   00426A  EE20 F009          	lfsr	2,9
  5973   00426E  5025               	movf	reverseOneSquare@mL^0,w,c
  5974   004270  26D9               	addwf	fsr2l,f,c
  5975   004272  5026               	movf	(reverseOneSquare@mL+1)^0,w,c
  5976   004274  22DA               	addwfc	fsr2h,f,c
  5977   004276  50DF               	movf	indf2,w,c
  5978   004278  2432               	addwf	reverseOneSquare@cur_power^0,w,c
  5979   00427A  C025  FFD9         	movff	reverseOneSquare@mL,fsr2l
  5980   00427E  C026  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  5981   004282  6EDF               	movwf	indf2,c
  5982                           
  5983                           ;dc_motor.c: 490:         mR->power = cur_power+mR->compensation;
  5984   004284  EE20 F009          	lfsr	2,9
  5985   004288  5027               	movf	reverseOneSquare@mR^0,w,c
  5986   00428A  26D9               	addwf	fsr2l,f,c
  5987   00428C  5028               	movf	(reverseOneSquare@mR+1)^0,w,c
  5988   00428E  22DA               	addwfc	fsr2h,f,c
  5989   004290  50DF               	movf	indf2,w,c
  5990   004292  2432               	addwf	reverseOneSquare@cur_power^0,w,c
  5991   004294  C027  FFD9         	movff	reverseOneSquare@mR,fsr2l
  5992   004298  C028  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  5993   00429C  6EDF               	movwf	indf2,c
  5994   00429E                     
  5995                           ;dc_motor.c: 491:         setMotorPWM(mL);
  5996   00429E  C025  F01F         	movff	reverseOneSquare@mL,setMotorPWM@m
  5997   0042A2  C026  F020         	movff	reverseOneSquare@mL+1,setMotorPWM@m+1
  5998   0042A6  EC67  F023         	call	_setMotorPWM	;wreg free
  5999   0042AA                     
  6000                           ;dc_motor.c: 492:         setMotorPWM(mR);
  6001   0042AA  C027  F01F         	movff	reverseOneSquare@mR,setMotorPWM@m
  6002   0042AE  C028  F020         	movff	reverseOneSquare@mR+1,setMotorPWM@m+1
  6003   0042B2  EC67  F023         	call	_setMotorPWM	;wreg free
  6004   0042B6                     
  6005                           ;dc_motor.c: 493:         for (i=0;i<straightRamp;i++) {
  6006   0042B6  0E00               	movlw	0
  6007   0042B8  6E31               	movwf	(reverseOneSquare@i+1)^0,c
  6008   0042BA  0E00               	movlw	0
  6009   0042BC  6E30               	movwf	reverseOneSquare@i^0,c
  6010   0042BE  EF6B  F021         	goto	l701
  6011   0042C2                     l4890:
  6012                           
  6013                           ;dc_motor.c: 494:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6014   0042C2  0E68               	movlw	104
  6015   0042C4  6E2D               	movwf	??_reverseOneSquare^0,c
  6016   0042C6  0EE4               	movlw	228
  6017   0042C8                     u6207:
  6018   0042C8  2EE8               	decfsz	wreg,f,c
  6019   0042CA  D7FE               	bra	u6207
  6020   0042CC  2E2D               	decfsz	??_reverseOneSquare^0,f,c
  6021   0042CE  D7FC               	bra	u6207
  6022   0042D0  D000               	nop2	
  6023   0042D2                     
  6024                           ;dc_motor.c: 495:         }
  6025   0042D2  4A30               	infsnz	reverseOneSquare@i^0,f,c
  6026   0042D4  2A31               	incf	(reverseOneSquare@i+1)^0,f,c
  6027   0042D6                     l701:
  6028   0042D6  502C               	movf	reverseOneSquare@straightRamp^0,w,c
  6029   0042D8  6E2D               	movwf	??_reverseOneSquare^0,c
  6030   0042DA  6A2E               	clrf	(??_reverseOneSquare+1)^0,c
  6031   0042DC  502D               	movf	??_reverseOneSquare^0,w,c
  6032   0042DE  5C30               	subwf	reverseOneSquare@i^0,w,c
  6033   0042E0  5031               	movf	(reverseOneSquare@i+1)^0,w,c
  6034   0042E2  0A80               	xorlw	128
  6035   0042E4  6E2F               	movwf	(??_reverseOneSquare+2)^0,c
  6036   0042E6  502E               	movf	(??_reverseOneSquare+1)^0,w,c
  6037   0042E8  0A80               	xorlw	128
  6038   0042EA  582F               	subwfb	(??_reverseOneSquare+2)^0,w,c
  6039   0042EC  A0D8               	btfss	status,0,c
  6040   0042EE  EF7B  F021         	goto	u3981
  6041   0042F2  EF7D  F021         	goto	u3980
  6042   0042F6                     u3981:
  6043   0042F6  EF61  F021         	goto	l4890
  6044   0042FA                     u3980:
  6045   0042FA                     
  6046                           ;dc_motor.c: 496:     }
  6047   0042FA  0632               	decf	reverseOneSquare@cur_power^0,f,c
  6048   0042FC  A0D8               	btfss	status,0,c
  6049   0042FE  0633               	decf	(reverseOneSquare@cur_power+1)^0,f,c
  6050   004300  EF2C  F021         	goto	l4878
  6051   004304                     l4898:
  6052                           
  6053                           ;dc_motor.c: 497:     mL->power = 0;
  6054   004304  C025  FFD9         	movff	reverseOneSquare@mL,fsr2l
  6055   004308  C026  FFDA         	movff	reverseOneSquare@mL+1,fsr2h
  6056   00430C  6ADF               	clrf	indf2,c
  6057                           
  6058                           ;dc_motor.c: 498:     mR->power = 0;
  6059   00430E  C027  FFD9         	movff	reverseOneSquare@mR,fsr2l
  6060   004312  C028  FFDA         	movff	reverseOneSquare@mR+1,fsr2h
  6061   004316  6ADF               	clrf	indf2,c
  6062   004318  0012               	return		;funcret
  6063   00431A                     __end_of_reverseOneSquare:
  6064                           	callstack 0
  6065                           
  6066 ;; *************** function _resetTimer *****************
  6067 ;; Defined at:
  6068 ;;		line 23 in file "timers.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;		None
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;		None
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1    wreg      void 
  6075 ;; Registers used:
  6076 ;;		wreg, status,2
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6086 ;;Total ram usage:        0 bytes
  6087 ;; Hardware stack levels used: 1
  6088 ;; Hardware stack levels required when called: 6
  6089 ;; This function calls:
  6090 ;;		Nothing
  6091 ;; This function is called by:
  6092 ;;		_main
  6093 ;;		_returnHome
  6094 ;;		_lostReturnHome
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text8
  6099   005420                     __ptext8:
  6100                           	callstack 0
  6101   005420                     _resetTimer:
  6102                           	callstack 24
  6103   005420                     
  6104                           ;timers.c: 25:     TMR0H=0;
  6105   005420  0E00               	movlw	0
  6106   005422  6ED4               	movwf	212,c	;volatile
  6107                           
  6108                           ;timers.c: 26:     TMR0L=0;
  6109   005424  0E00               	movlw	0
  6110   005426  6ED3               	movwf	211,c	;volatile
  6111   005428  0012               	return		;funcret
  6112   00542A                     __end_of_resetTimer:
  6113                           	callstack 0
  6114                           
  6115 ;; *************** function _get16bitTMR0val *****************
  6116 ;; Defined at:
  6117 ;;		line 33 in file "timers.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;		None
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  timer_val       2   25[COMRAM] unsigned int 
  6122 ;;  timer_high      2   23[COMRAM] unsigned int 
  6123 ;;  timer_low       2   21[COMRAM] unsigned int 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  2   17[COMRAM] unsigned int 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6135 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6136 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6137 ;;Total ram usage:       10 bytes
  6138 ;; Hardware stack levels used: 1
  6139 ;; Hardware stack levels required when called: 6
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_main
  6144 ;;		_returnHome
  6145 ;;		_lostReturnHome
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text9
  6150   005242                     __ptext9:
  6151                           	callstack 0
  6152   005242                     _get16bitTMR0val:
  6153                           	callstack 22
  6154   005242                     
  6155                           ;timers.c: 36:     unsigned int timer_low = TMR0L;
  6156   005242  CFD3 F016          	movff	4051,get16bitTMR0val@timer_low	;volatile
  6157   005246  6A17               	clrf	(get16bitTMR0val@timer_low+1)^0,c
  6158                           
  6159                           ;timers.c: 37:     unsigned int timer_high = TMR0H;
  6160   005248  CFD4 F018          	movff	4052,get16bitTMR0val@timer_high	;volatile
  6161   00524C  6A19               	clrf	(get16bitTMR0val@timer_high+1)^0,c
  6162   00524E                     
  6163                           ;timers.c: 38:     unsigned int timer_val = (timer_high<<8) | timer_low;
  6164   00524E  5018               	movf	get16bitTMR0val@timer_high^0,w,c
  6165   005250  6E15               	movwf	(??_get16bitTMR0val+1)^0,c
  6166   005252  6A14               	clrf	??_get16bitTMR0val^0,c
  6167   005254  5016               	movf	get16bitTMR0val@timer_low^0,w,c
  6168   005256  1014               	iorwf	??_get16bitTMR0val^0,w,c
  6169   005258  6E1A               	movwf	get16bitTMR0val@timer_val^0,c
  6170   00525A  5017               	movf	(get16bitTMR0val@timer_low+1)^0,w,c
  6171   00525C  1015               	iorwf	(??_get16bitTMR0val+1)^0,w,c
  6172   00525E  6E1B               	movwf	(get16bitTMR0val@timer_val+1)^0,c
  6173   005260                     
  6174                           ;timers.c: 39:     return timer_val;
  6175   005260  C01A  F012         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  6176   005264  C01B  F013         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  6177   005268  0012               	return		;funcret
  6178   00526A                     __end_of_get16bitTMR0val:
  6179                           	callstack 0
  6180                           
  6181 ;; *************** function _fullSpeedAhead *****************
  6182 ;; Defined at:
  6183 ;;		line 451 in file "dc_motor.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  6186 ;;		 -> main@motorL(10), 
  6187 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  6188 ;;		 -> main@motorR(10), 
  6189 ;;  straightSpee    1   40[COMRAM] unsigned char 
  6190 ;;  straightRamp    1   41[COMRAM] unsigned char 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  cur_power       2   47[COMRAM] int 
  6193 ;;  i               2   45[COMRAM] int 
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  1    wreg      void 
  6196 ;; Registers used:
  6197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6203 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6204 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6205 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6206 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6207 ;;Total ram usage:       13 bytes
  6208 ;; Hardware stack levels used: 1
  6209 ;; Hardware stack levels required when called: 8
  6210 ;; This function calls:
  6211 ;;		_setMotorPWM
  6212 ;; This function is called by:
  6213 ;;		_main
  6214 ;;		_move
  6215 ;;		_returnHome
  6216 ;;		_lostReturnHome
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text10
  6221   004A4E                     __ptext10:
  6222                           	callstack 0
  6223   004A4E                     _fullSpeedAhead:
  6224                           	callstack 20
  6225   004A4E                     
  6226                           ;dc_motor.c: 451: void fullSpeedAhead(DC_motor *mL, DC_motor *mR, char straightSpeed, un
      +                          signed char straightRamp);dc_motor.c: 452: {;dc_motor.c: 453:     mL->direction = 1;
  6227   004A4E  EE20 F001          	lfsr	2,1
  6228   004A52  5025               	movf	fullSpeedAhead@mL^0,w,c
  6229   004A54  26D9               	addwf	fsr2l,f,c
  6230   004A56  5026               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6231   004A58  22DA               	addwfc	fsr2h,f,c
  6232   004A5A  0E01               	movlw	1
  6233   004A5C  6EDF               	movwf	indf2,c
  6234                           
  6235                           ;dc_motor.c: 454:     mR->direction = 1;
  6236   004A5E  EE20 F001          	lfsr	2,1
  6237   004A62  5027               	movf	fullSpeedAhead@mR^0,w,c
  6238   004A64  26D9               	addwf	fsr2l,f,c
  6239   004A66  5028               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6240   004A68  22DA               	addwfc	fsr2h,f,c
  6241   004A6A  0E01               	movlw	1
  6242   004A6C  6EDF               	movwf	indf2,c
  6243   004A6E                     
  6244                           ;dc_motor.c: 455:     int i;;dc_motor.c: 456:     int cur_power;;dc_motor.c: 457:     fo
      +                          r (cur_power=1;cur_power<=straightSpeed;cur_power++) {
  6245   004A6E  0E00               	movlw	0
  6246   004A70  6E31               	movwf	(fullSpeedAhead@cur_power+1)^0,c
  6247   004A72  0E01               	movlw	1
  6248   004A74  6E30               	movwf	fullSpeedAhead@cur_power^0,c
  6249   004A76  EF87  F025         	goto	l4694
  6250   004A7A                     l4680:
  6251                           
  6252                           ;dc_motor.c: 458:         mL->power = cur_power+mL->compensation;
  6253   004A7A  EE20 F009          	lfsr	2,9
  6254   004A7E  5025               	movf	fullSpeedAhead@mL^0,w,c
  6255   004A80  26D9               	addwf	fsr2l,f,c
  6256   004A82  5026               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6257   004A84  22DA               	addwfc	fsr2h,f,c
  6258   004A86  50DF               	movf	indf2,w,c
  6259   004A88  2430               	addwf	fullSpeedAhead@cur_power^0,w,c
  6260   004A8A  C025  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6261   004A8E  C026  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6262   004A92  6EDF               	movwf	indf2,c
  6263                           
  6264                           ;dc_motor.c: 459:         mR->power = cur_power+mR->compensation;
  6265   004A94  EE20 F009          	lfsr	2,9
  6266   004A98  5027               	movf	fullSpeedAhead@mR^0,w,c
  6267   004A9A  26D9               	addwf	fsr2l,f,c
  6268   004A9C  5028               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6269   004A9E  22DA               	addwfc	fsr2h,f,c
  6270   004AA0  50DF               	movf	indf2,w,c
  6271   004AA2  2430               	addwf	fullSpeedAhead@cur_power^0,w,c
  6272   004AA4  C027  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6273   004AA8  C028  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6274   004AAC  6EDF               	movwf	indf2,c
  6275   004AAE                     
  6276                           ;dc_motor.c: 460:         setMotorPWM(mL);
  6277   004AAE  C025  F01F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6278   004AB2  C026  F020         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6279   004AB6  EC67  F023         	call	_setMotorPWM	;wreg free
  6280   004ABA                     
  6281                           ;dc_motor.c: 461:         setMotorPWM(mR);
  6282   004ABA  C027  F01F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6283   004ABE  C028  F020         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6284   004AC2  EC67  F023         	call	_setMotorPWM	;wreg free
  6285   004AC6                     
  6286                           ;dc_motor.c: 462:         for (i=0;i<straightRamp;i++) {
  6287   004AC6  0E00               	movlw	0
  6288   004AC8  6E2F               	movwf	(fullSpeedAhead@i+1)^0,c
  6289   004ACA  0E00               	movlw	0
  6290   004ACC  6E2E               	movwf	fullSpeedAhead@i^0,c
  6291   004ACE  EF73  F025         	goto	l683
  6292   004AD2                     l4688:
  6293                           
  6294                           ;dc_motor.c: 463:             _delay((unsigned long)((5)*(64000000/4000.0)));
  6295   004AD2  0E68               	movlw	104
  6296   004AD4  6E2B               	movwf	??_fullSpeedAhead^0,c
  6297   004AD6  0EE4               	movlw	228
  6298   004AD8                     u6217:
  6299   004AD8  2EE8               	decfsz	wreg,f,c
  6300   004ADA  D7FE               	bra	u6217
  6301   004ADC  2E2B               	decfsz	??_fullSpeedAhead^0,f,c
  6302   004ADE  D7FC               	bra	u6217
  6303   004AE0  D000               	nop2	
  6304   004AE2                     
  6305                           ;dc_motor.c: 464:         }
  6306   004AE2  4A2E               	infsnz	fullSpeedAhead@i^0,f,c
  6307   004AE4  2A2F               	incf	(fullSpeedAhead@i+1)^0,f,c
  6308   004AE6                     l683:
  6309   004AE6  502A               	movf	fullSpeedAhead@straightRamp^0,w,c
  6310   004AE8  6E2B               	movwf	??_fullSpeedAhead^0,c
  6311   004AEA  6A2C               	clrf	(??_fullSpeedAhead+1)^0,c
  6312   004AEC  502B               	movf	??_fullSpeedAhead^0,w,c
  6313   004AEE  5C2E               	subwf	fullSpeedAhead@i^0,w,c
  6314   004AF0  502F               	movf	(fullSpeedAhead@i+1)^0,w,c
  6315   004AF2  0A80               	xorlw	128
  6316   004AF4  6E2D               	movwf	(??_fullSpeedAhead+2)^0,c
  6317   004AF6  502C               	movf	(??_fullSpeedAhead+1)^0,w,c
  6318   004AF8  0A80               	xorlw	128
  6319   004AFA  582D               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6320   004AFC  A0D8               	btfss	status,0,c
  6321   004AFE  EF83  F025         	goto	u3761
  6322   004B02  EF85  F025         	goto	u3760
  6323   004B06                     u3761:
  6324   004B06  EF69  F025         	goto	l4688
  6325   004B0A                     u3760:
  6326   004B0A                     
  6327                           ;dc_motor.c: 465:     }
  6328   004B0A  4A30               	infsnz	fullSpeedAhead@cur_power^0,f,c
  6329   004B0C  2A31               	incf	(fullSpeedAhead@cur_power+1)^0,f,c
  6330   004B0E                     l4694:
  6331   004B0E  5029               	movf	fullSpeedAhead@straightSpeed^0,w,c
  6332   004B10  6E2B               	movwf	??_fullSpeedAhead^0,c
  6333   004B12  6A2C               	clrf	(??_fullSpeedAhead+1)^0,c
  6334   004B14  5030               	movf	fullSpeedAhead@cur_power^0,w,c
  6335   004B16  5C2B               	subwf	??_fullSpeedAhead^0,w,c
  6336   004B18  502C               	movf	(??_fullSpeedAhead+1)^0,w,c
  6337   004B1A  0A80               	xorlw	128
  6338   004B1C  6E2D               	movwf	(??_fullSpeedAhead+2)^0,c
  6339   004B1E  5031               	movf	(fullSpeedAhead@cur_power+1)^0,w,c
  6340   004B20  0A80               	xorlw	128
  6341   004B22  582D               	subwfb	(??_fullSpeedAhead+2)^0,w,c
  6342   004B24  B0D8               	btfsc	status,0,c
  6343   004B26  EF97  F025         	goto	u3771
  6344   004B2A  EF99  F025         	goto	u3770
  6345   004B2E                     u3771:
  6346   004B2E  EF3D  F025         	goto	l4680
  6347   004B32                     u3770:
  6348   004B32  0012               	return		;funcret
  6349   004B34                     __end_of_fullSpeedAhead:
  6350                           	callstack 0
  6351                           
  6352 ;; *************** function _initUSART4 *****************
  6353 ;; Defined at:
  6354 ;;		line 4 in file "serial.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6372 ;;Total ram usage:        0 bytes
  6373 ;; Hardware stack levels used: 1
  6374 ;; Hardware stack levels required when called: 6
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_main
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text11
  6383   00538A                     __ptext11:
  6384                           	callstack 0
  6385   00538A                     _initUSART4:
  6386                           	callstack 24
  6387   00538A                     
  6388                           ;serial.c: 7:     RC0PPS = 0x12;
  6389   00538A  0E12               	movlw	18
  6390   00538C  010E               	movlb	14	; () banked
  6391   00538E  6F62               	movwf	98,b	;volatile
  6392                           
  6393                           ;serial.c: 8:     RX4PPS = 0x11;
  6394   005390  0E11               	movlw	17
  6395   005392  6F15               	movwf	21,b	;volatile
  6396   005394                     
  6397                           ; BSR set to: 14
  6398                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  6399   005394  97E9               	bcf	233,3,b	;volatile
  6400   005396                     
  6401                           ; BSR set to: 14
  6402                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
  6403   005396  95E8               	bcf	232,2,b	;volatile
  6404                           
  6405                           ;serial.c: 13:     SP4BRGL = 51;
  6406   005398  0E33               	movlw	51
  6407   00539A  6FE5               	movwf	229,b	;volatile
  6408                           
  6409                           ;serial.c: 14:     SP4BRGH = 0;
  6410   00539C  0E00               	movlw	0
  6411   00539E  6FE6               	movwf	230,b	;volatile
  6412   0053A0                     
  6413                           ; BSR set to: 14
  6414                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  6415   0053A0  89E7               	bsf	231,4,b	;volatile
  6416   0053A2                     
  6417                           ; BSR set to: 14
  6418                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  6419   0053A2  8BE8               	bsf	232,5,b	;volatile
  6420   0053A4                     
  6421                           ; BSR set to: 14
  6422                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  6423   0053A4  8FE7               	bsf	231,7,b	;volatile
  6424   0053A6                     
  6425                           ; BSR set to: 14
  6426   0053A6  0012               	return		;funcret
  6427   0053A8                     __end_of_initUSART4:
  6428                           	callstack 0
  6429                           
  6430 ;; *************** function _initDCmotorsPWM *****************
  6431 ;; Defined at:
  6432 ;;		line 8 in file "dc_motor.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  PWMperiod       2   17[COMRAM] unsigned int 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1    wreg      void 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6450 ;;Total ram usage:        2 bytes
  6451 ;; Hardware stack levels used: 1
  6452 ;; Hardware stack levels required when called: 6
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_main
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text12
  6461   004DE8                     __ptext12:
  6462                           	callstack 0
  6463   004DE8                     _initDCmotorsPWM:
  6464                           	callstack 24
  6465   004DE8                     
  6466                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  6467   004DE8  947D               	bcf	125,2,c	;volatile
  6468                           
  6469                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  6470   004DEA  9485               	bcf	133,2,c	;volatile
  6471                           
  6472                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  6473   004DEC  987D               	bcf	125,4,c	;volatile
  6474                           
  6475                           ;dc_motor.c: 14:     TRISEbits.TRISE4=0;
  6476   004DEE  9885               	bcf	133,4,c	;volatile
  6477                           
  6478                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  6479   004DF0  9E7B               	bcf	123,7,c	;volatile
  6480                           
  6481                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  6482   004DF2  9E83               	bcf	131,7,c	;volatile
  6483                           
  6484                           ;dc_motor.c: 17:     LATGbits.LATG6=0;
  6485   004DF4  9C7F               	bcf	127,6,c	;volatile
  6486                           
  6487                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  6488   004DF6  9C87               	bcf	135,6,c	;volatile
  6489   004DF8                     
  6490                           ;dc_motor.c: 21:     RE2PPS=0x05;
  6491   004DF8  0E05               	movlw	5
  6492   004DFA  010E               	movlb	14	; () banked
  6493   004DFC  6F74               	movwf	116,b	;volatile
  6494                           
  6495                           ;dc_motor.c: 22:     RE4PPS=0x06;
  6496   004DFE  0E06               	movlw	6
  6497   004E00  6F76               	movwf	118,b	;volatile
  6498                           
  6499                           ;dc_motor.c: 23:     RC7PPS=0x07;
  6500   004E02  0E07               	movlw	7
  6501   004E04  6F69               	movwf	105,b	;volatile
  6502                           
  6503                           ;dc_motor.c: 24:     RG6PPS=0x08;
  6504   004E06  0E08               	movlw	8
  6505   004E08  6F88               	movwf	136,b	;volatile
  6506                           
  6507                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  6508   004E0A  50BD               	movf	189,w,c	;volatile
  6509   004E0C  0B8F               	andlw	-113
  6510   004E0E  0930               	iorlw	48
  6511   004E10  6EBD               	movwf	189,c	;volatile
  6512                           
  6513                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  6514   004E12  0EE0               	movlw	-32
  6515   004E14  16BE               	andwf	190,f,c	;volatile
  6516                           
  6517                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  6518   004E16  50BF               	movf	191,w,c	;volatile
  6519   004E18  0BF0               	andlw	-16
  6520   004E1A  0901               	iorlw	1
  6521   004E1C  6EBF               	movwf	191,c	;volatile
  6522   004E1E                     
  6523                           ; BSR set to: 14
  6524                           ;dc_motor.c: 33:     T2PR=PWMperiod;
  6525   004E1E  C012  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  6526   004E22                     
  6527                           ; BSR set to: 14
  6528                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  6529   004E22  8EBD               	bsf	189,7,c	;volatile
  6530                           
  6531                           ;dc_motor.c: 38:     CCPR1H=0;
  6532   004E24  0E00               	movlw	0
  6533   004E26  6EAA               	movwf	170,c	;volatile
  6534                           
  6535                           ;dc_motor.c: 39:     CCPR2H=0;
  6536   004E28  0E00               	movlw	0
  6537   004E2A  6EA6               	movwf	166,c	;volatile
  6538                           
  6539                           ;dc_motor.c: 40:     CCPR3H=0;
  6540   004E2C  0E00               	movlw	0
  6541   004E2E  010F               	movlb	15	; () banked
  6542   004E30  6F25               	movwf	37,b	;volatile
  6543                           
  6544                           ;dc_motor.c: 41:     CCPR4H=0;
  6545   004E32  0E00               	movlw	0
  6546   004E34  6F21               	movwf	33,b	;volatile
  6547                           
  6548                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  6549   004E36  0EFC               	movlw	-4
  6550   004E38  16AD               	andwf	173,f,c	;volatile
  6551                           
  6552                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  6553   004E3A  0EF3               	movlw	-13
  6554   004E3C  16AD               	andwf	173,f,c	;volatile
  6555                           
  6556                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  6557   004E3E  0ECF               	movlw	-49
  6558   004E40  16AD               	andwf	173,f,c	;volatile
  6559                           
  6560                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  6561   004E42  0E3F               	movlw	-193
  6562   004E44  16AD               	andwf	173,f,c	;volatile
  6563   004E46                     
  6564                           ; BSR set to: 15
  6565                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  6566   004E46  88AB               	bsf	171,4,c	;volatile
  6567                           
  6568                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  6569   004E48  50AB               	movf	171,w,c	;volatile
  6570   004E4A  0BF0               	andlw	-16
  6571   004E4C  090C               	iorlw	12
  6572   004E4E  6EAB               	movwf	171,c	;volatile
  6573   004E50                     
  6574                           ; BSR set to: 15
  6575                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  6576   004E50  8EAB               	bsf	171,7,c	;volatile
  6577   004E52                     
  6578                           ; BSR set to: 15
  6579                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  6580   004E52  88A7               	bsf	167,4,c	;volatile
  6581                           
  6582                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  6583   004E54  50A7               	movf	167,w,c	;volatile
  6584   004E56  0BF0               	andlw	-16
  6585   004E58  090C               	iorlw	12
  6586   004E5A  6EA7               	movwf	167,c	;volatile
  6587   004E5C                     
  6588                           ; BSR set to: 15
  6589                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  6590   004E5C  8EA7               	bsf	167,7,c	;volatile
  6591   004E5E                     
  6592                           ; BSR set to: 15
  6593                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  6594   004E5E  8926               	bsf	38,4,b	;volatile
  6595                           
  6596                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  6597   004E60  5126               	movf	38,w,b	;volatile
  6598   004E62  0BF0               	andlw	-16
  6599   004E64  090C               	iorlw	12
  6600   004E66  6F26               	movwf	38,b	;volatile
  6601   004E68                     
  6602                           ; BSR set to: 15
  6603                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  6604   004E68  8F26               	bsf	38,7,b	;volatile
  6605   004E6A                     
  6606                           ; BSR set to: 15
  6607                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  6608   004E6A  8922               	bsf	34,4,b	;volatile
  6609                           
  6610                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  6611   004E6C  5122               	movf	34,w,b	;volatile
  6612   004E6E  0BF0               	andlw	-16
  6613   004E70  090C               	iorlw	12
  6614   004E72  6F22               	movwf	34,b	;volatile
  6615   004E74                     
  6616                           ; BSR set to: 15
  6617                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  6618   004E74  8F22               	bsf	34,7,b	;volatile
  6619   004E76                     
  6620                           ; BSR set to: 15
  6621   004E76  0012               	return		;funcret
  6622   004E78                     __end_of_initDCmotorsPWM:
  6623                           	callstack 0
  6624                           
  6625 ;; *************** function _color_detect *****************
  6626 ;; Defined at:
  6627 ;;		line 116 in file "color.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  HSV             6    0[BANK0 ] struct HSV_val
  6630 ;;  red             6    6[BANK0 ] struct HSV_calib
  6631 ;;  green           6   12[BANK0 ] struct HSV_calib
  6632 ;;  blue            6   18[BANK0 ] struct HSV_calib
  6633 ;;  yellow          6   24[BANK0 ] struct HSV_calib
  6634 ;;  pink            6   30[BANK0 ] struct HSV_calib
  6635 ;;  orange          6   36[BANK0 ] struct HSV_calib
  6636 ;;  lightblue       6   42[BANK0 ] struct HSV_calib
  6637 ;;  white           6   48[BANK0 ] struct HSV_calib
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  color           1   34[COMRAM] unsigned char 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1    wreg      unsigned char 
  6642 ;; Registers used:
  6643 ;;		wreg, status,2, status,0, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6649 ;;      Params:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6651 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6652 ;;      Totals:        14      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6653 ;;Total ram usage:       68 bytes
  6654 ;; Hardware stack levels used: 1
  6655 ;; Hardware stack levels required when called: 7
  6656 ;; This function calls:
  6657 ;;		_max
  6658 ;;		_min
  6659 ;; This function is called by:
  6660 ;;		_main
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text13
  6665   00371C                     __ptext13:
  6666                           	callstack 0
  6667   00371C                     _color_detect:
  6668                           	callstack 23
  6669   00371C                     
  6670                           ;color.c: 116: unsigned char color_detect(HSV_val HSV, HSV_calib red, HSV_calib green, H
      +                          SV_calib blue, HSV_calib yellow, HSV_calib pink, HSV_calib orange, HSV_calib lightblue, 
      +                          HSV_calib white);color.c: 117: {;color.c: 118:     unsigned char color=9;
  6671   00371C  0E09               	movlw	9
  6672   00371E  6E23               	movwf	color_detect@color^0,c
  6673   003720                     
  6674                           ;color.c: 121:     if (min(green.H,lightblue.H)-2000 < HSV.H && HSV.H < max(green.H,ligh
      +                          tblue.H)+2000) {
  6675   003720  C0AA  F012         	movff	color_detect@green,min@a
  6676   003724  C0AB  F013         	movff	color_detect@green+1,min@a+1
  6677   003728  C0C8  F014         	movff	color_detect@lightblue,min@b
  6678   00372C  C0C9  F015         	movff	color_detect@lightblue+1,min@b+1
  6679   003730  ECCA  F028         	call	_min	;wreg free
  6680   003734  0E30               	movlw	48
  6681   003736  2412               	addwf	?_min^0,w,c
  6682   003738  6E16               	movwf	??_color_detect^0,c
  6683   00373A  0EF8               	movlw	248
  6684   00373C  2013               	addwfc	(?_min+1)^0,w,c
  6685   00373E  6E17               	movwf	(??_color_detect+1)^0,c
  6686   003740  0100               	movlb	0	; () banked
  6687   003742  519E               	movf	color_detect@HSV& (0+255),w,b
  6688   003744  5C16               	subwf	??_color_detect^0,w,c
  6689   003746  519F               	movf	(color_detect@HSV+1)& (0+255),w,b
  6690   003748  5817               	subwfb	(??_color_detect+1)^0,w,c
  6691   00374A  B0D8               	btfsc	status,0,c
  6692   00374C  EFAA  F01B         	goto	u4741
  6693   003750  EFAC  F01B         	goto	u4740
  6694   003754                     u4741:
  6695   003754  EFE3  F01B         	goto	l5610
  6696   003758                     u4740:
  6697   003758                     
  6698                           ; BSR set to: 0
  6699   003758  C0AA  F012         	movff	color_detect@green,max@a
  6700   00375C  C0AB  F013         	movff	color_detect@green+1,max@a+1
  6701   003760  C0C8  F014         	movff	color_detect@lightblue,max@b
  6702   003764  C0C9  F015         	movff	color_detect@lightblue+1,max@b+1
  6703   003768  ECE0  F028         	call	_max	;wreg free
  6704   00376C  0ED0               	movlw	208
  6705   00376E  2412               	addwf	?_max^0,w,c
  6706   003770  6E16               	movwf	??_color_detect^0,c
  6707   003772  0E07               	movlw	7
  6708   003774  2013               	addwfc	(?_max+1)^0,w,c
  6709   003776  6E17               	movwf	(??_color_detect+1)^0,c
  6710   003778  5016               	movf	??_color_detect^0,w,c
  6711   00377A  0100               	movlb	0	; () banked
  6712   00377C  5D9E               	subwf	color_detect@HSV& (0+255),w,b
  6713   00377E  5017               	movf	(??_color_detect+1)^0,w,c
  6714   003780  599F               	subwfb	(color_detect@HSV+1)& (0+255),w,b
  6715   003782  B0D8               	btfsc	status,0,c
  6716   003784  EFC6  F01B         	goto	u4751
  6717   003788  EFC8  F01B         	goto	u4750
  6718   00378C                     u4751:
  6719   00378C  EFE3  F01B         	goto	l5610
  6720   003790                     u4750:
  6721   003790                     
  6722                           ; BSR set to: 0
  6723                           ;color.c: 122:         if (HSV.S > lightblue.S + 500){color = 2;}
  6724   003790  0EF4               	movlw	244
  6725   003792  25CA               	addwf	(color_detect@lightblue+2)& (0+255),w,b
  6726   003794  6E16               	movwf	??_color_detect^0,c
  6727   003796  0E01               	movlw	1
  6728   003798  21CB               	addwfc	(color_detect@lightblue+3)& (0+255),w,b
  6729   00379A  6E17               	movwf	(??_color_detect+1)^0,c
  6730   00379C  51A0               	movf	(color_detect@HSV+2)& (0+255),w,b
  6731   00379E  5C16               	subwf	??_color_detect^0,w,c
  6732   0037A0  51A1               	movf	(color_detect@HSV+3)& (0+255),w,b
  6733   0037A2  5817               	subwfb	(??_color_detect+1)^0,w,c
  6734   0037A4  B0D8               	btfsc	status,0,c
  6735   0037A6  EFD7  F01B         	goto	u4761
  6736   0037AA  EFD9  F01B         	goto	u4760
  6737   0037AE                     u4761:
  6738   0037AE  EFDD  F01B         	goto	l5608
  6739   0037B2                     u4760:
  6740   0037B2                     
  6741                           ; BSR set to: 0
  6742   0037B2  0E02               	movlw	2
  6743   0037B4  6E23               	movwf	color_detect@color^0,c
  6744   0037B6  EFA4  F01C         	goto	l5638
  6745   0037BA                     l5608:
  6746                           
  6747                           ; BSR set to: 0
  6748   0037BA  0E07               	movlw	7
  6749   0037BC  6E23               	movwf	color_detect@color^0,c
  6750   0037BE  EFA4  F01C         	goto	l5638
  6751   0037C2                     l167:
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;color.c: 124:     }
  6755   0037C2  EFA4  F01C         	goto	l5638
  6756   0037C6                     l5610:
  6757                           
  6758                           ; BSR set to: 0
  6759   0037C6  0E30               	movlw	48
  6760   0037C8  25B0               	addwf	color_detect@blue& (0+255),w,b
  6761   0037CA  6E16               	movwf	??_color_detect^0,c
  6762   0037CC  0EF8               	movlw	248
  6763   0037CE  21B1               	addwfc	(color_detect@blue+1)& (0+255),w,b
  6764   0037D0  6E17               	movwf	(??_color_detect+1)^0,c
  6765   0037D2  519E               	movf	color_detect@HSV& (0+255),w,b
  6766   0037D4  5C16               	subwf	??_color_detect^0,w,c
  6767   0037D6  519F               	movf	(color_detect@HSV+1)& (0+255),w,b
  6768   0037D8  5817               	subwfb	(??_color_detect+1)^0,w,c
  6769   0037DA  B0D8               	btfsc	status,0,c
  6770   0037DC  EFF2  F01B         	goto	u4771
  6771   0037E0  EFF4  F01B         	goto	u4770
  6772   0037E4                     u4771:
  6773   0037E4  EF09  F01C         	goto	l5616
  6774   0037E8                     u4770:
  6775   0037E8                     
  6776                           ; BSR set to: 0
  6777   0037E8  0ED0               	movlw	208
  6778   0037EA  25B0               	addwf	color_detect@blue& (0+255),w,b
  6779   0037EC  6E16               	movwf	??_color_detect^0,c
  6780   0037EE  0E07               	movlw	7
  6781   0037F0  21B1               	addwfc	(color_detect@blue+1)& (0+255),w,b
  6782   0037F2  6E17               	movwf	(??_color_detect+1)^0,c
  6783   0037F4  5016               	movf	??_color_detect^0,w,c
  6784   0037F6  5D9E               	subwf	color_detect@HSV& (0+255),w,b
  6785   0037F8  5017               	movf	(??_color_detect+1)^0,w,c
  6786   0037FA  599F               	subwfb	(color_detect@HSV+1)& (0+255),w,b
  6787   0037FC  B0D8               	btfsc	status,0,c
  6788   0037FE  EF03  F01C         	goto	u4781
  6789   003802  EF05  F01C         	goto	u4780
  6790   003806                     u4781:
  6791   003806  EF09  F01C         	goto	l5616
  6792   00380A                     u4780:
  6793   00380A                     
  6794                           ; BSR set to: 0
  6795   00380A  0E03               	movlw	3
  6796   00380C  6E23               	movwf	color_detect@color^0,c
  6797   00380E  EFA4  F01C         	goto	l5638
  6798   003812                     l5616:
  6799                           
  6800                           ; BSR set to: 0
  6801   003812  C0B6  F012         	movff	color_detect@yellow,min@a
  6802   003816  C0B7  F013         	movff	color_detect@yellow+1,min@a+1
  6803   00381A  C0BC  F014         	movff	color_detect@pink,min@b
  6804   00381E  C0BD  F015         	movff	color_detect@pink+1,min@b+1
  6805   003822  ECCA  F028         	call	_min	;wreg free
  6806   003826  0E18               	movlw	24
  6807   003828  2412               	addwf	?_min^0,w,c
  6808   00382A  6E16               	movwf	??_color_detect^0,c
  6809   00382C  0EFC               	movlw	252
  6810   00382E  2013               	addwfc	(?_min+1)^0,w,c
  6811   003830  6E17               	movwf	(??_color_detect+1)^0,c
  6812   003832  0100               	movlb	0	; () banked
  6813   003834  519E               	movf	color_detect@HSV& (0+255),w,b
  6814   003836  5C16               	subwf	??_color_detect^0,w,c
  6815   003838  519F               	movf	(color_detect@HSV+1)& (0+255),w,b
  6816   00383A  5817               	subwfb	(??_color_detect+1)^0,w,c
  6817   00383C  B0D8               	btfsc	status,0,c
  6818   00383E  EF23  F01C         	goto	u4791
  6819   003842  EF25  F01C         	goto	u4790
  6820   003846                     u4791:
  6821   003846  EF5A  F01C         	goto	l5626
  6822   00384A                     u4790:
  6823   00384A                     
  6824                           ; BSR set to: 0
  6825   00384A  C0B6  F012         	movff	color_detect@yellow,max@a
  6826   00384E  C0B7  F013         	movff	color_detect@yellow+1,max@a+1
  6827   003852  C0BC  F014         	movff	color_detect@pink,max@b
  6828   003856  C0BD  F015         	movff	color_detect@pink+1,max@b+1
  6829   00385A  ECE0  F028         	call	_max	;wreg free
  6830   00385E  0EE8               	movlw	232
  6831   003860  2412               	addwf	?_max^0,w,c
  6832   003862  6E16               	movwf	??_color_detect^0,c
  6833   003864  0E03               	movlw	3
  6834   003866  2013               	addwfc	(?_max+1)^0,w,c
  6835   003868  6E17               	movwf	(??_color_detect+1)^0,c
  6836   00386A  5016               	movf	??_color_detect^0,w,c
  6837   00386C  0100               	movlb	0	; () banked
  6838   00386E  5D9E               	subwf	color_detect@HSV& (0+255),w,b
  6839   003870  5017               	movf	(??_color_detect+1)^0,w,c
  6840   003872  599F               	subwfb	(color_detect@HSV+1)& (0+255),w,b
  6841   003874  B0D8               	btfsc	status,0,c
  6842   003876  EF3F  F01C         	goto	u4801
  6843   00387A  EF41  F01C         	goto	u4800
  6844   00387E                     u4801:
  6845   00387E  EF5A  F01C         	goto	l5626
  6846   003882                     u4800:
  6847   003882                     
  6848                           ; BSR set to: 0
  6849                           ;color.c: 131:         if (HSV.S > pink.S + 500){color = 4;}
  6850   003882  0EF4               	movlw	244
  6851   003884  25BE               	addwf	(color_detect@pink+2)& (0+255),w,b
  6852   003886  6E16               	movwf	??_color_detect^0,c
  6853   003888  0E01               	movlw	1
  6854   00388A  21BF               	addwfc	(color_detect@pink+3)& (0+255),w,b
  6855   00388C  6E17               	movwf	(??_color_detect+1)^0,c
  6856   00388E  51A0               	movf	(color_detect@HSV+2)& (0+255),w,b
  6857   003890  5C16               	subwf	??_color_detect^0,w,c
  6858   003892  51A1               	movf	(color_detect@HSV+3)& (0+255),w,b
  6859   003894  5817               	subwfb	(??_color_detect+1)^0,w,c
  6860   003896  B0D8               	btfsc	status,0,c
  6861   003898  EF50  F01C         	goto	u4811
  6862   00389C  EF52  F01C         	goto	u4810
  6863   0038A0                     u4811:
  6864   0038A0  EF56  F01C         	goto	l5624
  6865   0038A4                     u4810:
  6866   0038A4                     
  6867                           ; BSR set to: 0
  6868   0038A4  0E04               	movlw	4
  6869   0038A6  6E23               	movwf	color_detect@color^0,c
  6870   0038A8  EFA4  F01C         	goto	l5638
  6871   0038AC                     l5624:
  6872                           
  6873                           ; BSR set to: 0
  6874   0038AC  0E05               	movlw	5
  6875   0038AE  6E23               	movwf	color_detect@color^0,c
  6876   0038B0  EFA4  F01C         	goto	l5638
  6877   0038B4                     l5626:
  6878                           
  6879                           ; BSR set to: 0
  6880   0038B4  0E0C               	movlw	12
  6881   0038B6  25C2               	addwf	color_detect@orange& (0+255),w,b
  6882   0038B8  6E16               	movwf	??_color_detect^0,c
  6883   0038BA  0EFE               	movlw	254
  6884   0038BC  21C3               	addwfc	(color_detect@orange+1)& (0+255),w,b
  6885   0038BE  6E17               	movwf	(??_color_detect+1)^0,c
  6886   0038C0  519E               	movf	color_detect@HSV& (0+255),w,b
  6887   0038C2  5C16               	subwf	??_color_detect^0,w,c
  6888   0038C4  519F               	movf	(color_detect@HSV+1)& (0+255),w,b
  6889   0038C6  5817               	subwfb	(??_color_detect+1)^0,w,c
  6890   0038C8  B0D8               	btfsc	status,0,c
  6891   0038CA  EF69  F01C         	goto	u4821
  6892   0038CE  EF6B  F01C         	goto	u4820
  6893   0038D2                     u4821:
  6894   0038D2  EF80  F01C         	goto	l5632
  6895   0038D6                     u4820:
  6896   0038D6                     
  6897                           ; BSR set to: 0
  6898   0038D6  0EF4               	movlw	244
  6899   0038D8  25C2               	addwf	color_detect@orange& (0+255),w,b
  6900   0038DA  6E16               	movwf	??_color_detect^0,c
  6901   0038DC  0E01               	movlw	1
  6902   0038DE  21C3               	addwfc	(color_detect@orange+1)& (0+255),w,b
  6903   0038E0  6E17               	movwf	(??_color_detect+1)^0,c
  6904   0038E2  5016               	movf	??_color_detect^0,w,c
  6905   0038E4  5D9E               	subwf	color_detect@HSV& (0+255),w,b
  6906   0038E6  5017               	movf	(??_color_detect+1)^0,w,c
  6907   0038E8  599F               	subwfb	(color_detect@HSV+1)& (0+255),w,b
  6908   0038EA  B0D8               	btfsc	status,0,c
  6909   0038EC  EF7A  F01C         	goto	u4831
  6910   0038F0  EF7C  F01C         	goto	u4830
  6911   0038F4                     u4831:
  6912   0038F4  EF80  F01C         	goto	l5632
  6913   0038F8                     u4830:
  6914   0038F8                     
  6915                           ; BSR set to: 0
  6916   0038F8  0E06               	movlw	6
  6917   0038FA  6E23               	movwf	color_detect@color^0,c
  6918   0038FC  EFA4  F01C         	goto	l5638
  6919   003900                     l5632:
  6920                           
  6921                           ; BSR set to: 0
  6922   003900  0E0C               	movlw	12
  6923   003902  25CE               	addwf	color_detect@white& (0+255),w,b
  6924   003904  6E16               	movwf	??_color_detect^0,c
  6925   003906  0EFE               	movlw	254
  6926   003908  21CF               	addwfc	(color_detect@white+1)& (0+255),w,b
  6927   00390A  6E17               	movwf	(??_color_detect+1)^0,c
  6928   00390C  519E               	movf	color_detect@HSV& (0+255),w,b
  6929   00390E  5C16               	subwf	??_color_detect^0,w,c
  6930   003910  519F               	movf	(color_detect@HSV+1)& (0+255),w,b
  6931   003912  5817               	subwfb	(??_color_detect+1)^0,w,c
  6932   003914  B0D8               	btfsc	status,0,c
  6933   003916  EF8F  F01C         	goto	u4841
  6934   00391A  EF91  F01C         	goto	u4840
  6935   00391E                     u4841:
  6936   00391E  EFE1  F01B         	goto	l167
  6937   003922                     u4840:
  6938   003922                     
  6939                           ; BSR set to: 0
  6940   003922  0EF4               	movlw	244
  6941   003924  25CE               	addwf	color_detect@white& (0+255),w,b
  6942   003926  6E16               	movwf	??_color_detect^0,c
  6943   003928  0E01               	movlw	1
  6944   00392A  21CF               	addwfc	(color_detect@white+1)& (0+255),w,b
  6945   00392C  6E17               	movwf	(??_color_detect+1)^0,c
  6946   00392E  5016               	movf	??_color_detect^0,w,c
  6947   003930  5D9E               	subwf	color_detect@HSV& (0+255),w,b
  6948   003932  5017               	movf	(??_color_detect+1)^0,w,c
  6949   003934  599F               	subwfb	(color_detect@HSV+1)& (0+255),w,b
  6950   003936  B0D8               	btfsc	status,0,c
  6951   003938  EFA0  F01C         	goto	u4851
  6952   00393C  EFA2  F01C         	goto	u4850
  6953   003940                     u4851:
  6954   003940  EFE1  F01B         	goto	l167
  6955   003944                     u4850:
  6956   003944                     
  6957                           ; BSR set to: 0
  6958   003944  0E08               	movlw	8
  6959   003946  6E23               	movwf	color_detect@color^0,c
  6960   003948                     l5638:
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;color.c: 142:     if (red.H > 30000){
  6964   003948  0E31               	movlw	49
  6965   00394A  5DA4               	subwf	color_detect@red& (0+255),w,b
  6966   00394C  0E75               	movlw	117
  6967   00394E  59A5               	subwfb	(color_detect@red+1)& (0+255),w,b
  6968   003950  A0D8               	btfss	status,0,c
  6969   003952  EFAD  F01C         	goto	u4861
  6970   003956  EFAF  F01C         	goto	u4860
  6971   00395A                     u4861:
  6972   00395A  EF03  F01D         	goto	l5650
  6973   00395E                     u4860:
  6974   00395E                     
  6975                           ; BSR set to: 0
  6976                           ;color.c: 143:         if(((red.H)-1000 < HSV.H && HSV.H < 36000) || (0 < HSV.H && HSV.H
      +                           < 1000 + red.H -36000)) {color = 1;}
  6977   00395E  0E18               	movlw	24
  6978   003960  25A4               	addwf	color_detect@red& (0+255),w,b
  6979   003962  6E16               	movwf	??_color_detect^0,c
  6980   003964  0EFC               	movlw	252
  6981   003966  21A5               	addwfc	(color_detect@red+1)& (0+255),w,b
  6982   003968  6E17               	movwf	(??_color_detect+1)^0,c
  6983   00396A  519E               	movf	color_detect@HSV& (0+255),w,b
  6984   00396C  5C16               	subwf	??_color_detect^0,w,c
  6985   00396E  519F               	movf	(color_detect@HSV+1)& (0+255),w,b
  6986   003970  5817               	subwfb	(??_color_detect+1)^0,w,c
  6987   003972  B0D8               	btfsc	status,0,c
  6988   003974  EFBE  F01C         	goto	u4871
  6989   003978  EFC0  F01C         	goto	u4870
  6990   00397C                     u4871:
  6991   00397C  EFCB  F01C         	goto	l5644
  6992   003980                     u4870:
  6993   003980                     
  6994                           ; BSR set to: 0
  6995   003980  0EA0               	movlw	160
  6996   003982  5D9E               	subwf	color_detect@HSV& (0+255),w,b
  6997   003984  0E8C               	movlw	140
  6998   003986  599F               	subwfb	(color_detect@HSV+1)& (0+255),w,b
  6999   003988  A0D8               	btfss	status,0,c
  7000   00398A  EFC9  F01C         	goto	u4881
  7001   00398E  EFCB  F01C         	goto	u4880
  7002   003992                     u4881:
  7003   003992  EF01  F01D         	goto	l5648
  7004   003996                     u4880:
  7005   003996                     l5644:
  7006                           
  7007                           ; BSR set to: 0
  7008   003996  519E               	movf	color_detect@HSV& (0+255),w,b
  7009   003998  119F               	iorwf	(color_detect@HSV+1)& (0+255),w,b
  7010   00399A  B4D8               	btfsc	status,2,c
  7011   00399C  EFD2  F01C         	goto	u4891
  7012   0039A0  EFD4  F01C         	goto	u4890
  7013   0039A4                     u4891:
  7014   0039A4  EF03  F01D         	goto	l5650
  7015   0039A8                     u4890:
  7016   0039A8                     
  7017                           ; BSR set to: 0
  7018   0039A8  0EE8               	movlw	232
  7019   0039AA  25A4               	addwf	color_detect@red& (0+255),w,b
  7020   0039AC  6E16               	movwf	??_color_detect^0,c
  7021   0039AE  0E03               	movlw	3
  7022   0039B0  21A5               	addwfc	(color_detect@red+1)& (0+255),w,b
  7023   0039B2  6E17               	movwf	(??_color_detect+1)^0,c
  7024   0039B4  6A18               	clrf	(??_color_detect+2)^0,c
  7025   0039B6  6A19               	clrf	(??_color_detect+3)^0,c
  7026   0039B8  0E60               	movlw	96
  7027   0039BA  2416               	addwf	??_color_detect^0,w,c
  7028   0039BC  6E1A               	movwf	(??_color_detect+4)^0,c
  7029   0039BE  0E73               	movlw	115
  7030   0039C0  2017               	addwfc	(??_color_detect+1)^0,w,c
  7031   0039C2  6E1B               	movwf	(??_color_detect+5)^0,c
  7032   0039C4  0EFF               	movlw	255
  7033   0039C6  2018               	addwfc	(??_color_detect+2)^0,w,c
  7034   0039C8  6E1C               	movwf	(??_color_detect+6)^0,c
  7035   0039CA  0EFF               	movlw	255
  7036   0039CC  2019               	addwfc	(??_color_detect+3)^0,w,c
  7037   0039CE  6E1D               	movwf	(??_color_detect+7)^0,c
  7038   0039D0  519E               	movf	color_detect@HSV& (0+255),w,b
  7039   0039D2  6E1E               	movwf	(??_color_detect+8)^0,c
  7040   0039D4  519F               	movf	(color_detect@HSV+1)& (0+255),w,b
  7041   0039D6  6E1F               	movwf	(??_color_detect+9)^0,c
  7042   0039D8  6A20               	clrf	(??_color_detect+10)^0,c
  7043   0039DA  6A21               	clrf	(??_color_detect+11)^0,c
  7044   0039DC  501A               	movf	(??_color_detect+4)^0,w,c
  7045   0039DE  5C1E               	subwf	(??_color_detect+8)^0,w,c
  7046   0039E0  501B               	movf	(??_color_detect+5)^0,w,c
  7047   0039E2  581F               	subwfb	(??_color_detect+9)^0,w,c
  7048   0039E4  501C               	movf	(??_color_detect+6)^0,w,c
  7049   0039E6  5820               	subwfb	(??_color_detect+10)^0,w,c
  7050   0039E8  5021               	movf	(??_color_detect+11)^0,w,c
  7051   0039EA  0A80               	xorlw	128
  7052   0039EC  6E22               	movwf	(??_color_detect+12)^0,c
  7053   0039EE  501D               	movf	(??_color_detect+7)^0,w,c
  7054   0039F0  0A80               	xorlw	128
  7055   0039F2  5822               	subwfb	(??_color_detect+12)^0,w,c
  7056   0039F4  B0D8               	btfsc	status,0,c
  7057   0039F6  EFFF  F01C         	goto	u4901
  7058   0039FA  EF01  F01D         	goto	u4900
  7059   0039FE                     u4901:
  7060   0039FE  EF03  F01D         	goto	l5650
  7061   003A02                     u4900:
  7062   003A02                     l5648:
  7063                           
  7064                           ; BSR set to: 0
  7065   003A02  0E01               	movlw	1
  7066   003A04  6E23               	movwf	color_detect@color^0,c
  7067   003A06                     l5650:
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;color.c: 146:     if (red.H < 10000){
  7071   003A06  0E10               	movlw	16
  7072   003A08  5DA4               	subwf	color_detect@red& (0+255),w,b
  7073   003A0A  0E27               	movlw	39
  7074   003A0C  59A5               	subwfb	(color_detect@red+1)& (0+255),w,b
  7075   003A0E  B0D8               	btfsc	status,0,c
  7076   003A10  EF0C  F01D         	goto	u4911
  7077   003A14  EF0E  F01D         	goto	u4910
  7078   003A18                     u4911:
  7079   003A18  EF60  F01D         	goto	l184
  7080   003A1C                     u4910:
  7081   003A1C                     
  7082                           ; BSR set to: 0
  7083                           ;color.c: 147:         if((36000 - 1000 + (red.H) < HSV.H && HSV.H < 36000) || (0 < HSV.
      +                          H && HSV.H < red.H + 1000)) {color = 1;}
  7084   003A1C  519E               	movf	color_detect@HSV& (0+255),w,b
  7085   003A1E  6E16               	movwf	??_color_detect^0,c
  7086   003A20  519F               	movf	(color_detect@HSV+1)& (0+255),w,b
  7087   003A22  6E17               	movwf	(??_color_detect+1)^0,c
  7088   003A24  6A18               	clrf	(??_color_detect+2)^0,c
  7089   003A26  6A19               	clrf	(??_color_detect+3)^0,c
  7090   003A28  51A4               	movf	color_detect@red& (0+255),w,b
  7091   003A2A  6E1A               	movwf	(??_color_detect+4)^0,c
  7092   003A2C  51A5               	movf	(color_detect@red+1)& (0+255),w,b
  7093   003A2E  6E1B               	movwf	(??_color_detect+5)^0,c
  7094   003A30  6A1C               	clrf	(??_color_detect+6)^0,c
  7095   003A32  6A1D               	clrf	(??_color_detect+7)^0,c
  7096   003A34  0EB8               	movlw	184
  7097   003A36  241A               	addwf	(??_color_detect+4)^0,w,c
  7098   003A38  6E1E               	movwf	(??_color_detect+8)^0,c
  7099   003A3A  0E88               	movlw	136
  7100   003A3C  201B               	addwfc	(??_color_detect+5)^0,w,c
  7101   003A3E  6E1F               	movwf	(??_color_detect+9)^0,c
  7102   003A40  0E00               	movlw	0
  7103   003A42  201C               	addwfc	(??_color_detect+6)^0,w,c
  7104   003A44  6E20               	movwf	(??_color_detect+10)^0,c
  7105   003A46  0E00               	movlw	0
  7106   003A48  201D               	addwfc	(??_color_detect+7)^0,w,c
  7107   003A4A  6E21               	movwf	(??_color_detect+11)^0,c
  7108   003A4C  5016               	movf	??_color_detect^0,w,c
  7109   003A4E  5C1E               	subwf	(??_color_detect+8)^0,w,c
  7110   003A50  5017               	movf	(??_color_detect+1)^0,w,c
  7111   003A52  581F               	subwfb	(??_color_detect+9)^0,w,c
  7112   003A54  5018               	movf	(??_color_detect+2)^0,w,c
  7113   003A56  5820               	subwfb	(??_color_detect+10)^0,w,c
  7114   003A58  5021               	movf	(??_color_detect+11)^0,w,c
  7115   003A5A  0A80               	xorlw	128
  7116   003A5C  6E22               	movwf	(??_color_detect+12)^0,c
  7117   003A5E  5019               	movf	(??_color_detect+3)^0,w,c
  7118   003A60  0A80               	xorlw	128
  7119   003A62  5822               	subwfb	(??_color_detect+12)^0,w,c
  7120   003A64  B0D8               	btfsc	status,0,c
  7121   003A66  EF37  F01D         	goto	u4921
  7122   003A6A  EF39  F01D         	goto	u4920
  7123   003A6E                     u4921:
  7124   003A6E  EF44  F01D         	goto	l5656
  7125   003A72                     u4920:
  7126   003A72                     
  7127                           ; BSR set to: 0
  7128   003A72  0EA0               	movlw	160
  7129   003A74  5D9E               	subwf	color_detect@HSV& (0+255),w,b
  7130   003A76  0E8C               	movlw	140
  7131   003A78  599F               	subwfb	(color_detect@HSV+1)& (0+255),w,b
  7132   003A7A  A0D8               	btfss	status,0,c
  7133   003A7C  EF42  F01D         	goto	u4931
  7134   003A80  EF44  F01D         	goto	u4930
  7135   003A84                     u4931:
  7136   003A84  EF5E  F01D         	goto	l5660
  7137   003A88                     u4930:
  7138   003A88                     l5656:
  7139                           
  7140                           ; BSR set to: 0
  7141   003A88  519E               	movf	color_detect@HSV& (0+255),w,b
  7142   003A8A  119F               	iorwf	(color_detect@HSV+1)& (0+255),w,b
  7143   003A8C  B4D8               	btfsc	status,2,c
  7144   003A8E  EF4B  F01D         	goto	u4941
  7145   003A92  EF4D  F01D         	goto	u4940
  7146   003A96                     u4941:
  7147   003A96  EF60  F01D         	goto	l184
  7148   003A9A                     u4940:
  7149   003A9A                     
  7150                           ; BSR set to: 0
  7151   003A9A  0EE8               	movlw	232
  7152   003A9C  25A4               	addwf	color_detect@red& (0+255),w,b
  7153   003A9E  6E16               	movwf	??_color_detect^0,c
  7154   003AA0  0E03               	movlw	3
  7155   003AA2  21A5               	addwfc	(color_detect@red+1)& (0+255),w,b
  7156   003AA4  6E17               	movwf	(??_color_detect+1)^0,c
  7157   003AA6  5016               	movf	??_color_detect^0,w,c
  7158   003AA8  5D9E               	subwf	color_detect@HSV& (0+255),w,b
  7159   003AAA  5017               	movf	(??_color_detect+1)^0,w,c
  7160   003AAC  599F               	subwfb	(color_detect@HSV+1)& (0+255),w,b
  7161   003AAE  B0D8               	btfsc	status,0,c
  7162   003AB0  EF5C  F01D         	goto	u4951
  7163   003AB4  EF5E  F01D         	goto	u4950
  7164   003AB8                     u4951:
  7165   003AB8  EF60  F01D         	goto	l184
  7166   003ABC                     u4950:
  7167   003ABC                     l5660:
  7168                           
  7169                           ; BSR set to: 0
  7170   003ABC  0E01               	movlw	1
  7171   003ABE  6E23               	movwf	color_detect@color^0,c
  7172   003AC0                     l184:
  7173                           
  7174                           ; BSR set to: 0
  7175                           ;color.c: 150:     return color;
  7176   003AC0  5023               	movf	color_detect@color^0,w,c
  7177   003AC2                     
  7178                           ; BSR set to: 0
  7179   003AC2  0012               	return		;funcret
  7180   003AC4                     __end_of_color_detect:
  7181                           	callstack 0
  7182                           
  7183 ;; *************** function _color_click_init *****************
  7184 ;; Defined at:
  7185 ;;		line 7 in file "color.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;		None
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;		None
  7190 ;; Return value:  Size  Location     Type
  7191 ;;                  1    wreg      void 
  7192 ;; Registers used:
  7193 ;;		wreg, status,2, status,0, cstack
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7203 ;;Total ram usage:        1 bytes
  7204 ;; Hardware stack levels used: 1
  7205 ;; Hardware stack levels required when called: 10
  7206 ;; This function calls:
  7207 ;;		_I2C_2_Master_Init
  7208 ;;		_color_clear_init_interrupts
  7209 ;;		_color_writetoaddr
  7210 ;; This function is called by:
  7211 ;;		_main
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text14
  7216   005126                     __ptext14:
  7217                           	callstack 0
  7218   005126                     _color_click_init:
  7219                           	callstack 20
  7220   005126                     
  7221                           ;color.c: 10:     I2C_2_Master_Init();
  7222   005126  EC0C  F029         	call	_I2C_2_Master_Init	;wreg free
  7223   00512A                     
  7224                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  7225   00512A  0E01               	movlw	1
  7226   00512C  6E14               	movwf	color_writetoaddr@value^0,c
  7227   00512E  0E00               	movlw	0
  7228   005130  EC95  F029         	call	_color_writetoaddr
  7229   005134                     
  7230                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7231   005134  0E3F               	movlw	63
  7232   005136  6E24               	movwf	??_color_click_init^0,c
  7233   005138  0E55               	movlw	85
  7234   00513A                     u6227:
  7235   00513A  2EE8               	decfsz	wreg,f,c
  7236   00513C  D7FE               	bra	u6227
  7237   00513E  2E24               	decfsz	??_color_click_init^0,f,c
  7238   005140  D7FC               	bra	u6227
  7239   005142  0000               	nop	
  7240   005144                     
  7241                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  7242   005144  0E03               	movlw	3
  7243   005146  6E14               	movwf	color_writetoaddr@value^0,c
  7244   005148  0E00               	movlw	0
  7245   00514A  EC95  F029         	call	_color_writetoaddr
  7246   00514E                     
  7247                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  7248   00514E  0ED5               	movlw	213
  7249   005150  6E14               	movwf	color_writetoaddr@value^0,c
  7250   005152  0E01               	movlw	1
  7251   005154  EC95  F029         	call	_color_writetoaddr
  7252   005158                     
  7253                           ;color.c: 23:     color_clear_init_interrupts();
  7254   005158  ECFC  F025         	call	_color_clear_init_interrupts	;wreg free
  7255   00515C  0012               	return		;funcret
  7256   00515E                     __end_of_color_click_init:
  7257                           	callstack 0
  7258                           
  7259 ;; *************** function _color_clear_init_interrupts *****************
  7260 ;; Defined at:
  7261 ;;		line 27 in file "color.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;		None
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  low_threshol    2   33[COMRAM] unsigned int 
  7266 ;;  high_thresho    2   31[COMRAM] unsigned int 
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  1    wreg      void 
  7269 ;; Registers used:
  7270 ;;		wreg, status,2, status,0, cstack
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7277 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7279 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7280 ;;Total ram usage:        5 bytes
  7281 ;; Hardware stack levels used: 1
  7282 ;; Hardware stack levels required when called: 9
  7283 ;; This function calls:
  7284 ;;		_I2C_2_Master_Start
  7285 ;;		_I2C_2_Master_Stop
  7286 ;;		_I2C_2_Master_Write
  7287 ;;		___lwdiv
  7288 ;;		_color_writetoaddr
  7289 ;; This function is called by:
  7290 ;;		_main
  7291 ;;		_color_click_init
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           	psect	text15
  7296   004BF8                     __ptext15:
  7297                           	callstack 0
  7298   004BF8                     _color_clear_init_interrupts:
  7299                           	callstack 20
  7300   004BF8                     
  7301                           ;color.c: 29:     I2C_2_Master_Start();
  7302   004BF8  EC1A  F02A         	call	_I2C_2_Master_Start	;wreg free
  7303                           
  7304                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  7305   004BFC  0E52               	movlw	82
  7306   004BFE  EC04  F02A         	call	_I2C_2_Master_Write
  7307                           
  7308                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
  7309   004C02  0EE6               	movlw	230
  7310   004C04  EC04  F02A         	call	_I2C_2_Master_Write
  7311                           
  7312                           ;color.c: 32:     I2C_2_Master_Stop();
  7313   004C08  EC15  F02A         	call	_I2C_2_Master_Stop	;wreg free
  7314                           
  7315                           ;color.c: 38:     unsigned int high_threshold = ambient + (ambient/3);
  7316   004C0C  C0DE  F018         	movff	_ambient,___lwdiv@dividend
  7317   004C10  C0DF  F019         	movff	_ambient+1,___lwdiv@dividend+1
  7318   004C14  0E00               	movlw	0
  7319   004C16  6E1B               	movwf	(___lwdiv@divisor+1)^0,c
  7320   004C18  0E03               	movlw	3
  7321   004C1A  6E1A               	movwf	___lwdiv@divisor^0,c
  7322   004C1C  EC77  F027         	call	___lwdiv	;wreg free
  7323   004C20  0100               	movlb	0	; () banked
  7324   004C22  51DE               	movf	_ambient& (0+255),w,b
  7325   004C24  2418               	addwf	?___lwdiv^0,w,c
  7326   004C26  6E20               	movwf	color_clear_init_interrupts@high_threshold^0,c
  7327   004C28  51DF               	movf	(_ambient+1)& (0+255),w,b
  7328   004C2A  2019               	addwfc	(?___lwdiv+1)^0,w,c
  7329   004C2C  6E21               	movwf	(color_clear_init_interrupts@high_threshold+1)^0,c
  7330                           
  7331                           ;color.c: 39:     unsigned int low_threshold = ambient - (ambient/20);
  7332   004C2E  C0DE  F018         	movff	_ambient,___lwdiv@dividend
  7333   004C32  C0DF  F019         	movff	_ambient+1,___lwdiv@dividend+1
  7334   004C36  0E00               	movlw	0
  7335   004C38  6E1B               	movwf	(___lwdiv@divisor+1)^0,c
  7336   004C3A  0E14               	movlw	20
  7337   004C3C  6E1A               	movwf	___lwdiv@divisor^0,c
  7338   004C3E  EC77  F027         	call	___lwdiv	;wreg free
  7339   004C42  5018               	movf	?___lwdiv^0,w,c
  7340   004C44  0100               	movlb	0	; () banked
  7341   004C46  5DDE               	subwf	_ambient& (0+255),w,b
  7342   004C48  6E22               	movwf	color_clear_init_interrupts@low_threshold^0,c
  7343   004C4A  5019               	movf	(?___lwdiv+1)^0,w,c
  7344   004C4C  59DF               	subwfb	(_ambient+1)& (0+255),w,b
  7345   004C4E  6E23               	movwf	(color_clear_init_interrupts@low_threshold+1)^0,c
  7346                           
  7347                           ;color.c: 42:  color_writetoaddr(0x00, 0x13);
  7348   004C50  0E13               	movlw	19
  7349   004C52  6E14               	movwf	color_writetoaddr@value^0,c
  7350   004C54  0E00               	movlw	0
  7351   004C56  EC95  F029         	call	_color_writetoaddr
  7352   004C5A                     
  7353                           ;color.c: 43:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7354   004C5A  0E3F               	movlw	63
  7355   004C5C  6E1F               	movwf	??_color_clear_init_interrupts^0,c
  7356   004C5E  0E55               	movlw	85
  7357   004C60                     u6237:
  7358   004C60  2EE8               	decfsz	wreg,f,c
  7359   004C62  D7FE               	bra	u6237
  7360   004C64  2E1F               	decfsz	??_color_clear_init_interrupts^0,f,c
  7361   004C66  D7FC               	bra	u6237
  7362   004C68  0000               	nop	
  7363   004C6A                     
  7364                           ;color.c: 44:     color_writetoaddr(0x07, (high_threshold >> 8));
  7365   004C6A  5021               	movf	(color_clear_init_interrupts@high_threshold+1)^0,w,c
  7366   004C6C  6E14               	movwf	color_writetoaddr@value^0,c
  7367   004C6E  0E07               	movlw	7
  7368   004C70  EC95  F029         	call	_color_writetoaddr
  7369   004C74                     
  7370                           ;color.c: 45:     color_writetoaddr(0x06, (high_threshold & 0xFF));
  7371   004C74  C020  F014         	movff	color_clear_init_interrupts@high_threshold,color_writetoaddr@value
  7372   004C78  0E06               	movlw	6
  7373   004C7A  EC95  F029         	call	_color_writetoaddr
  7374   004C7E                     
  7375                           ;color.c: 46:     color_writetoaddr(0x05, (low_threshold >> 8));
  7376   004C7E  5023               	movf	(color_clear_init_interrupts@low_threshold+1)^0,w,c
  7377   004C80  6E14               	movwf	color_writetoaddr@value^0,c
  7378   004C82  0E05               	movlw	5
  7379   004C84  EC95  F029         	call	_color_writetoaddr
  7380   004C88                     
  7381                           ;color.c: 47:     color_writetoaddr(0x04, (low_threshold & 0xFF));
  7382   004C88  C022  F014         	movff	color_clear_init_interrupts@low_threshold,color_writetoaddr@value
  7383   004C8C  0E04               	movlw	4
  7384   004C8E  EC95  F029         	call	_color_writetoaddr
  7385   004C92                     
  7386                           ;color.c: 48:     color_writetoaddr(0x0C, 0b11);
  7387   004C92  0E03               	movlw	3
  7388   004C94  6E14               	movwf	color_writetoaddr@value^0,c
  7389   004C96  0E0C               	movlw	12
  7390   004C98  EC95  F029         	call	_color_writetoaddr
  7391   004C9C  0012               	return		;funcret
  7392   004C9E                     __end_of_color_clear_init_interrupts:
  7393                           	callstack 0
  7394                           
  7395 ;; *************** function _color_writetoaddr *****************
  7396 ;; Defined at:
  7397 ;;		line 53 in file "color.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  address         1    wreg     unsigned char 
  7400 ;;  value           1   19[COMRAM] unsigned char 
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;  address         1   20[COMRAM] unsigned char 
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  1    wreg      void 
  7405 ;; Registers used:
  7406 ;;		wreg, status,2, status,0, cstack
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7412 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7416 ;;Total ram usage:        2 bytes
  7417 ;; Hardware stack levels used: 1
  7418 ;; Hardware stack levels required when called: 8
  7419 ;; This function calls:
  7420 ;;		_I2C_2_Master_Start
  7421 ;;		_I2C_2_Master_Stop
  7422 ;;		_I2C_2_Master_Write
  7423 ;; This function is called by:
  7424 ;;		_color_click_init
  7425 ;;		_color_clear_init_interrupts
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429                           	psect	text16
  7430   00532A                     __ptext16:
  7431                           	callstack 0
  7432   00532A                     _color_writetoaddr:
  7433                           	callstack 21
  7434                           
  7435                           ;incstack = 0
  7436                           ;color_writetoaddr@address stored from wreg
  7437   00532A  6E15               	movwf	color_writetoaddr@address^0,c
  7438   00532C                     
  7439                           ;color.c: 54:     I2C_2_Master_Start();
  7440   00532C  EC1A  F02A         	call	_I2C_2_Master_Start	;wreg free
  7441                           
  7442                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  7443   005330  0E52               	movlw	82
  7444   005332  EC04  F02A         	call	_I2C_2_Master_Write
  7445                           
  7446                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
  7447   005336  5015               	movf	color_writetoaddr@address^0,w,c
  7448   005338  0980               	iorlw	128
  7449   00533A  EC04  F02A         	call	_I2C_2_Master_Write
  7450                           
  7451                           ;color.c: 57:     I2C_2_Master_Write(value);
  7452   00533E  5014               	movf	color_writetoaddr@value^0,w,c
  7453   005340  EC04  F02A         	call	_I2C_2_Master_Write
  7454                           
  7455                           ;color.c: 58:     I2C_2_Master_Stop();
  7456   005344  EC15  F02A         	call	_I2C_2_Master_Stop	;wreg free
  7457   005348  0012               	return		;funcret
  7458   00534A                     __end_of_color_writetoaddr:
  7459                           	callstack 0
  7460                           
  7461 ;; *************** function _I2C_2_Master_Init *****************
  7462 ;; Defined at:
  7463 ;;		line 4 in file "i2c.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;		None
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;		None
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      void 
  7470 ;; Registers used:
  7471 ;;		wreg, status,2
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7481 ;;Total ram usage:        0 bytes
  7482 ;; Hardware stack levels used: 1
  7483 ;; Hardware stack levels required when called: 6
  7484 ;; This function calls:
  7485 ;;		Nothing
  7486 ;; This function is called by:
  7487 ;;		_color_click_init
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text17
  7492   005218                     __ptext17:
  7493                           	callstack 0
  7494   005218                     _I2C_2_Master_Init:
  7495                           	callstack 23
  7496   005218                     
  7497                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7498   005218  010E               	movlb	14	; () banked
  7499   00521A  51D9               	movf	217,w,b	;volatile
  7500   00521C  0BF0               	andlw	-16
  7501   00521E  0908               	iorlw	8
  7502   005220  6FD9               	movwf	217,b	;volatile
  7503   005222                     
  7504                           ; BSR set to: 14
  7505                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7506   005222  8BD9               	bsf	217,5,b	;volatile
  7507                           
  7508                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7509   005224  0E9F               	movlw	159
  7510   005226  6FD6               	movwf	214,b	;volatile
  7511   005228                     
  7512                           ; BSR set to: 14
  7513                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7514   005228  8A84               	bsf	132,5,c	;volatile
  7515   00522A                     
  7516                           ; BSR set to: 14
  7517                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7518   00522A  8C84               	bsf	132,6,c	;volatile
  7519   00522C                     
  7520                           ; BSR set to: 14
  7521                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7522   00522C  9BA7               	bcf	167,5,b	;volatile
  7523   00522E                     
  7524                           ; BSR set to: 14
  7525                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7526   00522E  9DA7               	bcf	167,6,b	;volatile
  7527                           
  7528                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7529   005230  0E1D               	movlw	29
  7530   005232  6F1D               	movwf	29,b	;volatile
  7531                           
  7532                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7533   005234  0E1E               	movlw	30
  7534   005236  6F1C               	movwf	28,b	;volatile
  7535                           
  7536                           ;i2c.c: 18:   RD5PPS=0x1C;
  7537   005238  0E1C               	movlw	28
  7538   00523A  6F6F               	movwf	111,b	;volatile
  7539                           
  7540                           ;i2c.c: 19:   RD6PPS=0x1B;
  7541   00523C  0E1B               	movlw	27
  7542   00523E  6F70               	movwf	112,b	;volatile
  7543   005240                     
  7544                           ; BSR set to: 14
  7545   005240  0012               	return		;funcret
  7546   005242                     __end_of_I2C_2_Master_Init:
  7547                           	callstack 0
  7548                           
  7549 ;; *************** function _color_calibration *****************
  7550 ;; Defined at:
  7551 ;;		line 153 in file "color.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  RGBC            2   22[BANK0 ] PTR struct RGBC_val
  7554 ;;		 -> main@RGBC(8), 
  7555 ;;  HSV             2   24[BANK0 ] PTR struct HSV_val
  7556 ;;		 -> main@HSV(6), 
  7557 ;;  red             2   26[BANK0 ] PTR struct HSV_calib
  7558 ;;		 -> main@red(6), 
  7559 ;;  green           2   28[BANK0 ] PTR struct HSV_calib
  7560 ;;		 -> main@green(6), 
  7561 ;;  blue            2   30[BANK0 ] PTR struct HSV_calib
  7562 ;;		 -> main@blue(6), 
  7563 ;;  yellow          2   32[BANK0 ] PTR struct HSV_calib
  7564 ;;		 -> main@yellow(6), 
  7565 ;;  pink            2   34[BANK0 ] PTR struct HSV_calib
  7566 ;;		 -> main@pink(6), 
  7567 ;;  orange          2   36[BANK0 ] PTR struct HSV_calib
  7568 ;;		 -> main@orange(6), 
  7569 ;;  lightblue       2   38[BANK0 ] PTR struct HSV_calib
  7570 ;;		 -> main@lightblue(6), 
  7571 ;;  white           2   40[BANK0 ] PTR struct HSV_calib
  7572 ;;		 -> main@white(6), 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  1    wreg      void 
  7577 ;; Registers used:
  7578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7584 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7587 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7588 ;;Total ram usage:       22 bytes
  7589 ;; Hardware stack levels used: 1
  7590 ;; Hardware stack levels required when called: 9
  7591 ;; This function calls:
  7592 ;;		_color_read
  7593 ;;		_rgb_2_hsv
  7594 ;;		_white_Light
  7595 ;; This function is called by:
  7596 ;;		_main
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           	psect	text18
  7601   0023C4                     __ptext18:
  7602                           	callstack 0
  7603   0023C4                     _color_calibration:
  7604                           	callstack 21
  7605   0023C4                     
  7606                           ;color.c: 153: void color_calibration(RGBC_val *RGBC, HSV_val *HSV, HSV_calib *red, HSV_
      +                          calib *green, HSV_calib *blue, HSV_calib *yellow, HSV_calib *pink, HSV_calib *orange, HS
      +                          V_calib *lightblue, HSV_calib *white);color.c: 154: {;color.c: 155:     white_Light(1);
  7607   0023C4  0E01               	movlw	1
  7608   0023C6  EC83  F029         	call	_white_Light
  7609   0023CA                     
  7610                           ;color.c: 156:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7611   0023CA  8680               	bsf	128,3,c	;volatile
  7612   0023CC  8E7C               	bsf	124,7,c	;volatile
  7613   0023CE                     l193:
  7614   0023CE  B48E               	btfsc	142,2,c	;volatile
  7615   0023D0  EFEC  F011         	goto	u4421
  7616   0023D4  EFEE  F011         	goto	u4420
  7617   0023D8                     u4421:
  7618   0023D8  EFE7  F011         	goto	l193
  7619   0023DC                     u4420:
  7620   0023DC                     
  7621                           ;color.c: 160:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7622   0023DC  9680               	bcf	128,3,c	;volatile
  7623   0023DE  9E7C               	bcf	124,7,c	;volatile
  7624   0023E0                     
  7625                           ;color.c: 161:     color_read(RGBC);
  7626   0023E0  C0B4  F016         	movff	color_calibration@RGBC,color_read@RGBC
  7627   0023E4  C0B5  F017         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7628   0023E8  ECA7  F01F         	call	_color_read	;wreg free
  7629   0023EC                     
  7630                           ;color.c: 162:     rgb_2_hsv(*RGBC, HSV);
  7631   0023EC  C0B4  FFD9         	movff	color_calibration@RGBC,fsr2l
  7632   0023F0  C0B5  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7633   0023F4  EE00  F02C         	lfsr	0,rgb_2_hsv@RGBC
  7634   0023F8  0E07               	movlw	7
  7635   0023FA                     u4431:
  7636   0023FA  CFDB FFEB          	movff	plusw2,plusw0
  7637   0023FE  06E8               	decf	wreg,f,c
  7638   002400  E2FC               	bc	u4431
  7639   002402  C0B6  F034         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7640   002406  C0B7  F035         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7641   00240A  EC37  F017         	call	_rgb_2_hsv	;wreg free
  7642   00240E                     
  7643                           ;color.c: 163:     red->H = HSV->H;
  7644   00240E  C0B6  FFD9         	movff	color_calibration@HSV,fsr2l
  7645   002412  C0B7  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7646   002416  C0B8  FFE1         	movff	color_calibration@red,fsr1l
  7647   00241A  C0B9  FFE2         	movff	color_calibration@red+1,fsr1h
  7648   00241E  CFDE FFE6          	movff	postinc2,postinc1
  7649   002422  CFDD FFE5          	movff	postdec2,postdec1
  7650   002426                     
  7651                           ;color.c: 164:     red->S = HSV->S;
  7652   002426  0100               	movlb	0	; () banked
  7653   002428  EE20 F002          	lfsr	2,2
  7654   00242C  51B6               	movf	color_calibration@HSV& (0+255),w,b
  7655   00242E  26D9               	addwf	fsr2l,f,c
  7656   002430  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7657   002432  22DA               	addwfc	fsr2h,f,c
  7658   002434  EE10 F002          	lfsr	1,2
  7659   002438  51B8               	movf	color_calibration@red& (0+255),w,b
  7660   00243A  26E1               	addwf	fsr1l,f,c
  7661   00243C  51B9               	movf	(color_calibration@red+1)& (0+255),w,b
  7662   00243E  22E2               	addwfc	fsr1h,f,c
  7663   002440  CFDE FFE6          	movff	postinc2,postinc1
  7664   002444  CFDD FFE5          	movff	postdec2,postdec1
  7665   002448                     
  7666                           ; BSR set to: 0
  7667                           ;color.c: 165:     red->V = HSV->V;
  7668   002448  EE20 F004          	lfsr	2,4
  7669   00244C  51B6               	movf	color_calibration@HSV& (0+255),w,b
  7670   00244E  26D9               	addwf	fsr2l,f,c
  7671   002450  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7672   002452  22DA               	addwfc	fsr2h,f,c
  7673   002454  EE10 F004          	lfsr	1,4
  7674   002458  51B8               	movf	color_calibration@red& (0+255),w,b
  7675   00245A  26E1               	addwf	fsr1l,f,c
  7676   00245C  51B9               	movf	(color_calibration@red+1)& (0+255),w,b
  7677   00245E  22E2               	addwfc	fsr1h,f,c
  7678   002460  CFDE FFE6          	movff	postinc2,postinc1
  7679   002464  CFDD FFE5          	movff	postdec2,postdec1
  7680   002468                     
  7681                           ; BSR set to: 0
  7682                           ;color.c: 167:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7683   002468  0E29               	movlw	41
  7684   00246A  6E43               	movwf	(??_color_calibration+1)^0,c
  7685   00246C  0E96               	movlw	150
  7686   00246E  6E42               	movwf	??_color_calibration^0,c
  7687   002470  0E7F               	movlw	127
  7688   002472                     u6247:
  7689   002472  2EE8               	decfsz	wreg,f,c
  7690   002474  D7FE               	bra	u6247
  7691   002476  2E42               	decfsz	??_color_calibration^0,f,c
  7692   002478  D7FC               	bra	u6247
  7693   00247A  2E43               	decfsz	(??_color_calibration+1)^0,f,c
  7694   00247C  D7FA               	bra	u6247
  7695   00247E  0000               	nop	
  7696   002480                     
  7697                           ;color.c: 168:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7698   002480  8680               	bsf	128,3,c	;volatile
  7699   002482  8E7C               	bsf	124,7,c	;volatile
  7700   002484                     l196:
  7701   002484  B48E               	btfsc	142,2,c	;volatile
  7702   002486  EF47  F012         	goto	u4441
  7703   00248A  EF49  F012         	goto	u4440
  7704   00248E                     u4441:
  7705   00248E  EF42  F012         	goto	l196
  7706   002492                     u4440:
  7707   002492                     
  7708                           ;color.c: 172:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7709   002492  9680               	bcf	128,3,c	;volatile
  7710   002494  9E7C               	bcf	124,7,c	;volatile
  7711   002496                     
  7712                           ;color.c: 173:     color_read(RGBC);
  7713   002496  C0B4  F016         	movff	color_calibration@RGBC,color_read@RGBC
  7714   00249A  C0B5  F017         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7715   00249E  ECA7  F01F         	call	_color_read	;wreg free
  7716   0024A2                     
  7717                           ;color.c: 174:     rgb_2_hsv(*RGBC, HSV);
  7718   0024A2  C0B4  FFD9         	movff	color_calibration@RGBC,fsr2l
  7719   0024A6  C0B5  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7720   0024AA  EE00  F02C         	lfsr	0,rgb_2_hsv@RGBC
  7721   0024AE  0E07               	movlw	7
  7722   0024B0                     u4451:
  7723   0024B0  CFDB FFEB          	movff	plusw2,plusw0
  7724   0024B4  06E8               	decf	wreg,f,c
  7725   0024B6  E2FC               	bc	u4451
  7726   0024B8  C0B6  F034         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7727   0024BC  C0B7  F035         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7728   0024C0  EC37  F017         	call	_rgb_2_hsv	;wreg free
  7729   0024C4                     
  7730                           ;color.c: 175:     green->H = HSV->H;
  7731   0024C4  C0B6  FFD9         	movff	color_calibration@HSV,fsr2l
  7732   0024C8  C0B7  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7733   0024CC  C0BA  FFE1         	movff	color_calibration@green,fsr1l
  7734   0024D0  C0BB  FFE2         	movff	color_calibration@green+1,fsr1h
  7735   0024D4  CFDE FFE6          	movff	postinc2,postinc1
  7736   0024D8  CFDD FFE5          	movff	postdec2,postdec1
  7737   0024DC                     
  7738                           ;color.c: 176:     green->S = HSV->S;
  7739   0024DC  0100               	movlb	0	; () banked
  7740   0024DE  EE20 F002          	lfsr	2,2
  7741   0024E2  51B6               	movf	color_calibration@HSV& (0+255),w,b
  7742   0024E4  26D9               	addwf	fsr2l,f,c
  7743   0024E6  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7744   0024E8  22DA               	addwfc	fsr2h,f,c
  7745   0024EA  EE10 F002          	lfsr	1,2
  7746   0024EE  51BA               	movf	color_calibration@green& (0+255),w,b
  7747   0024F0  26E1               	addwf	fsr1l,f,c
  7748   0024F2  51BB               	movf	(color_calibration@green+1)& (0+255),w,b
  7749   0024F4  22E2               	addwfc	fsr1h,f,c
  7750   0024F6  CFDE FFE6          	movff	postinc2,postinc1
  7751   0024FA  CFDD FFE5          	movff	postdec2,postdec1
  7752   0024FE                     
  7753                           ; BSR set to: 0
  7754                           ;color.c: 177:     green->V = HSV->V;
  7755   0024FE  EE20 F004          	lfsr	2,4
  7756   002502  51B6               	movf	color_calibration@HSV& (0+255),w,b
  7757   002504  26D9               	addwf	fsr2l,f,c
  7758   002506  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7759   002508  22DA               	addwfc	fsr2h,f,c
  7760   00250A  EE10 F004          	lfsr	1,4
  7761   00250E  51BA               	movf	color_calibration@green& (0+255),w,b
  7762   002510  26E1               	addwf	fsr1l,f,c
  7763   002512  51BB               	movf	(color_calibration@green+1)& (0+255),w,b
  7764   002514  22E2               	addwfc	fsr1h,f,c
  7765   002516  CFDE FFE6          	movff	postinc2,postinc1
  7766   00251A  CFDD FFE5          	movff	postdec2,postdec1
  7767   00251E                     
  7768                           ; BSR set to: 0
  7769                           ;color.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7770   00251E  0E29               	movlw	41
  7771   002520  6E43               	movwf	(??_color_calibration+1)^0,c
  7772   002522  0E96               	movlw	150
  7773   002524  6E42               	movwf	??_color_calibration^0,c
  7774   002526  0E7F               	movlw	127
  7775   002528                     u6257:
  7776   002528  2EE8               	decfsz	wreg,f,c
  7777   00252A  D7FE               	bra	u6257
  7778   00252C  2E42               	decfsz	??_color_calibration^0,f,c
  7779   00252E  D7FC               	bra	u6257
  7780   002530  2E43               	decfsz	(??_color_calibration+1)^0,f,c
  7781   002532  D7FA               	bra	u6257
  7782   002534  0000               	nop	
  7783   002536                     
  7784                           ;color.c: 180:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7785   002536  8680               	bsf	128,3,c	;volatile
  7786   002538  8E7C               	bsf	124,7,c	;volatile
  7787   00253A                     l199:
  7788   00253A  B48E               	btfsc	142,2,c	;volatile
  7789   00253C  EFA2  F012         	goto	u4461
  7790   002540  EFA4  F012         	goto	u4460
  7791   002544                     u4461:
  7792   002544  EF9D  F012         	goto	l199
  7793   002548                     u4460:
  7794   002548                     
  7795                           ;color.c: 184:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7796   002548  9680               	bcf	128,3,c	;volatile
  7797   00254A  9E7C               	bcf	124,7,c	;volatile
  7798   00254C                     
  7799                           ;color.c: 185:     color_read(RGBC);
  7800   00254C  C0B4  F016         	movff	color_calibration@RGBC,color_read@RGBC
  7801   002550  C0B5  F017         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7802   002554  ECA7  F01F         	call	_color_read	;wreg free
  7803   002558                     
  7804                           ;color.c: 186:     rgb_2_hsv(*RGBC, HSV);
  7805   002558  C0B4  FFD9         	movff	color_calibration@RGBC,fsr2l
  7806   00255C  C0B5  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7807   002560  EE00  F02C         	lfsr	0,rgb_2_hsv@RGBC
  7808   002564  0E07               	movlw	7
  7809   002566                     u4471:
  7810   002566  CFDB FFEB          	movff	plusw2,plusw0
  7811   00256A  06E8               	decf	wreg,f,c
  7812   00256C  E2FC               	bc	u4471
  7813   00256E  C0B6  F034         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7814   002572  C0B7  F035         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7815   002576  EC37  F017         	call	_rgb_2_hsv	;wreg free
  7816   00257A                     
  7817                           ;color.c: 187:     blue->H = HSV->H;
  7818   00257A  C0B6  FFD9         	movff	color_calibration@HSV,fsr2l
  7819   00257E  C0B7  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7820   002582  C0BC  FFE1         	movff	color_calibration@blue,fsr1l
  7821   002586  C0BD  FFE2         	movff	color_calibration@blue+1,fsr1h
  7822   00258A  CFDE FFE6          	movff	postinc2,postinc1
  7823   00258E  CFDD FFE5          	movff	postdec2,postdec1
  7824   002592                     
  7825                           ;color.c: 188:     blue->S = HSV->S;
  7826   002592  0100               	movlb	0	; () banked
  7827   002594  EE20 F002          	lfsr	2,2
  7828   002598  51B6               	movf	color_calibration@HSV& (0+255),w,b
  7829   00259A  26D9               	addwf	fsr2l,f,c
  7830   00259C  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7831   00259E  22DA               	addwfc	fsr2h,f,c
  7832   0025A0  EE10 F002          	lfsr	1,2
  7833   0025A4  51BC               	movf	color_calibration@blue& (0+255),w,b
  7834   0025A6  26E1               	addwf	fsr1l,f,c
  7835   0025A8  51BD               	movf	(color_calibration@blue+1)& (0+255),w,b
  7836   0025AA  22E2               	addwfc	fsr1h,f,c
  7837   0025AC  CFDE FFE6          	movff	postinc2,postinc1
  7838   0025B0  CFDD FFE5          	movff	postdec2,postdec1
  7839   0025B4                     
  7840                           ; BSR set to: 0
  7841                           ;color.c: 189:     blue->V = HSV->V;
  7842   0025B4  EE20 F004          	lfsr	2,4
  7843   0025B8  51B6               	movf	color_calibration@HSV& (0+255),w,b
  7844   0025BA  26D9               	addwf	fsr2l,f,c
  7845   0025BC  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7846   0025BE  22DA               	addwfc	fsr2h,f,c
  7847   0025C0  EE10 F004          	lfsr	1,4
  7848   0025C4  51BC               	movf	color_calibration@blue& (0+255),w,b
  7849   0025C6  26E1               	addwf	fsr1l,f,c
  7850   0025C8  51BD               	movf	(color_calibration@blue+1)& (0+255),w,b
  7851   0025CA  22E2               	addwfc	fsr1h,f,c
  7852   0025CC  CFDE FFE6          	movff	postinc2,postinc1
  7853   0025D0  CFDD FFE5          	movff	postdec2,postdec1
  7854   0025D4                     
  7855                           ; BSR set to: 0
  7856                           ;color.c: 191:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7857   0025D4  0E29               	movlw	41
  7858   0025D6  6E43               	movwf	(??_color_calibration+1)^0,c
  7859   0025D8  0E96               	movlw	150
  7860   0025DA  6E42               	movwf	??_color_calibration^0,c
  7861   0025DC  0E7F               	movlw	127
  7862   0025DE                     u6267:
  7863   0025DE  2EE8               	decfsz	wreg,f,c
  7864   0025E0  D7FE               	bra	u6267
  7865   0025E2  2E42               	decfsz	??_color_calibration^0,f,c
  7866   0025E4  D7FC               	bra	u6267
  7867   0025E6  2E43               	decfsz	(??_color_calibration+1)^0,f,c
  7868   0025E8  D7FA               	bra	u6267
  7869   0025EA  0000               	nop	
  7870   0025EC                     
  7871                           ;color.c: 192:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7872   0025EC  8680               	bsf	128,3,c	;volatile
  7873   0025EE  8E7C               	bsf	124,7,c	;volatile
  7874   0025F0                     l202:
  7875   0025F0  B48E               	btfsc	142,2,c	;volatile
  7876   0025F2  EFFD  F012         	goto	u4481
  7877   0025F6  EFFF  F012         	goto	u4480
  7878   0025FA                     u4481:
  7879   0025FA  EFF8  F012         	goto	l202
  7880   0025FE                     u4480:
  7881   0025FE                     
  7882                           ;color.c: 196:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7883   0025FE  9680               	bcf	128,3,c	;volatile
  7884   002600  9E7C               	bcf	124,7,c	;volatile
  7885   002602                     
  7886                           ;color.c: 197:     color_read(RGBC);
  7887   002602  C0B4  F016         	movff	color_calibration@RGBC,color_read@RGBC
  7888   002606  C0B5  F017         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7889   00260A  ECA7  F01F         	call	_color_read	;wreg free
  7890   00260E                     
  7891                           ;color.c: 198:     rgb_2_hsv(*RGBC, HSV);
  7892   00260E  C0B4  FFD9         	movff	color_calibration@RGBC,fsr2l
  7893   002612  C0B5  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7894   002616  EE00  F02C         	lfsr	0,rgb_2_hsv@RGBC
  7895   00261A  0E07               	movlw	7
  7896   00261C                     u4491:
  7897   00261C  CFDB FFEB          	movff	plusw2,plusw0
  7898   002620  06E8               	decf	wreg,f,c
  7899   002622  E2FC               	bc	u4491
  7900   002624  C0B6  F034         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7901   002628  C0B7  F035         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7902   00262C  EC37  F017         	call	_rgb_2_hsv	;wreg free
  7903   002630                     
  7904                           ;color.c: 199:     yellow->H = HSV->H;
  7905   002630  C0B6  FFD9         	movff	color_calibration@HSV,fsr2l
  7906   002634  C0B7  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7907   002638  C0BE  FFE1         	movff	color_calibration@yellow,fsr1l
  7908   00263C  C0BF  FFE2         	movff	color_calibration@yellow+1,fsr1h
  7909   002640  CFDE FFE6          	movff	postinc2,postinc1
  7910   002644  CFDD FFE5          	movff	postdec2,postdec1
  7911   002648                     
  7912                           ;color.c: 200:     yellow->S = HSV->S;
  7913   002648  0100               	movlb	0	; () banked
  7914   00264A  EE20 F002          	lfsr	2,2
  7915   00264E  51B6               	movf	color_calibration@HSV& (0+255),w,b
  7916   002650  26D9               	addwf	fsr2l,f,c
  7917   002652  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7918   002654  22DA               	addwfc	fsr2h,f,c
  7919   002656  EE10 F002          	lfsr	1,2
  7920   00265A  51BE               	movf	color_calibration@yellow& (0+255),w,b
  7921   00265C  26E1               	addwf	fsr1l,f,c
  7922   00265E  51BF               	movf	(color_calibration@yellow+1)& (0+255),w,b
  7923   002660  22E2               	addwfc	fsr1h,f,c
  7924   002662  CFDE FFE6          	movff	postinc2,postinc1
  7925   002666  CFDD FFE5          	movff	postdec2,postdec1
  7926   00266A                     
  7927                           ; BSR set to: 0
  7928                           ;color.c: 201:     yellow->V = HSV->V;
  7929   00266A  EE20 F004          	lfsr	2,4
  7930   00266E  51B6               	movf	color_calibration@HSV& (0+255),w,b
  7931   002670  26D9               	addwf	fsr2l,f,c
  7932   002672  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  7933   002674  22DA               	addwfc	fsr2h,f,c
  7934   002676  EE10 F004          	lfsr	1,4
  7935   00267A  51BE               	movf	color_calibration@yellow& (0+255),w,b
  7936   00267C  26E1               	addwf	fsr1l,f,c
  7937   00267E  51BF               	movf	(color_calibration@yellow+1)& (0+255),w,b
  7938   002680  22E2               	addwfc	fsr1h,f,c
  7939   002682  CFDE FFE6          	movff	postinc2,postinc1
  7940   002686  CFDD FFE5          	movff	postdec2,postdec1
  7941   00268A                     
  7942                           ; BSR set to: 0
  7943                           ;color.c: 203:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7944   00268A  0E29               	movlw	41
  7945   00268C  6E43               	movwf	(??_color_calibration+1)^0,c
  7946   00268E  0E96               	movlw	150
  7947   002690  6E42               	movwf	??_color_calibration^0,c
  7948   002692  0E7F               	movlw	127
  7949   002694                     u6277:
  7950   002694  2EE8               	decfsz	wreg,f,c
  7951   002696  D7FE               	bra	u6277
  7952   002698  2E42               	decfsz	??_color_calibration^0,f,c
  7953   00269A  D7FC               	bra	u6277
  7954   00269C  2E43               	decfsz	(??_color_calibration+1)^0,f,c
  7955   00269E  D7FA               	bra	u6277
  7956   0026A0  0000               	nop	
  7957   0026A2                     
  7958                           ;color.c: 204:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  7959   0026A2  8680               	bsf	128,3,c	;volatile
  7960   0026A4  8E7C               	bsf	124,7,c	;volatile
  7961   0026A6                     l205:
  7962   0026A6  B48E               	btfsc	142,2,c	;volatile
  7963   0026A8  EF58  F013         	goto	u4501
  7964   0026AC  EF5A  F013         	goto	u4500
  7965   0026B0                     u4501:
  7966   0026B0  EF53  F013         	goto	l205
  7967   0026B4                     u4500:
  7968   0026B4                     
  7969                           ;color.c: 208:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  7970   0026B4  9680               	bcf	128,3,c	;volatile
  7971   0026B6  9E7C               	bcf	124,7,c	;volatile
  7972   0026B8                     
  7973                           ;color.c: 209:     color_read(RGBC);
  7974   0026B8  C0B4  F016         	movff	color_calibration@RGBC,color_read@RGBC
  7975   0026BC  C0B5  F017         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  7976   0026C0  ECA7  F01F         	call	_color_read	;wreg free
  7977   0026C4                     
  7978                           ;color.c: 210:     rgb_2_hsv(*RGBC, HSV);
  7979   0026C4  C0B4  FFD9         	movff	color_calibration@RGBC,fsr2l
  7980   0026C8  C0B5  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  7981   0026CC  EE00  F02C         	lfsr	0,rgb_2_hsv@RGBC
  7982   0026D0  0E07               	movlw	7
  7983   0026D2                     u4511:
  7984   0026D2  CFDB FFEB          	movff	plusw2,plusw0
  7985   0026D6  06E8               	decf	wreg,f,c
  7986   0026D8  E2FC               	bc	u4511
  7987   0026DA  C0B6  F034         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  7988   0026DE  C0B7  F035         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  7989   0026E2  EC37  F017         	call	_rgb_2_hsv	;wreg free
  7990   0026E6                     
  7991                           ;color.c: 211:     pink->H = HSV->H;
  7992   0026E6  C0B6  FFD9         	movff	color_calibration@HSV,fsr2l
  7993   0026EA  C0B7  FFDA         	movff	color_calibration@HSV+1,fsr2h
  7994   0026EE  C0C0  FFE1         	movff	color_calibration@pink,fsr1l
  7995   0026F2  C0C1  FFE2         	movff	color_calibration@pink+1,fsr1h
  7996   0026F6  CFDE FFE6          	movff	postinc2,postinc1
  7997   0026FA  CFDD FFE5          	movff	postdec2,postdec1
  7998   0026FE                     
  7999                           ;color.c: 212:     pink->S = HSV->S;
  8000   0026FE  0100               	movlb	0	; () banked
  8001   002700  EE20 F002          	lfsr	2,2
  8002   002704  51B6               	movf	color_calibration@HSV& (0+255),w,b
  8003   002706  26D9               	addwf	fsr2l,f,c
  8004   002708  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8005   00270A  22DA               	addwfc	fsr2h,f,c
  8006   00270C  EE10 F002          	lfsr	1,2
  8007   002710  51C0               	movf	color_calibration@pink& (0+255),w,b
  8008   002712  26E1               	addwf	fsr1l,f,c
  8009   002714  51C1               	movf	(color_calibration@pink+1)& (0+255),w,b
  8010   002716  22E2               	addwfc	fsr1h,f,c
  8011   002718  CFDE FFE6          	movff	postinc2,postinc1
  8012   00271C  CFDD FFE5          	movff	postdec2,postdec1
  8013   002720                     
  8014                           ; BSR set to: 0
  8015                           ;color.c: 213:     pink->V = HSV->V;
  8016   002720  EE20 F004          	lfsr	2,4
  8017   002724  51B6               	movf	color_calibration@HSV& (0+255),w,b
  8018   002726  26D9               	addwf	fsr2l,f,c
  8019   002728  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8020   00272A  22DA               	addwfc	fsr2h,f,c
  8021   00272C  EE10 F004          	lfsr	1,4
  8022   002730  51C0               	movf	color_calibration@pink& (0+255),w,b
  8023   002732  26E1               	addwf	fsr1l,f,c
  8024   002734  51C1               	movf	(color_calibration@pink+1)& (0+255),w,b
  8025   002736  22E2               	addwfc	fsr1h,f,c
  8026   002738  CFDE FFE6          	movff	postinc2,postinc1
  8027   00273C  CFDD FFE5          	movff	postdec2,postdec1
  8028   002740                     
  8029                           ; BSR set to: 0
  8030                           ;color.c: 215:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8031   002740  0E29               	movlw	41
  8032   002742  6E43               	movwf	(??_color_calibration+1)^0,c
  8033   002744  0E96               	movlw	150
  8034   002746  6E42               	movwf	??_color_calibration^0,c
  8035   002748  0E7F               	movlw	127
  8036   00274A                     u6287:
  8037   00274A  2EE8               	decfsz	wreg,f,c
  8038   00274C  D7FE               	bra	u6287
  8039   00274E  2E42               	decfsz	??_color_calibration^0,f,c
  8040   002750  D7FC               	bra	u6287
  8041   002752  2E43               	decfsz	(??_color_calibration+1)^0,f,c
  8042   002754  D7FA               	bra	u6287
  8043   002756  0000               	nop	
  8044   002758                     
  8045                           ;color.c: 216:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8046   002758  8680               	bsf	128,3,c	;volatile
  8047   00275A  8E7C               	bsf	124,7,c	;volatile
  8048   00275C                     l208:
  8049   00275C  B48E               	btfsc	142,2,c	;volatile
  8050   00275E  EFB3  F013         	goto	u4521
  8051   002762  EFB5  F013         	goto	u4520
  8052   002766                     u4521:
  8053   002766  EFAE  F013         	goto	l208
  8054   00276A                     u4520:
  8055   00276A                     
  8056                           ;color.c: 220:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8057   00276A  9680               	bcf	128,3,c	;volatile
  8058   00276C  9E7C               	bcf	124,7,c	;volatile
  8059   00276E                     
  8060                           ;color.c: 221:     color_read(RGBC);
  8061   00276E  C0B4  F016         	movff	color_calibration@RGBC,color_read@RGBC
  8062   002772  C0B5  F017         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8063   002776  ECA7  F01F         	call	_color_read	;wreg free
  8064   00277A                     
  8065                           ;color.c: 222:     rgb_2_hsv(*RGBC, HSV);
  8066   00277A  C0B4  FFD9         	movff	color_calibration@RGBC,fsr2l
  8067   00277E  C0B5  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8068   002782  EE00  F02C         	lfsr	0,rgb_2_hsv@RGBC
  8069   002786  0E07               	movlw	7
  8070   002788                     u4531:
  8071   002788  CFDB FFEB          	movff	plusw2,plusw0
  8072   00278C  06E8               	decf	wreg,f,c
  8073   00278E  E2FC               	bc	u4531
  8074   002790  C0B6  F034         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8075   002794  C0B7  F035         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8076   002798  EC37  F017         	call	_rgb_2_hsv	;wreg free
  8077   00279C                     
  8078                           ;color.c: 223:     orange->H = HSV->H;
  8079   00279C  C0B6  FFD9         	movff	color_calibration@HSV,fsr2l
  8080   0027A0  C0B7  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8081   0027A4  C0C2  FFE1         	movff	color_calibration@orange,fsr1l
  8082   0027A8  C0C3  FFE2         	movff	color_calibration@orange+1,fsr1h
  8083   0027AC  CFDE FFE6          	movff	postinc2,postinc1
  8084   0027B0  CFDD FFE5          	movff	postdec2,postdec1
  8085   0027B4                     
  8086                           ;color.c: 224:     orange->S = HSV->S;
  8087   0027B4  0100               	movlb	0	; () banked
  8088   0027B6  EE20 F002          	lfsr	2,2
  8089   0027BA  51B6               	movf	color_calibration@HSV& (0+255),w,b
  8090   0027BC  26D9               	addwf	fsr2l,f,c
  8091   0027BE  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8092   0027C0  22DA               	addwfc	fsr2h,f,c
  8093   0027C2  EE10 F002          	lfsr	1,2
  8094   0027C6  51C2               	movf	color_calibration@orange& (0+255),w,b
  8095   0027C8  26E1               	addwf	fsr1l,f,c
  8096   0027CA  51C3               	movf	(color_calibration@orange+1)& (0+255),w,b
  8097   0027CC  22E2               	addwfc	fsr1h,f,c
  8098   0027CE  CFDE FFE6          	movff	postinc2,postinc1
  8099   0027D2  CFDD FFE5          	movff	postdec2,postdec1
  8100   0027D6                     
  8101                           ; BSR set to: 0
  8102                           ;color.c: 225:     orange->V = HSV->V;
  8103   0027D6  EE20 F004          	lfsr	2,4
  8104   0027DA  51B6               	movf	color_calibration@HSV& (0+255),w,b
  8105   0027DC  26D9               	addwf	fsr2l,f,c
  8106   0027DE  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8107   0027E0  22DA               	addwfc	fsr2h,f,c
  8108   0027E2  EE10 F004          	lfsr	1,4
  8109   0027E6  51C2               	movf	color_calibration@orange& (0+255),w,b
  8110   0027E8  26E1               	addwf	fsr1l,f,c
  8111   0027EA  51C3               	movf	(color_calibration@orange+1)& (0+255),w,b
  8112   0027EC  22E2               	addwfc	fsr1h,f,c
  8113   0027EE  CFDE FFE6          	movff	postinc2,postinc1
  8114   0027F2  CFDD FFE5          	movff	postdec2,postdec1
  8115   0027F6                     
  8116                           ; BSR set to: 0
  8117                           ;color.c: 227:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8118   0027F6  0E29               	movlw	41
  8119   0027F8  6E43               	movwf	(??_color_calibration+1)^0,c
  8120   0027FA  0E96               	movlw	150
  8121   0027FC  6E42               	movwf	??_color_calibration^0,c
  8122   0027FE  0E7F               	movlw	127
  8123   002800                     u6297:
  8124   002800  2EE8               	decfsz	wreg,f,c
  8125   002802  D7FE               	bra	u6297
  8126   002804  2E42               	decfsz	??_color_calibration^0,f,c
  8127   002806  D7FC               	bra	u6297
  8128   002808  2E43               	decfsz	(??_color_calibration+1)^0,f,c
  8129   00280A  D7FA               	bra	u6297
  8130   00280C  0000               	nop	
  8131   00280E                     
  8132                           ;color.c: 228:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8133   00280E  8680               	bsf	128,3,c	;volatile
  8134   002810  8E7C               	bsf	124,7,c	;volatile
  8135   002812                     l211:
  8136   002812  B48E               	btfsc	142,2,c	;volatile
  8137   002814  EF0E  F014         	goto	u4541
  8138   002818  EF10  F014         	goto	u4540
  8139   00281C                     u4541:
  8140   00281C  EF09  F014         	goto	l211
  8141   002820                     u4540:
  8142   002820                     
  8143                           ;color.c: 232:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8144   002820  9680               	bcf	128,3,c	;volatile
  8145   002822  9E7C               	bcf	124,7,c	;volatile
  8146   002824                     
  8147                           ;color.c: 233:     color_read(RGBC);
  8148   002824  C0B4  F016         	movff	color_calibration@RGBC,color_read@RGBC
  8149   002828  C0B5  F017         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8150   00282C  ECA7  F01F         	call	_color_read	;wreg free
  8151   002830                     
  8152                           ;color.c: 234:     rgb_2_hsv(*RGBC, HSV);
  8153   002830  C0B4  FFD9         	movff	color_calibration@RGBC,fsr2l
  8154   002834  C0B5  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8155   002838  EE00  F02C         	lfsr	0,rgb_2_hsv@RGBC
  8156   00283C  0E07               	movlw	7
  8157   00283E                     u4551:
  8158   00283E  CFDB FFEB          	movff	plusw2,plusw0
  8159   002842  06E8               	decf	wreg,f,c
  8160   002844  E2FC               	bc	u4551
  8161   002846  C0B6  F034         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8162   00284A  C0B7  F035         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8163   00284E  EC37  F017         	call	_rgb_2_hsv	;wreg free
  8164   002852                     
  8165                           ;color.c: 235:     lightblue->H = HSV->H;
  8166   002852  C0B6  FFD9         	movff	color_calibration@HSV,fsr2l
  8167   002856  C0B7  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8168   00285A  C0C4  FFE1         	movff	color_calibration@lightblue,fsr1l
  8169   00285E  C0C5  FFE2         	movff	color_calibration@lightblue+1,fsr1h
  8170   002862  CFDE FFE6          	movff	postinc2,postinc1
  8171   002866  CFDD FFE5          	movff	postdec2,postdec1
  8172   00286A                     
  8173                           ;color.c: 236:     lightblue->S = HSV->S;
  8174   00286A  0100               	movlb	0	; () banked
  8175   00286C  EE20 F002          	lfsr	2,2
  8176   002870  51B6               	movf	color_calibration@HSV& (0+255),w,b
  8177   002872  26D9               	addwf	fsr2l,f,c
  8178   002874  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8179   002876  22DA               	addwfc	fsr2h,f,c
  8180   002878  EE10 F002          	lfsr	1,2
  8181   00287C  51C4               	movf	color_calibration@lightblue& (0+255),w,b
  8182   00287E  26E1               	addwf	fsr1l,f,c
  8183   002880  51C5               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  8184   002882  22E2               	addwfc	fsr1h,f,c
  8185   002884  CFDE FFE6          	movff	postinc2,postinc1
  8186   002888  CFDD FFE5          	movff	postdec2,postdec1
  8187   00288C                     
  8188                           ; BSR set to: 0
  8189                           ;color.c: 237:     lightblue->V = HSV->V;
  8190   00288C  EE20 F004          	lfsr	2,4
  8191   002890  51B6               	movf	color_calibration@HSV& (0+255),w,b
  8192   002892  26D9               	addwf	fsr2l,f,c
  8193   002894  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8194   002896  22DA               	addwfc	fsr2h,f,c
  8195   002898  EE10 F004          	lfsr	1,4
  8196   00289C  51C4               	movf	color_calibration@lightblue& (0+255),w,b
  8197   00289E  26E1               	addwf	fsr1l,f,c
  8198   0028A0  51C5               	movf	(color_calibration@lightblue+1)& (0+255),w,b
  8199   0028A2  22E2               	addwfc	fsr1h,f,c
  8200   0028A4  CFDE FFE6          	movff	postinc2,postinc1
  8201   0028A8  CFDD FFE5          	movff	postdec2,postdec1
  8202   0028AC                     
  8203                           ; BSR set to: 0
  8204                           ;color.c: 239:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8205   0028AC  0E29               	movlw	41
  8206   0028AE  6E43               	movwf	(??_color_calibration+1)^0,c
  8207   0028B0  0E96               	movlw	150
  8208   0028B2  6E42               	movwf	??_color_calibration^0,c
  8209   0028B4  0E7F               	movlw	127
  8210   0028B6                     u6307:
  8211   0028B6  2EE8               	decfsz	wreg,f,c
  8212   0028B8  D7FE               	bra	u6307
  8213   0028BA  2E42               	decfsz	??_color_calibration^0,f,c
  8214   0028BC  D7FC               	bra	u6307
  8215   0028BE  2E43               	decfsz	(??_color_calibration+1)^0,f,c
  8216   0028C0  D7FA               	bra	u6307
  8217   0028C2  0000               	nop	
  8218   0028C4                     
  8219                           ;color.c: 240:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8220   0028C4  8680               	bsf	128,3,c	;volatile
  8221   0028C6  8E7C               	bsf	124,7,c	;volatile
  8222   0028C8                     l214:
  8223   0028C8  B48E               	btfsc	142,2,c	;volatile
  8224   0028CA  EF69  F014         	goto	u4561
  8225   0028CE  EF6B  F014         	goto	u4560
  8226   0028D2                     u4561:
  8227   0028D2  EF64  F014         	goto	l214
  8228   0028D6                     u4560:
  8229   0028D6                     
  8230                           ;color.c: 244:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
  8231   0028D6  9680               	bcf	128,3,c	;volatile
  8232   0028D8  9E7C               	bcf	124,7,c	;volatile
  8233   0028DA                     
  8234                           ;color.c: 245:     color_read(RGBC);
  8235   0028DA  C0B4  F016         	movff	color_calibration@RGBC,color_read@RGBC
  8236   0028DE  C0B5  F017         	movff	color_calibration@RGBC+1,color_read@RGBC+1
  8237   0028E2  ECA7  F01F         	call	_color_read	;wreg free
  8238   0028E6                     
  8239                           ;color.c: 246:     rgb_2_hsv(*RGBC, HSV);
  8240   0028E6  C0B4  FFD9         	movff	color_calibration@RGBC,fsr2l
  8241   0028EA  C0B5  FFDA         	movff	color_calibration@RGBC+1,fsr2h
  8242   0028EE  EE00  F02C         	lfsr	0,rgb_2_hsv@RGBC
  8243   0028F2  0E07               	movlw	7
  8244   0028F4                     u4571:
  8245   0028F4  CFDB FFEB          	movff	plusw2,plusw0
  8246   0028F8  06E8               	decf	wreg,f,c
  8247   0028FA  E2FC               	bc	u4571
  8248   0028FC  C0B6  F034         	movff	color_calibration@HSV,rgb_2_hsv@HSV
  8249   002900  C0B7  F035         	movff	color_calibration@HSV+1,rgb_2_hsv@HSV+1
  8250   002904  EC37  F017         	call	_rgb_2_hsv	;wreg free
  8251   002908                     
  8252                           ;color.c: 247:     white->H = HSV->H;
  8253   002908  C0B6  FFD9         	movff	color_calibration@HSV,fsr2l
  8254   00290C  C0B7  FFDA         	movff	color_calibration@HSV+1,fsr2h
  8255   002910  C0C6  FFE1         	movff	color_calibration@white,fsr1l
  8256   002914  C0C7  FFE2         	movff	color_calibration@white+1,fsr1h
  8257   002918  CFDE FFE6          	movff	postinc2,postinc1
  8258   00291C  CFDD FFE5          	movff	postdec2,postdec1
  8259   002920                     
  8260                           ;color.c: 248:     white->S = HSV->S;
  8261   002920  0100               	movlb	0	; () banked
  8262   002922  EE20 F002          	lfsr	2,2
  8263   002926  51B6               	movf	color_calibration@HSV& (0+255),w,b
  8264   002928  26D9               	addwf	fsr2l,f,c
  8265   00292A  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8266   00292C  22DA               	addwfc	fsr2h,f,c
  8267   00292E  EE10 F002          	lfsr	1,2
  8268   002932  51C6               	movf	color_calibration@white& (0+255),w,b
  8269   002934  26E1               	addwf	fsr1l,f,c
  8270   002936  51C7               	movf	(color_calibration@white+1)& (0+255),w,b
  8271   002938  22E2               	addwfc	fsr1h,f,c
  8272   00293A  CFDE FFE6          	movff	postinc2,postinc1
  8273   00293E  CFDD FFE5          	movff	postdec2,postdec1
  8274   002942                     
  8275                           ; BSR set to: 0
  8276                           ;color.c: 249:     white->V = HSV->V;
  8277   002942  EE20 F004          	lfsr	2,4
  8278   002946  51B6               	movf	color_calibration@HSV& (0+255),w,b
  8279   002948  26D9               	addwf	fsr2l,f,c
  8280   00294A  51B7               	movf	(color_calibration@HSV+1)& (0+255),w,b
  8281   00294C  22DA               	addwfc	fsr2h,f,c
  8282   00294E  EE10 F004          	lfsr	1,4
  8283   002952  51C6               	movf	color_calibration@white& (0+255),w,b
  8284   002954  26E1               	addwf	fsr1l,f,c
  8285   002956  51C7               	movf	(color_calibration@white+1)& (0+255),w,b
  8286   002958  22E2               	addwfc	fsr1h,f,c
  8287   00295A  CFDE FFE6          	movff	postinc2,postinc1
  8288   00295E  CFDD FFE5          	movff	postdec2,postdec1
  8289   002962                     
  8290                           ; BSR set to: 0
  8291                           ;color.c: 251:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8292   002962  0E29               	movlw	41
  8293   002964  6E43               	movwf	(??_color_calibration+1)^0,c
  8294   002966  0E96               	movlw	150
  8295   002968  6E42               	movwf	??_color_calibration^0,c
  8296   00296A  0E7F               	movlw	127
  8297   00296C                     u6317:
  8298   00296C  2EE8               	decfsz	wreg,f,c
  8299   00296E  D7FE               	bra	u6317
  8300   002970  2E42               	decfsz	??_color_calibration^0,f,c
  8301   002972  D7FC               	bra	u6317
  8302   002974  2E43               	decfsz	(??_color_calibration+1)^0,f,c
  8303   002976  D7FA               	bra	u6317
  8304   002978  0000               	nop	
  8305   00297A                     
  8306                           ;color.c: 252:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
  8307   00297A  8680               	bsf	128,3,c	;volatile
  8308   00297C  8E7C               	bsf	124,7,c	;volatile
  8309   00297E  0012               	return		;funcret
  8310   002980                     __end_of_color_calibration:
  8311                           	callstack 0
  8312                           
  8313 ;; *************** function _white_Light *****************
  8314 ;; Defined at:
  8315 ;;		line 62 in file "color.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  state           1    wreg     unsigned char 
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  state           1   17[COMRAM] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8332 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8333 ;;Total ram usage:        1 bytes
  8334 ;; Hardware stack levels used: 1
  8335 ;; Hardware stack levels required when called: 6
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_main
  8340 ;;		_color_calibration
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	text19
  8345   005306                     __ptext19:
  8346                           	callstack 0
  8347   005306                     _white_Light:
  8348                           	callstack 24
  8349                           
  8350                           ;incstack = 0
  8351                           ;white_Light@state stored from wreg
  8352   005306  6E12               	movwf	white_Light@state^0,c
  8353   005308                     
  8354                           ;color.c: 62: void white_Light(char state);color.c: 63: {;color.c: 64:     if (state){
  8355   005308  5012               	movf	white_Light@state^0,w,c
  8356   00530A  B4D8               	btfsc	status,2,c
  8357   00530C  EF8A  F029         	goto	u4101
  8358   005310  EF8C  F029         	goto	u4100
  8359   005314                     u4101:
  8360   005314  EF91  F029         	goto	l157
  8361   005318                     u4100:
  8362   005318                     
  8363                           ;color.c: 65:         LATGbits.LATG0 = 1;
  8364   005318  807F               	bsf	127,0,c	;volatile
  8365                           
  8366                           ;color.c: 66:         LATEbits.LATE7 = 1;
  8367   00531A  8E7D               	bsf	125,7,c	;volatile
  8368                           
  8369                           ;color.c: 67:         LATAbits.LATA3 = 1;
  8370   00531C  8679               	bsf	121,3,c	;volatile
  8371                           
  8372                           ;color.c: 68:     }
  8373   00531E  EF94  F029         	goto	l159
  8374   005322                     l157:
  8375                           
  8376                           ;color.c: 70:         LATGbits.LATG0 = 0;
  8377   005322  907F               	bcf	127,0,c	;volatile
  8378                           
  8379                           ;color.c: 71:         LATEbits.LATE7 = 0;
  8380   005324  9E7D               	bcf	125,7,c	;volatile
  8381                           
  8382                           ;color.c: 72:         LATAbits.LATA3 = 0;
  8383   005326  9679               	bcf	121,3,c	;volatile
  8384   005328                     l159:
  8385   005328  0012               	return		;funcret
  8386   00532A                     __end_of_white_Light:
  8387                           	callstack 0
  8388                           
  8389 ;; *************** function _rgb_2_hsv *****************
  8390 ;; Defined at:
  8391 ;;		line 265 in file "color.c"
  8392 ;; Parameters:    Size  Location     Type
  8393 ;;  RGBC            8   43[COMRAM] struct RGBC_val
  8394 ;;  HSV             2   51[COMRAM] PTR struct HSV_val
  8395 ;;		 -> main@HSV(6), 
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  diff            4   14[BANK0 ] unsigned long 
  8398 ;;  b               2   20[BANK0 ] unsigned int 
  8399 ;;  g               2   18[BANK0 ] unsigned int 
  8400 ;;  cmax            2   12[BANK0 ] unsigned int 
  8401 ;;  r               2   10[BANK0 ] unsigned int 
  8402 ;;  cmin            2    4[BANK0 ] unsigned int 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  1    wreg      void 
  8405 ;; Registers used:
  8406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8412 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8413 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8414 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8415 ;;      Totals:        22      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8416 ;;Total ram usage:       44 bytes
  8417 ;; Hardware stack levels used: 1
  8418 ;; Hardware stack levels required when called: 7
  8419 ;; This function calls:
  8420 ;;		___aldiv
  8421 ;;		___lldiv
  8422 ;;		___lmul
  8423 ;;		_max
  8424 ;;		_min
  8425 ;; This function is called by:
  8426 ;;		_main
  8427 ;;		_color_calibration
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text20
  8432   002E6E                     __ptext20:
  8433                           	callstack 0
  8434   002E6E                     _rgb_2_hsv:
  8435                           	callstack 23
  8436   002E6E                     
  8437                           ;color.c: 271:     unsigned int r = (unsigned int)(RGBC.R*10000L/1900);
  8438   002E6E  C02C  F012         	movff	rgb_2_hsv@RGBC,___lmul@multiplier
  8439   002E72  C02D  F013         	movff	rgb_2_hsv@RGBC+1,___lmul@multiplier+1
  8440   002E76  6A14               	clrf	(___lmul@multiplier+2)^0,c
  8441   002E78  6A15               	clrf	(___lmul@multiplier+3)^0,c
  8442   002E7A  0E10               	movlw	16
  8443   002E7C  6E16               	movwf	___lmul@multiplicand^0,c
  8444   002E7E  0E27               	movlw	39
  8445   002E80  6E17               	movwf	(___lmul@multiplicand+1)^0,c
  8446   002E82  0E00               	movlw	0
  8447   002E84  6E18               	movwf	(___lmul@multiplicand+2)^0,c
  8448   002E86  0E00               	movlw	0
  8449   002E88  6E19               	movwf	(___lmul@multiplicand+3)^0,c
  8450   002E8A  ECEB  F027         	call	___lmul	;wreg free
  8451   002E8E  C012  F01E         	movff	?___lmul,___aldiv@dividend
  8452   002E92  C013  F01F         	movff	?___lmul+1,___aldiv@dividend+1
  8453   002E96  C014  F020         	movff	?___lmul+2,___aldiv@dividend+2
  8454   002E9A  C015  F021         	movff	?___lmul+3,___aldiv@dividend+3
  8455   002E9E  0E6C               	movlw	108
  8456   002EA0  6E22               	movwf	___aldiv@divisor^0,c
  8457   002EA2  0E07               	movlw	7
  8458   002EA4  6E23               	movwf	(___aldiv@divisor+1)^0,c
  8459   002EA6  0E00               	movlw	0
  8460   002EA8  6E24               	movwf	(___aldiv@divisor+2)^0,c
  8461   002EAA  0E00               	movlw	0
  8462   002EAC  6E25               	movwf	(___aldiv@divisor+3)^0,c
  8463   002EAE  EC1D  F024         	call	___aldiv	;wreg free
  8464   002EB2  C01E  F0A8         	movff	?___aldiv,rgb_2_hsv@r
  8465   002EB6  C01F  F0A9         	movff	?___aldiv+1,rgb_2_hsv@r+1
  8466                           
  8467                           ;color.c: 272:     unsigned int g = (unsigned int)(RGBC.G*10000L/1400);
  8468   002EBA  C02E  F012         	movff	rgb_2_hsv@RGBC+2,___lmul@multiplier
  8469   002EBE  C02F  F013         	movff	rgb_2_hsv@RGBC+3,___lmul@multiplier+1
  8470   002EC2  6A14               	clrf	(___lmul@multiplier+2)^0,c
  8471   002EC4  6A15               	clrf	(___lmul@multiplier+3)^0,c
  8472   002EC6  0E10               	movlw	16
  8473   002EC8  6E16               	movwf	___lmul@multiplicand^0,c
  8474   002ECA  0E27               	movlw	39
  8475   002ECC  6E17               	movwf	(___lmul@multiplicand+1)^0,c
  8476   002ECE  0E00               	movlw	0
  8477   002ED0  6E18               	movwf	(___lmul@multiplicand+2)^0,c
  8478   002ED2  0E00               	movlw	0
  8479   002ED4  6E19               	movwf	(___lmul@multiplicand+3)^0,c
  8480   002ED6  ECEB  F027         	call	___lmul	;wreg free
  8481   002EDA  C012  F01E         	movff	?___lmul,___aldiv@dividend
  8482   002EDE  C013  F01F         	movff	?___lmul+1,___aldiv@dividend+1
  8483   002EE2  C014  F020         	movff	?___lmul+2,___aldiv@dividend+2
  8484   002EE6  C015  F021         	movff	?___lmul+3,___aldiv@dividend+3
  8485   002EEA  0E78               	movlw	120
  8486   002EEC  6E22               	movwf	___aldiv@divisor^0,c
  8487   002EEE  0E05               	movlw	5
  8488   002EF0  6E23               	movwf	(___aldiv@divisor+1)^0,c
  8489   002EF2  0E00               	movlw	0
  8490   002EF4  6E24               	movwf	(___aldiv@divisor+2)^0,c
  8491   002EF6  0E00               	movlw	0
  8492   002EF8  6E25               	movwf	(___aldiv@divisor+3)^0,c
  8493   002EFA  EC1D  F024         	call	___aldiv	;wreg free
  8494   002EFE  C01E  F0B0         	movff	?___aldiv,rgb_2_hsv@g
  8495   002F02  C01F  F0B1         	movff	?___aldiv+1,rgb_2_hsv@g+1
  8496                           
  8497                           ;color.c: 273:     unsigned int b = (unsigned int)(RGBC.B*10000L/1600);
  8498   002F06  C030  F012         	movff	rgb_2_hsv@RGBC+4,___lmul@multiplier
  8499   002F0A  C031  F013         	movff	rgb_2_hsv@RGBC+5,___lmul@multiplier+1
  8500   002F0E  6A14               	clrf	(___lmul@multiplier+2)^0,c
  8501   002F10  6A15               	clrf	(___lmul@multiplier+3)^0,c
  8502   002F12  0E10               	movlw	16
  8503   002F14  6E16               	movwf	___lmul@multiplicand^0,c
  8504   002F16  0E27               	movlw	39
  8505   002F18  6E17               	movwf	(___lmul@multiplicand+1)^0,c
  8506   002F1A  0E00               	movlw	0
  8507   002F1C  6E18               	movwf	(___lmul@multiplicand+2)^0,c
  8508   002F1E  0E00               	movlw	0
  8509   002F20  6E19               	movwf	(___lmul@multiplicand+3)^0,c
  8510   002F22  ECEB  F027         	call	___lmul	;wreg free
  8511   002F26  C012  F01E         	movff	?___lmul,___aldiv@dividend
  8512   002F2A  C013  F01F         	movff	?___lmul+1,___aldiv@dividend+1
  8513   002F2E  C014  F020         	movff	?___lmul+2,___aldiv@dividend+2
  8514   002F32  C015  F021         	movff	?___lmul+3,___aldiv@dividend+3
  8515   002F36  0E40               	movlw	64
  8516   002F38  6E22               	movwf	___aldiv@divisor^0,c
  8517   002F3A  0E06               	movlw	6
  8518   002F3C  6E23               	movwf	(___aldiv@divisor+1)^0,c
  8519   002F3E  0E00               	movlw	0
  8520   002F40  6E24               	movwf	(___aldiv@divisor+2)^0,c
  8521   002F42  0E00               	movlw	0
  8522   002F44  6E25               	movwf	(___aldiv@divisor+3)^0,c
  8523   002F46  EC1D  F024         	call	___aldiv	;wreg free
  8524   002F4A  C01E  F0B2         	movff	?___aldiv,rgb_2_hsv@b
  8525   002F4E  C01F  F0B3         	movff	?___aldiv+1,rgb_2_hsv@b+1
  8526                           
  8527                           ;color.c: 276:     unsigned int cmax = max(r, max(g, b));
  8528   002F52  C0B0  F012         	movff	rgb_2_hsv@g,max@a
  8529   002F56  C0B1  F013         	movff	rgb_2_hsv@g+1,max@a+1
  8530   002F5A  C0B2  F014         	movff	rgb_2_hsv@b,max@b
  8531   002F5E  C0B3  F015         	movff	rgb_2_hsv@b+1,max@b+1
  8532   002F62  ECE0  F028         	call	_max	;wreg free
  8533   002F66  C012  F0A4         	movff	?_max,_rgb_2_hsv$3596
  8534   002F6A  C013  F0A5         	movff	?_max+1,_rgb_2_hsv$3596+1
  8535                           
  8536                           ;color.c: 276:     unsigned int cmax = max(r, max(g, b));
  8537   002F6E  C0A8  F012         	movff	rgb_2_hsv@r,max@a
  8538   002F72  C0A9  F013         	movff	rgb_2_hsv@r+1,max@a+1
  8539   002F76  C0A4  F014         	movff	_rgb_2_hsv$3596,max@b
  8540   002F7A  C0A5  F015         	movff	_rgb_2_hsv$3596+1,max@b+1
  8541   002F7E  ECE0  F028         	call	_max	;wreg free
  8542   002F82  C012  F0AA         	movff	?_max,rgb_2_hsv@cmax
  8543   002F86  C013  F0AB         	movff	?_max+1,rgb_2_hsv@cmax+1
  8544                           
  8545                           ;color.c: 277:     unsigned int cmin = min(r, min(g, b));
  8546   002F8A  C0B0  F012         	movff	rgb_2_hsv@g,min@a
  8547   002F8E  C0B1  F013         	movff	rgb_2_hsv@g+1,min@a+1
  8548   002F92  C0B2  F014         	movff	rgb_2_hsv@b,min@b
  8549   002F96  C0B3  F015         	movff	rgb_2_hsv@b+1,min@b+1
  8550   002F9A  ECCA  F028         	call	_min	;wreg free
  8551   002F9E  C012  F0A6         	movff	?_min,_rgb_2_hsv$3597
  8552   002FA2  C013  F0A7         	movff	?_min+1,_rgb_2_hsv$3597+1
  8553                           
  8554                           ;color.c: 277:     unsigned int cmin = min(r, min(g, b));
  8555   002FA6  C0A8  F012         	movff	rgb_2_hsv@r,min@a
  8556   002FAA  C0A9  F013         	movff	rgb_2_hsv@r+1,min@a+1
  8557   002FAE  C0A6  F014         	movff	_rgb_2_hsv$3597,min@b
  8558   002FB2  C0A7  F015         	movff	_rgb_2_hsv$3597+1,min@b+1
  8559   002FB6  ECCA  F028         	call	_min	;wreg free
  8560   002FBA  C012  F0A2         	movff	?_min,rgb_2_hsv@cmin
  8561   002FBE  C013  F0A3         	movff	?_min+1,rgb_2_hsv@cmin+1
  8562   002FC2                     
  8563                           ;color.c: 278:     unsigned long diff = cmax - cmin;
  8564   002FC2  0100               	movlb	0	; () banked
  8565   002FC4  51A2               	movf	rgb_2_hsv@cmin& (0+255),w,b
  8566   002FC6  5DAA               	subwf	rgb_2_hsv@cmax& (0+255),w,b
  8567   002FC8  6E36               	movwf	??_rgb_2_hsv^0,c
  8568   002FCA  51A3               	movf	(rgb_2_hsv@cmin+1)& (0+255),w,b
  8569   002FCC  59AB               	subwfb	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8570   002FCE  6E37               	movwf	(??_rgb_2_hsv+1)^0,c
  8571   002FD0  C036  F0AC         	movff	??_rgb_2_hsv,rgb_2_hsv@diff
  8572   002FD4  C037  F0AD         	movff	??_rgb_2_hsv+1,rgb_2_hsv@diff+1
  8573   002FD8  6BAE               	clrf	(rgb_2_hsv@diff+2)& (0+255),b
  8574   002FDA  6BAF               	clrf	(rgb_2_hsv@diff+3)& (0+255),b
  8575   002FDC                     
  8576                           ; BSR set to: 0
  8577                           ;color.c: 281:     if (cmax == r){
  8578   002FDC  51A8               	movf	rgb_2_hsv@r& (0+255),w,b
  8579   002FDE  19AA               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8580   002FE0  E107               	bnz	u4111
  8581   002FE2  51A9               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8582   002FE4  19AB               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8583   002FE6  A4D8               	btfss	status,2,c
  8584   002FE8  EFF8  F017         	goto	u4111
  8585   002FEC  EFFA  F017         	goto	u4110
  8586   002FF0                     u4111:
  8587   002FF0  EFA1  F018         	goto	l5028
  8588   002FF4                     u4110:
  8589   002FF4                     
  8590                           ; BSR set to: 0
  8591                           ;color.c: 282:         if (g > b){HSV->H = (unsigned int)((g-b)*6000L/diff);}
  8592   002FF4  51B0               	movf	rgb_2_hsv@g& (0+255),w,b
  8593   002FF6  5DB2               	subwf	rgb_2_hsv@b& (0+255),w,b
  8594   002FF8  51B1               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8595   002FFA  59B3               	subwfb	(rgb_2_hsv@b+1)& (0+255),w,b
  8596   002FFC  B0D8               	btfsc	status,0,c
  8597   002FFE  EF03  F018         	goto	u4121
  8598   003002  EF05  F018         	goto	u4120
  8599   003006                     u4121:
  8600   003006  EF37  F018         	goto	l5022
  8601   00300A                     u4120:
  8602   00300A                     
  8603                           ; BSR set to: 0
  8604   00300A  51B2               	movf	rgb_2_hsv@b& (0+255),w,b
  8605   00300C  5DB0               	subwf	rgb_2_hsv@g& (0+255),w,b
  8606   00300E  6E36               	movwf	??_rgb_2_hsv^0,c
  8607   003010  51B3               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8608   003012  59B1               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8609   003014  6E37               	movwf	(??_rgb_2_hsv+1)^0,c
  8610   003016  C036  F012         	movff	??_rgb_2_hsv,___lmul@multiplier
  8611   00301A  C037  F013         	movff	??_rgb_2_hsv+1,___lmul@multiplier+1
  8612   00301E  6A14               	clrf	(___lmul@multiplier+2)^0,c
  8613   003020  6A15               	clrf	(___lmul@multiplier+3)^0,c
  8614   003022  0E70               	movlw	112
  8615   003024  6E16               	movwf	___lmul@multiplicand^0,c
  8616   003026  0E17               	movlw	23
  8617   003028  6E17               	movwf	(___lmul@multiplicand+1)^0,c
  8618   00302A  0E00               	movlw	0
  8619   00302C  6E18               	movwf	(___lmul@multiplicand+2)^0,c
  8620   00302E  0E00               	movlw	0
  8621   003030  6E19               	movwf	(___lmul@multiplicand+3)^0,c
  8622   003032  ECEB  F027         	call	___lmul	;wreg free
  8623   003036  C012  F01E         	movff	?___lmul,___lldiv@dividend
  8624   00303A  C013  F01F         	movff	?___lmul+1,___lldiv@dividend+1
  8625   00303E  C014  F020         	movff	?___lmul+2,___lldiv@dividend+2
  8626   003042  C015  F021         	movff	?___lmul+3,___lldiv@dividend+3
  8627   003046  C0AC  F022         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8628   00304A  C0AD  F023         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8629   00304E  C0AE  F024         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8630   003052  C0AF  F025         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8631   003056  ECA2  F026         	call	___lldiv	;wreg free
  8632   00305A  C034  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8633   00305E  C035  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8634   003062  C01E  FFDE         	movff	?___lldiv,postinc2
  8635   003066  C01F  FFDD         	movff	?___lldiv+1,postdec2
  8636   00306A  EF59  F019         	goto	l234
  8637   00306E                     l5022:
  8638                           
  8639                           ; BSR set to: 0
  8640   00306E  51B2               	movf	rgb_2_hsv@b& (0+255),w,b
  8641   003070  5DB0               	subwf	rgb_2_hsv@g& (0+255),w,b
  8642   003072  51B3               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8643   003074  59B1               	subwfb	(rgb_2_hsv@g+1)& (0+255),w,b
  8644   003076  B0D8               	btfsc	status,0,c
  8645   003078  EF40  F018         	goto	u4131
  8646   00307C  EF42  F018         	goto	u4130
  8647   003080                     u4131:
  8648   003080  EF59  F019         	goto	l234
  8649   003084                     u4130:
  8650   003084                     
  8651                           ; BSR set to: 0
  8652   003084  51B2               	movf	rgb_2_hsv@b& (0+255),w,b
  8653   003086  6E36               	movwf	??_rgb_2_hsv^0,c
  8654   003088  51B3               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8655   00308A  6E37               	movwf	(??_rgb_2_hsv+1)^0,c
  8656   00308C  6A38               	clrf	(??_rgb_2_hsv+2)^0,c
  8657   00308E  6A39               	clrf	(??_rgb_2_hsv+3)^0,c
  8658   003090  C0AC  F012         	movff	rgb_2_hsv@diff,___lmul@multiplier
  8659   003094  C0AD  F013         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  8660   003098  C0AE  F014         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  8661   00309C  C0AF  F015         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  8662   0030A0  0E06               	movlw	6
  8663   0030A2  6E16               	movwf	___lmul@multiplicand^0,c
  8664   0030A4  0E00               	movlw	0
  8665   0030A6  6E17               	movwf	(___lmul@multiplicand+1)^0,c
  8666   0030A8  0E00               	movlw	0
  8667   0030AA  6E18               	movwf	(___lmul@multiplicand+2)^0,c
  8668   0030AC  0E00               	movlw	0
  8669   0030AE  6E19               	movwf	(___lmul@multiplicand+3)^0,c
  8670   0030B0  ECEB  F027         	call	___lmul	;wreg free
  8671   0030B4  0100               	movlb	0	; () banked
  8672   0030B6  51B0               	movf	rgb_2_hsv@g& (0+255),w,b
  8673   0030B8  2412               	addwf	?___lmul^0,w,c
  8674   0030BA  6E3A               	movwf	(??_rgb_2_hsv+4)^0,c
  8675   0030BC  51B1               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8676   0030BE  2013               	addwfc	(?___lmul+1)^0,w,c
  8677   0030C0  6E3B               	movwf	(??_rgb_2_hsv+5)^0,c
  8678   0030C2  0E00               	movlw	0
  8679   0030C4  2014               	addwfc	(?___lmul+2)^0,w,c
  8680   0030C6  6E3C               	movwf	(??_rgb_2_hsv+6)^0,c
  8681   0030C8  0E00               	movlw	0
  8682   0030CA  2015               	addwfc	(?___lmul+3)^0,w,c
  8683   0030CC  6E3D               	movwf	(??_rgb_2_hsv+7)^0,c
  8684   0030CE  5036               	movf	??_rgb_2_hsv^0,w,c
  8685   0030D0  5C3A               	subwf	(??_rgb_2_hsv+4)^0,w,c
  8686   0030D2  6F9E               	movwf	_rgb_2_hsv$3598& (0+255),b
  8687   0030D4  5037               	movf	(??_rgb_2_hsv+1)^0,w,c
  8688   0030D6  583B               	subwfb	(??_rgb_2_hsv+5)^0,w,c
  8689   0030D8  6F9F               	movwf	(_rgb_2_hsv$3598+1)& (0+255),b
  8690   0030DA  5038               	movf	(??_rgb_2_hsv+2)^0,w,c
  8691   0030DC  583C               	subwfb	(??_rgb_2_hsv+6)^0,w,c
  8692   0030DE  6FA0               	movwf	(_rgb_2_hsv$3598+2)& (0+255),b
  8693   0030E0  5039               	movf	(??_rgb_2_hsv+3)^0,w,c
  8694   0030E2  583D               	subwfb	(??_rgb_2_hsv+7)^0,w,c
  8695   0030E4  6FA1               	movwf	(_rgb_2_hsv$3598+3)& (0+255),b
  8696   0030E6                     
  8697                           ; BSR set to: 0
  8698   0030E6  C09E  F012         	movff	_rgb_2_hsv$3598,___lmul@multiplier
  8699   0030EA  C09F  F013         	movff	_rgb_2_hsv$3598+1,___lmul@multiplier+1
  8700   0030EE  C0A0  F014         	movff	_rgb_2_hsv$3598+2,___lmul@multiplier+2
  8701   0030F2  C0A1  F015         	movff	_rgb_2_hsv$3598+3,___lmul@multiplier+3
  8702   0030F6  0E70               	movlw	112
  8703   0030F8  6E16               	movwf	___lmul@multiplicand^0,c
  8704   0030FA  0E17               	movlw	23
  8705   0030FC  6E17               	movwf	(___lmul@multiplicand+1)^0,c
  8706   0030FE  0E00               	movlw	0
  8707   003100  6E18               	movwf	(___lmul@multiplicand+2)^0,c
  8708   003102  0E00               	movlw	0
  8709   003104  6E19               	movwf	(___lmul@multiplicand+3)^0,c
  8710   003106  ECEB  F027         	call	___lmul	;wreg free
  8711   00310A  C012  F01E         	movff	?___lmul,___lldiv@dividend
  8712   00310E  C013  F01F         	movff	?___lmul+1,___lldiv@dividend+1
  8713   003112  C014  F020         	movff	?___lmul+2,___lldiv@dividend+2
  8714   003116  C015  F021         	movff	?___lmul+3,___lldiv@dividend+3
  8715   00311A  C0AC  F022         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8716   00311E  C0AD  F023         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8717   003122  C0AE  F024         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8718   003126  C0AF  F025         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8719   00312A  ECA2  F026         	call	___lldiv	;wreg free
  8720   00312E  C034  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8721   003132  C035  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8722   003136  C01E  FFDE         	movff	?___lldiv,postinc2
  8723   00313A  C01F  FFDD         	movff	?___lldiv+1,postdec2
  8724   00313E  EF59  F019         	goto	l234
  8725   003142                     l5028:
  8726                           
  8727                           ; BSR set to: 0
  8728   003142  51B0               	movf	rgb_2_hsv@g& (0+255),w,b
  8729   003144  19AA               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8730   003146  E107               	bnz	u4141
  8731   003148  51B1               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8732   00314A  19AB               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8733   00314C  A4D8               	btfss	status,2,c
  8734   00314E  EFAB  F018         	goto	u4141
  8735   003152  EFAD  F018         	goto	u4140
  8736   003156                     u4141:
  8737   003156  EFFA  F018         	goto	l5032
  8738   00315A                     u4140:
  8739   00315A                     
  8740                           ; BSR set to: 0
  8741   00315A  51A8               	movf	rgb_2_hsv@r& (0+255),w,b
  8742   00315C  6E36               	movwf	??_rgb_2_hsv^0,c
  8743   00315E  51A9               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8744   003160  6E37               	movwf	(??_rgb_2_hsv+1)^0,c
  8745   003162  6A38               	clrf	(??_rgb_2_hsv+2)^0,c
  8746   003164  6A39               	clrf	(??_rgb_2_hsv+3)^0,c
  8747   003166  90D8               	bcf	status,0,c
  8748   003168  35AC               	rlcf	rgb_2_hsv@diff& (0+255),w,b
  8749   00316A  6E3A               	movwf	(??_rgb_2_hsv+4)^0,c
  8750   00316C  35AD               	rlcf	(rgb_2_hsv@diff+1)& (0+255),w,b
  8751   00316E  6E3B               	movwf	(??_rgb_2_hsv+5)^0,c
  8752   003170  35AE               	rlcf	(rgb_2_hsv@diff+2)& (0+255),w,b
  8753   003172  6E3C               	movwf	(??_rgb_2_hsv+6)^0,c
  8754   003174  35AF               	rlcf	(rgb_2_hsv@diff+3)& (0+255),w,b
  8755   003176  6E3D               	movwf	(??_rgb_2_hsv+7)^0,c
  8756   003178  51B2               	movf	rgb_2_hsv@b& (0+255),w,b
  8757   00317A  243A               	addwf	(??_rgb_2_hsv+4)^0,w,c
  8758   00317C  6E3E               	movwf	(??_rgb_2_hsv+8)^0,c
  8759   00317E  51B3               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8760   003180  203B               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  8761   003182  6E3F               	movwf	(??_rgb_2_hsv+9)^0,c
  8762   003184  0E00               	movlw	0
  8763   003186  203C               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  8764   003188  6E40               	movwf	(??_rgb_2_hsv+10)^0,c
  8765   00318A  0E00               	movlw	0
  8766   00318C  203D               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  8767   00318E  6E41               	movwf	(??_rgb_2_hsv+11)^0,c
  8768   003190  5036               	movf	??_rgb_2_hsv^0,w,c
  8769   003192  5C3E               	subwf	(??_rgb_2_hsv+8)^0,w,c
  8770   003194  6E12               	movwf	___lmul@multiplier^0,c
  8771   003196  5037               	movf	(??_rgb_2_hsv+1)^0,w,c
  8772   003198  583F               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  8773   00319A  6E13               	movwf	(___lmul@multiplier+1)^0,c
  8774   00319C  5038               	movf	(??_rgb_2_hsv+2)^0,w,c
  8775   00319E  5840               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  8776   0031A0  6E14               	movwf	(___lmul@multiplier+2)^0,c
  8777   0031A2  5039               	movf	(??_rgb_2_hsv+3)^0,w,c
  8778   0031A4  5841               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  8779   0031A6  6E15               	movwf	(___lmul@multiplier+3)^0,c
  8780   0031A8  0E70               	movlw	112
  8781   0031AA  6E16               	movwf	___lmul@multiplicand^0,c
  8782   0031AC  0E17               	movlw	23
  8783   0031AE  6E17               	movwf	(___lmul@multiplicand+1)^0,c
  8784   0031B0  0E00               	movlw	0
  8785   0031B2  6E18               	movwf	(___lmul@multiplicand+2)^0,c
  8786   0031B4  0E00               	movlw	0
  8787   0031B6  6E19               	movwf	(___lmul@multiplicand+3)^0,c
  8788   0031B8  ECEB  F027         	call	___lmul	;wreg free
  8789   0031BC  C012  F01E         	movff	?___lmul,___lldiv@dividend
  8790   0031C0  C013  F01F         	movff	?___lmul+1,___lldiv@dividend+1
  8791   0031C4  C014  F020         	movff	?___lmul+2,___lldiv@dividend+2
  8792   0031C8  C015  F021         	movff	?___lmul+3,___lldiv@dividend+3
  8793   0031CC  C0AC  F022         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8794   0031D0  C0AD  F023         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8795   0031D4  C0AE  F024         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8796   0031D8  C0AF  F025         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8797   0031DC  ECA2  F026         	call	___lldiv	;wreg free
  8798   0031E0  C034  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8799   0031E4  C035  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8800   0031E8  C01E  FFDE         	movff	?___lldiv,postinc2
  8801   0031EC  C01F  FFDD         	movff	?___lldiv+1,postdec2
  8802   0031F0  EF59  F019         	goto	l234
  8803   0031F4                     l5032:
  8804                           
  8805                           ; BSR set to: 0
  8806   0031F4  51B2               	movf	rgb_2_hsv@b& (0+255),w,b
  8807   0031F6  19AA               	xorwf	rgb_2_hsv@cmax& (0+255),w,b
  8808   0031F8  E107               	bnz	u4151
  8809   0031FA  51B3               	movf	(rgb_2_hsv@b+1)& (0+255),w,b
  8810   0031FC  19AB               	xorwf	(rgb_2_hsv@cmax+1)& (0+255),w,b
  8811   0031FE  A4D8               	btfss	status,2,c
  8812   003200  EF04  F019         	goto	u4151
  8813   003204  EF06  F019         	goto	u4150
  8814   003208                     u4151:
  8815   003208  EF59  F019         	goto	l234
  8816   00320C                     u4150:
  8817   00320C                     
  8818                           ; BSR set to: 0
  8819   00320C  51B0               	movf	rgb_2_hsv@g& (0+255),w,b
  8820   00320E  6E36               	movwf	??_rgb_2_hsv^0,c
  8821   003210  51B1               	movf	(rgb_2_hsv@g+1)& (0+255),w,b
  8822   003212  6E37               	movwf	(??_rgb_2_hsv+1)^0,c
  8823   003214  6A38               	clrf	(??_rgb_2_hsv+2)^0,c
  8824   003216  6A39               	clrf	(??_rgb_2_hsv+3)^0,c
  8825   003218  C0AC  F03A         	movff	rgb_2_hsv@diff,??_rgb_2_hsv+4
  8826   00321C  C0AD  F03B         	movff	rgb_2_hsv@diff+1,??_rgb_2_hsv+5
  8827   003220  C0AE  F03C         	movff	rgb_2_hsv@diff+2,??_rgb_2_hsv+6
  8828   003224  C0AF  F03D         	movff	rgb_2_hsv@diff+3,??_rgb_2_hsv+7
  8829   003228  0E02               	movlw	2
  8830   00322A                     u4165:
  8831   00322A  90D8               	bcf	status,0,c
  8832   00322C  363A               	rlcf	(??_rgb_2_hsv+4)^0,f,c
  8833   00322E  363B               	rlcf	(??_rgb_2_hsv+5)^0,f,c
  8834   003230  363C               	rlcf	(??_rgb_2_hsv+6)^0,f,c
  8835   003232  363D               	rlcf	(??_rgb_2_hsv+7)^0,f,c
  8836   003234  2EE8               	decfsz	wreg,f,c
  8837   003236  EF15  F019         	goto	u4165
  8838   00323A  51A8               	movf	rgb_2_hsv@r& (0+255),w,b
  8839   00323C  243A               	addwf	(??_rgb_2_hsv+4)^0,w,c
  8840   00323E  6E3E               	movwf	(??_rgb_2_hsv+8)^0,c
  8841   003240  51A9               	movf	(rgb_2_hsv@r+1)& (0+255),w,b
  8842   003242  203B               	addwfc	(??_rgb_2_hsv+5)^0,w,c
  8843   003244  6E3F               	movwf	(??_rgb_2_hsv+9)^0,c
  8844   003246  0E00               	movlw	0
  8845   003248  203C               	addwfc	(??_rgb_2_hsv+6)^0,w,c
  8846   00324A  6E40               	movwf	(??_rgb_2_hsv+10)^0,c
  8847   00324C  0E00               	movlw	0
  8848   00324E  203D               	addwfc	(??_rgb_2_hsv+7)^0,w,c
  8849   003250  6E41               	movwf	(??_rgb_2_hsv+11)^0,c
  8850   003252  5036               	movf	??_rgb_2_hsv^0,w,c
  8851   003254  5C3E               	subwf	(??_rgb_2_hsv+8)^0,w,c
  8852   003256  6E12               	movwf	___lmul@multiplier^0,c
  8853   003258  5037               	movf	(??_rgb_2_hsv+1)^0,w,c
  8854   00325A  583F               	subwfb	(??_rgb_2_hsv+9)^0,w,c
  8855   00325C  6E13               	movwf	(___lmul@multiplier+1)^0,c
  8856   00325E  5038               	movf	(??_rgb_2_hsv+2)^0,w,c
  8857   003260  5840               	subwfb	(??_rgb_2_hsv+10)^0,w,c
  8858   003262  6E14               	movwf	(___lmul@multiplier+2)^0,c
  8859   003264  5039               	movf	(??_rgb_2_hsv+3)^0,w,c
  8860   003266  5841               	subwfb	(??_rgb_2_hsv+11)^0,w,c
  8861   003268  6E15               	movwf	(___lmul@multiplier+3)^0,c
  8862   00326A  0E70               	movlw	112
  8863   00326C  6E16               	movwf	___lmul@multiplicand^0,c
  8864   00326E  0E17               	movlw	23
  8865   003270  6E17               	movwf	(___lmul@multiplicand+1)^0,c
  8866   003272  0E00               	movlw	0
  8867   003274  6E18               	movwf	(___lmul@multiplicand+2)^0,c
  8868   003276  0E00               	movlw	0
  8869   003278  6E19               	movwf	(___lmul@multiplicand+3)^0,c
  8870   00327A  ECEB  F027         	call	___lmul	;wreg free
  8871   00327E  C012  F01E         	movff	?___lmul,___lldiv@dividend
  8872   003282  C013  F01F         	movff	?___lmul+1,___lldiv@dividend+1
  8873   003286  C014  F020         	movff	?___lmul+2,___lldiv@dividend+2
  8874   00328A  C015  F021         	movff	?___lmul+3,___lldiv@dividend+3
  8875   00328E  C0AC  F022         	movff	rgb_2_hsv@diff,___lldiv@divisor
  8876   003292  C0AD  F023         	movff	rgb_2_hsv@diff+1,___lldiv@divisor+1
  8877   003296  C0AE  F024         	movff	rgb_2_hsv@diff+2,___lldiv@divisor+2
  8878   00329A  C0AF  F025         	movff	rgb_2_hsv@diff+3,___lldiv@divisor+3
  8879   00329E  ECA2  F026         	call	___lldiv	;wreg free
  8880   0032A2  C034  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8881   0032A6  C035  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8882   0032AA  C01E  FFDE         	movff	?___lldiv,postinc2
  8883   0032AE  C01F  FFDD         	movff	?___lldiv+1,postdec2
  8884   0032B2                     l234:
  8885                           
  8886                           ;color.c: 291:     HSV->S = (unsigned int)((diff * 10000)/cmax);
  8887   0032B2  C0AC  F012         	movff	rgb_2_hsv@diff,___lmul@multiplier
  8888   0032B6  C0AD  F013         	movff	rgb_2_hsv@diff+1,___lmul@multiplier+1
  8889   0032BA  C0AE  F014         	movff	rgb_2_hsv@diff+2,___lmul@multiplier+2
  8890   0032BE  C0AF  F015         	movff	rgb_2_hsv@diff+3,___lmul@multiplier+3
  8891   0032C2  0E10               	movlw	16
  8892   0032C4  6E16               	movwf	___lmul@multiplicand^0,c
  8893   0032C6  0E27               	movlw	39
  8894   0032C8  6E17               	movwf	(___lmul@multiplicand+1)^0,c
  8895   0032CA  0E00               	movlw	0
  8896   0032CC  6E18               	movwf	(___lmul@multiplicand+2)^0,c
  8897   0032CE  0E00               	movlw	0
  8898   0032D0  6E19               	movwf	(___lmul@multiplicand+3)^0,c
  8899   0032D2  ECEB  F027         	call	___lmul	;wreg free
  8900   0032D6  C012  F01E         	movff	?___lmul,___lldiv@dividend
  8901   0032DA  C013  F01F         	movff	?___lmul+1,___lldiv@dividend+1
  8902   0032DE  C014  F020         	movff	?___lmul+2,___lldiv@dividend+2
  8903   0032E2  C015  F021         	movff	?___lmul+3,___lldiv@dividend+3
  8904   0032E6  C0AA  F022         	movff	rgb_2_hsv@cmax,___lldiv@divisor
  8905   0032EA  C0AB  F023         	movff	rgb_2_hsv@cmax+1,___lldiv@divisor+1
  8906   0032EE  6A24               	clrf	(___lldiv@divisor+2)^0,c
  8907   0032F0  6A25               	clrf	(___lldiv@divisor+3)^0,c
  8908   0032F2  ECA2  F026         	call	___lldiv	;wreg free
  8909   0032F6  EE20 F002          	lfsr	2,2
  8910   0032FA  5034               	movf	rgb_2_hsv@HSV^0,w,c
  8911   0032FC  26D9               	addwf	fsr2l,f,c
  8912   0032FE  5035               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8913   003300  22DA               	addwfc	fsr2h,f,c
  8914   003302  C01E  FFDE         	movff	?___lldiv,postinc2
  8915   003306  C01F  FFDD         	movff	?___lldiv+1,postdec2
  8916   00330A                     
  8917                           ;color.c: 293:     if (HSV->S == 0){HSV->H = 0;}
  8918   00330A  EE20 F002          	lfsr	2,2
  8919   00330E  5034               	movf	rgb_2_hsv@HSV^0,w,c
  8920   003310  26D9               	addwf	fsr2l,f,c
  8921   003312  5035               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8922   003314  22DA               	addwfc	fsr2h,f,c
  8923   003316  50DE               	movf	postinc2,w,c
  8924   003318  10DE               	iorwf	postinc2,w,c
  8925   00331A  A4D8               	btfss	status,2,c
  8926   00331C  EF92  F019         	goto	u4171
  8927   003320  EF94  F019         	goto	u4170
  8928   003324                     u4171:
  8929   003324  EF9A  F019         	goto	l5040
  8930   003328                     u4170:
  8931   003328  C034  FFD9         	movff	rgb_2_hsv@HSV,fsr2l
  8932   00332C  C035  FFDA         	movff	rgb_2_hsv@HSV+1,fsr2h
  8933   003330  6ADE               	clrf	postinc2,c
  8934   003332  6ADD               	clrf	postdec2,c
  8935   003334                     l5040:
  8936                           
  8937                           ;color.c: 296:     HSV->V = cmax;
  8938   003334  EE20 F004          	lfsr	2,4
  8939   003338  5034               	movf	rgb_2_hsv@HSV^0,w,c
  8940   00333A  26D9               	addwf	fsr2l,f,c
  8941   00333C  5035               	movf	(rgb_2_hsv@HSV+1)^0,w,c
  8942   00333E  22DA               	addwfc	fsr2h,f,c
  8943   003340  C0AA  FFDE         	movff	rgb_2_hsv@cmax,postinc2
  8944   003344  C0AB  FFDD         	movff	rgb_2_hsv@cmax+1,postdec2
  8945   003348  0012               	return		;funcret
  8946   00334A                     __end_of_rgb_2_hsv:
  8947                           	callstack 0
  8948                           
  8949 ;; *************** function _min *****************
  8950 ;; Defined at:
  8951 ;;		line 260 in file "color.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;  a               2   17[COMRAM] unsigned int 
  8954 ;;  b               2   19[COMRAM] unsigned int 
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;		None
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  2   17[COMRAM] unsigned int 
  8959 ;; Registers used:
  8960 ;;		wreg, status,2, status,0
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8969 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8970 ;;Total ram usage:        4 bytes
  8971 ;; Hardware stack levels used: 1
  8972 ;; Hardware stack levels required when called: 6
  8973 ;; This function calls:
  8974 ;;		Nothing
  8975 ;; This function is called by:
  8976 ;;		_color_detect
  8977 ;;		_rgb_2_hsv
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text21
  8982   005194                     __ptext21:
  8983                           	callstack 0
  8984   005194                     _min:
  8985                           	callstack 23
  8986   005194                     
  8987                           ;color.c: 261:     if (a < b){return a;}
  8988   005194  5014               	movf	min@b^0,w,c
  8989   005196  5C12               	subwf	min@a^0,w,c
  8990   005198  5015               	movf	(min@b+1)^0,w,c
  8991   00519A  5813               	subwfb	(min@a+1)^0,w,c
  8992   00519C  B0D8               	btfsc	status,0,c
  8993   00519E  EFD3  F028         	goto	u3821
  8994   0051A2  EFD5  F028         	goto	u3820
  8995   0051A6                     u3821:
  8996   0051A6  EFDB  F028         	goto	l225
  8997   0051AA                     u3820:
  8998   0051AA  C012  F012         	movff	min@a,?_min
  8999   0051AE  C013  F013         	movff	min@a+1,?_min+1
  9000   0051B2  EFDF  F028         	goto	l226
  9001   0051B6                     l225:
  9002   0051B6  C014  F012         	movff	min@b,?_min
  9003   0051BA  C015  F013         	movff	min@b+1,?_min+1
  9004   0051BE                     l226:
  9005   0051BE  0012               	return		;funcret
  9006   0051C0                     __end_of_min:
  9007                           	callstack 0
  9008                           
  9009 ;; *************** function _max *****************
  9010 ;; Defined at:
  9011 ;;		line 255 in file "color.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;  a               2   17[COMRAM] unsigned int 
  9014 ;;  b               2   19[COMRAM] unsigned int 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;		None
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  2   17[COMRAM] unsigned int 
  9019 ;; Registers used:
  9020 ;;		wreg, status,2, status,0
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9029 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9030 ;;Total ram usage:        4 bytes
  9031 ;; Hardware stack levels used: 1
  9032 ;; Hardware stack levels required when called: 6
  9033 ;; This function calls:
  9034 ;;		Nothing
  9035 ;; This function is called by:
  9036 ;;		_color_detect
  9037 ;;		_rgb_2_hsv
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text22
  9042   0051C0                     __ptext22:
  9043                           	callstack 0
  9044   0051C0                     _max:
  9045                           	callstack 23
  9046   0051C0                     
  9047                           ;color.c: 256:     if (a > b){return a;}
  9048   0051C0  5012               	movf	max@a^0,w,c
  9049   0051C2  5C14               	subwf	max@b^0,w,c
  9050   0051C4  5013               	movf	(max@a+1)^0,w,c
  9051   0051C6  5815               	subwfb	(max@b+1)^0,w,c
  9052   0051C8  B0D8               	btfsc	status,0,c
  9053   0051CA  EFE9  F028         	goto	u3831
  9054   0051CE  EFEB  F028         	goto	u3830
  9055   0051D2                     u3831:
  9056   0051D2  EFF1  F028         	goto	l220
  9057   0051D6                     u3830:
  9058   0051D6  C012  F012         	movff	max@a,?_max
  9059   0051DA  C013  F013         	movff	max@a+1,?_max+1
  9060   0051DE  EFF5  F028         	goto	l221
  9061   0051E2                     l220:
  9062   0051E2  C014  F012         	movff	max@b,?_max
  9063   0051E6  C015  F013         	movff	max@b+1,?_max+1
  9064   0051EA                     l221:
  9065   0051EA  0012               	return		;funcret
  9066   0051EC                     __end_of_max:
  9067                           	callstack 0
  9068                           
  9069 ;; *************** function ___lmul *****************
  9070 ;; Defined at:
  9071 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  multiplier      4   17[COMRAM] unsigned long 
  9074 ;;  multiplicand    4   21[COMRAM] unsigned long 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;  product         4   25[COMRAM] unsigned long 
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  4   17[COMRAM] unsigned long 
  9079 ;; Registers used:
  9080 ;;		wreg, status,2, status,0
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9086 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9087 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9089 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9090 ;;Total ram usage:       12 bytes
  9091 ;; Hardware stack levels used: 1
  9092 ;; Hardware stack levels required when called: 6
  9093 ;; This function calls:
  9094 ;;		Nothing
  9095 ;; This function is called by:
  9096 ;;		_rgb_2_hsv
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100                           	psect	text23
  9101   004FD6                     __ptext23:
  9102                           	callstack 0
  9103   004FD6                     ___lmul:
  9104                           	callstack 23
  9105   004FD6  0E00               	movlw	0
  9106   004FD8  6E1A               	movwf	___lmul@product^0,c
  9107   004FDA  0E00               	movlw	0
  9108   004FDC  6E1B               	movwf	(___lmul@product+1)^0,c
  9109   004FDE  0E00               	movlw	0
  9110   004FE0  6E1C               	movwf	(___lmul@product+2)^0,c
  9111   004FE2  0E00               	movlw	0
  9112   004FE4  6E1D               	movwf	(___lmul@product+3)^0,c
  9113   004FE6                     l4902:
  9114   004FE6  A012               	btfss	___lmul@multiplier^0,0,c
  9115   004FE8  EFF8  F027         	goto	u3991
  9116   004FEC  EFFA  F027         	goto	u3990
  9117   004FF0                     u3991:
  9118   004FF0  EF02  F028         	goto	l4906
  9119   004FF4                     u3990:
  9120   004FF4  5016               	movf	___lmul@multiplicand^0,w,c
  9121   004FF6  261A               	addwf	___lmul@product^0,f,c
  9122   004FF8  5017               	movf	(___lmul@multiplicand+1)^0,w,c
  9123   004FFA  221B               	addwfc	(___lmul@product+1)^0,f,c
  9124   004FFC  5018               	movf	(___lmul@multiplicand+2)^0,w,c
  9125   004FFE  221C               	addwfc	(___lmul@product+2)^0,f,c
  9126   005000  5019               	movf	(___lmul@multiplicand+3)^0,w,c
  9127   005002  221D               	addwfc	(___lmul@product+3)^0,f,c
  9128   005004                     l4906:
  9129   005004  90D8               	bcf	status,0,c
  9130   005006  3616               	rlcf	___lmul@multiplicand^0,f,c
  9131   005008  3617               	rlcf	(___lmul@multiplicand+1)^0,f,c
  9132   00500A  3618               	rlcf	(___lmul@multiplicand+2)^0,f,c
  9133   00500C  3619               	rlcf	(___lmul@multiplicand+3)^0,f,c
  9134   00500E  90D8               	bcf	status,0,c
  9135   005010  3215               	rrcf	(___lmul@multiplier+3)^0,f,c
  9136   005012  3214               	rrcf	(___lmul@multiplier+2)^0,f,c
  9137   005014  3213               	rrcf	(___lmul@multiplier+1)^0,f,c
  9138   005016  3212               	rrcf	___lmul@multiplier^0,f,c
  9139   005018  5012               	movf	___lmul@multiplier^0,w,c
  9140   00501A  1013               	iorwf	(___lmul@multiplier+1)^0,w,c
  9141   00501C  1014               	iorwf	(___lmul@multiplier+2)^0,w,c
  9142   00501E  1015               	iorwf	(___lmul@multiplier+3)^0,w,c
  9143   005020  A4D8               	btfss	status,2,c
  9144   005022  EF15  F028         	goto	u4001
  9145   005026  EF17  F028         	goto	u4000
  9146   00502A                     u4001:
  9147   00502A  EFF3  F027         	goto	l4902
  9148   00502E                     u4000:
  9149   00502E  C01A  F012         	movff	___lmul@product,?___lmul
  9150   005032  C01B  F013         	movff	___lmul@product+1,?___lmul+1
  9151   005036  C01C  F014         	movff	___lmul@product+2,?___lmul+2
  9152   00503A  C01D  F015         	movff	___lmul@product+3,?___lmul+3
  9153   00503E  0012               	return		;funcret
  9154   005040                     __end_of___lmul:
  9155                           	callstack 0
  9156                           
  9157 ;; *************** function ___lldiv *****************
  9158 ;; Defined at:
  9159 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;  dividend        4   29[COMRAM] unsigned long 
  9162 ;;  divisor         4   33[COMRAM] unsigned long 
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;  quotient        4   37[COMRAM] unsigned long 
  9165 ;;  counter         1   41[COMRAM] unsigned char 
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  4   29[COMRAM] unsigned long 
  9168 ;; Registers used:
  9169 ;;		wreg, status,2, status,0
  9170 ;; Tracked objects:
  9171 ;;		On entry : 0/0
  9172 ;;		On exit  : 0/0
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9175 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9176 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9178 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9179 ;;Total ram usage:       13 bytes
  9180 ;; Hardware stack levels used: 1
  9181 ;; Hardware stack levels required when called: 6
  9182 ;; This function calls:
  9183 ;;		Nothing
  9184 ;; This function is called by:
  9185 ;;		_rgb_2_hsv
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189                           	psect	text24
  9190   004D44                     __ptext24:
  9191                           	callstack 0
  9192   004D44                     ___lldiv:
  9193                           	callstack 23
  9194   004D44  0E00               	movlw	0
  9195   004D46  6E26               	movwf	___lldiv@quotient^0,c
  9196   004D48  0E00               	movlw	0
  9197   004D4A  6E27               	movwf	(___lldiv@quotient+1)^0,c
  9198   004D4C  0E00               	movlw	0
  9199   004D4E  6E28               	movwf	(___lldiv@quotient+2)^0,c
  9200   004D50  0E00               	movlw	0
  9201   004D52  6E29               	movwf	(___lldiv@quotient+3)^0,c
  9202   004D54  5022               	movf	___lldiv@divisor^0,w,c
  9203   004D56  1023               	iorwf	(___lldiv@divisor+1)^0,w,c
  9204   004D58  1024               	iorwf	(___lldiv@divisor+2)^0,w,c
  9205   004D5A  1025               	iorwf	(___lldiv@divisor+3)^0,w,c
  9206   004D5C  B4D8               	btfsc	status,2,c
  9207   004D5E  EFB3  F026         	goto	u4011
  9208   004D62  EFB5  F026         	goto	u4010
  9209   004D66                     u4011:
  9210   004D66  EFEB  F026         	goto	l814
  9211   004D6A                     u4010:
  9212   004D6A  0E01               	movlw	1
  9213   004D6C  6E2A               	movwf	___lldiv@counter^0,c
  9214   004D6E  EFBF  F026         	goto	l4918
  9215   004D72                     l4916:
  9216   004D72  90D8               	bcf	status,0,c
  9217   004D74  3622               	rlcf	___lldiv@divisor^0,f,c
  9218   004D76  3623               	rlcf	(___lldiv@divisor+1)^0,f,c
  9219   004D78  3624               	rlcf	(___lldiv@divisor+2)^0,f,c
  9220   004D7A  3625               	rlcf	(___lldiv@divisor+3)^0,f,c
  9221   004D7C  2A2A               	incf	___lldiv@counter^0,f,c
  9222   004D7E                     l4918:
  9223   004D7E  AE25               	btfss	(___lldiv@divisor+3)^0,7,c
  9224   004D80  EFC4  F026         	goto	u4021
  9225   004D84  EFC6  F026         	goto	u4020
  9226   004D88                     u4021:
  9227   004D88  EFB9  F026         	goto	l4916
  9228   004D8C                     u4020:
  9229   004D8C                     l4920:
  9230   004D8C  90D8               	bcf	status,0,c
  9231   004D8E  3626               	rlcf	___lldiv@quotient^0,f,c
  9232   004D90  3627               	rlcf	(___lldiv@quotient+1)^0,f,c
  9233   004D92  3628               	rlcf	(___lldiv@quotient+2)^0,f,c
  9234   004D94  3629               	rlcf	(___lldiv@quotient+3)^0,f,c
  9235   004D96  5022               	movf	___lldiv@divisor^0,w,c
  9236   004D98  5C1E               	subwf	___lldiv@dividend^0,w,c
  9237   004D9A  5023               	movf	(___lldiv@divisor+1)^0,w,c
  9238   004D9C  581F               	subwfb	(___lldiv@dividend+1)^0,w,c
  9239   004D9E  5024               	movf	(___lldiv@divisor+2)^0,w,c
  9240   004DA0  5820               	subwfb	(___lldiv@dividend+2)^0,w,c
  9241   004DA2  5025               	movf	(___lldiv@divisor+3)^0,w,c
  9242   004DA4  5821               	subwfb	(___lldiv@dividend+3)^0,w,c
  9243   004DA6  A0D8               	btfss	status,0,c
  9244   004DA8  EFD8  F026         	goto	u4031
  9245   004DAC  EFDA  F026         	goto	u4030
  9246   004DB0                     u4031:
  9247   004DB0  EFE3  F026         	goto	l4928
  9248   004DB4                     u4030:
  9249   004DB4  5022               	movf	___lldiv@divisor^0,w,c
  9250   004DB6  5E1E               	subwf	___lldiv@dividend^0,f,c
  9251   004DB8  5023               	movf	(___lldiv@divisor+1)^0,w,c
  9252   004DBA  5A1F               	subwfb	(___lldiv@dividend+1)^0,f,c
  9253   004DBC  5024               	movf	(___lldiv@divisor+2)^0,w,c
  9254   004DBE  5A20               	subwfb	(___lldiv@dividend+2)^0,f,c
  9255   004DC0  5025               	movf	(___lldiv@divisor+3)^0,w,c
  9256   004DC2  5A21               	subwfb	(___lldiv@dividend+3)^0,f,c
  9257   004DC4  8026               	bsf	___lldiv@quotient^0,0,c
  9258   004DC6                     l4928:
  9259   004DC6  90D8               	bcf	status,0,c
  9260   004DC8  3225               	rrcf	(___lldiv@divisor+3)^0,f,c
  9261   004DCA  3224               	rrcf	(___lldiv@divisor+2)^0,f,c
  9262   004DCC  3223               	rrcf	(___lldiv@divisor+1)^0,f,c
  9263   004DCE  3222               	rrcf	___lldiv@divisor^0,f,c
  9264   004DD0  2E2A               	decfsz	___lldiv@counter^0,f,c
  9265   004DD2  EFC6  F026         	goto	l4920
  9266   004DD6                     l814:
  9267   004DD6  C026  F01E         	movff	___lldiv@quotient,?___lldiv
  9268   004DDA  C027  F01F         	movff	___lldiv@quotient+1,?___lldiv+1
  9269   004DDE  C028  F020         	movff	___lldiv@quotient+2,?___lldiv+2
  9270   004DE2  C029  F021         	movff	___lldiv@quotient+3,?___lldiv+3
  9271   004DE6  0012               	return		;funcret
  9272   004DE8                     __end_of___lldiv:
  9273                           	callstack 0
  9274                           
  9275 ;; *************** function ___aldiv *****************
  9276 ;; Defined at:
  9277 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;  dividend        4   29[COMRAM] long 
  9280 ;;  divisor         4   33[COMRAM] long 
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;  quotient        4   39[COMRAM] long 
  9283 ;;  sign            1   38[COMRAM] unsigned char 
  9284 ;;  counter         1   37[COMRAM] unsigned char 
  9285 ;; Return value:  Size  Location     Type
  9286 ;;                  4   29[COMRAM] long 
  9287 ;; Registers used:
  9288 ;;		wreg, status,2, status,0
  9289 ;; Tracked objects:
  9290 ;;		On entry : 0/0
  9291 ;;		On exit  : 0/0
  9292 ;;		Unchanged: 0/0
  9293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9294 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9295 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9297 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9298 ;;Total ram usage:       14 bytes
  9299 ;; Hardware stack levels used: 1
  9300 ;; Hardware stack levels required when called: 6
  9301 ;; This function calls:
  9302 ;;		Nothing
  9303 ;; This function is called by:
  9304 ;;		_rgb_2_hsv
  9305 ;; This function uses a non-reentrant model
  9306 ;;
  9307                           
  9308                           	psect	text25
  9309   00483A                     __ptext25:
  9310                           	callstack 0
  9311   00483A                     ___aldiv:
  9312                           	callstack 23
  9313   00483A  0E00               	movlw	0
  9314   00483C  6E27               	movwf	___aldiv@sign^0,c
  9315   00483E  BE25               	btfsc	(___aldiv@divisor+3)^0,7,c
  9316   004840  EF26  F024         	goto	u4040
  9317   004844  EF24  F024         	goto	u4041
  9318   004848                     u4041:
  9319   004848  EF30  F024         	goto	l4940
  9320   00484C                     u4040:
  9321   00484C  1E25               	comf	(___aldiv@divisor+3)^0,f,c
  9322   00484E  1E24               	comf	(___aldiv@divisor+2)^0,f,c
  9323   004850  1E23               	comf	(___aldiv@divisor+1)^0,f,c
  9324   004852  6C22               	negf	___aldiv@divisor^0,c
  9325   004854  0E00               	movlw	0
  9326   004856  2223               	addwfc	(___aldiv@divisor+1)^0,f,c
  9327   004858  2224               	addwfc	(___aldiv@divisor+2)^0,f,c
  9328   00485A  2225               	addwfc	(___aldiv@divisor+3)^0,f,c
  9329   00485C  0E01               	movlw	1
  9330   00485E  6E27               	movwf	___aldiv@sign^0,c
  9331   004860                     l4940:
  9332   004860  BE21               	btfsc	(___aldiv@dividend+3)^0,7,c
  9333   004862  EF37  F024         	goto	u4050
  9334   004866  EF35  F024         	goto	u4051
  9335   00486A                     u4051:
  9336   00486A  EF41  F024         	goto	l4946
  9337   00486E                     u4050:
  9338   00486E  1E21               	comf	(___aldiv@dividend+3)^0,f,c
  9339   004870  1E20               	comf	(___aldiv@dividend+2)^0,f,c
  9340   004872  1E1F               	comf	(___aldiv@dividend+1)^0,f,c
  9341   004874  6C1E               	negf	___aldiv@dividend^0,c
  9342   004876  0E00               	movlw	0
  9343   004878  221F               	addwfc	(___aldiv@dividend+1)^0,f,c
  9344   00487A  2220               	addwfc	(___aldiv@dividend+2)^0,f,c
  9345   00487C  2221               	addwfc	(___aldiv@dividend+3)^0,f,c
  9346   00487E  0E01               	movlw	1
  9347   004880  1A27               	xorwf	___aldiv@sign^0,f,c
  9348   004882                     l4946:
  9349   004882  0E00               	movlw	0
  9350   004884  6E28               	movwf	___aldiv@quotient^0,c
  9351   004886  0E00               	movlw	0
  9352   004888  6E29               	movwf	(___aldiv@quotient+1)^0,c
  9353   00488A  0E00               	movlw	0
  9354   00488C  6E2A               	movwf	(___aldiv@quotient+2)^0,c
  9355   00488E  0E00               	movlw	0
  9356   004890  6E2B               	movwf	(___aldiv@quotient+3)^0,c
  9357   004892  5022               	movf	___aldiv@divisor^0,w,c
  9358   004894  1023               	iorwf	(___aldiv@divisor+1)^0,w,c
  9359   004896  1024               	iorwf	(___aldiv@divisor+2)^0,w,c
  9360   004898  1025               	iorwf	(___aldiv@divisor+3)^0,w,c
  9361   00489A  B4D8               	btfsc	status,2,c
  9362   00489C  EF52  F024         	goto	u4061
  9363   0048A0  EF54  F024         	goto	u4060
  9364   0048A4                     u4061:
  9365   0048A4  EF8A  F024         	goto	l4968
  9366   0048A8                     u4060:
  9367   0048A8  0E01               	movlw	1
  9368   0048AA  6E26               	movwf	___aldiv@counter^0,c
  9369   0048AC  EF5E  F024         	goto	l4954
  9370   0048B0                     l4952:
  9371   0048B0  90D8               	bcf	status,0,c
  9372   0048B2  3622               	rlcf	___aldiv@divisor^0,f,c
  9373   0048B4  3623               	rlcf	(___aldiv@divisor+1)^0,f,c
  9374   0048B6  3624               	rlcf	(___aldiv@divisor+2)^0,f,c
  9375   0048B8  3625               	rlcf	(___aldiv@divisor+3)^0,f,c
  9376   0048BA  2A26               	incf	___aldiv@counter^0,f,c
  9377   0048BC                     l4954:
  9378   0048BC  AE25               	btfss	(___aldiv@divisor+3)^0,7,c
  9379   0048BE  EF63  F024         	goto	u4071
  9380   0048C2  EF65  F024         	goto	u4070
  9381   0048C6                     u4071:
  9382   0048C6  EF58  F024         	goto	l4952
  9383   0048CA                     u4070:
  9384   0048CA                     l4956:
  9385   0048CA  90D8               	bcf	status,0,c
  9386   0048CC  3628               	rlcf	___aldiv@quotient^0,f,c
  9387   0048CE  3629               	rlcf	(___aldiv@quotient+1)^0,f,c
  9388   0048D0  362A               	rlcf	(___aldiv@quotient+2)^0,f,c
  9389   0048D2  362B               	rlcf	(___aldiv@quotient+3)^0,f,c
  9390   0048D4  5022               	movf	___aldiv@divisor^0,w,c
  9391   0048D6  5C1E               	subwf	___aldiv@dividend^0,w,c
  9392   0048D8  5023               	movf	(___aldiv@divisor+1)^0,w,c
  9393   0048DA  581F               	subwfb	(___aldiv@dividend+1)^0,w,c
  9394   0048DC  5024               	movf	(___aldiv@divisor+2)^0,w,c
  9395   0048DE  5820               	subwfb	(___aldiv@dividend+2)^0,w,c
  9396   0048E0  5025               	movf	(___aldiv@divisor+3)^0,w,c
  9397   0048E2  5821               	subwfb	(___aldiv@dividend+3)^0,w,c
  9398   0048E4  A0D8               	btfss	status,0,c
  9399   0048E6  EF77  F024         	goto	u4081
  9400   0048EA  EF79  F024         	goto	u4080
  9401   0048EE                     u4081:
  9402   0048EE  EF82  F024         	goto	l4964
  9403   0048F2                     u4080:
  9404   0048F2  5022               	movf	___aldiv@divisor^0,w,c
  9405   0048F4  5E1E               	subwf	___aldiv@dividend^0,f,c
  9406   0048F6  5023               	movf	(___aldiv@divisor+1)^0,w,c
  9407   0048F8  5A1F               	subwfb	(___aldiv@dividend+1)^0,f,c
  9408   0048FA  5024               	movf	(___aldiv@divisor+2)^0,w,c
  9409   0048FC  5A20               	subwfb	(___aldiv@dividend+2)^0,f,c
  9410   0048FE  5025               	movf	(___aldiv@divisor+3)^0,w,c
  9411   004900  5A21               	subwfb	(___aldiv@dividend+3)^0,f,c
  9412   004902  8028               	bsf	___aldiv@quotient^0,0,c
  9413   004904                     l4964:
  9414   004904  90D8               	bcf	status,0,c
  9415   004906  3225               	rrcf	(___aldiv@divisor+3)^0,f,c
  9416   004908  3224               	rrcf	(___aldiv@divisor+2)^0,f,c
  9417   00490A  3223               	rrcf	(___aldiv@divisor+1)^0,f,c
  9418   00490C  3222               	rrcf	___aldiv@divisor^0,f,c
  9419   00490E  2E26               	decfsz	___aldiv@counter^0,f,c
  9420   004910  EF65  F024         	goto	l4956
  9421   004914                     l4968:
  9422   004914  5027               	movf	___aldiv@sign^0,w,c
  9423   004916  B4D8               	btfsc	status,2,c
  9424   004918  EF90  F024         	goto	u4091
  9425   00491C  EF92  F024         	goto	u4090
  9426   004920                     u4091:
  9427   004920  EF9A  F024         	goto	l4972
  9428   004924                     u4090:
  9429   004924  1E2B               	comf	(___aldiv@quotient+3)^0,f,c
  9430   004926  1E2A               	comf	(___aldiv@quotient+2)^0,f,c
  9431   004928  1E29               	comf	(___aldiv@quotient+1)^0,f,c
  9432   00492A  6C28               	negf	___aldiv@quotient^0,c
  9433   00492C  0E00               	movlw	0
  9434   00492E  2229               	addwfc	(___aldiv@quotient+1)^0,f,c
  9435   004930  222A               	addwfc	(___aldiv@quotient+2)^0,f,c
  9436   004932  222B               	addwfc	(___aldiv@quotient+3)^0,f,c
  9437   004934                     l4972:
  9438   004934  C028  F01E         	movff	___aldiv@quotient,?___aldiv
  9439   004938  C029  F01F         	movff	___aldiv@quotient+1,?___aldiv+1
  9440   00493C  C02A  F020         	movff	___aldiv@quotient+2,?___aldiv+2
  9441   004940  C02B  F021         	movff	___aldiv@quotient+3,?___aldiv+3
  9442   004944  0012               	return		;funcret
  9443   004946                     __end_of___aldiv:
  9444                           	callstack 0
  9445                           
  9446 ;; *************** function _color_read *****************
  9447 ;; Defined at:
  9448 ;;		line 77 in file "color.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;  RGBC            2   21[COMRAM] PTR struct RGBC_val
  9451 ;;		 -> main@RGBC(8), 
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;		None
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      void 
  9456 ;; Registers used:
  9457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9465 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9466 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9467 ;;Total ram usage:        9 bytes
  9468 ;; Hardware stack levels used: 1
  9469 ;; Hardware stack levels required when called: 8
  9470 ;; This function calls:
  9471 ;;		_I2C_2_Master_Read
  9472 ;;		_I2C_2_Master_RepStart
  9473 ;;		_I2C_2_Master_Start
  9474 ;;		_I2C_2_Master_Stop
  9475 ;;		_I2C_2_Master_Write
  9476 ;; This function is called by:
  9477 ;;		_main
  9478 ;;		_color_calibration
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           	psect	text26
  9483   003F4E                     __ptext26:
  9484                           	callstack 0
  9485   003F4E                     _color_read:
  9486                           	callstack 22
  9487   003F4E                     
  9488                           ;color.c: 77: void color_read(RGBC_val *RGBC);color.c: 78: {;color.c: 79:  I2C_2_Master_
      +                          Start();
  9489   003F4E  EC1A  F02A         	call	_I2C_2_Master_Start	;wreg free
  9490                           
  9491                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  9492   003F52  0E52               	movlw	82
  9493   003F54  EC04  F02A         	call	_I2C_2_Master_Write
  9494                           
  9495                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x16);
  9496   003F58  0EB6               	movlw	182
  9497   003F5A  EC04  F02A         	call	_I2C_2_Master_Write
  9498                           
  9499                           ;color.c: 82:  I2C_2_Master_RepStart();
  9500   003F5E  EC1F  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  9501                           
  9502                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  9503   003F62  0E53               	movlw	83
  9504   003F64  EC04  F02A         	call	_I2C_2_Master_Write
  9505   003F68                     
  9506                           ;color.c: 84:  RGBC->R=I2C_2_Master_Read(1);
  9507   003F68  0E01               	movlw	1
  9508   003F6A  EC72  F028         	call	_I2C_2_Master_Read
  9509   003F6E  6E18               	movwf	??_color_read^0,c
  9510   003F70  6A19               	clrf	(??_color_read+1)^0,c
  9511   003F72  C016  FFD9         	movff	color_read@RGBC,fsr2l
  9512   003F76  C017  FFDA         	movff	color_read@RGBC+1,fsr2h
  9513   003F7A  C018  FFDE         	movff	??_color_read,postinc2
  9514   003F7E  C019  FFDD         	movff	??_color_read+1,postdec2
  9515   003F82                     
  9516                           ;color.c: 85:  RGBC->R=RGBC->R | (I2C_2_Master_Read(0)<<8);
  9517   003F82  C016  FFD9         	movff	color_read@RGBC,fsr2l
  9518   003F86  C017  FFDA         	movff	color_read@RGBC+1,fsr2h
  9519   003F8A  CFDE F018          	movff	postinc2,??_color_read
  9520   003F8E  CFDD F019          	movff	postdec2,??_color_read+1
  9521   003F92  0E00               	movlw	0
  9522   003F94  EC72  F028         	call	_I2C_2_Master_Read
  9523   003F98  6E1A               	movwf	(??_color_read+2)^0,c
  9524   003F9A  501A               	movf	(??_color_read+2)^0,w,c
  9525   003F9C  6E1C               	movwf	(??_color_read+4)^0,c
  9526   003F9E  6A1B               	clrf	(??_color_read+3)^0,c
  9527   003FA0  5018               	movf	??_color_read^0,w,c
  9528   003FA2  101B               	iorwf	(??_color_read+3)^0,w,c
  9529   003FA4  6E1D               	movwf	(??_color_read+5)^0,c
  9530   003FA6  5019               	movf	(??_color_read+1)^0,w,c
  9531   003FA8  101C               	iorwf	(??_color_read+4)^0,w,c
  9532   003FAA  6E1E               	movwf	(??_color_read+6)^0,c
  9533   003FAC  C016  FFD9         	movff	color_read@RGBC,fsr2l
  9534   003FB0  C017  FFDA         	movff	color_read@RGBC+1,fsr2h
  9535   003FB4  C01D  FFDE         	movff	??_color_read+5,postinc2
  9536   003FB8  C01E  FFDD         	movff	??_color_read+6,postdec2
  9537                           
  9538                           ;color.c: 86:  I2C_2_Master_Stop();
  9539   003FBC  EC15  F02A         	call	_I2C_2_Master_Stop	;wreg free
  9540                           
  9541                           ;color.c: 88:     I2C_2_Master_Start();
  9542   003FC0  EC1A  F02A         	call	_I2C_2_Master_Start	;wreg free
  9543                           
  9544                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x00);
  9545   003FC4  0E52               	movlw	82
  9546   003FC6  EC04  F02A         	call	_I2C_2_Master_Write
  9547                           
  9548                           ;color.c: 90:  I2C_2_Master_Write(0xA0 | 0x18);
  9549   003FCA  0EB8               	movlw	184
  9550   003FCC  EC04  F02A         	call	_I2C_2_Master_Write
  9551                           
  9552                           ;color.c: 91:  I2C_2_Master_RepStart();
  9553   003FD0  EC1F  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  9554                           
  9555                           ;color.c: 92:  I2C_2_Master_Write(0x52 | 0x01);
  9556   003FD4  0E53               	movlw	83
  9557   003FD6  EC04  F02A         	call	_I2C_2_Master_Write
  9558   003FDA                     
  9559                           ;color.c: 93:  RGBC->G=I2C_2_Master_Read(1);
  9560   003FDA  0E01               	movlw	1
  9561   003FDC  EC72  F028         	call	_I2C_2_Master_Read
  9562   003FE0  6E18               	movwf	??_color_read^0,c
  9563   003FE2  6A19               	clrf	(??_color_read+1)^0,c
  9564   003FE4  EE20 F002          	lfsr	2,2
  9565   003FE8  5016               	movf	color_read@RGBC^0,w,c
  9566   003FEA  26D9               	addwf	fsr2l,f,c
  9567   003FEC  5017               	movf	(color_read@RGBC+1)^0,w,c
  9568   003FEE  22DA               	addwfc	fsr2h,f,c
  9569   003FF0  C018  FFDE         	movff	??_color_read,postinc2
  9570   003FF4  C019  FFDD         	movff	??_color_read+1,postdec2
  9571   003FF8                     
  9572                           ;color.c: 94:  RGBC->G=RGBC->G | (I2C_2_Master_Read(0)<<8);
  9573   003FF8  EE20 F002          	lfsr	2,2
  9574   003FFC  5016               	movf	color_read@RGBC^0,w,c
  9575   003FFE  26D9               	addwf	fsr2l,f,c
  9576   004000  5017               	movf	(color_read@RGBC+1)^0,w,c
  9577   004002  22DA               	addwfc	fsr2h,f,c
  9578   004004  CFDE F018          	movff	postinc2,??_color_read
  9579   004008  CFDD F019          	movff	postdec2,??_color_read+1
  9580   00400C  0E00               	movlw	0
  9581   00400E  EC72  F028         	call	_I2C_2_Master_Read
  9582   004012  6E1A               	movwf	(??_color_read+2)^0,c
  9583   004014  501A               	movf	(??_color_read+2)^0,w,c
  9584   004016  6E1C               	movwf	(??_color_read+4)^0,c
  9585   004018  6A1B               	clrf	(??_color_read+3)^0,c
  9586   00401A  5018               	movf	??_color_read^0,w,c
  9587   00401C  101B               	iorwf	(??_color_read+3)^0,w,c
  9588   00401E  6E1D               	movwf	(??_color_read+5)^0,c
  9589   004020  5019               	movf	(??_color_read+1)^0,w,c
  9590   004022  101C               	iorwf	(??_color_read+4)^0,w,c
  9591   004024  6E1E               	movwf	(??_color_read+6)^0,c
  9592   004026  EE20 F002          	lfsr	2,2
  9593   00402A  5016               	movf	color_read@RGBC^0,w,c
  9594   00402C  26D9               	addwf	fsr2l,f,c
  9595   00402E  5017               	movf	(color_read@RGBC+1)^0,w,c
  9596   004030  22DA               	addwfc	fsr2h,f,c
  9597   004032  C01D  FFDE         	movff	??_color_read+5,postinc2
  9598   004036  C01E  FFDD         	movff	??_color_read+6,postdec2
  9599                           
  9600                           ;color.c: 95:  I2C_2_Master_Stop();
  9601   00403A  EC15  F02A         	call	_I2C_2_Master_Stop	;wreg free
  9602                           
  9603                           ;color.c: 97:     I2C_2_Master_Start();
  9604   00403E  EC1A  F02A         	call	_I2C_2_Master_Start	;wreg free
  9605                           
  9606                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  9607   004042  0E52               	movlw	82
  9608   004044  EC04  F02A         	call	_I2C_2_Master_Write
  9609                           
  9610                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x1A);
  9611   004048  0EBA               	movlw	186
  9612   00404A  EC04  F02A         	call	_I2C_2_Master_Write
  9613                           
  9614                           ;color.c: 100:  I2C_2_Master_RepStart();
  9615   00404E  EC1F  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  9616                           
  9617                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  9618   004052  0E53               	movlw	83
  9619   004054  EC04  F02A         	call	_I2C_2_Master_Write
  9620   004058                     
  9621                           ;color.c: 102:  RGBC->B=I2C_2_Master_Read(1);
  9622   004058  0E01               	movlw	1
  9623   00405A  EC72  F028         	call	_I2C_2_Master_Read
  9624   00405E  6E18               	movwf	??_color_read^0,c
  9625   004060  6A19               	clrf	(??_color_read+1)^0,c
  9626   004062  EE20 F004          	lfsr	2,4
  9627   004066  5016               	movf	color_read@RGBC^0,w,c
  9628   004068  26D9               	addwf	fsr2l,f,c
  9629   00406A  5017               	movf	(color_read@RGBC+1)^0,w,c
  9630   00406C  22DA               	addwfc	fsr2h,f,c
  9631   00406E  C018  FFDE         	movff	??_color_read,postinc2
  9632   004072  C019  FFDD         	movff	??_color_read+1,postdec2
  9633   004076                     
  9634                           ;color.c: 103:  RGBC->B=RGBC->B | (I2C_2_Master_Read(0)<<8);
  9635   004076  EE20 F004          	lfsr	2,4
  9636   00407A  5016               	movf	color_read@RGBC^0,w,c
  9637   00407C  26D9               	addwf	fsr2l,f,c
  9638   00407E  5017               	movf	(color_read@RGBC+1)^0,w,c
  9639   004080  22DA               	addwfc	fsr2h,f,c
  9640   004082  CFDE F018          	movff	postinc2,??_color_read
  9641   004086  CFDD F019          	movff	postdec2,??_color_read+1
  9642   00408A  0E00               	movlw	0
  9643   00408C  EC72  F028         	call	_I2C_2_Master_Read
  9644   004090  6E1A               	movwf	(??_color_read+2)^0,c
  9645   004092  501A               	movf	(??_color_read+2)^0,w,c
  9646   004094  6E1C               	movwf	(??_color_read+4)^0,c
  9647   004096  6A1B               	clrf	(??_color_read+3)^0,c
  9648   004098  5018               	movf	??_color_read^0,w,c
  9649   00409A  101B               	iorwf	(??_color_read+3)^0,w,c
  9650   00409C  6E1D               	movwf	(??_color_read+5)^0,c
  9651   00409E  5019               	movf	(??_color_read+1)^0,w,c
  9652   0040A0  101C               	iorwf	(??_color_read+4)^0,w,c
  9653   0040A2  6E1E               	movwf	(??_color_read+6)^0,c
  9654   0040A4  EE20 F004          	lfsr	2,4
  9655   0040A8  5016               	movf	color_read@RGBC^0,w,c
  9656   0040AA  26D9               	addwf	fsr2l,f,c
  9657   0040AC  5017               	movf	(color_read@RGBC+1)^0,w,c
  9658   0040AE  22DA               	addwfc	fsr2h,f,c
  9659   0040B0  C01D  FFDE         	movff	??_color_read+5,postinc2
  9660   0040B4  C01E  FFDD         	movff	??_color_read+6,postdec2
  9661                           
  9662                           ;color.c: 104:  I2C_2_Master_Stop();
  9663   0040B8  EC15  F02A         	call	_I2C_2_Master_Stop	;wreg free
  9664                           
  9665                           ;color.c: 106:     I2C_2_Master_Start();
  9666   0040BC  EC1A  F02A         	call	_I2C_2_Master_Start	;wreg free
  9667                           
  9668                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x00);
  9669   0040C0  0E52               	movlw	82
  9670   0040C2  EC04  F02A         	call	_I2C_2_Master_Write
  9671                           
  9672                           ;color.c: 108:  I2C_2_Master_Write(0xA0 | 0x14);
  9673   0040C6  0EB4               	movlw	180
  9674   0040C8  EC04  F02A         	call	_I2C_2_Master_Write
  9675                           
  9676                           ;color.c: 109:  I2C_2_Master_RepStart();
  9677   0040CC  EC1F  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  9678                           
  9679                           ;color.c: 110:  I2C_2_Master_Write(0x52 | 0x01);
  9680   0040D0  0E53               	movlw	83
  9681   0040D2  EC04  F02A         	call	_I2C_2_Master_Write
  9682   0040D6                     
  9683                           ;color.c: 111:  RGBC->C=I2C_2_Master_Read(1);
  9684   0040D6  0E01               	movlw	1
  9685   0040D8  EC72  F028         	call	_I2C_2_Master_Read
  9686   0040DC  6E18               	movwf	??_color_read^0,c
  9687   0040DE  6A19               	clrf	(??_color_read+1)^0,c
  9688   0040E0  EE20 F006          	lfsr	2,6
  9689   0040E4  5016               	movf	color_read@RGBC^0,w,c
  9690   0040E6  26D9               	addwf	fsr2l,f,c
  9691   0040E8  5017               	movf	(color_read@RGBC+1)^0,w,c
  9692   0040EA  22DA               	addwfc	fsr2h,f,c
  9693   0040EC  C018  FFDE         	movff	??_color_read,postinc2
  9694   0040F0  C019  FFDD         	movff	??_color_read+1,postdec2
  9695   0040F4                     
  9696                           ;color.c: 112:  RGBC->C=RGBC->C | (I2C_2_Master_Read(0)<<8);
  9697   0040F4  EE20 F006          	lfsr	2,6
  9698   0040F8  5016               	movf	color_read@RGBC^0,w,c
  9699   0040FA  26D9               	addwf	fsr2l,f,c
  9700   0040FC  5017               	movf	(color_read@RGBC+1)^0,w,c
  9701   0040FE  22DA               	addwfc	fsr2h,f,c
  9702   004100  CFDE F018          	movff	postinc2,??_color_read
  9703   004104  CFDD F019          	movff	postdec2,??_color_read+1
  9704   004108  0E00               	movlw	0
  9705   00410A  EC72  F028         	call	_I2C_2_Master_Read
  9706   00410E  6E1A               	movwf	(??_color_read+2)^0,c
  9707   004110  501A               	movf	(??_color_read+2)^0,w,c
  9708   004112  6E1C               	movwf	(??_color_read+4)^0,c
  9709   004114  6A1B               	clrf	(??_color_read+3)^0,c
  9710   004116  5018               	movf	??_color_read^0,w,c
  9711   004118  101B               	iorwf	(??_color_read+3)^0,w,c
  9712   00411A  6E1D               	movwf	(??_color_read+5)^0,c
  9713   00411C  5019               	movf	(??_color_read+1)^0,w,c
  9714   00411E  101C               	iorwf	(??_color_read+4)^0,w,c
  9715   004120  6E1E               	movwf	(??_color_read+6)^0,c
  9716   004122  EE20 F006          	lfsr	2,6
  9717   004126  5016               	movf	color_read@RGBC^0,w,c
  9718   004128  26D9               	addwf	fsr2l,f,c
  9719   00412A  5017               	movf	(color_read@RGBC+1)^0,w,c
  9720   00412C  22DA               	addwfc	fsr2h,f,c
  9721   00412E  C01D  FFDE         	movff	??_color_read+5,postinc2
  9722   004132  C01E  FFDD         	movff	??_color_read+6,postdec2
  9723                           
  9724                           ;color.c: 113:  I2C_2_Master_Stop();
  9725   004136  EC15  F02A         	call	_I2C_2_Master_Stop	;wreg free
  9726   00413A  0012               	return		;funcret
  9727   00413C                     __end_of_color_read:
  9728                           	callstack 0
  9729                           
  9730 ;; *************** function _I2C_2_Master_Write *****************
  9731 ;; Defined at:
  9732 ;;		line 45 in file "i2c.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;  data_byte       1    wreg     unsigned char 
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;  data_byte       1   18[COMRAM] unsigned char 
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      void 
  9739 ;; Registers used:
  9740 ;;		wreg, status,2, status,0, cstack
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9750 ;;Total ram usage:        1 bytes
  9751 ;; Hardware stack levels used: 1
  9752 ;; Hardware stack levels required when called: 7
  9753 ;; This function calls:
  9754 ;;		_I2C_2_Master_Idle
  9755 ;; This function is called by:
  9756 ;;		_color_clear_init_interrupts
  9757 ;;		_color_writetoaddr
  9758 ;;		_color_read
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762                           	psect	text27
  9763   005408                     __ptext27:
  9764                           	callstack 0
  9765   005408                     _I2C_2_Master_Write:
  9766                           	callstack 22
  9767                           
  9768                           ;incstack = 0
  9769                           ;I2C_2_Master_Write@data_byte stored from wreg
  9770   005408  6E13               	movwf	I2C_2_Master_Write@data_byte^0,c
  9771   00540A                     
  9772                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9773   00540A  EC35  F029         	call	_I2C_2_Master_Idle	;wreg free
  9774   00540E                     
  9775                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9776   00540E  C013  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9777   005412  0012               	return		;funcret
  9778   005414                     __end_of_I2C_2_Master_Write:
  9779                           	callstack 0
  9780                           
  9781 ;; *************** function _I2C_2_Master_Stop *****************
  9782 ;; Defined at:
  9783 ;;		line 39 in file "i2c.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;		None
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1    wreg      void 
  9790 ;; Registers used:
  9791 ;;		wreg, status,2, status,0, cstack
  9792 ;; Tracked objects:
  9793 ;;		On entry : 0/0
  9794 ;;		On exit  : 0/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9801 ;;Total ram usage:        0 bytes
  9802 ;; Hardware stack levels used: 1
  9803 ;; Hardware stack levels required when called: 7
  9804 ;; This function calls:
  9805 ;;		_I2C_2_Master_Idle
  9806 ;; This function is called by:
  9807 ;;		_color_clear_init_interrupts
  9808 ;;		_color_writetoaddr
  9809 ;;		_color_read
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           	psect	text28
  9814   00542A                     __ptext28:
  9815                           	callstack 0
  9816   00542A                     _I2C_2_Master_Stop:
  9817                           	callstack 22
  9818   00542A                     
  9819                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9820   00542A  EC35  F029         	call	_I2C_2_Master_Idle	;wreg free
  9821   00542E                     
  9822                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9823   00542E  010E               	movlb	14	; () banked
  9824   005430  85DA               	bsf	218,2,b	;volatile
  9825   005432                     
  9826                           ; BSR set to: 14
  9827   005432  0012               	return		;funcret
  9828   005434                     __end_of_I2C_2_Master_Stop:
  9829                           	callstack 0
  9830                           
  9831 ;; *************** function _I2C_2_Master_Start *****************
  9832 ;; Defined at:
  9833 ;;		line 27 in file "i2c.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;		None
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;		None
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1    wreg      void 
  9840 ;; Registers used:
  9841 ;;		wreg, status,2, status,0, cstack
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9851 ;;Total ram usage:        0 bytes
  9852 ;; Hardware stack levels used: 1
  9853 ;; Hardware stack levels required when called: 7
  9854 ;; This function calls:
  9855 ;;		_I2C_2_Master_Idle
  9856 ;; This function is called by:
  9857 ;;		_color_clear_init_interrupts
  9858 ;;		_color_writetoaddr
  9859 ;;		_color_read
  9860 ;; This function uses a non-reentrant model
  9861 ;;
  9862                           
  9863                           	psect	text29
  9864   005434                     __ptext29:
  9865                           	callstack 0
  9866   005434                     _I2C_2_Master_Start:
  9867                           	callstack 22
  9868   005434                     
  9869                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9870   005434  EC35  F029         	call	_I2C_2_Master_Idle	;wreg free
  9871   005438                     
  9872                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9873   005438  010E               	movlb	14	; () banked
  9874   00543A  81DA               	bsf	218,0,b	;volatile
  9875   00543C                     
  9876                           ; BSR set to: 14
  9877   00543C  0012               	return		;funcret
  9878   00543E                     __end_of_I2C_2_Master_Start:
  9879                           	callstack 0
  9880                           
  9881 ;; *************** function _I2C_2_Master_RepStart *****************
  9882 ;; Defined at:
  9883 ;;		line 33 in file "i2c.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;		None
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;		None
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  1    wreg      void 
  9890 ;; Registers used:
  9891 ;;		wreg, status,2, status,0, cstack
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9901 ;;Total ram usage:        0 bytes
  9902 ;; Hardware stack levels used: 1
  9903 ;; Hardware stack levels required when called: 7
  9904 ;; This function calls:
  9905 ;;		_I2C_2_Master_Idle
  9906 ;; This function is called by:
  9907 ;;		_color_read
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           	psect	text30
  9912   00543E                     __ptext30:
  9913                           	callstack 0
  9914   00543E                     _I2C_2_Master_RepStart:
  9915                           	callstack 22
  9916   00543E                     
  9917                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9918   00543E  EC35  F029         	call	_I2C_2_Master_Idle	;wreg free
  9919   005442                     
  9920                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9921   005442  010E               	movlb	14	; () banked
  9922   005444  83DA               	bsf	218,1,b	;volatile
  9923   005446                     
  9924                           ; BSR set to: 14
  9925   005446  0012               	return		;funcret
  9926   005448                     __end_of_I2C_2_Master_RepStart:
  9927                           	callstack 0
  9928                           
  9929 ;; *************** function _I2C_2_Master_Read *****************
  9930 ;; Defined at:
  9931 ;;		line 51 in file "i2c.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;  ack             1    wreg     unsigned char 
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;  ack             1   19[COMRAM] unsigned char 
  9936 ;;  tmp             1   20[COMRAM] unsigned char 
  9937 ;; Return value:  Size  Location     Type
  9938 ;;                  1    wreg      unsigned char 
  9939 ;; Registers used:
  9940 ;;		wreg, status,2, status,0, cstack
  9941 ;; Tracked objects:
  9942 ;;		On entry : 0/0
  9943 ;;		On exit  : 0/0
  9944 ;;		Unchanged: 0/0
  9945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9949 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9950 ;;Total ram usage:        3 bytes
  9951 ;; Hardware stack levels used: 1
  9952 ;; Hardware stack levels required when called: 7
  9953 ;; This function calls:
  9954 ;;		_I2C_2_Master_Idle
  9955 ;; This function is called by:
  9956 ;;		_color_read
  9957 ;; This function uses a non-reentrant model
  9958 ;;
  9959                           
  9960                           	psect	text31
  9961   0050E4                     __ptext31:
  9962                           	callstack 0
  9963   0050E4                     _I2C_2_Master_Read:
  9964                           	callstack 22
  9965                           
  9966                           ; BSR set to: 14
  9967                           ;incstack = 0
  9968                           ;I2C_2_Master_Read@ack stored from wreg
  9969   0050E4  6E14               	movwf	I2C_2_Master_Read@ack^0,c
  9970   0050E6                     
  9971                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9972   0050E6  EC35  F029         	call	_I2C_2_Master_Idle	;wreg free
  9973   0050EA                     
  9974                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9975   0050EA  010E               	movlb	14	; () banked
  9976   0050EC  87DA               	bsf	218,3,b	;volatile
  9977                           
  9978                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9979   0050EE  EC35  F029         	call	_I2C_2_Master_Idle	;wreg free
  9980   0050F2                     
  9981                           ;i2c.c: 57:   tmp = SSP2BUF;
  9982   0050F2  CED5 F015          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9983                           
  9984                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9985   0050F6  EC35  F029         	call	_I2C_2_Master_Idle	;wreg free
  9986   0050FA                     
  9987                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9988   0050FA  5014               	movf	I2C_2_Master_Read@ack^0,w,c
  9989   0050FC  B4D8               	btfsc	status,2,c
  9990   0050FE  EF83  F028         	goto	u3801
  9991   005102  EF87  F028         	goto	u3800
  9992   005106                     u3801:
  9993   005106  6A13               	clrf	??_I2C_2_Master_Read^0,c
  9994   005108  2A13               	incf	??_I2C_2_Master_Read^0,f,c
  9995   00510A  EF88  F028         	goto	u3818
  9996   00510E                     u3800:
  9997   00510E  6A13               	clrf	??_I2C_2_Master_Read^0,c
  9998   005110                     u3818:
  9999   005110  3A13               	swapf	??_I2C_2_Master_Read^0,f,c
 10000   005112  4613               	rlncf	??_I2C_2_Master_Read^0,f,c
 10001   005114  010E               	movlb	14	; () banked
 10002   005116  51DA               	movf	218,w,b	;volatile
 10003   005118  1813               	xorwf	??_I2C_2_Master_Read^0,w,c
 10004   00511A  0BDF               	andlw	-33
 10005   00511C  1813               	xorwf	??_I2C_2_Master_Read^0,w,c
 10006   00511E  6FDA               	movwf	218,b	;volatile
 10007   005120                     
 10008                           ; BSR set to: 14
 10009                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 10010   005120  89DA               	bsf	218,4,b	;volatile
 10011   005122                     
 10012                           ; BSR set to: 14
 10013                           ;i2c.c: 61:   return tmp;
 10014   005122  5015               	movf	I2C_2_Master_Read@tmp^0,w,c
 10015   005124                     
 10016                           ; BSR set to: 14
 10017   005124  0012               	return		;funcret
 10018   005126                     __end_of_I2C_2_Master_Read:
 10019                           	callstack 0
 10020                           
 10021 ;; *************** function _I2C_2_Master_Idle *****************
 10022 ;; Defined at:
 10023 ;;		line 22 in file "i2c.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;		None
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;		None
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  1    wreg      void 
 10030 ;; Registers used:
 10031 ;;		wreg, status,2, status,0
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10040 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10041 ;;Total ram usage:        1 bytes
 10042 ;; Hardware stack levels used: 1
 10043 ;; Hardware stack levels required when called: 6
 10044 ;; This function calls:
 10045 ;;		Nothing
 10046 ;; This function is called by:
 10047 ;;		_I2C_2_Master_Start
 10048 ;;		_I2C_2_Master_RepStart
 10049 ;;		_I2C_2_Master_Stop
 10050 ;;		_I2C_2_Master_Write
 10051 ;;		_I2C_2_Master_Read
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055                           	psect	text32
 10056   00526A                     __ptext32:
 10057                           	callstack 0
 10058   00526A                     _I2C_2_Master_Idle:
 10059                           	callstack 22
 10060   00526A                     l269:
 10061   00526A  010E               	movlb	14	; () banked
 10062   00526C  B5D8               	btfsc	216,2,b	;volatile
 10063   00526E  EF3B  F029         	goto	u3691
 10064   005272  EF3D  F029         	goto	u3690
 10065   005276                     u3691:
 10066   005276  EF35  F029         	goto	l269
 10067   00527A                     u3690:
 10068   00527A                     
 10069                           ; BSR set to: 14
 10070   00527A  CEDA F012          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10071   00527E  0E1F               	movlw	31
 10072   005280  1612               	andwf	??_I2C_2_Master_Idle^0,f,c
 10073   005282  A4D8               	btfss	status,2,c
 10074   005284  EF46  F029         	goto	u3701
 10075   005288  EF48  F029         	goto	u3700
 10076   00528C                     u3701:
 10077   00528C  EF35  F029         	goto	l269
 10078   005290                     u3700:
 10079   005290                     
 10080                           ; BSR set to: 14
 10081   005290  0012               	return		;funcret
 10082   005292                     __end_of_I2C_2_Master_Idle:
 10083                           	callstack 0
 10084                           
 10085 ;; *************** function _calibration *****************
 10086 ;; Defined at:
 10087 ;;		line 599 in file "dc_motor.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;  mL              2   50[COMRAM] PTR struct DC_motor
 10090 ;;		 -> main@motorL(10), 
 10091 ;;  mR              2   52[COMRAM] PTR struct DC_motor
 10092 ;;		 -> main@motorR(10), 
 10093 ;;  turnSpeed       1   54[COMRAM] unsigned char 
 10094 ;;  turnDuration    2   55[COMRAM] PTR unsigned char 
 10095 ;;		 -> main@turnDuration(1), 
 10096 ;;  turnRamp        1   57[COMRAM] unsigned char 
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;		None
 10099 ;; Return value:  Size  Location     Type
 10100 ;;                  1    wreg      void 
 10101 ;; Registers used:
 10102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10103 ;; Tracked objects:
 10104 ;;		On entry : 0/0
 10105 ;;		On exit  : 0/0
 10106 ;;		Unchanged: 0/0
 10107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10108 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10110 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10111 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10112 ;;Total ram usage:       10 bytes
 10113 ;; Hardware stack levels used: 1
 10114 ;; Hardware stack levels required when called: 9
 10115 ;; This function calls:
 10116 ;;		_turnLeft
 10117 ;;		_turnRight
 10118 ;; This function is called by:
 10119 ;;		_main
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           	psect	text33
 10124   003AC4                     __ptext33:
 10125                           	callstack 0
 10126   003AC4                     _calibration:
 10127                           	callstack 21
 10128   003AC4                     
 10129                           ;dc_motor.c: 599: void calibration(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned 
      +                          char *turnDuration, unsigned char turnRamp);dc_motor.c: 600: {;dc_motor.c: 602:     turn
      +                          Left(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10130   003AC4  C033  F025         	movff	calibration@mL,turnLeft@mL
 10131   003AC8  C034  F026         	movff	calibration@mL+1,turnLeft@mL+1
 10132   003ACC  C035  F027         	movff	calibration@mR,turnLeft@mR
 10133   003AD0  C036  F028         	movff	calibration@mR+1,turnLeft@mR+1
 10134   003AD4  C037  F029         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10135   003AD8  C038  FFD9         	movff	calibration@turnDuration,fsr2l
 10136   003ADC  C039  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10137   003AE0  50DF               	movf	indf2,w,c
 10138   003AE2  6E2A               	movwf	turnLeft@turnDuration^0,c
 10139   003AE4  C03A  F02B         	movff	calibration@turnRamp,turnLeft@turnRamp
 10140   003AE8  EC7A  F022         	call	_turnLeft	;wreg free
 10141   003AEC                     
 10142                           ;dc_motor.c: 603:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10143   003AEC  0E05               	movlw	5
 10144   003AEE  6E3C               	movwf	(??_calibration+1)^0,c
 10145   003AF0  0E0F               	movlw	15
 10146   003AF2  6E3B               	movwf	??_calibration^0,c
 10147   003AF4  0EF1               	movlw	241
 10148   003AF6                     u6327:
 10149   003AF6  2EE8               	decfsz	wreg,f,c
 10150   003AF8  D7FE               	bra	u6327
 10151   003AFA  2E3B               	decfsz	??_calibration^0,f,c
 10152   003AFC  D7FC               	bra	u6327
 10153   003AFE  2E3C               	decfsz	(??_calibration+1)^0,f,c
 10154   003B00  D7FA               	bra	u6327
 10155   003B02  0000               	nop	
 10156   003B04                     
 10157                           ;dc_motor.c: 604:     turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10158   003B04  C033  F025         	movff	calibration@mL,turnLeft@mL
 10159   003B08  C034  F026         	movff	calibration@mL+1,turnLeft@mL+1
 10160   003B0C  C035  F027         	movff	calibration@mR,turnLeft@mR
 10161   003B10  C036  F028         	movff	calibration@mR+1,turnLeft@mR+1
 10162   003B14  C037  F029         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10163   003B18  C038  FFD9         	movff	calibration@turnDuration,fsr2l
 10164   003B1C  C039  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10165   003B20  50DF               	movf	indf2,w,c
 10166   003B22  6E2A               	movwf	turnLeft@turnDuration^0,c
 10167   003B24  C03A  F02B         	movff	calibration@turnRamp,turnLeft@turnRamp
 10168   003B28  EC7A  F022         	call	_turnLeft	;wreg free
 10169                           
 10170                           ;dc_motor.c: 605:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10171   003B2C  0E05               	movlw	5
 10172   003B2E  6E3C               	movwf	(??_calibration+1)^0,c
 10173   003B30  0E0F               	movlw	15
 10174   003B32  6E3B               	movwf	??_calibration^0,c
 10175   003B34  0EF1               	movlw	241
 10176   003B36                     u6337:
 10177   003B36  2EE8               	decfsz	wreg,f,c
 10178   003B38  D7FE               	bra	u6337
 10179   003B3A  2E3B               	decfsz	??_calibration^0,f,c
 10180   003B3C  D7FC               	bra	u6337
 10181   003B3E  2E3C               	decfsz	(??_calibration+1)^0,f,c
 10182   003B40  D7FA               	bra	u6337
 10183   003B42  0000               	nop	
 10184   003B44                     
 10185                           ;dc_motor.c: 606:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10186   003B44  C033  F025         	movff	calibration@mL,turnRight@mL
 10187   003B48  C034  F026         	movff	calibration@mL+1,turnRight@mL+1
 10188   003B4C  C035  F027         	movff	calibration@mR,turnRight@mR
 10189   003B50  C036  F028         	movff	calibration@mR+1,turnRight@mR+1
 10190   003B54  C037  F029         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10191   003B58  C038  FFD9         	movff	calibration@turnDuration,fsr2l
 10192   003B5C  C039  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10193   003B60  50DF               	movf	indf2,w,c
 10194   003B62  6E2A               	movwf	turnRight@turnDuration^0,c
 10195   003B64  C03A  F02B         	movff	calibration@turnRamp,turnRight@turnRamp
 10196   003B68  EC8D  F021         	call	_turnRight	;wreg free
 10197   003B6C                     
 10198                           ;dc_motor.c: 607:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10199   003B6C  0E05               	movlw	5
 10200   003B6E  6E3C               	movwf	(??_calibration+1)^0,c
 10201   003B70  0E0F               	movlw	15
 10202   003B72  6E3B               	movwf	??_calibration^0,c
 10203   003B74  0EF1               	movlw	241
 10204   003B76                     u6347:
 10205   003B76  2EE8               	decfsz	wreg,f,c
 10206   003B78  D7FE               	bra	u6347
 10207   003B7A  2E3B               	decfsz	??_calibration^0,f,c
 10208   003B7C  D7FC               	bra	u6347
 10209   003B7E  2E3C               	decfsz	(??_calibration+1)^0,f,c
 10210   003B80  D7FA               	bra	u6347
 10211   003B82  0000               	nop	
 10212                           
 10213                           ;dc_motor.c: 608:     turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10214   003B84  C033  F025         	movff	calibration@mL,turnRight@mL
 10215   003B88  C034  F026         	movff	calibration@mL+1,turnRight@mL+1
 10216   003B8C  C035  F027         	movff	calibration@mR,turnRight@mR
 10217   003B90  C036  F028         	movff	calibration@mR+1,turnRight@mR+1
 10218   003B94  C037  F029         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10219   003B98  C038  FFD9         	movff	calibration@turnDuration,fsr2l
 10220   003B9C  C039  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10221   003BA0  50DF               	movf	indf2,w,c
 10222   003BA2  6E2A               	movwf	turnRight@turnDuration^0,c
 10223   003BA4  C03A  F02B         	movff	calibration@turnRamp,turnRight@turnRamp
 10224   003BA8  EC8D  F021         	call	_turnRight	;wreg free
 10225   003BAC                     l756:
 10226   003BAC  A48E               	btfss	142,2,c	;volatile
 10227   003BAE  EFDB  F01D         	goto	u4581
 10228   003BB2  EFDD  F01D         	goto	u4580
 10229   003BB6                     u4581:
 10230   003BB6  EFE4  F01D         	goto	l760
 10231   003BBA                     u4580:
 10232   003BBA  B68E               	btfsc	142,3,c	;volatile
 10233   003BBC  EFE2  F01D         	goto	u4591
 10234   003BC0  EFE4  F01D         	goto	u4590
 10235   003BC4                     u4591:
 10236   003BC4  EFD6  F01D         	goto	l756
 10237   003BC8                     u4590:
 10238   003BC8                     l760:
 10239                           
 10240                           ;dc_motor.c: 613:         if (!PORTFbits.RF2 && *turnDuration>0) {
 10241   003BC8  B48E               	btfsc	142,2,c	;volatile
 10242   003BCA  EFE9  F01D         	goto	u4601
 10243   003BCE  EFEB  F01D         	goto	u4600
 10244   003BD2                     u4601:
 10245   003BD2  EFFF  F01D         	goto	l761
 10246   003BD6                     u4600:
 10247   003BD6  C038  FFD9         	movff	calibration@turnDuration,fsr2l
 10248   003BDA  C039  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10249   003BDE  50DF               	movf	indf2,w,c
 10250   003BE0  B4D8               	btfsc	status,2,c
 10251   003BE2  EFF5  F01D         	goto	u4611
 10252   003BE6  EFF7  F01D         	goto	u4610
 10253   003BEA                     u4611:
 10254   003BEA  EFFF  F01D         	goto	l761
 10255   003BEE                     u4610:
 10256   003BEE                     
 10257                           ;dc_motor.c: 614:             (*turnDuration)--;
 10258   003BEE  C038  FFD9         	movff	calibration@turnDuration,fsr2l
 10259   003BF2  C039  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10260   003BF6  06DF               	decf	indf2,f,c
 10261   003BF8                     
 10262                           ;dc_motor.c: 615:             LATDbits.LATD7 = 1;
 10263   003BF8  8E7C               	bsf	124,7,c	;volatile
 10264                           
 10265                           ;dc_motor.c: 616:         }
 10266   003BFA  EF0C  F01E         	goto	l5480
 10267   003BFE                     l761:
 10268   003BFE  B68E               	btfsc	142,3,c	;volatile
 10269   003C00  EF04  F01E         	goto	u4621
 10270   003C04  EF06  F01E         	goto	u4620
 10271   003C08                     u4621:
 10272   003C08  EF0C  F01E         	goto	l5480
 10273   003C0C                     u4620:
 10274   003C0C                     
 10275                           ;dc_motor.c: 619:             (*turnDuration)++;
 10276   003C0C  C038  FFD9         	movff	calibration@turnDuration,fsr2l
 10277   003C10  C039  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10278   003C14  2ADF               	incf	indf2,f,c
 10279   003C16                     
 10280                           ;dc_motor.c: 620:             LATHbits.LATH3 = 1;
 10281   003C16  8680               	bsf	128,3,c	;volatile
 10282   003C18                     l5480:
 10283                           
 10284                           ;dc_motor.c: 623:         _delay((unsigned long)((500)*(64000000/4000.0)));
 10285   003C18  0E29               	movlw	41
 10286   003C1A  6E3C               	movwf	(??_calibration+1)^0,c
 10287   003C1C  0E96               	movlw	150
 10288   003C1E  6E3B               	movwf	??_calibration^0,c
 10289   003C20  0E7F               	movlw	127
 10290   003C22                     u6357:
 10291   003C22  2EE8               	decfsz	wreg,f,c
 10292   003C24  D7FE               	bra	u6357
 10293   003C26  2E3B               	decfsz	??_calibration^0,f,c
 10294   003C28  D7FC               	bra	u6357
 10295   003C2A  2E3C               	decfsz	(??_calibration+1)^0,f,c
 10296   003C2C  D7FA               	bra	u6357
 10297   003C2E  0000               	nop	
 10298   003C30                     
 10299                           ;dc_motor.c: 625:         if (!PORTFbits.RF3) {
 10300   003C30  B68E               	btfsc	142,3,c	;volatile
 10301   003C32  EF1D  F01E         	goto	u4631
 10302   003C36  EF1F  F01E         	goto	u4630
 10303   003C3A                     u4631:
 10304   003C3A  EF26  F01E         	goto	l764
 10305   003C3E                     u4630:
 10306   003C3E                     
 10307                           ;dc_motor.c: 626:             (*turnDuration)--;
 10308   003C3E  C038  FFD9         	movff	calibration@turnDuration,fsr2l
 10309   003C42  C039  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10310   003C46  06DF               	decf	indf2,f,c
 10311                           
 10312                           ;dc_motor.c: 627:             break;
 10313   003C48  EF9E  F01E         	goto	l765
 10314   003C4C                     l764:
 10315                           
 10316                           ;dc_motor.c: 630:         LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10317   003C4C  9680               	bcf	128,3,c	;volatile
 10318   003C4E  9E7C               	bcf	124,7,c	;volatile
 10319   003C50                     
 10320                           ;dc_motor.c: 633:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10321   003C50  C033  F025         	movff	calibration@mL,turnLeft@mL
 10322   003C54  C034  F026         	movff	calibration@mL+1,turnLeft@mL+1
 10323   003C58  C035  F027         	movff	calibration@mR,turnLeft@mR
 10324   003C5C  C036  F028         	movff	calibration@mR+1,turnLeft@mR+1
 10325   003C60  C037  F029         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10326   003C64  C038  FFD9         	movff	calibration@turnDuration,fsr2l
 10327   003C68  C039  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10328   003C6C  50DF               	movf	indf2,w,c
 10329   003C6E  6E2A               	movwf	turnLeft@turnDuration^0,c
 10330   003C70  C03A  F02B         	movff	calibration@turnRamp,turnLeft@turnRamp
 10331   003C74  EC7A  F022         	call	_turnLeft	;wreg free
 10332   003C78                     
 10333                           ;dc_motor.c: 634:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10334   003C78  0E05               	movlw	5
 10335   003C7A  6E3C               	movwf	(??_calibration+1)^0,c
 10336   003C7C  0E0F               	movlw	15
 10337   003C7E  6E3B               	movwf	??_calibration^0,c
 10338   003C80  0EF1               	movlw	241
 10339   003C82                     u6367:
 10340   003C82  2EE8               	decfsz	wreg,f,c
 10341   003C84  D7FE               	bra	u6367
 10342   003C86  2E3B               	decfsz	??_calibration^0,f,c
 10343   003C88  D7FC               	bra	u6367
 10344   003C8A  2E3C               	decfsz	(??_calibration+1)^0,f,c
 10345   003C8C  D7FA               	bra	u6367
 10346   003C8E  0000               	nop	
 10347   003C90                     
 10348                           ;dc_motor.c: 635:         turnLeft(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10349   003C90  C033  F025         	movff	calibration@mL,turnLeft@mL
 10350   003C94  C034  F026         	movff	calibration@mL+1,turnLeft@mL+1
 10351   003C98  C035  F027         	movff	calibration@mR,turnLeft@mR
 10352   003C9C  C036  F028         	movff	calibration@mR+1,turnLeft@mR+1
 10353   003CA0  C037  F029         	movff	calibration@turnSpeed,turnLeft@turnSpeed
 10354   003CA4  C038  FFD9         	movff	calibration@turnDuration,fsr2l
 10355   003CA8  C039  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10356   003CAC  50DF               	movf	indf2,w,c
 10357   003CAE  6E2A               	movwf	turnLeft@turnDuration^0,c
 10358   003CB0  C03A  F02B         	movff	calibration@turnRamp,turnLeft@turnRamp
 10359   003CB4  EC7A  F022         	call	_turnLeft	;wreg free
 10360                           
 10361                           ;dc_motor.c: 636:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10362   003CB8  0E05               	movlw	5
 10363   003CBA  6E3C               	movwf	(??_calibration+1)^0,c
 10364   003CBC  0E0F               	movlw	15
 10365   003CBE  6E3B               	movwf	??_calibration^0,c
 10366   003CC0  0EF1               	movlw	241
 10367   003CC2                     u6377:
 10368   003CC2  2EE8               	decfsz	wreg,f,c
 10369   003CC4  D7FE               	bra	u6377
 10370   003CC6  2E3B               	decfsz	??_calibration^0,f,c
 10371   003CC8  D7FC               	bra	u6377
 10372   003CCA  2E3C               	decfsz	(??_calibration+1)^0,f,c
 10373   003CCC  D7FA               	bra	u6377
 10374   003CCE  0000               	nop	
 10375   003CD0                     
 10376                           ;dc_motor.c: 637:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10377   003CD0  C033  F025         	movff	calibration@mL,turnRight@mL
 10378   003CD4  C034  F026         	movff	calibration@mL+1,turnRight@mL+1
 10379   003CD8  C035  F027         	movff	calibration@mR,turnRight@mR
 10380   003CDC  C036  F028         	movff	calibration@mR+1,turnRight@mR+1
 10381   003CE0  C037  F029         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10382   003CE4  C038  FFD9         	movff	calibration@turnDuration,fsr2l
 10383   003CE8  C039  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10384   003CEC  50DF               	movf	indf2,w,c
 10385   003CEE  6E2A               	movwf	turnRight@turnDuration^0,c
 10386   003CF0  C03A  F02B         	movff	calibration@turnRamp,turnRight@turnRamp
 10387   003CF4  EC8D  F021         	call	_turnRight	;wreg free
 10388   003CF8                     
 10389                           ;dc_motor.c: 638:         _delay((unsigned long)((50)*(64000000/4000.0)));
 10390   003CF8  0E05               	movlw	5
 10391   003CFA  6E3C               	movwf	(??_calibration+1)^0,c
 10392   003CFC  0E0F               	movlw	15
 10393   003CFE  6E3B               	movwf	??_calibration^0,c
 10394   003D00  0EF1               	movlw	241
 10395   003D02                     u6387:
 10396   003D02  2EE8               	decfsz	wreg,f,c
 10397   003D04  D7FE               	bra	u6387
 10398   003D06  2E3B               	decfsz	??_calibration^0,f,c
 10399   003D08  D7FC               	bra	u6387
 10400   003D0A  2E3C               	decfsz	(??_calibration+1)^0,f,c
 10401   003D0C  D7FA               	bra	u6387
 10402   003D0E  0000               	nop	
 10403                           
 10404                           ;dc_motor.c: 639:         turnRight(mL, mR, turnSpeed, *turnDuration, turnRamp);
 10405   003D10  C033  F025         	movff	calibration@mL,turnRight@mL
 10406   003D14  C034  F026         	movff	calibration@mL+1,turnRight@mL+1
 10407   003D18  C035  F027         	movff	calibration@mR,turnRight@mR
 10408   003D1C  C036  F028         	movff	calibration@mR+1,turnRight@mR+1
 10409   003D20  C037  F029         	movff	calibration@turnSpeed,turnRight@turnSpeed
 10410   003D24  C038  FFD9         	movff	calibration@turnDuration,fsr2l
 10411   003D28  C039  FFDA         	movff	calibration@turnDuration+1,fsr2h
 10412   003D2C  50DF               	movf	indf2,w,c
 10413   003D2E  6E2A               	movwf	turnRight@turnDuration^0,c
 10414   003D30  C03A  F02B         	movff	calibration@turnRamp,turnRight@turnRamp
 10415   003D34  EC8D  F021         	call	_turnRight	;wreg free
 10416   003D38  EFD6  F01D         	goto	l756
 10417   003D3C                     l765:
 10418                           
 10419                           ;dc_motor.c: 644:     LATDbits.LATD7 = LATHbits.LATH3 = 1;
 10420   003D3C  8680               	bsf	128,3,c	;volatile
 10421   003D3E  8E7C               	bsf	124,7,c	;volatile
 10422   003D40                     
 10423                           ;dc_motor.c: 645:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10424   003D40  0E09               	movlw	9
 10425   003D42  6E3C               	movwf	(??_calibration+1)^0,c
 10426   003D44  0E1E               	movlw	30
 10427   003D46  6E3B               	movwf	??_calibration^0,c
 10428   003D48  0EE4               	movlw	228
 10429   003D4A                     u6397:
 10430   003D4A  2EE8               	decfsz	wreg,f,c
 10431   003D4C  D7FE               	bra	u6397
 10432   003D4E  2E3B               	decfsz	??_calibration^0,f,c
 10433   003D50  D7FC               	bra	u6397
 10434   003D52  2E3C               	decfsz	(??_calibration+1)^0,f,c
 10435   003D54  D7FA               	bra	u6397
 10436   003D56  D000               	nop2	
 10437   003D58                     
 10438                           ;dc_motor.c: 646:     LATDbits.LATD7 = LATHbits.LATH3 = 0;
 10439   003D58  9680               	bcf	128,3,c	;volatile
 10440   003D5A  9E7C               	bcf	124,7,c	;volatile
 10441   003D5C  0012               	return		;funcret
 10442   003D5E                     __end_of_calibration:
 10443                           	callstack 0
 10444                           
 10445 ;; *************** function _turnRight *****************
 10446 ;; Defined at:
 10447 ;;		line 419 in file "dc_motor.c"
 10448 ;; Parameters:    Size  Location     Type
 10449 ;;  mL              2   36[COMRAM] PTR struct DC_motor
 10450 ;;		 -> main@motorL(10), 
 10451 ;;  mR              2   38[COMRAM] PTR struct DC_motor
 10452 ;;		 -> main@motorR(10), 
 10453 ;;  turnSpeed       1   40[COMRAM] unsigned char 
 10454 ;;  turnDuration    1   41[COMRAM] unsigned char 
 10455 ;;  turnRamp        1   42[COMRAM] unsigned char 
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;  cur_power       2   48[COMRAM] int 
 10458 ;;  i               2   46[COMRAM] int 
 10459 ;; Return value:  Size  Location     Type
 10460 ;;                  1    wreg      void 
 10461 ;; Registers used:
 10462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10468 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10469 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10470 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10471 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10472 ;;Total ram usage:       14 bytes
 10473 ;; Hardware stack levels used: 1
 10474 ;; Hardware stack levels required when called: 8
 10475 ;; This function calls:
 10476 ;;		_setMotorPWM
 10477 ;; This function is called by:
 10478 ;;		_move
 10479 ;;		_returnHome
 10480 ;;		_lostReturnHome
 10481 ;;		_calibration
 10482 ;; This function uses a non-reentrant model
 10483 ;;
 10484                           
 10485                           	psect	text34
 10486   00431A                     __ptext34:
 10487                           	callstack 0
 10488   00431A                     _turnRight:
 10489                           	callstack 21
 10490   00431A                     
 10491                           ;dc_motor.c: 419: void turnRight(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned ch
      +                          ar turnDuration, unsigned char turnRamp);dc_motor.c: 420: {;dc_motor.c: 421:     mL->dir
      +                          ection = 1;
 10492   00431A  EE20 F001          	lfsr	2,1
 10493   00431E  5025               	movf	turnRight@mL^0,w,c
 10494   004320  26D9               	addwf	fsr2l,f,c
 10495   004322  5026               	movf	(turnRight@mL+1)^0,w,c
 10496   004324  22DA               	addwfc	fsr2h,f,c
 10497   004326  0E01               	movlw	1
 10498   004328  6EDF               	movwf	indf2,c
 10499                           
 10500                           ;dc_motor.c: 422:     mR->direction = 0;
 10501   00432A  EE20 F001          	lfsr	2,1
 10502   00432E  5027               	movf	turnRight@mR^0,w,c
 10503   004330  26D9               	addwf	fsr2l,f,c
 10504   004332  5028               	movf	(turnRight@mR+1)^0,w,c
 10505   004334  22DA               	addwfc	fsr2h,f,c
 10506   004336  6ADF               	clrf	indf2,c
 10507   004338                     
 10508                           ;dc_motor.c: 423:     int i;;dc_motor.c: 424:     int cur_power;;dc_motor.c: 425:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 10509   004338  0E00               	movlw	0
 10510   00433A  6E32               	movwf	(turnRight@cur_power+1)^0,c
 10511   00433C  0E01               	movlw	1
 10512   00433E  6E31               	movwf	turnRight@cur_power^0,c
 10513   004340  EFEC  F021         	goto	l4778
 10514   004344                     l4764:
 10515                           
 10516                           ;dc_motor.c: 426:         mL->power = cur_power+mL->compensation;
 10517   004344  EE20 F009          	lfsr	2,9
 10518   004348  5025               	movf	turnRight@mL^0,w,c
 10519   00434A  26D9               	addwf	fsr2l,f,c
 10520   00434C  5026               	movf	(turnRight@mL+1)^0,w,c
 10521   00434E  22DA               	addwfc	fsr2h,f,c
 10522   004350  50DF               	movf	indf2,w,c
 10523   004352  2431               	addwf	turnRight@cur_power^0,w,c
 10524   004354  C025  FFD9         	movff	turnRight@mL,fsr2l
 10525   004358  C026  FFDA         	movff	turnRight@mL+1,fsr2h
 10526   00435C  6EDF               	movwf	indf2,c
 10527                           
 10528                           ;dc_motor.c: 427:         mR->power = cur_power+mR->compensation;
 10529   00435E  EE20 F009          	lfsr	2,9
 10530   004362  5027               	movf	turnRight@mR^0,w,c
 10531   004364  26D9               	addwf	fsr2l,f,c
 10532   004366  5028               	movf	(turnRight@mR+1)^0,w,c
 10533   004368  22DA               	addwfc	fsr2h,f,c
 10534   00436A  50DF               	movf	indf2,w,c
 10535   00436C  2431               	addwf	turnRight@cur_power^0,w,c
 10536   00436E  C027  FFD9         	movff	turnRight@mR,fsr2l
 10537   004372  C028  FFDA         	movff	turnRight@mR+1,fsr2h
 10538   004376  6EDF               	movwf	indf2,c
 10539   004378                     
 10540                           ;dc_motor.c: 428:         setMotorPWM(mL);
 10541   004378  C025  F01F         	movff	turnRight@mL,setMotorPWM@m
 10542   00437C  C026  F020         	movff	turnRight@mL+1,setMotorPWM@m+1
 10543   004380  EC67  F023         	call	_setMotorPWM	;wreg free
 10544   004384                     
 10545                           ;dc_motor.c: 429:         setMotorPWM(mR);
 10546   004384  C027  F01F         	movff	turnRight@mR,setMotorPWM@m
 10547   004388  C028  F020         	movff	turnRight@mR+1,setMotorPWM@m+1
 10548   00438C  EC67  F023         	call	_setMotorPWM	;wreg free
 10549   004390                     
 10550                           ;dc_motor.c: 430:         for (i=0;i<turnRamp;i++) {
 10551   004390  0E00               	movlw	0
 10552   004392  6E30               	movwf	(turnRight@i+1)^0,c
 10553   004394  0E00               	movlw	0
 10554   004396  6E2F               	movwf	turnRight@i^0,c
 10555   004398  EFD8  F021         	goto	l666
 10556   00439C                     l4772:
 10557                           
 10558                           ;dc_motor.c: 431:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10559   00439C  0E68               	movlw	104
 10560   00439E  6E2C               	movwf	??_turnRight^0,c
 10561   0043A0  0EE4               	movlw	228
 10562   0043A2                     u6407:
 10563   0043A2  2EE8               	decfsz	wreg,f,c
 10564   0043A4  D7FE               	bra	u6407
 10565   0043A6  2E2C               	decfsz	??_turnRight^0,f,c
 10566   0043A8  D7FC               	bra	u6407
 10567   0043AA  D000               	nop2	
 10568   0043AC                     
 10569                           ;dc_motor.c: 432:         }
 10570   0043AC  4A2F               	infsnz	turnRight@i^0,f,c
 10571   0043AE  2A30               	incf	(turnRight@i+1)^0,f,c
 10572   0043B0                     l666:
 10573   0043B0  502B               	movf	turnRight@turnRamp^0,w,c
 10574   0043B2  6E2C               	movwf	??_turnRight^0,c
 10575   0043B4  6A2D               	clrf	(??_turnRight+1)^0,c
 10576   0043B6  502C               	movf	??_turnRight^0,w,c
 10577   0043B8  5C2F               	subwf	turnRight@i^0,w,c
 10578   0043BA  5030               	movf	(turnRight@i+1)^0,w,c
 10579   0043BC  0A80               	xorlw	128
 10580   0043BE  6E2E               	movwf	(??_turnRight+2)^0,c
 10581   0043C0  502D               	movf	(??_turnRight+1)^0,w,c
 10582   0043C2  0A80               	xorlw	128
 10583   0043C4  582E               	subwfb	(??_turnRight+2)^0,w,c
 10584   0043C6  A0D8               	btfss	status,0,c
 10585   0043C8  EFE8  F021         	goto	u3841
 10586   0043CC  EFEA  F021         	goto	u3840
 10587   0043D0                     u3841:
 10588   0043D0  EFCE  F021         	goto	l4772
 10589   0043D4                     u3840:
 10590   0043D4                     
 10591                           ;dc_motor.c: 433:     }
 10592   0043D4  4A31               	infsnz	turnRight@cur_power^0,f,c
 10593   0043D6  2A32               	incf	(turnRight@cur_power+1)^0,f,c
 10594   0043D8                     l4778:
 10595   0043D8  5029               	movf	turnRight@turnSpeed^0,w,c
 10596   0043DA  6E2C               	movwf	??_turnRight^0,c
 10597   0043DC  6A2D               	clrf	(??_turnRight+1)^0,c
 10598   0043DE  5031               	movf	turnRight@cur_power^0,w,c
 10599   0043E0  5C2C               	subwf	??_turnRight^0,w,c
 10600   0043E2  502D               	movf	(??_turnRight+1)^0,w,c
 10601   0043E4  0A80               	xorlw	128
 10602   0043E6  6E2E               	movwf	(??_turnRight+2)^0,c
 10603   0043E8  5032               	movf	(turnRight@cur_power+1)^0,w,c
 10604   0043EA  0A80               	xorlw	128
 10605   0043EC  582E               	subwfb	(??_turnRight+2)^0,w,c
 10606   0043EE  B0D8               	btfsc	status,0,c
 10607   0043F0  EFFC  F021         	goto	u3851
 10608   0043F4  EFFE  F021         	goto	u3850
 10609   0043F8                     u3851:
 10610   0043F8  EFA2  F021         	goto	l4764
 10611   0043FC                     u3850:
 10612   0043FC                     
 10613                           ;dc_motor.c: 435:     for (i=0;i<turnDuration;i++) {
 10614   0043FC  0E00               	movlw	0
 10615   0043FE  6E30               	movwf	(turnRight@i+1)^0,c
 10616   004400  0E00               	movlw	0
 10617   004402  6E2F               	movwf	turnRight@i^0,c
 10618   004404  EF0E  F022         	goto	l670
 10619   004408                     l4782:
 10620                           
 10621                           ;dc_motor.c: 436:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10622   004408  0E68               	movlw	104
 10623   00440A  6E2C               	movwf	??_turnRight^0,c
 10624   00440C  0EE4               	movlw	228
 10625   00440E                     u6417:
 10626   00440E  2EE8               	decfsz	wreg,f,c
 10627   004410  D7FE               	bra	u6417
 10628   004412  2E2C               	decfsz	??_turnRight^0,f,c
 10629   004414  D7FC               	bra	u6417
 10630   004416  D000               	nop2	
 10631   004418                     
 10632                           ;dc_motor.c: 437:         }
 10633   004418  4A2F               	infsnz	turnRight@i^0,f,c
 10634   00441A  2A30               	incf	(turnRight@i+1)^0,f,c
 10635   00441C                     l670:
 10636   00441C  502A               	movf	turnRight@turnDuration^0,w,c
 10637   00441E  6E2C               	movwf	??_turnRight^0,c
 10638   004420  6A2D               	clrf	(??_turnRight+1)^0,c
 10639   004422  502C               	movf	??_turnRight^0,w,c
 10640   004424  5C2F               	subwf	turnRight@i^0,w,c
 10641   004426  5030               	movf	(turnRight@i+1)^0,w,c
 10642   004428  0A80               	xorlw	128
 10643   00442A  6E2E               	movwf	(??_turnRight+2)^0,c
 10644   00442C  502D               	movf	(??_turnRight+1)^0,w,c
 10645   00442E  0A80               	xorlw	128
 10646   004430  582E               	subwfb	(??_turnRight+2)^0,w,c
 10647   004432  A0D8               	btfss	status,0,c
 10648   004434  EF1E  F022         	goto	u3861
 10649   004438  EF20  F022         	goto	u3860
 10650   00443C                     u3861:
 10651   00443C  EF04  F022         	goto	l4782
 10652   004440                     u3860:
 10653   004440                     
 10654                           ;dc_motor.c: 439:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 10655   004440  C029  F031         	movff	turnRight@turnSpeed,turnRight@cur_power
 10656   004444  6A32               	clrf	(turnRight@cur_power+1)^0,c
 10657   004446                     l4786:
 10658   004446  BE32               	btfsc	(turnRight@cur_power+1)^0,7,c
 10659   004448  EF2A  F022         	goto	u3870
 10660   00444C  EF28  F022         	goto	u3871
 10661   004450                     u3871:
 10662   004450  EF2C  F022         	goto	l4790
 10663   004454                     u3870:
 10664   004454  EF79  F022         	goto	l678
 10665   004458                     l4790:
 10666                           
 10667                           ;dc_motor.c: 440:         mL->power = cur_power+mL->compensation;
 10668   004458  EE20 F009          	lfsr	2,9
 10669   00445C  5025               	movf	turnRight@mL^0,w,c
 10670   00445E  26D9               	addwf	fsr2l,f,c
 10671   004460  5026               	movf	(turnRight@mL+1)^0,w,c
 10672   004462  22DA               	addwfc	fsr2h,f,c
 10673   004464  50DF               	movf	indf2,w,c
 10674   004466  2431               	addwf	turnRight@cur_power^0,w,c
 10675   004468  C025  FFD9         	movff	turnRight@mL,fsr2l
 10676   00446C  C026  FFDA         	movff	turnRight@mL+1,fsr2h
 10677   004470  6EDF               	movwf	indf2,c
 10678                           
 10679                           ;dc_motor.c: 441:         mR->power = cur_power+mR->compensation;
 10680   004472  EE20 F009          	lfsr	2,9
 10681   004476  5027               	movf	turnRight@mR^0,w,c
 10682   004478  26D9               	addwf	fsr2l,f,c
 10683   00447A  5028               	movf	(turnRight@mR+1)^0,w,c
 10684   00447C  22DA               	addwfc	fsr2h,f,c
 10685   00447E  50DF               	movf	indf2,w,c
 10686   004480  2431               	addwf	turnRight@cur_power^0,w,c
 10687   004482  C027  FFD9         	movff	turnRight@mR,fsr2l
 10688   004486  C028  FFDA         	movff	turnRight@mR+1,fsr2h
 10689   00448A  6EDF               	movwf	indf2,c
 10690   00448C                     
 10691                           ;dc_motor.c: 442:         setMotorPWM(mL);
 10692   00448C  C025  F01F         	movff	turnRight@mL,setMotorPWM@m
 10693   004490  C026  F020         	movff	turnRight@mL+1,setMotorPWM@m+1
 10694   004494  EC67  F023         	call	_setMotorPWM	;wreg free
 10695   004498                     
 10696                           ;dc_motor.c: 443:         setMotorPWM(mR);
 10697   004498  C027  F01F         	movff	turnRight@mR,setMotorPWM@m
 10698   00449C  C028  F020         	movff	turnRight@mR+1,setMotorPWM@m+1
 10699   0044A0  EC67  F023         	call	_setMotorPWM	;wreg free
 10700   0044A4                     
 10701                           ;dc_motor.c: 444:         for (i=0;i<turnRamp;i++) {
 10702   0044A4  0E00               	movlw	0
 10703   0044A6  6E30               	movwf	(turnRight@i+1)^0,c
 10704   0044A8  0E00               	movlw	0
 10705   0044AA  6E2F               	movwf	turnRight@i^0,c
 10706   0044AC  EF62  F022         	goto	l675
 10707   0044B0                     l4798:
 10708                           
 10709                           ;dc_motor.c: 445:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10710   0044B0  0E68               	movlw	104
 10711   0044B2  6E2C               	movwf	??_turnRight^0,c
 10712   0044B4  0EE4               	movlw	228
 10713   0044B6                     u6427:
 10714   0044B6  2EE8               	decfsz	wreg,f,c
 10715   0044B8  D7FE               	bra	u6427
 10716   0044BA  2E2C               	decfsz	??_turnRight^0,f,c
 10717   0044BC  D7FC               	bra	u6427
 10718   0044BE  D000               	nop2	
 10719   0044C0                     
 10720                           ;dc_motor.c: 446:         }
 10721   0044C0  4A2F               	infsnz	turnRight@i^0,f,c
 10722   0044C2  2A30               	incf	(turnRight@i+1)^0,f,c
 10723   0044C4                     l675:
 10724   0044C4  502B               	movf	turnRight@turnRamp^0,w,c
 10725   0044C6  6E2C               	movwf	??_turnRight^0,c
 10726   0044C8  6A2D               	clrf	(??_turnRight+1)^0,c
 10727   0044CA  502C               	movf	??_turnRight^0,w,c
 10728   0044CC  5C2F               	subwf	turnRight@i^0,w,c
 10729   0044CE  5030               	movf	(turnRight@i+1)^0,w,c
 10730   0044D0  0A80               	xorlw	128
 10731   0044D2  6E2E               	movwf	(??_turnRight+2)^0,c
 10732   0044D4  502D               	movf	(??_turnRight+1)^0,w,c
 10733   0044D6  0A80               	xorlw	128
 10734   0044D8  582E               	subwfb	(??_turnRight+2)^0,w,c
 10735   0044DA  A0D8               	btfss	status,0,c
 10736   0044DC  EF72  F022         	goto	u3881
 10737   0044E0  EF74  F022         	goto	u3880
 10738   0044E4                     u3881:
 10739   0044E4  EF58  F022         	goto	l4798
 10740   0044E8                     u3880:
 10741   0044E8                     
 10742                           ;dc_motor.c: 447:     }
 10743   0044E8  0631               	decf	turnRight@cur_power^0,f,c
 10744   0044EA  A0D8               	btfss	status,0,c
 10745   0044EC  0632               	decf	(turnRight@cur_power+1)^0,f,c
 10746   0044EE  EF23  F022         	goto	l4786
 10747   0044F2                     l678:
 10748   0044F2  0012               	return		;funcret
 10749   0044F4                     __end_of_turnRight:
 10750                           	callstack 0
 10751                           
 10752 ;; *************** function _turnLeft *****************
 10753 ;; Defined at:
 10754 ;;		line 387 in file "dc_motor.c"
 10755 ;; Parameters:    Size  Location     Type
 10756 ;;  mL              2   36[COMRAM] PTR struct DC_motor
 10757 ;;		 -> main@motorL(10), 
 10758 ;;  mR              2   38[COMRAM] PTR struct DC_motor
 10759 ;;		 -> main@motorR(10), 
 10760 ;;  turnSpeed       1   40[COMRAM] unsigned char 
 10761 ;;  turnDuration    1   41[COMRAM] unsigned char 
 10762 ;;  turnRamp        1   42[COMRAM] unsigned char 
 10763 ;; Auto vars:     Size  Location     Type
 10764 ;;  cur_power       2   48[COMRAM] int 
 10765 ;;  i               2   46[COMRAM] int 
 10766 ;; Return value:  Size  Location     Type
 10767 ;;                  1    wreg      void 
 10768 ;; Registers used:
 10769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10770 ;; Tracked objects:
 10771 ;;		On entry : 0/0
 10772 ;;		On exit  : 0/0
 10773 ;;		Unchanged: 0/0
 10774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10775 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10776 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10777 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10778 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10779 ;;Total ram usage:       14 bytes
 10780 ;; Hardware stack levels used: 1
 10781 ;; Hardware stack levels required when called: 8
 10782 ;; This function calls:
 10783 ;;		_setMotorPWM
 10784 ;; This function is called by:
 10785 ;;		_move
 10786 ;;		_returnHome
 10787 ;;		_lostReturnHome
 10788 ;;		_calibration
 10789 ;; This function uses a non-reentrant model
 10790 ;;
 10791                           
 10792                           	psect	text35
 10793   0044F4                     __ptext35:
 10794                           	callstack 0
 10795   0044F4                     _turnLeft:
 10796                           	callstack 21
 10797   0044F4                     
 10798                           ;dc_motor.c: 387: void turnLeft(DC_motor *mL, DC_motor *mR, char turnSpeed, unsigned cha
      +                          r turnDuration, unsigned char turnRamp);dc_motor.c: 388: {;dc_motor.c: 389:     mL->dire
      +                          ction = 0;
 10799   0044F4  EE20 F001          	lfsr	2,1
 10800   0044F8  5025               	movf	turnLeft@mL^0,w,c
 10801   0044FA  26D9               	addwf	fsr2l,f,c
 10802   0044FC  5026               	movf	(turnLeft@mL+1)^0,w,c
 10803   0044FE  22DA               	addwfc	fsr2h,f,c
 10804   004500  6ADF               	clrf	indf2,c
 10805                           
 10806                           ;dc_motor.c: 390:     mR->direction = 1;
 10807   004502  EE20 F001          	lfsr	2,1
 10808   004506  5027               	movf	turnLeft@mR^0,w,c
 10809   004508  26D9               	addwf	fsr2l,f,c
 10810   00450A  5028               	movf	(turnLeft@mR+1)^0,w,c
 10811   00450C  22DA               	addwfc	fsr2h,f,c
 10812   00450E  0E01               	movlw	1
 10813   004510  6EDF               	movwf	indf2,c
 10814   004512                     
 10815                           ;dc_motor.c: 391:     int i;;dc_motor.c: 392:     int cur_power;;dc_motor.c: 393:     fo
      +                          r (cur_power=1;cur_power<=turnSpeed;cur_power++) {
 10816   004512  0E00               	movlw	0
 10817   004514  6E32               	movwf	(turnLeft@cur_power+1)^0,c
 10818   004516  0E01               	movlw	1
 10819   004518  6E31               	movwf	turnLeft@cur_power^0,c
 10820   00451A  EFD9  F022         	goto	l4824
 10821   00451E                     l4810:
 10822                           
 10823                           ;dc_motor.c: 394:         mL->power = cur_power+mL->compensation;
 10824   00451E  EE20 F009          	lfsr	2,9
 10825   004522  5025               	movf	turnLeft@mL^0,w,c
 10826   004524  26D9               	addwf	fsr2l,f,c
 10827   004526  5026               	movf	(turnLeft@mL+1)^0,w,c
 10828   004528  22DA               	addwfc	fsr2h,f,c
 10829   00452A  50DF               	movf	indf2,w,c
 10830   00452C  2431               	addwf	turnLeft@cur_power^0,w,c
 10831   00452E  C025  FFD9         	movff	turnLeft@mL,fsr2l
 10832   004532  C026  FFDA         	movff	turnLeft@mL+1,fsr2h
 10833   004536  6EDF               	movwf	indf2,c
 10834                           
 10835                           ;dc_motor.c: 395:         mR->power = cur_power+mR->compensation;
 10836   004538  EE20 F009          	lfsr	2,9
 10837   00453C  5027               	movf	turnLeft@mR^0,w,c
 10838   00453E  26D9               	addwf	fsr2l,f,c
 10839   004540  5028               	movf	(turnLeft@mR+1)^0,w,c
 10840   004542  22DA               	addwfc	fsr2h,f,c
 10841   004544  50DF               	movf	indf2,w,c
 10842   004546  2431               	addwf	turnLeft@cur_power^0,w,c
 10843   004548  C027  FFD9         	movff	turnLeft@mR,fsr2l
 10844   00454C  C028  FFDA         	movff	turnLeft@mR+1,fsr2h
 10845   004550  6EDF               	movwf	indf2,c
 10846   004552                     
 10847                           ;dc_motor.c: 396:         setMotorPWM(mL);
 10848   004552  C025  F01F         	movff	turnLeft@mL,setMotorPWM@m
 10849   004556  C026  F020         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10850   00455A  EC67  F023         	call	_setMotorPWM	;wreg free
 10851   00455E                     
 10852                           ;dc_motor.c: 397:         setMotorPWM(mR);
 10853   00455E  C027  F01F         	movff	turnLeft@mR,setMotorPWM@m
 10854   004562  C028  F020         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10855   004566  EC67  F023         	call	_setMotorPWM	;wreg free
 10856   00456A                     
 10857                           ;dc_motor.c: 398:         for (i=0;i<turnRamp;i++) {
 10858   00456A  0E00               	movlw	0
 10859   00456C  6E30               	movwf	(turnLeft@i+1)^0,c
 10860   00456E  0E00               	movlw	0
 10861   004570  6E2F               	movwf	turnLeft@i^0,c
 10862   004572  EFC5  F022         	goto	l649
 10863   004576                     l4818:
 10864                           
 10865                           ;dc_motor.c: 399:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10866   004576  0E68               	movlw	104
 10867   004578  6E2C               	movwf	??_turnLeft^0,c
 10868   00457A  0EE4               	movlw	228
 10869   00457C                     u6437:
 10870   00457C  2EE8               	decfsz	wreg,f,c
 10871   00457E  D7FE               	bra	u6437
 10872   004580  2E2C               	decfsz	??_turnLeft^0,f,c
 10873   004582  D7FC               	bra	u6437
 10874   004584  D000               	nop2	
 10875   004586                     
 10876                           ;dc_motor.c: 400:         }
 10877   004586  4A2F               	infsnz	turnLeft@i^0,f,c
 10878   004588  2A30               	incf	(turnLeft@i+1)^0,f,c
 10879   00458A                     l649:
 10880   00458A  502B               	movf	turnLeft@turnRamp^0,w,c
 10881   00458C  6E2C               	movwf	??_turnLeft^0,c
 10882   00458E  6A2D               	clrf	(??_turnLeft+1)^0,c
 10883   004590  502C               	movf	??_turnLeft^0,w,c
 10884   004592  5C2F               	subwf	turnLeft@i^0,w,c
 10885   004594  5030               	movf	(turnLeft@i+1)^0,w,c
 10886   004596  0A80               	xorlw	128
 10887   004598  6E2E               	movwf	(??_turnLeft+2)^0,c
 10888   00459A  502D               	movf	(??_turnLeft+1)^0,w,c
 10889   00459C  0A80               	xorlw	128
 10890   00459E  582E               	subwfb	(??_turnLeft+2)^0,w,c
 10891   0045A0  A0D8               	btfss	status,0,c
 10892   0045A2  EFD5  F022         	goto	u3891
 10893   0045A6  EFD7  F022         	goto	u3890
 10894   0045AA                     u3891:
 10895   0045AA  EFBB  F022         	goto	l4818
 10896   0045AE                     u3890:
 10897   0045AE                     
 10898                           ;dc_motor.c: 401:     }
 10899   0045AE  4A31               	infsnz	turnLeft@cur_power^0,f,c
 10900   0045B0  2A32               	incf	(turnLeft@cur_power+1)^0,f,c
 10901   0045B2                     l4824:
 10902   0045B2  5029               	movf	turnLeft@turnSpeed^0,w,c
 10903   0045B4  6E2C               	movwf	??_turnLeft^0,c
 10904   0045B6  6A2D               	clrf	(??_turnLeft+1)^0,c
 10905   0045B8  5031               	movf	turnLeft@cur_power^0,w,c
 10906   0045BA  5C2C               	subwf	??_turnLeft^0,w,c
 10907   0045BC  502D               	movf	(??_turnLeft+1)^0,w,c
 10908   0045BE  0A80               	xorlw	128
 10909   0045C0  6E2E               	movwf	(??_turnLeft+2)^0,c
 10910   0045C2  5032               	movf	(turnLeft@cur_power+1)^0,w,c
 10911   0045C4  0A80               	xorlw	128
 10912   0045C6  582E               	subwfb	(??_turnLeft+2)^0,w,c
 10913   0045C8  B0D8               	btfsc	status,0,c
 10914   0045CA  EFE9  F022         	goto	u3901
 10915   0045CE  EFEB  F022         	goto	u3900
 10916   0045D2                     u3901:
 10917   0045D2  EF8F  F022         	goto	l4810
 10918   0045D6                     u3900:
 10919   0045D6                     
 10920                           ;dc_motor.c: 403:     for (i=0;i<turnDuration;i++) {
 10921   0045D6  0E00               	movlw	0
 10922   0045D8  6E30               	movwf	(turnLeft@i+1)^0,c
 10923   0045DA  0E00               	movlw	0
 10924   0045DC  6E2F               	movwf	turnLeft@i^0,c
 10925   0045DE  EFFB  F022         	goto	l653
 10926   0045E2                     l4828:
 10927                           
 10928                           ;dc_motor.c: 404:             _delay((unsigned long)((5)*(64000000/4000.0)));
 10929   0045E2  0E68               	movlw	104
 10930   0045E4  6E2C               	movwf	??_turnLeft^0,c
 10931   0045E6  0EE4               	movlw	228
 10932   0045E8                     u6447:
 10933   0045E8  2EE8               	decfsz	wreg,f,c
 10934   0045EA  D7FE               	bra	u6447
 10935   0045EC  2E2C               	decfsz	??_turnLeft^0,f,c
 10936   0045EE  D7FC               	bra	u6447
 10937   0045F0  D000               	nop2	
 10938   0045F2                     
 10939                           ;dc_motor.c: 405:         }
 10940   0045F2  4A2F               	infsnz	turnLeft@i^0,f,c
 10941   0045F4  2A30               	incf	(turnLeft@i+1)^0,f,c
 10942   0045F6                     l653:
 10943   0045F6  502A               	movf	turnLeft@turnDuration^0,w,c
 10944   0045F8  6E2C               	movwf	??_turnLeft^0,c
 10945   0045FA  6A2D               	clrf	(??_turnLeft+1)^0,c
 10946   0045FC  502C               	movf	??_turnLeft^0,w,c
 10947   0045FE  5C2F               	subwf	turnLeft@i^0,w,c
 10948   004600  5030               	movf	(turnLeft@i+1)^0,w,c
 10949   004602  0A80               	xorlw	128
 10950   004604  6E2E               	movwf	(??_turnLeft+2)^0,c
 10951   004606  502D               	movf	(??_turnLeft+1)^0,w,c
 10952   004608  0A80               	xorlw	128
 10953   00460A  582E               	subwfb	(??_turnLeft+2)^0,w,c
 10954   00460C  A0D8               	btfss	status,0,c
 10955   00460E  EF0B  F023         	goto	u3911
 10956   004612  EF0D  F023         	goto	u3910
 10957   004616                     u3911:
 10958   004616  EFF1  F022         	goto	l4828
 10959   00461A                     u3910:
 10960   00461A                     
 10961                           ;dc_motor.c: 407:     for (cur_power=turnSpeed;cur_power>=0;cur_power--) {
 10962   00461A  C029  F031         	movff	turnLeft@turnSpeed,turnLeft@cur_power
 10963   00461E  6A32               	clrf	(turnLeft@cur_power+1)^0,c
 10964   004620                     l4832:
 10965   004620  BE32               	btfsc	(turnLeft@cur_power+1)^0,7,c
 10966   004622  EF17  F023         	goto	u3920
 10967   004626  EF15  F023         	goto	u3921
 10968   00462A                     u3921:
 10969   00462A  EF19  F023         	goto	l4836
 10970   00462E                     u3920:
 10971   00462E  EF66  F023         	goto	l661
 10972   004632                     l4836:
 10973                           
 10974                           ;dc_motor.c: 408:         mL->power = cur_power+mL->compensation;
 10975   004632  EE20 F009          	lfsr	2,9
 10976   004636  5025               	movf	turnLeft@mL^0,w,c
 10977   004638  26D9               	addwf	fsr2l,f,c
 10978   00463A  5026               	movf	(turnLeft@mL+1)^0,w,c
 10979   00463C  22DA               	addwfc	fsr2h,f,c
 10980   00463E  50DF               	movf	indf2,w,c
 10981   004640  2431               	addwf	turnLeft@cur_power^0,w,c
 10982   004642  C025  FFD9         	movff	turnLeft@mL,fsr2l
 10983   004646  C026  FFDA         	movff	turnLeft@mL+1,fsr2h
 10984   00464A  6EDF               	movwf	indf2,c
 10985                           
 10986                           ;dc_motor.c: 409:         mR->power = cur_power+mR->compensation;
 10987   00464C  EE20 F009          	lfsr	2,9
 10988   004650  5027               	movf	turnLeft@mR^0,w,c
 10989   004652  26D9               	addwf	fsr2l,f,c
 10990   004654  5028               	movf	(turnLeft@mR+1)^0,w,c
 10991   004656  22DA               	addwfc	fsr2h,f,c
 10992   004658  50DF               	movf	indf2,w,c
 10993   00465A  2431               	addwf	turnLeft@cur_power^0,w,c
 10994   00465C  C027  FFD9         	movff	turnLeft@mR,fsr2l
 10995   004660  C028  FFDA         	movff	turnLeft@mR+1,fsr2h
 10996   004664  6EDF               	movwf	indf2,c
 10997   004666                     
 10998                           ;dc_motor.c: 410:         setMotorPWM(mL);
 10999   004666  C025  F01F         	movff	turnLeft@mL,setMotorPWM@m
 11000   00466A  C026  F020         	movff	turnLeft@mL+1,setMotorPWM@m+1
 11001   00466E  EC67  F023         	call	_setMotorPWM	;wreg free
 11002   004672                     
 11003                           ;dc_motor.c: 411:         setMotorPWM(mR);
 11004   004672  C027  F01F         	movff	turnLeft@mR,setMotorPWM@m
 11005   004676  C028  F020         	movff	turnLeft@mR+1,setMotorPWM@m+1
 11006   00467A  EC67  F023         	call	_setMotorPWM	;wreg free
 11007   00467E                     
 11008                           ;dc_motor.c: 412:         for (i=0;i<turnRamp;i++) {
 11009   00467E  0E00               	movlw	0
 11010   004680  6E30               	movwf	(turnLeft@i+1)^0,c
 11011   004682  0E00               	movlw	0
 11012   004684  6E2F               	movwf	turnLeft@i^0,c
 11013   004686  EF4F  F023         	goto	l658
 11014   00468A                     l4844:
 11015                           
 11016                           ;dc_motor.c: 413:             _delay((unsigned long)((5)*(64000000/4000.0)));
 11017   00468A  0E68               	movlw	104
 11018   00468C  6E2C               	movwf	??_turnLeft^0,c
 11019   00468E  0EE4               	movlw	228
 11020   004690                     u6457:
 11021   004690  2EE8               	decfsz	wreg,f,c
 11022   004692  D7FE               	bra	u6457
 11023   004694  2E2C               	decfsz	??_turnLeft^0,f,c
 11024   004696  D7FC               	bra	u6457
 11025   004698  D000               	nop2	
 11026   00469A                     
 11027                           ;dc_motor.c: 414:         }
 11028   00469A  4A2F               	infsnz	turnLeft@i^0,f,c
 11029   00469C  2A30               	incf	(turnLeft@i+1)^0,f,c
 11030   00469E                     l658:
 11031   00469E  502B               	movf	turnLeft@turnRamp^0,w,c
 11032   0046A0  6E2C               	movwf	??_turnLeft^0,c
 11033   0046A2  6A2D               	clrf	(??_turnLeft+1)^0,c
 11034   0046A4  502C               	movf	??_turnLeft^0,w,c
 11035   0046A6  5C2F               	subwf	turnLeft@i^0,w,c
 11036   0046A8  5030               	movf	(turnLeft@i+1)^0,w,c
 11037   0046AA  0A80               	xorlw	128
 11038   0046AC  6E2E               	movwf	(??_turnLeft+2)^0,c
 11039   0046AE  502D               	movf	(??_turnLeft+1)^0,w,c
 11040   0046B0  0A80               	xorlw	128
 11041   0046B2  582E               	subwfb	(??_turnLeft+2)^0,w,c
 11042   0046B4  A0D8               	btfss	status,0,c
 11043   0046B6  EF5F  F023         	goto	u3931
 11044   0046BA  EF61  F023         	goto	u3930
 11045   0046BE                     u3931:
 11046   0046BE  EF45  F023         	goto	l4844
 11047   0046C2                     u3930:
 11048   0046C2                     
 11049                           ;dc_motor.c: 415:     }
 11050   0046C2  0631               	decf	turnLeft@cur_power^0,f,c
 11051   0046C4  A0D8               	btfss	status,0,c
 11052   0046C6  0632               	decf	(turnLeft@cur_power+1)^0,f,c
 11053   0046C8  EF10  F023         	goto	l4832
 11054   0046CC                     l661:
 11055   0046CC  0012               	return		;funcret
 11056   0046CE                     __end_of_turnLeft:
 11057                           	callstack 0
 11058                           
 11059 ;; *************** function _setMotorPWM *****************
 11060 ;; Defined at:
 11061 ;;		line 68 in file "dc_motor.c"
 11062 ;; Parameters:    Size  Location     Type
 11063 ;;  m               2   30[COMRAM] PTR struct DC_motor
 11064 ;;		 -> main@motorR(10), main@motorL(10), 
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;  negDuty         1   35[COMRAM] unsigned char 
 11067 ;;  posDuty         1   34[COMRAM] unsigned char 
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  1    wreg      void 
 11070 ;; Registers used:
 11071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11079 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11080 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11081 ;;Total ram usage:        6 bytes
 11082 ;; Hardware stack levels used: 1
 11083 ;; Hardware stack levels required when called: 7
 11084 ;; This function calls:
 11085 ;;		___lwdiv
 11086 ;;		___wmul
 11087 ;; This function is called by:
 11088 ;;		_stop
 11089 ;;		_turnLeft
 11090 ;;		_turnRight
 11091 ;;		_fullSpeedAhead
 11092 ;;		_reverseOneSquare
 11093 ;;		_wallAdjust
 11094 ;;		_reverseShort
 11095 ;; This function uses a non-reentrant model
 11096 ;;
 11097                           
 11098                           	psect	text36
 11099   0046CE                     __ptext36:
 11100                           	callstack 0
 11101   0046CE                     _setMotorPWM:
 11102                           	callstack 22
 11103   0046CE                     
 11104                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11105   0046CE  EE20 F002          	lfsr	2,2
 11106   0046D2  501F               	movf	setMotorPWM@m^0,w,c
 11107   0046D4  26D9               	addwf	fsr2l,f,c
 11108   0046D6  5020               	movf	(setMotorPWM@m+1)^0,w,c
 11109   0046D8  22DA               	addwfc	fsr2h,f,c
 11110   0046DA  50DF               	movf	indf2,w,c
 11111   0046DC  B4D8               	btfsc	status,2,c
 11112   0046DE  EF73  F023         	goto	u3741
 11113   0046E2  EF75  F023         	goto	u3740
 11114   0046E6                     u3741:
 11115   0046E6  EFA9  F023         	goto	l4664
 11116   0046EA                     u3740:
 11117   0046EA                     
 11118                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11119   0046EA  C01F  FFD9         	movff	setMotorPWM@m,fsr2l
 11120   0046EE  C020  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11121   0046F2  50DF               	movf	indf2,w,c
 11122   0046F4  6E21               	movwf	??_setMotorPWM^0,c
 11123   0046F6  5021               	movf	??_setMotorPWM^0,w,c
 11124   0046F8  6E12               	movwf	___wmul@multiplier^0,c
 11125   0046FA  6A13               	clrf	(___wmul@multiplier+1)^0,c
 11126   0046FC  EE20 F003          	lfsr	2,3
 11127   004700  501F               	movf	setMotorPWM@m^0,w,c
 11128   004702  26D9               	addwf	fsr2l,f,c
 11129   004704  5020               	movf	(setMotorPWM@m+1)^0,w,c
 11130   004706  22DA               	addwfc	fsr2h,f,c
 11131   004708  CFDE F014          	movff	postinc2,___wmul@multiplicand
 11132   00470C  CFDD F015          	movff	postdec2,___wmul@multiplicand+1
 11133   004710  EC5D  F029         	call	___wmul	;wreg free
 11134   004714  C012  F018         	movff	?___wmul,___lwdiv@dividend
 11135   004718  C013  F019         	movff	?___wmul+1,___lwdiv@dividend+1
 11136   00471C  0E00               	movlw	0
 11137   00471E  6E1B               	movwf	(___lwdiv@divisor+1)^0,c
 11138   004720  0E64               	movlw	100
 11139   004722  6E1A               	movwf	___lwdiv@divisor^0,c
 11140   004724  EC77  F027         	call	___lwdiv	;wreg free
 11141   004728  EE20 F003          	lfsr	2,3
 11142   00472C  501F               	movf	setMotorPWM@m^0,w,c
 11143   00472E  26D9               	addwf	fsr2l,f,c
 11144   004730  5020               	movf	(setMotorPWM@m+1)^0,w,c
 11145   004732  22DA               	addwfc	fsr2h,f,c
 11146   004734  50DF               	movf	indf2,w,c
 11147   004736  6E22               	movwf	(??_setMotorPWM+1)^0,c
 11148   004738  5018               	movf	?___lwdiv^0,w,c
 11149   00473A  5C22               	subwf	(??_setMotorPWM+1)^0,w,c
 11150   00473C  6E23               	movwf	setMotorPWM@posDuty^0,c
 11151   00473E                     
 11152                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11153   00473E  EE20 F003          	lfsr	2,3
 11154   004742  501F               	movf	setMotorPWM@m^0,w,c
 11155   004744  26D9               	addwf	fsr2l,f,c
 11156   004746  5020               	movf	(setMotorPWM@m+1)^0,w,c
 11157   004748  22DA               	addwfc	fsr2h,f,c
 11158   00474A  50DF               	movf	indf2,w,c
 11159   00474C  6E24               	movwf	setMotorPWM@negDuty^0,c
 11160                           
 11161                           ;dc_motor.c: 75:     }
 11162   00474E  EFCC  F023         	goto	l4668
 11163   004752                     l4664:
 11164                           
 11165                           ;dc_motor.c: 77:         posDuty=0;
 11166   004752  0E00               	movlw	0
 11167   004754  6E23               	movwf	setMotorPWM@posDuty^0,c
 11168   004756                     
 11169                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11170   004756  C01F  FFD9         	movff	setMotorPWM@m,fsr2l
 11171   00475A  C020  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11172   00475E  50DF               	movf	indf2,w,c
 11173   004760  6E21               	movwf	??_setMotorPWM^0,c
 11174   004762  5021               	movf	??_setMotorPWM^0,w,c
 11175   004764  6E12               	movwf	___wmul@multiplier^0,c
 11176   004766  6A13               	clrf	(___wmul@multiplier+1)^0,c
 11177   004768  EE20 F003          	lfsr	2,3
 11178   00476C  501F               	movf	setMotorPWM@m^0,w,c
 11179   00476E  26D9               	addwf	fsr2l,f,c
 11180   004770  5020               	movf	(setMotorPWM@m+1)^0,w,c
 11181   004772  22DA               	addwfc	fsr2h,f,c
 11182   004774  CFDE F014          	movff	postinc2,___wmul@multiplicand
 11183   004778  CFDD F015          	movff	postdec2,___wmul@multiplicand+1
 11184   00477C  EC5D  F029         	call	___wmul	;wreg free
 11185   004780  C012  F018         	movff	?___wmul,___lwdiv@dividend
 11186   004784  C013  F019         	movff	?___wmul+1,___lwdiv@dividend+1
 11187   004788  0E00               	movlw	0
 11188   00478A  6E1B               	movwf	(___lwdiv@divisor+1)^0,c
 11189   00478C  0E64               	movlw	100
 11190   00478E  6E1A               	movwf	___lwdiv@divisor^0,c
 11191   004790  EC77  F027         	call	___lwdiv	;wreg free
 11192   004794  5018               	movf	?___lwdiv^0,w,c
 11193   004796  6E24               	movwf	setMotorPWM@negDuty^0,c
 11194   004798                     l4668:
 11195                           
 11196                           ;dc_motor.c: 81:     if (m->direction) {
 11197   004798  EE20 F001          	lfsr	2,1
 11198   00479C  501F               	movf	setMotorPWM@m^0,w,c
 11199   00479E  26D9               	addwf	fsr2l,f,c
 11200   0047A0  5020               	movf	(setMotorPWM@m+1)^0,w,c
 11201   0047A2  22DA               	addwfc	fsr2h,f,c
 11202   0047A4  50DF               	movf	indf2,w,c
 11203   0047A6  B4D8               	btfsc	status,2,c
 11204   0047A8  EFD8  F023         	goto	u3751
 11205   0047AC  EFDA  F023         	goto	u3750
 11206   0047B0                     u3751:
 11207   0047B0  EFFC  F023         	goto	l4672
 11208   0047B4                     u3750:
 11209   0047B4                     
 11210                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 11211   0047B4  EE20 F005          	lfsr	2,5
 11212   0047B8  501F               	movf	setMotorPWM@m^0,w,c
 11213   0047BA  26D9               	addwf	fsr2l,f,c
 11214   0047BC  5020               	movf	(setMotorPWM@m+1)^0,w,c
 11215   0047BE  22DA               	addwfc	fsr2h,f,c
 11216   0047C0  CFDE F021          	movff	postinc2,??_setMotorPWM
 11217   0047C4  CFDD F022          	movff	postdec2,??_setMotorPWM+1
 11218   0047C8  C021  FFD9         	movff	??_setMotorPWM,fsr2l
 11219   0047CC  C022  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11220   0047D0  C023  FFDF         	movff	setMotorPWM@posDuty,indf2
 11221                           
 11222                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 11223   0047D4  EE20 F007          	lfsr	2,7
 11224   0047D8  501F               	movf	setMotorPWM@m^0,w,c
 11225   0047DA  26D9               	addwf	fsr2l,f,c
 11226   0047DC  5020               	movf	(setMotorPWM@m+1)^0,w,c
 11227   0047DE  22DA               	addwfc	fsr2h,f,c
 11228   0047E0  CFDE F021          	movff	postinc2,??_setMotorPWM
 11229   0047E4  CFDD F022          	movff	postdec2,??_setMotorPWM+1
 11230   0047E8  C021  FFD9         	movff	??_setMotorPWM,fsr2l
 11231   0047EC  C022  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11232   0047F0  C024  FFDF         	movff	setMotorPWM@negDuty,indf2
 11233                           
 11234                           ;dc_motor.c: 84:     } else {
 11235   0047F4  EF1C  F024         	goto	l567
 11236   0047F8                     l4672:
 11237                           
 11238                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
 11239   0047F8  EE20 F005          	lfsr	2,5
 11240   0047FC  501F               	movf	setMotorPWM@m^0,w,c
 11241   0047FE  26D9               	addwf	fsr2l,f,c
 11242   004800  5020               	movf	(setMotorPWM@m+1)^0,w,c
 11243   004802  22DA               	addwfc	fsr2h,f,c
 11244   004804  CFDE F021          	movff	postinc2,??_setMotorPWM
 11245   004808  CFDD F022          	movff	postdec2,??_setMotorPWM+1
 11246   00480C  C021  FFD9         	movff	??_setMotorPWM,fsr2l
 11247   004810  C022  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11248   004814  C024  FFDF         	movff	setMotorPWM@negDuty,indf2
 11249                           
 11250                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
 11251   004818  EE20 F007          	lfsr	2,7
 11252   00481C  501F               	movf	setMotorPWM@m^0,w,c
 11253   00481E  26D9               	addwf	fsr2l,f,c
 11254   004820  5020               	movf	(setMotorPWM@m+1)^0,w,c
 11255   004822  22DA               	addwfc	fsr2h,f,c
 11256   004824  CFDE F021          	movff	postinc2,??_setMotorPWM
 11257   004828  CFDD F022          	movff	postdec2,??_setMotorPWM+1
 11258   00482C  C021  FFD9         	movff	??_setMotorPWM,fsr2l
 11259   004830  C022  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11260   004834  C023  FFDF         	movff	setMotorPWM@posDuty,indf2
 11261   004838                     l567:
 11262   004838  0012               	return		;funcret
 11263   00483A                     __end_of_setMotorPWM:
 11264                           	callstack 0
 11265                           
 11266 ;; *************** function ___wmul *****************
 11267 ;; Defined at:
 11268 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
 11269 ;; Parameters:    Size  Location     Type
 11270 ;;  multiplier      2   17[COMRAM] unsigned int 
 11271 ;;  multiplicand    2   19[COMRAM] unsigned int 
 11272 ;; Auto vars:     Size  Location     Type
 11273 ;;  product         2   21[COMRAM] unsigned int 
 11274 ;; Return value:  Size  Location     Type
 11275 ;;                  2   17[COMRAM] unsigned int 
 11276 ;; Registers used:
 11277 ;;		wreg, status,2, status,0, prodl, prodh
 11278 ;; Tracked objects:
 11279 ;;		On entry : 0/0
 11280 ;;		On exit  : 0/0
 11281 ;;		Unchanged: 0/0
 11282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11286 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11287 ;;Total ram usage:        6 bytes
 11288 ;; Hardware stack levels used: 1
 11289 ;; Hardware stack levels required when called: 6
 11290 ;; This function calls:
 11291 ;;		Nothing
 11292 ;; This function is called by:
 11293 ;;		_setMotorPWM
 11294 ;; This function uses a non-reentrant model
 11295 ;;
 11296                           
 11297                           	psect	text37
 11298   0052BA                     __ptext37:
 11299                           	callstack 0
 11300   0052BA                     ___wmul:
 11301                           	callstack 22
 11302   0052BA  5012               	movf	___wmul@multiplier^0,w,c
 11303   0052BC  0214               	mulwf	___wmul@multiplicand^0,c
 11304   0052BE  CFF3 F016          	movff	prodl,___wmul@product
 11305   0052C2  CFF4 F017          	movff	prodh,___wmul@product+1
 11306   0052C6  5012               	movf	___wmul@multiplier^0,w,c
 11307   0052C8  0215               	mulwf	(___wmul@multiplicand+1)^0,c
 11308   0052CA  50F3               	movf	243,w,c
 11309   0052CC  2617               	addwf	(___wmul@product+1)^0,f,c
 11310   0052CE  5013               	movf	(___wmul@multiplier+1)^0,w,c
 11311   0052D0  0214               	mulwf	___wmul@multiplicand^0,c
 11312   0052D2  50F3               	movf	243,w,c
 11313   0052D4  2617               	addwf	(___wmul@product+1)^0,f,c
 11314   0052D6  C016  F012         	movff	___wmul@product,?___wmul
 11315   0052DA  C017  F013         	movff	___wmul@product+1,?___wmul+1
 11316   0052DE  0012               	return		;funcret
 11317   0052E0                     __end_of___wmul:
 11318                           	callstack 0
 11319                           
 11320 ;; *************** function ___lwdiv *****************
 11321 ;; Defined at:
 11322 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;  dividend        2   23[COMRAM] unsigned int 
 11325 ;;  divisor         2   25[COMRAM] unsigned int 
 11326 ;; Auto vars:     Size  Location     Type
 11327 ;;  quotient        2   28[COMRAM] unsigned int 
 11328 ;;  counter         1   27[COMRAM] unsigned char 
 11329 ;; Return value:  Size  Location     Type
 11330 ;;                  2   23[COMRAM] unsigned int 
 11331 ;; Registers used:
 11332 ;;		wreg, status,2, status,0
 11333 ;; Tracked objects:
 11334 ;;		On entry : 0/0
 11335 ;;		On exit  : 0/0
 11336 ;;		Unchanged: 0/0
 11337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11339 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11341 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11342 ;;Total ram usage:        7 bytes
 11343 ;; Hardware stack levels used: 1
 11344 ;; Hardware stack levels required when called: 6
 11345 ;; This function calls:
 11346 ;;		Nothing
 11347 ;; This function is called by:
 11348 ;;		_color_clear_init_interrupts
 11349 ;;		_setMotorPWM
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	text38
 11354   004EEE                     __ptext38:
 11355                           	callstack 0
 11356   004EEE                     ___lwdiv:
 11357                           	callstack 22
 11358   004EEE  0E00               	movlw	0
 11359   004EF0  6E1E               	movwf	(___lwdiv@quotient+1)^0,c
 11360   004EF2  0E00               	movlw	0
 11361   004EF4  6E1D               	movwf	___lwdiv@quotient^0,c
 11362   004EF6  501A               	movf	___lwdiv@divisor^0,w,c
 11363   004EF8  101B               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11364   004EFA  B4D8               	btfsc	status,2,c
 11365   004EFC  EF82  F027         	goto	u3711
 11366   004F00  EF84  F027         	goto	u3710
 11367   004F04                     u3711:
 11368   004F04  EFAC  F027         	goto	l1278
 11369   004F08                     u3710:
 11370   004F08  0E01               	movlw	1
 11371   004F0A  6E1C               	movwf	___lwdiv@counter^0,c
 11372   004F0C  EF8C  F027         	goto	l4632
 11373   004F10                     l4630:
 11374   004F10  90D8               	bcf	status,0,c
 11375   004F12  361A               	rlcf	___lwdiv@divisor^0,f,c
 11376   004F14  361B               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11377   004F16  2A1C               	incf	___lwdiv@counter^0,f,c
 11378   004F18                     l4632:
 11379   004F18  AE1B               	btfss	(___lwdiv@divisor+1)^0,7,c
 11380   004F1A  EF91  F027         	goto	u3721
 11381   004F1E  EF93  F027         	goto	u3720
 11382   004F22                     u3721:
 11383   004F22  EF88  F027         	goto	l4630
 11384   004F26                     u3720:
 11385   004F26                     l4634:
 11386   004F26  90D8               	bcf	status,0,c
 11387   004F28  361D               	rlcf	___lwdiv@quotient^0,f,c
 11388   004F2A  361E               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11389   004F2C  501A               	movf	___lwdiv@divisor^0,w,c
 11390   004F2E  5C18               	subwf	___lwdiv@dividend^0,w,c
 11391   004F30  501B               	movf	(___lwdiv@divisor+1)^0,w,c
 11392   004F32  5819               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11393   004F34  A0D8               	btfss	status,0,c
 11394   004F36  EF9F  F027         	goto	u3731
 11395   004F3A  EFA1  F027         	goto	u3730
 11396   004F3E                     u3731:
 11397   004F3E  EFA6  F027         	goto	l4642
 11398   004F42                     u3730:
 11399   004F42  501A               	movf	___lwdiv@divisor^0,w,c
 11400   004F44  5E18               	subwf	___lwdiv@dividend^0,f,c
 11401   004F46  501B               	movf	(___lwdiv@divisor+1)^0,w,c
 11402   004F48  5A19               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11403   004F4A  801D               	bsf	___lwdiv@quotient^0,0,c
 11404   004F4C                     l4642:
 11405   004F4C  90D8               	bcf	status,0,c
 11406   004F4E  321B               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11407   004F50  321A               	rrcf	___lwdiv@divisor^0,f,c
 11408   004F52  2E1C               	decfsz	___lwdiv@counter^0,f,c
 11409   004F54  EF93  F027         	goto	l4634
 11410   004F58                     l1278:
 11411   004F58  C01D  F018         	movff	___lwdiv@quotient,?___lwdiv
 11412   004F5C  C01E  F019         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11413   004F60  0012               	return		;funcret
 11414   004F62                     __end_of___lwdiv:
 11415                           	callstack 0
 11416                           
 11417 ;; *************** function _batteryLevel *****************
 11418 ;; Defined at:
 11419 ;;		line 6 in file "battery.c"
 11420 ;; Parameters:    Size  Location     Type
 11421 ;;		None
 11422 ;; Auto vars:     Size  Location     Type
 11423 ;;  batteryQuart    1   26[COMRAM] unsigned char 
 11424 ;;  batteryVolta    1   25[COMRAM] unsigned char 
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  1    wreg      void 
 11427 ;; Registers used:
 11428 ;;		wreg, status,2, status,0, cstack
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11438 ;;Total ram usage:        2 bytes
 11439 ;; Hardware stack levels used: 1
 11440 ;; Hardware stack levels required when called: 7
 11441 ;; This function calls:
 11442 ;;		_ADC_getval
 11443 ;;		_ADC_init
 11444 ;;		___awdiv
 11445 ;; This function is called by:
 11446 ;;		_main
 11447 ;; This function uses a non-reentrant model
 11448 ;;
 11449                           
 11450                           	psect	text39
 11451   005096                     __ptext39:
 11452                           	callstack 0
 11453   005096                     _batteryLevel:
 11454                           	callstack 23
 11455   005096                     
 11456                           ;battery.c: 7:     ADC_init();
 11457   005096  ECD4  F029         	call	_ADC_init	;wreg free
 11458                           
 11459                           ;battery.c: 8:     unsigned char batteryVoltage;;battery.c: 9:     unsigned char battery
      +                          Quarter;;battery.c: 11:     batteryVoltage = ADC_getval();
 11460   00509A  ECE1  F029         	call	_ADC_getval	;wreg free
 11461   00509E  6E1A               	movwf	batteryLevel@batteryVoltage^0,c
 11462   0050A0                     
 11463                           ;battery.c: 12:     batteryQuarter = batteryVoltage/24;
 11464   0050A0  C01A  F012         	movff	batteryLevel@batteryVoltage,___awdiv@dividend
 11465   0050A4  6A13               	clrf	(___awdiv@dividend+1)^0,c
 11466   0050A6  0E00               	movlw	0
 11467   0050A8  6E15               	movwf	(___awdiv@divisor+1)^0,c
 11468   0050AA  0E18               	movlw	24
 11469   0050AC  6E14               	movwf	___awdiv@divisor^0,c
 11470   0050AE  EC9A  F025         	call	___awdiv	;wreg free
 11471   0050B2  5012               	movf	?___awdiv^0,w,c
 11472   0050B4  6E1B               	movwf	batteryLevel@batteryQuarter^0,c
 11473   0050B6                     
 11474                           ;battery.c: 13:     if (batteryQuarter & 0b10) {LATDbits.LATD7=1;} else {LATDbits.LATD7=
      +                          0;}
 11475   0050B6  A21B               	btfss	batteryLevel@batteryQuarter^0,1,c
 11476   0050B8  EF60  F028         	goto	u4401
 11477   0050BC  EF62  F028         	goto	u4400
 11478   0050C0                     u4401:
 11479   0050C0  EF65  F028         	goto	l479
 11480   0050C4                     u4400:
 11481   0050C4  8E7C               	bsf	124,7,c	;volatile
 11482   0050C6  EF66  F028         	goto	l480
 11483   0050CA                     l479:
 11484   0050CA  9E7C               	bcf	124,7,c	;volatile
 11485   0050CC                     l480:
 11486                           
 11487                           ;battery.c: 14:     if (batteryQuarter & 0b01) {LATHbits.LATH3=1;} else {LATHbits.LATH3=
      +                          0;}
 11488   0050CC  A01B               	btfss	batteryLevel@batteryQuarter^0,0,c
 11489   0050CE  EF6B  F028         	goto	u4411
 11490   0050D2  EF6D  F028         	goto	u4410
 11491   0050D6                     u4411:
 11492   0050D6  EF70  F028         	goto	l481
 11493   0050DA                     u4410:
 11494   0050DA  8680               	bsf	128,3,c	;volatile
 11495   0050DC  EF71  F028         	goto	l483
 11496   0050E0                     l481:
 11497   0050E0  9680               	bcf	128,3,c	;volatile
 11498   0050E2                     l483:
 11499   0050E2  0012               	return		;funcret
 11500   0050E4                     __end_of_batteryLevel:
 11501                           	callstack 0
 11502                           
 11503 ;; *************** function ___awdiv *****************
 11504 ;; Defined at:
 11505 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 11506 ;; Parameters:    Size  Location     Type
 11507 ;;  dividend        2   17[COMRAM] int 
 11508 ;;  divisor         2   19[COMRAM] int 
 11509 ;; Auto vars:     Size  Location     Type
 11510 ;;  quotient        2   23[COMRAM] int 
 11511 ;;  sign            1   22[COMRAM] unsigned char 
 11512 ;;  counter         1   21[COMRAM] unsigned char 
 11513 ;; Return value:  Size  Location     Type
 11514 ;;                  2   17[COMRAM] int 
 11515 ;; Registers used:
 11516 ;;		wreg, status,2, status,0
 11517 ;; Tracked objects:
 11518 ;;		On entry : 0/0
 11519 ;;		On exit  : 0/0
 11520 ;;		Unchanged: 0/0
 11521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11523 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11525 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11526 ;;Total ram usage:        8 bytes
 11527 ;; Hardware stack levels used: 1
 11528 ;; Hardware stack levels required when called: 6
 11529 ;; This function calls:
 11530 ;;		Nothing
 11531 ;; This function is called by:
 11532 ;;		_batteryLevel
 11533 ;; This function uses a non-reentrant model
 11534 ;;
 11535                           
 11536                           	psect	text40
 11537   004B34                     __ptext40:
 11538                           	callstack 0
 11539   004B34                     ___awdiv:
 11540                           	callstack 23
 11541   004B34  0E00               	movlw	0
 11542   004B36  6E17               	movwf	___awdiv@sign^0,c
 11543   004B38  BE15               	btfsc	(___awdiv@divisor+1)^0,7,c
 11544   004B3A  EFA3  F025         	goto	u4340
 11545   004B3E  EFA1  F025         	goto	u4341
 11546   004B42                     u4341:
 11547   004B42  EFA9  F025         	goto	l5238
 11548   004B46                     u4340:
 11549   004B46  6C14               	negf	___awdiv@divisor^0,c
 11550   004B48  1E15               	comf	(___awdiv@divisor+1)^0,f,c
 11551   004B4A  B0D8               	btfsc	status,0,c
 11552   004B4C  2A15               	incf	(___awdiv@divisor+1)^0,f,c
 11553   004B4E  0E01               	movlw	1
 11554   004B50  6E17               	movwf	___awdiv@sign^0,c
 11555   004B52                     l5238:
 11556   004B52  BE13               	btfsc	(___awdiv@dividend+1)^0,7,c
 11557   004B54  EFB0  F025         	goto	u4350
 11558   004B58  EFAE  F025         	goto	u4351
 11559   004B5C                     u4351:
 11560   004B5C  EFB6  F025         	goto	l5244
 11561   004B60                     u4350:
 11562   004B60  6C12               	negf	___awdiv@dividend^0,c
 11563   004B62  1E13               	comf	(___awdiv@dividend+1)^0,f,c
 11564   004B64  B0D8               	btfsc	status,0,c
 11565   004B66  2A13               	incf	(___awdiv@dividend+1)^0,f,c
 11566   004B68  0E01               	movlw	1
 11567   004B6A  1A17               	xorwf	___awdiv@sign^0,f,c
 11568   004B6C                     l5244:
 11569   004B6C  0E00               	movlw	0
 11570   004B6E  6E19               	movwf	(___awdiv@quotient+1)^0,c
 11571   004B70  0E00               	movlw	0
 11572   004B72  6E18               	movwf	___awdiv@quotient^0,c
 11573   004B74  5014               	movf	___awdiv@divisor^0,w,c
 11574   004B76  1015               	iorwf	(___awdiv@divisor+1)^0,w,c
 11575   004B78  B4D8               	btfsc	status,2,c
 11576   004B7A  EFC1  F025         	goto	u4361
 11577   004B7E  EFC3  F025         	goto	u4360
 11578   004B82                     u4361:
 11579   004B82  EFEB  F025         	goto	l5266
 11580   004B86                     u4360:
 11581   004B86  0E01               	movlw	1
 11582   004B88  6E16               	movwf	___awdiv@counter^0,c
 11583   004B8A  EFCB  F025         	goto	l5252
 11584   004B8E                     l5250:
 11585   004B8E  90D8               	bcf	status,0,c
 11586   004B90  3614               	rlcf	___awdiv@divisor^0,f,c
 11587   004B92  3615               	rlcf	(___awdiv@divisor+1)^0,f,c
 11588   004B94  2A16               	incf	___awdiv@counter^0,f,c
 11589   004B96                     l5252:
 11590   004B96  AE15               	btfss	(___awdiv@divisor+1)^0,7,c
 11591   004B98  EFD0  F025         	goto	u4371
 11592   004B9C  EFD2  F025         	goto	u4370
 11593   004BA0                     u4371:
 11594   004BA0  EFC7  F025         	goto	l5250
 11595   004BA4                     u4370:
 11596   004BA4                     l5254:
 11597   004BA4  90D8               	bcf	status,0,c
 11598   004BA6  3618               	rlcf	___awdiv@quotient^0,f,c
 11599   004BA8  3619               	rlcf	(___awdiv@quotient+1)^0,f,c
 11600   004BAA  5014               	movf	___awdiv@divisor^0,w,c
 11601   004BAC  5C12               	subwf	___awdiv@dividend^0,w,c
 11602   004BAE  5015               	movf	(___awdiv@divisor+1)^0,w,c
 11603   004BB0  5813               	subwfb	(___awdiv@dividend+1)^0,w,c
 11604   004BB2  A0D8               	btfss	status,0,c
 11605   004BB4  EFDE  F025         	goto	u4381
 11606   004BB8  EFE0  F025         	goto	u4380
 11607   004BBC                     u4381:
 11608   004BBC  EFE5  F025         	goto	l5262
 11609   004BC0                     u4380:
 11610   004BC0  5014               	movf	___awdiv@divisor^0,w,c
 11611   004BC2  5E12               	subwf	___awdiv@dividend^0,f,c
 11612   004BC4  5015               	movf	(___awdiv@divisor+1)^0,w,c
 11613   004BC6  5A13               	subwfb	(___awdiv@dividend+1)^0,f,c
 11614   004BC8  8018               	bsf	___awdiv@quotient^0,0,c
 11615   004BCA                     l5262:
 11616   004BCA  90D8               	bcf	status,0,c
 11617   004BCC  3215               	rrcf	(___awdiv@divisor+1)^0,f,c
 11618   004BCE  3214               	rrcf	___awdiv@divisor^0,f,c
 11619   004BD0  2E16               	decfsz	___awdiv@counter^0,f,c
 11620   004BD2  EFD2  F025         	goto	l5254
 11621   004BD6                     l5266:
 11622   004BD6  5017               	movf	___awdiv@sign^0,w,c
 11623   004BD8  B4D8               	btfsc	status,2,c
 11624   004BDA  EFF1  F025         	goto	u4391
 11625   004BDE  EFF3  F025         	goto	u4390
 11626   004BE2                     u4391:
 11627   004BE2  EFF7  F025         	goto	l5270
 11628   004BE6                     u4390:
 11629   004BE6  6C18               	negf	___awdiv@quotient^0,c
 11630   004BE8  1E19               	comf	(___awdiv@quotient+1)^0,f,c
 11631   004BEA  B0D8               	btfsc	status,0,c
 11632   004BEC  2A19               	incf	(___awdiv@quotient+1)^0,f,c
 11633   004BEE                     l5270:
 11634   004BEE  C018  F012         	movff	___awdiv@quotient,?___awdiv
 11635   004BF2  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
 11636   004BF6  0012               	return		;funcret
 11637   004BF8                     __end_of___awdiv:
 11638                           	callstack 0
 11639                           
 11640 ;; *************** function _ADC_init *****************
 11641 ;; Defined at:
 11642 ;;		line 9 in file "ADC.c"
 11643 ;; Parameters:    Size  Location     Type
 11644 ;;		None
 11645 ;; Auto vars:     Size  Location     Type
 11646 ;;		None
 11647 ;; Return value:  Size  Location     Type
 11648 ;;                  1    wreg      void 
 11649 ;; Registers used:
 11650 ;;		wreg, status,2
 11651 ;; Tracked objects:
 11652 ;;		On entry : 0/0
 11653 ;;		On exit  : 0/0
 11654 ;;		Unchanged: 0/0
 11655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11660 ;;Total ram usage:        0 bytes
 11661 ;; Hardware stack levels used: 1
 11662 ;; Hardware stack levels required when called: 6
 11663 ;; This function calls:
 11664 ;;		Nothing
 11665 ;; This function is called by:
 11666 ;;		_batteryLevel
 11667 ;; This function uses a non-reentrant model
 11668 ;;
 11669                           
 11670                           	psect	text41
 11671   0053A8                     __ptext41:
 11672                           	callstack 0
 11673   0053A8                     _ADC_init:
 11674                           	callstack 23
 11675   0053A8                     
 11676                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 11677   0053A8  8C86               	bsf	134,6,c	;volatile
 11678                           
 11679                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 11680   0053AA  010E               	movlb	14	; () banked
 11681   0053AC  8DB4               	bsf	180,6,b	;volatile
 11682                           
 11683                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 11684   0053AE  010F               	movlb	15	; () banked
 11685   0053B0  9958               	bcf	88,4,b	;volatile
 11686   0053B2                     
 11687                           ; BSR set to: 15
 11688                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 11689   0053B2  0EFC               	movlw	-4
 11690   0053B4  1758               	andwf	88,f,b	;volatile
 11691                           
 11692                           ;ADC.c: 17:     ADPCH=0b101110;
 11693   0053B6  0E2E               	movlw	46
 11694   0053B8  6F5F               	movwf	95,b	;volatile
 11695   0053BA                     
 11696                           ; BSR set to: 15
 11697                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 11698   0053BA  9460               	bcf	96,2,c	;volatile
 11699   0053BC                     
 11700                           ; BSR set to: 15
 11701                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 11702   0053BC  8860               	bsf	96,4,c	;volatile
 11703   0053BE                     
 11704                           ; BSR set to: 15
 11705                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 11706   0053BE  8E60               	bsf	96,7,c	;volatile
 11707   0053C0                     
 11708                           ; BSR set to: 15
 11709   0053C0  0012               	return		;funcret
 11710   0053C2                     __end_of_ADC_init:
 11711                           	callstack 0
 11712                           
 11713 ;; *************** function _ADC_getval *****************
 11714 ;; Defined at:
 11715 ;;		line 23 in file "ADC.c"
 11716 ;; Parameters:    Size  Location     Type
 11717 ;;		None
 11718 ;; Auto vars:     Size  Location     Type
 11719 ;;  tmpval          1   17[COMRAM] unsigned char 
 11720 ;; Return value:  Size  Location     Type
 11721 ;;                  1    wreg      unsigned char 
 11722 ;; Registers used:
 11723 ;;		wreg, status,2
 11724 ;; Tracked objects:
 11725 ;;		On entry : 0/0
 11726 ;;		On exit  : 0/0
 11727 ;;		Unchanged: 0/0
 11728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11733 ;;Total ram usage:        1 bytes
 11734 ;; Hardware stack levels used: 1
 11735 ;; Hardware stack levels required when called: 6
 11736 ;; This function calls:
 11737 ;;		Nothing
 11738 ;; This function is called by:
 11739 ;;		_batteryLevel
 11740 ;; This function uses a non-reentrant model
 11741 ;;
 11742                           
 11743                           	psect	text42
 11744   0053C2                     __ptext42:
 11745                           	callstack 0
 11746   0053C2                     _ADC_getval:
 11747                           	callstack 23
 11748   0053C2                     
 11749                           ;ADC.c: 25:     unsigned char tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
 11750   0053C2  8060               	bsf	96,0,c	;volatile
 11751   0053C4                     l465:
 11752   0053C4  B060               	btfsc	96,0,c	;volatile
 11753   0053C6  EFE7  F029         	goto	u4181
 11754   0053CA  EFE9  F029         	goto	u4180
 11755   0053CE                     u4181:
 11756   0053CE  EFE2  F029         	goto	l465
 11757   0053D2                     u4180:
 11758   0053D2                     
 11759                           ;ADC.c: 31:     tmpval = ADRESH;
 11760   0053D2  CF64 F012          	movff	3940,ADC_getval@tmpval	;volatile
 11761   0053D6                     
 11762                           ;ADC.c: 35:     return tmpval;
 11763   0053D6  5012               	movf	ADC_getval@tmpval^0,w,c
 11764   0053D8  0012               	return		;funcret
 11765   0053DA                     __end_of_ADC_getval:
 11766                           	callstack 0
 11767                           
 11768 ;; *************** function _Timer0_init *****************
 11769 ;; Defined at:
 11770 ;;		line 7 in file "timers.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;		None
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;		None
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  1    wreg      void 
 11777 ;; Registers used:
 11778 ;;		wreg, status,2
 11779 ;; Tracked objects:
 11780 ;;		On entry : 0/0
 11781 ;;		On exit  : 0/0
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11788 ;;Total ram usage:        0 bytes
 11789 ;; Hardware stack levels used: 1
 11790 ;; Hardware stack levels required when called: 6
 11791 ;; This function calls:
 11792 ;;		Nothing
 11793 ;; This function is called by:
 11794 ;;		_main
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           	psect	text43
 11799   00534A                     __ptext43:
 11800                           	callstack 0
 11801   00534A                     _Timer0_init:
 11802                           	callstack 24
 11803   00534A                     
 11804                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 11805   00534A  50D6               	movf	214,w,c	;volatile
 11806   00534C  0B1F               	andlw	-225
 11807   00534E  0940               	iorlw	64
 11808   005350  6ED6               	movwf	214,c	;volatile
 11809   005352                     
 11810                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 11811   005352  88D6               	bsf	214,4,c	;volatile
 11812                           
 11813                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1011;
 11814   005354  50D6               	movf	214,w,c	;volatile
 11815   005356  0BF0               	andlw	-16
 11816   005358  090B               	iorlw	11
 11817   00535A  6ED6               	movwf	214,c	;volatile
 11818   00535C                     
 11819                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 11820   00535C  88D5               	bsf	213,4,c	;volatile
 11821                           
 11822                           ;timers.c: 15:     TMR0H=0;
 11823   00535E  0E00               	movlw	0
 11824   005360  6ED4               	movwf	212,c	;volatile
 11825                           
 11826                           ;timers.c: 16:     TMR0L=0;
 11827   005362  0E00               	movlw	0
 11828   005364  6ED3               	movwf	211,c	;volatile
 11829   005366                     
 11830                           ;timers.c: 17:     T0CON0bits.T0EN=1;
 11831   005366  8ED5               	bsf	213,7,c	;volatile
 11832   005368  0012               	return		;funcret
 11833   00536A                     __end_of_Timer0_init:
 11834                           	callstack 0
 11835                           
 11836 ;; *************** function _Interrupts_init *****************
 11837 ;; Defined at:
 11838 ;;		line 11 in file "interrupts.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;		None
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;		None
 11843 ;; Return value:  Size  Location     Type
 11844 ;;                  1    wreg      void 
 11845 ;; Registers used:
 11846 ;;		None
 11847 ;; Tracked objects:
 11848 ;;		On entry : 0/0
 11849 ;;		On exit  : 0/0
 11850 ;;		Unchanged: 0/0
 11851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11856 ;;Total ram usage:        0 bytes
 11857 ;; Hardware stack levels used: 1
 11858 ;; Hardware stack levels required when called: 6
 11859 ;; This function calls:
 11860 ;;		Nothing
 11861 ;; This function is called by:
 11862 ;;		_main
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           	psect	text44
 11867   0053F2                     __ptext44:
 11868                           	callstack 0
 11869   0053F2                     _Interrupts_init:
 11870                           	callstack 24
 11871   0053F2                     
 11872                           ;interrupts.c: 14:     TRISBbits.TRISB0=1;
 11873   0053F2  8082               	bsf	130,0,c	;volatile
 11874                           
 11875                           ;interrupts.c: 15:     ANSELBbits.ANSELB0=0;
 11876   0053F4  010E               	movlb	14	; () banked
 11877   0053F6  919A               	bcf	154,0,b	;volatile
 11878                           
 11879                           ;interrupts.c: 16:     PIE0bits.INT0IE=1;
 11880   0053F8  8129               	bsf	41,0,b	;volatile
 11881                           
 11882                           ;interrupts.c: 17:     IPR0bits.INT0IP=1;
 11883   0053FA  811F               	bsf	31,0,b	;volatile
 11884                           
 11885                           ;interrupts.c: 18:     INTCONbits.INT0EDG=0;
 11886   0053FC  90F2               	bcf	242,0,c	;volatile
 11887                           
 11888                           ;interrupts.c: 22:     TMR0IP=0;
 11889   0053FE  9B1F               	bcf	31,5,b	;volatile
 11890                           
 11891                           ;interrupts.c: 26:     PIE4bits.RC4IE=1;
 11892   005400  872D               	bsf	45,3,b	;volatile
 11893                           
 11894                           ;interrupts.c: 27:     INTCONbits.PEIE=1;
 11895   005402  8CF2               	bsf	242,6,c	;volatile
 11896                           
 11897                           ;interrupts.c: 28:     INTCONbits.GIE=1;
 11898   005404  8EF2               	bsf	242,7,c	;volatile
 11899   005406                     
 11900                           ; BSR set to: 14
 11901   005406  0012               	return		;funcret
 11902   005408                     __end_of_Interrupts_init:
 11903                           	callstack 0
 11904                           
 11905 ;; *************** function _Buggy_init *****************
 11906 ;; Defined at:
 11907 ;;		line 7 in file "buggysetup.c"
 11908 ;; Parameters:    Size  Location     Type
 11909 ;;		None
 11910 ;; Auto vars:     Size  Location     Type
 11911 ;;		None
 11912 ;; Return value:  Size  Location     Type
 11913 ;;                  1    wreg      void 
 11914 ;; Registers used:
 11915 ;;		None
 11916 ;; Tracked objects:
 11917 ;;		On entry : 0/0
 11918 ;;		On exit  : 0/0
 11919 ;;		Unchanged: 0/0
 11920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11925 ;;Total ram usage:        0 bytes
 11926 ;; Hardware stack levels used: 1
 11927 ;; Hardware stack levels required when called: 6
 11928 ;; This function calls:
 11929 ;;		Nothing
 11930 ;; This function is called by:
 11931 ;;		_main
 11932 ;; This function uses a non-reentrant model
 11933 ;;
 11934                           
 11935                           	psect	text45
 11936   00515E                     __ptext45:
 11937                           	callstack 0
 11938   00515E                     _Buggy_init:
 11939                           	callstack 24
 11940   00515E                     
 11941                           ;buggysetup.c: 10:     LATDbits.LATD7=0;
 11942   00515E  9E7C               	bcf	124,7,c	;volatile
 11943                           
 11944                           ;buggysetup.c: 11:     TRISDbits.TRISD7=0;
 11945   005160  9E84               	bcf	132,7,c	;volatile
 11946                           
 11947                           ;buggysetup.c: 14:     LATHbits.LATH3=0;
 11948   005162  9680               	bcf	128,3,c	;volatile
 11949                           
 11950                           ;buggysetup.c: 15:     TRISHbits.TRISH3=0;
 11951   005164  9688               	bcf	136,3,c	;volatile
 11952                           
 11953                           ;buggysetup.c: 18:     TRISFbits.TRISF2=1;
 11954   005166  8486               	bsf	134,2,c	;volatile
 11955                           
 11956                           ;buggysetup.c: 19:     ANSELFbits.ANSELF2=0;
 11957   005168  010E               	movlb	14	; () banked
 11958   00516A  95B4               	bcf	180,2,b	;volatile
 11959                           
 11960                           ;buggysetup.c: 22:     TRISFbits.TRISF3=1;
 11961   00516C  8686               	bsf	134,3,c	;volatile
 11962                           
 11963                           ;buggysetup.c: 23:     ANSELFbits.ANSELF3=0;
 11964   00516E  97B4               	bcf	180,3,b	;volatile
 11965                           
 11966                           ;buggysetup.c: 33:     LATHbits.LATH1=0;
 11967   005170  9280               	bcf	128,1,c	;volatile
 11968                           
 11969                           ;buggysetup.c: 34:     TRISHbits.TRISH1=0;
 11970   005172  9288               	bcf	136,1,c	;volatile
 11971                           
 11972                           ;buggysetup.c: 37:     LATDbits.LATD4=0;
 11973   005174  987C               	bcf	124,4,c	;volatile
 11974                           
 11975                           ;buggysetup.c: 38:     TRISDbits.TRISD4=0;
 11976   005176  9884               	bcf	132,4,c	;volatile
 11977                           
 11978                           ;buggysetup.c: 41:     LATDbits.LATD3=0;
 11979   005178  967C               	bcf	124,3,c	;volatile
 11980                           
 11981                           ;buggysetup.c: 42:     TRISDbits.TRISD3=0;
 11982   00517A  9684               	bcf	132,3,c	;volatile
 11983                           
 11984                           ;buggysetup.c: 43:     ANSELDbits.ANSELD3=0;
 11985   00517C  97A7               	bcf	167,3,b	;volatile
 11986                           
 11987                           ;buggysetup.c: 46:     LATHbits.LATH0=0;
 11988   00517E  9080               	bcf	128,0,c	;volatile
 11989                           
 11990                           ;buggysetup.c: 47:     TRISHbits.TRISH0=0;
 11991   005180  9088               	bcf	136,0,c	;volatile
 11992                           
 11993                           ;buggysetup.c: 50:     LATFbits.LATF0=0;
 11994   005182  907E               	bcf	126,0,c	;volatile
 11995                           
 11996                           ;buggysetup.c: 51:     TRISFbits.TRISF0=0;
 11997   005184  9086               	bcf	134,0,c	;volatile
 11998                           
 11999                           ;buggysetup.c: 54:     LATGbits.LATG0 = 0;
 12000   005186  907F               	bcf	127,0,c	;volatile
 12001                           
 12002                           ;buggysetup.c: 55:     TRISGbits.TRISG0 = 0;
 12003   005188  9087               	bcf	135,0,c	;volatile
 12004                           
 12005                           ;buggysetup.c: 57:     LATEbits.LATE7 = 0;
 12006   00518A  9E7D               	bcf	125,7,c	;volatile
 12007                           
 12008                           ;buggysetup.c: 58:     TRISEbits.TRISE7 = 0;
 12009   00518C  9E85               	bcf	133,7,c	;volatile
 12010                           
 12011                           ;buggysetup.c: 60:     LATAbits.LATA3 = 0;
 12012   00518E  9679               	bcf	121,3,c	;volatile
 12013                           
 12014                           ;buggysetup.c: 61:     TRISAbits.TRISA3 = 0;
 12015   005190  9681               	bcf	129,3,c	;volatile
 12016   005192                     
 12017                           ; BSR set to: 14
 12018   005192  0012               	return		;funcret
 12019   005194                     __end_of_Buggy_init:
 12020                           	callstack 0
 12021                           
 12022 ;; *************** function _LowISR *****************
 12023 ;; Defined at:
 12024 ;;		line 67 in file "interrupts.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12040 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12041 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12042 ;;Total ram usage:        3 bytes
 12043 ;; Hardware stack levels used: 1
 12044 ;; Hardware stack levels required when called: 5
 12045 ;; This function calls:
 12046 ;;		Nothing
 12047 ;; This function is called by:
 12048 ;;		Interrupt level 1
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           	psect	intcodelo
 12053   000018                     __pintcodelo:
 12054                           	callstack 0
 12055   000018                     _LowISR:
 12056                           	callstack 20
 12057                           
 12058                           ; BSR set to: 14
 12059                           ;incstack = 0
 12060   000018  804E               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 12061   00001A  CFD8 F00F          	movff	status,??_LowISR
 12062   00001E  CFE8 F010          	movff	wreg,??_LowISR+1
 12063   000022  CFE0 F011          	movff	bsr,??_LowISR+2
 12064   000026                     
 12065                           ;interrupts.c: 71:     if(TMR0IF){
 12066   000026  010E               	movlb	14	; () banked
 12067   000028  AB33               	btfss	51,5,b	;volatile
 12068   00002A  EF19  F000         	goto	i1u365_21
 12069   00002E  EF1B  F000         	goto	i1u365_20
 12070   000032                     i1u365_21:
 12071   000032  EF20  F000         	goto	i1l384
 12072   000036                     i1u365_20:
 12073   000036                     
 12074                           ; BSR set to: 14
 12075                           ;interrupts.c: 72:         lost = 1;
 12076   000036  0E01               	movlw	1
 12077   000038  0100               	movlb	0	; () banked
 12078   00003A  6F9C               	movwf	_lost& (0+255),b
 12079   00003C                     
 12080                           ; BSR set to: 0
 12081                           ;interrupts.c: 73:         TMR0IF=0;
 12082   00003C  010E               	movlb	14	; () banked
 12083   00003E  9B33               	bcf	51,5,b	;volatile
 12084   000040                     i1l384:
 12085                           
 12086                           ; BSR set to: 14
 12087   000040  C011  FFE0         	movff	??_LowISR+2,bsr
 12088   000044  C010  FFE8         	movff	??_LowISR+1,wreg
 12089   000048  C00F  FFD8         	movff	??_LowISR,status
 12090   00004C  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 12091   00004E  0010               	retfie	
 12092   000050                     __end_of_LowISR:
 12093                           	callstack 0
 12094                           
 12095 ;; *************** function _HighISR *****************
 12096 ;; Defined at:
 12097 ;;		line 36 in file "interrupts.c"
 12098 ;; Parameters:    Size  Location     Type
 12099 ;;		None
 12100 ;; Auto vars:     Size  Location     Type
 12101 ;;		None
 12102 ;; Return value:  Size  Location     Type
 12103 ;;                  1    wreg      void 
 12104 ;; Registers used:
 12105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12106 ;; Tracked objects:
 12107 ;;		On entry : 0/0
 12108 ;;		On exit  : 0/0
 12109 ;;		Unchanged: 0/0
 12110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12115 ;;Total ram usage:        2 bytes
 12116 ;; Hardware stack levels used: 1
 12117 ;; Hardware stack levels required when called: 4
 12118 ;; This function calls:
 12119 ;;		_getCharFromTxBuf
 12120 ;;		_isDataInTxBuf
 12121 ;;		_putCharToRxBuf
 12122 ;;		i2_color_clear_init_interrupts
 12123 ;; This function is called by:
 12124 ;;		Interrupt level 2
 12125 ;; This function uses a non-reentrant model
 12126 ;;
 12127                           
 12128                           	psect	intcode
 12129   000008                     __pintcode:
 12130                           	callstack 0
 12131   000008                     _HighISR:
 12132                           	callstack 20
 12133                           
 12134                           ; BSR set to: 14
 12135                           ;incstack = 0
 12136   000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12137   00000A  EF3C  F027         	goto	int_func
 12138                           
 12139                           	psect	intcode_body
 12140   004E78                     __pintcode_body:
 12141                           	callstack 20
 12142   004E78                     int_func:
 12143                           	callstack 20
 12144   004E78  CFD9 F00D          	movff	fsr2l,??_HighISR
 12145   004E7C  CFDA F00E          	movff	fsr2h,??_HighISR+1
 12146   004E80                     
 12147                           ;interrupts.c: 40:     if(PIR0bits.INT0IF){
 12148   004E80  010E               	movlb	14	; () banked
 12149   004E82  A133               	btfss	51,0,b	;volatile
 12150   004E84  EF46  F027         	goto	i2u361_41
 12151   004E88  EF48  F027         	goto	i2u361_40
 12152   004E8C                     i2u361_41:
 12153   004E8C  EF4F  F027         	goto	i2l4574
 12154   004E90                     i2u361_40:
 12155   004E90                     
 12156                           ; BSR set to: 14
 12157                           ;interrupts.c: 41:         brightnessChange = 1;
 12158   004E90  0E01               	movlw	1
 12159   004E92  0100               	movlb	0	; () banked
 12160   004E94  6F9D               	movwf	_brightnessChange& (0+255),b
 12161   004E96                     
 12162                           ; BSR set to: 0
 12163                           ;interrupts.c: 42:         color_clear_init_interrupts();
 12164   004E96  EC4F  F026         	call	i2_color_clear_init_interrupts	;wreg free
 12165   004E9A                     
 12166                           ;interrupts.c: 43:         PIR0bits.INT0IF = 0;
 12167   004E9A  010E               	movlb	14	; () banked
 12168   004E9C  9133               	bcf	51,0,b	;volatile
 12169   004E9E                     i2l4574:
 12170                           
 12171                           ; BSR set to: 14
 12172                           ;interrupts.c: 51:     if(PIR4bits.RC4IF){
 12173   004E9E  A737               	btfss	55,3,b	;volatile
 12174   004EA0  EF54  F027         	goto	i2u362_41
 12175   004EA4  EF56  F027         	goto	i2u362_40
 12176   004EA8                     i2u362_41:
 12177   004EA8  EF59  F027         	goto	i2l4578
 12178   004EAC                     i2u362_40:
 12179   004EAC                     
 12180                           ; BSR set to: 14
 12181                           ;interrupts.c: 53:         putCharToRxBuf(RC4REG);
 12182   004EAC  51E3               	movf	227,w,b	;volatile
 12183   004EAE  EC70  F029         	call	_putCharToRxBuf
 12184   004EB2                     i2l4578:
 12185                           
 12186                           ;interrupts.c: 57:     if(PIR4bits.TX4IF){
 12187   004EB2  010E               	movlb	14	; () banked
 12188   004EB4  A537               	btfss	55,2,b	;volatile
 12189   004EB6  EF5F  F027         	goto	i2u363_41
 12190   004EBA  EF61  F027         	goto	i2u363_40
 12191   004EBE                     i2u363_41:
 12192   004EBE  EF71  F027         	goto	i2l378
 12193   004EC2                     i2u363_40:
 12194   004EC2                     
 12195                           ; BSR set to: 14
 12196                           ;interrupts.c: 59:         TX4REG = getCharFromTxBuf();
 12197   004EC2  ECF6  F028         	call	_getCharFromTxBuf	;wreg free
 12198   004EC6  010E               	movlb	14	; () banked
 12199   004EC8  6FE4               	movwf	228,b	;volatile
 12200   004ECA                     
 12201                           ; BSR set to: 14
 12202                           ;interrupts.c: 60:         if (!isDataInTxBuf()) {PIE4bits.TX4IE=0;}
 12203   004ECA  ECED  F029         	call	_isDataInTxBuf	;wreg free
 12204   004ECE  0900               	iorlw	0
 12205   004ED0  A4D8               	btfss	status,2,c
 12206   004ED2  EF6D  F027         	goto	i2u364_41
 12207   004ED6  EF6F  F027         	goto	i2u364_40
 12208   004EDA                     i2u364_41:
 12209   004EDA  EF71  F027         	goto	i2l378
 12210   004EDE                     i2u364_40:
 12211   004EDE  010E               	movlb	14	; () banked
 12212   004EE0  952D               	bcf	45,2,b	;volatile
 12213   004EE2                     i2l378:
 12214   004EE2  C00E  FFDA         	movff	??_HighISR+1,fsr2h
 12215   004EE6  C00D  FFD9         	movff	??_HighISR,fsr2l
 12216   004EEA  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12217   004EEC  0011               	retfie		f
 12218   004EEE                     __end_of_HighISR:
 12219                           	callstack 0
 12220                           
 12221 ;; *************** function i2_color_clear_init_interrupts *****************
 12222 ;; Defined at:
 12223 ;;		line 27 in file "color.c"
 12224 ;; Parameters:    Size  Location     Type
 12225 ;;		None
 12226 ;; Auto vars:     Size  Location     Type
 12227 ;;  low_threshol    2   10[COMRAM] unsigned int 
 12228 ;;  high_thresho    2    8[COMRAM] unsigned int 
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  1    wreg      void 
 12231 ;; Registers used:
 12232 ;;		wreg, status,2, status,0, cstack
 12233 ;; Tracked objects:
 12234 ;;		On entry : 0/0
 12235 ;;		On exit  : 0/0
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12239 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12240 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12241 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12242 ;;Total ram usage:        5 bytes
 12243 ;; Hardware stack levels used: 1
 12244 ;; Hardware stack levels required when called: 3
 12245 ;; This function calls:
 12246 ;;		i2_I2C_2_Master_Start
 12247 ;;		i2_I2C_2_Master_Stop
 12248 ;;		i2_I2C_2_Master_Write
 12249 ;;		i2___lwdiv
 12250 ;;		i2_color_writetoaddr
 12251 ;; This function is called by:
 12252 ;;		_HighISR
 12253 ;; This function uses a non-reentrant model
 12254 ;;
 12255                           
 12256                           	psect	text48
 12257   004C9E                     __ptext48:
 12258                           	callstack 0
 12259   004C9E                     i2_color_clear_init_interrupts:
 12260                           	callstack 20
 12261   004C9E                     
 12262                           ;color.c: 29:     I2C_2_Master_Start();
 12263   004C9E  EC29  F02A         	call	i2_I2C_2_Master_Start	;wreg free
 12264                           
 12265                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
 12266   004CA2  0E52               	movlw	82
 12267   004CA4  EC0A  F02A         	call	i2_I2C_2_Master_Write
 12268                           
 12269                           ;color.c: 31:     I2C_2_Master_Write(0b11100110);
 12270   004CA8  0EE6               	movlw	230
 12271   004CAA  EC0A  F02A         	call	i2_I2C_2_Master_Write
 12272                           
 12273                           ;color.c: 32:     I2C_2_Master_Stop();
 12274   004CAE  EC24  F02A         	call	i2_I2C_2_Master_Stop	;wreg free
 12275                           
 12276                           ;color.c: 38:     unsigned int high_threshold = ambient + (ambient/3);
 12277   004CB2  C0DE  F001         	movff	_ambient,i2___lwdiv@dividend
 12278   004CB6  C0DF  F002         	movff	_ambient+1,i2___lwdiv@dividend+1
 12279   004CBA  0E00               	movlw	0
 12280   004CBC  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 12281   004CBE  0E03               	movlw	3
 12282   004CC0  6E03               	movwf	i2___lwdiv@divisor^0,c
 12283   004CC2  ECB1  F027         	call	i2___lwdiv	;wreg free
 12284   004CC6  0100               	movlb	0	; () banked
 12285   004CC8  51DE               	movf	_ambient& (0+255),w,b
 12286   004CCA  2401               	addwf	?i2___lwdiv^0,w,c
 12287   004CCC  6E09               	movwf	i2color_clear_init_interrupts@high_threshold^0,c
 12288   004CCE  51DF               	movf	(_ambient+1)& (0+255),w,b
 12289   004CD0  2002               	addwfc	(?i2___lwdiv+1)^0,w,c
 12290   004CD2  6E0A               	movwf	(i2color_clear_init_interrupts@high_threshold+1)^0,c
 12291                           
 12292                           ;color.c: 39:     unsigned int low_threshold = ambient - (ambient/20);
 12293   004CD4  C0DE  F001         	movff	_ambient,i2___lwdiv@dividend
 12294   004CD8  C0DF  F002         	movff	_ambient+1,i2___lwdiv@dividend+1
 12295   004CDC  0E00               	movlw	0
 12296   004CDE  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 12297   004CE0  0E14               	movlw	20
 12298   004CE2  6E03               	movwf	i2___lwdiv@divisor^0,c
 12299   004CE4  ECB1  F027         	call	i2___lwdiv	;wreg free
 12300   004CE8  5001               	movf	?i2___lwdiv^0,w,c
 12301   004CEA  0100               	movlb	0	; () banked
 12302   004CEC  5DDE               	subwf	_ambient& (0+255),w,b
 12303   004CEE  6E0B               	movwf	i2color_clear_init_interrupts@low_threshold^0,c
 12304   004CF0  5002               	movf	(?i2___lwdiv+1)^0,w,c
 12305   004CF2  59DF               	subwfb	(_ambient+1)& (0+255),w,b
 12306   004CF4  6E0C               	movwf	(i2color_clear_init_interrupts@low_threshold+1)^0,c
 12307                           
 12308                           ;color.c: 42:  color_writetoaddr(0x00, 0x13);
 12309   004CF6  0E13               	movlw	19
 12310   004CF8  6E03               	movwf	i2color_writetoaddr@value^0,c
 12311   004CFA  0E00               	movlw	0
 12312   004CFC  ECB5  F029         	call	i2_color_writetoaddr
 12313   004D00                     
 12314                           ;color.c: 43:     _delay((unsigned long)((3)*(64000000/4000.0)));
 12315   004D00  0E3F               	movlw	63
 12316   004D02  6E08               	movwf	??i2_color_clear_init_interrupts^0,c
 12317   004D04  0E55               	movlw	85
 12318   004D06                     i2u646_47:
 12319   004D06  2EE8               	decfsz	wreg,f,c
 12320   004D08  D7FE               	bra	i2u646_47
 12321   004D0A  2E08               	decfsz	??i2_color_clear_init_interrupts^0,f,c
 12322   004D0C  D7FC               	bra	i2u646_47
 12323   004D0E  0000               	nop	
 12324   004D10                     
 12325                           ;color.c: 44:     color_writetoaddr(0x07, (high_threshold >> 8));
 12326   004D10  500A               	movf	(i2color_clear_init_interrupts@high_threshold+1)^0,w,c
 12327   004D12  6E03               	movwf	i2color_writetoaddr@value^0,c
 12328   004D14  0E07               	movlw	7
 12329   004D16  ECB5  F029         	call	i2_color_writetoaddr
 12330   004D1A                     
 12331                           ;color.c: 45:     color_writetoaddr(0x06, (high_threshold & 0xFF));
 12332   004D1A  C009  F003         	movff	i2color_clear_init_interrupts@high_threshold,i2color_writetoaddr@value
 12333   004D1E  0E06               	movlw	6
 12334   004D20  ECB5  F029         	call	i2_color_writetoaddr
 12335   004D24                     
 12336                           ;color.c: 46:     color_writetoaddr(0x05, (low_threshold >> 8));
 12337   004D24  500C               	movf	(i2color_clear_init_interrupts@low_threshold+1)^0,w,c
 12338   004D26  6E03               	movwf	i2color_writetoaddr@value^0,c
 12339   004D28  0E05               	movlw	5
 12340   004D2A  ECB5  F029         	call	i2_color_writetoaddr
 12341   004D2E                     
 12342                           ;color.c: 47:     color_writetoaddr(0x04, (low_threshold & 0xFF));
 12343   004D2E  C00B  F003         	movff	i2color_clear_init_interrupts@low_threshold,i2color_writetoaddr@value
 12344   004D32  0E04               	movlw	4
 12345   004D34  ECB5  F029         	call	i2_color_writetoaddr
 12346   004D38                     
 12347                           ;color.c: 48:     color_writetoaddr(0x0C, 0b11);
 12348   004D38  0E03               	movlw	3
 12349   004D3A  6E03               	movwf	i2color_writetoaddr@value^0,c
 12350   004D3C  0E0C               	movlw	12
 12351   004D3E  ECB5  F029         	call	i2_color_writetoaddr
 12352   004D42  0012               	return		;funcret
 12353   004D44                     __end_ofi2_color_clear_init_interrupts:
 12354                           	callstack 0
 12355                           
 12356 ;; *************** function i2_color_writetoaddr *****************
 12357 ;; Defined at:
 12358 ;;		line 53 in file "color.c"
 12359 ;; Parameters:    Size  Location     Type
 12360 ;;  address         1    wreg     unsigned char 
 12361 ;;  value           1    2[COMRAM] unsigned char 
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;  address         1    3[COMRAM] unsigned char 
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1    wreg      void 
 12366 ;; Registers used:
 12367 ;;		wreg, status,2, status,0, cstack
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12373 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12377 ;;Total ram usage:        2 bytes
 12378 ;; Hardware stack levels used: 1
 12379 ;; Hardware stack levels required when called: 2
 12380 ;; This function calls:
 12381 ;;		i2_I2C_2_Master_Start
 12382 ;;		i2_I2C_2_Master_Stop
 12383 ;;		i2_I2C_2_Master_Write
 12384 ;; This function is called by:
 12385 ;;		i2_color_clear_init_interrupts
 12386 ;; This function uses a non-reentrant model
 12387 ;;
 12388                           
 12389                           	psect	text49
 12390   00536A                     __ptext49:
 12391                           	callstack 0
 12392   00536A                     i2_color_writetoaddr:
 12393                           	callstack 20
 12394                           
 12395                           ;incstack = 0
 12396                           ;i2color_writetoaddr@address stored from wreg
 12397   00536A  6E04               	movwf	i2color_writetoaddr@address^0,c
 12398   00536C                     
 12399                           ;color.c: 54:     I2C_2_Master_Start();
 12400   00536C  EC29  F02A         	call	i2_I2C_2_Master_Start	;wreg free
 12401                           
 12402                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
 12403   005370  0E52               	movlw	82
 12404   005372  EC0A  F02A         	call	i2_I2C_2_Master_Write
 12405                           
 12406                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
 12407   005376  5004               	movf	i2color_writetoaddr@address^0,w,c
 12408   005378  0980               	iorlw	128
 12409   00537A  EC0A  F02A         	call	i2_I2C_2_Master_Write
 12410                           
 12411                           ;color.c: 57:     I2C_2_Master_Write(value);
 12412   00537E  5003               	movf	i2color_writetoaddr@value^0,w,c
 12413   005380  EC0A  F02A         	call	i2_I2C_2_Master_Write
 12414                           
 12415                           ;color.c: 58:     I2C_2_Master_Stop();
 12416   005384  EC24  F02A         	call	i2_I2C_2_Master_Stop	;wreg free
 12417   005388  0012               	return		;funcret
 12418   00538A                     __end_ofi2_color_writetoaddr:
 12419                           	callstack 0
 12420                           
 12421 ;; *************** function i2_I2C_2_Master_Write *****************
 12422 ;; Defined at:
 12423 ;;		line 45 in file "i2c.c"
 12424 ;; Parameters:    Size  Location     Type
 12425 ;;  data_byte       1    wreg     unsigned char 
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;  data_byte       1    1[COMRAM] unsigned char 
 12428 ;; Return value:  Size  Location     Type
 12429 ;;                  1    wreg      void 
 12430 ;; Registers used:
 12431 ;;		wreg, status,2, status,0, cstack
 12432 ;; Tracked objects:
 12433 ;;		On entry : 0/0
 12434 ;;		On exit  : 0/0
 12435 ;;		Unchanged: 0/0
 12436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12440 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12441 ;;Total ram usage:        1 bytes
 12442 ;; Hardware stack levels used: 1
 12443 ;; Hardware stack levels required when called: 1
 12444 ;; This function calls:
 12445 ;;		i2_I2C_2_Master_Idle
 12446 ;; This function is called by:
 12447 ;;		i2_color_clear_init_interrupts
 12448 ;;		i2_color_writetoaddr
 12449 ;; This function uses a non-reentrant model
 12450 ;;
 12451                           
 12452                           	psect	text50
 12453   005414                     __ptext50:
 12454                           	callstack 0
 12455   005414                     i2_I2C_2_Master_Write:
 12456                           	callstack 20
 12457                           
 12458                           ;incstack = 0
 12459                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 12460   005414  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 12461   005416                     
 12462                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 12463   005416  EC49  F029         	call	i2_I2C_2_Master_Idle	;wreg free
 12464   00541A                     
 12465                           ;i2c.c: 48:   SSP2BUF = data_byte;
 12466   00541A  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 12467   00541E  0012               	return		;funcret
 12468   005420                     __end_ofi2_I2C_2_Master_Write:
 12469                           	callstack 0
 12470                           
 12471 ;; *************** function i2_I2C_2_Master_Stop *****************
 12472 ;; Defined at:
 12473 ;;		line 39 in file "i2c.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;		None
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;		None
 12478 ;; Return value:  Size  Location     Type
 12479 ;;                  1    wreg      void 
 12480 ;; Registers used:
 12481 ;;		wreg, status,2, status,0, cstack
 12482 ;; Tracked objects:
 12483 ;;		On entry : 0/0
 12484 ;;		On exit  : 0/0
 12485 ;;		Unchanged: 0/0
 12486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12491 ;;Total ram usage:        0 bytes
 12492 ;; Hardware stack levels used: 1
 12493 ;; Hardware stack levels required when called: 1
 12494 ;; This function calls:
 12495 ;;		i2_I2C_2_Master_Idle
 12496 ;; This function is called by:
 12497 ;;		i2_color_clear_init_interrupts
 12498 ;;		i2_color_writetoaddr
 12499 ;; This function uses a non-reentrant model
 12500 ;;
 12501                           
 12502                           	psect	text51
 12503   005448                     __ptext51:
 12504                           	callstack 0
 12505   005448                     i2_I2C_2_Master_Stop:
 12506                           	callstack 20
 12507   005448                     
 12508                           ;i2c.c: 41:   I2C_2_Master_Idle();
 12509   005448  EC49  F029         	call	i2_I2C_2_Master_Idle	;wreg free
 12510   00544C                     
 12511                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 12512   00544C  010E               	movlb	14	; () banked
 12513   00544E  85DA               	bsf	218,2,b	;volatile
 12514   005450                     
 12515                           ; BSR set to: 14
 12516   005450  0012               	return		;funcret
 12517   005452                     __end_ofi2_I2C_2_Master_Stop:
 12518                           	callstack 0
 12519                           
 12520 ;; *************** function i2_I2C_2_Master_Start *****************
 12521 ;; Defined at:
 12522 ;;		line 27 in file "i2c.c"
 12523 ;; Parameters:    Size  Location     Type
 12524 ;;		None
 12525 ;; Auto vars:     Size  Location     Type
 12526 ;;		None
 12527 ;; Return value:  Size  Location     Type
 12528 ;;                  1    wreg      void 
 12529 ;; Registers used:
 12530 ;;		wreg, status,2, status,0, cstack
 12531 ;; Tracked objects:
 12532 ;;		On entry : 0/0
 12533 ;;		On exit  : 0/0
 12534 ;;		Unchanged: 0/0
 12535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12540 ;;Total ram usage:        0 bytes
 12541 ;; Hardware stack levels used: 1
 12542 ;; Hardware stack levels required when called: 1
 12543 ;; This function calls:
 12544 ;;		i2_I2C_2_Master_Idle
 12545 ;; This function is called by:
 12546 ;;		i2_color_clear_init_interrupts
 12547 ;;		i2_color_writetoaddr
 12548 ;; This function uses a non-reentrant model
 12549 ;;
 12550                           
 12551                           	psect	text52
 12552   005452                     __ptext52:
 12553                           	callstack 0
 12554   005452                     i2_I2C_2_Master_Start:
 12555                           	callstack 20
 12556   005452                     
 12557                           ;i2c.c: 29:   I2C_2_Master_Idle();
 12558   005452  EC49  F029         	call	i2_I2C_2_Master_Idle	;wreg free
 12559   005456                     
 12560                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 12561   005456  010E               	movlb	14	; () banked
 12562   005458  81DA               	bsf	218,0,b	;volatile
 12563   00545A                     
 12564                           ; BSR set to: 14
 12565   00545A  0012               	return		;funcret
 12566   00545C                     __end_ofi2_I2C_2_Master_Start:
 12567                           	callstack 0
 12568                           
 12569 ;; *************** function i2_I2C_2_Master_Idle *****************
 12570 ;; Defined at:
 12571 ;;		line 22 in file "i2c.c"
 12572 ;; Parameters:    Size  Location     Type
 12573 ;;		None
 12574 ;; Auto vars:     Size  Location     Type
 12575 ;;		None
 12576 ;; Return value:  Size  Location     Type
 12577 ;;                  1    wreg      void 
 12578 ;; Registers used:
 12579 ;;		wreg, status,2, status,0
 12580 ;; Tracked objects:
 12581 ;;		On entry : 0/0
 12582 ;;		On exit  : 0/0
 12583 ;;		Unchanged: 0/0
 12584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12589 ;;Total ram usage:        1 bytes
 12590 ;; Hardware stack levels used: 1
 12591 ;; This function calls:
 12592 ;;		Nothing
 12593 ;; This function is called by:
 12594 ;;		i2_I2C_2_Master_Start
 12595 ;;		i2_I2C_2_Master_Stop
 12596 ;;		i2_I2C_2_Master_Write
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           
 12600                           	psect	text53
 12601   005292                     __ptext53:
 12602                           	callstack 0
 12603   005292                     i2_I2C_2_Master_Idle:
 12604                           	callstack 20
 12605   005292                     i2l269:
 12606   005292  010E               	movlb	14	; () banked
 12607   005294  B5D8               	btfsc	216,2,b	;volatile
 12608   005296  EF4F  F029         	goto	i2u192_41
 12609   00529A  EF51  F029         	goto	i2u192_40
 12610   00529E                     i2u192_41:
 12611   00529E  EF49  F029         	goto	i2l269
 12612   0052A2                     i2u192_40:
 12613   0052A2                     
 12614                           ; BSR set to: 14
 12615   0052A2  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 12616   0052A6  0E1F               	movlw	31
 12617   0052A8  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 12618   0052AA  A4D8               	btfss	status,2,c
 12619   0052AC  EF5A  F029         	goto	i2u193_41
 12620   0052B0  EF5C  F029         	goto	i2u193_40
 12621   0052B4                     i2u193_41:
 12622   0052B4  EF49  F029         	goto	i2l269
 12623   0052B8                     i2u193_40:
 12624   0052B8                     
 12625                           ; BSR set to: 14
 12626   0052B8  0012               	return		;funcret
 12627   0052BA                     __end_ofi2_I2C_2_Master_Idle:
 12628                           	callstack 0
 12629                           
 12630 ;; *************** function i2___lwdiv *****************
 12631 ;; Defined at:
 12632 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
 12633 ;; Parameters:    Size  Location     Type
 12634 ;;  dividend        2    0[COMRAM] unsigned int 
 12635 ;;  divisor         2    2[COMRAM] unsigned int 
 12636 ;; Auto vars:     Size  Location     Type
 12637 ;;  quotient        2    4[COMRAM] unsigned int 
 12638 ;;  counter         1    6[COMRAM] unsigned char 
 12639 ;; Return value:  Size  Location     Type
 12640 ;;                  2    0[COMRAM] unsigned int 
 12641 ;; Registers used:
 12642 ;;		wreg, status,2, status,0
 12643 ;; Tracked objects:
 12644 ;;		On entry : 0/0
 12645 ;;		On exit  : 0/0
 12646 ;;		Unchanged: 0/0
 12647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12649 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12651 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12652 ;;Total ram usage:        7 bytes
 12653 ;; Hardware stack levels used: 1
 12654 ;; This function calls:
 12655 ;;		Nothing
 12656 ;; This function is called by:
 12657 ;;		i2_color_clear_init_interrupts
 12658 ;; This function uses a non-reentrant model
 12659 ;;
 12660                           
 12661                           	psect	text54
 12662   004F62                     __ptext54:
 12663                           	callstack 0
 12664   004F62                     i2___lwdiv:
 12665                           	callstack 22
 12666   004F62  0E00               	movlw	0
 12667   004F64  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
 12668   004F66  0E00               	movlw	0
 12669   004F68  6E05               	movwf	i2___lwdiv@quotient^0,c
 12670   004F6A  5003               	movf	i2___lwdiv@divisor^0,w,c
 12671   004F6C  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 12672   004F6E  B4D8               	btfsc	status,2,c
 12673   004F70  EFBC  F027         	goto	i2u258_41
 12674   004F74  EFBE  F027         	goto	i2u258_40
 12675   004F78                     i2u258_41:
 12676   004F78  EFE6  F027         	goto	i2l1278
 12677   004F7C                     i2u258_40:
 12678   004F7C  0E01               	movlw	1
 12679   004F7E  6E07               	movwf	i2___lwdiv@counter^0,c
 12680   004F80  EFC6  F027         	goto	i2l3724
 12681   004F84                     i2l3722:
 12682   004F84  90D8               	bcf	status,0,c
 12683   004F86  3603               	rlcf	i2___lwdiv@divisor^0,f,c
 12684   004F88  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 12685   004F8A  2A07               	incf	i2___lwdiv@counter^0,f,c
 12686   004F8C                     i2l3724:
 12687   004F8C  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 12688   004F8E  EFCB  F027         	goto	i2u259_41
 12689   004F92  EFCD  F027         	goto	i2u259_40
 12690   004F96                     i2u259_41:
 12691   004F96  EFC2  F027         	goto	i2l3722
 12692   004F9A                     i2u259_40:
 12693   004F9A                     i2l3726:
 12694   004F9A  90D8               	bcf	status,0,c
 12695   004F9C  3605               	rlcf	i2___lwdiv@quotient^0,f,c
 12696   004F9E  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 12697   004FA0  5003               	movf	i2___lwdiv@divisor^0,w,c
 12698   004FA2  5C01               	subwf	i2___lwdiv@dividend^0,w,c
 12699   004FA4  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 12700   004FA6  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 12701   004FA8  A0D8               	btfss	status,0,c
 12702   004FAA  EFD9  F027         	goto	i2u260_41
 12703   004FAE  EFDB  F027         	goto	i2u260_40
 12704   004FB2                     i2u260_41:
 12705   004FB2  EFE0  F027         	goto	i2l3734
 12706   004FB6                     i2u260_40:
 12707   004FB6  5003               	movf	i2___lwdiv@divisor^0,w,c
 12708   004FB8  5E01               	subwf	i2___lwdiv@dividend^0,f,c
 12709   004FBA  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 12710   004FBC  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 12711   004FBE  8005               	bsf	i2___lwdiv@quotient^0,0,c
 12712   004FC0                     i2l3734:
 12713   004FC0  90D8               	bcf	status,0,c
 12714   004FC2  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 12715   004FC4  3203               	rrcf	i2___lwdiv@divisor^0,f,c
 12716   004FC6  2E07               	decfsz	i2___lwdiv@counter^0,f,c
 12717   004FC8  EFCD  F027         	goto	i2l3726
 12718   004FCC                     i2l1278:
 12719   004FCC  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 12720   004FD0  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 12721   004FD4  0012               	return		;funcret
 12722   004FD6                     __end_ofi2___lwdiv:
 12723                           	callstack 0
 12724                           
 12725 ;; *************** function _putCharToRxBuf *****************
 12726 ;; Defined at:
 12727 ;;		line 33 in file "serial.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;  byte            1    wreg     unsigned char 
 12730 ;; Auto vars:     Size  Location     Type
 12731 ;;  byte            1    0[COMRAM] unsigned char 
 12732 ;; Return value:  Size  Location     Type
 12733 ;;                  1    wreg      void 
 12734 ;; Registers used:
 12735 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12745 ;;Total ram usage:        1 bytes
 12746 ;; Hardware stack levels used: 1
 12747 ;; This function calls:
 12748 ;;		Nothing
 12749 ;; This function is called by:
 12750 ;;		_HighISR
 12751 ;; This function uses a non-reentrant model
 12752 ;;
 12753                           
 12754                           	psect	text55
 12755   0052E0                     __ptext55:
 12756                           	callstack 0
 12757   0052E0                     _putCharToRxBuf:
 12758                           	callstack 23
 12759                           
 12760                           ;incstack = 0
 12761                           ;putCharToRxBuf@byte stored from wreg
 12762   0052E0  6E01               	movwf	putCharToRxBuf@byte^0,c
 12763   0052E2                     
 12764                           ;serial.c: 34:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
 12765   0052E2  0E13               	movlw	19
 12766   0052E4  644D               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
 12767   0052E6  EF77  F029         	goto	i2u335_41
 12768   0052EA  EF79  F029         	goto	i2u335_40
 12769   0052EE                     i2u335_41:
 12770   0052EE  EF7B  F029         	goto	i2l4366
 12771   0052F2                     i2u335_40:
 12772   0052F2  0E00               	movlw	0
 12773   0052F4  6E4D               	movwf	_RxBufWriteCnt^0,c	;volatile
 12774   0052F6                     i2l4366:
 12775                           
 12776                           ;serial.c: 35:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
 12777   0052F6  504D               	movf	_RxBufWriteCnt^0,w,c
 12778   0052F8  0F88               	addlw	low _EUSART4RXbuf
 12779   0052FA  6ED9               	movwf	fsr2l,c
 12780   0052FC  6ADA               	clrf	fsr2h,c
 12781   0052FE  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
 12782   005302  2A4D               	incf	_RxBufWriteCnt^0,f,c	;volatile
 12783   005304  0012               	return		;funcret
 12784   005306                     __end_of_putCharToRxBuf:
 12785                           	callstack 0
 12786                           
 12787 ;; *************** function _isDataInTxBuf *****************
 12788 ;; Defined at:
 12789 ;;		line 61 in file "serial.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;		None
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;		None
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  1    wreg      unsigned char 
 12796 ;; Registers used:
 12797 ;;		wreg, status,2, status,0
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12807 ;;Total ram usage:        0 bytes
 12808 ;; Hardware stack levels used: 1
 12809 ;; This function calls:
 12810 ;;		Nothing
 12811 ;; This function is called by:
 12812 ;;		_HighISR
 12813 ;;		_sendTxBuf
 12814 ;; This function uses a non-reentrant model
 12815 ;;
 12816                           
 12817                           	psect	text56
 12818   0053DA                     __ptext56:
 12819                           	callstack 0
 12820   0053DA                     _isDataInTxBuf:
 12821                           	callstack 23
 12822   0053DA                     
 12823                           ;serial.c: 62:     return (TxBufWriteCnt!=TxBufReadCnt);
 12824   0053DA  504A               	movf	_TxBufReadCnt^0,w,c	;volatile
 12825   0053DC  184B               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
 12826   0053DE  A4D8               	btfss	status,2,c
 12827   0053E0  EFF4  F029         	goto	i2u337_41
 12828   0053E4  EFF7  F029         	goto	i2u337_40
 12829   0053E8                     i2u337_41:
 12830   0053E8  0E01               	movlw	1
 12831   0053EA  EFF8  F029         	goto	i2u338_40
 12832   0053EE                     i2u337_40:
 12833   0053EE  0E00               	movlw	0
 12834   0053F0                     i2u338_40:
 12835   0053F0  0012               	return		;funcret
 12836   0053F2                     __end_of_isDataInTxBuf:
 12837                           	callstack 0
 12838                           
 12839 ;; *************** function _getCharFromTxBuf *****************
 12840 ;; Defined at:
 12841 ;;		line 47 in file "serial.c"
 12842 ;; Parameters:    Size  Location     Type
 12843 ;;		None
 12844 ;; Auto vars:     Size  Location     Type
 12845 ;;		None
 12846 ;; Return value:  Size  Location     Type
 12847 ;;                  1    wreg      unsigned char 
 12848 ;; Registers used:
 12849 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12857 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12859 ;;Total ram usage:        2 bytes
 12860 ;; Hardware stack levels used: 1
 12861 ;; This function calls:
 12862 ;;		Nothing
 12863 ;; This function is called by:
 12864 ;;		_HighISR
 12865 ;; This function uses a non-reentrant model
 12866 ;;
 12867                           
 12868                           	psect	text57
 12869   0051EC                     __ptext57:
 12870                           	callstack 0
 12871   0051EC                     _getCharFromTxBuf:
 12872                           	callstack 23
 12873   0051EC                     
 12874                           ;serial.c: 48:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
 12875   0051EC  0E3B               	movlw	59
 12876   0051EE  644A               	cpfsgt	_TxBufReadCnt^0,c	;volatile
 12877   0051F0  EFFC  F028         	goto	i2u336_41
 12878   0051F4  EFFE  F028         	goto	i2u336_40
 12879   0051F8                     i2u336_41:
 12880   0051F8  EF00  F029         	goto	i2l4374
 12881   0051FC                     i2u336_40:
 12882   0051FC  0E00               	movlw	0
 12883   0051FE  6E4A               	movwf	_TxBufReadCnt^0,c	;volatile
 12884   005200                     i2l4374:
 12885                           
 12886                           ;serial.c: 49:     return EUSART4TXbuf[TxBufReadCnt++];
 12887   005200  2A4A               	incf	_TxBufReadCnt^0,f,c	;volatile
 12888   005202  044A               	decf	_TxBufReadCnt^0,w,c	;volatile
 12889   005204  6E01               	movwf	??_getCharFromTxBuf^0,c
 12890   005206  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
 12891   005208  0E52               	movlw	low _EUSART4TXbuf
 12892   00520A  2401               	addwf	??_getCharFromTxBuf^0,w,c
 12893   00520C  6ED9               	movwf	fsr2l,c
 12894   00520E  0E02               	movlw	high _EUSART4TXbuf
 12895   005210  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
 12896   005212  6EDA               	movwf	fsr2h,c
 12897   005214  50DF               	movf	indf2,w,c
 12898   005216  0012               	return		;funcret
 12899   005218                     __end_of_getCharFromTxBuf:
 12900                           	callstack 0
 12901                           
 12902                           	psect	smallconst
 12903   000E00                     __psmallconst:
 12904                           	callstack 0
 12905   000E00  00                 	db	0
 12906   000E01  00                 	db	0	; dummy byte at the end
 12907   000000                     
 12908                           	psect	rparam
 12909   000000                     
 12910                           	psect	temp
 12911   00004E                     btemp:
 12912                           	callstack 0
 12913   00004E                     	ds	1
 12914   000000                     int$flags	set	btemp
 12915   000000                     wtemp8	set	btemp+1
 12916   000000                     ttemp5	set	btemp+1
 12917   000000                     ttemp6	set	btemp+4
 12918   000000                     ttemp7	set	btemp+8
 12919                           
 12920                           	psect	config
 12921                           
 12922                           ;Config register CONFIG1L @ 0x300000
 12923                           ;	External Oscillator mode Selection bits
 12924                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12925                           ;	Power-up default value for COSC bits
 12926                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12927   300000                     	org	3145728
 12928   300000  AA                 	db	170
 12929                           
 12930                           ;Config register CONFIG1H @ 0x300001
 12931                           ;	unspecified, using default values
 12932                           ;	Clock Out Enable bit
 12933                           ;	CLKOUTEN = 0x1, unprogrammed default
 12934                           ;	Clock Switch Enable bit
 12935                           ;	CSWEN = 0x1, unprogrammed default
 12936                           ;	Fail-Safe Clock Monitor Enable bit
 12937                           ;	FCMEN = 0x1, unprogrammed default
 12938   300001                     	org	3145729
 12939   300001  FF                 	db	255
 12940                           
 12941                           ;Config register CONFIG3L @ 0x300004
 12942                           ;	WDT Period Select bits
 12943                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12944                           ;	WDT operating mode
 12945                           ;	WDTE = OFF, WDT Disabled
 12946   300004                     	org	3145732
 12947   300004  9F                 	db	159
 12948                           
 12949                           ;Config register CONFIG3H @ 0x300005
 12950                           ;	unspecified, using default values
 12951                           ;	WDT Window Select bits
 12952                           ;	WDTCWS = 0x7, unprogrammed default
 12953                           ;	WDT input clock selector
 12954                           ;	WDTCCS = 0x7, unprogrammed default
 12955   300005                     	org	3145733
 12956   300005  FF                 	db	255
 12957                           tosu	equ	0xFFF
 12958                           tosh	equ	0xFFE
 12959                           tosl	equ	0xFFD
 12960                           stkptr	equ	0xFFC
 12961                           pclatu	equ	0xFFB
 12962                           pclath	equ	0xFFA
 12963                           pcl	equ	0xFF9
 12964                           tblptru	equ	0xFF8
 12965                           tblptrh	equ	0xFF7
 12966                           tblptrl	equ	0xFF6
 12967                           tablat	equ	0xFF5
 12968                           prodh	equ	0xFF4
 12969                           prodl	equ	0xFF3
 12970                           indf0	equ	0xFEF
 12971                           postinc0	equ	0xFEE
 12972                           postdec0	equ	0xFED
 12973                           preinc0	equ	0xFEC
 12974                           plusw0	equ	0xFEB
 12975                           fsr0h	equ	0xFEA
 12976                           fsr0l	equ	0xFE9
 12977                           wreg	equ	0xFE8
 12978                           indf1	equ	0xFE7
 12979                           postinc1	equ	0xFE6
 12980                           postdec1	equ	0xFE5
 12981                           preinc1	equ	0xFE4
 12982                           plusw1	equ	0xFE3
 12983                           fsr1h	equ	0xFE2
 12984                           fsr1l	equ	0xFE1
 12985                           bsr	equ	0xFE0
 12986                           indf2	equ	0xFDF
 12987                           postinc2	equ	0xFDE
 12988                           postdec2	equ	0xFDD
 12989                           preinc2	equ	0xFDC
 12990                           plusw2	equ	0xFDB
 12991                           fsr2h	equ	0xFDA
 12992                           fsr2l	equ	0xFD9
 12993                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      77
    BANK0           160     60     128
    BANK1           256    216     256
    BANK2           256     40     182
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK2[10]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK2[10]), 

    calibration@turnDuration	PTR unsigned char  size(2) Largest target is 1
		 -> main@turnDuration(BANK2[1]), 

    color_calibration@blue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@blue(BANK1[6]), 

    color_calibration@green	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@green(BANK1[6]), 

    color_calibration@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK2[6]), 

    color_calibration@lightblue	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@lightblue(BANK1[6]), 

    color_calibration@orange	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@orange(BANK1[6]), 

    color_calibration@pink	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@pink(BANK1[6]), 

    color_calibration@red	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@red(BANK1[6]), 

    color_calibration@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK2[8]), 

    color_calibration@white	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@white(BANK1[6]), 

    color_calibration@yellow	PTR struct HSV_calib size(2) Largest target is 6
		 -> main@yellow(BANK1[6]), 

    color_read@RGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK2[8]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK2[10]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK2[10]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    lostReturnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK2[10]), 

    lostReturnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    lostReturnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK2[10]), 

    lostReturnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK2[10]), 

    move@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK2[10]), 

    move@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    returnHome@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK2[10]), 

    returnHome@moveSequence	PTR unsigned char  size(2) Largest target is 40
		 -> main@moveSequence(BANK1[40]), 

    returnHome@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK2[10]), 

    returnHome@straightTime	PTR unsigned int  size(2) Largest target is 82
		 -> main@straightTime(BANK1[82]), 

    reverseOneSquare@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK2[10]), 

    reverseOneSquare@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK2[10]), 

    reverseOneSquare@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseOneSquare@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK2[10]), 

    reverseShort@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    reverseShort@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK2[10]), 

    reverseShort@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    reverseShort@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    rgb_2_hsv@HSV	PTR struct HSV_val size(2) Largest target is 6
		 -> main@HSV(BANK2[6]), 

    S33DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S33DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK2[10]), main@motorR(BANK2[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK2[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK2[10]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK2[10]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK2[10]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK2[10]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK2[10]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK2[10]), 

    wallAdjust@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK2[10]), 

    wallAdjust@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    wallAdjust@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _wallAdjust->_setMotorPWM
    _move->_returnHome
    _reverseShort->_setMotorPWM
    _returnHome->_reverseOneSquare
    _lostReturnHome->_reverseOneSquare
    _stop->_setMotorPWM
    _reverseOneSquare->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _color_detect->_max
    _color_detect->_min
    _color_click_init->_color_clear_init_interrupts
    _color_clear_init_interrupts->___lwdiv
    _color_writetoaddr->_I2C_2_Master_Write
    _color_calibration->_rgb_2_hsv
    _rgb_2_hsv->___aldiv
    ___lldiv->___lmul
    ___aldiv->___lmul
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _calibration->_turnLeft
    _calibration->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _batteryLevel->___awdiv

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_color_clear_init_interrupts
    i2_color_clear_init_interrupts->i2___lwdiv
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_detect
    _move->_returnHome
    _color_calibration->_rgb_2_hsv

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               272   272      0  322761
                                             54 BANK0      6     6      0
                                              0 BANK1    216   216      0
                                              0 BANK2     40    40      0
                         _Buggy_init
                    _Interrupts_init
                        _Timer0_init
                       _batteryLevel
                        _calibration
                  _color_calibration
        _color_clear_init_interrupts
                   _color_click_init
                       _color_detect
                         _color_read
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                     _lostReturnHome
                               _move
                         _resetTimer
                          _rgb_2_hsv
                               _stop
                         _wallAdjust
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _wallAdjust                                          16    10      6    6630
                                             36 COMRAM    16    10      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _move                                                19     2     17  147420
                                              1 BANK0     19     2     17
                     _fullSpeedAhead
                         _returnHome
                   _reverseOneSquare
                       _reverseShort
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _reverseShort                                        14     8      6    8575
                                             36 COMRAM    14     8      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _returnHome                                          23     7     16   72572
                                             51 COMRAM    22     6     16
                                              0 BANK0      1     1      0
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _lostReturnHome                                      21     5     16   71520
                                             51 COMRAM    21     5     16
                     _fullSpeedAhead
                    _get16bitTMR0val
                         _resetTimer
                   _reverseOneSquare
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _stop                                                12     7      5    6531
                                             36 COMRAM    12     7      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneSquare                                    15     7      8    8032
                                             36 COMRAM    15     7      8
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get16bitTMR0val                                     10     8      2     102
                                             17 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                      13     7      6    9107
                                             36 COMRAM    13     7      6
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_detect                                        68    14     54    3873
                                             21 COMRAM    14    14      0
                                              0 BANK0     54     0     54
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    2808
                                             35 COMRAM     1     1      0
                  _I2C_2_Master_Init
        _color_clear_init_interrupts
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_clear_init_interrupts                          5     5      0    1905
                                             30 COMRAM     5     5      0
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                            ___lwdiv
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     903
                                             19 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_calibration                                   22     2     20   13624
                                             65 COMRAM     2     2      0
                                             22 BANK0     20     0     20
                         _color_read
                          _rgb_2_hsv
                        _white_Light
 ---------------------------------------------------------------------------------
 (1) _white_Light                                          1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rgb_2_hsv                                           44    34     10    8913
                                             43 COMRAM    22    12     10
                                              0 BANK0     22    22      0
                            ___aldiv
                            ___lldiv
                             ___lmul
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (2) _min                                                  4     0      4     844
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _max                                                  4     0      4     844
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1896
                                             17 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1141
                                             29 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             29 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read                                           9     7      2    1548
                                             21 COMRAM     9     7      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      31
                                             18 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      65
                                             18 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibration                                         10     2      8   43854
                                             50 COMRAM    10     2      8
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     7      7   16520
                                             36 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     7      7   25520
                                             36 COMRAM    14     7      7
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    4341
                                             30 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     472
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     841
                                             23 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _batteryLevel                                         2     2      0     758
                                             25 COMRAM     2     2      0
                         _ADC_getval
                           _ADC_init
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      34
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buggy_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _LowISR                                               3     3      0       0
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighISR                                              2     2      0     622
                                             12 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
      i2_color_clear_init_interrupts
 ---------------------------------------------------------------------------------
 (8) i2_color_clear_init_interrupts                        5     5      0     600
                                              7 COMRAM     5     5      0
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                          i2___lwdiv
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (9) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (8) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _getCharFromTxBuf                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buggy_init
   _Interrupts_init
   _Timer0_init
   _batteryLevel
     _ADC_getval
     _ADC_init
     ___awdiv
   _calibration
     _turnLeft
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _turnRight
       _setMotorPWM
   _color_calibration
     _color_read
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _rgb_2_hsv
       ___aldiv
         ___lmul (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _max
       _min
     _white_Light
   _color_clear_init_interrupts
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
     ___lwdiv
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_clear_init_interrupts
     _color_writetoaddr
   _color_detect
     _max
     _min
   _color_read
   _fullSpeedAhead
     _setMotorPWM
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _lostReturnHome
     _fullSpeedAhead
     _get16bitTMR0val
     _resetTimer
     _reverseOneSquare
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
     _turnRight
   _move
     _fullSpeedAhead
     _returnHome
       _fullSpeedAhead
       _get16bitTMR0val
       _resetTimer
       _reverseOneSquare
       _stop
       _turnLeft
       _turnRight
     _reverseOneSquare
     _reverseShort
       _setMotorPWM
     _turnLeft
     _turnRight
   _resetTimer
   _rgb_2_hsv
   _stop
   _wallAdjust
     _setMotorPWM
   _white_Light

 _LowISR (ROOT)

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf
   i2_color_clear_init_interrupts
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2___lwdiv
     i2_color_writetoaddr
       i2_I2C_2_Master_Start
       i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      67        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     28      B6       9       71.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D8     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3C      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      4D       1       81.9%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllhlll     31      0       0      44        0.0%
BITBIGSFRllllhl     2A      0       0      58        0.0%
BITBIGSFRllllll     26      0       0      65        0.0%
BITBIGSFRllllhl     20      0       0      49        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRllhh       17      0       0      38        0.0%
BITBIGSFRllhlll     14      0       0      41        0.0%
BITBIGSFRhlhl       13      0       0      34        0.0%
BITBIGSFRllllhl     11      0       0      52        0.0%
BITBIGSFRllllhl     11      0       0      53        0.0%
BITBIGSFRhllh        E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      51        0.0%
BITBIGSFRllllhl      C      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRllllhh      8      0       0      47        0.0%
BITBIGSFRllhlll      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      64        0.0%
BITBIGSFRllllhl      6      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      60        0.0%
BITBIGSFRllhlhh      5      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      42        0.0%
BITBIGSFRllllhl      3      0       0      59        0.0%
BITBIGSFRllllhl      3      0       0      55        0.0%
BITBIGSFRllllhl      3      0       0      61        0.0%
BITBIGSFRlllh        2      0       0      45        0.0%
BITBIGSFRlh          2      0       0      37        0.0%
BITBIGSFRllllhl      1      0       0      54        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     283      66        0.0%
DATA                 0      0     283       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 11:45:15 2024

                                _white_Light 5306                                           l93 2A56  
                                         l95 2A64                                 ___awdiv@sign 0017  
                                         bsr 0FE0                          ___wmul@multiplicand 0014  
                         i2___lwdiv@dividend 0001                wallAdjust@wallReverseDuration 002F  
                           main@turnDuration 0293                            ??_Interrupts_init 0012  
                                        l201 2548                                          l210 276A  
                                        l202 25F0                                          l211 2812  
                                        l107 2E6A                                          l220 51E2  
                                        l204 25FE                                          l221 51EA  
                                        l213 2820                                          l205 26A6  
                                        l214 28C8                                          l207 26B4  
                                        l151 4C9C                                          l216 28D6  
                                        l208 275C                                          l225 51B6  
                                        l217 297E                                          l162 413A  
                                        l226 51BE                                          l234 32B2  
                                        l154 5348                                          l148 515C  
                                        l157 5322                                          l318 5192  
                                        l190 3AC2                                          l239 3348  
                                        l159 5328                                          l167 37C2  
                                        l415 53A6                                          l272 5290  
                                        l184 3AC0                                          l281 5432  
                                        l193 23CE                                          l601 1C98  
                                        l266 5240                                          l275 543C  
                                        l195 23DC                                          l611 1D16  
                                        l284 5412                                          l196 2484  
                                        l620 2348                                          l269 526A  
                                        l701 42D6                                          l462 53C0  
                                        l278 5446                                          l198 2492  
                                        l287 5124                                          l199 253A  
                                        l480 50CC                                          l560 4E76  
                                        l704 4318                                          l369 5406  
                                        l465 53C4                                          l481 50E0  
                                        l641 4A0A                                          l713 345A  
                                        l626 2348                                          l467 53D2  
                                        l483 50E2                                          l723 35C4  
                                        l715 347E                                          l468 53D8  
                                        l644 4A4C                                          l636 23C2  
                                        l740 3DF6                                          l732 36D8  
                                        l661 46CC                                          l653 45F6  
                                        l821 4DE6                                          l709 33EE  
                                        l670 441C                                          l814 4DD6  
                                        l718 3502                                          l479 50CA  
                                        l567 4838                                          l655 461A  
                                        l735 371A                                          l727 3630  
                                        l672 4440                                          l760 3BC8  
                                        l752 3F4C                                          l744 3E62  
                                        l649 458A                                          l761 3BFE  
                                        l729 3654                                          l658 469E  
                                        l666 43B0                                          l746 3E86  
                                        l586 163A                                          l675 44C4  
                                        l683 4AE6                                          l595 1C98  
                                        l764 3C4C                                          l756 3BAC  
                                        l692 41D0                                          l765 3D3C  
                                        l781 5428                                          l749 3F0A  
                                        l678 44F2                                          l767 3D5C  
                                        l687 4B32                                          l784 5268  
                                        l696 423C                                          l778 5368  
                                        l866 4944                                          l698 4252  
                                        l787 52DE                                          l798 502E  
                                        l799 503E                                          _max 51C0  
                                        _min 5194                              color_detect@HSV 009E  
                              ?_color_detect 009E                                          prod 0FF3  
                        i2_color_writetoaddr 536A                                          wreg 0FE8  
                            color_detect@red 00A4    color_clear_init_interrupts@high_threshold 0020  
i2color_clear_init_interrupts@high_threshold 0009                                         l1018 4BF6  
                                       l1285 4F60                                         l1278 4F58  
                                       l5000 4C5A                                         l5010 4C92  
                                       l5002 4C6A                                         l5020 300A  
                                       l5012 2E6E                                         l5004 4C74  
                                       l5030 315A                                         l5022 306E  
                                       l5014 2FC2                                         l5006 4C7E  
                                       l5110 3EF6                                         l5102 3E9E  
                                       l5040 3334                                         l5032 31F4  
                                       l5024 3084                                         l5016 2FDC  
                                       l5008 4C88                                         l5200 1B52  
                                       l5120 163C                                         l5112 3F06  
                                       l5104 3ED2                                         l6000 2B98  
                                       l5034 320C                                         l5026 30E6  
                                       l5018 2FF4                                         l5050 522C  
                                       l5042 5218                                         l5202 1B72  
                                       l5210 1BE6                                         l5130 1704  
                                       l5122 165C                                         l5114 3F2E  
                                       l5106 3EDE                                         l6010 2BDC  
                                       l6002 2BA0                                         l5060 53BC  
                                       l5036 330A                                         l5028 3142  
                                       l5052 522E                                         l5044 5222  
                                       l5300 5396                                         l5212 1C04  
                                       l5204 1B8A                                         l5140 179A  
                                       l5132 171C                                         l5124 1674  
                                       l5108 3EEA                                         l6020 2C66  
                                       l6004 2BBE                                         l6012 2BE6  
                                       l5062 53BE                                         l5054 53A8  
                                       l5230 4B34                                         l5038 3328  
                                       l5046 5228                                         l5310 4DF8  
                                       l5302 53A0                                         l5222 1CB4  
                                       l5214 1C24                                         l5206 1BC2  
                                       l5150 17F8                                         l5142 17A2  
                                       l5134 1738                                         l5126 16AC  
                                       l5118 3F38                                         l5070 3D5E  
                                       l6030 2D94                                         l6022 2C72  
                                       l6006 2BC6                                         l6014 2BF2  
                                       l5064 53C2                                         l5056 53B2  
                                       l5240 4B60                                         l5232 4B38  
                                       l5400 26A2                                         l5048 522A  
                                       l5320 4E52                                         l5312 4E1E  
                                       l5304 53A2                                         l5224 1CB8  
                                       l5216 1C3C                                         l5160 18C6  
                                       l5152 1834                                         l5144 17A4  
                                       l5136 173C                                         l5128 16CC  
                                       l5080 3DCA                                         l5072 3D62  
                                       l6040 2DB6                                         l6032 2DA0  
                                       l6024 2C90                                         l6016 2C04  
                                       l6008 2BCA                                         l5066 53D6  
                                       l5058 53BA                                         l5250 4B8E  
                                       l5242 4B68                                         l5234 4B46  
                                       l5410 2720                                         l5402 26B8  
                                       l5330 4E74                                         l5322 4E5C  
                                       l5314 4E22                                         l5306 53A4  
                                       l5226 1CEC                                         l5218 1C74  
                                       l5170 1974                                         l5162 18E4  
                                       l5154 1852                                         l5146 17C0  
                                       l5138 1782                                         l5082 3DD6  
                                       l5090 3E1E                                         l5074 3D70  
                                       l6050 2DDA                                         l6042 2DBA  
                                       l6034 2DA8                                         l6026 2D3A  
                                       l6018 2C14                                         l5500 53F2  
                                       l5260 4BC8                                         l5252 4B96  
                                       l5244 4B6C                                         l5236 4B4E  
                                       l5340 50DA                                         l5332 5096  
                                       l4620 52D6                                         l5420 279C  
                                       l5412 2740                                         l5404 26C4  
                                       l5324 4E5E                                         l5316 4E46  
                                       l5308 4DE8                                         l4700 5260  
                                       l5180 1A1E                                         l5172 19AC  
                                       l5164 1904                                         l5156 1872  
                                       l5148 17E0                                         l5228 1D04  
                                       l5092 3E42                                         l5084 3DE2  
                                       l5076 3D8A                                         l6052 2E36  
                                       l6044 2DBE                                         l6036 2DAC  
                                       l6028 2D4A                                         l5270 4BEE  
                                       l5262 4BCA                                         l5254 4BA4  
                                       l5246 4B74                                         l5238 4B52  
                                       l5334 50A0                                         l4630 4F10  
                                       l4614 526A                                         l5430 2824  
                                       l5422 27B4                                         l5414 2758  
                                       l5406 26E6                                         l5350 240E  
                                       l5342 23C4                                         l5326 4E68  
                                       l5318 4E50                                         l4710 49A0  
                                       l5190 1ABC                                         l5182 1A56  
                                       l5166 191C                                         l5174 19C8  
                                       l5158 188A                                         l5094 3E4E  
                                       l5086 3DF2                                         l5078 3DBE  
                                       l5510 33B6                                         l5502 334A  
                                       l6054 2E3A                                         l6038 2DB2  
                                       l6046 2DC4                                         l5264 4BD0  
                                       l5256 4BAA                                         l5248 4B86  
                                       l5336 50B6                                         l4640 4F4A  
                                       l4632 4F18                                         l4624 4EEE  
                                       l4800 44C0                                         l4616 527A  
                                       l5440 28AC                                         l5432 2830  
                                       l5424 27D6                                         l5416 276E  
                                       l5408 26FE                                         l5360 2496  
                                       l5352 2426                                         l5344 23CA  
                                       l5280 5134                                         l5600 3720  
                                       l5328 4E6A                                         l4720 4A06  
                                       l4712 49D4                                         l4704 4946  
                                       l5192 1AD4                                         l5176 19E6  
                                       l5168 1954                                         l5096 3E5E  
                                       l5088 3E1A                                         l5520 3412  
                                       l5512 33C2                                         l5504 3356  
                                       l6048 2DD6                                         l6056 2E44  
                                       l5274 515E                                         l5290 5352  
                                       l5258 4BC0                                         l5266 4BD6  
                                       l5338 50C4                                         l4642 4F4C  
                                       l4634 4F26                                         l4626 4EF6  
                                       l4618 52BA                                         l4810 451E  
                                       l4802 44E8                                         l4730 543E  
                                       l4650 540A                                         l5450 2920  
                                       l5442 28C4                                         l5434 2852  
                                       l5426 27F6                                         l5418 277A  
                                       l5370 251E                                         l5362 24A2  
                                       l5354 2448                                         l5346 23E0  
                                       l5282 5144                                         l5602 3758  
                                       l5610 37C6                                         l4722 4A2E  
                                       l4714 49E0                                         l4706 498E  
                                       l5194 1B0C                                         l5178 1A06  
                                       l5186 1A7E                                         l5098 3E8C  
                                       l5530 3484                                         l5514 33CE  
                                       l5522 3416                                         l5506 3366  
                                       l6058 2E58                                         l5292 535C  
                                       l5268 4BE6                                         l4644 4F52  
                                       l4636 4F2C                                         l4628 4F08  
                                       l4660 46EA                                         l4820 4586  
                                       l4812 4552                                         l5460 3AEC  
                                       l4740 50FA                                         l4732 5442  
                                       l4652 540E                                         l4900 4FD6  
                                       l5452 2942                                         l5444 28DA  
                                       l5436 286A                                         l5428 280E  
                                       l5380 2592                                         l5372 2536  
                                       l5364 24C4                                         l5356 2468  
                                       l5348 23EC                                         l5284 514E  
                                       l5276 5126                                         l5620 3882  
                                       l5612 37E8                                         l5604 3790  
                                       l4716 49EC                                         l5188 1A9C  
                                       l5700 1084                                         l5540 34E2  
                                       l5524 343A                                         l5516 33DA  
                                       l5508 3382                                         l5294 5366  
                                       l4638 4F42                                         l4670 47B4  
                                       l4662 473E                                         l4830 45F2  
                                       l4822 45AE                                         l4814 455E  
                                       l4806 44F4                                         l5470 3BD6  
                                       l5462 3B04                                         l4742 5120  
                                       l4734 50E6                                         l4646 5434  
                                       l4654 542A                                         l4910 4D44  
                                       l4902 4FE6                                         l4750 51AA  
                                       l5454 2962                                         l5446 28E6  
                                       l5438 288C                                         l5390 260E  
                                       l5382 25B4                                         l5374 254C  
                                       l5366 24DC                                         l5358 2480  
                                       l5286 5158                                         l5278 512A  
                                       l5630 38F8                                         l5622 38A4  
                                       l5614 380A                                         l5606 37B2  
                                       l4718 49F8                                         l4726 4A38  
                                       l5198 1B34                                         l5710 1122  
                                       l5702 109C                                         l5542 34EE  
                                       l5550 3530                                         l5534 3496  
                                       l5526 3446                                         l5518 33EA  
                                       ?_max 0012                                         l5288 534A  
                                       l4672 47F8                                         l4664 4752  
                                       l4840 4672                                         l4832 4620  
                                       l4816 456A                                         l4824 45B2  
                                       l4808 4512                                         l4760 431A  
                                       l5480 3C18                                         l5472 3BEE  
                                       l5464 3B44                                         l4744 5122  
                                       l4736 50EA                                         l4648 5438  
                                       l4656 542E                                         l4920 4D8C  
                                       l4912 4D54                                         l4904 4FF4  
                                       l5456 297A                                         l5448 2908  
                                       l5392 2630                                         l5384 25D4  
                                       l5376 2558                                         l5368 24FE  
                                       l4728 532C                                         l5640 395E  
                                       l5632 3900                                         l5624 38AC  
                                       l5616 3812                                         l5608 37BA  
                                       l5296 538A                                         l4680 4A7A  
                                       l5800 1E18                                         l5720 11E6  
                                       l5712 113A                                         l5704 10D4  
                                       l5560 35A4                                         l5552 354C  
                                       l5544 34FE                                         l5536 34CA  
                                       l5528 3456                                         l4666 4756  
                                       l4658 46CE                                         l4842 467E  
                                       l4826 45D6                                         l4818 4576  
                                       l4770 4390                                         l4762 4338  
                                       l5490 3C90                                         l5482 3C30  
                                       l5474 3BF8                                         l5466 3B6C  
                                       l5458 3AC4                                         l4738 50F2  
                                       l4930 4DD0                                         l4922 4D96  
                                       l4914 4D6A                                         l4906 5004  
                                       l4754 51C0                                         l5394 2648  
                                       l5386 25EC                                         l5378 257A  
                                       l5642 3980                                         l5650 3A06  
                                       l5634 3922                                         l5618 384A  
                                       l5626 38B4                                         l5298 5394  
                                       l4690 4AE2                                         l4682 4AAE  
                                       l4674 5420                                         l5810 1E52  
                                       l5802 1E1C                                         l5730 1288  
                                       l5714 1176                                         l5722 1206  
                                       l5706 10F4                                         l5570 3610  
                                       l5562 35B0                                         l5554 3558  
                                       l5546 3526                                         l5538 34D6  
                                main@curMove 0291                                         l4668 4798  
                                       l4844 468A                                         l4836 4632  
                                       l4828 45E2                                         l4780 43FC  
                                       l4772 439C                                         l4764 4344  
                                       l5492 3CD0                                         l5484 3C3E  
                                       l5476 3C0C                                         l5468 3BBA  
                                       l4940 4860                                         l4932 483A  
                                       l4924 4DB4                                         l4916 4D72  
                                       l4908 500E                                         l4756 51D6  
                                       l4748 5194                                         l5396 266A  
                                       l5388 2602                                         l5660 3ABC  
                                       l5652 3A1C                                         l5644 3996  
                                       l5636 3944                                         l5628 38D6  
                                       l4692 4B0A                                         l4684 4ABA  
                                       l4676 4A4E                                         l4860 41A4  
                                       l4852 413C                                         l5820 1EE4  
                                       l5812 1E54                                         l5804 1E22  
                                       l5740 132A                                         l5732 12A8  
                                       l5724 1218                                         l5716 1196  
                                       l5708 1106                                         l5580 366C  
                                       l5572 361C                                         l5564 35C0  
                                       l5556 358C                                         l5900 298C  
                                       ?_min 0012                                         l4846 469A  
                                       l4838 4666                                         l4790 4458  
                                       l4782 4408                                         l4774 43AC  
                                       l4766 4378                                         l5494 3CF8  
                                       l5486 3C50                                         l5478 3C16  
                                       l4950 48A8                                         l4942 486E  
                                       l4934 483E                                         l4926 4DC4  
                                       l4918 4D7E                                         l5398 268A  
                                       l5654 3A72                                         l5646 39A8  
                                       l5638 3948                                         l4686 4AC6  
                                       l4694 4B0E                                         l4678 4A6E  
                                       l4862 41B0                                         l4870 41F8  
                                       l4854 4158                                         l5830 1F94  
                                       l5822 1F02                                         l5814 1E70  
                                       l5806 1E32                                         l5750 13EE  
                                       l5742 1346                                         l5734 12E0  
                                       l5726 1234                                         l5718 11CE  
                                       l5670 0E48                                         l5590 36D4  
                                       l5582 36A0                                         l5574 362C  
                                       l5566 35E8                                         l5558 3598  
                                       l5910 29B0                                         l5902 298C  
                                       l4848 46C2                                         l4792 448C  
                                       l4784 4418                                         l4776 43D4  
                                       l4768 4384                                         l5496 3D40  
                                       l5488 3C78                                         l4960 48F2  
                                       l4952 48B0                                         l4944 487E  
                                       l4936 484C                                         l4928 4DC6  
                                       l5656 3A88                                         l5648 3A02  
                                       l4688 4AD2                                         l4696 5242  
                                       l4872 421C                                         l4864 41BC  
                                       l4856 4164                                         l5840 205C  
                                       l5832 1FB4                                         l5824 1F22  
                                       l5816 1E90                                         l5808 1E4A  
                                       l5760 146C                                         l5752 1406  
                                       l5744 135E                                         l5736 12F8  
                                       l5728 124C                                         l5680 0F06  
                                       l5672 0E80                                         l5664 0E02  
                                       l5592 36FC                                         l5584 36AC  
                                       l5576 365A                                         l5568 35EC  
                                       l5920 29D0                                         l5912 29B4  
                                       l5904 2992                                         l4794 4498  
                                       l4786 4446                                         l4778 43D8  
                                       l5498 3D58                                         l4970 4924  
                                       l4962 4902                                         l4954 48BC  
                                       l4946 4882                                         l4938 485C  
                                       l5658 3A9A                                         l4698 524E  
                                       l4890 42C2                                         l4882 426A  
                                       l4874 4228                                         l4866 41CC  
                                       l4858 4198                                         l5850 2106  
                                       l5834 1FCC                                         l5842 2078  
                                       l5826 1F3A                                         l5818 1EA8  
                                       l5762 14A4                                         l5770 1534  
                                       l5746 1396                                         l5754 1426  
                                       l5738 1318                                         l5690 0FC0  
                                       l5682 0F1E                                         l5674 0EA0  
                                       l5666 0E14                                         l5586 36B8  
                                       l5930 29EE                                         l5922 29D4  
                                       l5914 29C4                                         l5906 2998  
                                       l4796 44A4                                         l4980 3F4E  
                                       l4972 4934                                         l4964 4904  
                                       l4956 48CA                                         l4948 4892  
                                       l4892 42D2                                         l4884 429E  
                                       l4876 4238                                         l4868 41F4  
                                       l5860 2184                                         l5844 2096  
                                       l5836 2004                                         l5828 1F76  
                                       l5780 15DE                                         l5772 1546  
                                       l5764 14C4                                         l5756 1438  
                                       l5748 13B6                                         l5692 0FDC  
                                       l5684 0F56                                         l5668 0E30  
                                       l5676 0ED8                                         l5588 36C4  
                                       l5596 3706                                         l5940 2A0E  
                                       l5932 29F6                                         l5924 29E0  
                                       l5916 29C8                                         l5908 29A4  
                                       l4798 44B0                                         l4990 4058  
                                       l4982 3F68                                         l4966 490E  
                                       l4958 48D4                                         l5598 371C  
                                       l4894 42FA                                         l4886 42AA  
                                       l4878 4258                                         l5870 2222  
                                       l5862 21BC                                         l5846 20B6  
                                       l5854 212E                                         l5838 2024  
                                       l5790 1D54                                         l5782 15F6  
                                       l5774 1562                                         l5766 14FC  
                                       l5758 1454                                         l5694 0FF4  
                                       l5686 0F76                                         l5678 0EEA  
                                       l5950 2A2E                                         l5942 2A12  
                                       l5934 29FE                                         l5926 29E6  
                                       l5918 29CC                                         l4992 4076  
                                       l4984 3F82                                         l4968 4914  
                                       l4976 5308                                         l4888 42B6  
                                       l5880 22B4                                         l5872 223A  
                                       l5856 214C                                         l5848 20CE  
                                       l5792 1D8C                                         l5784 1D18  
                                       l5776 157A                                         l5768 1514  
                                       l5696 102C                                         l5688 0FAE  
                                       l5960 2A48                                         l5952 2A32  
                                       l5944 2A16                                         l5936 2A06  
                                       l5928 29EA                                         l4994 40D6  
                                       l4986 3FDA                                         l4978 5318  
                                       l4898 4304                                         l5890 2364  
                                       l5882 22D4                                         l5874 2272  
                                       l5858 216C                                         l5866 21E4  
                                       l5794 1DAC                                         l5786 1D1C  
                                       l5778 15C2                                         l5698 104C  
                                       l5970 2ADA                                         l5962 2A4E  
                                       l5954 2A36                                         l5946 2A1E  
                                       l5938 2A0A                                         l4996 40F4  
                                       l4988 3FF8                                         l5892 2368  
                                       l5884 22EC                                         l5868 2202  
                                       l5796 1DE4                                         l5788 1D3C  
                                       l5980 2B26                                         l5972 2AFE  
                                       l5964 2A52                                         l5956 2A3A  
                                       l5948 2A26                                         l4998 4BF8  
                                       l5894 239A                                         l5886 2324  
                                       l5878 2296                                         l5798 1DFC  
                                       l5990 2B6C                                         l5982 2B32  
                                       l5974 2B04                                         l5966 2A6C  
                                       l5958 2A44                                         l5896 23B2  
                                       l5992 2B70                                         l5984 2B3A  
                                       l5976 2B1E                                         l5968 2A84  
                                       l5994 2B76                                         l5986 2B3E  
                                       l5978 2B22                                         l5898 2980  
                                       l5996 2B7A                                         l5988 2B50  
                                       l5998 2B8C                                         u4000 502E  
                    color_calibration@orange 00C2                                 _BAUD4CONbits 0EE9  
                                       u4001 502A                                         u4010 4D6A  
                                       u4011 4D66                                         u4020 4D8C  
                                       u4100 5318                                         u4021 4D88  
                                       u4101 5314                                         u4030 4DB4  
                                       u4110 2FF4                                         u4031 4DB0  
                                       u4111 2FF0                                         u4040 484C  
                                       u4120 300A                                         u4200 3E42  
                                       u5000 1218                                         u4041 4848  
                                       u4121 3006                                         u4201 3E3E  
                                       u5001 1214                                         u4050 486E  
                                       u4130 3084                                         u4210 3E86  
                                       u5010 132A                                         _T2PR 0FBC  
                                       u4051 486A                                         u4131 3080  
                                       u4211 3E82                                         u5011 1326  
                                       u4060 48A8                                         u4140 315A  
                                       u5100 2202                                         u4300 1B52  
                                       u4220 3E9A                                         u5020 1438  
                                       u4061 48A4                                         u4141 3156  
                                       u5101 21FE                                         u4301 1B4E  
                                       u4221 3E96                                         u5021 1434  
                                       u4070 48CA                                         u4150 320C  
                                       u5110 22B4                                         u4310 1C04  
                                       u4230 3F2E                                         u5030 1546  
                                       u4071 48C6                                         u4151 3208  
                                       u5111 22B0                                         u4311 1C00  
                                       u4231 3F2A                                         u5031 1542  
                                       u4400 50C4                                         u4080 48F2  
                                       u5120 239A                                         u5040 1E32  
                                       u4320 1CEC                                         u4240 1782  
                                       u5200 2C04                                         u4401 50C0  
                                       u4081 48EE                                         u5121 2396  
                                       u5041 1E2E                                         u4321 1CE8  
                                       u4241 177E                                         u5201 2C00  
                                       u4410 50DA                                         u4090 4924  
                                       u4170 3328                                         u5130 23C2  
                                       u5050 1E70                                         u4330 1D16  
                                       u4250 17C0                                         u4411 50D6  
                                       u4091 4920                                         u4171 3324  
                                       u5131 23BE                                         u5051 1E6C  
                                       u4331 1D12                                         u4251 17BC  
                                       u4180 53D2                                         u4340 4B46  
                                       u3700 5290                                         u4500 26B4  
                                       u4420 23DC                                         u5060 1F02  
                                       u4260 1852                                         u4181 53CE  
                                       u4341 4B42                                         u3701 528C  
                                       u4165 322A                                         u4501 26B0  
                                       u4421 23D8                                         u5061 1EFE  
                                       u4261 184E                                         u5301 2D18  
                                       u5221 2C7C                                         u5141 2986  
                                       u4350 4B60                                         u3710 4F08  
                                       u5070 1F94                                         u4270 18E4  
                                       u4190 3E1A                                         u4351 4B5C  
                                       u3711 4F04                                         u4511 26D2  
                                       u4431 23FA                                         u5071 1F90  
                                       u6007 1DEE                                         u4271 18E0  
                                       u4191 3E16                                         u5311 2D2A  
                                       u5231 2C9A                                         u5215 2C10  
                                       u5151 299E                                         u4360 4B86  
                                       u3720 4F26                                         u4600 3BD6  
                                       u3800 510E                                         u4520 276A  
                                       u4440 2492                                         u5080 2096  
                                       u4280 19E6                                         u5320 2DD6  
                                       u4361 4B82                                         u3721 4F22  
                                       u4601 3BD2                                         u3801 5106  
                                       u4521 2766                                         u4441 248E  
                                       u5081 2092                                         u6017 1E9A  
                                       u4281 19E2                                         u5321 2DD2  
                                       u5241 2CAC                                         u5217 2C14  
                                       u5161 29AA                                         u4370 4BA4  
                                       u3730 4F42                                         u4610 3BEE  
                                       u5090 214C                                         u4290 1A9C  
                                       u5330 2E58                                         u5170 2A64  
                                       u4371 4BA0                                         u3731 4F3E  
                                       u4611 3BEA                                         u4531 2788  
                                       u4451 24B0                                         u5091 2148  
                                       u6107 20F8                                         u6027 1ED2  
                                       u4291 1A98                                         u5331 2E54  
                                       u5251 2CBE                                         u5171 2A60  
                                       u4380 4BC0                                         u3740 46EA  
                                       u3900 45D6                                         u4620 3C0C  
                                       u3820 51AA                                         u4540 2820  
                                       u4460 2548                                         u4700 3610  
                                       u5340 2E6A                                         u5180 2B8C  
                                       u4381 4BBC                                         u3741 46E6  
                                       u3901 45D2                                         u4621 3C08  
                                       u3821 51A6                                         u4541 281C  
                                       u4461 2544                                         u6117 2176  
                                       u6037 1F2C                                         u4701 360C  
                                       u5341 2E66                                         u5261 2CD0  
                                       u5181 2B88                                         u4390 4BE6  
                                       u3750 47B4                                         u3910 461A  
                                       u4630 3C3E                                         u3830 51D6  
                                       u4710 3654                                         u5190 2BBE  
                                       u4391 4BE2                                         u3751 47B0  
                                       u3911 4616                                         u4631 3C3A  
                                       u3831 51D2                                         u4551 283E  
                                       u4471 2566                                         u6207 42C8  
                                       u6127 21AE                                         u6047 1F64  
                                       u4711 3650                                         u5407 344C  
                                       u5271 2CE2                                         u5191 2BBA  
                                       u3920 462E                                         u3840 43D4  
                                       u4560 28D6                                         u4480 25FE  
                                       u4800 3882                                         u3760 4B0A  
                                       u4720 3668                                         u4640 3412  
                                       u3921 462A                                         u3841 43D0  
                                       u4561 28D2                                         u4481 25FA  
                                       u4801 387E                                         u3761 4B06  
                                       u6217 4AD8                                         u6137 222C  
                                       u6057 1FBE                                         u4721 3664  
                                       u5417 34F4                                         u4641 340E  
                                       u5281 2CF4                                         u3930 46C2  
                                       u3850 43FC                                         u3690 527A  
                                       u3818 5110                                         u4810 38A4  
                                       u3770 4B32                                         u4730 36FC  
                                       u4650 343A                                         u3931 46BE  
                                       u3851 43F8                                         u3691 5276  
                                       u4571 28F4                                         u6307 28B6  
                                       u4491 261C                                         u6227 513A  
                                       u4811 38A0                                         u3771 4B2E  
                                       u6147 2264                                         u6067 1FF6  
                                       u5507 0F82                                         u4731 36F8  
                                       u5427 35B6                                         u4651 3436  
                                       u5291 2D06                                         u3860 4440  
                                       u4580 3BBA                                         u4900 3A02  
                                       u4820 38D6                                         u4740 3758  
                                       u3940 41F4                                         u3780 499C  
                                       u4660 347E                                         u3861 443C  
                                       u4581 3BB6                                         u6317 296C  
                                       u6237 4C60                                         u4901 39FE  
                                       u4821 38D2                                         u4741 3754  
                                       u3941 41F0                                         u3781 4998  
                                       u6157 22DE                                         u6077 202E  
                                       u5517 0FE8                                         u5437 3622  
                                       u4661 347A                                         u5357 2A78  
                                       u3870 4454                                         u4590 3BC8  
                                       u4910 3A1C                                         u4830 38F8  
                                       u4750 3790                                         u3950 421C  
                                       u3790 4A2E                                         u4670 3492  
                                       u3871 4450                                         u6407 43A2  
                                       u4591 3BC4                                         u6327 3AF6  
                                       u6247 2472                                         u4911 3A18  
                                       u4831 38F4                                         u4751 378C  
                                       u3951 4218                                         u3791 4A2A  
                                       u6167 2316                                         u6087 2066  
                                       u5607 1240                                         u5527 1020  
                                       u5447 36CA                                         u4671 348E  
                                       u5367 2B10                                         u3880 44E8  
                                       u4920 3A72                                         u4840 3922  
                                       u4760 37B2                                         u3960 4252  
                                       u4680 3526                                         u3881 44E4  
                                       u6417 440E                                         u6337 3B36  
                                       u6257 2528                                         u4921 3A6E  
                                       u4841 391E                                         u4761 37AE  
                                       u3961 424E                                         u6177 49FE  
                                       u6097 20C0                                         u5617 127C  
                                       u5537 1058                                         u5457 0E3C  
                                       u4681 3522                                         u5377 2B46  
                                       u3890 45AE                                         u4930 3A88  
                                       u4850 3944                                         u4770 37E8  
                                       u3970 4266                                         u4690 35E8  
                                       u3891 45AA                                         u6427 44B6  
                                       u6347 3B76                                         u6267 25DE  
                                       u4931 3A84                                         u4851 3940  
                                       u4771 37E4                                         u3971 4262  
                                       u6187 41C2                                         u5707 14D0  
                                       u5627 12B4                                         u5547 1090  
                                       u5467 0E74                                         u4691 35E4  
                                       u5387 2BD2                                         u4940 3A9A  
                                       u4860 395E                                         u4780 380A  
                                       u3980 42FA                                         u6437 457C  
                                       u6357 3C22                                         u6277 2694  
                                       u4941 3A96                                         u4861 395A  
                                       u4781 3806                                         u3981 42F6  
                                       u6197 422E                                         u5717 1508  
                                       u5637 12EC                                         u5557 10C8  
                                       u5477 0EAC                                         u5397 33E0  
                                       u3990 4FF4                                         u4950 3ABC  
                                       u4870 3980                                         u4790 384A  
                                       u6447 45E8                                         u6367 3C82  
                                       u3991 4FF0                                         u6287 274A  
                                       u4951 3AB8                                         u4871 397C  
                                       u4791 3846                                         u5807 170E  
                                       u5727 156E                                         u5647 1352  
                                       u5567 112E                                         u5487 0F12  
                                       u4880 3996                                         u4960 0E14  
                                       u6457 4690                                         u6377 3CC2  
                                       u6297 2800                                         u4881 3992  
                                       u5817 17EA                                         u5737 15EA  
                                       u5657 138A                                         u5577 116A  
                                       u5497 0F4A                                         u4961 0E10  
                                       u4890 39A8                                         u4970 0EEA  
                                       u6387 3D02                                         u4891 39A4  
                                       u5907 1A48                                         u5827 1822  
                                       u5747 3DE8                                         u5667 13C2  
                                       u5587 11A2                                         u4971 0EE6  
                                       u4980 0FC0                                         u6397 3D4A  
                                       u5917 1AC6                                         u5837 187C  
                                       u5757 3E54                                         u5677 13FA  
                                       u5597 11DA                                         u4981 0FBC  
                                       u4990 1106                                         u5927 1AFE  
                                       u5847 18B4                                         u5767 3EFC  
                                       u5687 1460                                         u4991 1102  
                                       u5937 1B7C                                         u5857 190E  
                                       u5777 1666                                         u5697 1498  
                                       u5947 1BB4                                         u5867 1946  
                                       u5787 169E                                         u5957 1C2E  
                                       u5877 197E                                         u5797 16D6  
                                       u5967 1C66                                         u5887 19B6  
                                       u5977 1D46                                         u5897 1A10  
                                       u5987 1D7E                                         u5997 1DB6  
                    color_calibration@yellow 00BE                  lostReturnHome@straightSpeed 003D  
                                       _main 2980                                         _move 0E02  
                                       _lost 009C                                         fsr1h 0FE2  
                         i2___lwdiv@quotient 0005                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         max@a 0012  
                                       max@b 0014                                         btemp 004E  
                                       _stop 4946                                         min@a 0012  
                                       min@b 0014                                         prodh 0FF4  
                                       prodl 0FF3                                         start 0050  
                           color_detect@blue 00B0                          main@reverseDuration 01A5  
                           __end_of_ADC_init 53C2                         ?i2_color_writetoaddr 0003  
                           color_detect@pink 00BC                              __end_of_HighISR 4EEE  
                      lostReturnHome@curMove 003C                                 ___param_bank 0000  
                       __end_of_batteryLevel 50E4                                        ??_max 0016  
                                      ??_min 0016                              __end_of___aldiv 4946  
                                      ?_main 0001                                        _ADPCH 0F5F  
                            __end_of___awdiv 4BF8                                        ?_move 009F  
                            __end_of___lldiv 4DE8                                        ?_stop 0025  
                            ___awdiv@divisor 0014                              __end_of___lwdiv 4F62  
                                      i2l151 4D42                                        i1l384 0040  
                                      i2l154 5388                                        i2l430 5216  
                                      i2l423 5304                                        i2l272 52B8  
                                      i2l281 5450                                        i2l275 545A  
                                      i2l284 541E                                        i2l437 53F0  
                                      i2l269 5292                                        i2l378 4EE2  
                            ___awdiv@counter 0016                               ??_color_detect 0016  
                                      _TMR0H 0FD4                                        _TMR0L 0FD3  
                        ___lmul@multiplicand 0016                   __end_of_I2C_2_Master_Start 543E  
                 __end_of_I2C_2_Master_Write 5414                                   _Buggy_init 515E  
                 color_calibration@lightblue 00C4                       returnHome@straightRamp 0040  
                     returnHome@straightTime 003A                                        tablat 0FF5  
                                      plusw0 0FEB                                        plusw2 0FDB  
                                      ttemp5 004F                                        ttemp6 0052  
                                      ttemp7 0056                                        stop@i 002D  
                                      status 0FD8                                        wtemp8 004F  
                          color_detect@color 0023                            color_detect@green 00AA  
                          color_detect@white 00CE                        ??i2_color_writetoaddr 0004  
                               main@turnRamp 028E                        _I2C_2_Master_RepStart 543E  
                         putCharToRxBuf@byte 0001                              __initialization 5040  
                  get16bitTMR0val@timer_high 0018                                 __end_of_main 2E6E  
                               __end_of_move 163C                                 __end_of_stop 4A4E  
                        move@reverseDuration 00AA                              _get16bitTMR0val 5242  
                                     ??_main 00D4                                       ??_move 00B0  
                                     ??_stop 002A                                __activetblptr 0000  
                              calibration@mL 0033                                calibration@mR 0035  
                     returnHome@turnDuration 0042                                 ?_setMotorPWM 001F  
                                     _ADRESH 0F64                                       _CCPR1H 0FAA  
                                     _CCPR2H 0FA6                                       _CCPR3H 0F25  
                                     _CCPR4H 0F21                             ___awdiv@dividend 0012  
                     lostReturnHome@turnRamp 0043                                       _RC0PPS 0E62  
                                     _RC4REG 0EE3                       wallAdjust@straightRamp 002A  
                                     _RE2PPS 0E74                                       _RC7PPS 0E69  
                                     _RD5PPS 0E6F                                       _RE4PPS 0E76  
                                     _RD6PPS 0E70                                       i2l3100 52A2  
                                     i2l1285 4FD4                                       i2l1278 4FCC  
                                     i1l4590 003C                                       i2l3410 544C  
                                     i1l4586 0026                                       i2l3404 5452  
                                     i2l3412 5416                                       i1l4588 0036  
                                     i2l3406 5456                                       i2l3414 541A  
                                     i2l3408 5448                                       i2l4400 4D2E  
                                     i2l3098 5292                                       i2l4402 4D38  
                                     i2l3720 4F7C                                       i2l4370 51EC  
                                     i2l4362 52E2                                       i2l3730 4FB6  
                                     i2l3722 4F84                                       i2l3714 536C  
                                     i2l4372 51FC                                       i2l4364 52F2  
                                     i2l3732 4FBE                                       i2l3724 4F8C  
                                     i2l3716 4F62                                       i2l4374 5200  
                                     i2l4366 52F6                                       i2l3734 4FC0  
                                     i2l3726 4F9A                                       i2l3718 4F6A  
                                     i2l4390 4C9E                                       i2l4368 5302  
                                     i2l3736 4FC6                                       i2l3728 4FA0  
                                     i2l4392 4D00                                       i2l4378 53DA  
                                     i2l4394 4D10                                       i2l4570 4E96  
                                     _RG6PPS 0E88                                       i2l4396 4D1A  
                                     i2l4580 4EC2                                       i2l4572 4E9A  
                                     i2l4398 4D24                                       i2l4582 4ECA  
                                     i2l4574 4E9E                                       i2l4566 4E80  
                                     i2l4584 4EDE                                       i2l4576 4EAC  
                                     i2l4568 4E90                                       i2l4578 4EB2  
                                  ??_HighISR 000D                     __end_of_color_click_init 515E  
                                     _TMR0IE 714D                                       _TMR0IF 719D  
                                     _TMR0IP 70FD                                       _RX4PPS 0E15  
                                     _TX4REG 0EE4                                main@lightblue 01CC  
                                     _LowISR 0018                                 ??_ADC_getval 0012  
                              ??_Timer0_init 0012                          calibration@turnRamp 003A  
                    calibration@turnDuration 0038                                 _CCPTMRS0bits 0FAD  
                           _getCharFromTxBuf 51EC                                       ___lmul 4FD6  
                                  ??___aldiv 0026                                       ___wmul 52BA  
                                  ??___awdiv 0016                                    ??___lldiv 0026  
                                  ??___lwdiv 001C                                       clear_0 5066  
                                     clear_1 5072                                       clear_2 507E  
                           ___awdiv@quotient 0018                                       isa$std 0001  
                    returnHome@straightSpeed 003D                                       move@mL 009F  
                                     move@mR 00A1                            __end_ofi2___lwdiv 4FD6  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                  ?_ADC_init 0001                                       stop@mL 0025  
                                     stop@mR 0027                                  ?_Buggy_init 0001  
                          ??_initDCmotorsPWM 0014                           __end_of_ADC_getval 53DA  
                 i2color_writetoaddr@address 0004                             __end_of_turnLeft 46CE  
                         color_detect@orange 00C2                   lostReturnHome@moveSequence 0038  
                      __end_of_isDataInTxBuf 53F2                                   __accesstop 0060  
                    __end_of__initialization 508C                           color_detect@yellow 00B6  
                            fullSpeedAhead@i 002E                                main@turnSpeed 01A7  
                     ?_I2C_2_Master_RepStart 0001                                ___rparam_used 0001  
                       __end_of_color_detect 3AC4                    reverseShort@straightSpeed 0029  
              lostReturnHome@reverseDuration 003E                              _Interrupts_init 53F2  
                             __pcstackCOMRAM 0001                      __end_of_get16bitTMR0val 526A  
                               ?_white_Light 0001                                 __pidataBANK0 545C  
                   get16bitTMR0val@timer_low 0016                     get16bitTMR0val@timer_val 001A  
               ?_color_clear_init_interrupts 0001                             _reverseOneSquare 413C  
                        __end_of_Timer0_init 536A                               main@ambientNew 01A3  
                                 ??_ADC_init 0012                                 rgb_2_hsv@HSV 0034  
                               _batteryLevel 5096                                   __pbssBANK0 0060  
                                 __pbssBANK1 01D8                                   __pbssBANK2 0200  
                             _rgb_2_hsv$3596 00A4                               _rgb_2_hsv$3597 00A6  
                             _rgb_2_hsv$3598 009E                                      ?_LowISR 0001  
                          _color_writetoaddr 532A                                 _T2CLKCONbits 0FBF  
                             _lostReturnHome 1D18                     reverseShort@straightRamp 002A  
                         ?_color_writetoaddr 0014                                      ?___lmul 0012  
                                    ?___wmul 0012                     wallAdjust@adjustDuration 002E  
                             ___lmul@product 001A                ??_color_clear_init_interrupts 001F  
                                move@curMove 00A8                      lostReturnHome@turnSpeed 0041  
                        ??_color_writetoaddr 0015                      wallAdjust@straightSpeed 0029  
                                    _SP4BRGH 0EE6                                      _SP4BRGL 0EE5  
                 fullSpeedAhead@straightRamp 002A                        turnRight@turnDuration 002A  
                                    _SSP2ADD 0ED6                                      _SSP2BUF 0ED5  
                           _brightnessChange 009D                                   _color_read 3F4E  
                    __end_of_Interrupts_init 5408                       color_writetoaddr@value 0014  
                                    _HighISR 0008                    __end_of_color_writetoaddr 534A  
                     __end_of_lostReturnHome 23C4                                    _ADREFbits 0F58  
                         _I2C_2_Master_Start 5434                                   _initUSART4 538A  
                        i2_I2C_2_Master_Idle 5292                           _I2C_2_Master_Write 5408  
                                    __Hparam 0000                          i2_I2C_2_Master_Stop 5448  
                                    __Lparam 0000                                  wallAdjust@i 0031  
                                _Timer0_init 534A                         calibration@turnSpeed 0037  
                           ?_get16bitTMR0val 0012                                      ___aldiv 483A  
                                    ___awdiv 4B34                              lostReturnHome@i 0048  
                                    ___lldiv 4D44                                ??_calibration 003B  
                        ?_I2C_2_Master_Start 0001                                      ___lwdiv 4EEE  
                        ?_I2C_2_Master_Write 0001                                 __psmallconst 0E00  
                                    _ambient 00DE                                      __pcinit 5040  
                                    __ramtop 0E00                                    ?_turnLeft 0025  
                          __end_of_rgb_2_hsv 334A                                      __ptext0 2980  
                                    __ptext1 334A                                      __ptext2 0E02  
                                    __ptext3 3D5E                                      __ptext4 163C  
                                    __ptext5 1D18                                      __ptext6 4946  
                                    __ptext7 413C                                      __ptext8 5420  
                                    __ptext9 5242                         ?i2_I2C_2_Master_Idle 0001  
                                  _T2CONbits 0FBD                                ?_reverseShort 0025  
                       ?i2_I2C_2_Master_Stop 0001                             ___aldiv@dividend 001E  
                                  _T2HLTbits 0FBE                                _RxBufWriteCnt 004D  
                                    main@HSV 0294                     __end_of_getCharFromTxBuf 5218  
                                    main@buf 0100                                      main@red 01A8  
                       ??_I2C_2_Master_Start 0013                         ??_I2C_2_Master_Write 0013  
                             __pintcode_body 4E78                         end_of_initialization 508C  
            ??i2_color_clear_init_interrupts 0008                  __end_ofi2_color_writetoaddr 538A  
                           ADC_getval@tmpval 0012                            reverseOneSquare@i 0030  
                                    int_func 4E78                            ?_color_click_init 0001  
                            ?_lostReturnHome 0034                                   _wallAdjust 334A  
                            ___lldiv@divisor 0022                                   _resetTimer 5420  
                         ??_color_click_init 0024                              ___lldiv@counter 002A  
                           ___aldiv@quotient 0028                   batteryLevel@batteryQuarter 001B  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc1 0FE6  
                                    postinc2 0FDE                   batteryLevel@batteryVoltage 001A  
                                 main@F14651 0060                                   main@F14662 00DA  
                                 main@F14657 01D8                                   main@F14659 0200  
                                 _returnHome 163C                              _initDCmotorsPWM 4DE8  
                                 ??_turnLeft 002C                                    _PORTFbits 0F8E  
                         setMotorPWM@negDuty 0024                               ??_reverseShort 002B  
                      ??i2_I2C_2_Master_Idle 0001                                move@turnSpeed 00AD  
                          __end_of_turnRight 44F4                        ??i2_I2C_2_Master_Stop 0002  
                        __end_of_calibration 3D5E                                 _color_detect 371C  
                                returnHome@i 009E                                    _TRISAbits 0F81  
                         setMotorPWM@posDuty 0023                                    _TRISBbits 0F82  
                                  _TRISCbits 0F83                                    _TRISDbits 0F84  
                                  _TRISEbits 0F85                                    _TRISFbits 0F86  
                                  _TRISGbits 0F87                                    _TRISHbits 0F88  
                           white_Light@state 0012                                 ??_Buggy_init 0012  
                           fullSpeedAhead@mL 0025                             fullSpeedAhead@mR 0027  
                                ?_color_read 0016                            i2___lwdiv@divisor 0003  
                   color_writetoaddr@address 0015                                    i2___lwdiv 4F62  
                    ??_I2C_2_Master_RepStart 0013                            i2___lwdiv@counter 0007  
                   __end_of_reverseOneSquare 431A                             ?_Interrupts_init 0001  
                              stop@cur_power 002F                                  _CCP1CONbits 0FAB  
                     color_calibration@green 00BA                                 _EUSART4RXbuf 0088  
                        returnHome@turnSpeed 0041                                 _EUSART4TXbuf 0252  
                                _CCP2CONbits 0FA7                       color_calibration@white 00C6  
                                _CCP3CONbits 0F26                   lostReturnHome@straightRamp 0040  
                 lostReturnHome@straightTime 003A                                  ?_initUSART4 0001  
                                 main@orange 01C6                                  _CCP4CONbits 0F22  
                                 main@motorL 02AC                                   main@motorR 02A2  
                                 main@yellow 01BA                               __end_of_LowISR 0050  
                             color_read@RGBC 0016                               _fullSpeedAhead 4A4E  
                             __end_of___lmul 5040                         turnLeft@turnDuration 002A  
                             __end_of___wmul 52E0                           __end_of_Buggy_init 5194  
                        start_initialization 5040                                  __end_of_max 51EC  
                                __end_of_min 51C0                                _TxBufWriteCnt 004B  
                 lostReturnHome@turnDuration 0042                                   rgb_2_hsv@b 00B2  
                                 rgb_2_hsv@g 00B0                                   ?i2___lwdiv 0001  
                                 rgb_2_hsv@r 00A8                             move@moveSequence 00A4  
                        wallAdjust@cur_power 0033        __end_ofi2_color_clear_init_interrupts 4D44  
              i2_color_clear_init_interrupts 4C9E                                  ?_wallAdjust 0025  
                                ?_resetTimer 0001                                     ??_LowISR 000F  
                    __end_of_initDCmotorsPWM 4E78                       __end_of_fullSpeedAhead 4B34  
                         turnRight@cur_power 0031                                     ??___lmul 001A  
                              rgb_2_hsv@RGBC 002C                                     ??___wmul 0016  
                             _putCharToRxBuf 52E0                                  __pdataBANK0 00DA  
                              rgb_2_hsv@diff 00AC                i2I2C_2_Master_Write@data_byte 0002  
                                _calibration 3AC4                                rgb_2_hsv@cmax 00AA  
                              rgb_2_hsv@cmin 00A2                                  ?_returnHome 0034  
                        wallAdjust@wallSpeed 0030                 reverseOneSquare@straightRamp 002C  
               __end_ofi2_I2C_2_Master_Start 545C                 __end_ofi2_I2C_2_Master_Write 5420  
                          turnLeft@cur_power 0031                                  __pbssCOMRAM 004A  
                              __pcstackBANK0 009E                                __pcstackBANK1 0100  
                              __pcstackBANK2 028E                                     ?_HighISR 0001  
                       __end_of_reverseShort 3F4E                             stop@straightRamp 0029  
                           ___lwdiv@dividend 0018                                 ?_Timer0_init 0001  
                     __end_of_putCharToRxBuf 5306                              ?_fullSpeedAhead 0025  
                                  __pintcode 0008                                     ?___aldiv 001E  
                         turnRight@turnSpeed 0029                                     ?___awdiv 0012  
                                   ?___lldiv 001E                                     ?___lwdiv 0018  
           reverseShort@shortReverseDuration 002E                                  __pintcodelo 0018  
                       I2C_2_Master_Read@ack 0014                         I2C_2_Master_Read@tmp 0015  
                                __smallconst 0E00                               reverseShort@mL 0025  
                             reverseShort@mR 0027                             main@moveSequence 017A  
                          _I2C_2_Master_Idle 526A                            _I2C_2_Master_Init 5218  
                          _I2C_2_Master_Read 50E4                            turnLeft@turnSpeed 0029  
                          _I2C_2_Master_Stop 542A                                    _rgb_2_hsv 2E6E  
                               _RxBufReadCnt 004C                                     _ADC_init 53A8  
                         ?_I2C_2_Master_Idle 0001                           ?_I2C_2_Master_Init 0001  
                         ?_I2C_2_Master_Read 0001                                ??_setMotorPWM 0021  
                         ?_I2C_2_Master_Stop 0001                             ___lwdiv@quotient 001D  
                   initDCmotorsPWM@PWMperiod 0012                            ?_getCharFromTxBuf 0001  
                                ??i2___lwdiv 0005                             ??_lostReturnHome 0044  
                         ??_getCharFromTxBuf 0001                            move@straightSpeed 00A9  
                            ___aldiv@divisor 0022                          ??_I2C_2_Master_Idle 0012  
                            ___aldiv@counter 0026                          ??_I2C_2_Master_Init 0012  
                        ??_I2C_2_Master_Read 0013                               ___wmul@product 0016  
                                   _LATAbits 0F79                          ??_I2C_2_Master_Stop 0013  
                                   _LATCbits 0F7B                                _isDataInTxBuf 53DA  
                                   _LATDbits 0F7C                                     _LATEbits 0F7D  
                                   _LATFbits 0F7E                                     _LATGbits 0F7F  
                                   _LATHbits 0F80                                     _IPR0bits 0E1F  
                                   _PIE0bits 0E29                                     _PIE4bits 0E2D  
                                   i1u365_20 0036                                     i1u365_21 0032  
                                turnRight@mL 0025                                  turnRight@mR 0027  
                                   i2u260_40 4FB6                                     i2u260_41 4FB2  
                                   i2u335_40 52F2                                     i2u335_41 52EE  
                                   _PIR0bits 0E33                                     i2u336_40 51FC  
                                   i2u192_40 52A2                                     i2u336_41 51F8  
                                   i2u192_41 529E                                     i2u337_40 53EE  
                                   i2u193_40 52B8                                     i2u361_40 4E90  
                                   i2u337_41 53E8                                     i2u193_41 52B4  
                                   i2u361_41 4E8C                                     i2u338_40 53F0  
                                   i2u258_40 4F7C                                     i2u362_40 4EAC  
                                   i2u258_41 4F78                                     i2u362_41 4EA8  
                                   i2u259_40 4F9A                                     i2u363_40 4EC2  
                                   i2u259_41 4F96                                     i2u363_41 4EBE  
                                   i2u364_40 4EDE                                     i2u364_41 4EDA  
                                   _PIR4bits 0E37                                     i2u646_47 4D06  
                            ?_putCharToRxBuf 0001                             ?_initDCmotorsPWM 0012  
                fullSpeedAhead@straightSpeed 0029          __end_of_color_clear_init_interrupts 4C9E  
             ?i2_color_clear_init_interrupts 0001                  _color_clear_init_interrupts 4BF8  
                                   _SSP2CON2 0EDA                                     _SSP2STAT 0ED8  
                               move@turnRamp 00AF                                   _ADCON0bits 0F60  
                  __end_of_I2C_2_Master_Idle 5292                        color_calibration@RGBC 00B4  
                  __end_of_I2C_2_Master_Init 5242                    __end_of_I2C_2_Master_Read 5126  
                          ___wmul@multiplier 0012                    __end_of_I2C_2_Master_Stop 5434  
   color_clear_init_interrupts@low_threshold 0022   i2color_clear_init_interrupts@low_threshold 000B  
                               setMotorPWM@m 001F                  I2C_2_Master_Write@data_byte 0013  
                      color_calibration@blue 00BC                           returnHome@turnRamp 0043  
                                  main@color 0290                        color_calibration@pink 00C0  
                                  main@green 01AE                                    main@white 01D2  
                                 ?_rgb_2_hsv 002C                                 _TxBufReadCnt 004A  
                   i2color_writetoaddr@value 0003                                    _turnRight 431A  
                  returnHome@reverseDuration 003E                                 ??_color_read 0018  
                          ___lmul@multiplier 0012                                    copy_data0 5054  
                             ?_isDataInTxBuf 0001                __end_of_I2C_2_Master_RepStart 5448  
                          ?_reverseOneSquare 0025                          __end_of_setMotorPWM 483A  
                               ??_initUSART4 0012                         i2_I2C_2_Master_Start 5452  
            reverseOneSquare@reverseDuration 002A                         i2_I2C_2_Master_Write 5414  
                         ??_reverseOneSquare 002D                                     __Hrparam 0000  
                                 _ADC_getval 53C2                             main@testSequence 00D6  
                                   __Lrparam 0000                                 wallAdjust@mL 0025  
                               wallAdjust@mR 0027                                ??_white_Light 0012  
                __end_ofi2_I2C_2_Master_Idle 52BA                  __end_ofi2_I2C_2_Master_Stop 5452  
                           lostReturnHome@mL 0034                             lostReturnHome@mR 0036  
                         __end_of_color_read 413C                                   _ANSELBbits 0E9A  
                                 _ANSELDbits 0EA7                                   _ANSELFbits 0EB4  
                                 _T0CON0bits 0FD5                                   _T0CON1bits 0FD6  
                          _color_calibration 23C4                reverseOneSquare@straightSpeed 0029  
                            ___lwdiv@divisor 001A                       returnHome@moveSequence 0038  
                         __end_of_initUSART4 53A8                              ___lwdiv@counter 001C  
                          turnRight@turnRamp 002B                                   ?_turnRight 0025  
                                   __ptext10 4A4E                                     __ptext11 538A  
                                   __ptext20 2E6E                                     __ptext12 4DE8  
                                   __ptext21 5194                                     __ptext13 371C  
                                   __ptext30 543E                                     __ptext22 51C0  
                                   __ptext14 5126                                     __ptext31 50E4  
                                   __ptext23 4FD6                                     __ptext15 4BF8  
                                   __ptext40 4B34                                     __ptext32 526A  
                                   __ptext24 4D44                                     __ptext16 532A  
                                   __ptext41 53A8                                     __ptext33 3AC4  
                                   __ptext25 483A                                     __ptext17 5218  
                                   __ptext50 5414                                     __ptext42 53C2  
                                   __ptext34 431A                                     __ptext26 3F4E  
                                   __ptext18 23C4                                     __ptext51 5448  
                                   __ptext43 534A                                     __ptext35 44F4  
                                   __ptext27 5408                                     __ptext19 5306  
                                   __ptext52 5452                                     __ptext44 53F2  
                                   __ptext36 46CE                                     __ptext28 542A  
                                   __ptext53 5292                                     __ptext45 515E  
                                   __ptext37 52BA                                     __ptext29 5434  
                                   __ptext54 4F62                                     __ptext38 4EEE  
                                   __ptext55 52E0                                     __ptext39 5096  
                                   __ptext56 53DA                                     __ptext48 4C9E  
                                   __ptext57 51EC                                     __ptext49 536A  
                                  move@color 00A3                           ?_color_calibration 00B4  
                              ?_batteryLevel 0001                                 _SSP2CON1bits 0ED9  
                               _SSP2CON2bits 0EDA                                reverseShort@i 002F  
                           turnLeft@turnRamp 002B                        reverseShort@cur_power 0031  
                                 turnLeft@mL 0025                                   turnLeft@mR 0027  
                        ??_color_calibration 0042                        ?i2_I2C_2_Master_Start 0001  
                               ??_wallAdjust 002B                             move@straightRamp 00AC  
                      ?i2_I2C_2_Master_Write 0001                             move@straightTime 00A6  
                          returnHome@curMove 003C                                 ??_resetTimer 0012  
                                 turnRight@i 002F                                     isa$xinst 0000  
                                 _RC4STAbits 0EE7                                     main@RGBC 029A  
                                   int$flags 004E                         color_calibration@HSV 00B6  
                               ?_calibration 0033                                     main@blue 01B4  
                       color_calibration@red 00B8                                 ??_returnHome 0044  
                                   main@pink 01C0                                     main@wall 01A2  
                                   _turnLeft 44F4                      fullSpeedAhead@cur_power 0030  
                        __end_of_white_Light 532A                    __end_of_color_calibration 2980  
                                 _INTCONbits 0FF2                                 _reverseShort 3D5E  
                  reverseOneSquare@cur_power 0032                                  ??_rgb_2_hsv 0036  
                         __end_of_wallAdjust 371C                           reverseOneSquare@mL 0025  
                         reverseOneSquare@mR 0027                           __end_of_resetTimer 542A  
                           move@turnDuration 00AE                               ??_batteryLevel 001A  
                                _setMotorPWM 46CE                            ??_get16bitTMR0val 0014  
                            ??_isDataInTxBuf 0001                                     intlevel1 0000  
                                   intlevel2 0000                             ___lldiv@dividend 001E  
                           ??_fullSpeedAhead 002B                           __end_of_returnHome 1D18  
                                  turnLeft@i 002F                                  ?_ADC_getval 0001  
                          main@straightSpeed 028F                             _color_click_init 5126  
                      color_detect@lightblue 00C8                                   _SSP2DATPPS 0E1D  
                           ___lldiv@quotient 0026                                   _SSP2CLKPPS 0E1C  
                               ___aldiv@sign 0027                                  ??_turnRight 002C  
                           main@straightRamp 0292                             main@straightTime 0128  
                                 _TX4STAbits 0EE8                       ??i2_I2C_2_Master_Start 0002  
                     ??i2_I2C_2_Master_Write 0002                             ??_putCharToRxBuf 0001  
                               returnHome@mL 0034                                 returnHome@mR 0036  
